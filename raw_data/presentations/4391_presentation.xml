<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Traffic Engineering With Traffic Engineering With Traditional IP Routing Traditional IP Routing</p>
    <p>ProtocolsProtocols</p>
    <p>B. Fortz, J. Rexford, and M. ThorupB. Fortz, J. Rexford, and M. Thorup</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>IP network operations  Motivation and examples  Measure, model, and control</p>
    <p>Traffic engineering  Background on IP routing  Measuring traffic and topology  Modeling intradomain routing  Optimization of routing weights</p>
    <p>Conclusions and ongoing work</p>
  </div>
  <div class="page">
    <p>IP Network Operations</p>
    <p>Dont IP networks manage themselves?  TCP adapts sending rate to network congestion  Routing protocols adapt to changes in topology</p>
    <p>not if we want to network to run well  Adjust the routing of traffic to the prevailing load  Ensure the network can accommodate failures  Plan the outlay of new routers and links over time</p>
    <p>The driving goals  Good end-to-end performance for users  Efficient use of the network resources  Reliable system even in the presence of failures</p>
  </div>
  <div class="page">
    <p>Our Approach: Measure, Model, and Control</p>
    <p>Topology/ Configuratio</p>
    <p>n</p>
    <p>Offered traffic</p>
    <p>Changes to the network</p>
    <p>Operational network</p>
    <p>Network-wide what if</p>
    <p>model</p>
    <p>measure</p>
    <p>control</p>
  </div>
  <div class="page">
    <p>Key Ingredients of Our Approach</p>
    <p>Instrumentation  Offered load: widely deployed traffic</p>
    <p>measurement  Topology: monitoring of the routing protocols</p>
    <p>Network-wide models  Representations of traffic and topology  What-if models of resource allocation policies</p>
    <p>Network optimization  Efficient algorithms to find good configurations  Operational experience to identify key constraints</p>
    <p>Example: traffic engineering by tuning routing protocols</p>
  </div>
  <div class="page">
    <p>Interdomain Routing (Between ASes)</p>
    <p>Internet consists of ~12,000 Autonomous Systems</p>
    <p>ASes exchange info about who they can reach</p>
    <p>Local policies for selecting and propagating routes</p>
    <p>Policies configured by the ASs network operators</p>
    <p>I can reach 12.34.158.0/23</p>
    <p>I can reach 12.34.158.0/23 via AS 1</p>
    <p>flow of traffic</p>
    <p>AS = Autonomous System</p>
  </div>
  <div class="page">
    <p>Interior Gateway Protocol (Within an AS)</p>
    <p>Routers flood information to learn the topology</p>
    <p>Routers determine next hop to reach other routers</p>
    <p>Path selection based on link weights (shortest path)</p>
    <p>Link weights configured by the network operator</p>
  </div>
  <div class="page">
    <p>Traffic Engineering in an ISP Backbone</p>
    <p>Network topology  Connectivity and capacity of routers and links</p>
    <p>Configurable policies for resource allocation  Interdomain policies and intradomain weights</p>
    <p>Traffic demands  Expected load between points in the network</p>
    <p>Performance objective  Balanced load, low delay, service level</p>
    <p>agreements</p>
    <p>Question: Given the topology and traffic, which routing configuration should be used?</p>
  </div>
  <div class="page">
    <p>Topology/Routing</p>
    <p>Router configuration files  Daily snapshot of network assets &amp; configuration  Software to parse the router config commands  Network-wide view of topology &amp; routing policies  Also useful for detecting configuration mistakes</p>
    <p>Routing monitors  Online monitoring of routing protocol messages  Real-time view of routes via neighboring ASes  Real-time view of paths within the AS  Software for aggregating and querying the data  Also useful for detecting and diagnosing</p>
    <p>anomalies</p>
  </div>
  <div class="page">
    <p>Offered Traffic</p>
    <p>Flow-level measurement (Cisco Netflow)  Measurements at the level of TCP/UDP flows  Addresses, port #s, #bytes/packets, start/finish  Collected on links connecting AT&amp;T to its peers</p>
    <p>Collection of the measurement data  Distributed set of collection servers in the</p>
    <p>network  Software for online aggregation of the data  Computation of a traffic matrix for the network</p>
    <p>ingress egress</p>
  </div>
  <div class="page">
    <p>Network Model</p>
    <p>Data model  Physical level, IP level, router-complex level  Traffic demands, router attributes, link attributes</p>
    <p>Routing model  Shortest-path routing, with tie-breaking  Multi-homed customers, inter-domain routing  Book-keeping to accumulate load on each link</p>
    <p>Visualization environment  Coloring/sizing to illustrate link and node statistics  Querying to show statistics for links and nodes  What-if experiments with routing configurations</p>
  </div>
  <div class="page">
    <p>Example: Traffic Flow Through Backbone</p>
    <p>Color/size of node: proportional to traffic to this router (high to low) Color/size of link: proportional to traffic carried (high to low)</p>
    <p>Source node: public peering link in New York Destination nodes: AT&amp;T access routers</p>
  </div>
  <div class="page">
    <p>Network Optimization: The Problem</p>
    <p>Intradomain traffic engineering  Predict influence of weight changes on traffic flow  Minimize objective function (say, of link utilization)</p>
    <p>Inputs  Networks topology: capacitated, directed graph  Routing configuration: routing weight for each link  Traffic matrix: offered load each pair of nodes</p>
    <p>Outputs  Shortest path(s) for each node pair  Volume of traffic on each link in the graph  Value of the objective function</p>
  </div>
  <div class="page">
    <p>Network Optimization: Our Approach</p>
    <p>Local search  Generate a candidate setting of the weights  Predict the resulting load on the network links  Compute the value of the objective function  Repeat, and select solution with lowest objective</p>
    <p>function  Computation</p>
    <p>Explore the neighborhood around good solutions  Exploit efficient incremental graph algorithms</p>
    <p>Performance results on AT&amp;Ts network  Much better than simple heuristics</p>
    <p>weights inversely proportional to capacity  Weights proportional to physical distance</p>
    <p>Competitive with multi-commodity flow solution  Optimal routing possible with more flexible routing protocols</p>
  </div>
  <div class="page">
    <p>Network Optimizations: Operational Realities</p>
    <p>Minimize changes to the network  Changing just one or two link weights is often enough</p>
    <p>Tolerate failure of network equipment  Weights settings usually remain good after failure   or can be fixed by changing one or two weights</p>
    <p>Limit the number of distinct weight values  Small number of integer values is sufficient</p>
    <p>Limit dependence on accuracy of traffic matrix  Good weights remain good after introducing random</p>
    <p>noise</p>
    <p>Limit frequency of changes to the weights  Joint optimization for day and night traffic matrices</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Our approach  Measure: network-wide view of traffic and routing  Model: data representations and what-if tools  Control: intelligent changes to operational network</p>
    <p>Other applications  Visualization of traffic, performance, and reliability  Capacity planning to place new routers and links  Estimating impact of new customers on network  Evaluating the effects of router and link failures  Comparing benefits of different routing protocols</p>
  </div>
  <div class="page">
    <p>To Learn More</p>
    <p>Overview papers  Traffic engineering for IP networks</p>
    <p>(http://www.research.att.com/~jrex/papers/ieeenet00.ps)  Traffic engineering with traditional IP routing protocols</p>
    <p>(http://www.research.att.com/~jrex/papers/ieeecomm02.ps)</p>
    <p>Traffic measurement  &quot;Measurement and analysis of IP network usage and behavior</p>
    <p>(http://www.research.att.com/~jrex/papers/ieeecomm00.ps)  Deriving traffic demands for operational IP networks</p>
    <p>(http://www.research.att.com/~jrex/papers/ton01.ps)</p>
    <p>Topology and configuration  IP network configuration for intradomain traffic engineering</p>
    <p>(http://www.research.att.com/~jrex/papers/ieeenet01.ps)  An OSPF topology server: Design and evaluation</p>
    <p>(http://www.cse.ucsc.edu/~aman/jsac01-paper.pdf)</p>
    <p>Intradomain route optimization  Internet traffic engineering by optimizing OSPF weights</p>
    <p>(http://www.ieee-infocom.org/2000/papers/165.ps)  Optimizing OSPF/IS-IS weights in a changing world</p>
    <p>(http://www.research.att.com/~mthorup/PAPERS/change_ospf.ps)</p>
  </div>
</Presentation>
