<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>CAnt Touch This Software-only Mitigation against Rowhammer Attacks</p>
    <p>targeting Kernel Memory</p>
    <p>Ferdinand Brasser David Gens</p>
    <p>Christopher Liebchen Ahmad-Reza Sadeghi Lucas Davi</p>
    <p>University of Duisburg-Essen Intel Collaborative Research Institute for Secure Computing</p>
    <p>Technische Universitt Darmstadt</p>
  </div>
  <div class="page">
    <p>Big Picture: Rowhammer Attacks</p>
    <p>Software</p>
  </div>
  <div class="page">
    <p>Big Picture: Rowhammer Attacks</p>
    <p>Software</p>
  </div>
  <div class="page">
    <p>Big Picture: Rowhammer Attacks</p>
    <p>Software</p>
  </div>
  <div class="page">
    <p>Big Picture: Rowhammer Attacks</p>
    <p>Access Control</p>
    <p>Software</p>
  </div>
  <div class="page">
    <p>Big Picture: Rowhammer Attacks</p>
    <p>Access Control</p>
    <p>Software</p>
  </div>
  <div class="page">
    <p>Big Picture: Rowhammer Attacks</p>
    <p>Access Control</p>
    <p>Software</p>
  </div>
  <div class="page">
    <p>Big Picture: Rowhammer Attacks</p>
    <p>Software</p>
  </div>
  <div class="page">
    <p>Access Control</p>
    <p>Software</p>
    <p>Spatial Isolation</p>
    <p>Big Picture: Our Approach</p>
  </div>
  <div class="page">
    <p>Software</p>
    <p>Spatial Isolation</p>
    <p>Access Control</p>
    <p>Big Picture: Our Approach</p>
  </div>
  <div class="page">
    <p>Software</p>
    <p>Spatial Isolation</p>
    <p>CAnt Touch This1</p>
    <p>Big Picture: Our Approach</p>
    <p>Access Control</p>
  </div>
  <div class="page">
    <p>Dynamic Random Access Memory (DRAM)</p>
    <p>Chip (contains Banks)RankDIMM*</p>
    <p>*) Dual Inline Memory Module</p>
  </div>
  <div class="page">
    <p>Capacitor</p>
    <p>Transistor</p>
    <p>Select</p>
    <p>Data</p>
    <p>Memory Cell Read Bit</p>
    <p>DRAM: Storing a Single Bit</p>
  </div>
  <div class="page">
    <p>Capacitor</p>
    <p>Transistor</p>
    <p>Select</p>
    <p>Data</p>
    <p>Memory Cell Read Bit</p>
    <p>DRAM: Storing a Single Bit</p>
  </div>
  <div class="page">
    <p>Capacitor</p>
    <p>Transistor</p>
    <p>Select</p>
    <p>Data</p>
    <p>Memory Cell Read Bit</p>
    <p>DRAM: Storing a Single Bit</p>
  </div>
  <div class="page">
    <p>Capacitor</p>
    <p>Transistor</p>
    <p>Select</p>
    <p>Data</p>
    <p>Memory Cell Read Bit</p>
    <p>DRAM: Storing a Single Bit</p>
  </div>
  <div class="page">
    <p>Row Buffer:</p>
    <p>Memory CellRow 1:</p>
    <p>Row 2:</p>
    <p>Row 3:</p>
    <p>Row 4:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 1</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 2</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 3</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 4</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 5</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 6</p>
    <p>:</p>
    <p>DRAM: Organization inside a Bank</p>
  </div>
  <div class="page">
    <p>Row Buffer:</p>
    <p>Row 1:</p>
    <p>Row 2:</p>
    <p>Row 3:</p>
    <p>Row 4:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 1</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 2</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 3</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 4</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 5</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 6</p>
    <p>:</p>
    <p>DRAM: Read Access</p>
  </div>
  <div class="page">
    <p>Row Buffer:</p>
    <p>Row 1:</p>
    <p>Row 2:</p>
    <p>Row 3:</p>
    <p>Row 4:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 1</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 2</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 3</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 4</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 5</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 6</p>
    <p>:</p>
    <p>High voltage on access</p>
    <p>DRAM: Read Access</p>
  </div>
  <div class="page">
    <p>Row Buffer:</p>
    <p>Row 1:</p>
    <p>Row 2:</p>
    <p>Row 3:</p>
    <p>Row 4:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 1</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 2</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 3</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 4</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 5</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 6</p>
    <p>:</p>
    <p>High voltage on access</p>
    <p>DRAM: Read Access</p>
  </div>
  <div class="page">
    <p>Row Buffer: 1 0 1 1 0 0</p>
    <p>Row 1:</p>
    <p>Row 2:</p>
    <p>Row 3:</p>
    <p>Row 4:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 1</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 2</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 3</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 4</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 5</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 6</p>
    <p>:</p>
    <p>High voltage on access</p>
    <p>DRAM: Read Access</p>
  </div>
  <div class="page">
    <p>Row Buffer: 1 0 1 1 0 0</p>
    <p>Row 1:</p>
    <p>Row 2:</p>
    <p>Row 3:</p>
    <p>Row 4:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 1</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 2</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 3</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 4</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 5</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 6</p>
    <p>:</p>
    <p>High voltage on access</p>
    <p>DRAM: Read Access</p>
  </div>
  <div class="page">
    <p>Row Buffer: 1 0 1 1 0 0</p>
    <p>Row 1:</p>
    <p>Row 2:</p>
    <p>Row 3:</p>
    <p>Row 4:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 1</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 2</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 3</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 4</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 5</p>
    <p>:</p>
    <p>C o</p>
    <p>lu m</p>
    <p>n 6</p>
    <p>:</p>
    <p>High voltage on access</p>
    <p>R e</p>
    <p>fr e</p>
    <p>sh</p>
    <p>(w ri</p>
    <p>te -b</p>
    <p>a ck</p>
    <p>)</p>
    <p>DRAM: Read Access</p>
  </div>
  <div class="page">
    <p>How Reliable is DRAM hardware?  Testing methodology introduced by Kim et al. [ISCA 2014]</p>
    <p>X and Y need to be on the same bank but in different rows; general pattern: Y = X + 8MB</p>
    <p>&lt;test-rows&gt;: mov eax, (X) mov ebx, (Y) clflush (X) clflush (Y) jmp test-rows</p>
    <p>Read from Memory at position X and store in EAX</p>
    <p>Read from Memory at position Y and store in EBX</p>
    <p>Evict X and Y from the cache</p>
    <p>Repeat procedure (lots of times)</p>
  </div>
  <div class="page">
    <p>Single-Sided Rowhammer</p>
    <p>Row Buffer: 1 0 1 0 1 0</p>
    <p>Victim Row 4:</p>
    <p>Row 5:</p>
    <p>Victim Row 6:</p>
    <p>Aggressor Y Row 7:</p>
    <p>Row 1:</p>
    <p>Victim Row 2:</p>
    <p>Aggressor X Row 3:</p>
    <p>Repeatedly activating Row 3 and 7</p>
  </div>
  <div class="page">
    <p>Single-Sided Rowhammer</p>
    <p>Row Buffer: 1 0 1 0 1 0</p>
    <p>Victim Row 4:</p>
    <p>Row 5:</p>
    <p>Victim Row 6:</p>
    <p>Aggressor Y Row 7:</p>
    <p>Row 1:</p>
    <p>Victim Row 2:</p>
    <p>Aggressor X Row 3:</p>
    <p>Repeatedly activating Row 3 and 7</p>
  </div>
  <div class="page">
    <p>Many Bit Flips Observed</p>
    <p>Bit Flip 0 -&gt; 1 Bit Flip 1 -&gt; 0</p>
    <p>Sandy Bridge Ivy Bridge Haswell</p>
    <p>Source: Kim et al., ISCA 2014</p>
  </div>
  <div class="page">
    <p>Once its bad, it gets worse.</p>
  </div>
  <div class="page">
    <p>Double-Sided Rowhammer</p>
    <p>Row Buffer: 1 0 1 0 1 0</p>
    <p>Aggressor Y Row 4:</p>
    <p>Row 5:</p>
    <p>Row 6:</p>
    <p>Row 7:</p>
    <p>Row 1:</p>
    <p>Aggressor X Row 2:</p>
    <p>Victim Row 3: Repeatedly activating Row 2 and 4</p>
  </div>
  <div class="page">
    <p>Double-Sided Rowhammer</p>
    <p>Row Buffer: 1 0 1 0 1 0</p>
    <p>Aggressor Y Row 4:</p>
    <p>Row 5:</p>
    <p>Row 6:</p>
    <p>Row 7:</p>
    <p>Row 1:</p>
    <p>Aggressor X Row 2:</p>
    <p>Victim Row 3: Repeatedly activating Row 2 and 4</p>
  </div>
  <div class="page">
    <p>How Dangerous are Bit Flips?</p>
  </div>
  <div class="page">
    <p>Row hammer refresh command Intel Corporation (US Patent)</p>
    <p>Flipping Bits in Memory Kim et al. (ISCA)</p>
    <p>Exploiting the DRAM rowhammer bug Seaborn and Dullien (Black Hat US)</p>
    <p>Drammer van der Veen et al. (CCS)</p>
    <p>Rowhammer.js Gruss et al. (DIMVA)</p>
    <p>Improved Rowhammer Attacks Qiao and Seaborn (HOST)</p>
    <p>Flip Feng Shui Razavi et al. (USENIX Sec.)</p>
    <p>One Bit Flips, One Cloud Flops</p>
    <p>Xiao et al. (USENIX Sec.)</p>
    <p>Rowhammer Timeline and Attacks</p>
    <p>DRAM Errors in the Wild Schroeder et al. (SIGMETRIC) SELECTED</p>
  </div>
  <div class="page">
    <p>Related Work: First Defenses</p>
    <p>Increase Refresh Interval</p>
    <p>Probabilistic Adjacent Row Activation [Kim et al. ISCA 2014]</p>
    <p>ANVIL [Aweke et al. ASPLOS 2016]</p>
    <p>Prohibit CLFLUSH</p>
    <p>Ineffective [Qiao and Seaborn, HOST 2016]</p>
    <p>Ineffective [Aweke et al. ASPLOS 2016]</p>
    <p>Heuristic approach (overhead &amp; false positives)</p>
    <p>Modifies Hardware (costly &amp; legacy problem)</p>
    <p>Access Control</p>
    <p>Software</p>
  </div>
  <div class="page">
    <p>Reviewing Attacker Assumptions</p>
    <p>Access Control</p>
    <p>Software</p>
  </div>
  <div class="page">
    <p>Our Initial Approach:</p>
    <p>Blacklisting Deactivate Vulnerable Physical Memory</p>
  </div>
  <div class="page">
    <p>Initial Tests with Blacklisting</p>
    <p>Locate Vulnerable Memory</p>
    <p>Phy Addr 1</p>
    <p>Phy Addr 2</p>
    <p>Blacklist of vulnerable memory</p>
    <p>Physical Memory Kernel</p>
    <p>Modified Bootloader</p>
    <p>List of Available Memory</p>
    <p>Memory AllocatorX</p>
    <p>X X</p>
    <p>Offline Analysis</p>
    <p>For more details check our technical report at https://arxiv.org/abs/1611.08396</p>
  </div>
  <div class="page">
    <p>Problems of Blacklisting</p>
    <p>Coverage</p>
    <p>Progression of vulnerable cells over time</p>
    <p>Memory overhead for other systems than our test systems unclear</p>
    <p>https://arxiv.org/abs/1611.08396</p>
  </div>
  <div class="page">
    <p>Our Generic Approach:</p>
    <p>CATT Spatially Isolate Physical Memory</p>
    <p>in Software</p>
  </div>
  <div class="page">
    <p>CATT: Contributions and Challenges</p>
    <p>First defense that enables spatial memory isolation</p>
    <p>Defines and manages different security domains</p>
    <p>Prototype Implementation  CATT for the Linux kernel</p>
    <p>Tested using Real-World Setup</p>
    <p>Extensive Performance and Security Evaluation</p>
  </div>
  <div class="page">
    <p>CATT: Design Idea</p>
    <p>Separate security domains physically</p>
    <p>Physical Memory</p>
    <p>List of Available Memory</p>
    <p>Kernel</p>
    <p>CATT Memory Allocator</p>
    <p>Security Domain A Memory Handler</p>
    <p>(user-mode)</p>
    <p>Security Domain B Memory Handler</p>
    <p>(kernel-mode)</p>
  </div>
  <div class="page">
    <p>CATT: Design Idea</p>
    <p>Separate security domains physically</p>
    <p>Physical Memory</p>
    <p>List of Available Memory</p>
    <p>Kernel</p>
    <p>Security Domain Memory Tracking</p>
    <p>CATT Memory Allocator</p>
    <p>Security Domain A Memory Handler</p>
    <p>(user-mode)</p>
    <p>Security Domain B Memory Handler</p>
    <p>(kernel-mode)</p>
  </div>
  <div class="page">
    <p>CATT: Design Idea</p>
    <p>Separate security domains physically</p>
    <p>Physical Memory</p>
    <p>List of Available Memory</p>
    <p>Kernel</p>
    <p>Security Domain Memory Tracking</p>
    <p>CATT Memory Allocator</p>
    <p>Security Domain A Memory Handler</p>
    <p>(user-mode)</p>
    <p>Security Domain B Memory Handler</p>
    <p>(kernel-mode)</p>
  </div>
  <div class="page">
    <p>CATT: Design Idea</p>
    <p>Separate security domains physically</p>
    <p>Physical Memory</p>
    <p>List of Available Memory</p>
    <p>Kernel</p>
    <p>Security Domain Memory Tracking</p>
    <p>CATT Memory Allocator</p>
    <p>Security Domain A Memory Handler</p>
    <p>(user-mode)</p>
    <p>Security Domain B Memory Handler</p>
    <p>(kernel-mode)</p>
    <p>X</p>
  </div>
  <div class="page">
    <p>CATT: Design Idea</p>
    <p>Separate security domains physically  Attacker can still flip bits</p>
    <p>Physical Memory</p>
    <p>List of Available Memory</p>
    <p>Kernel</p>
    <p>Security Domain Memory Tracking</p>
    <p>CATT Memory Allocator</p>
    <p>Security Domain A Memory Handler</p>
    <p>(user-mode)</p>
    <p>Security Domain B Memory Handler</p>
    <p>(kernel-mode)</p>
    <p>X</p>
  </div>
  <div class="page">
    <p>CATT: Design Idea</p>
    <p>Separate security domains physically  Attacker can still flip bits</p>
    <p>But only within her security domain</p>
    <p>Physical Memory</p>
    <p>List of Available Memory</p>
    <p>Kernel</p>
    <p>Security Domain Memory Tracking</p>
    <p>CATT Memory Allocator</p>
    <p>Security Domain A Memory Handler</p>
    <p>(user-mode)</p>
    <p>Security Domain B Memory Handler</p>
    <p>(kernel-mode)</p>
    <p>X</p>
  </div>
  <div class="page">
    <p>CATT: DRAM-aware Memory Allocation</p>
    <p>Rowhammer exploits physical co-location</p>
    <p>Physical Address Space Physical Memory (DRAM)</p>
    <p>Page Frame</p>
    <p>Page Frame</p>
    <p>Page Frame</p>
    <p>Page Frame</p>
  </div>
  <div class="page">
    <p>CATT: DRAM-aware Memory Allocation</p>
    <p>Rowhammer exploits physical co-location</p>
    <p>Physical Address Space Physical Memory (DRAM)</p>
    <p>Page Frame</p>
    <p>Page Frame</p>
    <p>Page Frame</p>
    <p>Page Frame</p>
    <p>Physical to DRAM</p>
    <p>Mapping (Hash of</p>
    <p>the physical address)</p>
  </div>
  <div class="page">
    <p>CATT: DRAM-aware Memory Allocation</p>
    <p>Rowhammer exploits physical co-location</p>
    <p>If we know the mapping, we know where a Page Frame will be located in DRAM!</p>
    <p>Physical Address Space Physical Memory (DRAM)</p>
    <p>Page Frame</p>
    <p>Page Frame</p>
    <p>Page Frame</p>
    <p>Page Frame</p>
    <p>Physical to DRAM</p>
    <p>Mapping (Hash of</p>
    <p>the physical address)</p>
  </div>
  <div class="page">
    <p>CATT: Implementation</p>
    <p>Prototype for the Linux kernel</p>
    <p>Version 4.6</p>
    <p>Completely transparent to applications</p>
    <p>Modifies physical page allocator</p>
    <p>Associates page frames with security domain</p>
    <p>Adds kernel zone to buddy allocator</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>System Setup</p>
    <p>i7  Ivy Bridge 8GB DDR3</p>
    <p>i5  Sandy Bridge 8GB DDR3</p>
    <p>i5  Sandy Bridge (Mobile) 8GB DDR3</p>
    <p>S1 S2 S3</p>
  </div>
  <div class="page">
    <p>Security</p>
    <p>Tested blacklisting against previously compiled list of target rows</p>
    <p>Vulnerable rows are successfully blocked by the bootloader</p>
    <p>Tested CATT against existing Rowhammer kernel exploits [BH15 Seaborn and Dullien]</p>
    <p>Without our patch: success within minutes</p>
    <p>With our patch: ran 48+ hours without success</p>
  </div>
  <div class="page">
    <p>Performance</p>
    <p>SPEC CPU 2006: avg. -0.5% (max 0.29%)</p>
    <p>Phoronix: avg. 0.27% (max. 2.49%)</p>
    <p>LMBench: avg. 0.11% (max. 1.66%)</p>
    <p>Linux Test Project: same results as vanilla kernel (contains stress tests for scheduling, memory, and file accesses)</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Software vulnerabilities are still the predominant attack vector  Continuous arms race between attacks and defenses</p>
    <p>Hardware reliability issues lead to severe security consequences  Rowhammer corrupts memory without requiring software vulnerabilities</p>
    <p>Good news: Promising research results and insights  First software-only defenses against Rowhammer have been proposed to</p>
    <p>protect legacy systems</p>
  </div>
  <div class="page">
    <p>Questions?</p>
  </div>
</Presentation>
