<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Tangram: Bridging Immutable and Mutable Abstractions</p>
    <p>for Distributed Data Analytics Yuzhen Huang, Xiao Yan, Guanxian Jiang, Tatiana Jin,</p>
    <p>James Cheng, An Xu, Zhanhao Liu, and Shuo Tu,</p>
    <p>The Chinese University of Hong Kong</p>
  </div>
  <div class="page">
    <p>Distributed Data Analytics Systems</p>
    <p>Existing offline data analytics frameworks can be roughly classified into two categories according to their data abstractions</p>
    <p>- Immutable or mutable</p>
    <p>Immutable Mutable</p>
  </div>
  <div class="page">
    <p>Immutable and Mutable Abstractions</p>
    <p>Immutable Mutable</p>
    <p>+ Functional API + Fault tolerance + Load balancing</p>
    <p>+ Stateful representation + Iterative and</p>
    <p>asynchronous execution</p>
    <p>- Inefficient for stateful representation</p>
    <p>- Only support BSP</p>
    <p>- Fault tolerance - Load Balancing</p>
  </div>
  <div class="page">
    <p>Immutable and Mutable Abstractions</p>
    <p>Immutable Mutable</p>
    <p>+ Functional API + Fault tolerance + Load balancing</p>
    <p>+ Stateful representation + Iterative and</p>
    <p>asynchronous execution</p>
    <p>- Inefficient for stateful representation</p>
    <p>- Only support BSP</p>
    <p>- Fault tolerance - Load Balancing</p>
    <p>MapUpdate: Bridging immutable and mutable abstractions</p>
  </div>
  <div class="page">
    <p>MapUpdate</p>
    <p>A.map(B, map_func).update(C, update_func)</p>
    <p>- Expressive - Bulk processing, machine learning, graph analytics, etc.</p>
    <p>- Enjoys the benefits of both mutable and immutable abstractions</p>
    <p>- Determines whether a collection is mutable automatically - Supports iterative and asynchronous execution naturally - Applies different recovery strategies adaptively according to</p>
    <p>failure scenarios</p>
    <p>Map</p>
    <p>Update Iter: 100 Staleness: 2</p>
  </div>
  <div class="page">
    <p>Tangram</p>
    <p>A distributed system that implements MapUpdate</p>
    <p>- Local Task Management</p>
    <p>- Partition-based Progress Control</p>
    <p>- Context-Aware Failure Recovery</p>
    <p>Map</p>
    <p>Update</p>
    <p>Immutable Mutable</p>
    <p>MapUpdate Tangram</p>
    <p>Open source: https://github.com/Yuzhen11/tangram</p>
  </div>
</Presentation>
