<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Query Suggestion Using Hitting Time</p>
    <p>Qiaozhu Mei , Dengyong Zhou , Kenneth Church</p>
    <p>University of Illinois at Urbana-Champaign  Microsoft Research, Redmond</p>
  </div>
  <div class="page">
    <p>Motivating Examples</p>
    <p>MSG</p>
    <p>Query Suggestions: Accurate to express the information need;</p>
    <p>Easy to infer information need</p>
    <p>Sport s</p>
    <p>cente r</p>
    <p>Food Additiv</p>
    <p>e</p>
  </div>
  <div class="page">
    <p>Motivating Examples (Cont.)</p>
    <p>Welcome to the hotel california</p>
    <p>Suggestions</p>
    <p>hotel california</p>
    <p>eagles hotel california</p>
    <p>hotel california band</p>
    <p>hotel california by the eagles</p>
    <p>hotel california song</p>
    <p>lyrics of hotel california</p>
    <p>listen hotel california eagle</p>
  </div>
  <div class="page">
    <p>Motivating Examples: Personalization</p>
    <p>Mountain safety research</p>
    <p>Metropolis Street Racer</p>
    <p>Molten salt reactor Mars Sample Return</p>
    <p>Magnetic Stripe Reader</p>
    <p>MSR</p>
    <p>Actually Looking for Microsoft Research</p>
  </div>
  <div class="page">
    <p>Research Questions</p>
    <p>How can we generate query suggestions in a principled way?</p>
    <p>Can we generate personalized query suggestions using the same method?</p>
    <p>Can this method be generalized to other search related tasks?</p>
  </div>
  <div class="page">
    <p>Rest of This Talk</p>
    <p>Random Walk, Hitting Time, and Bipartite Graph</p>
    <p>Generating Query Suggestion</p>
    <p>Personalized Query Suggestion</p>
    <p>Experiments</p>
    <p>Discussion and Summary</p>
  </div>
  <div class="page">
    <p>Random Walk and Hitting Time</p>
    <p>i</p>
    <p>k</p>
    <p>A</p>
    <p>j P = 0.7</p>
    <p>P = 0.3</p>
    <p>Hitting Time  TA: the first time that the random</p>
    <p>walk is at a vertex in A</p>
    <p>Mean Hitting Time  hiA: expectation of TA given that</p>
    <p>the walk starts from vertex i</p>
  </div>
  <div class="page">
    <p>Computing Hitting Time</p>
    <p>i</p>
    <p>k A</p>
    <p>j</p>
    <p>TA: the first time that the random walk is at a vertex in A</p>
    <p>}0,:min{  tAXtT t A</p>
    <p>A ifor ,1)(  Vj</p>
    <p>A jhjip</p>
    <p>A ih</p>
    <p>A ifor ,0</p>
    <p>Iterative Computation</p>
    <p>hi A: expectation of TA given that the</p>
    <p>walk starting from vertex i</p>
    <p>A i</p>
    <p>h = 0</p>
    <p>hi A = 0.7 hj</p>
    <p>A + 0.3 hk A + 1</p>
    <p>Apparently, hi A = 0 for those</p>
  </div>
  <div class="page">
    <p>Bipartite Graph and Hitting Time</p>
    <p>Expected proximity of query i to the query A : hitting time of i  A, hi</p>
    <p>A</p>
    <p>Bipartite Graph: - Edges between V1 and V2 - No edge inside V1 or V2 - Edges are weighted - e.g., V1 = query; V2 = Url</p>
    <p>A</p>
    <p>i jw(i, j) = 3</p>
    <p>)73(</p>
    <p>id</p>
    <p>jiw jip</p>
    <p>A</p>
    <p>i j</p>
    <p>)13(</p>
    <p>jd</p>
    <p>jiw ijp</p>
    <p>A</p>
    <p>k</p>
    <p>i j</p>
    <p>2</p>
    <p>),(),( )(</p>
    <p>Vj ji d</p>
    <p>jkw</p>
    <p>d</p>
    <p>jiw kip</p>
    <p>convert to a directed graph, even collapse one group</p>
  </div>
  <div class="page">
    <p>Generate Query Suggestion</p>
    <p>T aa</p>
    <p>american airline</p>
    <p>mexiana</p>
    <p>www.aa.com</p>
    <p>www.theaa.com/travelwatch/ planner_main.jsp</p>
    <p>en.wikipedia.org/wiki/Mexicana</p>
    <p>Query Url  Construct a (kNN)</p>
    <p>subgraph from the query log data (of a predefined number of queries/urls)</p>
    <p>Compute transition probabilities p(i  j)</p>
    <p>Compute hitting time hi A</p>
    <p>Rank candidate queries using hi</p>
    <p>A</p>
  </div>
  <div class="page">
    <p>Intuition</p>
    <p>Why it works?  A url is close to a query if freq(q, url)</p>
    <p>dominates the number of clicks on this url (most people use q to access url)</p>
    <p>A query is close to the target query if it is close to many urls that are close to the target query</p>
  </div>
  <div class="page">
    <p>Personalized Query Suggestion</p>
    <p>Queries are ambiguous</p>
    <p>Different user  different information need  different query suggestions</p>
    <p>Simple approach: build the graph, compute hitting time solely based on the users history</p>
    <p>Data Sparseness  E.g., you cannot see a query if you never used it</p>
    <p>Alternative: modify the bipartite graph instead of rebuilding all</p>
  </div>
  <div class="page">
    <p>Personalize the Bipartite Graph</p>
    <p>T aa</p>
    <p>american airline</p>
    <p>alcoholics anonymous</p>
    <p>www.aa.com</p>
    <p>www.theaa.com/travelwatch/planner_main.jsp</p>
    <p>www.alcoholics-anonymous.org</p>
    <p>Query Url</p>
    <p>en.wikipedia.org/wiki/Alcoholics_Anonymous</p>
    <p>P aa + user</p>
    <p>pseudo query:</p>
    <p>Introduc e a</p>
    <p>pseudo (person alized query)</p>
    <p>Reweight edges using</p>
    <p>personaliz ed</p>
    <p>Probs.</p>
    <p>Key: How to compute  From w(url, user, query)  Sparse data!</p>
    <p>Compute a smoothed p(Url | User, Query)</p>
    <p>),|( QueryUserUrlp</p>
    <p>),|( UrlUserQueryp</p>
    <p>),|( QueryUserUrlp</p>
  </div>
  <div class="page">
    <p>Personalization with Backoff (Mei and Church 08)</p>
    <p>),|(</p>
    <p>),|(</p>
    <p>),|(</p>
    <p>),|(</p>
    <p>),|(),|(</p>
    <p>QIPUrlP</p>
    <p>QIPUrlP</p>
    <p>QIPUrlP</p>
    <p>QIPUrlP</p>
    <p>QIPUrlPQIPUrlP</p>
    <p>156.111.188.243</p>
    <p>*.*.*.*</p>
    <p>Full personalization: sparse data!</p>
    <p>No personalization: lose the</p>
    <p>opportunity</p>
    <p>Personalization with backoff:</p>
    <p>We dont have enough data for everyone! - Backoff to classes of users (e.g., IP)</p>
  </div>
  <div class="page">
    <p>Experiments</p>
    <p>Query Suggestion using Query Logs  commercial search engine log (1.5 year)  637 million queries; 585 million urls  Query-click bipartite graph</p>
    <p>Author/keyword suggestion using DBLP  titles and authors from DBLP  110k of papers, 580k authors  Coauthor graph, keyword graph, author-keyword</p>
    <p>bipartite graph</p>
    <p>Baselines: nearest neighbor; personalized pagerank 15</p>
  </div>
  <div class="page">
    <p>Result: Query Suggestion</p>
    <p>Hitting time</p>
    <p>wikipedia friends</p>
    <p>friends tv show wikipedia</p>
    <p>friends home page</p>
    <p>friends warner bros</p>
    <p>the friends series</p>
    <p>friends official site</p>
    <p>friends(1994)</p>
    <p>Google</p>
    <p>friendship</p>
    <p>friends poem</p>
    <p>friendster</p>
    <p>friends episode guide</p>
    <p>friends scripts</p>
    <p>how to make friends</p>
    <p>true friends</p>
    <p>Yahoo</p>
    <p>secret friends</p>
    <p>friends reunited</p>
    <p>hide friends</p>
    <p>hi 5 friends</p>
    <p>find friends</p>
    <p>poems for friends</p>
    <p>friends quotes</p>
    <p>Query = friends</p>
  </div>
  <div class="page">
    <p>Result: Query Suggestion (II)</p>
    <p>Yahoo</p>
    <p>aa route planner</p>
    <p>aa route finder</p>
    <p>aa airlines</p>
    <p>aa meetings</p>
    <p>aa autoroute</p>
    <p>aa road map</p>
    <p>Live</p>
    <p>aa route finder</p>
    <p>aa route planner</p>
    <p>aa airlines</p>
    <p>american airlines</p>
    <p>aa meeting</p>
    <p>aa road map</p>
    <p>Query = aa Hitting time</p>
    <p>alcoholics anonymous</p>
    <p>automobile association</p>
    <p>theaa</p>
    <p>american airlines</p>
    <p>american air</p>
    <p>american airline ticket reservation</p>
    <p>Hitting Time</p>
    <p>learning to rank</p>
    <p>ndcg measure ir</p>
    <p>ndcg</p>
    <p>lambdarank</p>
    <p>Chris burges</p>
    <p>pairwise test Query = ranknet</p>
  </div>
  <div class="page">
    <p>Results: Personalized Query Suggestion</p>
    <p>Query = msr</p>
    <p>No personalization</p>
    <p>mountian safety research</p>
    <p>msrcorp</p>
    <p>msr outdoor equipment</p>
    <p>msr camp stoves</p>
    <p>msr snowshoes</p>
    <p>msr racing</p>
    <p>Personalized</p>
    <p>Microsoft research</p>
    <p>research</p>
    <p>what is research</p>
    <p>research website</p>
    <p>microsoft research and development</p>
    <p>yahoo research labs</p>
  </div>
  <div class="page">
    <p>Result: Author Suggestion</p>
    <p>Query = Jon Kleinberg</p>
    <p>Hitting time</p>
    <p>Aleksandrs Slivkins</p>
    <p>Mark Sandler</p>
    <p>Tom Wexler</p>
    <p>Lars Backstrom</p>
    <p>Elliot Anshelevich</p>
    <p>Xiangyang Lan</p>
    <p>Nearest Neighbor;</p>
    <p>Prabhakar Raghavan</p>
    <p>Eva Tardos</p>
    <p>Daniel P. Huttenlocher</p>
    <p>David Kempe</p>
    <p>Amit Kumar</p>
    <p>Andrew Tomkins</p>
    <p>Favor students, especially</p>
    <p>current students</p>
    <p>(personalized Pagerank is similar)</p>
    <p>Famous research</p>
    <p>ers + former</p>
    <p>students</p>
  </div>
  <div class="page">
    <p>Query = olap</p>
    <p>Dimension updates</p>
    <p>OLAP data</p>
    <p>OLAP cubes</p>
    <p>OLAP queries</p>
    <p>View size</p>
    <p>Hierarchical cluster</p>
    <p>Result: Keyword Suggestion</p>
    <p>Query = social network</p>
    <p>Knowledge collaboration</p>
    <p>Community structure</p>
    <p>Resource organization</p>
    <p>Information kiosks</p>
    <p>Efficient searching</p>
    <p>Network extraction</p>
    <p>Query = pagerank</p>
    <p>Pagerank computation</p>
    <p>Ranking systems</p>
    <p>Pagerank approximation</p>
    <p>Incremental computations</p>
    <p>Web spam</p>
    <p>Iterative computation</p>
  </div>
  <div class="page">
    <p>Result: Keyword Suggestion for Author</p>
    <p>Baselines</p>
    <p>mining</p>
    <p>data</p>
    <p>frequent</p>
    <p>Efficient</p>
    <p>pattern</p>
    <p>data mining</p>
    <p>Baselines</p>
    <p>learning</p>
    <p>statistical</p>
    <p>kernel</p>
    <p>markov</p>
    <p>inference</p>
    <p>model</p>
    <p>Hitting Time</p>
    <p>large databases</p>
    <p>frequent pattern</p>
    <p>sequential pattern</p>
    <p>pattern mining</p>
    <p>frequent</p>
    <p>multi dimensional</p>
    <p>Query = Michael I. Jordan</p>
    <p>Query = Jiawei Han</p>
    <p>Hitting time</p>
    <p>Dirichlet process</p>
    <p>approximate inference</p>
    <p>dirichlet</p>
    <p>mean field</p>
    <p>supervised learning</p>
    <p>graphic models</p>
  </div>
  <div class="page">
    <p>Discussions</p>
    <p>Hitting time effectively boosts infrequent queries  Nearest Neighbor &amp; personalized pagerank favorites</p>
    <p>frequent queries</p>
    <p>Fast convergence: a few iterations and a subgraph gets most of the value</p>
    <p>No parameter to tune</p>
    <p>Can be generalized to many other tasks (on different graphs)</p>
  </div>
  <div class="page">
    <p>Ranking on Query log Graph and Search Tasks</p>
    <p>Query  Query: query suggestion</p>
    <p>Url  Url: finding related pages www.cs.jhu.edu/~brill</p>
    <p>&quot;research.microsoft.com/users/brill</p>
    <p>IP  IP: finding similar users</p>
    <p>Url  Query: Annotation, Summarization, ads term</p>
    <p>Query  Url: Search</p>
    <p>IP, Query  Url: Personalized Search</p>
    <p>IP, Query  Query: Personalized Query Suggestion</p>
    <p>Many other opportunities!</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Generate query suggestions using hitting time on query-click graph</p>
    <p>Personalized query suggestion</p>
    <p>Generalizable to other search tasks</p>
    <p>Future work:  Different types of graphs: e.g., query sessions</p>
    <p>Combine with other features</p>
    <p>Large scale evaluation</p>
  </div>
  <div class="page">
    <p>Thanks!</p>
  </div>
</Presentation>
