<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>FPGA Self-Repair FPGA Self-Repair using anusing an</p>
    <p>Organic Embedded System ArchitectureOrganic Embedded System Architecture Kening Zhang, Jaafar Alghazo and Ronald F. DeMara Kening Zhang, Jaafar Alghazo and Ronald F. DeMara</p>
    <p>University of Central FloridaUniversity of Central Florida</p>
    <p>Kening Zhang, Jaafar Alghazo and Ronald F. DeMara Kening Zhang, Jaafar Alghazo and Ronald F. DeMara</p>
    <p>University of Central FloridaUniversity of Central Florida</p>
  </div>
  <div class="page">
    <p>Reconfigurable Hardware with Self-Healing based on SRAM FPGA platform</p>
    <p>Organic Computing (OC) biologically-inspired computing with self-x properties</p>
    <p>Communication networks among</p>
    <p>autonomous systems</p>
    <p>Self-x Characteristics</p>
    <p>System Property</p>
    <p>Composed of large collection of</p>
    <p>autonomous systems</p>
    <p>Self-organization Self-configuration Self-optimization</p>
    <p>Autonomous system owned sensor and</p>
    <p>actuators</p>
    <p>Self-healing Self-protection Self-explaining</p>
    <p>Context-awareness Self-synchronization</p>
    <p>Technical Objective:</p>
    <p>OC Approach: addresses system controllability with increasing complexity</p>
    <p>Example Relevance: How to achieve sustainable presence in NASAs Moon, Mars &amp; Beyond objective???</p>
    <p>Reliability Availability Sustainability</p>
    <p>support long lifetime missions with multiple failure occurrences</p>
    <p>Research Focus:</p>
    <p>Sponsors: NASA: FPGA platform and Genetic Algorithm research DARPA: OC approach and SOAR Longevity Platform</p>
  </div>
  <div class="page">
    <p>Goal: Autonomous FPGA Refurbishment</p>
    <p>Redundancy</p>
    <p>increases with amount of spare capacity</p>
    <p>restricted at design-time</p>
    <p>based on time required to select spare resource</p>
    <p>determined by adequacy of spares available (?)</p>
    <p>yes</p>
    <p>Refurbishment</p>
    <p>weakly-related to number</p>
    <p>recovery capacity</p>
    <p>variable at recovery-time</p>
    <p>based on time required to find suitable recovery</p>
    <p>affected by multiple characteristics (+ or -)</p>
    <p>yes</p>
    <p>Overhead from Unutilized Spares weight, size, power</p>
    <p>Granularity of Fault Coverage resolution where fault handled</p>
    <p>Fault-Resolution Latency availability via downtime required to handle fault</p>
    <p>Quality of Repair likelihood and completeness</p>
    <p>Autonomous Operation fix without outside intervention</p>
    <p>increase availability without carrying pre-configured spares</p>
  </div>
  <div class="page">
    <p>Device Failure</p>
    <p>Duration:</p>
    <p>Target:</p>
    <p>Detection:</p>
    <p>Isolation:</p>
    <p>Diagnosis:</p>
    <p>Recovery:</p>
    <p>Transient: SEU Permanent: SEL, Oxide Breakdown, Electron Migration, LPD</p>
    <p>Scrubbing</p>
    <p>Device Configuration</p>
    <p>Approach: TMR BIST</p>
    <p>Processing Datapath</p>
    <p>Device Configuration</p>
    <p>Processing Datapath</p>
    <p>Evolutionary</p>
    <p>Bitwise Comparison</p>
    <p>Reload Bitstream / Invert Bit Value</p>
    <p>Ignore Discrepancy</p>
    <p>Majority Vote</p>
    <p>STARS</p>
    <p>Supplementary Testbench</p>
    <p>Cartesian Intersection</p>
    <p>Worst-case Clock Period</p>
    <p>Dilation</p>
    <p>Replicate in Spare Resource</p>
    <p>Characteristics</p>
    <p>Methods CED</p>
    <p>Duplex Output</p>
    <p>Comparison</p>
    <p>Fast Run-time Location</p>
    <p>Select Spare Resource</p>
    <p>Vigander</p>
    <p>Duplex/Triplex Output</p>
    <p>Comparison</p>
    <p>(not addressed)</p>
    <p>(not addressed)</p>
    <p>unnecessary Autonomous</p>
    <p>Supervisor (AS)</p>
    <p>Autonomous Element (AE)</p>
    <p>Population-based GA using</p>
    <p>Extrinsic Fitness Evaluation</p>
    <p>Evolutionary Algorithm using Intrinsic Fitness</p>
    <p>Evaluation</p>
    <p>Fault-Handling Techniques for SRAM-based FPGAs</p>
    <p>OC</p>
  </div>
  <div class="page">
    <p>Autonomous System-on-a-Chip (ASoC) Architecture</p>
    <p>Dual-layer ASoC proposed by Lipsa et al [Lipsa 05]  Functional Layer</p>
    <p>Functional Elements (FEs) e.g. CPU, RAM, Network interface  Autonomic Layer</p>
    <p>Autonomic Elements (AEs)  Monitor  Actuator  Communication interface</p>
    <p>Autonomic Supervisor (AS)</p>
    <p>UCF Approach for fault coverage Functional Layer &amp; Autonomic Layer  achieved by assessing consensus</p>
    <p>among elements 1. first to realize failure detection 2. consensus provides an organic method for fitness evaluation of competing alternatives during evolution providing a self-regulating approach to fault resolution</p>
  </div>
  <div class="page">
    <p>EHW Environments</p>
    <p>Evolvable Hardware (EHW) Environments enable experimental methods to research soft computing intelligent search techniques</p>
    <p>EHW operates by repetitive reprogramming of real-world physical devices using an iterative refinement process:</p>
    <p>Genetic</p>
    <p>Algorithm</p>
    <p>Hardware in the loop</p>
    <p>or Two</p>
    <p>modes</p>
    <p>of</p>
    <p>Evolvabl</p>
    <p>e</p>
    <p>Hardwar</p>
    <p>e</p>
    <p>Extrinsic Evolution</p>
    <p>Genetic</p>
    <p>Algorithm</p>
    <p>software model Done? Build it</p>
    <p>device design-time refinement</p>
    <p>Simulation in the loop</p>
    <p>Intrinsic Evolution</p>
    <p>device run-time refinement</p>
    <p>new approach to</p>
    <p>Autonomous Repair of failed devices</p>
    <p>Deep Space Satellite:  &gt;100 FPGAs onboard  hostile environment: radiation, thermal stress  How to achieve reliability to avoid mission failure???</p>
    <p>Applic ation</p>
  </div>
  <div class="page">
    <p>Genetic Algorithms (GAs)</p>
    <p>Mechanism coarsely modeled after neo-Darwinism (natural selection + genetics)</p>
    <p>selection of</p>
    <p>parents</p>
    <p>population of candidate solutions</p>
    <p>parents</p>
    <p>offspring</p>
    <p>crossover</p>
    <p>mutation</p>
    <p>evaluate fitness</p>
    <p>of individuals</p>
    <p>replacement</p>
    <p>start</p>
    <p>Fitness function</p>
    <p>Goal reached</p>
  </div>
  <div class="page">
    <p>Genetic Mechanisms</p>
    <p>Guided trial-and-error search techniques using principles of Darwinian evolution  iterative selection, survival of the fittest  genetic operators -- mutation, crossover,   implementor must define fitness function</p>
    <p>GAs frequently use strings of 1s and 0s to represent candidate solutions Genotype chromosomes of GA operation: if 100101 is better than 010001 it will have more chance to</p>
    <p>breed and influence future population</p>
    <p>Genotype changes during evolution must adhere to the Xilinx-defined format of bitstream</p>
    <p>To prevent undesirable conditions that may damage the FPGA such as a mutation which has two logic outputs tied together, a logical genotype is used for evolution and mapped to physical phenotype</p>
    <p>Logic # = functional logic index number for LUT Row/Column= physical location of LUT in FPGA</p>
    <p>Can invoke Elitism Operator (E=1, E=2 )  guarantees monotonically increasing fitness of best individual over all generations</p>
  </div>
  <div class="page">
    <p>Avnet FPGA Development Board</p>
    <p>PCI I nt er f ace</p>
    <p>Virtex-II Pro FPGA</p>
    <p>Off Chip RAM</p>
    <p>Control hosted on</p>
    <p>PC</p>
    <p>F P</p>
    <p>G A</p>
    <p>O u t</p>
    <p>p u</p>
    <p>t</p>
    <p>B i t f i l e</p>
    <p>I n p u t D a t a</p>
    <p>Loosely Coupled Solution on Xilinx Virtex II Pro &amp; Virtex 4</p>
    <p>The entire system operates on a The entire system operates on a 32-bit basis32-bit basis</p>
    <p>The The Virtex 2Pro/4Virtex 2Pro/4 is mounted on a is mounted on a development board which can then development board which can then</p>
    <p>be interfaced with a WorkStation be interfaced with a WorkStation running running XilinxXilinx EDK and ISE. EDK and ISE.</p>
  </div>
  <div class="page">
    <p>Organic Embedded System (OES) Architecture</p>
    <p>One Dimensional Column-oriented OES based on Xilinx Virtex II Pro FPGA platform</p>
    <p>FEs and AEs reside on two distinct layers with interconnection structure between them</p>
    <p>AEs and FEs can either be realized in hardware, software, or co-design</p>
    <p>AE layer supervises functionality of FE elements while requiring no application-specific algorithms on the AE layer</p>
    <p>Observer/Controller architecture includes an AS element which had no counterpart to evaluate if the AS fault-free, so address by minimizing its complexity in proposed approach</p>
    <p>utilize Xilinx partial reconfiguration technology to manipulate relocatable bitstreams</p>
  </div>
  <div class="page">
    <p>OES AE Component Design</p>
    <p>AEs decentralize Observer/Controller functionality:  Concurrent Error Detection (CED) unit collects 2 FE Outputs for</p>
    <p>discrepancy identification  A Checksum for AE fault detection which are checked against Stored</p>
    <p>Checksum values  Evaluator of outputs from 2 FEs against checksum and Actuator which</p>
    <p>initiates recovery phase  An important architectural property is that all AE components are identical</p>
    <p>in structure despite the fact that they monitor different types of FEs.  Homogeneous characteristics deliver a uniform-behavior property</p>
    <p>leveraged for consensus-based evaluation fault-handling methodology  OC Concept: although AE components add an additional complexity to the</p>
    <p>design, they will ease integration of fault-handling difficulties inherent with current commercial IP cores</p>
  </div>
  <div class="page">
    <p>Consensus-Based Evaluation (CBE)</p>
    <p>Uses a Relative Fitness MeasureUses a Relative Fitness Measure  Pairwise discrepancy checking yields relative fitness measurePairwise discrepancy checking yields relative fitness measure  Broad temporal consensus in the population used to determine Broad temporal consensus in the population used to determine</p>
    <p>fitness metricfitness metric  Transition between Transition between Fitness States Fitness States occurs in the populationoccurs in the population  Provides graceful degradation in presence of changing Provides graceful degradation in presence of changing</p>
    <p>environments, applications and inputs, since this is a moving environments, applications and inputs, since this is a moving measuremeasure</p>
    <p>Test Inputs = Normal Inputs for Data ThroughputTest Inputs = Normal Inputs for Data Throughput  CBE does not utilizes additional functional nor resource test CBE does not utilizes additional functional nor resource test</p>
    <p>vectorsvectors  Potential for higher availability as regeneration is integrated Potential for higher availability as regeneration is integrated</p>
    <p>with normal operationwith normal operation</p>
  </div>
  <div class="page">
    <p>Genetic Operators: Mutation</p>
    <p>Mutation: Genotype chromosomes</p>
    <p>Mutation: Phenotype chromosomes</p>
    <p>original functionality is F = F1(F3  F4) w/ input F2 unassigned by synthesis tool</p>
    <p>mutation operator will change input F4 to unused as F = F1(F3  F2)</p>
    <p>shadow shows changed input and LUT contents</p>
    <p>some opportunity for input stuck-at fault or LUT content stuck-at fault.</p>
    <p>functionalities of LUTs remain undistorted while search space explored</p>
    <p>Typical Approach: bit inversion of LUT functionality Selected Approach: input interconnection of LUTs mutated</p>
    <p>Rearrange input interconnection to search unused LUT resources which occlude faulty resource</p>
  </div>
  <div class="page">
    <p>Genetic Operators: Cell Swapping</p>
    <p>Cell-Swap operation on Genotype chromosomes</p>
    <p>Cell-Swap operation on Phenotype chromosomes</p>
    <p>interchanges two distinct LUT blocks while maintaining correct logic order and functionalities in genotype</p>
    <p>exchange all LUT input interconnections, LUT content and physical 2-tuple (Col#, Row#) as well as the logic sequence</p>
  </div>
  <div class="page">
    <p>Genetic Operators: PMX Operator</p>
    <p>Partial Match Crossover (PMX) maintains crossover information as well as order information</p>
    <p>two genotype configuration streams are aligned at LUT boundary  crossover site selected at random along LUT boundary  this crossover point defines a left/right partition used to affect crossover through LUT-by-LUT exchange  suppose crossover point at position 4 of the LUT vector:</p>
    <p>first step is to map configuration B to configuration A by exchanging the following aligned LUTs {(4,7),(5,2), (6,1),(7,5)}. Applying PMX results in two new configurations A and B</p>
  </div>
  <div class="page">
    <p>Illustrative Example: Gate Level Design of OES</p>
    <p>Experiment circuit: 1-bit Full-adder</p>
    <p>Fault-free model: Duplex  Fault-impact model: TMR  Fault-detect model: CBE  Fault recovery strategy: GA</p>
    <p>operation  Experimental setup:</p>
    <p>Hardware prototype implemented in Xilinx Virtex-II Pro FPGA</p>
    <p>VHDL implementation  Using the GNAT library along with</p>
    <p>the MRRA framework and JTAG reconfiguration interface.</p>
  </div>
  <div class="page">
    <p>MCNC-91 Benchmark Case Studies</p>
    <p>System Availability under Multiple Faults</p>
    <p>Circuit Name Circuit Function Inputs Outputs Approximate Gates</p>
    <p>z4ml 2-bit Add 7 4 20</p>
    <p>cm85a logic 11 3 38</p>
    <p>cm138a Logic 6 8 17</p>
    <p>Fc = number of correct behaviors of FE observed during evolutionary recovery phase Fe = number of errant or discrepant behaviors 1 = exactly one output required to detect the fault during the original CED</p>
    <p>configuration. 2 = number of the reconfigurations required, i.e. one from CED to TMR, and one back</p>
    <p>from TMR to CED Fc1 &amp; Fe1 = correct and faulty output number of the FE during the AE repair period Fc2 &amp; Fe2 = correct and faulty output number during the FE repair period n = number of reconfigurations of the FE  represents reconfiguration to computation time ratio</p>
  </div>
  <div class="page">
    <p>Experimental Results</p>
    <p>Redundancy for both FE (RFE) and AE (RAE) = ratio of unused LUT inputs to total number of LUTs inputs</p>
    <p>Fc = number of correct behaviors of FE observed during evolutionary recovery phase</p>
    <p>Fe = number of errant or discrepant behaviors</p>
    <p>n = number of reconfigurations of the FE</p>
    <p>represents reconfiguration to computation time ratio</p>
    <p>Fault Free arrangement: CED FEs with cold standby FE</p>
    <p>Inject a stuck-at-zero or stuck-atone fault at one of the FEs LUT input pins</p>
    <p>CED -&gt; TMR to identify faulty FE or AE</p>
    <p>CBE used to resolve faulty AE</p>
  </div>
  <div class="page">
    <p>Experimental Results</p>
    <p>Redundancy for both FE (RFE) and AE (RAE) = ratio of unused LUT inputs to total number of LUTs inputs</p>
    <p>Fc = number of correct behaviors of FE observed during evolutionary recovery phase</p>
    <p>Fe = number of errant or discrepant behaviors</p>
    <p>n = number of reconfigurations of the FE</p>
    <p>represents reconfiguration to computation time ratio</p>
    <p>Fault Free arrangement: CED FEs with cold standby FE</p>
    <p>Inject a stuck-at-zero or stuck-atone fault at one of the FEs LUT input pins</p>
    <p>CED -&gt; TMR to identify faulty FE or AE</p>
    <p>CBE used to resolve faulty AE</p>
  </div>
  <div class="page">
    <p>Experimental Results</p>
    <p>Redundancy for both FE (RFE) and AE (RAE) = ratio of unused LUT inputs to total number of LUTs inputs</p>
    <p>Fc = number of correct behaviors of FE observed during evolutionary recovery phase</p>
    <p>Fe = number of errant or discrepant behaviors</p>
    <p>n = number of reconfigurations of the FE</p>
    <p>represents reconfiguration to computation time ratio</p>
    <p>Fault Free arrangement: CED FEs with cold standby FE</p>
    <p>Inject a stuck-at-zero or stuck-atone fault at one of the FEs LUT input pins</p>
    <p>CED -&gt; TMR to identify faulty FE or AE</p>
    <p>CBE used to resolve faulty AE</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>A self-adaptation and self-healing OES architecture developed for autonomic operation without human intervention.</p>
    <p>The OES architecture is capable of handling many single fault scenarios and several multiple fault scenarios for small digital logic design.</p>
    <p>Experimental result support our design objectives during the repair phase averaged 75.05%, 82.21%, and 65.21% for the z4ml, cm85a, and cm138a circuits respectively under stated conditions.</p>
    <p>Reconfiguration time ratio () ratio is key factor limiting availability during AE repair</p>
    <p>Future work: evaluate extensions of the OES architecture addressing scalability of in terms of pipelined stages</p>
  </div>
  <div class="page">
    <p>Backup Slides</p>
    <p>On following pages</p>
  </div>
  <div class="page">
    <p>Isolation of a single faulty individual with 1-out-of-64 impact</p>
    <p>Outliers are identified after EW iterations have elapsed  Expected D.V. = (1/64)*600 = 9.375 from individual impacted by fault  Isolated faulty individuals DV differs from the average DV by 33 after 1 or more observation intervals of length</p>
    <p>EW</p>
    <p>instantaneous DV (point</p>
    <p>values) for a sample</p>
    <p>individual in population</p>
    <p>and</p>
    <p>population oracles (solid</p>
    <p>lines)</p>
    <p>Sliding Window</p>
  </div>
  <div class="page">
    <p>Future Work: Development Board to Self-Contained FPGA</p>
    <p>Year 1 Year 3Year 2</p>
    <p>CRR on a Chip (Xilinx Virtex-II Pro)</p>
    <p>Control via on-chip</p>
    <p>Power PC</p>
    <p>Reconfig</p>
    <p>C o n f i g</p>
    <p>D a t a</p>
    <p>Configurations in On Chip RAM Blocks</p>
    <p>Functional CLBs</p>
    <p>ICAP</p>
    <p>Bit file</p>
    <p>D a t a</p>
    <p>O u t p u t</p>
    <p>R e q u e s t</p>
    <p>Avnet FPGA Development Board</p>
    <p>PCI Interface</p>
    <p>Virtex-II Pro FPGA</p>
    <p>Off Chip RAM</p>
    <p>Control hosted on</p>
    <p>PC O u t p u t</p>
    <p>B i t f i l e</p>
    <p>I n p u t D a t a</p>
    <p>CRR on a Chip (Xilinx Virtex-II Pro)</p>
    <p>Device Fault</p>
    <p>Qualitative Analysis of CRR modelQualitative Analysis of CRR model  Number of iterations and completeness of regeneration repair  Percentage of time the device remains online despite physical resource</p>
    <p>fault (availability) Hardware Resource ManagementHardware Resource Management</p>
    <p>Optimization of hardware profile for Xilinx Virtex II Pro Field Testing on SRAM-based FPGA in a Cubesat missionField Testing on SRAM-based FPGA in a Cubesat mission</p>
  </div>
  <div class="page">
    <p>OES Integrated FE and AE Failure</p>
    <p>Detection Procedure</p>
    <p>System Initialization  FE Initialization step  Compute Checksum step</p>
    <p>FE Fault Detection/Recovery  AE-CED fault detection  FE fault-recovery</p>
    <p>AE fault detection Phase  A fault may exist in the CED, Actuator,</p>
    <p>or Evaluator,  A fault may exist in Check Sum</p>
    <p>component, or  A fault may exist in the Stored</p>
    <p>CheckSum-LUT.</p>
    <p>Runtime inputs to FE applied to both active instance under a CED strategy. After allowing for FE inputs propagation time through the AE, the</p>
    <p>expected output will be supplied to AE-CED for the fault detection. The output of the FE is then compared in the AE-CED module and any</p>
    <p>discrepancy between the two values will indicate that a fault has occurred either of one the FE or the AE-CED itself. Further detection will be required to</p>
    <p>distinguish which of the two is faulty. If the AE component is identified as innocent and</p>
    <p>then the fault must of occurred in this output will be discarded and control will branch to a fault</p>
    <p>identification phase which will wakeup the cold standby FE and construct a temporary TMR system</p>
    <p>which can articulate the faulty FE under the new supplied external input. Furthermore, as descrived</p>
    <p>in Section 3.3, the actuator will initiate a repair cycle which may require automatic evolutionary</p>
    <p>repair of the identified faulty FE which will be set as standby-under-repair and the AE-CED will return to receive the remaining two active FEs inputs. The decision-making procedure causes at least one</p>
    <p>throughput-delay penalty</p>
  </div>
  <div class="page">
    <p>Previous Work</p>
    <p>Detection Characteristics of FPGA Fault-Handling SchemesDetection Characteristics of FPGA Fault-Handling Schemes</p>
    <p>Strategy #1) Evolve redundancy into design before the anticipated failure or</p>
  </div>
  <div class="page">
    <p>Fault Recovery Characteristics of Selected ApproachesFault Recovery Characteristics of Selected Approaches</p>
    <p>Previous Work</p>
    <p>Strategy #2) Evolve recovery from specific failure after (and if) it occurs or</p>
  </div>
  <div class="page">
    <p>CRR Arrangement in SRAM FPGA</p>
    <p>Configurations in PopulationConfigurations in Population  C = CL CR</p>
    <p>CL = subset of left-half configurations  CR = subset of right-half configurations  |CL|=|CR |= |C|/2</p>
    <p>Discrepancy OperatorDiscrepancy Operator  Baseline Discrepancy Operator  is dyadic operator with binary output:</p>
    <p>Z(Ci) is FPGA data throughput output of configuration Ci</p>
    <p>Each half-configuration evaluates  using embedded checker (XNOR gate) within each individual</p>
    <p>Any fault in checker lowers that individuals fitness so that individual is no longer preferred and eventually undergoes repair</p>
    <p>Othewise</p>
    <p>CZCZ CC</p>
    <p>R i</p>
    <p>L iR</p>
    <p>i L i</p>
    <p>)()(</p>
    <p>Reconfiguration Algorithm</p>
    <p>`</p>
    <p>S R A M -bas ed F P G A</p>
    <p>L Half-Co nfig uration</p>
    <p>Discrepancy Check L Discrepancy Check R</p>
    <p>Function Logic L</p>
    <p>CONFIGURA TION BIT STREA M</p>
    <p>INPUT DA TA</p>
    <p>Function Logic R</p>
    <p>DATA OUTPUT</p>
    <p>F E</p>
    <p>E D</p>
    <p>B A</p>
    <p>C K</p>
    <p>R Half-Config uration</p>
    <p>CONTROL</p>
    <p>O F F -C</p>
    <p>H IP</p>
    <p>E E</p>
    <p>P R</p>
    <p>O M</p>
    <p>( N</p>
    <p>O T E : a n</p>
    <p>o n -v</p>
    <p>o la</p>
    <p>ti le</p>
    <p>m e m</p>
    <p>o ry</p>
    <p>i s a</p>
    <p>lr e a d y r</p>
    <p>e q u ir e d t o b</p>
    <p>o o t a n y S</p>
    <p>R A M</p>
    <p>F P G</p>
    <p>A f ro</p>
    <p>m c</p>
    <p>o ld</p>
    <p>s ta</p>
    <p>rt . .. t h is</p>
    <p>i s n</p>
    <p>o t a n a</p>
    <p>d d it io</p>
    <p>n a l c</p>
    <p>h ip</p>
    <p>)</p>
    <p>R ji</p>
    <p>L jii CEORC ,,j  =RS:</p>
    <p>(Hamming Distance)</p>
    <p>R ji</p>
    <p>L jii CEORC ,,j ^ =WTA:</p>
    <p>(Equivalence)</p>
  </div>
  <div class="page">
    <p>Terminology and Characteristics</p>
    <p>Pristine Pool: Pristine Pool: CP. For any CiC, is member of CP at generation G if and only if</p>
    <p>Suspect Pool:Suspect Pool: CS. For any CiC, is member of CS at generation G if and only if</p>
    <p>at least one of</p>
    <p>Under Repair Pool:Under Repair Pool: CU: For any CiC, is member of CU at generation G if and</p>
    <p>only if</p>
    <p>Refurbished Pool:Refurbished Pool: CR: after Genetic Operator applied, the new generated individual is member of CR at generation G if and only if</p>
    <p>G</p>
    <p>K</p>
    <p>R K</p>
    <p>L K CC</p>
    <p>)1(0 GKCC RK L K</p>
    <p>G</p>
    <p>K</p>
    <p>R K</p>
    <p>L K CC</p>
    <p>G</p>
    <p>K</p>
    <p>R K</p>
    <p>L K CC</p>
    <p>ED is Discrepancy CountDiscrepancy Count of Ci and E C is Correctness CountCorrectness Count of Ci</p>
    <p>Length of Evaluation Fitness Window:Length of Evaluation Fitness Window: W = ED+ EC</p>
    <p>Fitness Metric:Fitness Metric: f(Ci) =E C/ EW</p>
  </div>
  <div class="page">
    <p>e.g. size |P|/2 to designate physical FPGA left-half or right-half resource utilization</p>
    <p>bitwise agreement between each halfs output</p>
    <p>Four Fitness States defined for Configurations as {CP,CS,CU,CR} with transitions, respectively:</p>
    <p>Pristine Suspect Under Repair Refurbished</p>
    <p>Fitness Evaluation Window W determines comparison interval</p>
    <p>Operators only applied once then offspring returned to service without for concern about increasing fitness</p>
    <p>Sketch of CRR Approach Premise: Recovery Complexity &lt;&lt; Design Complexity</p>
    <p>fitness assessment viafitness assessment via</p>
    <p>pairwise discrepancypairwise discrepancy (temporal voting vs. (temporal voting vs.</p>
    <p>spatial voting)spatial voting)</p>
  </div>
  <div class="page">
    <p>States Transitions during lifetime of iStates Transitions during lifetime of ithth Half-Configuration Half-Configuration</p>
    <p>Configuration Health States</p>
    <p>pristine</p>
    <p>suspec t</p>
    <p>refurbished</p>
    <p>under repair</p>
    <p>partial repair</p>
    <p>L R</p>
    <p>L = R</p>
    <p>complete repair</p>
    <p>primordial</p>
    <p>L = R</p>
    <p>L R</p>
    <p>L R</p>
    <p>L = R</p>
    <p>L = R</p>
    <p>LR</p>
    <p>fi fOT :</p>
    <p>L = R</p>
    <p>: fi fOT</p>
    <p>fi &lt; fRT</p>
    <p>L R :</p>
    <p>fi &lt; fRT</p>
    <p>L R :</p>
    <p>integral w ith</p>
    <p>: fi fRT</p>
    <p>: fi &lt; fOT</p>
    <p>C O M P E T I T I O N</p>
    <p>C O M P E T I T I O N</p>
    <p>E V O L U T I O N</p>
  </div>
  <div class="page">
    <p>Procedural Flow under Competitive Runtime Reconfiguration</p>
    <p>Initialization Population partitioned into</p>
    <p>functionally-identical yet physically-distinct half-configurations</p>
    <p>Fitness Adjustment</p>
    <p>update fitness of only L and R based on detection results</p>
    <p>either L's or R's fitness &lt; Repair</p>
    <p>Threshold?</p>
    <p>Selection choose</p>
    <p>FPGA configuration(s) labeled L and R</p>
    <p>Detection apply functional inputs</p>
    <p>to compute FPGA outputs using L, R</p>
    <p>Adjust Controls detection mode, overlap interval, ...</p>
    <p>invoke</p>
    <p>Genetic Operators only once</p>
    <p>and only on L or R</p>
    <p>L=R</p>
    <p>L=R</p>
    <p>PRIMARY LOOP</p>
    <p>discrepancy free</p>
    <p>L, R results</p>
    <p>NO</p>
    <p>YES</p>
    <p>is</p>
    <p>Integrates all fault handling stages using EC strategyIntegrates all fault handling stages using EC strategy  Detects faults by the occurrence of discrepancy  Isolates faults by accumulation of discrepancies  Failure-specific refurbishment using Genetic Operators:</p>
    <p>Intra-Module-Crossover, Inter-Module-Crossover, Intra-Module-Mutation</p>
    <p>Realize online device refurbishmentRealize online device refurbishment  Refurbished online without additional function or resource test vectors  Repair during the normal data throughput process</p>
  </div>
  <div class="page">
    <p>Fitness Evaluation Window</p>
    <p>Fitness Evaluation WindowFitness Evaluation Window: W  denotes number of iterations used to evaluate fitness before the state of</p>
    <p>an individual is determined</p>
    <p>Determination ofDetermination of W for 3x3 multiplierfor 3x3 multiplier  6 input pins articulating 26=64 possible inputs  W should be selected so that all possible inputs appear  More formally,</p>
    <p>Let rand(X) return some xi  X at random</p>
    <p>Seek W : [  rand(X) ] = X with high probability i=1</p>
    <p>W</p>
    <p>..... 1</p>
    <p>m</p>
    <p>K</p>
    <p>m</p>
    <p>KK</p>
    <p>D KK</p>
    <p>P m</p>
    <p>K</p>
    <p>x K</p>
    <p>P K</p>
    <p>P K</p>
    <p>K P</p>
    <p>K</p>
    <p>K</p>
    <p>Kx K</p>
    <p>x K</p>
    <p>x K</p>
    <p>K x</p>
    <p>K</p>
    <p>K xK = distinct orderings of K inputs showing in D trials</p>
    <p>if D constant, can calculate Pk&gt;1 successively</p>
    <p>probability PK of K inputs showing after D trials is ratio of xK / K</p>
    <p>D</p>
  </div>
  <div class="page">
    <p>When K=64:</p>
    <p>W Determination</p>
  </div>
  <div class="page">
    <p>Integer Multiplier Case Study</p>
    <p>3bit x 3bit unsigned multiplier3bit x 3bit unsigned multiplier automated design:esign:  Building blocks</p>
    <p>Half-Adder: 18 templates created  Full-Adder: 24 templates  Parallel-And : 1 template created</p>
    <p>Randomly select templates for instantiation in modules</p>
    <p>GA operatorsGA operators External-Module-Crossover Internal-Module-Crossover Internal-Module-Mutation</p>
    <p>GA parametersGA parameters Population size : 20 individuals Crossover rate : 5% Mutation rate : up to 80% per bit</p>
    <p>Experimental EvaluationExperimental Evaluation Xilinx Virtex II Pro on Avnet PCI board</p>
    <p>Objective fitness function replaced by Objective fitness function replaced by the Consensus-based Evaluation the Consensus-based Evaluation Approach and Relative FitnessApproach and Relative Fitness</p>
    <p>Elimination of additional test vectorsElimination of additional test vectors  Temporal Assessment processTemporal Assessment process</p>
    <p>Experiments Demonstrate Experiments Demonstrate</p>
  </div>
  <div class="page">
    <p>Template Fault Coverage</p>
    <p>Half-Adder Template A</p>
    <p>Half-Adder Template B</p>
    <p>Template ATemplate A  Gate3 is an AND gate  Will lose correctness if a Stuck-At-Zero fault occurs in second</p>
    <p>input line of the Gate3, an AND gate</p>
    <p>Template BTemplate B  Gate3 is a NOT gate and only uses the first input line  Will work correctly even if second input line is stuck at Zero or</p>
    <p>One</p>
    <p>Half-Adder Template A</p>
  </div>
  <div class="page">
    <p>Regeneration PerformanceRegeneration Performance</p>
    <p>Difference (vs. Hamming Distance) Evaluation Window, Ew = 600 Suspect Threshold: S = 1-6/600=99% Repair Threshold: R = 1-4/600 = 99.3% Re-introduction rate: r = 0.1</p>
    <p>ParametersParameters:</p>
    <p>Repairs evolvedRepairs evolved in-situ, in real-time, without additional test in-situ, in real-time, without additional test vectors, vectors, while allowing device to remainwhile allowing device to remain partially online. partially online.</p>
  </div>
  <div class="page">
    <p>Isolation of a single faulty individual with 1-out-of-64 impact</p>
    <p>Outliers are identified after W iterations elapsed  E.V. = (1/64)*600 = 9.375 from minimum impact faulty individual  Isolated individuals f differs from the average DV by 33 after 1 or more observation intervals of length W</p>
  </div>
</Presentation>
