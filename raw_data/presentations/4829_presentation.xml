<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Gabriele DAngelo</p>
    <p>joint work with</p>
    <p>Luciano Bononi Michele Bracuto</p>
    <p>Lorenzo Donatiello</p>
    <p>University of Bologna Department of Computer Science</p>
    <p>WOMP 2006  Sorrento (NA)</p>
    <p>An Adaptive Load Balancing Middleware for Distributed Simulation</p>
  </div>
  <div class="page">
    <p>Presentation outline</p>
    <p>Basic assumptions and goals</p>
    <p>Parallel and Distributed Simulation (PADS) main problems</p>
    <p>A migration-based approach to improve the simulation speed</p>
    <p>The proposed adaptive load-balancing mechanism</p>
    <p>Testbed: Ad Hoc network model</p>
    <p>Execution architecture definition</p>
    <p>Simulation results: dynamic reallocation and simulation speed</p>
    <p>Conclusions and future work</p>
  </div>
  <div class="page">
    <p>Basic assumptions and goal</p>
    <p>The simulation is a useful technique to support the design and the</p>
    <p>performance evaluation of complex systems</p>
    <p>The systems now considered of interest are composed by many</p>
    <p>highly dynamic entities, with unpredictable communication</p>
    <p>patterns</p>
    <p>The simulation of such kind of systems is possible only</p>
    <p>aggregating together many execution units: Parallel And</p>
    <p>Distributed Simulation (PADS)</p>
    <p>Our goal is to increase the simulation speed, that is reduce the</p>
    <p>Wall Clock Time (WCT) required to complete the simulation runs</p>
  </div>
  <div class="page">
    <p>Parallel and Distributed Simulation (PADS)</p>
    <p>PROS:</p>
    <p>Clustering together many Physical Execution Units (PEUs) it</p>
    <p>is possible to reduce the WCT required to complete a</p>
    <p>simulation</p>
    <p>Aggregating resources (i.e. RAM) it is possible to represent</p>
    <p>very complex systems</p>
    <p>CONS:</p>
    <p>A distributed simulation requires a large amount of</p>
    <p>communication and synchronization to obtain correct</p>
    <p>results</p>
    <p>The simulation speed depends on may factors, in example:</p>
    <p>heterogeneous CPUs and resources, background load</p>
  </div>
  <div class="page">
    <p>The GAIA migration-based framework</p>
    <p>A distributed simulation can be seen as a set of Logical Processes</p>
    <p>(LPs). Each LP is run by a possibly different PEU and takes care to</p>
    <p>manage the evolution of a set of Simulated Model Entities (SMEs)</p>
    <p>What is a good scheme to allocate the SMEs on the LPs/PEUs?</p>
    <p>We have demonstrated that the static allocation schemes are</p>
    <p>in most cases sub-optimal, and that a migration-based</p>
    <p>approach of the simulated model entities (GAIA) can</p>
    <p>Reduce the amount of communication and synchronization,</p>
    <p>clustering together the highly interacting simulated entities</p>
    <p>within the same LP/PEU</p>
    <p>Reduce the WCT, therefore increase the simulation speed-up</p>
  </div>
  <div class="page">
    <p>PADS execution architectures</p>
    <p>Dedicated clusters composed by homogeneous units are costly</p>
    <p>and often underutilized</p>
    <p>For the same reason, shared clusters composed by available</p>
    <p>Commercial-Off-the-Shelf (COTS) hardware are preferable to</p>
    <p>dedicated systems</p>
    <p>The simulation performance is highly influenced by the CPU load in</p>
    <p>background</p>
    <p>In a shared cluster it is impossible to predict a good static</p>
    <p>allocation scheme for the simulated entities: the background load</p>
    <p>is unpredictable and the CPU can usually highly heterogeneous</p>
    <p>An adaptive load balancing mechanism could improve the</p>
    <p>resources utilization and therefore the simulation speed</p>
  </div>
  <div class="page">
    <p>The GAIA+ adaptive load balancing middleware</p>
    <p>GAIA+ is an evolution of the migration-based mechanism GAIA</p>
    <p>It is composed by two cooperative parts, both based on the</p>
    <p>reallocation of simulated entities:</p>
    <p>The heuristic migration policy: to adapt and reduce the</p>
    <p>communication and synchronization needs</p>
    <p>The heuristic load-balancing policy: the overloaded (and</p>
    <p>therefore slow) PEUs can migrate some of the managed</p>
    <p>model entities to unloaded PEUs</p>
    <p>The simulation is totally distributed and therefore there is no point</p>
    <p>of centralization. Slow and Fast are attributes that have to be</p>
    <p>observed locally, with only a partial knowledge of the whole</p>
    <p>system and influenced by the networks delays</p>
  </div>
  <div class="page">
    <p>Performance evaluation: Ad-Hoc wireless network model</p>
    <p>The GAIA mechanism outperforms the static distributed simulation</p>
    <p>approach. This performance evaluation will compare the GAIA and</p>
    <p>the GAIA+ mechanisms</p>
    <p>Ad-Hoc wireless network model definition:</p>
    <p>Mobility model:</p>
    <p>Random Waypoint Model (RWP)</p>
    <p>uncorrelated SMHs mobility</p>
    <p>Traffic model:</p>
    <p>ping messages (CBR) by every SMH to all neighbors within</p>
    <p>the wireless communication range (250 m)</p>
    <p>Propagation model</p>
    <p>open space (neighbor-SMHs within detection range)</p>
  </div>
  <div class="page">
    <p>Ad-Hoc network model characterization</p>
    <p>Computation and communication issues:</p>
    <p>The computation required for each SMH per time-step is in the</p>
    <p>order of O(#SMH^2): to determine the neighbor set</p>
    <p>The communication required among SMHs is in the order of</p>
    <p>O(K*#SMH) per time-step, with K defined as a constant value</p>
    <p>based on SMHs density (assumed as constant)</p>
  </div>
  <div class="page">
    <p>Testbed execution architecture</p>
    <p>Distributed simulation, execution architecture:</p>
    <p>and 4 GB RAM, Debian GNU/Linux OS with kernel version</p>
    <p>Debian GNU/Linux OS with kernel version 2.6.x</p>
    <p>PEUs are interconnected by a Gigabit Ethernet LAN</p>
    <p>Conservative time-stepped simulation: 2000 time-steps</p>
  </div>
  <div class="page">
    <p>Performance evaluation: three different scenarios</p>
    <p>The performance evaluation of the GAIA+ mechanism has involved</p>
    <p>three different scenarios:</p>
    <p>a) The CPU are considered as homogeneous: initially each PEU</p>
    <p>allocates the same number of SMHs</p>
    <p>b) The initial allocation is based on the nominal performance of</p>
    <p>the CPUs (as expressed in MHz)</p>
    <p>c) A synthetic background load (in form of a sinusoidal wave) is</p>
    <p>injected in part of the simulation cluster</p>
  </div>
  <div class="page">
    <p>Performance evaluation: Equal Distribution (scenario a)</p>
  </div>
  <div class="page">
    <p>Performance evaluation: MHz-based Distribution (scenario b)</p>
  </div>
  <div class="page">
    <p>Performance evaluation: Variable Background Load (scenario c)</p>
  </div>
  <div class="page">
    <p>Performance evaluation: Wall-Clock-Time (WCT)</p>
    <p>diff (%)GAIA+GAIAscenario</p>
    <p>WCT (seconds) to complete a simulation run of 1000 timesteps</p>
  </div>
  <div class="page">
    <p>Conclusions and future work</p>
    <p>The communication and the load balancing are two main</p>
    <p>problems of PADS, they should be managed together</p>
    <p>An approach based on the migration of simulated entities can:</p>
    <p>reduce the communication overhead of a distributed</p>
    <p>simulation, induce a good level of load balancing and therefore</p>
    <p>increase the simulation speed</p>
    <p>In many cases the very costly High-Performance-Computing (HPC)</p>
    <p>clusters can be replaced by shared clusters of Commercial-Off</p>
    <p>the-Shelf (COTS) computers</p>
    <p>The Computational Grid architecture could benefit of similar</p>
    <p>approaches, enhancing the use of the Grid for simulation tasks</p>
  </div>
  <div class="page">
    <p>Gabriele DAngelo gdangelo@cs.unibo.it</p>
    <p>http://www.cs.unibo.it/~gdangelo</p>
    <p>University of Bologna Department of Computer Science</p>
    <p>WOMP 2006, Sorrento (NA)</p>
    <p>An Adaptive Load Balancing Middleware for Distributed Simulation</p>
  </div>
</Presentation>
