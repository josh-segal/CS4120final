<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Ronald F. DeMara, Carthik A. Sharma University of Central Florida</p>
    <p>Ronald F. DeMara, Carthik A. Sharma University of Central Florida</p>
    <p>Self-Checking Fault Detection Self-Checking Fault Detection using</p>
    <p>Discrepancy Mirrors</p>
    <p>PDPTA 2005PDPTA 2005 Las Vegas Las Vegas</p>
    <p>PDPTA 2005PDPTA 2005 Las Vegas Las Vegas</p>
  </div>
  <div class="page">
    <p>Fault Handling Overview</p>
    <p>FailureFailure  Manifestation of a fault  Deviation from expected behavior</p>
    <p>DetectionDetection  Identify occurrence of fault</p>
    <p>Fully articulating inputs  Intermittently articulating inputs</p>
    <p>Methods  Coding based schemes  Redundancy</p>
    <p>IsolationIsolation  Physical location of fault PCI-based card used for Xilinx</p>
    <p>Virtex II-Pro Based Autonomous Repair Testbed</p>
  </div>
  <div class="page">
    <p>Ideal Detection Characteristics</p>
    <p>Faults in the detector are covered by itselfFaults in the detector are covered by itself  Fault-secure  Self-testing  No Golden Elements</p>
    <p>Multiple types of faults handled by same detectorMultiple types of faults handled by same detector  Transient and Permanent faults  Logic and Interconnect faults</p>
    <p>Minimum number of false-positivesMinimum number of false-positives  Accuracy and reliability</p>
    <p>Minimal power consumptionMinimal power consumption</p>
    <p>Verifiable correctnessVerifiable correctness</p>
    <p>Practical AssessmentPractical Assessment  Fitness assessment should be tractable</p>
  </div>
  <div class="page">
    <p>Discrepancy Mirror</p>
    <p>Fault CoverageFault Coverage</p>
    <p>Mechanism for Checking-the-Checker (golden element problem)</p>
    <p>Makes checker part of configuration that competes for correctness [DeMara PDPTA-05]</p>
  </div>
  <div class="page">
    <p>Discrepancy Mirror Circuit</p>
    <p>Fault CoverageFault Coverage Component Fault Scenarios Fault-Free</p>
    <p>Function Output A Fault Correct Correct Correct Correct</p>
    <p>Function Output B Correct Fault Correct Correct Correct</p>
    <p>XNORA Disagree (0) Disagree (0) Fault : Disagree(0) Agree (1) Agree (1)</p>
    <p>XNORB Disagree (0) Disagree (0) Agree (1) Fault : Disagree(0) Agree (1)</p>
    <p>BufferA 0 0 High-Z 0 1</p>
    <p>BufferB 0 0 0 High-Z 1</p>
    <p>Match Output 0 0 0 0 1</p>
  </div>
  <div class="page">
    <p>Discrepancy Mirror Truth Table</p>
    <p>A B XNORA XNORB ENBA ENBB TRIA TRIB MATCH</p>
    <p>Discrepancy Mirror Truth Table ensures complete coverage of detector.</p>
    <p>Single Point of Failure reduced to a stuck-at fault exposure for MATCH output (Wired-Or)</p>
  </div>
  <div class="page">
    <p>Discrepancy-Enabled Isolation</p>
  </div>
  <div class="page">
    <p>Discrepancy Mirror Approach</p>
    <p>Selection PhaseSelection Phase  Two candidates chosen from population  Use mutually exclusive resources  Carry out computation in tandem</p>
    <p>Detection PhaseDetection Phase  Discrepancy Mirror compares outputs  MATCH output signifies fault free configurations  Faults in the detector also covered</p>
    <p>Preference Adjustment ProcessPreference Adjustment Process  Detector output over time indicates relative fitness  Relative fitness can be used to choose candidates</p>
  </div>
  <div class="page">
    <p>CRR Arrangement in SRAM FPGA</p>
    <p>Configurations in PopulationConfigurations in Population  C = CL CR</p>
    <p>CL = subset of left-half configurations  CR = subset of right-half configurations  |CL|=|CR |= |C|/2</p>
    <p>Discrepancy OperatorDiscrepancy Operator  Baseline Discrepancy Operator  is dyadic operator with binary output:</p>
    <p>Z(Ci) is FPGA data throughput output of configuration Ci</p>
    <p>Each half-configuration evaluates  using embedded checker (XNOR gate) within each individual</p>
    <p>Any fault in checker lowers that individuals fitness so that individual is no longer preferred and eventually undergoes repair</p>
    <p>Othewise</p>
    <p>CZCZ CC</p>
    <p>R i</p>
    <p>L iR</p>
    <p>i L i</p>
    <p>)()(</p>
    <p>Reconfiguration Algorithm</p>
    <p>`</p>
    <p>S R A M -bas ed F P G A</p>
    <p>L Half-Co nfig uration</p>
    <p>Discrepancy Check L Discrepancy Check R</p>
    <p>Function Logic L</p>
    <p>CONFIGURA TION BIT STREA M</p>
    <p>INPUT DA TA</p>
    <p>Function Logic R</p>
    <p>DATA OUTPUT</p>
    <p>F E</p>
    <p>E D</p>
    <p>B A</p>
    <p>C K</p>
    <p>R Half-Config uration</p>
    <p>CONTROL</p>
    <p>O F F -C</p>
    <p>H IP</p>
    <p>E E</p>
    <p>P R</p>
    <p>O M</p>
    <p>( N</p>
    <p>O T E : a n</p>
    <p>o n -v</p>
    <p>o la</p>
    <p>ti le</p>
    <p>m e m</p>
    <p>o ry</p>
    <p>i s a</p>
    <p>lr e a d y r</p>
    <p>e q u ir e d t o b</p>
    <p>o o t a n y S</p>
    <p>R A M</p>
    <p>F P G</p>
    <p>A f ro</p>
    <p>m c</p>
    <p>o ld</p>
    <p>s ta</p>
    <p>rt . .. t h is</p>
    <p>i s n</p>
    <p>o t a n a</p>
    <p>d d it io</p>
    <p>n a l c</p>
    <p>h ip</p>
    <p>)</p>
    <p>R ji</p>
    <p>L jii CEORC ,,j  =RS:</p>
    <p>(Hamming Distance)</p>
    <p>R ji</p>
    <p>L jii CEORC ,,j ^ =WTA:</p>
    <p>(Equivalence)</p>
  </div>
  <div class="page">
    <p>Overview of FPGA operation</p>
    <p>Competing ConfigurationsCompeting Configurations  Configurations A and B are physically distinct  CA = subset consisting of A configurations  CB = subset consisting of B configurations  |CA|=|CB |= |C|/2</p>
    <p>Discrepancy OperatorDiscrepancy Operator  Baseline Discrepancy Operator  is dyadic operator with binary output:</p>
    <p>Z(Ci) is FPGA data throughput output of configuration Ci</p>
    <p>Each half-configuration evaluates  using embedded checker (XNOR gate) within each individual</p>
    <p>Any fault in checker or functional logic lowers fitness of resources used by that individual leading to isolation</p>
    <p>Otherwise</p>
    <p>CZCZ CC</p>
    <p>B i</p>
    <p>A iB</p>
    <p>i A</p>
    <p>i</p>
    <p>)()(</p>
    <p>Reconfiguration Algorithm</p>
    <p>`</p>
    <p>SRAM-based FPGA</p>
    <p>Configuration A</p>
    <p>Discrepancy Mirror A Discrepancy Mirror B</p>
    <p>Function Logic A</p>
    <p>CONFIGURATION BIT STREAM</p>
    <p>INPUT DATA</p>
    <p>Function Logic B</p>
    <p>DATA OUTPUT</p>
    <p>F E</p>
    <p>E D</p>
    <p>B A</p>
    <p>C K</p>
    <p>Configuration B</p>
    <p>CONTROL</p>
    <p>O F</p>
    <p>F -C</p>
    <p>H IP</p>
    <p>E E</p>
    <p>P R</p>
    <p>O M</p>
    <p>( N</p>
    <p>O T</p>
    <p>E :</p>
    <p>a n</p>
    <p>o n</p>
    <p>-v o la</p>
    <p>til e</p>
    <p>m e m</p>
    <p>o ry</p>
    <p>i s a</p>
    <p>lr e a</p>
    <p>d y r</p>
    <p>e q</p>
    <p>u ir</p>
    <p>e d t</p>
    <p>o b</p>
    <p>o o t</p>
    <p>a n</p>
    <p>y S</p>
    <p>R A</p>
    <p>M F</p>
    <p>P G</p>
    <p>A f</p>
    <p>ro m</p>
    <p>c o ld</p>
    <p>s ta</p>
    <p>rt .</p>
    <p>.. t</p>
    <p>h is</p>
    <p>is n</p>
    <p>o t</p>
    <p>a n a</p>
    <p>d d it io</p>
    <p>n a l c h ip</p>
    <p>)</p>
  </div>
  <div class="page">
    <p>Discrepancy Mirror Schematic: CMOS</p>
    <p>Pspice SchematicPspice Schematic</p>
    <p>44 p- and n-channel MOS Transistors</p>
    <p>1.5 micron minimum width</p>
    <p>600 nm length</p>
    <p>Width of p-mos transistors = 3*width of n-mos trans.</p>
  </div>
  <div class="page">
    <p>Discrepancy Mirror Schematic: Xilinx</p>
    <p>Xilinx SchematicXilinx Schematic</p>
    <p>Virtex-II Pro FPGA</p>
    <p>ModelSim-II Simulator</p>
    <p>Emulated (digital) Pull-down Resistor</p>
  </div>
  <div class="page">
    <p>Discrepancy Mirror Simulation: CMOS Circuit</p>
    <p>Transient ResponseTransient Response</p>
    <p>Behavior conforms to specifications</p>
    <p>Correct identification of Discrepancy</p>
  </div>
  <div class="page">
    <p>Discrepancy Mirror Simulation: Xilinx ModelSim-II</p>
    <p>Circuit ResponseCircuit Response</p>
    <p>Output High == 1 when input q1 == q2</p>
    <p>Output Low when input q1 != q2.  In Xilinx FPGAs, Low is not exactly equal to zero, but is a Logic zero nevertheless.</p>
  </div>
  <div class="page">
    <p>Fault Location Experiments</p>
    <p>Two experiments conductedTwo experiments conducted  C-language program simulator  Locate fault by successive intersections</p>
    <p>v-subsets or groups of resources  Fault identified after m comparisons  what is the value of m?</p>
    <p>Identify number of iterations required to identify single-fault  Random inputs, Single stuck-at fault  Expected number of pairings over 100 simulations  One resource equivalent to one CLB ( &gt; 10 gates)</p>
    <p>Experiment 1Experiment 1  Perpetually articulating inputs</p>
    <p>Experiment 2Experiment 2  Intermittently articulating inputs</p>
  </div>
  <div class="page">
    <p>Fault Location Using Dueling</p>
    <p>Let UU denote the set of all logic resources on the FPGA SS denote the pool of resources suspected of being faulty Initially denotes the set of resources used by ith configuration.</p>
    <p>To isolate the fault, m successive intersections,</p>
    <p>are performed at the end of which |S| = 1</p>
    <p>With pre-designed partitions to achieve maximal isolation  Isolation can be completed in 2n iterations, where n = | |</p>
    <p>|||| US</p>
    <p>UCi</p>
    <p>),( mkjiCC jkj</p>
    <p>iC</p>
  </div>
  <div class="page">
    <p>Analysis with Perpetually Articulating Inputs</p>
    <p>Perpetually Articulating Perpetually Articulating InputsInputs  No observed discrepancy implies fault-free resources</p>
    <p>Best Case (50% Utilized Capacity):  11.1 pairings for 1,000 resources  17.6 pairings for 100,000 resources</p>
    <p>Most Demanding Case: 63.7 pairings for 100,000 resources with 5% capacity utilization.</p>
  </div>
  <div class="page">
    <p>Analysis with Intermittently Articulating Inputs</p>
    <p>Intermittently Articulating Intermittently Articulating InputsInputs  Inputs may be such that fault is not articulated at the outputs  No observed discrepancy does not imply fault-free resources  Only discrepant outputs provide fault-location information</p>
    <p>Best Case (45% Utilized Capacity):  42 pairings for 1,000 resources  64.1 pairings for 100,000 resources</p>
    <p>Most Demanding Case: 478 pairings for 100,000 resources with 95% capacity utilization.50% of the inputs articulate the fault</p>
  </div>
  <div class="page">
    <p>Experimental Results Summary</p>
    <p>Number of iterations to detect faults depends on Number of iterations to detect faults depends on Utilized CapacityUtilized Capacity  Designs that utilize only a very few resources ( &lt; 20%), or</p>
    <p>almost all ( &gt; 80%) the resources on the FPGA pose difficult isolation problems</p>
    <p>Each intersection exonerates (implicates) fewer individual resources</p>
    <p>Method scales wellMethod scales well  11.1, 14.9, 17.6 pairings required for 1,000, 10,000, and</p>
    <p>Competitive Runtime Reconfiguration (CRR) framework under development which will utilize methods outlined</p>
    <p>Investigation of Competitive Group Testing methods to enable faster fault isolation</p>
    <p>Analysis of characteristics of isolation, dependency on parameters, optimal partitioning methods.</p>
  </div>
  <div class="page">
    <p>Backup Slides Follow</p>
  </div>
  <div class="page">
    <p>Accommodating Multi-bit Word Widths</p>
    <p>Proof of conceptProof of concept  The present circuit works efficiently  Demonstrates important Dueling-enabled isolation method</p>
    <p>StrategiesStrategies  Use an array of detectors</p>
    <p>attempt to minimize points of failure as word-width increases  Number of logic resources used is acceptable for smaller</p>
    <p>circuits  Create new circuit or scheme, combining fault tolerant</p>
    <p>coding-based methods with single-fault secure circuit  Current research focused on improving detector by</p>
    <p>investigating codes, and fault-secure circuits</p>
  </div>
  <div class="page">
    <p>Pull-down Resistor Considerations</p>
    <p>Proof of conceptProof of concept  The present circuit works in a verifiable correct manner  Can utilize synthesized (digital) pull-down resistor which</p>
    <p>simulate the behavior of analog resistors  Demonstrates Dueling-enabled isolation method  Can be utilized without implementation problems for</p>
    <p>Custom-VLSI designs  Alternative ApproachAlternative Approach</p>
    <p>Alternate detector circuits for FPGA implementation are Alternate detector circuits for FPGA implementation are under investigationunder investigation</p>
    <p>Avoid using Tri-state buffers, pull-down resistors and use Avoid using Tri-state buffers, pull-down resistors and use native digital components available on FPGAsnative digital components available on FPGAs</p>
  </div>
</Presentation>
