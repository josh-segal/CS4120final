<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Ontology Evolution Analysis with OWL-MeT</p>
    <p>Natalya Keberle Yuriy Litvinenko Yuriy Gordeyev Vadim Ermolayev</p>
    <p>Zaporozhye National University, Ukraine Dept. of IT, Intelligent Systems Research Group</p>
    <p>Intl. Workshop on Ontology Dynamics (IWOD) @ ESWC-2007 Innsbruck, Austria, 7th June 2007</p>
  </div>
  <div class="page">
    <p>Ontology Evolution Analysis(1)</p>
    <p>- Can I rely on the fact that a Student in the XXI century is the same as in the XIXth?</p>
    <p>XXIthXXthXIXth</p>
    <p>Domain Domain =</p>
    <p>=</p>
    <p>Domain</p>
    <p>Versions compatibility</p>
    <p>a Student</p>
    <p>time</p>
  </div>
  <div class="page">
    <p>Ontology Evolution Analysis(2)</p>
    <p>- Is it true that if Mike is a Student now, he was an Entrant some time ago and he will be a Graduate in some time in the future?</p>
    <p>Checking derivability of a fact in different versions</p>
    <p>a Student</p>
    <p>an Entrant</p>
    <p>time</p>
    <p>Graduated</p>
    <p>Mike</p>
  </div>
  <div class="page">
    <p>Ontology Evolution Analysis(3)</p>
    <p>- Get the properties of a Student of the XIX century</p>
    <p>Structural analysis of versions and of version changes</p>
    <p>a Student</p>
    <p>a Student</p>
    <p>- What was changed in the definition of a Student of the XXI century as compared to the one of the XIX century?</p>
    <p>XXIthXIXth time</p>
  </div>
  <div class="page">
    <p>Ontology Evolution Analysis &quot;wishlist  Ontology Version Management System</p>
    <p>All ontology versions are available  Or, there is a version log  Or, both versions and a version are available</p>
    <p>Explicit referencing of ontology versions  Different Query Types</p>
    <p>Reasoning queries  Meta - level queries on versions compatibility  Retrieval queries</p>
  </div>
  <div class="page">
    <p>Existing approaches to ontology evolution analysis  Versioning and structural analysis of</p>
    <p>version logs OntoView [Klein 2004]</p>
    <p>Proof-theoretic approach  usage of temporal logic MORE tool [Huang &amp; Stuckenschmidt, 2005]</p>
    <p>LTLm</p>
  </div>
  <div class="page">
    <p>Requirements for Temporal Logic  The notion of distance</p>
    <p>- Metric logic  Explicit version names addressing</p>
    <p>- Hybrid logic  Semantic Web oriented</p>
    <p>- Description logic</p>
  </div>
  <div class="page">
    <p>Temporal Logics overview  Propositional:</p>
    <p>LTL, CTL  MT [Hustadt et al. 2005]  PTC(MT) [Keberle 2005]</p>
    <p>Reasoning support : LoTREC (refl.&amp; trans. frames), MetTel,</p>
    <p>DL-oriented:  Schilds logic [Schild 1993]  Family of CIQ US [Wolter &amp; Zakharyashev 1999]  TL-ALCF [Artale &amp; Franconi 2000]</p>
    <p>Reasoning support : open question</p>
  </div>
  <div class="page">
    <p>ALCIO(MT) proposal</p>
  </div>
  <div class="page">
    <p>ALCIO(MT) Specific semantics of ALCIO(MT) is defined on reflexive and transitive frames</p>
  </div>
  <div class="page">
    <p>ALCIO(MT) ALCIO (MT) is decidable as the syntactic variant of CIQ US</p>
    <p>SAT problem for ALCIO(MT) is EXPTIME-hard [Areces, Blackburn &amp; Marx 1999]</p>
    <p>Tableau-based procedure of SAT checking is developed</p>
  </div>
  <div class="page">
    <p>OWL-MeT proposal  OWL-MeT: Ontology Web Language for Metric Time</p>
    <p>Metric and Temporal extension of OWL</p>
    <p>Based on ALCIO(MT)</p>
    <p>PLUS  Definition of TimeStructure for versions identification and</p>
    <p>ordering. TimeStructure is a finite set of version IDs .</p>
    <p>TInstant 1</p>
    <p>TInstant 2</p>
    <p>TInstant 3</p>
    <p>TInstant 4</p>
    <p>past future</p>
  </div>
  <div class="page">
    <p>OWL-MeT examples Student is</p>
    <p>&lt;TClass rdf:ID=Entrant&quot;/&gt; &lt;TClass rdf:ID=Graduated&quot;/&gt; &lt;TClass rdf:ID=Student&quot;&gt; &lt;equivalentClass&gt; &lt;intersectionOf&gt; &lt;TRestriction&gt; &lt;somepast rdf:resource=&quot;#Entrant/&gt; &lt;/TRestriction&gt; &lt;TRestriction&gt; &lt;allfuture&gt; &lt;TClass&gt; &lt;unionOf&gt; &lt;TClass about=&quot;#Student&quot;/&gt; &lt;TClass about=&quot;#Graduated&quot;/&gt;</p>
    <p>&lt;/unionOf&gt; &lt;/TClass&gt;</p>
    <p>&lt;/allfuture&gt; &lt;/TRestriction&gt;</p>
    <p>&lt;/intersectionOf&gt; &lt;/equivalentClass&gt;</p>
    <p>&lt;/TClass&gt;</p>
    <p>&quot;&amp;xsd;#NonNegativeInteger&quot;&gt; 3 &lt;/past&gt;</p>
    <p>&lt;equivalentClass&gt; &lt;TClass rdf:about=&quot;#Entrant&quot;/&gt; &lt;/equivalentClass&gt;</p>
    <p>&lt;/TRestriction&gt; &lt;/rdfs:subClassOf&gt; &lt;/TClass&gt;</p>
  </div>
  <div class="page">
    <p>Sources of Reasoning Support for OWL-Met</p>
    <p>OpensourceOWL DLPellet Opensourceincomplete OWL DLJena</p>
    <p>CommercialOWL DLRacerPro OpensourceOWL DLFaCT++</p>
    <p>Freewareincomplete OWL DL KAON2 StatusOWL SupportEngine</p>
  </div>
  <div class="page">
    <p>Changes in Pellet</p>
    <p>Parser (RDF/XML, Turtle etc)</p>
    <p>Species validation and ontology repair</p>
    <p>Tableau Reasoner</p>
    <p>TBox absorption</p>
    <p>ABox query engine</p>
    <p>SPARQL parser</p>
    <p>Jena application</p>
    <p>OWL API application</p>
    <p>DIG applicationinternalization</p>
    <p>XSD reasoner</p>
    <p>i n t e r f a c e s</p>
    <p>KnowledgeBase interface</p>
    <p>TBox ABox</p>
    <p>Tg</p>
    <p>Tu</p>
  </div>
  <div class="page">
    <p>Changes in Jena  added file owlmet.owl to Jena  owlmet:TClass is subClassOf rdf:Class  owlmet:TRestriction is subClassOf TClass  owl:Class is subClassOf owlmet:TClass  owlmet:Instant is subClassOf owlmet:TClass</p>
    <p>Redifined properties like equivalentClass, disjointWith to operate on TClasses</p>
    <p>Added properties for allfuture/somefuture/future n  Added properties for at (rdfs required also to add</p>
    <p>property happens)</p>
  </div>
  <div class="page">
    <p>Back to Evolution Analysis  Reasoning queries e.g.</p>
    <p>(C intersection ((past 2) not C)) @{v5}</p>
    <p>meaning: What are the new individuals of concept C in a</p>
    <p>version v5, which were not present two versions before?</p>
  </div>
  <div class="page">
    <p>Back to Evolution Analysis  Meta-level queries Given version i, ontology Oi, concept Gi intersection of the definitions</p>
    <p>of all concepts and individuals in Oi. Then</p>
    <p>| Gi @ {i}  checking SAT for Oi | Gi @ {j}  checking SAT for Oi in j | GE,i @ {i}  checking SAT for concept E (from i)</p>
    <p>in version i | GE,i @ {j}  checking SAT for concept E (from i)</p>
    <p>in version j | (Gi intersection Gj) @ {j}</p>
    <p>GE,i - compiled [Stuckenschmidt &amp; Klein 2003] concept from all explicit and implicit definitions of E in version i</p>
  </div>
  <div class="page">
    <p>Back to Evolution Analysis</p>
    <p>Retrieval queries e.g. Child (C,B)@{j} intersection (not Child(C,B)@{i})</p>
    <p>meaning Get new children B of concept C appeared in</p>
    <p>the version j as compare to the version i</p>
    <p>Might require new roles/role restrictions to be introduced</p>
  </div>
  <div class="page">
    <p>Future Work  Real cases (propositions are welcome)  Optimization  Combination of TimeStructure concept</p>
    <p>with an ontology of temporal aggregates (years, monthes, days,.)  e.g. with OWL-Time [J.Hobbs&amp;F.Pan 2004]</p>
    <p>Fusion (decidability in mind) between pure DL and temporal parts  like roles/role restrictions over TClasses</p>
  </div>
  <div class="page">
    <p>Additional info</p>
    <p>http://ermolayev.com/owl-met/</p>
  </div>
  <div class="page">
    <p>Shall be happy to answer your questions</p>
  </div>
</Presentation>
