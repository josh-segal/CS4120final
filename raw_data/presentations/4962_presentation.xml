<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Using First-order Logic to Reason about Policies</p>
    <p>Vicky Weissman</p>
    <p>Joint work with: Joseph Halpern and Carl Lagoze</p>
  </div>
  <div class="page">
    <p>What is a policy?  A policy says that an individual</p>
    <p>may (or may not) do an action if certain conditions hold.</p>
    <p>Examples include  `All information on this site may be</p>
    <p>copied.1  `A student shall in no way</p>
    <p>misrepresent his or her work.2</p>
  </div>
  <div class="page">
    <p>Questions about policies  Users want to know whats allowed</p>
    <p>and whats not.  Policy makers want to know if their</p>
    <p>policies are consistent with those already made.  E.g. Alice writes a set of policies for her</p>
    <p>universitys new outreach program. Do her policies contradict those of the university?</p>
  </div>
  <div class="page">
    <p>Problem: Ambiguity  Consider the policy</p>
    <p>`All information on this site may be copied,  Interpretation 1: The policy allows any part of</p>
    <p>the site to be copied. (`All information stresses that there are no restrictions on what may be copied.)</p>
    <p>Interpretation 2: The policy allows the entire site to be copied (i.e. all of the information).</p>
    <p>May Alice copy a paragraph that is on the site? We dont know.</p>
  </div>
  <div class="page">
    <p>Solution: Write policies in first-order logicGood News:</p>
    <p>Formal semantics  no ambiguity.  Fol seems to be sufficiently expressive.</p>
    <p>Bad News:  Many problems for fol are undecidable.  Many policy writers are not well-versed in</p>
    <p>logic. Well discuss these issues later in the talk.</p>
  </div>
  <div class="page">
    <p>Encoding policies  A policy says that an individual may (or</p>
    <p>may not) do an action if certain conditions hold.</p>
    <p>A policy has the form: x1,, xm (f  () Permitted(tag, tac))</p>
  </div>
  <div class="page">
    <p>Encoding policies  A policy says that an individual may (or</p>
    <p>may not) do an action if certain conditions hold.</p>
    <p>A policy has the form: x1,, xm (f  () Permitted(tag, tac))</p>
    <p>Permitted(tag, tac) means that agent tag may do action tag where tag and tac are terms.</p>
    <p>E.g. Permitted(Alice, play) means Alice may play.</p>
  </div>
  <div class="page">
    <p>Encoding policies  A policy says that an individual may (or</p>
    <p>may not) do an action if certain conditions hold.</p>
    <p>A policy has the form: x1,, xm (f  () Permitted(tag, tac))</p>
    <p>f is a conjunction of literals where each literal encodes a condition.</p>
    <p>E.g. f = Vegetable(x1)  Ate(Alice, x1)   Scowl(Alice)</p>
  </div>
  <div class="page">
    <p>Encoding policies  A policy says that an individual may (or</p>
    <p>may not) do an action if certain conditions hold.</p>
    <p>A policy has the form: x1,, xm (f  () Permitted(tag, tac))</p>
    <p>A permitting policy has a positive conclusion, a denying policy has a negative conclusion.</p>
  </div>
  <div class="page">
    <p>Encoding policies  A policy says that an individual may (or may</p>
    <p>not) do an action if certain conditions hold.  A policy has the form:</p>
    <p>x1,, xm (f  () Permitted(tag, tac))</p>
    <p>A permitting policy has a positive conclusion, a denying policy has a negative conclusion.</p>
    <p>E.g.: x1 (Vegetable(x1)  Ate(Alice, x1)  Scowl(Alice)  Permitted(Alice, play))</p>
  </div>
  <div class="page">
    <p>Environments  Does the policy</p>
    <p>x1 (Vegetable(x1)  Ate(Alice, x1)  Scowl(Alice)  Permitted(Alice, play))</p>
    <p>allow Alice to play?  To answer the question we need to know if</p>
    <p>she ate a vegetable and if shes scowling.  This information, along with other facts</p>
    <p>about the world, are stored in the environment.</p>
  </div>
  <div class="page">
    <p>Environments for policies</p>
    <p>cake) 2. Constraints (universal formulas)</p>
    <p>Captures relationships between attributes.  E.g. x (Private(x)  Public(x)),</p>
    <p>x (Freshmen(x)  Student(x))</p>
    <p>Policies seem to refer to 2 types of facts:</p>
    <p>Assumption: Environment doesnt talk about whats permitted; policies do that.</p>
  </div>
  <div class="page">
    <p>Encoding the questions in first-order logic</p>
    <p>Assume an environment E and a policy set {p1,, pn}.</p>
    <p>`Is c1 allowed to do c2? = `Is E  p1   pn  Permitted(c1, c2) valid?</p>
    <p>`Are the policies consistent in E? `Is E  p1   pn satisfiable?</p>
  </div>
  <div class="page">
    <p>Encoding the questions in first-order logic</p>
    <p>Assume an environment E and a policy set {p1,, pn}.</p>
    <p>`Is c1 allowed forbidden to do c2? = `Is E  p1   pn  Permitted(c1, c2) valid?</p>
    <p>`Are the policies consistent in E? `Is E  p1   pn satisfiable?</p>
  </div>
  <div class="page">
    <p>Can we answer the questions?  No. These questions are</p>
    <p>undecidable.  But the games not over yet!</p>
    <p>We can restrict the language so that the questions are tractable AND interesting policies are still expressible.</p>
  </div>
  <div class="page">
    <p>One solution: Datalog  Datalog is negation-free, function-free Horn</p>
    <p>clauses; queries can be answered in PTime.  Some extensions have been considered.</p>
    <p>Safe, stratified Datalog: Binder [DeTreville 02] , RT [Li, Mitchell, Winsborough 02] and SD3 [Trevor 01] .</p>
    <p>Datalog with constraints: RTc [Li and Mitchell 03] .  With these extensions, Datalog is still PTime.  But:</p>
    <p>A policys conclusion must be a positive literal (no denying policies).</p>
    <p>Support for functions is limited.</p>
  </div>
  <div class="page">
    <p>Denying policies are common.</p>
    <p>Many applications explicitly forbid actions.  `Smoking is prohibited in the dining areas of</p>
    <p>all restaurants seating more than 35 people is part of the NYC Smoke-Free Air Act.</p>
    <p>`The tickets may not be refunded is a policy of many airline fares, theaters,</p>
    <p>These policies cannot be captured explicitly in (the extended versions of) Datalog.</p>
  </div>
  <div class="page">
    <p>Datalog solution</p>
    <p>What isnt explicitly permitted is forbidden.</p>
    <p>Problem: Cant distinguish forbidden actions from unregulated ones.  E.g. A universitys policies talk about</p>
    <p>whos permitted to get tenure. The policies for Alices new outreach program dont.  Alices policies contradict the universitys.</p>
  </div>
  <div class="page">
    <p>We may want functions too.</p>
    <p>Functions often occur naturally when translating English policies to first-order logic.</p>
    <p>E.g. `All information on the site may be copied</p>
    <p>translates to either:  x1, x2 (OnSite(x1)  Permitted(x2, copy(x1)))  x1, x2 (EntireSite(x1)  Permitted(x2,</p>
    <p>copy(x1)))</p>
  </div>
  <div class="page">
    <p>Another solution</p>
    <p>We want a language that  doesnt restrict functions and  allows us to capture denying policies.</p>
    <p>To get this in a tractable language, some restrictions are necessary.</p>
    <p>Key idea: Restrict bipolars.</p>
  </div>
  <div class="page">
    <p>What is a bipolar?  A literal l is bipolar in a formula f (in CNF) if</p>
    <p>for some variable substitutions  and .  Consider</p>
    <p>f =  x, y (Can(Alice, x)   Can(y, sing)) Can(Alice, x) is bipolar in f, because</p>
  </div>
  <div class="page">
    <p>Why is bipolarity interesting?</p>
    <p>If E is an environment and {p1, , pn} is a set of policies such that</p>
    <p>Then our questions can be answered in time (|E|+|P|) log|E| where P = p1  pn.</p>
    <p>|f| is the length of f viewed as a string of symbols.</p>
    <p>Language with functions + denying policies is tractable!</p>
  </div>
  <div class="page">
    <p>When is every variable on the lhs also on the rhs?</p>
    <p>Recall: A policys lhs states the conditions under which the permission on the rhs is granted/denied.</p>
    <p>Variable restriction is met if what youre allowed/forbidden to do is based solely on your attributes and the attributes of the regulated action.</p>
    <p>Our problems are NP in the number of variables in a single policy that violate the restriction.</p>
  </div>
  <div class="page">
    <p>When is E a conjunction of ground literals?</p>
    <p>This restriction is met if E is derived from databases and certificates.</p>
    <p>If the E has constraints (e.g. anything private is not public), then  Our problems can be answered in quadratic</p>
    <p>time, if no more than 1 bipolar per clause.  More than one bipolar per clause is common if</p>
    <p>there are definitions (e.g. a senior citizen is someone over 65), but its easy to deal with definitions; theyre just macros.</p>
  </div>
  <div class="page">
    <p>When are there no bipolar literals in p1  pn?</p>
    <p>Suppose  Permitted is not in any policys premise and  all policies are permitting (or all denying).</p>
    <p>Then  The restriction holds if meeting a condition can</p>
    <p>only add or remove privileges (but not both).  If each policy has at most 1 bipolar in p1  pn,</p>
    <p>then answering queries takes quadratic time.</p>
    <p>But what if some policies are permitting and others denying?</p>
  </div>
  <div class="page">
    <p>Big idea</p>
    <p>We want permissions (prohibitions) to follow solely from the permitting (denying) policies.</p>
    <p>If this were true, then we could answer a query by looking at the permitting and denying policies separately.</p>
    <p>Want we want doesnt come for free.</p>
  </div>
  <div class="page">
    <p>Denying policies can affect permissions</p>
    <p>Consider 2 permitting policies:  p1 = `anyone who is not faculty may</p>
    <p>nap.  p2 = `faculty may chair committees.</p>
    <p>If Alice is a student, may she take a nap?</p>
  </div>
  <div class="page">
    <p>Denying policies can affect permissions</p>
    <p>Consider 2 permitting policies:  p1 = `anyone who is not faculty may</p>
    <p>nap.  p2 = `faculty may chair committees.</p>
    <p>If Alice is a student, may she take a nap?  No, because Alice could be a student</p>
    <p>who is also a faculty member.</p>
  </div>
  <div class="page">
    <p>Denying policies can affect permissions</p>
    <p>Consider 3 policies:  p1 = `anyone who is not faculty may nap.  p2 = `faculty may chair committees.  p3 = `students may not chair committees.</p>
    <p>If Alice is a student, may she take a nap?</p>
  </div>
  <div class="page">
    <p>Denying policies can affect permissions</p>
    <p>Consider 3 policies:  p1 = `anyone who is not faculty may nap.  p2 = `faculty may chair committees.  p3 = `students may not chair committees.</p>
    <p>If Alice is a student, may she take a nap?  Yes, because p2 and p3 together imply that</p>
    <p>students arent faculty.</p>
    <p>Moral: Permitting and denying policies together can imply environment facts, so we cant separate the policies, unless</p>
  </div>
  <div class="page">
    <p>Separating policies</p>
    <p>Thm: If implied information is made explicit, then a positive conclusion follows from all the policies iff it follows from the permitting policies.  If there are n policies and there is only one bipolar</p>
    <p>per policy that involves Permitted, then at most n2 clauses are added and no added clause is more than twice the length of the longest original clause.</p>
    <p>Bottom line: Under reasonable assumptions, we can answer our queries in quadratic time.</p>
  </div>
  <div class="page">
    <p>Expressive power</p>
    <p>The fragment can capture a number of policy sets including  the ones we collected from libraries,  the ones we collected from</p>
    <p>government docs,  most of the licenses that can be</p>
    <p>written in XrML.</p>
  </div>
  <div class="page">
    <p>Why cant we handle all XrML licenses?</p>
    <p>XrML allows Permitted in the antecedent of policies.  Permitted can be a bipolar  a clause can have multiple bipolars.</p>
    <p>But, XrML does not support negation.  Our fragment can express some</p>
    <p>policies that XrML cant and viceversa.</p>
  </div>
  <div class="page">
    <p>Are we done yet?</p>
    <p>We have found a language that is expressive enough to capture many policies of practical interest AND for which we can answer questions efficiently.</p>
    <p>But we havent shown that its accessible to the many policy makers and administrators who are not logicians.</p>
  </div>
  <div class="page">
    <p>The architecture</p>
    <p>GUI</p>
    <p>translator</p>
    <p>user input</p>
    <p>database</p>
    <p>formulas</p>
    <p>answers questions</p>
    <p>answers in English</p>
    <p>GUI Lets non-logicians enter policies and relevant facts; ask questions.</p>
    <p>translator Translates between user input/ English and first-order formulas in our restricted form.</p>
    <p>analyzer Answer questions such as `Can Alice edit the website? and `Are the policies consistent?.</p>
  </div>
  <div class="page">
    <p>Interface  User selects a task such as:</p>
    <p>Describe a person, item, or action.  State a policy.  Ask if an action is permitted/forbidden.</p>
    <p>User completes the task by filling in a form.</p>
    <p>E.g. To say `Alice is an IEEE member from Jan. 1, 2003 to Jan. 1, 2004</p>
  </div>
  <div class="page">
    <p>Interface  User selects a task such as:</p>
    <p>Describe a person, item, or action.  State a policy.  Ask if an action is permitted/forbidden.</p>
    <p>User completes the task by filling in a form.</p>
    <p>E.g. To say `Alice is an IEEE member from Jan. 1, 2003 to Jan. 1, 2004</p>
  </div>
  <div class="page">
    <p>Form: Describe a person, item, or action</p>
    <p>Who or what is being described?</p>
    <p>What is the characteristic?</p>
    <p>Does the person, item, or action have the characteristic?</p>
    <p>Yes No</p>
    <p>When does this description apply?</p>
    <p>From: To:</p>
  </div>
  <div class="page">
    <p>Form: Describe a person, item, or action</p>
    <p>Who or what is being described?</p>
    <p>Alice</p>
    <p>What is the characteristic?</p>
    <p>IEEE Member</p>
    <p>Does the person, item, or action have the characteristic?</p>
    <p>Yes No</p>
    <p>When does this description apply?</p>
    <p>From: 1/1/03 To: 1/1/04</p>
  </div>
  <div class="page">
    <p>Conclusion  Completed work</p>
    <p>Found a tractable fragment of first-order logic that can express many (almost all?) policies of interest.</p>
    <p>Work in progress  Investigating the extent to which we can</p>
    <p>capture the social security database.  Building a prototype to demonstrate the</p>
    <p>languages usability.  Applying the same techniques to</p>
    <p>formalizing XrML.</p>
  </div>
  <div class="page">
    <p>For more information  The paper`Using First-order Logic to</p>
    <p>Reason about Policies is available:  at</p>
    <p>http://www.cs.cornell.edu/People/vickyw.  in the proceedings of this years</p>
    <p>Computer Security Foundations Workshop (CSFW).</p>
  </div>
  <div class="page">
    <p>Describe a person, item, or action We tell you whats allowed and whats not sign in | help</p>
    <p>Home</p>
    <p>Facts  Describe a person, item, or action.</p>
    <p>Relate one person, item, or action to another.</p>
    <p>Record an event.</p>
    <p>Modify the fact database.</p>
    <p>Policies Give permission.</p>
    <p>Deny permission.</p>
    <p>Modify the policy database.</p>
    <p>Queries Is an event allowed?</p>
    <p>Is an event forbidden?</p>
    <p>What are the known facts?</p>
    <p>What are the known policies?</p>
    <p>Who or what is being described?</p>
    <p>What is the characteristic?</p>
    <p>Does the person, item, or action have the characteristic?</p>
    <p>When does this description apply?</p>
    <p>yes no</p>
    <p>From:</p>
    <p>dd/mm/yy or now</p>
    <p>To:</p>
    <p>dd/mm/yy or unknown</p>
    <p>or always</p>
    <p>Done</p>
    <p>(e.g. George Smith, Rhodes Hall)</p>
    <p>(e.g. librarian, building)</p>
    <p>Riccardo Focardi</p>
    <p>Program Chair</p>
    <p>Abort</p>
  </div>
  <div class="page">
    <p>Give Permission We tell you whats allowed and whats not sign in | help</p>
    <p>Home</p>
    <p>Facts Describe a person, item, or action.</p>
    <p>Relate one person, item, or action to another.</p>
    <p>Record an event.</p>
    <p>Modify the fact database.</p>
    <p>Policies  Give permission.</p>
    <p>Deny permission.</p>
    <p>Modify the policy database.</p>
    <p>Queries Is an event allowed?</p>
    <p>Is an event forbidden?</p>
    <p>What are the known facts?</p>
    <p>What are the known policies?</p>
    <p>Who is being given permission? Anyone who meets the following description:</p>
    <p>&lt;policy applies to everyone&gt;</p>
    <p>Right-click in scrollbars to add/remove requirements.</p>
    <p>Which actions are being regulated? Any action that meets the following description:</p>
    <p>&lt;policy applies to every action&gt;</p>
    <p>Are there other conditions that must hold for the policy to apply?</p>
    <p>&lt;no other conditions apply&gt;</p>
    <p>Done Abort</p>
  </div>
</Presentation>
