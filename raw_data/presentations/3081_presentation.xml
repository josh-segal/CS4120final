<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>TCP Meets Mobile Code</p>
    <p>Parveen Patel David Wetherall Jay Lepreau Andrew Whitaker (Univ. of Utah) (Univ. of Washington)</p>
    <p>The Key Idea</p>
    <p>! Transport protocols, such as TCP, need a better upgrade mechanism</p>
    <p>! Untrusted mobile code will work!</p>
  </div>
  <div class="page">
    <p>TCP is a work-in-progress</p>
    <p>! A steady stream of TCP extensions and new transport protocols</p>
    <p>! TCP SACK (1996) ! TCP Connection Migration (2000) ! ECN and ECN nonce (2001) ! TCP Nice (2002) ! TFRC (2000) ! DCCP (2002) ! SCTP (2002) !</p>
    <p>Upgrading TCP takes forever ! Research and simulation ! Prototype ! Standards committee ! Implementation in OS 1 ! Implementation in OS 2 !  ! Addition into standard build OS 1 ! Addition into standard build OS 2 !  ! Enable by default ! Enable by default on peer</p>
  </div>
  <div class="page">
    <p>Lousy fallback: one-ended change</p>
    <p>! Immediate deployment for self benefit</p>
    <p>! Does not always work &quot; Cant exchange new information</p>
    <p>! Does not work very well &quot; Lose the benefit of cooperation between both ends</p>
    <p>Survey of transport extensions</p>
    <p>Twoended</p>
    <p>Benefit from two</p>
    <p>ended</p>
    <p>Oneended</p>
    <p>Two-ended</p>
    <p>Benefit from two-ended</p>
    <p>One-ended</p>
  </div>
  <div class="page">
    <p>Our Solution: XTCP ! Connection peers can upgrade each other</p>
    <p>with new transport protocols using mobile code</p>
    <p>! Deployment at one end is all we need !</p>
    <p>Upgrading with XTCP is faster ! Research and simulation ! Prototype ! Standards committee ! Implementation to the XTCP API ! Implementation in OS 1 ! Implementation in OS 2 !  ! Addition into standard build OS 1 ! Addition into standard build OS 2 !  ! Enable by default ! Enable by default on peer</p>
  </div>
  <div class="page">
    <p>XTCP usage scenario #1</p>
    <p>(Download TCP-HP)</p>
    <p>Server Client</p>
    <p>! A web server pushes a high-performance TCP to its clients the first time they connect</p>
    <p>XTCP usage scenario #2</p>
    <p>(Download TCP-Migrate)</p>
    <p>Server Client</p>
    <p>! A mobile client pushes TCP connection migration [MobiCom 00] to a server to allow itself to move</p>
  </div>
  <div class="page">
    <p>XTCP usage scenario #3</p>
    <p>(With TCP-Nice)</p>
    <p>Host A Host B</p>
    <p>! A user installs TCP nice [OSDI 02] to support background data transfer</p>
    <p>Will it work ?</p>
    <p>! XTCP sounds similar to the challenging domain of active networking</p>
    <p>! Challenges can be met in this restricted domain</p>
  </div>
  <div class="page">
    <p>XTCP Challenges 1. Host safety  must isolate and limit</p>
    <p>resource consumption</p>
    <p>XTCP Design</p>
    <p>Sockets Layer</p>
    <p>XTCP</p>
    <p>Network Layer</p>
    <p>APPLICATION 1</p>
    <p>Download manager</p>
    <p>Compiler</p>
    <p>TCP-B</p>
    <p>TCP-A</p>
    <p>XTCP SANDBOX</p>
    <p>XTCP API</p>
  </div>
  <div class="page">
    <p>! No shared state between extensions &quot;Easy resource accounting &quot;Easy termination</p>
    <p>! Memory safety: type-safety of Cyclone</p>
    <p>! CPU timer-based CPU protection</p>
    <p>! Well-defined notion of network safety &quot;TCP-friendliness [RFC 2914] &quot;TCP response function is mathematically</p>
    <p>defined [SIGCOMM 98]</p>
    <p>! Enforcement without trusting transports &quot;Adapt ECN nonce mechanism is used for</p>
    <p>validation [ICNP 01]</p>
  </div>
  <div class="page">
    <p>Nonce Mechanism [unstrusted red, trusted green components]</p>
    <p>XTCP</p>
    <p>TCP-A</p>
    <p>datagram with nonce</p>
    <p>send (seq_no)</p>
    <p>XTCP</p>
    <p>TCP-A</p>
    <p>Datagram with nonce</p>
    <p>sender receiver</p>
    <p>Nonce Mechanism</p>
    <p>XTCP</p>
    <p>TCP-A</p>
    <p>ack+nonce</p>
    <p>XTCP</p>
    <p>TCP-A</p>
    <p>send_ack</p>
    <p>ack+nonce</p>
    <p>sender receiver</p>
    <p>ack (seq_no, nonce)</p>
  </div>
  <div class="page">
    <p>! Connections proceed without delays &quot;Code is downloaded out-of-band &quot;Benefits later connections</p>
    <p>! Efficient to share data between the Cbased kernel and Cyclone code &quot;No garbage collection &quot;Lightweight runtime</p>
    <p>Status ! Prototype in FreeBSD 4.7</p>
    <p>! Modest memory and CPU cost &quot;CPU cost is 80% more than base TCP on the</p>
    <p>sender side, without any optimizations.</p>
    <p>! Ported TCP Friendly UDP, TCP NewReno and TCP SACK to the XTCP API</p>
    <p>! User-level version in progress</p>
  </div>
  <div class="page">
    <p>It works! UDP</p>
    <p>It works! TCP</p>
  </div>
  <div class="page">
    <p>Open research issues ! TCP rate policing function</p>
    <p>&quot;Quickly detect unresponsive extensions &quot;Admit all responsive extensions</p>
    <p>! XTCP API &quot;Must be sufficient and portable</p>
    <p>Conclusions ! Transport protocols need self upgrade</p>
    <p>mechanism</p>
    <p>! Mobile code works ! &quot;Constrained domain and recent advances</p>
    <p>! Mathematical definition of TCP response function (1998)</p>
    <p>! Cyclone (2002)</p>
  </div>
  <div class="page">
    <p>END OF TALK</p>
    <p>.</p>
    <p>BACKUP/DETAIL SLIDES</p>
    <p>Policies</p>
    <p>! Applications can use socket options ! Administrators can set policies ! Policy daemons can collaborate</p>
  </div>
  <div class="page">
    <p>Granularity of extensions ! Transport protocols are written to the</p>
    <p>XTCP API ! Complete transport protocols are</p>
    <p>transferred over the network &quot;Retains the way protocols are written now &quot;Maximum flexibility &quot;Maximum simplicity &quot;Code is not large: 85K compressed source</p>
    <p>Connection setup and code loading</p>
  </div>
  <div class="page">
    <p>Network safety</p>
    <p>! TCP friendly network access API</p>
    <p>&quot;xtcp_net_send (seq_no) &quot;xtcp_net_resend (seq_no) &quot;xtcp_net_ack (seq_no, nonce) &quot;xtcp_net_acksum (seq_no, nonce_sum)</p>
    <p>A Fourth Challenge: Deployment of XTCP framework</p>
    <p>! Benefits self ! Can only harm self ! Deployment only needed at end points ! TCP-friendliness is non-threatening</p>
  </div>
</Presentation>
