<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Vsys: A programmable sudo</p>
    <p>Sapan Bhatia (Princeton), Giovanni Di Staasi (University of Naples), Thom Haddow (Imperial College), Steve Muir</p>
    <p>(Juniper), Andy Bavier (Princeton), Larry Peterson (Princeton)</p>
  </div>
  <div class="page">
    <p>What is Vsys</p>
    <p>Tool for restricting access to privileged operations</p>
    <p>Sometimes user demands not conveniently satisfied by default security model</p>
    <p>Vsys helps satisfy these demands safely</p>
    <p>Operations:  Simple: Open a raw socket, Access system logs  Complex: Create private overlay network, shape traffic</p>
  </div>
  <div class="page">
    <p>Vsys as a tool  Typically runs in a chroot environment</p>
    <p>Outside chroot: privilege extensions implemented as executable files</p>
    <p>Inside chroot: FIFO pipes, UNIX domain sockets</p>
    <p>Users use these to communicate with extensions by reading from and writing to to these</p>
  </div>
  <div class="page">
    <p>Vsys as a tool  Typically runs in a chroot environment</p>
    <p>Outside chroot: privilege extensions implemented as executable files</p>
    <p>Inside chroot: FIFO pipes, UNIX domain sockets</p>
    <p>Users use these to communicate with extensions by reading from and writing to to these</p>
    <p>Advanced:  Access control policies (ACPs)  Passing control structures (sockets, file descriptors)</p>
  </div>
  <div class="page">
    <p>Vsys architecture User</p>
  </div>
  <div class="page">
    <p>Vsys architecture User</p>
    <p>Open pipe or socket</p>
  </div>
  <div class="page">
    <p>Vsys architecture User</p>
    <p>Vsys Extension</p>
  </div>
  <div class="page">
    <p>Vsys architecture User</p>
    <p>Vsys Extension</p>
    <p>Ptrace()</p>
  </div>
  <div class="page">
    <p>Vsys architecture User</p>
    <p>Vsys Extension</p>
    <p>Ptrace()</p>
    <p>Syscall</p>
    <p>ACP</p>
  </div>
  <div class="page">
    <p>Vsys architecture User</p>
    <p>Vsys Extension</p>
    <p>Ptrace()</p>
    <p>ACP</p>
    <p>Exec</p>
  </div>
  <div class="page">
    <p>Vsys as an approach  Dont extend the OS</p>
    <p>Reuse existing building blocks for isolation:  Processes  File descriptors  Network interfaces  Packet tags</p>
    <p>Combine them:  Network interface + Packet tag = Isolated Interface  Raw socket + Packet tag = Isolated raw socket</p>
  </div>
  <div class="page">
    <p>Example: Sliceip  Version of ip route tool open to non</p>
    <p>administrators</p>
    <p>Creates user-specific routes User side Vsys side</p>
    <p>Request new virtual interface</p>
    <p>Allocate private IP, Set interface name, configure firewall rules</p>
    <p>Request new route Modify route to apply to users packets and/or interface</p>
  </div>
  <div class="page">
    <p>Other Vsys extensions on PlanetLab</p>
    <p>Fusemount: Mount and use userspace filesystems created by other users</p>
    <p>Socketops:  Large TCP/UDP buffers  Raw sockets  Control sockets</p>
    <p>(e.g. read packet headers from kernel)  QoS settings  Etc.</p>
    <p>Vtuntap: Create and manage virtual devices</p>
  </div>
  <div class="page">
    <p>Lesson: Creating new OS abstractions is hard</p>
    <p>Easy to prototype, hard to run over long periods</p>
    <p>E.g. Vsys networking Vs Linux namespaces</p>
    <p>Initially went with Linux namespaces project</p>
    <p>Disadvantages:  Bad interactions with other components (iptables,</p>
    <p>linux-vservers)  Bugs  Missing tool and library support</p>
    <p>[ BONUS SLIDE]</p>
  </div>
  <div class="page">
    <p>Conclusion  Vsys is a flexible sudo</p>
    <p>Rapid deployment of new isolated functionalities</p>
    <p>Encourages grassroot abstractions</p>
    <p>Experience: supported surprisingly powerful extensions</p>
    <p>Highly successful as tool and approach  50+ privilege extensions  Supported papers and PHD dissertions: NIPS, NSDI, OSDI,</p>
    <p>10+ external developers</p>
  </div>
</Presentation>
