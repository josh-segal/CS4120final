<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Verifying remote computations using PCPs</p>
    <p>Srinath Setty, Andrew Blumberg, and Michael Walfish UT Austin</p>
  </div>
  <div class="page">
    <p>Can we build this?</p>
    <p>Client F(x)</p>
    <p>y</p>
    <p>Computation</p>
    <p>output</p>
    <p>Server</p>
  </div>
  <div class="page">
    <p>Can we build this?</p>
    <p>Client F(x)</p>
    <p>y</p>
    <p>Computation</p>
    <p>output</p>
    <p>Server</p>
    <p>Check if y equals F(x) without re-executing</p>
  </div>
  <div class="page">
    <p>Can we build this?</p>
    <p>Client F(x)</p>
    <p>y</p>
    <p>Computation</p>
    <p>output</p>
    <p>Server</p>
    <p>Check if y equals F(x) without re-executing  Unconditional: no assumptions</p>
  </div>
  <div class="page">
    <p>Why should we build this?</p>
    <p>Offloading computations to the cloud  Outsourcing computations to volunteer</p>
    <p>machines (Enigma@home, Einstein@home, ...)</p>
  </div>
  <div class="page">
    <p>How can we solve this problem in principle?</p>
    <p>Probabilistically checkable proofs (PCPs) and argument systems [Arora et al. JACM, 1998]</p>
  </div>
  <div class="page">
    <p>How can we solve this problem in principle?</p>
    <p>Probabilistically checkable proofs (PCPs) and argument systems [Arora et al. JACM, 1998]</p>
    <p>PCP theorem: server proves that y = F(x) and client validates without re-executing</p>
  </div>
  <div class="page">
    <p>We have a conflict</p>
    <p>PCPs are mind-blowing</p>
  </div>
  <div class="page">
    <p>We have a conflict</p>
    <p>PCPs are mind-blowing</p>
    <p>But the costs are also mind-blowing</p>
  </div>
  <div class="page">
    <p>We have a conflict</p>
    <p>PCPs are mind-blowing</p>
    <p>But the costs are also mind-blowing  For polynomial evaluation (700</p>
    <p>variables), the server takes 105 years!</p>
  </div>
  <div class="page">
    <p>We have a conflict</p>
    <p>PCPs are mind-blowing</p>
    <p>But the costs are also mind-blowing  For polynomial evaluation (700</p>
    <p>variables), the server takes 105 years!</p>
    <p>Our research program: try to make PCPs practical</p>
  </div>
  <div class="page">
    <p>Rest of this talk:</p>
    <p>Overview of PCPs  Our refinements</p>
  </div>
  <div class="page">
    <p>PCPs from 200,000 feet</p>
    <p>ServerClient</p>
    <p>Boolean circuit</p>
    <p>F(x)</p>
    <p>F(x)</p>
    <p>y</p>
  </div>
  <div class="page">
    <p>PCPs from 200,000 feet</p>
    <p>ServerClient</p>
    <p>Proof</p>
    <p>Boolean circuit</p>
    <p>F(x)</p>
    <p>F(x)</p>
    <p>y</p>
  </div>
  <div class="page">
    <p>PCPs from 200,000 feet</p>
    <p>ServerClient</p>
    <p>Proof</p>
    <p>Proof</p>
    <p>Boolean circuit</p>
    <p>F(x)</p>
    <p>F(x)</p>
    <p>y</p>
  </div>
  <div class="page">
    <p>PCPs from 200,000 feet</p>
    <p>ServerClient</p>
    <p>Proof</p>
    <p>Random locations</p>
    <p>Proof</p>
    <p>Boolean circuit</p>
    <p>F(x)</p>
    <p>F(x)</p>
    <p>y</p>
  </div>
  <div class="page">
    <p>PCPs from 200,000 feet</p>
    <p>ServerClient</p>
    <p>ProofProof</p>
    <p>Random locations</p>
    <p>Chosen values</p>
    <p>Proof</p>
    <p>Boolean circuit</p>
    <p>F(x)</p>
    <p>F(x)</p>
    <p>y</p>
  </div>
  <div class="page">
    <p>PCPs from 200,000 feet</p>
    <p>ServerClient</p>
    <p>ProofProof</p>
    <p>Accept/ Reject</p>
    <p>Random locations</p>
    <p>Tests</p>
    <p>Chosen values</p>
    <p>Proof</p>
    <p>Boolean circuit</p>
    <p>F(x)</p>
    <p>F(x)</p>
    <p>y</p>
  </div>
  <div class="page">
    <p>Our attempt to make PCPs practical</p>
    <p>Build on the work that introduces interaction [Kilian CRYPTO95, Ishai et al. CC07]</p>
    <p>Use a higher-level abstraction to represent computations</p>
    <p>Reduces cost by 8 orders of magnitude</p>
    <p>Apply a divide-and-conquer technique  Reduces cost by 2 orders of magnitude</p>
  </div>
  <div class="page">
    <p>We build on an interactive variant of PCPs</p>
    <p>The server proof is a generating function  The server responds to queries by</p>
    <p>evaluating the function</p>
    <p>The client binds the server to its function using cryptographic commitment</p>
    <p>[Ishai et al. CC07]</p>
  </div>
  <div class="page">
    <p>Can we use a higherlevel abstraction?</p>
    <p>Use arithmetic circuits instead of Boolean circuits</p>
    <p>Savings:  8 orders of magnitude at the server  4 orders of magnitude at the client</p>
  </div>
  <div class="page">
    <p>Can we apply a divideand-conquer strategy?</p>
    <p>Decompose the computation into parallel pieces</p>
    <p>The client batch-verifies the computation  Saves two orders of magnitude in costs</p>
  </div>
  <div class="page">
    <p>Examples that we implemented</p>
    <p>Polynomial evaluation  Matrix multiplication  Fast Fourier Transform (FFT)  Image filtering with convolution matrices</p>
  </div>
  <div class="page">
    <p>Example savings For polynomial evaluation with 700 variables</p>
    <p>(Local execution time: 164 msec)</p>
    <p>interactive baseline</p>
    <p>postrefinements</p>
    <p>Servers work 130,000 years 11.5 hours</p>
    <p>Clients work 940 sec 94 msec</p>
    <p>The scheme is near-practical</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Our refinements reduce costs by over 10 orders of magnitude</p>
    <p>More refinements are required to make the scheme fully practical</p>
    <p>Upshot: PCP-based verified computation can be a systems problem</p>
  </div>
</Presentation>
