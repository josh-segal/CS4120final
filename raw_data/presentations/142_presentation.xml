<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Diagnosing Performance Diagnosing Performance Overheads in the Xen Virtual Overheads in the Xen Virtual</p>
    <p>Machine EnvironmentMachine Environment</p>
    <p>Aravind Menon Aravind Menon Willy Willy</p>
    <p>ZwaenepoelZwaenepoel</p>
    <p>EPFL, EPFL, LausanneLausanne</p>
    <p>Jose Renato SantosJose Renato Santos</p>
    <p>Yoshio TurnerYoshio Turner</p>
    <p>G. (John) JanakiramanG. (John) Janakiraman</p>
    <p>HP Labs, Palo AltoHP Labs, Palo Alto</p>
  </div>
  <div class="page">
    <p>Virtual Machine Monitors Virtual Machine Monitors (VMM)(VMM)</p>
    <p>Increasing adoption for server Increasing adoption for server applicationsapplications  Server consolidation, co-located hostingServer consolidation, co-located hosting</p>
    <p>Virtualization can affect application Virtualization can affect application performance in unexpected waysperformance in unexpected ways</p>
  </div>
  <div class="page">
    <p>Web server performance in Web server performance in XenXen</p>
    <p>25-66% lower peak throughput than Linux 25-66% lower peak throughput than Linux depending on Xen configurationdepending on Xen configuration</p>
    <p>Need VM-aware profiling to diagnose causes Need VM-aware profiling to diagnose causes of performance degradationof performance degradation</p>
  </div>
  <div class="page">
    <p>ContributionsContributions</p>
    <p>Xenoprof  framework for VM-aware Xenoprof  framework for VM-aware profiling in Xenprofiling in Xen</p>
    <p>Understanding network virtualization Understanding network virtualization overheads in Xenoverheads in Xen</p>
    <p>Debugging performance anomaly Debugging performance anomaly using Xenoprofusing Xenoprof</p>
  </div>
  <div class="page">
    <p>OutlineOutline</p>
    <p>MotivationMotivation  XenoprofXenoprof  Network virtualization overheads in Network virtualization overheads in</p>
    <p>XenXen  Debugging using XenoprofDebugging using Xenoprof  ConclusionsConclusions</p>
  </div>
  <div class="page">
    <p>Xenoprof  profiling for VMsXenoprof  profiling for VMs</p>
    <p>Profile applications running in VM Profile applications running in VM environmentsenvironments  Contribution of different domains (VMs) and Contribution of different domains (VMs) and</p>
    <p>the VMM (Xen) routines to execution costthe VMM (Xen) routines to execution cost  Profile various hardware eventsProfile various hardware events</p>
    <p>Example outputExample output Function name %Instructions ModuleFunction name %Instructions Module -------------------------------------------------------------------------------------------------------------------------------------------</p>
    <p>mmu_update 13 Xen (VMM)mmu_update 13 Xen (VMM)</p>
    <p>br_handle_frame 8 driver domain (Dom 0)br_handle_frame 8 driver domain (Dom 0)</p>
    <p>tcp_v4_rcv 5 guest domain (Dom 1)tcp_v4_rcv 5 guest domain (Dom 1)</p>
  </div>
  <div class="page">
    <p>Xenoprof  architecture Xenoprof  architecture (brief)(brief)</p>
    <p>Extend existing profilers (OProfile) to use XenoprofExtend existing profilers (OProfile) to use Xenoprof  Xenoprof collects samples and coordinates profilers Xenoprof collects samples and coordinates profilers</p>
    <p>running in multiple domainsrunning in multiple domains</p>
    <p>Domain 0</p>
    <p>OProfile (extended )</p>
    <p>Xenoprof</p>
    <p>Domain 1</p>
    <p>OProfile (extended )</p>
    <p>Domain 2</p>
    <p>OProfile (extended )</p>
    <p>Domains (VMs)</p>
    <p>Xen VMM</p>
    <p>H/W performance counters</p>
  </div>
  <div class="page">
    <p>OutlineOutline</p>
    <p>MotivationMotivation  XenoprofXenoprof  Network virtualization overheads in Network virtualization overheads in</p>
    <p>XenXen  Debugging using XenoprofDebugging using Xenoprof  ConclusionsConclusions</p>
  </div>
  <div class="page">
    <p>Xen network I/O architectureXen network I/O architecture</p>
    <p>Privileged Privileged driver domaindriver domain controls physical NIC controls physical NIC</p>
    <p>Each unprivileged Each unprivileged guest domainguest domain uses virtual NIC uses virtual NIC connected to driver domain via Xen I/O Channelconnected to driver domain via Xen I/O Channel  Control: I/O descriptor ring (shared memory)Control: I/O descriptor ring (shared memory)  Data Transfer: Page remapping (no copying)Data Transfer: Page remapping (no copying)</p>
    <p>I/O Driver Domain Guest Domain</p>
    <p>I/O Channel</p>
    <p>NIC</p>
    <p>Bridg e</p>
    <p>vif1 vif2</p>
  </div>
  <div class="page">
    <p>Evaluated configurationsEvaluated configurations  Linux: no XenLinux: no Xen  Xen Driver:Xen Driver:</p>
    <p>run application in privileged driver domainrun application in privileged driver domain  Xen Guest:Xen Guest:</p>
    <p>run application in unprivileged guest run application in unprivileged guest domain interfaced to driver domain via I/O domain interfaced to driver domain via I/O channelchannel</p>
    <p>I/O Driver Domain Guest Domain</p>
    <p>I/O Channel</p>
    <p>NIC</p>
    <p>Bridg e</p>
    <p>vif1 vif2</p>
  </div>
  <div class="page">
    <p>Networking micro-Networking microbenchmarkbenchmark</p>
    <p>One streaming TCP connection per NIC (up to 4)One streaming TCP connection per NIC (up to 4)</p>
    <p>Driver receive throughput 75% of Linux throughputDriver receive throughput 75% of Linux throughput  Guest throughput 1/3Guest throughput 1/3rdrd to 1/5 to 1/5thth of Linux throughput of Linux throughput</p>
  </div>
  <div class="page">
    <p>Receive  Xen Driver Receive  Xen Driver overheadoverhead</p>
    <p>Profiling shows slower instruction execution with Profiling shows slower instruction execution with Xen Driver than w/Linux (both use 100% CPU)Xen Driver than w/Linux (both use 100% CPU)  Data TLB miss count 13 times higherData TLB miss count 13 times higher  Instruction TLB miss count 17 times higherInstruction TLB miss count 17 times higher</p>
    <p>Xen: 11% more instructions per byte transferred Xen: 11% more instructions per byte transferred (Xen virtual interrupts, driver hypercall) (Xen virtual interrupts, driver hypercall)</p>
  </div>
  <div class="page">
    <p>Receive  Xen Guest Receive  Xen Guest overheadoverhead</p>
    <p>Xen Guest configuration executes two times Xen Guest configuration executes two times as many instructions as Xen Driver as many instructions as Xen Driver configurationconfiguration  Driver domain (38%): overhead of bridgingDriver domain (38%): overhead of bridging  Xen (27%): overhead of page remappingXen (27%): overhead of page remapping</p>
    <p>I/O Driver Domain Guest Domain</p>
    <p>I/O Channel</p>
    <p>NIC</p>
    <p>Bridg e</p>
    <p>vif1 vif2</p>
  </div>
  <div class="page">
    <p>Transmit  Xen Guest Transmit  Xen Guest overheadoverhead</p>
    <p>Xen Guest: executes 6 times as many Xen Guest: executes 6 times as many instructions as Xen driver configurationinstructions as Xen driver configuration  Factor of 2 as in Receive caseFactor of 2 as in Receive case  Guest instructions increase 2.7 timesGuest instructions increase 2.7 times</p>
    <p>Virtual NIC (vif2) in guest does not support Virtual NIC (vif2) in guest does not support TCP offload capabilities of NIC TCP offload capabilities of NIC</p>
  </div>
  <div class="page">
    <p>Suggestions for improving Suggestions for improving XenXen</p>
    <p>Enable virtual NICs to utilize offload Enable virtual NICs to utilize offload capabilities of physical NICcapabilities of physical NIC</p>
    <p>Efficient support for packet demultiplexing Efficient support for packet demultiplexing in driver domain in driver domain</p>
  </div>
  <div class="page">
    <p>OutlineOutline</p>
    <p>MotivationMotivation  XenoprofXenoprof  Network virtualization overheads in Network virtualization overheads in</p>
    <p>XenXen  Debugging using XenoprofDebugging using Xenoprof  ConclusionsConclusions</p>
  </div>
  <div class="page">
    <p>Anomalous network behavior in Anomalous network behavior in XenXen</p>
    <p>TCP receive throughput in Xen changes with TCP receive throughput in Xen changes with application buffer size (slow Pentium III)application buffer size (slow Pentium III)</p>
  </div>
  <div class="page">
    <p>Debugging using XenoprofDebugging using Xenoprof  40% kernel execution overhead incurred in 40% kernel execution overhead incurred in</p>
    <p>socket buffer de-fragmenting routines socket buffer de-fragmenting routines</p>
  </div>
  <div class="page">
    <p>De-fragmenting socket De-fragmenting socket buffersbuffers</p>
    <p>Linux: insignificant fragmentation with streaming workloadLinux: insignificant fragmentation with streaming workload</p>
    <p>Socket receive queue</p>
    <p>Defragment</p>
    <p>Socket buffer (4 KB)</p>
    <p>Data packet (MTU)</p>
    <p>Xenolinux (Linux on Xen)Xenolinux (Linux on Xen)  Received packets: 1500 bytes (MTU) out of 4 KB socket Received packets: 1500 bytes (MTU) out of 4 KB socket</p>
    <p>bufferbuffer  Page-sized socket buffers support remapping over I/O Page-sized socket buffers support remapping over I/O</p>
    <p>channelchannel</p>
  </div>
  <div class="page">
    <p>ConclusionsConclusions</p>
    <p>Xenoprof useful for identifying major Xenoprof useful for identifying major overheads in Xenoverheads in Xen</p>
    <p>Xenoprof to be included in official Xenoprof to be included in official Xen and OProfile releasesXen and OProfile releases</p>
    <p>Where to get it: Where to get it: http://xenoprof.sourceforge.nethttp://xenoprof.sourceforge.net</p>
  </div>
</Presentation>
