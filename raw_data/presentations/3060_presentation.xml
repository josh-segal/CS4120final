<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Dynamic Query Re-planning using QOOP</p>
    <p>Kshiteej Mahajanw, Mosharaf Chowdhurym, Aditya Akellaw, Shuchi Chawlaw</p>
  </div>
  <div class="page">
    <p>What is QOOP?</p>
    <p>QOOP is a distributed data analytics system that performs well under resource volatilities</p>
    <p>Core Ideas</p>
    <p>Re-architect the data analytics system stack</p>
    <p>Enable Dynamic Query Re-planning</p>
    <p>Simplify Scheduler</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Overview  Distributed Data Analytics Systems</p>
    <p>Resource Volatilities</p>
    <p>Overcoming Inefficiency #1  Static Query Planner</p>
    <p>QOOPs Dynamic QEP Switching</p>
    <p>Overcoming Inefficiency #2  Complex and Opaque Scheduler</p>
    <p>QOOPs Scheduler Choice</p>
    <p>Implementation</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Overview  Distributed Data Analytics Job = SQL Query</p>
    <p>Resource Cluster</p>
    <p>Query Planner</p>
    <p>Execution Engine</p>
    <p>Scheduler</p>
    <p>Evaluate</p>
    <p>Query Execution Plans</p>
    <p>(QEP)</p>
    <p>Resource Requests Resource Allocations</p>
  </div>
  <div class="page">
    <p>Overview  Distributed Data Analytics Job = SQL Query</p>
    <p>Resource Cluster</p>
    <p>Query Planner</p>
    <p>Execution Engine</p>
    <p>Scheduler</p>
    <p>Resource Requests Resource Allocations</p>
    <p>Choose optimal QEP</p>
  </div>
  <div class="page">
    <p>Overview  Resource Volatilities</p>
    <p>Job = SQL Query</p>
    <p>Resource Share</p>
    <p>more or less fixed</p>
    <p>Resource Volatilities</p>
    <p>significantly changes over time</p>
  </div>
  <div class="page">
    <p>Overview  Resource Volatility; Spot Market Single Job</p>
    <p>Spot Market Resource Cluster</p>
    <p>bid $</p>
    <p>bid $ &gt; market $</p>
    <p>bid $ &lt; market $</p>
  </div>
  <div class="page">
    <p>Overview  Resource Volatility; Spot Market</p>
    <p>Fixed budget cost-saving bidding strategy in AWS Spot Market</p>
    <p>20% resource volatile event  20% change in #machines over time</p>
    <p>50 such events in a 5-hour span</p>
  </div>
  <div class="page">
    <p>Overview  Resource Volatility; Small Cluster Job1 Job2</p>
    <p>Small Shared</p>
    <p>Resource Cluster</p>
    <p>Job1s</p>
    <p>Resource Share</p>
    <p>Resource</p>
    <p>Contention</p>
    <p>Only</p>
    <p>Job1</p>
    <p>Job2 enters</p>
    <p>Job2 exits</p>
  </div>
  <div class="page">
    <p>Overview  Resource Volatility; Small Cluster</p>
    <p>TPC-DS online workload + Carbyne (OSDI16) scheduler managing 600 cores</p>
    <p>38% queries experience at least one 20% resource volatility event</p>
  </div>
  <div class="page">
    <p>Motivating QOOP Job = SQL Query</p>
    <p>Resource Cluster</p>
    <p>Query Planner</p>
    <p>Execution Engine</p>
    <p>Scheduler</p>
    <p>Resource Volatilities</p>
    <p>How well do</p>
    <p>Distributed Data Analytics Systems</p>
    <p>perform under Resource Volatilities?</p>
  </div>
  <div class="page">
    <p>Motivating QOOP Job = SQL Query</p>
    <p>Query Planner</p>
    <p>Execution Engine</p>
    <p>Scheduler</p>
    <p>Static</p>
    <p>Optimal QEP</p>
    <p>is fixed</p>
    <p>Complex, Opaque</p>
    <p>No</p>
    <p>Resource Volatility</p>
    <p>Feedback</p>
  </div>
  <div class="page">
    <p>Simple Scheduler</p>
    <p>Design</p>
    <p>Motivating QOOP Job = SQL Query</p>
    <p>Query Planner</p>
    <p>Execution Engine</p>
    <p>Scheduler</p>
    <p>Dynamic</p>
    <p>Re-architect</p>
    <p>the stack</p>
    <p>Optimal QEP</p>
    <p>changes greedily Resource Volatility</p>
    <p>Feedback</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Overview  Distributed Data Analytics Systems</p>
    <p>Resource Volatilities</p>
    <p>Overcoming Inefficiency #1  Static Query Planner</p>
    <p>QOOPs Dynamic QEP Switching</p>
    <p>Overcoming Inefficiency #2  Complex and Opaque Scheduler</p>
    <p>QOOPs Scheduler Choice</p>
    <p>Implementation</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Static Query Planner; Example</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AB</p>
    <p>CD</p>
    <p>ABCD</p>
    <p>A join B join C join D</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AC</p>
    <p>BD</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AB</p>
    <p>ABC</p>
    <p>AB</p>
    <p>CD</p>
    <p>Three alternate Query Execution Plans (QEPs)</p>
    <p>each with different join order</p>
  </div>
  <div class="page">
    <p>Static Query Planner; Terminology</p>
    <p>What is a QEP?</p>
    <p>Directed Acyclic Graph (DAG)</p>
    <p>What is a Task?</p>
    <p>TaskResource</p>
    <p>Time</p>
    <p>Task</p>
    <p>Task</p>
    <p>Task</p>
    <p>Task</p>
    <p>Task</p>
    <p>Task</p>
    <p>Task</p>
    <p>Vertex: Task Edge: Dependency</p>
    <p>Work</p>
  </div>
  <div class="page">
    <p>Static Query Planner; Example</p>
    <p>Choose an optimal QEP</p>
    <p>Optimal  reduce query running time</p>
    <p>A join B join C join D</p>
  </div>
  <div class="page">
    <p>Clarinet (OSDI 16) Query Planner</p>
    <p>Estimates network IO, memory, and compute resources just before job execution</p>
    <p>Estimates running time of each QEP by simulating execution</p>
    <p>Chooses QEP with minimum estimated running time</p>
    <p>Static Query Planner; Clarinet</p>
  </div>
  <div class="page">
    <p>Given r amount of resources at time t = 0</p>
    <p>Clarinet calculates running time of each QEP</p>
    <p>Static Query Planner; Clarinet</p>
    <p>Time</p>
    <p>Resource</p>
    <p>r A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AB</p>
    <p>CD</p>
    <p>ABCD</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AB</p>
    <p>CD</p>
    <p>ABCD</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AB</p>
    <p>CD</p>
    <p>ABCD</p>
    <p>Time=</p>
  </div>
  <div class="page">
    <p>Given r amount of resources at time t = 0</p>
    <p>Clarinet calculates running time of each QEP</p>
    <p>Static Query Planner; Clarinet</p>
    <p>Time</p>
    <p>Resource</p>
    <p>r A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AB</p>
    <p>ABC</p>
    <p>AB</p>
    <p>CD</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AB</p>
    <p>ABC</p>
    <p>AB</p>
    <p>CD</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AB ABC AB</p>
    <p>CD</p>
    <p>Time=</p>
    <p>Time=</p>
  </div>
  <div class="page">
    <p>Given r amount of resources at time t = 0</p>
    <p>Clarinet calculates running time of each QEP</p>
    <p>Static Query Planner; Clarinet</p>
    <p>Time</p>
    <p>Resource</p>
    <p>r Time=</p>
    <p>Time=</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AC</p>
    <p>BD</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AC</p>
    <p>BD</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AC</p>
    <p>BD</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D 5</p>
    <p>Time=</p>
  </div>
  <div class="page">
    <p>Given r amount of resources at time t = 0</p>
    <p>Clarinet calculates running time of each QEP</p>
    <p>Clarinet chooses Blue Plan</p>
    <p>However this choice is static and does not change during jobs lifetime</p>
    <p>Static Query Planner</p>
    <p>Time=</p>
    <p>Time=</p>
    <p>Time=</p>
  </div>
  <div class="page">
    <p>What if the amount of resources changes from r to r at time t = 3?</p>
    <p>Static Query Planner; Bad Outcomes</p>
    <p>Time</p>
    <p>Resource</p>
    <p>r</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AC</p>
    <p>BD</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AC</p>
    <p>BD</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AC</p>
    <p>BD</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>Time= 5 Time=</p>
    <p>r</p>
    <p>Clarinet</p>
    <p>Starvation</p>
    <p>Sub-optimal time</p>
    <p>Unbounded work</p>
  </div>
  <div class="page">
    <p>What if at t = 3 we switch to the Green plan</p>
    <p>Overcome starvation</p>
    <p>Motivating QOOPs Dynamic QEP switching</p>
    <p>Time</p>
    <p>Resource</p>
    <p>r</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>r</p>
    <p>CD A</p>
    <p>B</p>
    <p>C</p>
    <p>D AB ABCD</p>
    <p>Query Execution Plan switching</p>
    <p>can be beneficial</p>
    <p>Time= 12</p>
  </div>
  <div class="page">
    <p>Static QEP  under adversarial resource volatilities can lead to bad outcomes  Sub-Optimal behavior  Starvation  Unbounded work</p>
    <p>To overcome  QOOP proposes dynamic QEP switching   Backtracking  Checkpointing  Greedy behavior</p>
    <p>QOOP  Dynamic QEP switching</p>
  </div>
  <div class="page">
    <p>Switch from the Blue QEP to the Green QEP</p>
    <p>Backtracking  sacrifice current work and redo work in prior stages</p>
    <p>Dynamic QEP switching; Backtracking</p>
    <p>backtrack</p>
    <p>sacrifice</p>
    <p>partial work</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>repeat work from</p>
    <p>prior stages</p>
  </div>
  <div class="page">
    <p>Switch from the Blue QEP to the Green QEP</p>
    <p>Backtracking  sacrifice current work and redo work in prior stages</p>
    <p>Dynamic QEP switching; Backtracking</p>
    <p>backtrack</p>
    <p>sacrifice</p>
    <p>partial work</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>repeat work from</p>
    <p>prior stages</p>
    <p>Only re-plan future work?</p>
  </div>
  <div class="page">
    <p>Switch from the Blue QEP to the Green QEP</p>
    <p>Backtracking  sacrifice current work and redo work in prior stages</p>
    <p>Dynamic QEP switching; Backtracking</p>
    <p>backtrack</p>
    <p>sacrifice</p>
    <p>partial work</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>repeat work from</p>
    <p>prior stages</p>
    <p>Only re-plan future work? Backtracking essential to avoid</p>
    <p>bad outcomes</p>
  </div>
  <div class="page">
    <p>Switch from the Blue QEP to the Green QEP</p>
    <p>Backtracking  sacrifice current work and redo work in prior stages</p>
    <p>Dynamic QEP switching; Backtracking</p>
    <p>backtrack</p>
    <p>sacrifice</p>
    <p>partial work</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>repeat work from</p>
    <p>prior stages</p>
    <p>Backtracking essential to avoid</p>
    <p>bad outcomes</p>
    <p>What if we keep repeating work</p>
    <p>in an unbounded manner?</p>
  </div>
  <div class="page">
    <p>Checkpoint and resume from checkpoints to bound work</p>
    <p>Switch to Green QEP resumes from checkpoint</p>
    <p>Dynamic QEP switching; Checkpointing</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>bound repeated</p>
    <p>work and resume</p>
    <p>from checkpoint</p>
  </div>
  <div class="page">
    <p>Checkpoint and resume from checkpoints to bound work</p>
    <p>Switch to Green QEP resumes from checkpoint</p>
    <p>Dynamic QEP switching; Checkpointing</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>Which QEP to switch to?</p>
    <p>bound repeated</p>
    <p>work and resume</p>
    <p>from checkpoint</p>
  </div>
  <div class="page">
    <p>Switch to QEP (red) with least running time in current resources</p>
    <p>Dynamic QEP switching; Greedy</p>
    <p>Time</p>
    <p>r</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>r</p>
    <p>CDAB ABCD</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AB</p>
    <p>CD</p>
    <p>ABCD</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AB</p>
    <p>ABC A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AB ABC AB</p>
    <p>CD</p>
  </div>
  <div class="page">
    <p>Switch to QEP (red) with least running time in current resources</p>
    <p>Dynamic QEP switching; Greedy</p>
    <p>Time</p>
    <p>r</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>r</p>
    <p>CDAB ABCD</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AB</p>
    <p>CD</p>
    <p>ABCD</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AB</p>
    <p>ABC A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AB ABC AB</p>
    <p>CD</p>
    <p>Intuition  Without knowledge of future</p>
    <p>resource volatilities,</p>
    <p>greedily maximize current progress</p>
  </div>
  <div class="page">
    <p>Switch to QEP (red) with least running time in current resources</p>
    <p>Dynamic QEP switching; Greedy</p>
    <p>Time</p>
    <p>r</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>r</p>
    <p>CDAB ABCD</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AB</p>
    <p>CD</p>
    <p>ABCD</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AB</p>
    <p>ABC A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>AB ABC AB</p>
    <p>CD</p>
    <p>Intuition  Without knowledge of future</p>
    <p>resource volatilities,</p>
    <p>greedily maximize current progress</p>
    <p>Theorem: Greedy QEP switching has</p>
    <p>competitive ratio 2</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Overview  Distributed Data Analytics Systems</p>
    <p>Resource Volatilities</p>
    <p>Overcoming Inefficiency #1  Static Query Planner</p>
    <p>QOOPs Dynamic QEP Switching</p>
    <p>Overcoming Inefficiency #2  Complex and Opaque Scheduler</p>
    <p>QOOPs Scheduler Choice</p>
    <p>Implementation</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Complex and Opaque Schedulers</p>
    <p>Job</p>
    <p>Query</p>
    <p>Planner</p>
    <p>Execution</p>
    <p>Engine</p>
    <p>Scheduler Fairness</p>
    <p>Packing</p>
    <p>Job Completion Time</p>
    <p>Job</p>
    <p>Query</p>
    <p>Planner</p>
    <p>Execution</p>
    <p>Engine</p>
    <p>Increasing complexity of schedulers</p>
    <p>Manage multiple objectives  fairness, packing, job completion time</p>
    <p>QEP-dependent heuristics  Task Size  better fit (Tetris)</p>
    <p>Dependencies  critical path (Carbyne)</p>
  </div>
  <div class="page">
    <p>Complex and Opaque Schedulers</p>
    <p>Job</p>
    <p>Query</p>
    <p>Planner</p>
    <p>Execution</p>
    <p>Engine</p>
    <p>Scheduler Fairness</p>
    <p>Packing</p>
    <p>Job Completion Time</p>
    <p>Job</p>
    <p>Query</p>
    <p>Planner</p>
    <p>Execution</p>
    <p>Engine</p>
    <p>Increasing complexity of schedulers</p>
    <p>Manage multiple objectives  fairness, packing, job completion time</p>
    <p>QEP-dependent heuristics  Task Size  better fit (Tetris)</p>
    <p>Dependencies  critical path (Carbyne)</p>
    <p>Opaque  Hard to model job behavior</p>
    <p>if an alternate QEP is picked</p>
  </div>
  <div class="page">
    <p>Complex and Opaque Schedulers</p>
    <p>Job</p>
    <p>Query</p>
    <p>Planner</p>
    <p>Execution</p>
    <p>Engine</p>
    <p>Scheduler Fairness</p>
    <p>Packing</p>
    <p>Job Completion Time</p>
    <p>Job</p>
    <p>Query</p>
    <p>Planner</p>
    <p>Execution</p>
    <p>Engine</p>
    <p>Increasing complexity of schedulers</p>
    <p>Manage multiple objectives  fairness, packing, job completion time</p>
    <p>QEP-dependent heuristics  Task Size  better fit (Tetris)</p>
    <p>Dependencies  critical path (Carbyne)</p>
    <p>Opaque  Hard to model job behavior</p>
    <p>if an alternate QEP is picked</p>
    <p>Obstructs Dynamic QEP switching  requires ability</p>
    <p>to estimate alternate QEPs performance</p>
  </div>
  <div class="page">
    <p>QOOPs Scheduler Choice</p>
    <p>Job</p>
    <p>Query</p>
    <p>Planner</p>
    <p>Execution</p>
    <p>Engine</p>
    <p>Scheduler</p>
    <p>We go back to a simple QEP independent scheduler  simple max-min fair scheduler</p>
    <p>Each job gets a fair resource share guarantee</p>
    <p>Enables feedback about resource volatilities</p>
    <p>Supports dynamic QEP switching</p>
    <p>Resource Share</p>
    <p>=</p>
    <p>Total Resources</p>
    <p>/ # Active</p>
    <p>Queries</p>
  </div>
  <div class="page">
    <p>Resource Volatility</p>
    <p>feedback</p>
    <p>= change in resource</p>
    <p>share</p>
    <p>Scheduler</p>
    <p>Dynamic</p>
    <p>Simple Scheduler</p>
    <p>Design</p>
    <p>QOOP Overall Design Job = SQL Query</p>
    <p>Query Planner</p>
    <p>Execution Engine</p>
    <p>Re-architect</p>
    <p>the stack</p>
    <p>Greedy</p>
    <p>dynamic QEP switching</p>
    <p>Fairness</p>
    <p>Packing</p>
    <p>Job Completion Time</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Overview  Distributed Data Analytics Systems</p>
    <p>Resource Volatilities</p>
    <p>Overcoming Inefficiency #1  Static Query Planner</p>
    <p>QOOPs Dynamic QEP Switching</p>
    <p>Overcoming Inefficiency #2  Complex and Opaque Scheduler</p>
    <p>QOOPs Scheduler Choice</p>
    <p>Implementation</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>QOOP Implementation Job = SQL Query</p>
    <p>Resource Cluster</p>
    <p>Query Planner</p>
    <p>Execution Engine</p>
    <p>Scheduler</p>
    <p>New Resource</p>
    <p>Share</p>
    <p>Hive  Cache multiple</p>
    <p>QEPs and send to Tez</p>
    <p>Tez  estimate runtime</p>
    <p>of QEPs and greedy switch</p>
    <p>YARN  simple max</p>
    <p>min fair with feedback</p>
  </div>
  <div class="page">
    <p>QOOP Evaluation</p>
    <p>Testbed   20 bare-metal servers</p>
    <p>Micro-benchmark Workload   Single Query under different</p>
    <p>spot market resource volatility regimes</p>
    <p>Macro-benchmark Workload   200 queries randomly drawn from TPC-DS  Online arrival of queries following Poisson process</p>
    <p>Regime Volatility%</p>
    <p>Low &lt; 10%</p>
    <p>Medium 10% - 20%</p>
    <p>High &gt; 20%</p>
  </div>
  <div class="page">
    <p>QOOP Evaluation  Micro-benchmark</p>
    <p>Factor of Improvement = Running Time with Clarinet / Running Time with QOOP</p>
    <p>Gains increase with increasing resource volatility</p>
    <p>~10% jobs &gt; 4x gains</p>
    <p>~35% queries see no improvements   low complexity queries</p>
    <p>low duration queries</p>
  </div>
  <div class="page">
    <p>QOOP Evaluation  Micro-benchmark</p>
    <p>Increasing complexity i.e. number of joins =&gt; higher gains</p>
    <p>More alternative QEPs =&gt; higher likelihood to find a better QEP switch</p>
  </div>
  <div class="page">
    <p>QOOP Evaluation  Micro-benchmark</p>
    <p>Backtracking is beneficial</p>
  </div>
  <div class="page">
    <p>QOOP Evaluation  Micro-benchmark</p>
    <p>Backtracking is beneficial</p>
    <p>5.7% of all QEP switches involve backtracking  pre-dominantly due to high</p>
    <p>resource volatility</p>
    <p>at-most 2 stages deep</p>
  </div>
  <div class="page">
    <p>QOOP Evaluation  Macro-benchmark</p>
    <p>Job Performance</p>
    <p>Carbyne (OSDI16) + Clarinet (OSDI16)  two complex solutions put together</p>
    <p>Closest to ideal baseline SJF  even with a simple max-min fair scheduler</p>
    <p>Avg JCT (seconds)</p>
    <p>SJF Carbyne+Clarinet QOOP</p>
  </div>
  <div class="page">
    <p>QOOP Evaluation  Macro-benchmark</p>
    <p>Makespan (seconds)</p>
    <p>Tetris Carbyne+Clarinet QOOP</p>
    <p>Cluster Efficiency</p>
    <p>Carbyne (OSDI16) + Clarinet (OSDI16)  two complex solutions put together</p>
    <p>Closest to ideal baseline Tetris  even with a simple max-min fair scheduler</p>
  </div>
  <div class="page">
    <p>QOOP Evaluation  Macro-benchmark</p>
    <p>Makespan (seconds)</p>
    <p>Tetris Carbyne+Clarinet QOOP</p>
    <p>Cluster Efficiency</p>
    <p>Carbyne (OSDI16) + Clarinet (OSDI16)  two complex solutions put together</p>
    <p>Closest to ideal baseline Tetris  even with a simple max-min fair scheduler</p>
    <p>Each jobs greedy behavior is beneficial</p>
  </div>
  <div class="page">
    <p>QOOP Summary</p>
    <p>Resource volatilities exist in practice</p>
    <p>QOOP is suited for distributed data analytics under resource volatilities  Simple scheduler choice + feedback</p>
    <p>Dynamic QEP switching at the Query Planner</p>
    <p>Thank you!</p>
    <p>Poster #40</p>
    <p>Questions?</p>
  </div>
  <div class="page">
    <p>Backup Slide  Prevalence of Small Clusters</p>
    <p>#Machine % Users</p>
    <p>Reference: Mesosphere Survey, 2016.</p>
  </div>
</Presentation>
