<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>On Reshaping of Clustering Coefficients in Degreebased Topology Generators</p>
    <p>Presented by Derek Leonard</p>
    <p>Xiafeng Li, Derek Leonard, and Dmitri Loguinov Texas A&amp;M University</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Motivation</p>
    <p>Statement of the Problem</p>
    <p>Our Algorithm</p>
    <p>Sampling Technique</p>
    <p>Questions</p>
  </div>
  <div class="page">
    <p>Simulating the Internet</p>
    <p>Important for:  Understanding its evolution  Testing new protocols  Verifying the performance of network applications  Etc.</p>
    <p>The key is to create a random graph that has the same fundamental properties as the Internet.</p>
  </div>
  <div class="page">
    <p>Properties of Internet Graph</p>
    <p>The Internet is a small-world graph  Small diameter</p>
    <p>Bu et al. found that the average shortest path between pairs of nodes is small.</p>
    <p>High clustering coefficient  Measured by Bu et al. in 2002.</p>
    <p>Power-law degree distribution  First measured by Faloutsos et al. in 1999.</p>
  </div>
  <div class="page">
    <p>Properties of Internet Graph II</p>
    <p>The clustering of node v is</p>
    <p>where dv is the degree of node v and Tv is the number of triangles containing node v.</p>
    <p>The clustering of a graph is the average of v for all dv  2.</p>
  </div>
  <div class="page">
    <p>Properties of Internet Graph III</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D E</p>
  </div>
  <div class="page">
    <p>Properties of Internet Graph IV</p>
    <p>Sep-97 Jan-98 Apr-98 Jul-98 Nov-98 Feb-99 May-99 Aug-99 Dec-99 Mar-00 Time</p>
    <p>N um</p>
    <p>be r</p>
    <p>of N</p>
    <p>od es</p>
    <p>The Internet graph evolves over time</p>
    <p>Small-world graph properties are maintained regardless of the size of the Internet!</p>
  </div>
  <div class="page">
    <p>Properties of Internet Graph V</p>
    <p>Clustering coefficient as the Internet evolves.</p>
    <p>The clustering coefficient increases over time!</p>
    <p>C lu</p>
    <p>st er</p>
    <p>in g</p>
  </div>
  <div class="page">
    <p>Internet Graph Generators I</p>
    <p>Existing generators can be categorized into two groups  Non-evolving: Produces a graph with a fixed</p>
    <p>number of nodes n which cannot evolve.  Given expected degree (GED)  Power-law random graph (PLRG)</p>
    <p>Evolving: Allows for a variable number of nodes and maintains properties throughout evolution</p>
    <p>Barabasi-Albert (BA)</p>
  </div>
  <div class="page">
    <p>Internet Graph Generators II</p>
    <p>Given expected degree (GED)  N pre-assigned weights (w1, , wn) are drawn</p>
    <p>from a power-law distribution and distributed to n nodes in the graph</p>
    <p>Edge (i,j) exists with probability:</p>
  </div>
  <div class="page">
    <p>Internet Graph Generators III</p>
    <p>Power-law random graph (PLRG)  Weight wi drawn from a power-law distribution is</p>
    <p>assigned to node i for all n nodes</p>
    <p>Then wi virtual copies of node i are produced and edges are randomly created among all virtual copies of the nodes</p>
    <p>Merge the edges created by all virtual copies into the original n nodes</p>
    <p>Gives results similar to GED</p>
  </div>
  <div class="page">
    <p>Internet Graph Generators IV  Barabasi-Albert (BA)</p>
    <p>BA evolves at discrete time steps</p>
    <p>Initially, m0 nodes are created in the graph</p>
    <p>At each time step, a new node is added to the graph by attaching m edges to existing nodes chosen with probability:</p>
    <p>where di(t) is the degree of node i at time t.</p>
  </div>
  <div class="page">
    <p>Internet Graph Generators V  These three generators provide a</p>
    <p>representative example of the state of Internet graph generators</p>
    <p>They have two desirable common properties  They each produce power-law degree</p>
    <p>sequences  They exhibit low diameter</p>
    <p>However, they fail to exhibit the high clustering property of the Internet graph  In fact, clustering tends to zero as n increases</p>
  </div>
  <div class="page">
    <p>Internet Graph Generators VI  Clustering in GED decreases as n increases</p>
    <p>Number of nodes</p>
    <p>A ve</p>
    <p>ra g</p>
    <p>e C</p>
    <p>lu st</p>
    <p>er in</p>
    <p>g</p>
  </div>
  <div class="page">
    <p>Internet Graph Generators VII  Clustering in PLRG decreases as n increases</p>
    <p>A ve</p>
    <p>ra g</p>
    <p>e C</p>
    <p>lu st</p>
    <p>er in</p>
    <p>g</p>
  </div>
  <div class="page">
    <p>Internet Graph Generators VIII  Clustering in BA decreases as n increases</p>
    <p>Number of nodes</p>
    <p>A ve</p>
    <p>ra g</p>
    <p>e C</p>
    <p>lu st</p>
    <p>er in</p>
    <p>g</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Motivation</p>
    <p>Statement of the Problem</p>
    <p>Our Algorithm</p>
    <p>Sampling Technique</p>
    <p>Questions</p>
  </div>
  <div class="page">
    <p>Problem Statement  Clustering should increase, not decrease!</p>
    <p>Given a connected graph G and a target clustering value T, rewire Gs edges and produce a new graph G0 satisfying  G0 is connected  The degree sequence in G0 is the same as that</p>
    <p>in G  G0 has low diameter  Clustering of G0 is larger than or equal to T .</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Motivation</p>
    <p>Statement of the Problem</p>
    <p>Our Algorithm</p>
    <p>Sampling Technique</p>
    <p>Questions</p>
  </div>
  <div class="page">
    <p>Our Algorithm 1. Mark all edges that are in at least one triangle.</p>
    <p>Degree of the two nodes incident on the edge will be reduced</p>
    <p>Connecting them will produce at least one new triangle</p>
  </div>
  <div class="page">
    <p>Simulation Results I</p>
    <p>Fine control of increase in clustering can be done by limiting the number of k-cycles broken per iteration  We break edges on 2% of all nodes each iteration</p>
    <p>In all simulations the shape parameter of the degree distribution is  = 1.2 and scale parameter is  = 0.63</p>
    <p>The target clustering T = .3 in all cases</p>
    <p>Our algorithm increases the clustering of the graphs created by existing generators in a small number of iterations</p>
  </div>
  <div class="page">
    <p>Simulations Results II  Increase in clustering for a GED graph</p>
    <p>A ve</p>
    <p>ra g</p>
    <p>e C</p>
    <p>lu st</p>
    <p>er in</p>
    <p>g</p>
  </div>
  <div class="page">
    <p>Simulations Results III  Increase in clustering for a PLRG graph</p>
    <p>Iterations</p>
    <p>A ve</p>
    <p>ra g</p>
    <p>e C</p>
    <p>lu st</p>
    <p>er in</p>
    <p>g</p>
  </div>
  <div class="page">
    <p>Simulations Results IV  Increase in clustering for a BA graph</p>
    <p>Iterations</p>
    <p>A ve</p>
    <p>ra g</p>
    <p>e C</p>
    <p>lu st</p>
    <p>er in</p>
    <p>g</p>
  </div>
  <div class="page">
    <p>Simulation Results V</p>
    <p>Average clustering is increased in all cases</p>
    <p>Distribution of node degree is not changed  The degree of each node remains relatively</p>
    <p>unchanged after our algorithm is run</p>
    <p>Average path length is still small  After the algorithm is run, the average path</p>
    <p>length increases by a very small percentage</p>
  </div>
  <div class="page">
    <p>Simulation Results VI</p>
    <p>Table of average path length before and after our algorithm is run</p>
    <p>Average Path Length is not significantly changed</p>
    <p>G0G</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Motivation</p>
    <p>Statement of the Problem</p>
    <p>Our Algorithm</p>
    <p>Sampling Technique</p>
    <p>Questions</p>
  </div>
  <div class="page">
    <p>Sampling Technique I  Calculating the clustering of a graph is not a</p>
    <p>trivial operation  Each edge must be examined at every node.</p>
    <p>It would be very inefficient to calculate the exact clustering coefficient at every iteration of our algorithm</p>
    <p>Make use of sampling to estimate clustering</p>
    <p>In each iteration of the algorithm, this technique reduces the time complexity from O(mn) to O(m)</p>
  </div>
  <div class="page">
    <p>Sampling Technique II  Estimate actual clustering a(G) by sampled</p>
    <p>clustering s(G) such that:</p>
    <p>To do this we use a well-known result from sampling theory to determine the sample size s:</p>
  </div>
  <div class="page">
    <p>Sampling Technique III</p>
    <p>This guarantees that |a(G) - s(G)| does not exceed error E with probability 1-.</p>
    <p>Note that the sample size in the formula does not depend on the number of nodes in the graph.</p>
    <p>Example: for a graph with 100,000 nodes, margin of error E=0.1 and =0.05, we get Z/2=1.96  We only need to sample s=1.962/0.22 97 nodes.</p>
  </div>
  <div class="page">
    <p>Conclusions and Future Work  Our algorithm successfully increases the</p>
    <p>clustering of G without modifying its degree  GED, PLRG, and BA better match the Internet</p>
    <p>small-world properties after our algorithm is run</p>
    <p>Time complexity of the algorithm needs to be further analyzed</p>
    <p>Devise a new method for generating Internet graphs that inherently incorporates the properties of the Internet</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Motivation</p>
    <p>Statement of the Problem</p>
    <p>Our Algorithm</p>
    <p>Sampling Technique</p>
    <p>Questions</p>
  </div>
</Presentation>
