<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Network Architecture for Joint Failure Recovery and Traffic Engineering</p>
    <p>Martin Suchara</p>
    <p>in collaboration with: D. Xu, R. Doverspike,</p>
    <p>D. Johnson and J. Rexford</p>
  </div>
  <div class="page">
    <p>Failure Recovery and Traffic Engineering in IP Networks</p>
    <p>Uninterrupted data delivery when links or routers fail</p>
    <p>Goal: re-balance the network load after failure</p>
    <p>Failure recovery essential for  Backbone network operators  Large datacenters  Local enterprise networks</p>
  </div>
  <div class="page">
    <p>Challenges of Failure Recovery</p>
    <p>Existing solutions reroute traffic to avoid failures  Can use, e.g., MPLS local or global protection</p>
    <p>Drawbacks of the existing solutions  Local path protection highly suboptimal  Global path protection often requires dynamic</p>
    <p>recalculation of the tunnels</p>
    <p>primary tunnel</p>
    <p>backup tunnel</p>
    <p>primary tunnel</p>
    <p>backup tunnel local</p>
    <p>global</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>I. Architecture: goals and proposed design</p>
    <p>II. Optimizations: of routing and load balancing</p>
    <p>III. Evaluation: using synthetic and realistic topologies</p>
    <p>IV. Conclusion</p>
  </div>
  <div class="page">
    <p>Architectural Goals</p>
  </div>
  <div class="page">
    <p>The Architecture  Components</p>
    <p>Management system  Knows topology, approximate traffic</p>
    <p>demands, potential failures  Sets up multiple paths and calculates load</p>
    <p>splitting ratios</p>
    <p>Minimal functionality in routers  Path-level failure notification  Static configuration  No coordination with other routers</p>
  </div>
  <div class="page">
    <p>The Architecture  topology design  list of shared risks  traffic demands</p>
    <p>t</p>
    <p>s</p>
    <p>fixed paths  splitting ratios</p>
  </div>
  <div class="page">
    <p>The Architecture</p>
    <p>t</p>
    <p>s link cut</p>
    <p>fixed paths  splitting ratios</p>
  </div>
  <div class="page">
    <p>The Architecture</p>
    <p>t</p>
    <p>s link cut</p>
    <p>fixed paths  splitting ratios</p>
  </div>
  <div class="page">
    <p>The Architecture</p>
    <p>t</p>
    <p>s link cutpath</p>
    <p>probing</p>
    <p>fixed paths  splitting ratios</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>I. Architecture: goals and proposed design</p>
    <p>II. Optimizations: of routing and load balancing</p>
    <p>III. Evaluation: using synthetic and realistic topologies</p>
    <p>IV. Conclusion</p>
  </div>
  <div class="page">
    <p>Goal I: Find Paths Resilient to Failures</p>
    <p>A working path needed for each allowed failure state (shared risk link group)</p>
    <p>Example of failure states: S = {e1}, { e2}, { e3}, { e4}, { e5}, {e1, e2}, {e1, e5}</p>
    <p>e1 e3e2e4 e5</p>
    <p>R1 R2</p>
  </div>
  <div class="page">
    <p>Goal II: Minimize Link Loads</p>
    <p>minimize s w se</p>
    <p>(ue s)</p>
    <p>while routing all trafficlink utilization ue</p>
    <p>s</p>
    <p>cost (ue s)</p>
    <p>aggregate congestion cost weighted for all failures:</p>
    <p>links indexed by e</p>
    <p>ue s =1</p>
    <p>Cost function is a penalty for approaching capacity</p>
    <p>failure state weight</p>
    <p>failure states indexed by s</p>
  </div>
  <div class="page">
    <p>Possible Solutions</p>
    <p>capabilities of routers</p>
    <p>co n</p>
    <p>g e</p>
    <p>st io</p>
    <p>n</p>
    <p>Suboptimal solution</p>
    <p>Solution not scalable</p>
    <p>Good performance and practical?</p>
    <p>Overly simple solutions do not do well  Diminishing returns when adding functionality</p>
  </div>
  <div class="page">
    <p>The Idealized Optimal Solution: Finding the Paths  Assume edge router can learn which links failed</p>
    <p>Custom splitting ratios for each failure</p>
    <p>Failure Splitting Ratios</p>
    <p>- 0.4, 0.4, 0.2</p>
    <p>e4 0.7, 0, 0.3</p>
    <p>e1 &amp; e2 0, 0.6, 0.4</p>
    <p>configuration:</p>
    <p>e4e3</p>
    <p>e1 e2</p>
    <p>e5 e6</p>
    <p>one entry per failure</p>
  </div>
  <div class="page">
    <p>The Idealized Optimal Solution: Finding the Paths</p>
    <p>Solve a classical multicommodity flow for each failure case s:</p>
    <p>min load balancing objective s.t. flow conservation</p>
    <p>demand satisfaction edge flow non-negativity</p>
    <p>Decompose edge flow into paths and splitting ratios</p>
  </div>
  <div class="page">
    <p>Custom splitting ratios for each observed combination of failed paths</p>
    <p>Failure Splitting Ratios</p>
    <p>- 0.4, 0.4, 0.2</p>
    <p>p2 0.6, 0, 0.4</p>
    <p>configuration:</p>
    <p>p1 p2</p>
    <p>p3</p>
    <p>NP-hard unless paths are fixed</p>
    <p>at most 2#paths entries</p>
  </div>
  <div class="page">
    <p>If paths fixed, can find optimal splitting ratios:</p>
    <p>Heuristic: use the same paths as the idealized optimal solution</p>
    <p>min load balancing objective s.t. flow conservation</p>
    <p>demand satisfaction path flow non-negativity</p>
  </div>
  <div class="page">
    <p>Fixed splitting ratios for all observable failures</p>
    <p>p1, p2, p3:</p>
    <p>configuration:</p>
    <p>Non-convex optimization even with fixed paths</p>
    <p>p1 p2</p>
    <p>p3</p>
  </div>
  <div class="page">
    <p>Heuristic to compute splitting ratios  Averages of the idealized optimal solution</p>
    <p>weighted by all failure case weights</p>
    <p>Heuristic to compute paths  Paths from the idealized optimal solution</p>
    <p>ri = s w s ri</p>
    <p>s</p>
    <p>fraction of traffic on the i-th path</p>
  </div>
  <div class="page">
    <p>The Two Solutions</p>
    <p>How well do they work in practice?</p>
    <p>How do they compare to the idealized optimal solution?</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>I. Architecture: goals and proposed design</p>
    <p>II. Optimizations: of routing and load balancing</p>
    <p>III. Evaluation: using synthetic and realistic topologies</p>
    <p>IV. Conclusion</p>
  </div>
  <div class="page">
    <p>Simulations on a Range of Topologies</p>
    <p>Topology Nodes Edges Demands</p>
    <p>Tier-1 50 180 625</p>
    <p>Abilene 11 28 110</p>
    <p>Hierarchical 50 148 - 212 2,450</p>
    <p>Random 50 - 100 228 - 403 2,450  9,900</p>
    <p>Waxman 50 169 - 230 2,450</p>
    <p>Single link failures</p>
    <p>Shared risk failures for Tier-1 topology  954 failures, up to 20 links simultaneously</p>
  </div>
  <div class="page">
    <p>Congestion Cost  Tier-1 IP Backbone with SRLG Failures</p>
    <p>increasing load</p>
    <p>Additional router capabilities improve performance up to a point</p>
    <p>o b</p>
    <p>je ct</p>
    <p>iv e</p>
    <p>v a</p>
    <p>lu e</p>
    <p>network traffic</p>
    <p>State-dependent splitting indistinguishable from optimum</p>
    <p>State-independent splitting not optimal but simple</p>
    <p>How do we compare to OSPF? Use optimized OSPF link weights [Fortz, Thorup 02].</p>
  </div>
  <div class="page">
    <p>Congestion Cost  Tier-1 IP Backbone with SRLG Failures</p>
    <p>increasing load</p>
    <p>OSPF uses equal splitting on shortest paths. This restriction makes the performance worse.</p>
    <p>o b</p>
    <p>je ct</p>
    <p>iv e</p>
    <p>v a</p>
    <p>lu e</p>
    <p>network traffic</p>
    <p>OSPF with optimized link weights can be suboptimal</p>
  </div>
  <div class="page">
    <p>Average Traffic Propagation Delay in Tier-1 Backbone</p>
    <p>Service Level Agreements guarantee 37 ms mean traffic propagation delay</p>
    <p>Need to ensure mean delay doesnt increase much</p>
    <p>Algorithm Delay (ms)</p>
    <p>OSPF (current) 31.38</p>
    <p>Optimum 31.75</p>
    <p>State dep. splitting 31.51</p>
    <p>State indep. splitting 31.76</p>
  </div>
  <div class="page">
    <p>Number of Paths (Tier-1)</p>
    <p>Number of paths almost independent of the load</p>
    <p>number of paths</p>
    <p>cd f</p>
    <p>number of paths</p>
    <p>For higher traffic load slightly more paths</p>
  </div>
  <div class="page">
    <p>Traffic is Highly Variable (Tier-1)</p>
    <p>number of paths</p>
    <p>re la</p>
    <p>tiv e</p>
    <p>t ra</p>
    <p>ff ic</p>
    <p>v o</p>
    <p>lu m</p>
    <p>e</p>
    <p>(% )</p>
    <p>Time (GMT)</p>
    <p>No single traffic peak (international traffic)</p>
    <p>Can a static configuration cope with the variability?</p>
  </div>
  <div class="page">
    <p>Performance with Static Router Configuration (Tier-1)</p>
    <p>State dependent splitting again nearly optimal</p>
    <p>number of paths</p>
    <p>o b</p>
    <p>je ct</p>
    <p>iv e</p>
    <p>v a</p>
    <p>lu e</p>
    <p>time (GMT)</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>I. Architecture: goals and proposed design</p>
    <p>II. Optimizations: of routing and load balancing</p>
    <p>III. Evaluation: using synthetic and realistic topologies</p>
    <p>IV. Conclusion</p>
  </div>
  <div class="page">
    <p>Conclusion  Simple mechanism combining path protection</p>
    <p>and traffic engineering</p>
    <p>Favorable properties of state-dependent splitting algorithm:</p>
    <p>(i) Simplifies network architecture</p>
    <p>(ii) Optimal load balancing with static configurations</p>
    <p>(iii) Small number of paths</p>
    <p>(iv) Delay comparable to current OSPF</p>
    <p>Path-level failure information is just as good as complete failure information</p>
  </div>
  <div class="page">
    <p>Thank You!</p>
  </div>
  <div class="page">
    <p>Size of Routing Tables (Tier-1)</p>
    <p>Size after compression: use the same label for routes that share path</p>
    <p>number of paths</p>
    <p>ro u</p>
    <p>tin g</p>
    <p>t a</p>
    <p>b le</p>
    <p>s iz</p>
    <p>e</p>
    <p>network traffic</p>
    <p>Largest routing table among all routers</p>
  </div>
</Presentation>
