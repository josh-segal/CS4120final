<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Exploiting Remote Memory Operations to</p>
    <p>Design Efficient Reconfiguration for</p>
    <p>Shared Data-Centers over InfiniBand</p>
    <p>P. Balaji, K. Vaidyanathan, S. Narravula, K. Savitha, H. W. Jin</p>
    <p>D. K. Panda</p>
    <p>Network Based Computing Laboratory</p>
    <p>The Ohio State University</p>
  </div>
  <div class="page">
    <p>COTS Clusters</p>
    <p>Advent of High Performance Networks</p>
    <p>Ex: InfiniBand, Myrinet, Quadrics, 10-Gigabit Ethernet</p>
    <p>High Performance Protocols: VAPI / IBAL, GM, EMP</p>
    <p>Provide applications direct and protected access to the network</p>
    <p>Commodity-Off-the-Shelf (COTS) Clusters</p>
    <p>Enabled through High Performance Networks</p>
    <p>Built of commodity components</p>
    <p>High Performance-to-Cost Ratio</p>
  </div>
  <div class="page">
    <p>InfiniBand Architecture Overview</p>
    <p>Industry Standard</p>
    <p>Interconnect for connecting compute and I/O nodes</p>
    <p>Provides High Performance</p>
    <p>Low latency of lesser than 4us</p>
    <p>Over 935MBps uni-directional bandwidth</p>
    <p>Offloaded Transport Layer; Zero-Copy data-transfer</p>
    <p>Provides one-sided communication (RDMA, Remote Atomics)</p>
    <p>Becoming increasingly popular</p>
  </div>
  <div class="page">
    <p>Cluster-based Data-Centers  Increasing adoption of Internet</p>
    <p>Primary means of electronic interaction</p>
    <p>Highly Scalable and Available Web-Servers: Critical !</p>
    <p>Utilizing Clusters for Data-Center environments?</p>
    <p>Studied and Proposed by the Industry and Research communities</p>
    <p>(Courtesy CSP Architecture Design)</p>
    <p>Nodes are logically partitioned</p>
    <p>Interact depending on the query</p>
    <p>Provide services requested</p>
    <p>Services provided are related</p>
    <p>Fragmentation of resources</p>
  </div>
  <div class="page">
    <p>Shared Multi-Tier Data-Centers</p>
    <p>WAN</p>
    <p>Clients</p>
    <p>Clients</p>
    <p>Load Balancing Cluster (Site A)</p>
    <p>Load Balancing Cluster (Site B)</p>
    <p>Load Balancing Cluster (Site C)</p>
    <p>Website A</p>
    <p>Website B</p>
    <p>Website C</p>
    <p>Servers</p>
    <p>Servers</p>
    <p>Servers</p>
    <p>Hosting several unrelated services on a single clustered data-center</p>
  </div>
  <div class="page">
    <p>Issues in Shared Data-Centers</p>
    <p>Hosting several unrelated services on a single data-center</p>
    <p>Ex: A single data-center hosting multiple websites</p>
    <p>Currently used by several ISPs and Web Service Providers (IBM, HP)</p>
    <p>Allows differentiation in resources provided for each service</p>
    <p>Fragmentation is a big concern!</p>
    <p>Over-provisioning of nodes for each service</p>
    <p>Nodes provided to each service based on the worst-case estimates</p>
    <p>Widely used approach</p>
    <p>Leads to severe under-utilization of resources</p>
  </div>
  <div class="page">
    <p>Dynamic Reconfigurability</p>
    <p>WAN</p>
    <p>Clients</p>
    <p>Clients</p>
    <p>Load Balancing Cluster (Site A)</p>
    <p>Load Balancing Cluster (Site B)</p>
    <p>Load Balancing Cluster (Site C)</p>
    <p>Website A</p>
    <p>Website B</p>
    <p>Website C</p>
    <p>Servers</p>
    <p>Servers</p>
    <p>Servers</p>
    <p>Nodes reconfigure themselves to highly loaded websites at run-time</p>
  </div>
  <div class="page">
    <p>Objective</p>
    <p>Under Utilization of resources needs to be curbed</p>
    <p>Dynamically Configuring nodes allotted to each service</p>
    <p>Widely studied approach for Clusters</p>
    <p>Interesting Challenges in the Data-Center Environment</p>
    <p>Highly loaded back-end servers</p>
    <p>Compatibility with existing applications (Apache, MySQL, etc)</p>
    <p>Can the advanced features provided by InfiniBand help?</p>
  </div>
  <div class="page">
    <p>Presentation Roadmap</p>
    <p>Introduction and</p>
    <p>Background</p>
    <p>Shared Data-Centers</p>
    <p>Designing Dynamic Reconfigurability for Shared</p>
    <p>Data-Centers</p>
    <p>Experimental Results</p>
    <p>Concluding Remarks</p>
    <p>Continuing and Future Work</p>
  </div>
  <div class="page">
    <p>Shared Data-Centers Overview</p>
    <p>Clients request services using high level protocols such as HTTP</p>
    <p>Requests are distributed to the nodes using load-balancers</p>
    <p>Load Balancers expose a single IP address to the clients</p>
    <p>Maintain a list of several internal IP addresses to forward the requests</p>
    <p>Several solutions for load-balancers</p>
    <p>Hardware Load-Balancers</p>
    <p>Software Load-Balancers</p>
    <p>Cluster-based load-balancers</p>
  </div>
  <div class="page">
    <p>Cluster-based Load Balancers  Hardware Load-Balancers</p>
    <p>Commonly used in several environments</p>
    <p>In-flexible and cannot be tuned to the data-center requirements</p>
    <p>Software Load-Balancers</p>
    <p>Easy to modify and tune to the data-center requirements</p>
    <p>Potential bottlenecks for highly loaded data-center environments</p>
    <p>Cluster-based load-balancers</p>
    <p>Proposed by several researchers as an additional Edge Tier [shah01]</p>
    <p>Provides intelligent services such as load-balancing, caching, etc</p>
    <p>Use an additional hardware load-balancer or DNS aliasing to get requests</p>
    <p>[shah01]: CSP: A Novel System Architecture for Scalable Internet and Communication Services. H. V. Shah, D. B. Minturn, A. Foong, G. L. McAlpine, R. S. Madukkarumukumana and G. J. Regnier. In USITS 2001.</p>
  </div>
  <div class="page">
    <p>Presentation Roadmap</p>
    <p>Introduction and</p>
    <p>Background</p>
    <p>Shared Data-Centers</p>
    <p>Designing Dynamic Reconfigurability for Shared</p>
    <p>Data-Centers</p>
    <p>Experimental Results</p>
    <p>Concluding Remarks</p>
    <p>Continuing and Future Work</p>
  </div>
  <div class="page">
    <p>Design Issues  Support for Existing Applications</p>
    <p>Modifying existing applications: Cumbersome and Impractical</p>
    <p>Utilizing External Helper Modules (external programs running on each node)</p>
    <p>Take care of load monitoring, reconfiguration, etc.</p>
    <p>Reflect changes to the data-center applications using environment settings</p>
    <p>Load-Balancer based vs. Server based Reconfiguration</p>
    <p>Trading network traffic for CPU overhead</p>
    <p>Load Balancers convert nodes to serve their website</p>
    <p>Remote Memory Operations based Design</p>
    <p>Server node applications are typically very compute intensive</p>
    <p>Execution of CGI scripts, business logic, database processing</p>
    <p>Utilizing one-sided operations provided by InfiniBand</p>
    <p>Load-balancers remotely monitor and reconfigure the system</p>
  </div>
  <div class="page">
    <p>Implementation Details</p>
    <p>History Aware Reconfiguration</p>
    <p>Avoiding Server Thrashing by maintaining a history of the load pattern</p>
    <p>Reconfigurability Module Sensitivity</p>
    <p>Time Interval between two consecutive checks</p>
    <p>Maintaining a System Wide Shared State</p>
    <p>Shared State with Concurrency Control</p>
    <p>Tackling Load-Balancing Delays</p>
  </div>
  <div class="page">
    <p>System Wide Shared State</p>
    <p>Nodes in the cluster need to share control information</p>
    <p>Load, Current State of the node, etc.</p>
    <p>Sockets based Implementation has several disadvantages</p>
    <p>All communication needs to be explicitly performed</p>
    <p>Asynchronous requests need to be handled by the host</p>
    <p>A major concern due to the high CPU overhead on the servers</p>
    <p>InfiniBand RDMA operations try to avoid these disadvantages</p>
    <p>Load-balancers can share data on the servers using RDMA Read</p>
    <p>Can update system state using RDMA Write and Atomic Operations</p>
  </div>
  <div class="page">
    <p>Shared State with Concurrency Control  Load-balancers query the system load at regular intervals</p>
    <p>On detecting a high load, a reconfiguration is done</p>
    <p>Multiple Concurrency issues to be dealt with:</p>
    <p>Multiple simultaneous transitions possible</p>
    <p>Each node in the load-balancer cluster can attempt a reconfiguration</p>
    <p>Multiple nodes might end up being converted on a single burst</p>
    <p>Hot Spot Effects on remote nodes</p>
    <p>All load-balancers might try to get load information from the same node</p>
    <p>They might try to convert the same node</p>
    <p>Additional Logic Required !</p>
  </div>
  <div class="page">
    <p>Locking Mechanism  We propose a two-level hierarchical locking mechanism</p>
    <p>Internal Lock for each web-site cluster</p>
    <p>Only one load-balancer in a cluster can attempt a reconfiguration</p>
    <p>External Lock for performing reconfiguration</p>
    <p>Only one web-site can convert any given node</p>
    <p>Both locks performed remotely using InfiniBand Atomic Operations</p>
    <p>Server</p>
    <p>Load Balancer Internal Lock</p>
    <p>Internal Lock</p>
    <p>External Lock</p>
    <p>Website A</p>
    <p>Website B</p>
    <p>Website C</p>
  </div>
  <div class="page">
    <p>Tackling Load-Balancing Delays  Load-Balancing Delays</p>
    <p>After a reconfiguration, balancing of load might take some time</p>
    <p>Locking mechanisms only ensure no simultaneous transitions</p>
    <p>We need to ensure that all load-balancers are aware of reconfigurations</p>
    <p>Server Website A</p>
    <p>Load Balancer</p>
    <p>Server Website B</p>
    <p>Not Loaded Loaded</p>
    <p>Load QueryLoad Query</p>
    <p>Successful Atomic (Lock)</p>
    <p>Successful Atomic (SUC)</p>
    <p>Reconfigure Node Successful Atomic</p>
    <p>(Unlock)</p>
    <p>Load Shared Load Shared</p>
    <p>Dual Counters</p>
    <p>Shared Update Counter (SUC)</p>
    <p>Local Update Counter (LUC)</p>
    <p>On reconfiguration:</p>
    <p>LUC should be equal to SUC</p>
    <p>All remote SUCs are incremented</p>
  </div>
  <div class="page">
    <p>Presentation Roadmap</p>
    <p>Introduction and</p>
    <p>Background</p>
    <p>Shared Data-Centers</p>
    <p>Designing Dynamic Reconfigurability for Shared</p>
    <p>Data-Centers</p>
    <p>Experimental Results</p>
    <p>Concluding Remarks</p>
    <p>Continuing and Future Work</p>
  </div>
  <div class="page">
    <p>Experimental Test-bed  Cluster 1 with:</p>
    <p>8 SuperMicro SUPER X5DL8-GG nodes; Dual Intel Xeon 3.0 GHz processors</p>
    <p>512 KB L2 cache, 1 GB memory; PCI-X 64-bit 133 MHz</p>
    <p>Cluster 2 with:</p>
    <p>8 SuperMicro SUPER P4DL6 nodes; Dual Intel Xeon 2.4 GHz processors</p>
    <p>512 KB L2 cache, 512 MB memory; PCI-X 64-bit 133 MHz</p>
    <p>Mellanox MT23108 Dual Port 4x HCAs; MT43132 24-port switch</p>
    <p>Apache 2.0.50 Web and PHP servers; MySQL Database server</p>
    <p>Experimental Results (Outline)</p>
    <p>Basic IBA Performance</p>
    <p>Impact of Background Computation Threads</p>
    <p>Impact of Request Burst Length</p>
    <p>Node Utilizations</p>
  </div>
  <div class="page">
    <p>Basic IBA Performance</p>
    <p>RDMA Read operation on IBA outperforms TCP/IP (IPoIB)</p>
    <p>IBA achieves about 12us latency compared to the 56us of IPoIB</p>
    <p>IBA achieves about 830 MBps bandwidth compared to the 230 MBps of IPoIB</p>
    <p>More importantly near zero CPU requirements on the receiver side</p>
  </div>
  <div class="page">
    <p>Impact of Background Threads</p>
    <p>Remote memory operations are not affected AT ALL with remote server load</p>
    <p>Ideal for the data-center environment</p>
  </div>
  <div class="page">
    <p>Impact of Burst Length</p>
    <p>#Co-hosted Web-Sites = 3 #Co-hosted Web-Sites = 4</p>
    <p>Rigid has 3 nodes for each website; Over-provisioning has 6 nodes for each website</p>
    <p>Large Burst Length allows reconfiguration of the system closer to the best case!</p>
    <p>Performs comparably with the static scheme for small burst sizes</p>
  </div>
  <div class="page">
    <p>Node Utilization for 3 Co-hosted Web sites</p>
    <p>For Burst Length = 512 For Burst Length = 8096</p>
    <p>For large burst lengths, the reconfiguration time is negligible; performance is better</p>
  </div>
  <div class="page">
    <p>Presentation Roadmap</p>
    <p>Introduction and</p>
    <p>Background</p>
    <p>Shared Data-Centers</p>
    <p>Designing Dynamic Reconfigurability for Shared</p>
    <p>Data-Centers</p>
    <p>Experimental Results</p>
    <p>Concluding Remarks</p>
    <p>Continuing and Future Work</p>
  </div>
  <div class="page">
    <p>Concluding Remarks  Growing Fragmentation of resources in data-centers</p>
    <p>Related services provided by Multi-Tier Data-Centers</p>
    <p>Unrelated services provided by Shared Data-Centers</p>
    <p>Dynamically configuring resources allotted</p>
    <p>A common approach used in clusters</p>
    <p>Data-Center environment has its own challenges</p>
    <p>Highly loaded back-end servers</p>
    <p>Compatibility with existing applications</p>
    <p>Provided a novel approach utilizing the RDMA features of IBA</p>
    <p>A scheme resilient to the load on the back-end servers</p>
    <p>Demonstrated up to 2.5 times improvement in the throughput</p>
    <p>Similar performance using only half the nodes</p>
  </div>
  <div class="page">
    <p>Presentation Roadmap</p>
    <p>Introduction and</p>
    <p>Background</p>
    <p>Shared Data-Centers</p>
    <p>Designing Dynamic Reconfigurability for Shared</p>
    <p>Data-Centers</p>
    <p>Experimental Results</p>
    <p>Concluding Remarks</p>
    <p>Continuing and Future Work</p>
  </div>
  <div class="page">
    <p>Continuing and Future Work</p>
    <p>Multi-Stage Reconfigurations</p>
    <p>Least loaded servers might not be the best server to reconfigure</p>
    <p>Caching constraints</p>
    <p>Replicated Databases</p>
    <p>Hardware heterogeneity</p>
    <p>Utilizing Dynamic Reconfigurability for advanced services</p>
    <p>QoS guarantees</p>
    <p>Differentiation in the resources provided</p>
  </div>
  <div class="page">
    <p>For more information, please visit the</p>
    <p>http://nowlab.cis.ohio-state.edu</p>
    <p>Network Based Computing Laboratory,</p>
    <p>The Ohio State University</p>
    <p>Thank You!</p>
    <p>NBC Home Page</p>
  </div>
  <div class="page">
    <p>Backup Slides</p>
  </div>
</Presentation>
