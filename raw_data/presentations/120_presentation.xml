<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>HICSS36eService-1</p>
    <p>A Three-Layer Architecture for E-Contract Enforcement</p>
    <p>in an E-Service Environment Dickson K.W. CHIU</p>
    <p>Dept. of Computer Science &amp; Engineering,</p>
    <p>Chinese University of Hong Kong kwchiu@acm.org, kwchiu@cse.cuhk.edu.hk</p>
    <p>Shing-Chi CHEUNG, Sven TILL Dept. of Computer Science</p>
    <p>Hong Kong University of Science &amp; Technology {scc, till}@cs.ust.hk</p>
  </div>
  <div class="page">
    <p>HICSS36eService-2</p>
    <p>Introduction  e-Contract</p>
    <p>Computerized facilitation or automation of a contract  Cross-organizational business processes over the</p>
    <p>Internet  e-Service system to readily create e-contracts with</p>
    <p>enforcement measures will soon become a critical success factor</p>
    <p>Particularly applicable to standard business interactions, such as the purchase and sale of goods.</p>
    <p>e-Contract templates  Reduce effort in development and support of the</p>
    <p>contracts whole lifecycle (such as negotiation, enactment and enforcement</p>
    <p>The PURCHASER shall send a Letter of Credit for the GOODS to the SUPPLIER in the currency of [ ] within [ ] days of the invoice date. The SUPPLIER shall on receipt of the Letter of Credit ships the GOODS to the PURCHASER within [ ] days and provides the PURCHASER with shipment details.</p>
  </div>
  <div class="page">
    <p>HICSS36eService-3</p>
    <p>e-Contract Enforcement</p>
    <p>Recognition (monitoring) and handling of contract breaches</p>
    <p>Enforcement and enactment are handled differently (enactment deals with regular activities)</p>
    <p>Compliance of a contract has to be kept under constant surveillance</p>
    <p>Monitoring of variables  states of the business process</p>
    <p>Challenges  constantly checking validity of all these variables incurs</p>
    <p>tremendous overheads  extended across organizational boundaries  may include confidential information, e.g., bank accounts</p>
  </div>
  <div class="page">
    <p>HICSS36eService-4</p>
    <p>Objectives</p>
    <p>A meta-model of e-contracts and e-contract templates - address specific semantic requirement of contracts for supporting B2B applications</p>
    <p>An architecture for cross-organizational econtract enforcement (in addition to enactment)</p>
    <p>A methodology for elicitation of e-contract enforcement based on this multiple layer architecture</p>
    <p>A feasible implementation outline for e-contract enforcement with Enterprise Java Bean (EJB) and Web services</p>
  </div>
  <div class="page">
    <p>HICSS36eService-5</p>
    <p>Three Layer Architecture for E-contract Enforcement</p>
    <p>Layer Perspective Artifacts</p>
    <p>Documen t</p>
    <p>Users, managers</p>
    <p>Meta-model for e-contracts and templates: Contract clauses (Obligation, Permission, Prohibition) and Parties</p>
    <p>Business System analyst</p>
    <p>Meta-model for e-contract enforcement: Business events, Business rules, Business actions and Business entities</p>
    <p>Impleme n-tation</p>
    <p>Programme rs</p>
    <p>Business action implementation (Enterprise JavaBeans components) Cross-organizational interface (Web services XML schemas)</p>
  </div>
  <div class="page">
    <p>HICSS36eService-6</p>
    <p>Meta-Model of an e-Contract Template</p>
    <p>e-Contract Template</p>
    <p>*</p>
    <p>Template Variable</p>
    <p>involves</p>
    <p>*</p>
    <p>refines</p>
    <p>Obligation Permission Prohibition</p>
    <p>e-Contract Party</p>
    <p>Contract Clause</p>
    <p>references</p>
    <p>Accepted Value</p>
  </div>
  <div class="page">
    <p>HICSS36eService-7</p>
    <p>A Sales e-Contract Template as an Instance of the Meta-model</p>
    <p>Sales :e-Contract Template</p>
    <p>Shipping &amp; Insurance :Contract Clause</p>
    <p>Pricing :Contract Clause</p>
    <p>Delivery :Contract Clause</p>
    <p>insurance premium :Template Variable</p>
    <p>freight :Template Variable</p>
    <p>quantity :Template Variable</p>
    <p>delivery date :Template Variable</p>
    <p>return policy :Template Variable</p>
    <p>unit price :Template Variable</p>
    <p>Deposit Payment :Contract Clause</p>
    <p>deposit :Template Variable</p>
    <p>Purchaser :Party</p>
    <p>Supplier :Party</p>
    <p>involves involves</p>
  </div>
  <div class="page">
    <p>HICSS36eService-8</p>
    <p>E-Contract Lifecycle</p>
    <p>Business Information Exchange</p>
    <p>Contract Enactment</p>
    <p>Contract Enforcement</p>
    <p>Contract Negotiation</p>
    <p>Based on business experience and requirements, contract templates (with variables) are abstracted from previous contracts</p>
    <p>A contract template is modeled as an e-Contract template  Each successful e-Negotiation will lead to an e-Contract  Enforcement and enactment are executed differently and</p>
    <p>in parallel</p>
  </div>
  <div class="page">
    <p>HICSS36eService-9</p>
    <p>System Architecture  Motivated by the active database paradigm  Event - occurrence of something interesting to the system itself or</p>
    <p>to user applications  Event driven execution of rules in event-condition-action (ECA) form  ECA (active) rules: On event if condition then action  Exceptions and alerts are events too (action = handler)  Ensure efficiency and timeliness - monitor becomes only active</p>
    <p>when an interesting event occurs</p>
    <p>Contract Enforcer Contract Enactor</p>
    <p>Event Adapter</p>
    <p>External Web Service Interface</p>
    <p>Event Ev en</p>
    <p>t</p>
    <p>A Party as an e-Service</p>
    <p>Provider</p>
    <p>Database Event Repository</p>
    <p>Event Subscribers List Business Entities</p>
    <p>Internet</p>
    <p>E ve</p>
    <p>n t</p>
    <p>Event</p>
    <p>E xt</p>
    <p>. E</p>
    <p>ve n</p>
    <p>tOther Parties</p>
    <p>Timer Ev en</p>
    <p>t</p>
  </div>
  <div class="page">
    <p>HICSS36eService-10</p>
    <p>From Contract Clause to ECA rules</p>
    <p>Improvement from deontic logic  well-defined execution semantics and when to execute</p>
    <p>BAO stands for an object that encapsulates a business action whose execution triggers the object creation</p>
    <p>Case study  Terms and Conditions of Sale, Service and Technical Support, Dell, Hong Kong http:// www.ap.dell.com/ap/hk/en/gen/local/legal_terms.htm</p>
    <p>Clause type Event Condition Action</p>
    <p>Obligation (Shall )</p>
    <p>onDay(deadlin e</p>
    <p>(BAO ) )</p>
    <p>NOT occurred( BAO )</p>
    <p>raise( ex ception( BAO ) )</p>
    <p>Prohibition (Shall not ) onOccurred(</p>
    <p>BAO)</p>
    <p>prohibitionConditio n( BAO )</p>
    <p>Permission (may )</p>
    <p>NOT permitted( BAO )</p>
  </div>
  <div class="page">
    <p>HICSS36eService-11</p>
    <p>Enforcing Obligation</p>
    <p>Upon reaching the deadline Tobl, a temporal event is generated by the Timer</p>
    <p>Contract enforcer (of counter party of the action) check if the obliged party has performed the required business action Aobl, searching the log file for invoked actions / occurrence of related events</p>
    <p>If the obligation has not been fulfilled, the contract enforcer raises an exception</p>
    <p>E: onDay( deadline( BAO ) ) C: NOT occurred( BAO ) A: raise( exception( BAO ) )</p>
  </div>
  <div class="page">
    <p>HICSS36eService-12</p>
    <p>Enforcing Obligation Example</p>
    <p>7.1 Dell shall deliver the Products to the place of delivery designated by Customer and agreed to by Dell as evidenced in Customers invoice (Place of Delivery)</p>
    <p>Enforcement rule (Customer)</p>
    <p>Enactment rule (DELL)</p>
    <p>E: onDay( deadline( DELI VER ) )</p>
    <p>C: NOT occurred( DELIVER )</p>
    <p>A: raise( exception( DELI VER ) )</p>
    <p>E: onDay( before( deadline( DELIVE R ), 6 ) )</p>
    <p>C: valid( place( DELIVER ) ) &amp; ready( DELIVER )</p>
    <p>A: perform( DELIVER )</p>
    <p>10.7 Dell shall respond to a request for such Emergency Service as soon as practicable after its receipt of such request.</p>
    <p>Analyst has to clarify and substitute ambiguities with concrete deadline in the formulation</p>
    <p>E: onDay( after( receiptDate( EMERGENCY_REQUEST ), N ) ) ) C: NOT responded( EMERGENCY_REQUEST ) ) A: raise( exception( EMERGENCY_REQUEST )</p>
  </div>
  <div class="page">
    <p>HICSS36eService-13</p>
    <p>Enforcing Prohibition Enforcement rule form Enforcement rule (Both Parties)</p>
    <p>E: onOccurred( BAO ) C: NOT permitted( BOA ) A: raise( exception( BAO ) )</p>
    <p>E: onOccurred( INFO ) C: confidential( INFO ) A: raise( exception( INFO ) )</p>
    <p>The contract enforcer should treat an occurrence of a prohibited action as an exception.</p>
    <p>Problem - observation of prohibitions  if a party performs a prohibited action, the party will</p>
    <p>probably try to hide or distract this fact as long as possible  unless the party does this by mistake or misunderstandings)  autonomous nature of different organizations</p>
    <p>Example - 14. Each party shall treat as confidential all information obtained from the other pursuant to a Contract which is marked 'confidential</p>
  </div>
  <div class="page">
    <p>HICSS36eService-14</p>
    <p>Enforcing Permission Enforcement rule form Enforcement rule example (Both</p>
    <p>Parties)</p>
    <p>E: onOccurred( BAO ) C: prohibitionCondition( BA O ) A: raise( exception( BAO ) )</p>
    <p>E: onOccurred( REFUSE_ORDER ) C: NOT badlisted( customer( REFUSE_ORDE R ) ) A: raise( exception( REFUSE_ORDER ) )</p>
    <p>Temporary allowance to perform an otherwise prohibited action</p>
    <p>within a certain allowed time period  under certain situations (i.e., events plus conditions)  otherwise exception</p>
    <p>Example - 2.1  Dell shall be entitled to refuse to accept orders placed by the Customer if the Customer breaches or Dell, on reasonable grounds, suspects that the Customer will breach this warranty</p>
  </div>
  <div class="page">
    <p>HICSS36eService-15</p>
    <p>Enforcing Permission - Problem Enforcement rule form Enforcement rule example (Both</p>
    <p>Parties)</p>
    <p>E: onOccurred( BAO ) C: prohibitionCondition( B AO ) A: raise( exception( BAO ) )</p>
    <p>E: onOccurred( LEVY ) C: NOT ( dateOfCancellation( order( LEVY ) ) &gt; dateOfManufacture( order( LEVY ) ) &amp; cancellationApproved( order( LEVY ) ) ) A: raise( exception( LEVY ) )</p>
    <p>Example - 3.1  If Dell allows a Customer to cancel its order after manufacture but before shipment of the Product, Dell shall be entitled to levy a cancellation charge equal to 20% of the price of the Products.</p>
    <p>Customer can hardly know the commencement of manufacture of the product - almost non-monitorable</p>
    <p>Dell may improve the situation by informing the customer when the commencement starts through its enactment system. (CRM!)</p>
  </div>
  <div class="page">
    <p>HICSS36eService-16</p>
    <p>Discussion of Problems</p>
    <p>General measures to handle contract breaches or exception involves</p>
    <p>domain specific knowledge  explicitly specified in other contract clauses  implicitly regulated by laws and standards</p>
    <p>Ambiguity and impreciseness of natural languages  reference to other laws, regulations, standard trade practices  parties involved should discuss and clarify the matter  amend existing or forthcoming contracts accordingly</p>
    <p>Autonomous nature of individual organizations  Required events might not be monitorable  Cooperation and trust - improves the transparency of</p>
    <p>operations (CRM!)  Add explicit clauses in the contract to demand these events</p>
    <p>Lack of e-services standards</p>
  </div>
  <div class="page">
    <p>HICSS36eService-17</p>
    <p>Implementation Outline</p>
    <p>Event Adaptor  event publish-and-subscribe paradigm</p>
    <p>Web Services Manager</p>
    <p>Event Adapter</p>
    <p>publish</p>
    <p>subscribe</p>
    <p>receive</p>
    <p>notify</p>
    <p>Database</p>
    <p>Event Repository Subscribers List Security Policies</p>
    <p>Web Services Manager receive</p>
    <p>event</p>
    <p>event</p>
    <p>event</p>
    <p>event</p>
    <p>Counter Party Party</p>
    <p>request subscribe</p>
    <p>request</p>
    <p>request</p>
    <p>interface</p>
    <p>depend</p>
    <p>event</p>
    <p>subscription request</p>
    <p>component</p>
    <p>NOTATIONS</p>
  </div>
  <div class="page">
    <p>HICSS36eService-18</p>
    <p>Web Services of the Event Adaptor</p>
    <p>Publish Web service  invoked by the event adaptor  input parameter is the occurred event or exception  checks the subscribers list and the security policies, and then</p>
    <p>notifies the valid subscribers (via e-mail, fax, ICQ message, or even via another Web service)</p>
    <p>Subscribe Web service  registers requests for an event subscription  parameters: the requester, the subscribed event, and how</p>
    <p>the requester wants to receive the event notification  Receive Web service</p>
    <p>receive subscribed events published by the counter party  received events are recorded at the Event Repository and</p>
    <p>forwarded to the Event Adapter  in turn transforms them into the forms as required by the</p>
    <p>Contract Enforcer and the Contract Enacter</p>
  </div>
  <div class="page">
    <p>HICSS36eService-19</p>
    <p>Conclusions  A meta-model for e-Contracts and e-Contract</p>
    <p>templates  A pragmatic architecture for cross-organizational e</p>
    <p>contract enforcement comprising three layers, viz., document layer, business layer, and implementation layer</p>
    <p>A methodology for developing e-contract enforcement rules, in an e-service environment, using a suppliers example</p>
    <p>An system implementation outline based on Webservice and EJB</p>
  </div>
  <div class="page">
    <p>HICSS36eService-20</p>
    <p>Future Work</p>
    <p>Methodologies for preventive measures avoiding contract breaches</p>
    <p>Process adaptation for interoperability - Workflow Views Based EContracts in a Cross-Organization E-Service Environment. (Distributed and Parallel Databases, 2002)</p>
    <p>ECCRM - An Event Driven Approach to Customer Relationship Management in an e-Brokerage Environment (HICSS36)</p>
    <p>B2B integration - A Data-driven Methodology to Extending Workflows Across Organizations over the Internet (HICSS36)</p>
    <p>e-Negotiation based on contract templates  On e-Negotiation of Unmatched Logrolling Views (HICSS36)  A Contract Template Driven Approach to e-Negotiation Processes</p>
    <p>(PACIS 2002)  A Meta-model for e-Contract Template Variable Dependencies</p>
    <p>Facilitating e-Negotiation (ER2002)  Enterprise Document Management</p>
    <p>A Watermarking Infrastructure for Enterprise Document Management (HICSS36)</p>
  </div>
</Presentation>
