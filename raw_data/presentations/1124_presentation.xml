<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>VideoChef: Efficient Approximation for Streaming Video Processing Pipelines</p>
    <p>Ran Xu</p>
    <p>Jinkyu Koo, Rakesh Kumar, Peter Bai</p>
    <p>Subrata Mitra, Sasa Misailovic, Saurabh Bagchi</p>
  </div>
  <div class="page">
    <p>Why approximate computing in video streaming apps?</p>
    <p>Video streaming applications require low-latency processing  Devices are resource constrained  Human perception can tolerate slight errors in videos</p>
    <p>Typically 30FPS  33 ms for each frame</p>
  </div>
  <div class="page">
    <p>Background: Approximation techniques and parameters</p>
    <p>Loop perforation: for (i = 0; i&lt;n; i = i + approx_level) result = compute_result();</p>
    <p>Loop memorization: for (i = 0; i&lt;n; i = i ++) if(i % approx_level == 0)</p>
    <p>cached_result = result = compute_result(); else</p>
    <p>result = cached_result;</p>
    <p>Approximation parameters = approx_level  1 = Exact execution  Higher value =&gt; More approximate</p>
    <p>Execution saving  1  1 _</p>
    <p>Quality degradation is unknown</p>
  </div>
  <div class="page">
    <p>Quality metric for videos</p>
    <p>PSNR (Peak Signal to Noise Ratio)  Higher PSNR means higher quality/lower error  The approximate output with regard to the exact output  30dB means RMSE is 6% of the mean pixel value and 20dB means 20%.  With easy-to-understand meaning and easy-to-choose threshold</p>
    <p>SSIM, FSIM  Guarantee the quality ordering but lacking obvious meaning and threshold.  Slow to compute</p>
  </div>
  <div class="page">
    <p>A video processing workflow</p>
    <p>Research questions 1) Does one approximation level apply to all frames? 2) How to determine optimal approximation level in a data-aware manner? 3) How to control online overhead of determining optimal approximation level?</p>
  </div>
  <div class="page">
    <p>Prior Work</p>
    <p>Video proc. w/ approx. Canary input to search</p>
    <p>Video proc. w/ approximation</p>
    <p>Video processing</p>
    <p>(+) Parameters for each input  (-) Biased error metric  (-) Not for streaming application</p>
    <p>(-) Too conservative para. for all input.</p>
    <p>(-) SlowExact</p>
    <p>Static approx</p>
    <p>IRA[1]</p>
    <p>[1] Laurenzano, M. A., Hill, P., Samadi, M., Mahlke, S., Mars, J., &amp; Tang, L. (2016). Input responsiveness: using canary inputs to dynamically steer approximation. ACM SIGPLAN Notices, 51(6), 161-176.</p>
  </div>
  <div class="page">
    <p>Why use a canary input</p>
    <p>Provides an estimate of the output quality  Enables data-aware approximation</p>
    <p>.</p>
    <p>.</p>
    <p>.</p>
    <p>Cheap!</p>
    <p>Expensive Unknown quality</p>
    <p>Expensive</p>
    <p>Full-sized input Canary inputExact output</p>
    <p>Approximate output</p>
    <p>Exact output</p>
    <p>Approximate output</p>
  </div>
  <div class="page">
    <p>Problem 1  Canary output quality is biased</p>
    <p>Full-sized output quality is higher than canary one for over 98% approximation setting.</p>
    <p>45.1% approximation setting is ignored due to the mistaken quality threshold.</p>
  </div>
  <div class="page">
    <p>Problem 2  Online overhead really matters</p>
    <p>Sources of online overhead 1) Generating canary input 2) Searching approximation parameters 3) Calculating quality metric (PSNR) 4) Correcting quality bias</p>
    <p>Bottom line: online overhead should never outweigh the savings of approximation</p>
  </div>
  <div class="page">
    <p>Progress of approximation in video processing Video proc. w/ approx. Optimal parameters</p>
    <p>Video proc. w/ approx. Canary + Error mapping + Sampling</p>
    <p>Video proc. w/ approx. Canary input to search</p>
    <p>Video proc. w/ approximation</p>
    <p>Video processing</p>
    <p>(+) Never violate quality threshold  (+) Low processing time  (+) Low overhead</p>
    <p>(+) Unbiased error metric  (+) Close to optimal parameters  (+) Overhead controlled</p>
    <p>(+) Parameters for each input  (-) Biased error metric</p>
    <p>(-) Too conservative para. for all input.</p>
    <p>(-) SlowExact</p>
    <p>Static approx</p>
    <p>IRA[1]</p>
    <p>VideoChef[2]</p>
    <p>Oracle</p>
    <p>[1] Laurenzano, M. A., Hill, P., Samadi, M., Mahlke, S., Mars, J., &amp; Tang, L. (2016). Input responsiveness: using canary inputs to dynamically steer approximation. ACM SIGPLAN Notices, 51(6), 161-176. [2] Xu, R., Koo, J., Kumar, R., Bai, P., Mitra, S., Misailovic, S., &amp; Bagchi, S. (2018, July). VideoChef: Efficient Approximation for Streaming Video Processing Pipelines. In 2018 USENIX Annual Technical Conference (USENIX ATC 18). USENIX Association}.</p>
  </div>
  <div class="page">
    <p>End-to-end system workflow</p>
  </div>
  <div class="page">
    <p>Key Designs</p>
    <p>Error mapping model  to map the quality metric of canary output to that of full-sized output</p>
    <p>Searching policy  to approach the optimal approximation setting that achieve lowest execution time while guaranteeing quality</p>
    <p>Sampling policy  to identify the key frames that redo the searching for approximation parameters.</p>
  </div>
  <div class="page">
    <p>Key Designs</p>
    <p>Error mapping model  to map the quality metric of canary output to that of full-sized output</p>
    <p>Searching policy  to approach the optimal approximation setting that achieves the lowest execution time while guaranteeing quality</p>
    <p>Sampling policy  to identify the key frames that redo the searching for approximation parameters.</p>
  </div>
  <div class="page">
    <p>Key Designs</p>
    <p>Error mapping model  to map the quality metric of canary output to that of full-sized output</p>
    <p>Searching policy  to approach the optimal approximation setting that achieves lowest execution time while guaranteeing quality</p>
    <p>Sampling policy  to identify the key frames that redo the searching for approximation parameters.</p>
  </div>
  <div class="page">
    <p>Error mapping model</p>
    <p>Given a full-sized frame XF, the canary frame XC, the canary output quality C and a set of approximation parameter A.</p>
    <p>We want to predict the full-sized output quality F</p>
    <p>No prediction:  =  (IRA)  C model  aware of canary quality</p>
    <p>= 0 + 1   + 2  2  CA model  C model plus approximation parameters</p>
    <p>= w  (1, , )  CAD model  CA model plus feature vectors (row diff.)</p>
    <p>= w  (1, , , )</p>
  </div>
  <div class="page">
    <p>Searching policy</p>
    <p>Start from (1,1,1), then increase by 1 in each dimension and follow the least-error path until the predicted quality of full output reaches the threshold.</p>
    <p>Both IRA and VideoChef</p>
    <p>Advantage of VideoChef</p>
  </div>
  <div class="page">
    <p>Sampling policy to reinitiate search for optimal settings</p>
    <p>I-frames in MPEG-4 videos  Scene change detector (lightweight frame-difference based</p>
    <p>classifier)</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>106 Youtube videos w/ 10 video filters and 9 3-stage filter pipelines  Loop perforation and memoization, each w/ 6 approximation levels  Comparing 6 configurations (2 variants of VideoChef) and 2 PSNR</p>
    <p>thresholds (30dB and 20dB) 1) Exact execution 2) Static approximation 3) IRA 4) VideoChef  I-frame sampling 5) VideoChef  Scene change detector 6) Oracle</p>
  </div>
  <div class="page">
    <p>Evaluation  30dB tight quality constraint Execution time is reduced by 39.1% over exact execution 29.9% over static approximation 14.6% over IRA and within 20% of Oracle</p>
    <p>Tracks the Oracle quality and the user specified quality threshold, violation &lt; 5%</p>
  </div>
  <div class="page">
    <p>Evaluation  30dB tight quality constraint</p>
    <p>Tracks the Oracle quality and the user specified quality threshold, violation &lt; 5%</p>
    <p>The CDF of prediction error helps to choose a good inapplication threshold on top of users hard threshold.</p>
  </div>
  <div class="page">
    <p>User Perception Study</p>
    <p>Degree of difference Percentage No difference 58.59% Little difference 34.77% Large difference 6.64% Total difference 0</p>
    <p>VideoChef video Oracle video</p>
    <p>We asked 16 users to watch 16 side-by-side video pairs and tell difference between them.</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>VideoChef: A system for performance and accuracy optimization of video streaming pipelines in a data-dependent manner</p>
    <p>Predictive model to accurately estimate the quality degradation in the full-sized output from the canary output</p>
    <p>Efficient and incremental search technique for the optimal approximation setting to reduce the overhead of the search process</p>
    <p>Quantitative evaluation and user study</p>
  </div>
  <div class="page">
    <p>Insights</p>
    <p>Determination of optimal approximation setting in a streaming application is challenging because the setting may change during the stream. It is important to ensure that the cost of searching for the optimal parameter does not outweigh the benefit of the approximate execution.</p>
    <p>Quality difference between canary output and full-sized output is not negligible.</p>
    <p>Bringing in domain knowledge (I-frames for MPEG video) can be a great help to reduce the overhead of the approximation technique.</p>
  </div>
  <div class="page">
    <p>Questions?</p>
    <p>Thank you! --- All authors</p>
    <p>Ran Xu Jinkyu Koo Rakesh Kumar Peter Bai Subrata Mitra Sasa Misailovic Saurabh Bagchi</p>
  </div>
</Presentation>
