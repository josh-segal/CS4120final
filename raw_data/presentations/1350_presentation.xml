<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Virtual machine introspection in a hybrid honeypot architecture Tamas K Lengyel &amp; Justin Neumann</p>
    <p>University of Connecticut</p>
  </div>
  <div class="page">
    <p>The role of the honeypot</p>
  </div>
  <div class="page">
    <p>The limitations Low-interaction honeypots:</p>
    <p>&quot;Artificial&quot; attack surface  Limited information about the attacks</p>
    <p>High-interaction honeypots:  Complexity  Maintenance  High risk</p>
  </div>
  <div class="page">
    <p>Hybrid honeypots</p>
    <p>Robin Berthier, 2006: Advanced honeypot architecture for network threats quantification</p>
    <p>Theory: Combining low and high interaction honeypots can provide the best of the two.</p>
    <p>Original idea: switch an attack to a high-interaction honeypot based on predefined rules</p>
    <p>Problem: What rules?</p>
  </div>
  <div class="page">
    <p>Further problems Few choices for high-interaction honeypots</p>
    <p>Why? &quot;Regarding Reviewer #4s question as to whether we would consider releasing gateway and containment server code to the community,</p>
    <p>we indeed considered this. However, in our experience malware execution platforms differ substantially, and it would likely be hard to make our</p>
    <p>code work in a variety of environments. In addition, we lack the support to commit to the maintenance necessary for such a public release to be effective.&quot; Kreibich et. al., SIGCOMM 2011: GQ: Practical Containment for Measuring Modern Malware Systems</p>
    <p>Sebek  Qebek  Argos</p>
  </div>
  <div class="page">
    <p>Further problems Virtualization based honeypots:</p>
    <p>Modified QEMU</p>
    <p>Malware can detect monitoring and alter its behaviour</p>
    <p>Most only work with Windows XP SP2</p>
  </div>
  <div class="page">
    <p>VMI-Honeymon http://vmi-honeymon.sf.net  Built on open source tools</p>
    <p>Full virtualization, no modification to Xen</p>
    <p>Works with all versions of Windows with no in-guest agent</p>
    <p>Read-only memory scanning and footprinting eliminates subversion attacks</p>
    <p>LibVMI  LibVirt  LibGuestFS  Volatility  Xen</p>
  </div>
  <div class="page">
    <p>System overview  Honeybrid filters</p>
    <p>attackers who already dropped payload on Dionaea</p>
    <p>Only one attacker interacts with the HIH at a time</p>
    <p>An attack is transferred to the HIH when it is free (random samples)</p>
  </div>
  <div class="page">
    <p>System overview  Honeybrid detects</p>
    <p>outgoing connections from HIH, sends trigger to VMIHoneymon</p>
    <p>On time-out Honeybrid sends trigger to VMIHoneymon</p>
    <p>After attack session, HIH is reverted</p>
  </div>
  <div class="page">
    <p>Results (in two weeks) VMI-Honeymon: 886 binaries (6,335 TCP sessions) Dionaea: 1,411 binaries (1,152,142 TCP sessions)</p>
  </div>
  <div class="page">
    <p>Performance</p>
  </div>
  <div class="page">
    <p>Future work  Multiple concurrent HIHs</p>
    <p>Using Windows Vista, 7 and 8 as HIH</p>
    <p>Fast-clone/memory sharing of HIHs</p>
    <p>Automatic analyses of malware memory footprints to detect similarities</p>
  </div>
  <div class="page">
    <p>Thank you!</p>
  </div>
</Presentation>
