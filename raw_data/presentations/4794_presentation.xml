<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Cost-optimal Planning with Landmarks</p>
    <p>E. Karpas C. Domshlak</p>
    <p>Faculty of Industrial Engineering and Management Technion</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Outline</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Landmarks</p>
    <p>A landmark is a fact that must be true at some point in every valid plan (Hoffmann, Porteous and Sebastia 2004)</p>
    <p>Landmarks can be (partially) ordered, according to the order they must be achieved</p>
    <p>Some landmarks and ordering can be discovered automatically</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Example Planning Problem - Blocks</p>
    <p>The BLOCKSWORLD domain deals with arranging blocks in a specific way using a crane</p>
    <p>Variables: crane-empty, holding(X), clear(X), ontable(X), on(X,Y) Operators:</p>
    <p>pickup(X) Pre: ontable(X), clear(X), crane-empty Add: holding(X) Del: ontable(X), clear(X), crane-empty</p>
    <p>putdown(X) . . . stack(X,Y) . . . unstack(X,Y) . . .</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Landmarks Example</p>
    <p>Consider the following blocks problem (The Sussman Anomaly)</p>
    <p>Initial State Goal: on(A, B), on(B, C)</p>
    <p>clear C</p>
    <p>on B C</p>
    <p>clear A</p>
    <p>on C A ontable B</p>
    <p>holding B</p>
    <p>crane-empty</p>
    <p>holding A</p>
    <p>ontable A clear B</p>
    <p>on A B</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Using Landmarks - Heuristic</p>
    <p>The number of landmarks that still need to be achieved can be used as an (inadmissible) heuristic function (Richter et. al. 2008)</p>
    <p>This is the heuristic used by LAMA - a state of the art satisficing planner, and winner of the IPC-2008 sequential satisficing track</p>
    <p>Note that this a path-dependent heuristic</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>LAMA</p>
    <p>The landmarks that still need to be achieved after reaching state s via path  are</p>
    <p>L(s, ) =</p>
    <p>L is the set of all (discovered) landmarks</p>
    <p>Accepted(s, )  L is the set of accepted landmarks ReqAgain(s, )  Accepted(s, ) is the set of required again landmarks - landmarks that must be achieved again (computed from landmark orderings)</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>LAMA</p>
    <p>The landmarks that still need to be achieved after reaching state s via path  are</p>
    <p>L(s, ) = L</p>
    <p>L is the set of all (discovered) landmarks</p>
    <p>Accepted(s, )  L is the set of accepted landmarks ReqAgain(s, )  Accepted(s, ) is the set of required again landmarks - landmarks that must be achieved again (computed from landmark orderings)</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>LAMA</p>
    <p>The landmarks that still need to be achieved after reaching state s via path  are</p>
    <p>L(s, ) = L\Accepted(s, )</p>
    <p>L is the set of all (discovered) landmarks</p>
    <p>Accepted(s, )  L is the set of accepted landmarks ReqAgain(s, )  Accepted(s, ) is the set of required again landmarks - landmarks that must be achieved again (computed from landmark orderings)</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>LAMA</p>
    <p>The landmarks that still need to be achieved after reaching state s via path  are</p>
    <p>L(s, ) = L\(Accepted(s, )\ReqAgain(s, ))</p>
    <p>L is the set of all (discovered) landmarks</p>
    <p>Accepted(s, )  L is the set of accepted landmarks ReqAgain(s, )  Accepted(s, ) is the set of required again landmarks - landmarks that must be achieved again (computed from landmark orderings)</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Problem - Inadmissibility</p>
    <p>LAMA is inadmissible because a single action can achieve multiple landmarks</p>
    <p>Example: stack(A,B) achieves both crane-empty and on(A,B).</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Admissibility Schemes</p>
    <p>Outline</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Admissibility Schemes</p>
    <p>Admissibility - how?</p>
    <p>We are interested in admissible heuristics, in order to perform cost-optimal planning</p>
    <p>Problem: the number of landmarks is inadmissibile</p>
    <p>Solution: assign a cost to each landmark, and sum over the costs of landmarks</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Admissibility Schemes</p>
    <p>Conditions for Admissible Cost Sharing</p>
    <p>Each action shares its cost between all the landmarks it achieves</p>
    <p>Each landmark is assigned the cheapest cost any action assigned it</p>
    <p>Proposition 1</p>
    <p>Given costs that obey these constraints, the sum of costs of landmarks that still need to be achieved is an admissible heuristic:</p>
    <p>hL(s, ) := cost(L(s, )) =  L(s,)</p>
    <p>cost( )</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Admissibility Schemes</p>
    <p>Cost Partitioning - how?</p>
    <p>How can we assign costs to landmarks?</p>
    <p>Easy answer - uniform cost sharing - each action shares its cost equally between the landmarks it achieves</p>
    <p>Advantage: easy and fast to compute</p>
    <p>Disadvantage: can be much worse than the optimal cost partitioning</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Admissibility Schemes</p>
    <p>Example</p>
    <p>q</p>
    <p>p1</p>
    <p>p2</p>
    <p>p3</p>
    <p>p4</p>
    <p>a1</p>
    <p>a2</p>
    <p>a3</p>
    <p>a4</p>
    <p>Uniform cost sharing</p>
    <p>min(0.5,0.5,0.5,0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>hL = 2.5 hL = 2.5Optimal cost sharing</p>
    <p>min(0,0,0,0)=0</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>hL = 4</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Admissibility Schemes</p>
    <p>Example</p>
    <p>q</p>
    <p>p1</p>
    <p>p2</p>
    <p>p3</p>
    <p>p4</p>
    <p>a1</p>
    <p>a2</p>
    <p>a3</p>
    <p>a4</p>
    <p>Uniform cost sharing</p>
    <p>min(0.5,0.5,0.5,0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>hL = 2.5 hL = 2.5Optimal cost sharing</p>
    <p>min(0,0,0,0)=0</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>hL = 4</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Admissibility Schemes</p>
    <p>Example</p>
    <p>q</p>
    <p>p1</p>
    <p>p2</p>
    <p>p3</p>
    <p>p4</p>
    <p>a1</p>
    <p>a2</p>
    <p>a3</p>
    <p>a4</p>
    <p>Uniform cost sharing</p>
    <p>min(0.5,0.5,0.5,0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>hL = 2.5 hL = 2.5Optimal cost sharing</p>
    <p>min(0,0,0,0)=0</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>hL = 4</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Admissibility Schemes</p>
    <p>Example</p>
    <p>q</p>
    <p>p1</p>
    <p>p2</p>
    <p>p3</p>
    <p>p4</p>
    <p>a1</p>
    <p>a2</p>
    <p>a3</p>
    <p>a4</p>
    <p>Uniform cost sharing</p>
    <p>min(0.5,0.5,0.5,0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>hL = 2.5</p>
    <p>hL = 2.5Optimal cost sharing</p>
    <p>min(0,0,0,0)=0</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>hL = 4</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Admissibility Schemes</p>
    <p>Example</p>
    <p>q</p>
    <p>p1</p>
    <p>p2</p>
    <p>p3</p>
    <p>p4</p>
    <p>a1</p>
    <p>a2</p>
    <p>a3</p>
    <p>a4</p>
    <p>Uniform cost sharing</p>
    <p>min(0.5,0.5,0.5,0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>hL = 2.5</p>
    <p>hL = 2.5Optimal cost sharing</p>
    <p>min(0,0,0,0)=0</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>hL = 4</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Admissibility Schemes</p>
    <p>Example</p>
    <p>q</p>
    <p>p1</p>
    <p>p2</p>
    <p>p3</p>
    <p>p4</p>
    <p>a1</p>
    <p>a2</p>
    <p>a3</p>
    <p>a4</p>
    <p>Uniform cost sharing</p>
    <p>min(0.5,0.5,0.5,0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>hL = 2.5</p>
    <p>hL = 2.5Optimal cost sharing</p>
    <p>min(0,0,0,0)=0</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>hL = 4</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Admissibility Schemes</p>
    <p>Example</p>
    <p>q</p>
    <p>p1</p>
    <p>p2</p>
    <p>p3</p>
    <p>p4</p>
    <p>a1</p>
    <p>a2</p>
    <p>a3</p>
    <p>a4</p>
    <p>Uniform cost sharing</p>
    <p>min(0.5,0.5,0.5,0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>min(0.5)=0.5</p>
    <p>hL = 2.5</p>
    <p>hL = 2.5Optimal cost sharing</p>
    <p>min(0,0,0,0)=0</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>min(1)=1</p>
    <p>hL = 4</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Admissibility Schemes</p>
    <p>Optimal Cost Sharing</p>
    <p>The good news: the optimal cost partitioning can be computed in poly-time</p>
    <p>The constraints for admissibility are linear, and can be used in a Linear Programming (LP) problem The objective is to maximize the sum of landmark costs</p>
    <p>The bad news: poly-time can still take a long time</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Admissibility Schemes</p>
    <p>How can we do better?</p>
    <p>So far: Uniform cost sharing is easy to compute, but suboptimal Optimal cost sharing takes a long time to compute</p>
    <p>Q: How can we get better heuristic estimates that dont take a long time to compute?</p>
    <p>A: Exploit additional information (action landmarks)</p>
    <p>An action landmark is an action that must be taken in every valid plan (Zhu and Givan 2004, Vidal and Geffner 2006)</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Outline</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>A with Path Dependent Heuristics</p>
    <p>Regular A evaluates a state only the first time it is reached (via path 1)</p>
    <p>When the same state is reached again (via a different path 2), it is not evaluated again</p>
    <p>A with Path-Dependent Heuristic 1 Evaluate a state every time it is reached 2 Use the maximum estimate</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>A with Landmarks Heuristics</p>
    <p>s0</p>
    <p>s</p>
    <p>g</p>
    <p>12</p>
    <p>I achieved I did not achieve</p>
    <p>I need to achieve</p>
    <p>Suppose state s was reached by paths 1, 2 Suppose 1 achieved landmark  and 2 did not</p>
    <p>Then  needs to be achieved after state s</p>
    <p>We call this multi-path-dependence</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>A with Landmarks Heuristics</p>
    <p>s0</p>
    <p>s</p>
    <p>g</p>
    <p>12 I achieved I did not achieve</p>
    <p>I need to achieve</p>
    <p>Suppose state s was reached by paths 1, 2 Suppose 1 achieved landmark  and 2 did not</p>
    <p>Then  needs to be achieved after state s</p>
    <p>We call this multi-path-dependence</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>A with Landmarks Heuristics</p>
    <p>s0</p>
    <p>s</p>
    <p>g</p>
    <p>12 I achieved I did not achieve</p>
    <p>I need to achieve</p>
    <p>Suppose state s was reached by paths 1, 2 Suppose 1 achieved landmark  and 2 did not</p>
    <p>Then  needs to be achieved after state s</p>
    <p>We call this multi-path-dependence</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>A with Landmarks Heuristics</p>
    <p>s0</p>
    <p>s</p>
    <p>g</p>
    <p>12 I achieved I did not achieve</p>
    <p>I need to achieve</p>
    <p>Suppose state s was reached by paths 1, 2 Suppose 1 achieved landmark  and 2 did not</p>
    <p>Then  needs to be achieved after state s</p>
    <p>We call this multi-path-dependence</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Fusing Data from Multiple Paths</p>
    <p>Suppose we have a set of paths from s0 to a state s The accepted landmarks are those that were accepted by all paths</p>
    <p>We compute hL using the accepted landmarks from all the paths</p>
    <p>We call the resulting search algoritm LM-A</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Outline</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Evaluation - Baseline</p>
    <p>Blocks</p>
    <p>Logistics</p>
    <p>Depots</p>
    <p>Satellite</p>
    <p>Number of Solved Instances</p>
    <p>LM-A*+hLA LM-A*+hL</p>
    <p>A*+hLA Blind hmax</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Evaluation - State-of-the-art</p>
    <p>hLA FA</p>
    <p>Number of Solved Instances</p>
    <p>gripper zeno-travel trucks schedule-strips satellite pw-tank pw-no-tank psr logistics freecell driverlog blocks airport</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Outline</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Summary</p>
    <p>We introduced an admissible landmarks-based heuristic</p>
    <p>We introduced the LM-A search algorithm that uses multi-path-dependent heuristics more effectively than A</p>
    <p>LM-A with hLA favorably compete with state-of-the-art admissible heuristics</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
  <div class="page">
    <p>Search Algorithm (hint: not A) Experimental Evaluation</p>
    <p>Summary</p>
    <p>Thank You</p>
    <p>Thank You</p>
    <p>E. Karpas, C. Domshlak Cost-optimal Planning with Landmarks</p>
  </div>
</Presentation>
