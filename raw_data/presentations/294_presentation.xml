<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Experiences with Eucalyptus: Deploying an Open Source Cloud</p>
    <p>Rick Bradshaw - bradshaw@mcs.anl.gov Piotr T Zbiegiel - pzbiegiel@anl.gov Argonne National Laboratory</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>Introduction and Background  Eucalyptus experiences and observations</p>
    <p>o Scalability o Security o Support</p>
    <p>Our chosen support model  Conclusions and future work</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Clouds for scientific computing? o Magellan Project</p>
    <p>buy or build  What cloud software is available?</p>
    <p>o Different Cloud APIs  EC2 ( http://aws.amazon.com/ec2/ )  Rackspace (http://www.rackspacecloud.com/?CMP=Google_rackspace+cloud_exact )  Nimbus ( http://www.nimbusproject.org/ )  many more out there</p>
    <p>Why did we choose Eucalyptus? o EC2 compatibility o Open Source / Free o UEC from Ubuntu</p>
  </div>
  <div class="page">
    <p>Eucalyptus 1.6.2</p>
  </div>
  <div class="page">
    <p>Eucalyptus Scalability: Cluster sizes</p>
    <p>Tested Eucalyptus with various sized clusters (40, 80, 160, 240 nodes behind one cluster controller)</p>
    <p>All-around performance best with smaller clusters  Performance deteriorated as clusters size grew due to iterative operations  Eucalyptus instance termination operation is serial</p>
    <p>o Instances that dont terminate in a timely manner are communicated to all nodes o The process delays other activities while it works on terminating instances o Naturally, larger clusters result in longer execution times for such operations o Instance requests which never left the cluster controller due to errors are still terminated on the node controllers!</p>
  </div>
  <div class="page">
    <p>Eucalyptus Scalability: Load Testing</p>
    <p>Load tests were done to stress the software.  Eucalyptus performed acceptably given enough time to complete requests  Rapid churning (starting and stopping instances) gives Eucalyptus</p>
    <p>heartburn.  Ran into hard limit on a single cluster controller</p>
    <p>o Somewhere between 750 and 800 running VMs o Caused by message size limitation in cloud and cluster controller</p>
    <p>communication protocol</p>
  </div>
  <div class="page">
    <p>Security: Network Security</p>
    <p>Eucalyptus network mode: MANAGED-NOVLAN  VM network traffic masquerades as Cluster Controller  By default, VMs can communicate with Node Controllers and other internal</p>
    <p>systems. (BAD)  iptables rules on node controllers</p>
    <p>o prevents VMs from making unwanted connections o No impact to cloud operation</p>
  </div>
  <div class="page">
    <p>Security: IDS</p>
    <p>Risk areas identified for the VMs  Outside IPs scanning/attacking VMs  VMs scanning/attacking outside IPs  VMs running suspect services</p>
    <p>Eucalyptus MANAGED-NOVLAN network model provides suitable IDS access</p>
    <p>IDS watches internal Cluster Controller interface  Monitors all inbound and outbound traffic to the VMs  Also monitors communication between security groups  Can not see VMs communicating within a security group.</p>
  </div>
  <div class="page">
    <p>Security: Image Security Concerns</p>
    <p>Users can upload and register customized disk images  Sys Admins must register kernel and ramdisk images  Uploaded images automatically made public</p>
    <p>o Users must choose to change permissions o Contents of image can be inadvertently leaked</p>
    <p>Users can upload compromised images o A myriad of ways to backdoor o Bucket naming is fairly open o This even happened accidentally</p>
    <p>Users can upload images with exploitable vulnerabilities o Every user is a sys admin o We can recommend but not require best practices</p>
  </div>
  <div class="page">
    <p>User Support</p>
  </div>
  <div class="page">
    <p>User Support</p>
    <p>We chose a community based support model o forums( still haven't found one everyone agrees on ) o wikis o mailing lists o best effort documentation</p>
    <p>The difference between Job support and OS/VM support o the complexity is greatly increased o learning curve for users is steep o pre-built images do not always work without effort</p>
    <p>Kernels  KVM vs. Xen  startup environment</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Works but still evaluating other solutions o Nimbus o OpenStack</p>
    <p>Don't believe the hype o every cloud stack has its qualities and faults o usage/API should help make the choice</p>
  </div>
</Presentation>
