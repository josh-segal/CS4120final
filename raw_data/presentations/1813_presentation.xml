<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>A Case for Performance-Centric Network Allocation</p>
    <p>Gautam Kumar, Mosharaf Chowdhury, Sylvia Ratnasamy, Ion Stoica</p>
    <p>UC Berkeley UC Berkeley UC Berkeley</p>
    <p>UC Berkeley</p>
  </div>
  <div class="page">
    <p>Datacenter Applications</p>
  </div>
  <div class="page">
    <p>Data Parallelism  Applications execute in several</p>
    <p>computation stages and require transfer of data between these stages (communication).</p>
    <p>Computation in a stage is split across multiple nodes.</p>
    <p>Network has an important role to play, 33% of the running time in Facebook traces. (Orchestra, SIGCOMM 2011)</p>
    <p>M M</p>
    <p>R R</p>
    <p>J</p>
    <p>M</p>
    <p>R</p>
    <p>M</p>
    <p>R</p>
    <p>J</p>
    <p>M</p>
    <p>R</p>
    <p>J</p>
    <p>Map</p>
    <p>Reduce</p>
    <p>Join (*RoPE, NSDI 2012)</p>
    <p>*</p>
    <p>HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>Data Parallelism  Users, often, do not know what network</p>
    <p>support they require.  Final execution graph created by the framework.</p>
    <p>Frameworks know more, provide certain communication primitives.  e.g., Shuffle, Broadcast etc.</p>
    <p>HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>Scope Private clusters running data parallel applications. Little concern for adversarial behavior. Application level inefficiencies dealt extrinsically.</p>
    <p>HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>Current Proposals</p>
  </div>
  <div class="page">
    <p>Explicit Accounting  Virtual cluster based network reservations. (Oktopus,</p>
    <p>SIGCOMM 2011)</p>
    <p>Time-varying network reservations. (SIGCOMM 2012)</p>
    <p>DRAWBACK: Exact network requirements often not known; non work-conserving.</p>
    <p>HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>Fairness-Centric  Flow level fairness or Per-Flow. (TCP)  Fairness with respect to the sources. (Seawall, NSDI</p>
    <p>(FairCloud, SIGCOMM 2012) DRAWBACK:</p>
    <p>Gives little guidance to developers about the performance they can expect while scaling their applications.</p>
    <p>HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>In this work . . .  A new perspective to share the network</p>
    <p>amongst data-parallel applications  performance-centric allocations:  enabling users to reason about the performance of their</p>
    <p>applications when they scale them up.  enabling applications to effectively parallelize to preserve</p>
    <p>the intuitive mapping between scale-up and speed-up.</p>
    <p>Contrast / relate performance-centric proposals with fairness-centric proposals.</p>
    <p>HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>Performance-Centric Allocations</p>
  </div>
  <div class="page">
    <p>/2</p>
    <p>Shuffle Broadcast</p>
    <p>Types of Transfers*</p>
    <p>(*Orchestra, SIGCOMM 2011) HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>/2</p>
    <p>To ta</p>
    <p>l D at</p>
    <p>a =</p>
    <p>To ta</p>
    <p>l D at</p>
    <p>a =</p>
    <p>/2</p>
    <p>Shuffle Broadcast</p>
    <p>Scaling up the application</p>
    <p>HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>Performance-Centric Allocations  Understand the support that the application</p>
    <p>needs from the network to effectively parallelize.</p>
    <p>At a sweet spot  framework knows applications network requirements.</p>
    <p>HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>Shuffle-only clusters</p>
    <p>/2</p>
    <p>Bm Br</p>
    <p>Bm Br</p>
    <p>/2</p>
    <p>tAm tAs tAr</p>
    <p>tBm tBr tBs</p>
    <p>HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>Shuffle-only Clusters</p>
    <p>/2</p>
    <p>Bm Br</p>
    <p>Bm Br</p>
    <p>/2</p>
    <p>tAm tAs= 2/ tAr</p>
    <p>tAm/2 tAr/2 tBs= /2 = tAs/4</p>
    <p>tB &lt; tA/2</p>
    <p>/2</p>
    <p>Bm Br</p>
    <p>Bm Br</p>
    <p>/2</p>
    <p>tAm tAs= 2/ tAr</p>
    <p>tAm/2 tAr/2 tBs= / = tAs/2</p>
    <p>/2</p>
    <p>tB = tA/2</p>
    <p>Per-Flow Proportional</p>
    <p>HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>Broadcast-only Clusters</p>
    <p>Bm Br</p>
    <p>Bm Br</p>
    <p>tAm tAs tAr</p>
    <p>tBm tBr tBs</p>
    <p>HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>Broadcast-only Clusters</p>
    <p>Bm Br</p>
    <p>Bm Br</p>
    <p>tAm tAs= 2/ tAr</p>
    <p>tAm/2 tAr/2 tBs= 2/ = tAs</p>
    <p>/2</p>
    <p>tB &gt; tA/2</p>
    <p>Bm Br</p>
    <p>Bm Br</p>
    <p>tAm tAs= 2/ tAr</p>
    <p>tAm/2 tAr/2 tBs= / = tAs/2</p>
    <p>tB = tA/2</p>
    <p>Proportional Per-Flow</p>
    <p>HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>Recap  TCP in shuffle gives more than</p>
    <p>requisite speed-up and thus hurts performance of small jobs. Proportionality achieves the right balance.</p>
    <p>Proportionality in broadcast limits parallelism. TCP achieves the right balance. Degree of Parallelism</p>
    <p>Sp ee</p>
    <p>d U</p>
    <p>p</p>
    <p>TCP (Shuffle) Prop. (Shuffle) TCP. (Broadcast) Prop. (Broadcast)</p>
    <p>HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>Complexity of a transfer  xN -transfer if x is the factor by which the</p>
    <p>amount of data transferred increases when a scale up of N is done, x  [1, N].</p>
    <p>Shuffle is a 1N -transfer and broadcast is an NNtransfer.</p>
    <p>Performance-centric allocations encompass x. HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>Heterogeneous Frameworks and Congested Resources</p>
  </div>
  <div class="page">
    <p>Share given based on the complexity of the transfer.</p>
    <p>The job completion time of both jobs degrades uniformly in the event of contention.</p>
    <p>Both $nish in 6s</p>
    <p>Both $nish in 4s</p>
    <p>~333Mbps 2Gb to send</p>
    <p>~666Mbps 4Gb to send</p>
    <p>HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>Network Parallelism  Isolation between the speed-up due to the scale-up</p>
    <p>for the application and the performance degradation due to finite resources.</p>
    <p>y y N () X</p>
    <p>: degradation due to limited resources y : old running time y: new running time after a scale-up of N</p>
    <p>HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>Summary</p>
  </div>
  <div class="page">
    <p>Understand performance-centric allocations and their relationship with fairness-centric proposals.  Proportionality is the performance-centric approach for</p>
    <p>shuffle-only clusters.  Breaks down for broadcasts, per-flow is the performance</p>
    <p>centric approach for broadcast-only clusters.</p>
    <p>An attempt to a performance-centric proposal for heterogeneous transfers.  Understand what happens when resources get congested.</p>
    <p>HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>Future Work</p>
  </div>
  <div class="page">
    <p>A more rigorous formulation.  Some questions to be answered: different N1 and</p>
    <p>N2 on both sides of the stage etc.</p>
    <p>Analytical and experimental evaluation of the policies.  Whether redistribution of completion time or total</p>
    <p>savings.</p>
    <p>HotCloud June 12, 2012</p>
  </div>
  <div class="page">
    <p>Thank you</p>
  </div>
</Presentation>
