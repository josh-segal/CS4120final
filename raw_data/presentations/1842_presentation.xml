<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Dynacache: Dynamic Cloud Caching</p>
    <p>Stanford University</p>
    <p>Asaf Cidon, Assaf Eisenman, Mohammad Alizadeh and Sachin Ka?</p>
  </div>
  <div class="page">
    <p>Memcached Driving Web Applica4on Performance</p>
    <p>Web-scale applica4ons heavily reliant on memory caches</p>
    <p>Facebook: 1000s servers, 5 billion requests per second</p>
  </div>
  <div class="page">
    <p>Memcached Hit-rate Impacts Performance</p>
    <p>+1% cache hit-rate  35% speedup  Old latency: 374 s  New latency: 278 s  Facebook study: A4koglu et al [Sigmetrics 12]</p>
    <p>End-to-end speedup even greater  User queries wait on hundreds of requests</p>
  </div>
  <div class="page">
    <p>How Does Memcached Work?</p>
    <p>Memcached Server</p>
    <p>Memcached Client</p>
    <p>Get(key)</p>
    <p>Set(key, value)</p>
    <p>Memcached Server</p>
    <p>Memcached Server</p>
  </div>
  <div class="page">
    <p>How Does Memcached Work?</p>
    <p>Memcached Server</p>
    <p>Memcached Client</p>
    <p>Get(key)</p>
    <p>Set(key, value)</p>
    <p>Response(value)</p>
    <p>ACK</p>
    <p>Memcached Server</p>
    <p>Memcached Server</p>
  </div>
  <div class="page">
    <p>Memcached Server: Sounds Familiar?</p>
    <p>CPU Cache Memcached Server</p>
    <p>Memory Management</p>
    <p>Fixed-sized entries First Come First Serve</p>
    <p>Fixed-sized slabs First Come First Serve</p>
    <p>Evic4on Policy LRU LRU</p>
    <p>Resource Alloca4on Across Applica4ons</p>
    <p>First Come First Serve</p>
    <p>First Come First Serve</p>
  </div>
  <div class="page">
    <p>Not the Same!</p>
    <p>CPU Cache Memcached Server</p>
    <p>Request size Even Highly variable</p>
    <p>Available resources and complexity</p>
    <p>Constrained Unconstrained</p>
    <p>Workload predictability</p>
    <p>Predictable Unpredictable</p>
  </div>
  <div class="page">
    <p>Dynacache: Dynamic Cache Controller</p>
    <p>Memcached Server</p>
    <p>Memcached Controller</p>
    <p>Memcached Server</p>
    <p>Memcached Server</p>
    <p>Hit-rate curve estimation Request distribution</p>
    <p>Memcached Client</p>
  </div>
  <div class="page">
    <p>Dynacache: Dynamic Cache Controller</p>
    <p>Memcached Server</p>
    <p>Memcached Controller</p>
    <p>Memcached Server</p>
    <p>Memcached Server</p>
    <p>Change Memory Allocation Change Eviction</p>
    <p>Policy</p>
    <p>Memcached Client</p>
  </div>
  <div class="page">
    <p>Opportuni4es for Dynacache</p>
    <p>applica4ons 4.</p>
  </div>
  <div class="page">
    <p>Opportuni4es for Dynacache</p>
    <p>applica4ons 4.</p>
  </div>
  <div class="page">
    <p>Memory Alloca4on in Memcached</p>
    <p>Empty Page</p>
    <p>Empty Page Key 1</p>
  </div>
  <div class="page">
    <p>Memory Alloca4on in Memcached</p>
    <p>Empty Page</p>
    <p>Key 1 35 bytes Key 1</p>
  </div>
  <div class="page">
    <p>Memory Alloca4on in Memcached</p>
    <p>Key 2 202 bytes Key 1</p>
    <p>Key 2</p>
    <p>Key 3 183 bytes</p>
    <p>Key 3</p>
  </div>
  <div class="page">
    <p>Memory Alloca4on in Memcached</p>
    <p>Key 1 Key 7</p>
    <p>Key 4 Key 8</p>
    <p>Key 5 Key 9</p>
    <p>Key 6 Key 10</p>
    <p>Key 2</p>
    <p>Key 3</p>
    <p>Key 4 33 bytes</p>
    <p>Key 10 18 bytes</p>
    <p>Key 5 31 bytes</p>
  </div>
  <div class="page">
    <p>Separate Evic4on Queue for Each Slab Class</p>
    <p>Key 11 23 bytes Key 1 Key 4</p>
    <p>Key 5 Key 6</p>
    <p>Key 7 Key 8</p>
    <p>Key 9 Key 10</p>
    <p>Key 2</p>
    <p>Key 12 44 bytes</p>
    <p>Key 3</p>
    <p>Eviction</p>
    <p>Eviction</p>
  </div>
  <div class="page">
    <p>Problems with Memory Alloca4on</p>
    <p>Key 11 23 bytes Key 1 Key 4</p>
    <p>Key 5 Key 6</p>
    <p>Key 7 Key 8</p>
    <p>Key 9 Key 10</p>
    <p>Key 2</p>
    <p>Key 12 44 bytes</p>
    <p>Key 3</p>
    <p>Eviction</p>
    <p>Eviction</p>
  </div>
  <div class="page">
    <p>Problems with Memory Alloca4on</p>
    <p>Key 11 23 bytes Key 1 Key 4</p>
    <p>Key 5 Key 6</p>
    <p>Key 7 Key 8</p>
    <p>Key 9 Key 10</p>
    <p>Key 2</p>
    <p>Key 12 44 bytes</p>
    <p>Key 3</p>
    <p>Eviction</p>
    <p>Eviction</p>
  </div>
  <div class="page">
    <p>MemCachier Dataset</p>
    <p>Weeklong trace taken from MemCachier  30 Memcached servers  490 applica4ons  Each applica4on has its own pages  Each slab class has its own evic4on queue</p>
  </div>
  <div class="page">
    <p>Slab Class AllocaEon: ApplicaEon 3, Memcachier</p>
    <p>% Memory Allocated by Default Slab Alloca4on</p>
    <p>% Memory Allocated by Op4mal Slab Alloca4on</p>
    <p>Applica4on 3: Greedy Alloca4on Favors Large Slabs Classes</p>
  </div>
  <div class="page">
    <p>Hit-rate Curve Profiling</p>
  </div>
  <div class="page">
    <p>Dynamically Op4mize Memory Alloca4on Using Hit-rate curves</p>
    <p>frequency of requests h  hit-rate of requests m  memory allocated to slab class e  evic4on policy M  memory allocated to applica4on</p>
  </div>
  <div class="page">
    <p>Poten4al of Dynamic Memory Alloca4on in Memcachier</p>
    <p>Speedup</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Op4mizing memory alloca4on across applica4ons based on hitrate curves  Mimir: Saemundsson et al [SOCC 14]</p>
    <p>Memcached client  McRouter: Likhtarov et al [Facebook blog 14]</p>
    <p>Rebalancing slabs to reduce slab calcifica4on  Twimer: Rajashekhar et al [Twimer blog 12]  Facebook: Nishtala et al [NSDI 13]</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Web applica4ons heavily reliant on Memcached  Memcacheds policies are sta4c and greedy</p>
    <p>Resource alloca4on  Evic4on policy</p>
    <p>Web applica4ons are dynamic and variable  Dynacache is dynamic cache controller that can dynamically adapt resource alloca4on and evic4on policy</p>
  </div>
  <div class="page">
    <p>Dynacache Prototype Implementa4on</p>
    <p>Memcached Server</p>
    <p>App 1, Slab 0</p>
    <p>App 3, Slab 6 App 7, Slab 3</p>
    <p>LRU Queues</p>
    <p>Client Requests Server</p>
    <p>Responses</p>
    <p>Classifier</p>
    <p>Classifier</p>
    <p>Classifie r</p>
    <p>Low Entropy</p>
    <p>Low Entropy</p>
    <p>High Entropy</p>
    <p>Profiler</p>
    <p>App 7 Hitrate Curve</p>
    <p>App 7 Op4mal Slab Alloc.</p>
    <p>Optimize r</p>
    <p>Dynacache Controller</p>
  </div>
  <div class="page">
    <p>Evalua4on</p>
    <p>Th ro ug hp</p>
    <p>ut )</p>
    <p>O ve rh ea d)</p>
    <p>Requests)per)Second)(1000s))</p>
  </div>
</Presentation>
