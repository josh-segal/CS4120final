<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>HSTS Supports Targeted Surveillance</p>
    <p>Paul Syverson and Matt Traudt Center for High Assurance Computer Systems (CHACS) U.S. Naval Research Laboratory Washington DC</p>
    <p>FOCI `18: Free and Open Communications on the Internet Baltimore MD, U.S.A. September 12 2017</p>
  </div>
  <div class="page">
    <p>HTTP Strict Transport Security (HSTS): widely used (IETF) Internet Standard - improves security: forces encrypted connections - allows a site to individuate and track users, even</p>
    <p>if they clear cookies and try to erase their history</p>
    <p>Everybody knew that from the beginning</p>
  </div>
  <div class="page">
    <p>Main take-aways</p>
    <p>Its much worse than was recognized/acknowledged: Using HSTS headers - sites can track how recently someone visited - sites can track despite recent Safari anti-tracking countermeasures - 3rd parties (Ad services, CDNs) can track users across visited sites - can censor the content, services, and destinations users are offered</p>
    <p>There are things we can do to improve the situation while problem is still anecdotal</p>
    <p>HSTS Supports Targeted Surveillance is recursively paradoxical</p>
  </div>
  <div class="page">
    <p>Example: what HSTS is for</p>
    <p>Alice: lost &amp; late for meeting, looking up route on Google Maps</p>
    <p>maps.google.com</p>
  </div>
  <div class="page">
    <p>Example: What HSTS is for</p>
    <p>maps.google.com IP Address: 172.217.1.174</p>
    <p>Q: maps.google.com A: 172.217.1.174</p>
    <p>DNS* Server</p>
    <p>*DNS: Domain Name System</p>
    <p>maps.google.com</p>
    <p>Alice: lost &amp; late for meeting, looking up route on Google Maps</p>
  </div>
  <div class="page">
    <p>Example: What HSTS is for</p>
    <p>maps.google.com IP Address: 172.217.1.174</p>
    <p>Q: maps.google.com A: 172.217.1.174</p>
    <p>DNS* Server</p>
    <p>*DNS: Domain Name System</p>
    <p>maps.google.com</p>
  </div>
  <div class="page">
    <p>Example: What HSTS is for</p>
    <p>Address lookup is not secure</p>
    <p>maps.google.com IP Address: 172.217.1.174</p>
    <p>Q: maps.google.com A: 185.64.80.30</p>
    <p>kktcmerkezbankasi.org IP Address: 185.64.80.30</p>
    <p>DNS* Server</p>
    <p>*DNS: Domain Name System</p>
    <p>Alice: lost &amp; late for meeting, looking up route on Google Maps</p>
  </div>
  <div class="page">
    <p>Example: What HSTS addresses</p>
    <p>maps.google.com IP Address: 172.217.1.174</p>
    <p>kktcmerkezbankasi.org IP Address: 185.64.80.30</p>
    <p>Certificate Authority</p>
    <p>Alice: lost &amp; late for meeting, looking up route on Google Maps</p>
  </div>
  <div class="page">
    <p>Example: What HSTS is for</p>
    <p>Alice enters maps.google.com</p>
    <p>maps.google.com IP Address: 172.217.1.174</p>
    <p>kktcmerkezbankasi.org IP Address: 185.64.80.30</p>
    <p>Certificate Authority</p>
    <p>Alice: lost &amp; late for meeting, looking up route on Google Maps</p>
  </div>
  <div class="page">
    <p>Example: What HSTS is for</p>
    <p>Alice enters maps.google.com</p>
    <p>maps.google.com IP Address: 172.217.1.174</p>
    <p>kktcmerkezbankasi.org IP Address: 185.64.80.30</p>
    <p>Certificate Authority X Alice: lost &amp; late for meeting, looking up route on Google Maps</p>
  </div>
  <div class="page">
    <p>Example: What HSTS is for</p>
    <p>Alice enters maps.google.com, HSTS forces her browser to only connect via HTTPS://maps.google.com</p>
    <p>maps.google.com IP Address: 172.217.1.174</p>
    <p>kktcmerkezbankasi.org IP Address: 185.64.80.30</p>
    <p>Certificate Authority</p>
    <p>Alice: lost &amp; late for meeting, looking up route on Google Maps</p>
  </div>
  <div class="page">
    <p>HSTS basics</p>
    <p>Alice enters maps.google.com, HSTS forces her browser to only connect via HTTPS://maps.google.com How?</p>
  </div>
  <div class="page">
    <p>HSTS basics</p>
    <p>Alice enters maps.google.com, HSTS forces her browser to only connect via HTTPS://maps.google.com How?  maps.google.com sends header Strict-Transport-Security: max-age=31536000</p>
    <p>Alices browser remembers this  will only connect to maps.google.com via TLS</p>
    <p>for one year - whether typed, selected, or redirected</p>
    <p>will not allow user to click through warning</p>
  </div>
  <div class="page">
    <p>HSTS basic tracking</p>
    <p>Send invisible pixels and HSTS headers for them &lt;img src=https://01.foo.com/FQd23.jpg, width=1, height=1&gt;</p>
    <p>HSTS vector</p>
    <p>Etc.</p>
  </div>
  <div class="page">
    <p>HSTS basic tracking</p>
    <p>When client returns, attempt HTTP connection to all resources, and see which force HTTPS</p>
    <p>HSTS vector</p>
    <p>Etc.</p>
  </div>
  <div class="page">
    <p>HSTS basic tracking</p>
    <p>When client returns, attempt HTTP connection to all resources, and see which force HTTPS</p>
    <p>With 30 pixels, 2^30=over a billion possible classifications</p>
  </div>
  <div class="page">
    <p>HSTS basic tracking</p>
    <p>When client returns, attempt HTTP connection to all resources, and see which force HTTPS</p>
    <p>With 30 pixels, 2^30=over a billion possible classifications  Some call HSTS state vector supercookie</p>
    <p>- Survives clearing cookies and some other ways of clearing data/history</p>
  </div>
  <div class="page">
    <p>HSTS basic tracking</p>
    <p>When client returns, attempt HTTP connection to all resources, and see which force HTTPS</p>
    <p>With 30 pixels, 2^30=over a billion possible classifications  Some call HSTS state vector supercookie</p>
    <p>- Survives clearing cookies and some other ways of clearing data/history</p>
    <p>Mar 18: Apple reported basic tracking of Safari users in the wild.  Announced countermeasures</p>
    <p>- Ignore HSTS headers for invisible pixels and similar (domains for which they block cookies).</p>
    <p>- Ignore HSTS except for loaded hostname and TLD+1 (E.g., for a.a.a.a.foo.com, only respect HSTS headers for a.a.a.a.foo.com name and foo.com, not for a.a.foo.com )</p>
  </div>
  <div class="page">
    <p>HSTS redirect tracking</p>
    <p>Mar 18: Apple reported basic tracking of Safari users in the wild.  Announced countermeasures</p>
    <p>- Ignore HSTS headers for invisible pixels and similar (domains for which they block cookies).</p>
    <p>- Ignore HSTS except for loaded hostname and TLD+1 (E.g., for a.a.a.a.foo.com, only respect HSTS headers for a.a.a.a.foo.com name and foo.com, not for a.a.foo.com )</p>
    <p>Our main attacks redirect via a chain of loaded hostnames</p>
  </div>
  <div class="page">
    <p>HSTS redirect tracking</p>
    <p>Mar 18: Apple reported basic tracking of Safari users in the wild.  Announced countermeasures</p>
    <p>- Ignore HSTS headers for invisible pixels and similar (domains for which they block cookies).</p>
    <p>- Ignore HSTS except for loaded hostname and TLD+1 (E.g., for a.a.a.a.foo.com, only respect HSTS headers for a.a.a.a.foo.com name and foo.com, not for a.a.foo.com )</p>
    <p>Our main attacks redirect via a chain of loaded hostnames  Will this impact performance or raise user suspicion?</p>
  </div>
  <div class="page">
    <p>HSTS redirect tracking</p>
    <p>See video Redirect Chain Chrome and Safari.webm at https://github.com/pastly/satis-hsts-tracking</p>
  </div>
  <div class="page">
    <p>Attacks using HSTS redirect tracking</p>
    <p>Entropist fallacy: Its not just about the number of specific clients individuated</p>
    <p>Some of the other things attackers can do  Can send HSTS headers with different values of max-age=</p>
    <p>to treat users who visited at various times differently  Can offer up different content/services to users who visited</p>
    <p>different parts of web page, or parts in different order</p>
    <p>A content-delivery-network (CDN), Ad network, analytics network used at multiple sites can track users across sites</p>
    <p>Can select content to (not) offer on arbitrary serviced sites (again regardless of clearing cookies)</p>
  </div>
  <div class="page">
    <p>Attacks using HSTS redirect tracking</p>
    <p>See video HSTS Chrome clickjacking kitten.webm at https://github.com/pastly/satis-hsts-tracking</p>
  </div>
  <div class="page">
    <p>Attacks using HSTS redirect tracking</p>
    <p>See video HSTS Chrome clickjacking kitten.webm at https://github.com/pastly/satis-hsts-tracking</p>
    <p>More attacks and analysis (e.g. CSS-based cross-domain tracking) in paper with links to code and video</p>
    <p>Also discussions of HSTS-preload and HTTPS Everywhere</p>
  </div>
  <div class="page">
    <p>Recommendations, Dilemmas, Questions</p>
    <p>Browsers should make it clear how to check (and how to remove?) dynamic HSTS state - Chrome only browser we checked with GUI for this, but not as</p>
    <p>easy to find or use as clearing cookies</p>
    <p>- Firefox state is only stored to file when browser closes</p>
    <p>- Safari stores HSTS state in binary file</p>
  </div>
  <div class="page">
    <p>Recommendations, Dilemmas, Questions</p>
    <p>Browsers should make it clear how to check (and how to remove?) dynamic HSTS state</p>
    <p>Eliminating HSTS header support avoids tracking/censorship, but makes MitM more broadly effective</p>
  </div>
  <div class="page">
    <p>Recommendations, Dilemmas, Questions</p>
    <p>Browsers should make it clear how to check (and how to remove?) dynamic HSTS state</p>
    <p>Eliminating HSTS header support avoids tracking/censorship, but makes MitM more broadly effective  Browsers should make it possible to toggle on/off</p>
    <p>accepting HSTS headers?  Browsers should permit toggling all connections</p>
    <p>TLS-only?</p>
  </div>
  <div class="page">
    <p>Recommendations, Dilemmas, Questions</p>
  </div>
  <div class="page">
    <p>Comments? Questions?</p>
    <p>Browsers should make it clear how to check (and how to remove?) dynamic HSTS state</p>
    <p>Eliminating HSTS header support avoids tracking/censorship, but makes MitM more broadly effective  Browsers should make it possible to toggle on/off</p>
    <p>accepting HSTS headers?  Browsers should permit toggling all connections</p>
    <p>TLS-only?</p>
  </div>
</Presentation>
