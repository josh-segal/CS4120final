<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Provenance-Only Integration</p>
    <p>Ashish Gehani Dawood Tariq</p>
    <p>SRI</p>
    <p>Provenance-Only Integration  p. 1/13</p>
  </div>
  <div class="page">
    <p>Integration Challenges</p>
    <p>Metadata variation:</p>
    <p>Abstraction levels</p>
    <p>Completeness</p>
    <p>Identifiers</p>
    <p>Semantics</p>
    <p>Querying requires:</p>
    <p>Record assembly</p>
    <p>Reconciling syntax</p>
    <p>Mapping semantics</p>
    <p>Provenance-Only Integration  p. 2/13</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Data integration</p>
    <p>AnHai Doan, Alon Halevy, and Zachary Ives,</p>
    <p>Principles of data integration, Elsevier, 2012.</p>
    <p>Provenance integration</p>
    <p>Semantic web (Umuhoza 2012)</p>
    <p>Grid computing (Zhao 2008)</p>
    <p>System interoperability (Angelino 2011)</p>
    <p>Cross-organization sharing (Allen 2011)</p>
    <p>Provenance-Only Integration  p. 3/13</p>
  </div>
  <div class="page">
    <p>Provenance-Only Integration</p>
    <p>Single underlying activity</p>
    <p>Multiple views of it</p>
    <p>Partial overlap in metadata</p>
    <p>uid:0 pidname:syslogd</p>
    <p>ppid:1 starttime_simple:Thu May 22 18:24:41 2014</p>
    <p>pid:21 type:Process</p>
    <p>user:root</p>
    <p>path:/private/var/log/asl/2014.06.10.U0.G80.asl filename:2014.06.10.U0.G80.asl</p>
    <p>type:Artifact version:1</p>
    <p>(type:WasGeneratedBy)</p>
    <p>path:/private/etc/syslog.conf filename:syslog.conf</p>
    <p>type:Artifact version:0</p>
    <p>(type:Used)</p>
    <p>gid:0 pid:21</p>
    <p>type:Process</p>
    <p>path:/private/var/log/asl/2014.06.10.U0.G80.asl filename:2014.06.10.U0.G80.asl</p>
    <p>type:Artifact version:1</p>
    <p>(time:1402396472245 type:WasGeneratedBy)</p>
    <p>path:/private/etc/syslog.conf filename:syslog.conf</p>
    <p>type:Artifact version:0</p>
    <p>(time:1402400047469 type:Used)</p>
    <p>Provenance-Only Integration  p. 4/13</p>
  </div>
  <div class="page">
    <p>Speech Processing Hot Spots</p>
    <p>Provenance-Only Integration  p. 5/13</p>
  </div>
  <div class="page">
    <p>Basic Provenance-Only Integration</p>
    <p>Provenance from two vantage points</p>
    <p>Need to integrate the two</p>
    <p>Approach:</p>
    <p>Define matching threshold</p>
    <p>Merge vertex pair if -similar</p>
    <p>Merge edge pair if -similar</p>
    <p>Cost from conflating owners</p>
    <p>Goal:</p>
    <p>Minimize</p>
    <p>Keep cost &lt; tolerance  Provenance-Only Integration  p. 6/13</p>
  </div>
  <div class="page">
    <p>Android Provenance</p>
    <p>Security analysis</p>
    <p>System-wide monitoring</p>
    <p>Resource-constrained</p>
    <p>Disrupts power management</p>
    <p>Blinded by garbage collection</p>
    <p>Multiple abstraction levels</p>
    <p>Kernel interface</p>
    <p>Inter-application (Binder)</p>
    <p>Provenance-only integration</p>
    <p>Provenance-Only Integration  p. 7/13</p>
  </div>
  <div class="page">
    <p>Android</p>
    <p>by Alvaro Fuentes Vasquez via Wikimedia Commons (CC-BY-SA-3.0-2.5-2.0-1.0) Provenance-Only Integration  p. 8/13</p>
  </div>
  <div class="page">
    <p>Fast Integration</p>
    <p>Integrate all -similar elements</p>
    <p>Dont have to find matching pairs</p>
    <p>Avoids subgraph isomorphism problem</p>
    <p>Separate vertex, edge matching thresholds</p>
    <p>Thresholds are input now</p>
    <p>Cost is per match now</p>
    <p>Approach:</p>
    <p>Merge v-similar vertices, if cost &lt;</p>
    <p>Merge e-similar edges, if cost &lt;</p>
    <p>Provenance-Only Integration  p. 9/13</p>
  </div>
  <div class="page">
    <p>False Integration  High Cost</p>
    <p>!&quot;</p>
    <p>#!&quot;</p>
    <p>$!&quot;</p>
    <p>%!&quot;</p>
    <p>&amp;!&quot;</p>
    <p>'!&quot;</p>
    <p>(!&quot;</p>
    <p>%&quot; &amp;&quot; '&quot; (&quot; )&quot; *&quot; +&quot;</p>
    <p>!&quot; #$ %&amp;' (%</p>
    <p>)*+,#*&quot;-.%&amp;/(% Provenance-Only Integration  p. 10/13</p>
  </div>
  <div class="page">
    <p>Integration as Abstraction</p>
    <p>!&quot;</p>
    <p>#!&quot;</p>
    <p>$!!&quot;</p>
    <p>$#!&quot;</p>
    <p>%!!&quot;</p>
    <p>%#!&quot;</p>
    <p>&amp;!!&quot;</p>
    <p>&amp;#!&quot;</p>
    <p>!&quot; $&quot; %&quot; &amp;&quot; '&quot; #&quot; (&quot; )&quot; *&quot; +&quot;</p>
    <p>! &quot;# $%</p>
    <p>&amp;' () *&amp; +, *&quot; .* '/ &amp;</p>
  </div>
  <div class="page">
    <p>Fidelity of Attribution</p>
    <p>!&quot; #!&quot; $!&quot; %!&quot; &amp;!&quot; '!&quot; (!&quot; )!&quot; *!&quot; +!&quot;</p>
    <p>#!!&quot;</p>
    <p>!&quot; #&quot; $&quot; %&quot; &amp;&quot; '&quot; (&quot; )&quot; *&quot; +&quot;</p>
    <p>!&quot; #$ %&amp; &amp;' $# ()</p>
    <p>*'+ ,% &quot;$% &amp;. '</p>
    <p>/0&quot;%&amp;0#12'+3.'</p>
    <p>,&quot;-&quot;!&quot; ,&quot;-&quot;#&quot; ,&quot;-&quot;$&quot; ,&quot;-&quot;.&quot;</p>
    <p>Provenance-Only Integration  p. 12/13</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Provenance-only integration</p>
    <p>Basic form as constrained optimization</p>
    <p>Fast version  automated abstraction</p>
    <p>Acknowledgement</p>
    <p>TaPP 14 organizers, reviewers</p>
    <p>US NSF Grant IIS-1116414</p>
    <p>URL: http://data-provenance.googlecode.com</p>
    <p>Email: ashish.gehani@sri.com</p>
    <p>Questions? Provenance-Only Integration  p. 13/13</p>
  </div>
</Presentation>
