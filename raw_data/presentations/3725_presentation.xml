<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Lattice-based Lattice-based CryptographyCryptography Lattice-based Lattice-based CryptographyCryptography</p>
    <p>Oded RegevOded Regev Tel-Aviv UniversityTel-Aviv University</p>
    <p>Oded RegevOded Regev Tel-Aviv UniversityTel-Aviv University</p>
    <p>CRYPTO 2006, Santa Barbara, CACRYPTO 2006, Santa Barbara, CACRYPTO 2006, Santa Barbara, CACRYPTO 2006, Santa Barbara, CA</p>
  </div>
  <div class="page">
    <p>OutlineOutline</p>
    <p>Introduction to latticesIntroduction to lattices Survey of lattice-based cryptographySurvey of lattice-based cryptography</p>
    <p>Hash functions Hash functions [Ajtai96,][Ajtai96,] Public-key cryptography Public-key cryptography [AjtaiDwork97,[AjtaiDwork97,</p>
    <p>]] Construction of a simple lattice-based Construction of a simple lattice-based</p>
    <p>hash functionhash function Open ProblemsOpen Problems</p>
  </div>
  <div class="page">
    <p>For any vectors vFor any vectors v11,,v,,vnn in in RRnn, the lattice spanned by , the lattice spanned by vv11,,v,,vnn is the set of points is the set of points</p>
    <p>L={aL={a11vv11++a++annvvnn| a| ai i integers}integers}</p>
    <p>These vectors form a These vectors form a basisbasis of L of L</p>
    <p>LatticeLattice</p>
    <p>v1 v2</p>
  </div>
  <div class="page">
    <p>Geometric objects with rich structure  Investigated since 1800 by Lagrange, Gauss,</p>
    <p>Hermite, and Minkowski  More recent developments:</p>
    <p>LLL algorithm: finds somewhat short vectors in lattices [LenstraLenstraLovsz82]. Applications include:  Factoring polynomials over the rationals  Solving integer programs in fixed dimension  Cryptanalysis:</p>
    <p>Breaking knapsack cryptosystems [LagariasOdlyzko85]  Breaking special cases of RSA [Coppersmith01]  And more</p>
    <p>Ajtais lattice-based cryptographic construction [Ajtai96]</p>
    <p>History of Lattices</p>
  </div>
  <div class="page">
    <p>SVP:SVP: given a lattice, find a shortest (nonzero) given a lattice, find a shortest (nonzero) vectorvector</p>
    <p>--approximate SVP:approximate SVP: given a lattice, find a vector given a lattice, find a vector of length at most of length at most  times the shortest times the shortest</p>
    <p>Other lattice problems: SIVP, SBP, etc.Other lattice problems: SIVP, SBP, etc.</p>
    <p>Shortest Vector Problem (SVP)Shortest Vector Problem (SVP)</p>
    <p>v2</p>
    <p>v1</p>
  </div>
  <div class="page">
    <p>Well be interested in -approximate SVP for =poly(n)  Best known algorithm runs in time 2n</p>
    <p>[AjtaiKumarSivakumar01]</p>
    <p>On the other hand, not believed to be NPhard [GoldreichGoldwasser00, AharonovR04]</p>
    <p>Best poly-time algorithm solves for =2nloglogn/logn [LLL82, Schnorr85]</p>
    <p>NP-hard for sub-polynomial  [Khot04]</p>
    <p>Lattice Problems Seem Hard</p>
    <p>NP-hardNP-hard PP</p>
    <p>NPcoNPNPcoNP cryptocrypto</p>
  </div>
  <div class="page">
    <p>Survey of Survey of Lattice-based CryptographyLattice-based Cryptography</p>
  </div>
  <div class="page">
    <p>Standard cryptography  Based on hardness</p>
    <p>of factoring, discrete log, etc.</p>
    <p>Based on an average-case assumption</p>
    <p>Broken by quantum algorithms</p>
    <p>Require modular exponentiation etc.</p>
    <p>Why use lattice-based cryptography</p>
    <p>Lattice-based Lattice-based cryptography cryptography  Based on hardness Based on hardness</p>
    <p>of lattice problemsof lattice problems</p>
    <p>Based on a worst-Based on a worstcase assumptioncase assumption</p>
    <p>(Still) Not broken (Still) Not broken by quantum by quantum algorithmsalgorithms</p>
    <p>Very simple Very simple computationscomputations</p>
  </div>
  <div class="page">
    <p>A CRHF is a function f:{0,1}r{0,1}s with r&gt;s such that it is hard to find collisions, i.e.,</p>
    <p>xy s.t. f(x)=f(y)</p>
    <p>First lattice-based CRHF given in [Ajtai96]  Based on the worst-case hardness of</p>
    <p>n8-approximate SVP  Security improved in subsequent works</p>
    <p>[GoldreichGoldwasserHalevi97, CaiNerurkar97, Micciancio02, MicciancioR04]</p>
    <p>Current state-of-the-art is a CRHF based on n-approximate SVP [MicciancioR04]</p>
    <p>Collision-Resistant Hash Functions</p>
  </div>
  <div class="page">
    <p>The Modular Subset-Sum Function</p>
    <p>Let N be a big integer, and m=2logLet N be a big integer, and m=2log22NN</p>
    <p>Choose aChoose a11,,a,,amm uniformly in {0,,N-1}. uniformly in {0,,N-1}. Then define fThen define faa11,,a,,amm:{0,1}:{0,1}</p>
    <p>mm{0,,N-1} by{0,,N-1} by</p>
    <p>ffaa11,,a,,amm(b(b11,,b,,bmm) = ) = bbiiaaii mod N mod N</p>
    <p>Since m&gt;logSince m&gt;log22N, (many) collisions existN, (many) collisions exist  We will later see a proof of security:We will later see a proof of security:</p>
    <p>Being able to find a collision in a randomly Being able to find a collision in a randomly chosen f, even with probability nchosen f, even with probability n-100-100 implies a implies a solution to solution to anyany instance of approximate-SVP instance of approximate-SVP</p>
  </div>
  <div class="page">
    <p>In the constructions above, for security based on n-dimensional lattices, O(n2) bits are necessary to specify a hash function</p>
    <p>More efficient constructions were given in [Micciancio04, LyubashevskyMicciancio06, PeikertRosen06]  Only O(n) bits needed to specify a hash</p>
    <p>function  Based on worst-case hardness of</p>
    <p>approximate-SVP on a restricted class of lattices known as cyclic lattices</p>
    <p>Recent Work: More Efficient CRHFs</p>
  </div>
  <div class="page">
    <p>A PKC allows parties to communicate securely without having to agree on a secret key beforehand</p>
    <p>First lattice-based PKC presented in [AjtaiDwork97]  Some improvements [GoldreichGoldwasserHalevi97,</p>
    <p>R03]  Security based on the worst-case hardness of a</p>
    <p>special case of SVP known as unique-SVP</p>
    <p>Some disadvantages: Based only on unique-SVP Impractical (think of n as100):</p>
    <p>Public key size O(n4) Encryption expands by O(n2)</p>
    <p>Public-key Cryptosystem</p>
  </div>
  <div class="page">
    <p>A Recent Public-key Cryptosystem A Recent Public-key Cryptosystem [Ajtai05][Ajtai05]</p>
    <p>Main advantages: Main advantages:</p>
    <p>Practical (think of n asPractical (think of n as100):100):  Public key size O(n)Public key size O(n)  Encryption expands by O(n)Encryption expands by O(n)</p>
    <p>Some disadvantages: Some disadvantages: Not based on lattice problemsNot based on lattice problems No worst-case hardnessNo worst-case hardness</p>
  </div>
  <div class="page">
    <p>Another Recent Public-key Another Recent Public-key CryptosystemCryptosystem [R05][R05]</p>
    <p>Main advantages: Main advantages:</p>
    <p>Practical (think of n asPractical (think of n as100):100):  Public key size O(n)Public key size O(n)  Encryption expands by O(n)Encryption expands by O(n)</p>
    <p>Worst-case hardnessWorst-case hardness Based on the main lattice problems (SVP, Based on the main lattice problems (SVP,</p>
    <p>SIVP)SIVP)</p>
    <p>One disadvantage:One disadvantage:  Breaking the cryptosystem implies an Breaking the cryptosystem implies an</p>
    <p>efficient efficient quantumquantum algorithm for lattices algorithm for lattices</p>
  </div>
  <div class="page">
    <p>Example of a lattice-based PKC Example of a lattice-based PKC [R05][R05] Everything modulo 4Everything modulo 4</p>
    <p>Private key: 4 random numbersPrivate key: 4 random numbers 11 22 00 33</p>
    <p>Public key: a 6x4 matrix and approximate inner Public key: a 6x4 matrix and approximate inner productproduct</p>
    <p>Encrypt the bit 0:Encrypt the bit 0:</p>
    <p>Encrypt the bit 1:Encrypt the bit 1:</p>
  </div>
  <div class="page">
    <p>Construction of a Lattice-based Construction of a Lattice-based Collision Resistant Hash Collision Resistant Hash</p>
    <p>FunctionFunction</p>
  </div>
  <div class="page">
    <p>Blurring a PictureBlurring a Picture</p>
  </div>
  <div class="page">
    <p>Blurring a LatticeBlurring a Lattice</p>
  </div>
  <div class="page">
    <p>Blurring a LatticeBlurring a Lattice</p>
  </div>
  <div class="page">
    <p>Blurring a LatticeBlurring a Lattice</p>
  </div>
  <div class="page">
    <p>Blurring a LatticeBlurring a Lattice</p>
  </div>
  <div class="page">
    <p>Blurring a LatticeBlurring a Lattice</p>
  </div>
  <div class="page">
    <p>The Smoothing Radius  Define the Define the smoothing radiussmoothing radius ==(L)&gt;0 as (L)&gt;0 as</p>
    <p>the smallest real such that the smallest real such that adding adding Gaussian blur of radius Gaussian blur of radius  to L yields an to L yields an essentially uniform distributionessentially uniform distribution</p>
    <p>The radius The radius  was analyzed in was analyzed in [MicciancioR04][MicciancioR04] based on Fourier analysis based on Fourier analysis and and [Banaszczyk93][Banaszczyk93]  It was shown that It was shown that  is small in the is small in the</p>
    <p>sense that finding vectors of length sense that finding vectors of length poly(n)poly(n)(L) (L) implies solution to implies solution to poly(n)-poly(n)approximate approximate SVPSVP</p>
  </div>
  <div class="page">
    <p>An Alternative Definition</p>
    <p>Define h:RDefine h:Rnn[0,1)[0,1)nn that maps any x= that maps any x=iivvii toto</p>
    <p>h(x)=(h(x)=(11,,,,nn) mod 1.) mod 1.  E.g., any xE.g., any xL has h(x)=(0,,0)L has h(x)=(0,,0)</p>
    <p>Then the alternative way to define Then the alternative way to define  is as:is as:  The smallest real such that if x is The smallest real such that if x is</p>
    <p>sampled from a Gaussian distribution sampled from a Gaussian distribution centered around 0 of radius centered around 0 of radius , then , then h(x) is essentially uniform on [0,1)h(x) is essentially uniform on [0,1)nn</p>
  </div>
  <div class="page">
    <p>xx11 xx22</p>
    <p>xx33 xx44</p>
    <p>))0,00,0(( (1,0)(1,0)</p>
    <p>(0,1)(0,1) (1,1)(1,1)</p>
    <p>h(x3)</p>
    <p>RRnn [0,1)[0,1)nn</p>
    <p>h(x2)</p>
    <p>h(x4) h(x1)</p>
  </div>
  <div class="page">
    <p>Our CRHF  Fix the dimension n, let q=2Fix the dimension n, let q=22n2n, and , and</p>
    <p>m=4nm=4n22</p>
    <p>Choose aChoose a11,,a,,amm uniformly in Z uniformly in Zqq nn. Then . Then</p>
    <p>define fdefine faa11,,a,,amm:{0,1}:{0,1} mm{0,1}{0,1}nlognlog22qq by by</p>
    <p>ffaa11,,a,,amm(b(b11,,b,,bmm) = ) = bbiiaaii (mod q) (mod q)</p>
    <p>Since m&gt;nlogSince m&gt;nlog22q, (many) collisions existq, (many) collisions exist  We now prove security by showing that:We now prove security by showing that:</p>
    <p>Being able to find a collision in a randomly Being able to find a collision in a randomly chosen fchosen faa11,,a,,amm, even with probability n</p>
    <p>, even with probability n-100-100, ,</p>
    <p>implies a solution to implies a solution to anyany instance of poly(n)- instance of poly(n)approximate SVP approximate SVP</p>
  </div>
  <div class="page">
    <p>Security Proof  Assume there exists an algorithm Assume there exists an algorithm</p>
    <p>CollisionFindCollisionFind that given that given aa11,,a,,amm chosen chosen uniformly in uniformly in ZZqq</p>
    <p>nn, finds with some non-, finds with some nonnegligible probability bnegligible probability b11,,b,,bmm{-1,0,1} {-1,0,1} (not all zero) such that (not all zero) such that</p>
    <p>bbiiaai i = 0 (mod q).= 0 (mod q).  This implies an algorithm This implies an algorithm CollisionFindCollisionFind</p>
    <p>that given that given aa11,,a,,amm chosen uniformly from chosen uniformly from [0,1)[0,1)nn, finds with some , finds with some non-negligible non-negligible probability bprobability b11,,b,,bmm{-1,0,1} (not all {-1,0,1} (not all zero) such that zero) such that</p>
    <p>bbiiaai i  (0,,0) (mod 1) (0,,0) (mod 1) (up to (up to m/q in each coordinate)m/q in each coordinate)</p>
  </div>
  <div class="page">
    <p>CollisionFind</p>
    <p>))0,00,0(( (1,0)(1,0)</p>
    <p>(0,1)(0,1) (1,1)(1,1)</p>
    <p>a1</p>
    <p>a2a3</p>
    <p>a4</p>
    <p>a5</p>
    <p>Output: aOutput: a11+a+a22-a-a44+a+a55(0,,0) (mod 1)(0,,0) (mod 1)</p>
    <p>a6</p>
  </div>
  <div class="page">
    <p>Security Proof  Our goal is to show that using Our goal is to show that using</p>
    <p>CollisionFindCollisionFind we can find a nonzero we can find a nonzero vector of length at most poly(n)vector of length at most poly(n)(L) (L) in in anyany given lattice L given lattice L</p>
    <p>So let L be a given lattice with basis vSo let L be a given lattice with basis v11,, ,v,vnn</p>
    <p>By using the LLL algorithm, we can By using the LLL algorithm, we can assume that vassume that v11,,v,,vnn are not are not unreasonably long: say, of length at unreasonably long: say, of length at most 2most 2nn(L)(L)</p>
  </div>
  <div class="page">
    <p>Security Proof  Main Procedure</p>
    <p>Sample m vectors xSample m vectors x11,,x,,xmm from the from the Gaussian distribution around 0 of radius Gaussian distribution around 0 of radius</p>
    <p>Compute aCompute a11:=h(x:=h(x11),,a),,amm:=h(x:=h(xmm))  Each aEach aii is uniformly distributed in [0,1) is uniformly distributed in [0,1)</p>
    <p>nn</p>
    <p>Apply Apply CollisionFindCollisionFind to obtain to obtain bb11,,b,,bm m  {- {1, 0,1} such that 1, 0,1} such that</p>
    <p>bbiih(xh(xii))  ( (m/qm/q,,,,m/qm/q) (mod 1)) (mod 1)  Define y=Define y=bbiixxii. Then,. Then,</p>
    <p>y is y is shortshort (of length (of length mm))  y is y is extremely close to a lattice pointextremely close to a lattice point</p>
    <p>since h(y)=since h(y)=bbiih(xh(xii))((m/qm/q,,,,m/qm/q) ) (mod 1)(mod 1)</p>
  </div>
  <div class="page">
    <p>Security Proof  Main Procedure</p>
    <p>Write y=Write y=iivvii for some reals for some reals 11,,,,nn  So each So each ii is within is within m/q of an integerm/q of an integer</p>
    <p>Define the lattice vector y=Define the lattice vector y=iivvii  The distanceThe distance</p>
    <p>So y is a So y is a lattice vectorlattice vector of length at most of length at most (m+1)(m+1)</p>
  </div>
  <div class="page">
    <p>xx11 xx22</p>
    <p>xx33</p>
    <p>xx44</p>
    <p>CollisionFindCollisionFind(a(a11,a,a22,a,a33,a,a44))-a-a22-a-a33+a+a440 0 (mod 1)(mod 1)</p>
    <p>yy</p>
    <p>YY</p>
  </div>
  <div class="page">
    <p>Security Proof  One Last Issue</p>
    <p>How to guarantee that y is How to guarantee that y is nonzerononzero??  Maybe Maybe CollisionFind CollisionFind acts in some acts in some</p>
    <p>malicious way, trying to make y zeromalicious way, trying to make y zero  It can be shown that aIt can be shown that aii does not contain does not contain</p>
    <p>enough information about xenough information about xii  In other words, conditioned on any fixed In other words, conditioned on any fixed</p>
    <p>aaii, x, xii still has enough randomness to still has enough randomness to guarantee that y is nonzero with very guarantee that y is nonzero with very high probabilityhigh probability</p>
  </div>
  <div class="page">
    <p>All lattices look the same after All lattices look the same after adding some small amount of blur adding some small amount of blur</p>
    <p>Security Proof  Conclusion  By a single call to the collision finder, we By a single call to the collision finder, we</p>
    <p>can find in can find in anyany lattice, a nonzero vector lattice, a nonzero vector of length at most (m+1)of length at most (m+1) with some non- with some nonnegligible probabilitynegligible probability</p>
    <p>Obviously, by repeating this procedure Obviously, by repeating this procedure we can obtain such a vector with very we can obtain such a vector with very high probabilityhigh probability</p>
    <p>The essential idea:The essential idea:</p>
  </div>
  <div class="page">
    <p>Open ProblemsOpen Problems</p>
    <p>CryptanalysisCryptanalysis Current attacks limited to low Current attacks limited to low</p>
    <p>dimension dimension [NguyenStern98][NguyenStern98] New systems New systems [Ajtai05,R05][Ajtai05,R05] are efficient are efficient</p>
    <p>and can be easily used with dimension and can be easily used with dimension 100+100+</p>
    <p>Improved cryptosystemsImproved cryptosystems Construct the ultimate lattice-based Construct the ultimate lattice-based</p>
    <p>cryptosystem? (based on SVP, cryptosystem? (based on SVP, efficient)efficient)</p>
    <p>Construct more efficient schemes Construct more efficient schemes based on special classes of lattices?based on special classes of lattices?</p>
  </div>
  <div class="page">
    <p>Open ProblemsOpen Problems</p>
    <p>Comparison with number theoretic Comparison with number theoretic cryptographycryptography E.g., can one factor integers using an E.g., can one factor integers using an</p>
    <p>oracle for n-approximate SVP?oracle for n-approximate SVP? Signature schemesSignature schemes</p>
    <p>Can one construct provably secure Can one construct provably secure lattice-based signature schemes?lattice-based signature schemes?</p>
    <p>Security against chosen-ciphertext Security against chosen-ciphertext attacksattacks Known lattice-based cryptosystems are Known lattice-based cryptosystems are</p>
    <p>not secure against CCAnot secure against CCA</p>
  </div>
</Presentation>
