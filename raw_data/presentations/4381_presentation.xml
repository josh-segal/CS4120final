<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Zero-Shot Transfer Learning for Event Extraction</p>
    <p>Lifu Huang1, Heng Ji1, Kyunghyun Cho2, Ido Dagan3, Sebastian Riedel4, Clare R. Voss5</p>
  </div>
  <div class="page">
    <p>Background</p>
    <p>Traditional Event Extraction  based on predefined event schema and rich features encoded</p>
    <p>from annotated event  Pros: extract high quality events for predefined types  Cons: require large amount of human annotations and cannot</p>
    <p>extract event mentions for new event types</p>
    <p>Traditional Event Extraction Pipeline Consumer 1: I want an event extractor for Transport Annotators: We will annotate 500 documents System Developer: Ill train a classifier</p>
    <p>Consumer 2: I want an event extractor for Attack Annotators: We will annotate 500 documents System Developer: Ill train a classifier</p>
    <p>The resources for existing event types cannot be reused for new types; not to mention we have 1000+ event types</p>
  </div>
  <div class="page">
    <p>Background</p>
    <p>Zero Shot Transfer Learning  Learning a regression function between object (e.g., image,</p>
    <p>entity) semantic space and label semantic space based on annotated data for seen labels</p>
    <p>The regression model can be used to predict the unseen labels for any given image</p>
    <p>Andrea Frome, Greg S. Corrado, Jonathon Shlens, Samy Bengio, Jeffrey Dean, Marc Aurelio Ranzato, Tomas Mikolov, DeViSE: A Deep Visual-Semantic Embedding Model</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Zero Shot Learning for Event Extraction  both event mentions and types have rich semantics and</p>
    <p>structures, which can specify their consistency and connections</p>
    <p>E1. The Government of China has ruled Tibet since 1951 after dispatching troops to the Himalayan region in 1950.</p>
    <p>E2. Iranian state television stated that the conflict between the Iranian police and the drug smugglers took place near the town of mirjaveh.</p>
  </div>
  <div class="page">
    <p>Approach Overview</p>
  </div>
  <div class="page">
    <p>Approach Details</p>
    <p>Trigger and Argument Identification  Trigger Identification</p>
    <p>AMR parsing and FrameNet verbs/nominal lexical units  Argument Identification</p>
    <p>Subset of AMR relations</p>
    <p>Event and Type Structure Construction</p>
    <p>Categories Relations</p>
    <p>Core Roles ARG0, ARG1, ARG2, ARG3, ARG4</p>
    <p>None-Core Roles mod, location, instrument, poss, manner, topic, medium, prep-X</p>
    <p>Temporal year, duration, decade, weekday, time</p>
    <p>Spatial destination, path, location</p>
  </div>
  <div class="page">
    <p>Approach Details</p>
    <p>Structure Composition and Representation  Event Mention Structure</p>
    <p>We use a matrix to represent each AMR relation , and compose its semantics with two concepts for each tuple:</p>
    <p>e.g., &lt;dispatch-01, :ARG0, China&gt;</p>
    <p>Event Type Structure</p>
    <p>Similarly, we assume an implicit relation exists between any pair of type and argument, and use a tensor to represent it, and compose its semantics with each pair of type and argument role</p>
    <p>e.g., &lt;Transport_Person, Person&gt;</p>
    <p>u=&lt; w1,,w2 &gt;</p>
    <p>Vu = f ([Vw1;Vw2 ]M)</p>
    <p>u' =&lt; y,r &gt;</p>
    <p>V u' = f ([Vy;Vr]</p>
    <p>T U [1:2d] [Vy;Vr])</p>
    <p>M</p>
    <p>U [1:2d]</p>
  </div>
  <div class="page">
    <p>Approach Details</p>
    <p>Joint Event Mention and Type Label Embedding  Representation learning for each event mention structure and</p>
    <p>type structure  Take each structure (a sequence of tuples) as input, and encode</p>
    <p>each event mention and type structure into a vector representation using a weight-sharing Convolutional Neural Network (CNN)</p>
    <p>Align the vector representations of each event mention structure with its corresponding event type structure</p>
    <p>Minimize their distance within a share vector space  Over-fitting to seen types seen types are usually very limited</p>
  </div>
  <div class="page">
    <p>Approach Details</p>
    <p>Joint Event Mention and Type Label Embedding  To avoid over-fitting for seen types</p>
    <p>Add negative event mentions into training  Negative event mentions: the mentions that are not annotated</p>
    <p>with any seen types, namely other. Extracted from the event mention clusters generated by Huang et. al. (2016)</p>
    <p>Loss function</p>
    <p>where is the positive event type for the candidate trigger , is the type set of the event ontology, is the seen type set. is the type which ranks the highest among all event types for event mention</p>
    <p>ty y ' t</p>
  </div>
  <div class="page">
    <p>Approach Details</p>
    <p>Joint Event Argument and Role Embedding  Mapping between argument and role path</p>
    <p>Argument path: e.g., dispatch01 -&gt; :Arg0 -&gt; China  Role path: Transport_person -&gt; Agent  Learn path representations using two weight-sharing CNNs</p>
    <p>Loss function</p>
    <p>where is the positive argument role for the candidate argument , and are the set of argument roles which are predefined for trigger type and all seen types . is argument role which ranks the highest for when or is annotated as Other</p>
    <p>a</p>
    <p>r</p>
    <p>y r '</p>
    <p>y a</p>
    <p>a</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Zero-Shot Classification for ACE Events  Given trigger and argument boundaries, use a subset of ACE</p>
    <p>types for training, and remained types for testing  Seen types for each experiment setting</p>
    <p>Setting Top-N Seen Types for Training/Dev A 1 Attack</p>
    <p>B 3 Attack, Transport, Die</p>
    <p>C 5 Attack, Transport, Die, Meet, Arrest-Jail</p>
    <p>D 10 Attack, Transport, Die, Meet, Arrest-Jail, Transfer-Money, Sentence, Elect, Transfer-Ownership, End-Position</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Zero-Shot Classification for ACE Events  Statistics for Positive/Negative instances on Training,</p>
    <p>Development, and Test sets for each experiment setting  Negative instances are sampled from the trigger and</p>
    <p>argument clustering output of (Huang et. al., 2016)</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Zero-Shot Classification for ACE Events  Hit@K performance on trigger and argument classification  Hit@K Accuracy: the correct label occurs within the top K ranked</p>
    <p>output labels  WSD-Embedding: directly map event triggers and arguments to</p>
    <p>event types and argument roles according to their cosine similarity of word sense embeddings</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Zero-Shot Classification for ACE Events  Training subtypes of Justice: Arrest-Jail, Convict, Charge-Indict,</p>
    <p>Execute  Performance on Various Unseen Types</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Event Extraction for ACE Types  Target Event Ontology: ACE(33 types)+FrameNet (1161 frames)  Seen types for training: 10 ACE types  Performance on ACE types</p>
    <p>Errors: misclassification within the same scenario</p>
    <p>e.g., Being-Born v.s. Giving-Birth</p>
    <p>Abby was a true water birth ( 3kg - normal) and with Fiona I was dragged out of the pool after the head crowned.</p>
  </div>
  <div class="page">
    <p>Discussion</p>
    <p>Impact of AMR Parsing  AMR is used to identify candidate triggers and arguments, as well as</p>
    <p>construct event structures  Compare AMR with Semantic Role Labeling (SRL) on a subset of</p>
    <p>ERE corpus with perfect AMR annotations  Train on top-6 most popular seen (training) types: Arrest-Jail,</p>
    <p>Execute, Die, Meet, Sentence, Charge-Indict, and test on 200 sentences, with 128 attack event mentions and 40 convict event mentions</p>
  </div>
  <div class="page">
    <p>Discussion</p>
    <p>Transfer Learning v.s. Supervised Model  Target Event Ontology: ACE(33 types)+FrameNet (1161 frames)  Seen types for training: 10 most popular ACE types  Unseen type: 23 remaining ACE types</p>
  </div>
  <div class="page">
    <p>Conclusion and Future Work</p>
    <p>We model event extraction as a generic grounding problem, instead of classification</p>
    <p>By leveraging existing human constructed event schemas and manual annotations for a small set of seen types, the zero shot framework can improve the scalability of event extraction and save human effort</p>
    <p>In the future, we will extend this framework to other Information Extraction problems.</p>
  </div>
  <div class="page">
    <p>Q&amp;A</p>
    <p>Thank You!</p>
  </div>
</Presentation>
