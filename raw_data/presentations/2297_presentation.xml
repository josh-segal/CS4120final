<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Reliability and Timeliness Analysis of Fault-tolerant Distributed Publish/Subscribe Systems</p>
    <p>Thad Pongthawornkamol, Klara Nahrstedt University of Illinois at Urbana-Champaign</p>
    <p>Guijun Wang Boeing Research and Technology</p>
  </div>
  <div class="page">
    <p>Publish / Subscribe Systems</p>
    <p>Pub/sub system is an interest-based communication paradigm</p>
    <p>Each user can be either publisher or subscriber.</p>
    <p>Pub/sub broker network handles routing / matching / recovery.</p>
    <p>Pub / Sub Broker</p>
    <p>Network</p>
    <p>PP</p>
    <p>S S</p>
    <p>S</p>
    <p>event</p>
    <p>event</p>
    <p>event</p>
    <p>event</p>
    <p>event</p>
  </div>
  <div class="page">
    <p>Publish / Subscribe Systems PP</p>
    <p>S S</p>
    <p>S</p>
    <p>event</p>
    <p>event</p>
    <p>event</p>
    <p>event</p>
    <p>event</p>
    <p>Pub/sub system is an interest-based communication paradigm</p>
    <p>Each user can be either publisher or subscriber.</p>
    <p>Pub/sub broker network handles routing / matching / recovery.</p>
  </div>
  <div class="page">
    <p>Goal : Pub / Sub Performance Analysis</p>
    <p>Question : Given a publish / subscribe network, how to predict reliability / timeliness perceived by each subscriber ?</p>
    <p>Several factors affect subscriber's QoS.</p>
    <p>PP</p>
    <p>S S</p>
    <p>S</p>
    <p>Traffic load and middle capacity</p>
    <p>Pub / Sub broker network failure and recovery</p>
    <p>Subscriber mobility</p>
  </div>
  <div class="page">
    <p>Goal : Pub / Sub Performance Analysis</p>
    <p>Question : Given a publish / subscribe network, how to predict reliability / timeliness perceived by each subscriber ?</p>
    <p>Several factors affect subscriber's QoS.</p>
    <p>This paper focuses on broker network failure and recovery.</p>
    <p>PP</p>
    <p>S S</p>
    <p>S</p>
    <p>Traffic load and middle capacity</p>
    <p>Subscriber mobility</p>
    <p>Pub / Sub broker network failure and recovery</p>
  </div>
  <div class="page">
    <p>Goal : Pub / Sub Performance Analysis</p>
    <p>This paper proposes an analytical model that :  captures failure / recovery behavior of publish /</p>
    <p>subscribe middleware.  predicts reliability and timeliness perceived at each</p>
    <p>subscriber.  supports several commonly used publish / subscribe</p>
    <p>fault tolerance algorithms</p>
    <p>The proposed analytical model can be used in :  subscriber admission control  broker network planning  fault-tolerant publish / subscribe protocol selection</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Motivation  Model &amp; Assumptions  Reliability / Timeliness Analysis  Results  Conclusion</p>
  </div>
  <div class="page">
    <p>Model : Subscriber Real-time Reliability</p>
    <p>Each published event has its lifetime (i.e., the period of time after which the event is expired after being published). In this paper, we assume all events have the same lifetime value D.</p>
    <p>Subscriber Real-time Reliability = fraction of events of subscriber's interest that are delivered to the subscriber before they are expired.</p>
    <p>Pub / Sub Middleware S</p>
    <p>event</p>
    <p>event</p>
    <p>event</p>
    <p>t = 10s</p>
    <p>t = 20s</p>
    <p>t = 30s</p>
    <p>lifetime D = 5s</p>
    <p>event</p>
    <p>event</p>
    <p>t = 26s</p>
    <p>t = 34s</p>
    <p>real-time reliability = 0.33</p>
  </div>
  <div class="page">
    <p>Analytical Framework</p>
    <p>PP</p>
    <p>S S</p>
    <p>S</p>
    <p>Analyzer</p>
    <p>S</p>
    <p>S</p>
    <p>S</p>
    <p>= 0.99</p>
    <p>= 0.85</p>
    <p>= 0.94</p>
  </div>
  <div class="page">
    <p>Model : System Components</p>
    <p>P</p>
    <p>S</p>
    <p>Publishers</p>
    <p>Subscribers</p>
    <p>Brokers / Links</p>
    <p>Component Known Variables</p>
    <p>Each subscriber's topic S</p>
    <p>Each publisher's topic P</p>
    <p>Each publisher's average publishing rate P (events / second)</p>
    <p>Each broker's failure rate B (exponentially distributed)  Each broker's recovery rate B (exponentially distributed)  Each link's failure rate L (exponentially distributed)  Each link's recovery rate L (exponentially distributed)</p>
  </div>
  <div class="page">
    <p>Assumption : Pub/Sub Routing  Upon joining, a new subscriber</p>
    <p>subscribes to its local broker.</p>
    <p>The local broker stores the subscription to its routing table and propagates the subscription to other brokers.</p>
    <p>The model supports any pub/sub routing protocol that has path consistency property (i.e., always use the same broker path to route events from a publisher to a subscriber)</p>
    <p>PP</p>
    <p>S S</p>
    <p>S</p>
    <p>event</p>
    <p>event</p>
    <p>event</p>
    <p>event</p>
    <p>event</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Motivation  Model and Assumptions  Reliability / Timeliness Analysis  Results  Conclusion</p>
  </div>
  <div class="page">
    <p>Reliability / Timeliness Analysis  Question : Given the entire</p>
    <p>publish / subscribe graph and each component's parameters, how can we estimate each subscriber's real-time reliability?</p>
    <p>PP</p>
    <p>S S</p>
    <p>S</p>
    <p>P</p>
  </div>
  <div class="page">
    <p>Reliability / Timeliness Analysis  Question : Given the entire</p>
    <p>publish / subscribe graph and each component's parameters, how can we estimate each subscriber's real-time reliability?</p>
    <p>Answer : Assuming path consistency property, estimate pair-wise real-time reliability between each publisher subscriber pair.</p>
    <p>Subscriber real-time reliability is then equal to the weighted average of all pair-wise reliability between the subscriber and all publishers with the same topic.</p>
    <p>PP</p>
    <p>S</p>
    <p>P1 = 2 event / sec P2 = 1 event / sec</p>
    <p>rP1S = 0.9 rP2S = 0.8</p>
    <p>rS = (0.9*2 + 0.8*1) / (2 + 1) = 0.87</p>
  </div>
  <div class="page">
    <p>Pair-wise Reliability : Basic Routing  In basic protocol, an event is loss if at least one component along the path</p>
    <p>fails.</p>
    <p>Each broker B has availability aB, which is equal to (1/B) / (1/B + 1/B)  Each link L has availability aL, which is equal to (1/L) / (1/L + 1/L)</p>
    <p>Pair-wise reliability is the multiplication of each component's availability.</p>
    <p>P S</p>
    <p>a=0.95 a=0.9</p>
    <p>a=0.85 a=0.97</p>
    <p>a=0.99</p>
    <p>rPS = 0.95 * 0.9 * 0.85 * 0.97 * 0.99 = 0.70</p>
  </div>
  <div class="page">
    <p>Event Retransmission ([Chand &amp; Felber '04][Espository et al '09])</p>
    <p>In retransmission protocol, each broker stores incoming event into its persistent storage before sending acknowledgement back to the sender.</p>
    <p>The broker keeps retransmitting event until it receives acknowledgement message from the next hop, then it discards the buffered event.</p>
    <p>In retransmission protocol, an event will never get lost at broker or link. However, an event may expire due to buffering delay.</p>
    <p>P S</p>
    <p>event</p>
    <p>event</p>
    <p>P S</p>
    <p>event event</p>
    <p>ACK</p>
  </div>
  <div class="page">
    <p>Pair-wise Reliability : Retransmission</p>
    <p>To compute path reliability in retransmission protocol, we compute the probability that the end-to-end delivery delay is less than the event lifetime.</p>
    <p>P S</p>
    <p>event event dPS</p>
    <p>B1 B2 B3 dPB1 dB1B2 dB2B3 dB3S</p>
    <p>rPS = P[dPS &lt; D] = P[dPB1 + dB1B2 + dB2B3 + dB3S &lt; D]</p>
    <p>Assuming all brokers / links failure and recovery durations are exponentially distributed, we can estimate per-hop delivery delay distribution using Markov theory (See paper for proof).</p>
  </div>
  <div class="page">
    <p>Multi-path Routing ([Chand &amp; Felber '04][Jaeger '07] [Kazemzadeh &amp; Jacobsen '09])</p>
    <p>Brokers run failure detection and new path discovery protocol.</p>
    <p>If the next hop fails, broker forwards event to an alternative neighbor.</p>
    <p>Assuming relatively fast discovery protocol, the event is always delivered on time as long as the publisher and subscriber are connected.</p>
    <p>P</p>
    <p>S</p>
  </div>
  <div class="page">
    <p>Brokers run failure detection and new path discovery protocol.</p>
    <p>If the next hop fails, broker forwards event to an alternative neighbor.</p>
    <p>Assuming relatively fast discovery protocol, the event is always delivered on time as long as the publisher and subscriber are connected.</p>
    <p>P</p>
    <p>S</p>
    <p>Multi-path Routing ([Chand &amp; Felber '04][Jaeger '07] [Kazemzadeh &amp; Jacobsen '09])</p>
  </div>
  <div class="page">
    <p>Brokers run failure detection and new path discovery protocol.</p>
    <p>If the next hop fails, broker forwards event to an alternative neighbor.</p>
    <p>Assuming relatively fast discovery protocol, the event is always delivered on time as long as the publisher and subscriber are connected.</p>
    <p>P</p>
    <p>S</p>
    <p>Multi-path Routing ([Chand &amp; Felber '04][Jaeger '07] [Kazemzadeh &amp; Jacobsen '09])</p>
  </div>
  <div class="page">
    <p>Pair-wise reliability between publisher and subscriber with multi-path routing is equal to the probability that the publisher and subscriber is connected.</p>
    <p>Finding connection probability in a graph is NP-hard.</p>
    <p>P</p>
    <p>S</p>
    <p>Pair-wise Reliability : Multi-path Routing</p>
  </div>
  <div class="page">
    <p>Pair-wise reliability between publisher and subscriber with multi-path routing is equal to the probability that the publisher and subscriber is connected.</p>
    <p>Finding connection probability in a graph is NP-hard.</p>
    <p>Estimate lower bound instead by reducing the graph into multiple independent paths.</p>
    <p>P</p>
    <p>S</p>
    <p>Pair-wise Reliability : Multi-path Routing</p>
  </div>
  <div class="page">
    <p>P</p>
    <p>S</p>
    <p>Pair-wise Reliability : Multi-path Routing (Cont.)</p>
    <p>rPS &gt; P[at least one path is connected] = 1 - P[all paths are disconnected] = 1 - (1 - r1)(1 - r2)(1 - r3) r1 r2</p>
    <p>r3</p>
    <p>r1, r2, r3 can be computed using reliability analysis for basic routing protocol.</p>
  </div>
  <div class="page">
    <p>Retransmission + Multi-path Routing  Retransmission and multi</p>
    <p>path routing can be combined.</p>
    <p>Use retransmission on the default forwarding path and opportunistic forwarding on alternate path.</p>
    <p>Event is not lost even when publisher and subscriber are disconnected.</p>
    <p>P</p>
    <p>S</p>
    <p>event</p>
  </div>
  <div class="page">
    <p>Retransmission + Multi-path Routing P</p>
    <p>S</p>
    <p>event</p>
    <p>Retransmission and multipath routing can be combined.</p>
    <p>Use retransmission on the default forwarding path and opportunistic forwarding on alternate path.</p>
    <p>Event is not lost even when publisher and subscriber are disconnected.</p>
    <p>event</p>
  </div>
  <div class="page">
    <p>Retransmission + Multi-path Routing (Cont.)</p>
    <p>P</p>
    <p>S</p>
    <p>r1</p>
    <p>r2 d</p>
    <p>rPS = P[d &lt; D] + P[d &gt; D].(1 - (1 - r1)(1 - r2))</p>
    <p>r1, r2 can be computed using reliability analysis for basic routing protocol.</p>
    <p>P[d &lt; D] can be computed using reliability analysis for retransmission protocol.</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Motivation  Model and Assumptions  Reliability / Timeliness Analysis  Results  Conclusion</p>
  </div>
  <div class="page">
    <p>Evaluation Setting  NS-2 network simulator, simulating 10-broker networks.</p>
    <p>Period (MTBF + MTTR) is set to 60k seconds (approximately 17 hours) for brokers and links.</p>
    <p>Each link has availability set to 0.99 (hence MTBF = 0.99 * 17 hours, MTTR = 0.01 * 17 hours).</p>
    <p>Two sets of brokers (observed from data traces).  Low-end brokers ([0.9, 0.95] availability range)  High-end brokers ([0.99, 0.999] availability range)</p>
    <p>Event lifetime set to 3600 seconds (1 hour).</p>
    <p>Four protocols (basic, retransmission, multi-path, retransmission + multipath)</p>
  </div>
  <div class="page">
    <p>Results (Tree topology)</p>
    <p>Each dot in the graph represents one subscriber.</p>
  </div>
  <div class="page">
    <p>Results (Tree topology)</p>
    <p>Each dot in the graph represents one subscriber.  Retransmission protocol provides a magnitude of improvement over basic</p>
    <p>protocol.</p>
    <p>Basic w/ low-end brokers</p>
    <p>Basic w/ high-end brokers Retrans w/</p>
    <p>low-end brokers</p>
    <p>Retrans w/ low-end brokers</p>
  </div>
  <div class="page">
    <p>Results (Random Low-end Broker Graph)</p>
    <p>Average node degree = 4  Basic routing &lt; retransmission &lt; multi-path &lt; hybrid</p>
    <p>Basic</p>
    <p>Retrans</p>
    <p>Multi-path</p>
    <p>Retrans + Multipath</p>
  </div>
  <div class="page">
    <p>Results (Random High-end Broker Graph)</p>
    <p>Retransmission protocol is better than multi-path routing.  Combining retransmission with multi-path routing does not improve</p>
    <p>reliability very much.</p>
    <p>Basic</p>
    <p>Multi-path Retrans</p>
    <p>Retrans + Multi-path</p>
  </div>
  <div class="page">
    <p>Conclusions  Our work presents an analytical model to predict reliability and</p>
    <p>timeliness in distributed publish / subscribe systems that abstracts  broker / link failure and recovery  several commonly used fault tolerance schemes.</p>
    <p>Evaluation results suggest that different fault tolerance schemes perform differently based on  Broker network quality  Event lifetime  Graph connectivity</p>
    <p>The proposed analytical model can be used as a building block for  subscriber admission control  broker network planning  fault-tolerant publish / subscribe protocol selection</p>
  </div>
  <div class="page">
    <p>Pub / Sub Performance Analysis</p>
    <p>Question : Given a publish / subscribe network, how to predict reliability / timeliness perceived by each subscriber ?</p>
    <p>Several factors affect subscriber's QoS.</p>
    <p>PP</p>
    <p>S S</p>
    <p>S</p>
    <p>Traffic load and middleware capacity (ICAC'10)1</p>
    <p>Pub / Sub broker network failure and recovery (ICAC'13)2</p>
    <p>Subscriber mobility (PhD thesis)3</p>
  </div>
  <div class="page">
    <p>Thank you !</p>
  </div>
</Presentation>
