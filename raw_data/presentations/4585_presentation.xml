<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>API Blender</p>
    <p>A Uniform Interface to Social Platform APIs</p>
    <p>{georges.gouriten, pierre.senellart} @telecom-paristech.fr</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Interacting with social platforms ...</p>
    <p>is usually painful, ...</p>
    <p>but API Blender makes it easy!</p>
  </div>
  <div class="page">
    <p>Authenticate Make</p>
    <p>request</p>
    <p>Parse response</p>
    <p>Process response</p>
    <p>Generic interactions with a Web API</p>
  </div>
  <div class="page">
    <p>Authenticate Make</p>
    <p>request</p>
    <p>Parse response</p>
    <p>Process response</p>
    <p>Generic interactions with a Web API</p>
    <p>Maintain authentication</p>
    <p>Respect policy</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>Heterogeneous</p>
    <p>Sometimes obscure</p>
    <p>Error-prone</p>
  </div>
  <div class="page">
    <p>Authenticate Make</p>
    <p>request</p>
    <p>Parse response</p>
    <p>Process response</p>
    <p>Generic interaction with a Web service</p>
    <p>Ensure authentication</p>
    <p>Respect policy</p>
  </div>
  <div class="page">
    <p>Home-made development</p>
    <p>What most people do</p>
    <p>Redundant efforts</p>
  </div>
  <div class="page">
    <p>What about collective efforts?</p>
    <p>Top-down</p>
    <p>WSDL WADL</p>
    <p>Bottom-up</p>
    <p>Spring Social SPORE-DL</p>
    <p>Error 404</p>
    <p>Promising direction</p>
  </div>
  <div class="page">
    <p>API Blender</p>
    <p>Social Web APIs description files</p>
    <p>Python implementation</p>
  </div>
  <div class="page">
    <p>API Blender</p>
    <p>Social Web APIs description files</p>
    <p>Python implementation</p>
  </div>
  <div class="page">
    <p>Lightweight social Web API description format</p>
    <p>{ name: &quot;twitter-search&quot;,</p>
    <p>host: &quot;search.twitter.com&quot;, port: 80,</p>
    <p>authentication: authentication_object, policy: policy_object, interactions: [interaction_object] }</p>
  </div>
  <div class="page">
    <p>Simple Authentication</p>
    <p>{ type: simple, path: /oauth/access_token, parameters: { client_id: x2836, client_secret: z45725, grant_type: client_credentials</p>
    <p>} }</p>
  </div>
  <div class="page">
    <p>Oauth Authentication</p>
    <p>{ type: oauth, consumer_key: x4565482s, consumer_secret: tsouintsouin, request_token_url: https://api.twitt..., access_token_url: https://api.twitt..., authorize_url: https://api.twitt... }</p>
  </div>
  <div class="page">
    <p>Policy</p>
    <p>{ active: true, requests_per_hour: 400, too_many_calls_response_code: 420, too_many_calls_waiting_seconds: 600 }</p>
  </div>
  <div class="page">
    <p>Interaction { name: search,</p>
    <p>description: search for tweets, request: {</p>
    <p>url_root_path: /search.json, method: GET, url_params: [</p>
    <p>[ q, string, false, null ], [ rpp, int, true, 100 ],</p>
    <p>] }, response: {</p>
    <p>expected_status_code: 200, serialization_format: JSON, extractor: extractor_object } }</p>
  </div>
  <div class="page">
    <p>Extractor</p>
    <p>{ data.field1: mydata.there.fieldx, data.field2: mydata.there.fieldy</p>
    <p>}</p>
  </div>
  <div class="page">
    <p>data: { field1: &lt;field1_value&gt;, field2: &lt;field2_value&gt;</p>
    <p>}</p>
    <p>mydata: { there: {</p>
    <p>fieldx: &lt;field1_value&gt; fieldy: &lt;field2_value&gt;</p>
    <p>} }</p>
    <p>{ data.field1: mydata.there.fieldx, data.field2: mydata.there.fieldy }</p>
  </div>
  <div class="page">
    <p>results: { from_user: ...</p>
    <p>}</p>
    <p>posts: { user_name: ...</p>
    <p>}</p>
    <p>data: { from: {</p>
    <p>name: ... }</p>
    <p>}</p>
  </div>
  <div class="page">
    <p>Lightweight social Web API description format</p>
    <p>{ name: &quot;twitter-search&quot;,</p>
    <p>host: &quot;search.twitter.com&quot;, port: 80,</p>
    <p>authentication: authentication_object, policy: policy_object, interactions: [interaction_object] }</p>
  </div>
  <div class="page">
    <p>API Blender</p>
    <p>Social Web APIs description files</p>
    <p>Python implementation</p>
  </div>
  <div class="page">
    <p>Standard library of Web APIs</p>
    <p>Config files (auth, extractors)</p>
    <p>Python implementation</p>
    <p>github.com/netiru/apiblender</p>
  </div>
  <div class="page">
    <p>How the apiblender works (1)</p>
    <p>import apiblender</p>
    <p>blender = apiblender.Blender()</p>
    <p>blender.list_servers() .load_server('flickr')</p>
    <p>.list_interactions()</p>
    <p>.load_interaction('photos_search')</p>
  </div>
  <div class="page">
    <p>How the apiblender works (2)</p>
    <p>blender.list_url_params() blender.set_url_params({'tags': 'good spirit'})</p>
    <p>result = blender.blend()</p>
    <p>result['raw_content'] result['prepared_content'] result['headers']</p>
  </div>
  <div class="page">
    <p>Authenticate Make</p>
    <p>request</p>
    <p>Parse response</p>
    <p>Process response</p>
    <p>Generic interaction with a Web service</p>
    <p>Ensure authentication</p>
    <p>Respect policy</p>
  </div>
  <div class="page">
    <p>'good spirit'</p>
    <p>User's followers and followees</p>
    <p>Tweets and users</p>
    <p>For each user</p>
    <p>Example</p>
  </div>
  <div class="page">
    <p>Interactions made easy (1)</p>
    <p>blender.load_server(&quot;twitter-search&quot;) blender.load_interaction(&quot;search&quot;)</p>
    <p>users = set() for p in range(1,3):</p>
    <p>blender.set_url_params({&quot;q&quot;: 'good spirit', &quot;page&quot;: p })</p>
    <p>response=blender.blend() results=response['raw_content']['results'] for twitt in results:</p>
    <p>users.add(twitt['from_user'])</p>
  </div>
  <div class="page">
    <p>Interactions made easy (2)</p>
    <p>blender.load_server(&quot;twitter-generic&quot;)</p>
    <p>for user in users: blender.load_interaction('followers') blender.set_url_params({&quot;screen_name&quot;: user}) followers = blender.blend()</p>
  </div>
  <div class="page">
    <p>demo</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Policy management Persistent authentication Data integration</p>
    <p>User-friendly interactions chaining</p>
  </div>
  <div class="page">
    <p>Coming soon</p>
    <p>&gt; 5 APIs (and more methods)</p>
    <p>Request chaining libraries</p>
  </div>
  <div class="page">
    <p>It's open source!</p>
    <p>github.com/netiru/apiblender/</p>
  </div>
</Presentation>
