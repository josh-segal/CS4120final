<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Collaborative, Privacy-Preserving Data Aggregation at Scale</p>
    <p>Michael J. Freedman Princeton University</p>
    <p>Joint work with: Benny Applebaum, Haakon Ringberg, Matthew Caesar, and Jennifer Rexford</p>
  </div>
  <div class="page">
    <p>Problem: Network Anomaly Detection</p>
  </div>
  <div class="page">
    <p>Collaborative anomaly detection</p>
    <p>Some attacks look like normal traffic  e.g., SQL-injection, application-level DoS [Srivatsa TWEB 08]</p>
    <p>Is it a DDoS attack or a flash crowd? [Jung WWW 02]</p>
    <p>Yahoo!Yahoo! GoogleGoogle</p>
    <p>Bing Bing</p>
    <p>Im not sure about Beasty! Im not sure</p>
    <p>about Beasty!</p>
    <p>Im not sure about Beasty! Im not sure</p>
    <p>about Beasty!</p>
    <p>Im not sure about Beasty! Im not sure</p>
    <p>about Beasty!</p>
  </div>
  <div class="page">
    <p>Collaborative anomaly detection</p>
    <p>Targets (victims) could correlate attacks/attackers [Katti IMC 05], [Allman Hotnets 06], [Kannan SRUTI 06], [Moore INFOC 03]</p>
    <p>Yahoo!Yahoo! GoogleGoogle</p>
    <p>Bing Bing</p>
    <p>Fool us once, shame on you. Fool us N times, shame on us.</p>
    <p>Fool us once, shame on you. Fool us N times, shame on us.</p>
  </div>
  <div class="page">
    <p>Problem: Network Anomaly Detection</p>
    <p>Solution:  Aggregate suspect IPs from many ISPs  Flag those IPs that appear &gt; threshold</p>
  </div>
  <div class="page">
    <p>Problem: Distributed Ranking</p>
    <p>Solution:  Collect domain statistics from many users  Aggregate data by domain</p>
  </div>
  <div class="page">
    <p>Problem:</p>
    <p>Solution:  Aggregate (id, data) from many sources  Analyze data grouped by id</p>
  </div>
  <div class="page">
    <p>But what about privacy?</p>
    <p>What inputs are submitted?</p>
    <p>Who submitted what?</p>
  </div>
  <div class="page">
    <p>Data Aggregation Problem</p>
    <p>Many participants, each with (key, value) observation  Goal: Aggregate observations by key</p>
    <p>Key Values k1 ( va, vb ) k2 ( vi, vj, vk )  kn ( vx )</p>
    <p>A A</p>
    <p>A</p>
  </div>
  <div class="page">
    <p>Data Aggregation Problem</p>
    <p>Many participants, each with (key, value) observation  Goal: Aggregate observations by key</p>
    <p>Key Values k1 ( va, vb ) k2 ( vi, vj, vk )  kn ( vx )</p>
    <p>A A</p>
    <p>A</p>
    <p>F ( F (</p>
    <p>F (</p>
    <p>) )</p>
    <p>)</p>
    <p>PDA: Only release the value column CR-PDA: Plus keys whose values satisfy some func</p>
  </div>
  <div class="page">
    <p>Data Aggregation Problem</p>
    <p>Many participants, each with (key, value) observation  Goal: Aggregate observations by key</p>
    <p>Key Values k1 ( 1, 1 ) k2 ( 1, 1, 1 )  kn ( 1 )</p>
    <p>PDA: Only release the value column CR-PDA: Plus keys whose values satisfy some func</p>
    <p>?</p>
    <p>?</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>Goals  Keyword privacy: No party learns anything about keys</p>
    <p>Participant privacy: No party learns who submitted what</p>
    <p>Efficiency: Scale to many participants, each with many inputs</p>
    <p>Flexibility: Support variety of computations over values</p>
    <p>Lack of coordination:  No synchrony required, individuals cannot prevent progress  All participants need not be online at same time</p>
  </div>
  <div class="page">
    <p>Potential solutions</p>
    <p>Approach Keyword Privacy</p>
    <p>Participant Privacy Efficiency Flexibility</p>
    <p>Lack of Coord</p>
    <p>Garbled Circuit</p>
    <p>Evaluation</p>
    <p>Multiparty Set Intersection</p>
    <p>Yes Yes Very Poor Yes No</p>
    <p>Yes Yes Poor No NoD ec</p>
    <p>en tr</p>
    <p>al iz</p>
    <p>ed</p>
  </div>
  <div class="page">
    <p>Security Efficiency</p>
    <p>Weaken security assumptions?  Assume honest but curious participants?</p>
    <p>Assume no collusion among malicious participants?</p>
    <p>In large/open setting, easy to operate multiple nodes (so-called Sybil attack)</p>
  </div>
  <div class="page">
    <p>Towards Centralization?</p>
    <p>DB</p>
    <p>Participants</p>
  </div>
  <div class="page">
    <p>Potential solutions</p>
    <p>Approach Keyword Privacy</p>
    <p>Participant Privacy Efficiency Flexibility</p>
    <p>Lack of Coord</p>
    <p>Garbled Circuit</p>
    <p>Evaluation</p>
    <p>Multiparty Set Intersection</p>
    <p>Hashing Inputs</p>
    <p>Network Anonymization</p>
    <p>Yes Yes Very Poor Yes No</p>
    <p>Yes Yes Poor No No</p>
    <p>No No Very Good Yes Yes</p>
    <p>No Yes Very Good Yes Yes</p>
    <p>D ec</p>
    <p>en tr</p>
    <p>al iz</p>
    <p>ed Ce</p>
    <p>nt ra</p>
    <p>liz ed</p>
  </div>
  <div class="page">
    <p>Towards semi-centralization</p>
    <p>Participants</p>
    <p>Proxy DB</p>
    <p>Assumption: Proxy and DB do</p>
    <p>not collude</p>
    <p>Assumption: Proxy and DB do</p>
    <p>not collude</p>
  </div>
  <div class="page">
    <p>Potential solutions</p>
    <p>Approach Keyword Privacy</p>
    <p>Participant Privacy Efficiency Flexibility</p>
    <p>Lack of Coord</p>
    <p>Garbled Circuit</p>
    <p>Evaluation</p>
    <p>Multiparty Set Intersection</p>
    <p>Hashing Inputs</p>
    <p>Network Anonymization</p>
    <p>This Work</p>
    <p>Yes Yes Very Poor Yes No</p>
    <p>Yes Yes Poor No No</p>
    <p>No No Very Good Yes Yes</p>
    <p>No Yes Very Good Yes Yes</p>
    <p>Yes Yes Good Yes Yes</p>
    <p>D ec</p>
    <p>en tr</p>
    <p>al iz</p>
    <p>ed Ce</p>
    <p>nt ra</p>
    <p>liz ed</p>
  </div>
  <div class="page">
    <p>Privacy Guarantees</p>
    <p>Privacy of PDA against malicious entities and participants  Malicious participant may collude with either malicious</p>
    <p>proxy or DB, but not both  May violate correctness in almost arbitrary ways</p>
    <p>Privacy of CR-PDA against honest-but-curious entities and malicious participants</p>
  </div>
  <div class="page">
    <p>PDA Strawman #0</p>
    <p>Participant Proxy DB</p>
    <p>k</p>
  </div>
  <div class="page">
    <p>PDA Strawman #1</p>
    <p>Participant Proxy DB</p>
    <p>ds</p>
    <p>k # 1.1.1.1 1</p>
    <p>Violates keyword privacy</p>
    <p>Violates keyword privacy</p>
    <p>EDB(k) EDB(k)</p>
  </div>
  <div class="page">
    <p>ds</p>
    <p>PDA Strawman #2</p>
    <p>Participant Proxy DB</p>
    <p>H (k) # H(1.1.1</p>
    <p>H(2.2.2 .2)</p>
    <p>Still violates keyword privacy: IPs drawn from small domains Still violates keyword privacy: IPs drawn from small domains</p>
    <p>EDB( H (k) ) EDB( H (k) )</p>
  </div>
  <div class="page">
    <p>PDA Strawman #3</p>
    <p>Participant Proxy DB</p>
    <p>Fs (k) # Fs(1.1.1</p>
    <p>Fs(2.2.2 .2)</p>
    <p>EDB( Fs (k) ) EDB( Fs (k) )</p>
    <p>But how do clients learn Fs (IP)) ?</p>
    <p>But how do clients learn Fs (IP)) ?</p>
    <p>Secret s</p>
  </div>
  <div class="page">
    <p>Our Basic PDA Protocol</p>
    <p>Participant Proxy DB</p>
    <p>Oblivious PRF protocol</p>
    <p>Fs (k) # Fs(1.1.1</p>
    <p>Fs(2.2.2 .2)</p>
    <p>EDB( Fs (k) )OPRF</p>
    <p>EDB( Fs (k) ) Fs (k)</p>
    <p>Secret s</p>
  </div>
  <div class="page">
    <p>Fs (k) # Fs(1.1.1</p>
    <p>Fs(2.2.2 .2)</p>
    <p>retransmits</p>
    <p>Basic CR-PDA Protocol</p>
    <p>Participant Proxy DB</p>
    <p>EDB( Fs (k) ) Fs (k) EDB(EPRX (k))</p>
    <p>EPRX (k)</p>
    <p>Fs (k) # Encd k</p>
    <p>Fs(1.1.1. 1)</p>
    <p>Fs(2.2.2. 2)</p>
    <p>Secret s</p>
  </div>
  <div class="page">
    <p>retransmits</p>
    <p>Privacy Properties</p>
    <p>Participant Proxy DB</p>
    <p>Any coalition of HBC participants  HBC coalition of proxy and participants  HBC database</p>
    <p>EDB( Fs (k) ) Fs (k) EDB(EPRX (k))</p>
    <p>EPRX (k)</p>
    <p>Keyword privacy: Nothing learned about unreleased keys  Participant privacy: Key  Participant not learned</p>
    <p>Secret s</p>
  </div>
  <div class="page">
    <p>retransmits</p>
    <p>Privacy Properties</p>
    <p>Participant Proxy DB</p>
    <p>Any coalition of HBC participants  HBC coalition of proxy and participants  HBC database</p>
    <p>EDB( Fs (k) ) Fs (k) EDB(EPRX (k))</p>
    <p>EPRX (k)</p>
    <p>Keyword privacy: Nothing learned about unreleased keys  Participant privacy: Key  Participant not learned</p>
    <p>Secret s</p>
    <p>malicious participants</p>
    <p>HBC coalition of DB and participants</p>
  </div>
  <div class="page">
    <p>retransmits</p>
    <p>More Robust PDA Protocol</p>
    <p>Participant Proxy DB</p>
    <p>Any coalition of HBC participants  HBC coalition of proxy and participants  HBC database</p>
    <p>EDB( Fs (k) ) Fs (k) EDB(EPRX (k))</p>
    <p>EPRX (k) Secret s</p>
    <p>malicious participants</p>
    <p>HBC coalition of DB and participants</p>
    <p>ORPF  Encrypted OPRF Protocol  Ciphertext re-randomization by proxy  Proof by participant that submitted ks match</p>
  </div>
  <div class="page">
    <p>Encrypted-OPRF protocol  Problem: in basic OPRF protocol, participant learns Fs(k)</p>
    <p>Encrypted-OPRF protocol:  Client learns blinded Fs(k)</p>
    <p>Client encrypts to DB</p>
    <p>Proxy can unblind Fs(k) under the encryption</p>
    <p>( ) r -1Enc ( )</p>
    <p>( ) rFs(k)</p>
    <p>( si)ki=1El Gamal g mod p</p>
  </div>
  <div class="page">
    <p>Encrypted-OPRF protocol  Problem: in basic OPRF protocol, participant learns Fs(k)</p>
    <p>Encrypted-OPRF protocol  Client learns blinded Fs(k)</p>
    <p>Client encrypts to DB</p>
    <p>Proxy can unblind Fs(k) under the encryption</p>
    <p>OPRF runs OT protocol for each bit of input k</p>
    <p>OT protocols expensive, so use batch OT protocol [Ishai et al]</p>
    <p>( ) r -1Enc ( )</p>
    <p>( ) rFs(k)</p>
  </div>
  <div class="page">
    <p>Scalable Protocol Architecture</p>
    <p>Participants Client-Facing</p>
    <p>Proxies</p>
    <p>Share secret s</p>
    <p>Proxy Decryption</p>
    <p>Oracles</p>
    <p>Share PRX key</p>
    <p>Front-End DB Tier</p>
    <p>Share DB key</p>
    <p>Back-End DB Storage</p>
    <p>Partition Fs keyspace</p>
  </div>
  <div class="page">
    <p>Evaluation  Scalable architecture implemented</p>
    <p>Basic CR-PDA / PDA protocol + and encrypted-OPRF protocol w/ Batch OT</p>
    <p>~5000 lines of threaded C++, GnuPG for crypto</p>
    <p>Testbed of 2 GHz Linux machines</p>
    <p>Algorithm Parameter Value RSA / ElGamal key size 1024 bits</p>
    <p>Oblivious Transfer k 80 AES key size 256 bits</p>
  </div>
  <div class="page">
    <p>Throughput vs. participant batch size</p>
    <p>Single CPU core for DB and proxy each</p>
  </div>
  <div class="page">
    <p>Maximum throughput per server</p>
    <p>Four CPU cores for DB and proxy (each)</p>
  </div>
  <div class="page">
    <p>Throughput scalability</p>
    <p>Number CPU cores per DB and proxy (each)</p>
  </div>
  <div class="page">
    <p>Summary  Privacy-Preserving Data Aggregation protects:</p>
    <p>Participants: Do not reveal who submitted what  Keywords: Only reveal values / released keys</p>
    <p>Novel composition of crypto primitives  Based on assumption that 2+ known parties dont collude</p>
    <p>Efficient implementation of architecture  Scales linearly with computing resources  Ex: Millions of suspected IPs in hours</p>
    <p>Of independent interest  Introduced encrypted OPRF protocol  First implementation/validation of Batch OT protocol</p>
  </div>
</Presentation>
