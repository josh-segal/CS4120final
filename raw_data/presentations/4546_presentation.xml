<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Gabriele DAngelo</p>
    <p>joint work with</p>
    <p>Michele Bracuto</p>
    <p>University of Bologna Department of Computer Science</p>
    <p>DS-RT 2007  Crete Island (Greece)</p>
    <p>Detailed Simulation of Large-Scale Wireless Networks</p>
  </div>
  <div class="page">
    <p>Presentation outline</p>
    <p>Basic assumptions and goals</p>
    <p>Parallel and Distributed Simulation (PADS)</p>
    <p>Synchronization and load balancing</p>
    <p>Tools and mechanisms: ARTS, GAIA+, WiFra</p>
    <p>Experimental evaluation</p>
    <p>Conclusions and future work</p>
  </div>
  <div class="page">
    <p>Basic assumptions</p>
    <p>Many of the systems of interest are composed by a very large</p>
    <p>number of entities, with a really dynamic nature and evolution</p>
    <p>Wireless networks, under the simulation viewpoint, have very strict</p>
    <p>requirements in terms of level of detail</p>
    <p>Networks composed of hundreds of thousands up to millions of</p>
    <p>nodes will be widely diffused in the next years</p>
    <p>Monolithic simulators are unable to fulfill such scalability</p>
    <p>requirements due to memory constrains and excessive amount of</p>
    <p>time required to obtain the results</p>
  </div>
  <div class="page">
    <p>Basic assumptions</p>
    <p>Parallel And Distributed Simulation can be used to aggregate</p>
    <p>memory and computational resources</p>
    <p>A set of interconnected Physical Execution Units (PEUs) is</p>
    <p>responsible to manage and evolve the simulation state</p>
    <p>This approach is not free from drawbacks, the distributed</p>
    <p>execution architecture needs appropriate mechanisms for:</p>
    <p>Synchronization (Communication)</p>
    <p>Load-balancing</p>
  </div>
  <div class="page">
    <p>Synchronization</p>
    <p>Under the synchronization viewpoint, the detailed (and efficient)</p>
    <p>simulation of wireless networks is a complex problem</p>
    <p>The Medium Access Control (MAC) protocols commonly used in</p>
    <p>wireless network requires very fine-grained models to represent</p>
    <p>the state of the shared medium and the behavior of wireless</p>
    <p>devices</p>
    <p>In example, in the case of 802.11 DCF the Short Interframe Space</p>
    <p>(SIF) is set to 10 s. This potentially means a huge number of</p>
    <p>synchronizations in the distributed execution architecture</p>
  </div>
  <div class="page">
    <p>Goals</p>
    <p>Main goals of this work, demonstrate that:</p>
    <p>Large scale wireless networks (200.000 node) can be</p>
    <p>efficiently simulated following an appropriate distributed</p>
    <p>simulation approach</p>
    <p>Specifically tailored techniques can improve the</p>
    <p>communication efficiency and therefore increase the</p>
    <p>simulation speed</p>
    <p>Very large-scale wireless networks (1.000.0000 nodes) can</p>
    <p>be simulated using clusters composed of Commercial-Off</p>
    <p>The-Shelf (COTS) hardware</p>
  </div>
  <div class="page">
    <p>Distributed simulation: definitions</p>
    <p>The distributed simulation is run by a set of Physical Execution</p>
    <p>Units (PEUs)</p>
    <p>Each PEU is responsible to manage the execution of a Logical</p>
    <p>Process (LP)</p>
    <p>Each LP, simply works as a container: it manages the evolution of</p>
    <p>a set of Simulated Model Entities (SMEs)</p>
  </div>
  <div class="page">
    <p>Synchronization + Load Balancing</p>
    <p>As said before, synchronization (more generally the</p>
    <p>communication overhead) and load-balancing are two of the</p>
    <p>main problems to address in PADS</p>
    <p>The reduction of the communication overhead and the</p>
    <p>computation load-balancing can be seen as different aspects</p>
    <p>of the same problem and therefore should be addressed</p>
    <p>together</p>
    <p>A single mechanism should manage both of them</p>
    <p>The presence of heterogeneous hardware (e.g. different CPU</p>
    <p>models) can be seen as a special load balancing requirement</p>
  </div>
  <div class="page">
    <p>Migration-based approach</p>
    <p>We propose a migration-based approach: every entity in the</p>
    <p>simulation can be dynamically relocated (migrated), moving from</p>
    <p>a source LP to a new destination LP</p>
    <p>Clustering in the same LP the highly interacting Simulated Mobile</p>
    <p>Entities (SMEs) it is possible to reduce the costly inter-LP</p>
    <p>communication and conversely increasing the rate of low cost</p>
    <p>intra-LP communication</p>
  </div>
  <div class="page">
    <p>Load-balancing</p>
    <p>This approach can be also used to improve the computation load</p>
    <p>balancing of the execution architecture</p>
    <p>The synchronization points in the distributed architecture can be</p>
    <p>used to tag each LP as fast or slow</p>
    <p>A LP is slow if:</p>
    <p>Its PEU (i.e. CPU) is overloaded</p>
    <p>Its communication network has a higher delay with respect to</p>
    <p>other parts of the execution architecture</p>
    <p>In both cases, to speed up the simulation, a solution is to migrate</p>
    <p>some entities from the slow LPs to faster LPs, therefore reducing</p>
    <p>the imbalance</p>
  </div>
  <div class="page">
    <p>Load-balacing</p>
    <p>This description of the mechanism is very high level, the real</p>
    <p>world implementation has to take in account many subtle details,</p>
    <p>some of them:</p>
    <p>Each reallocation has a cost that depends on many factors</p>
    <p>The algorithm has to be fully distributed (without any</p>
    <p>centralization point) and therefore without any global</p>
    <p>vision of the distributed system</p>
    <p>The mechanism has to quickly react to internal (i.e. the</p>
    <p>creation of new entities) and external events (i.e. a burst of</p>
    <p>CPU or network load), without introducing oscillatory</p>
    <p>behaviors</p>
  </div>
  <div class="page">
    <p>ARTS: parallel and distributed simulation middleware</p>
    <p>The (Advanced RTI System) ARTS is a middleware for Parallel and</p>
    <p>Distributed Simulation</p>
    <p>Adaptively adjusts the communication behavior with respect to</p>
    <p>network technology (that is, adaptively selects Shared-Memory, R</p>
    <p>UDP, SCTP, TCP etc. to improve the communication performances)</p>
    <p>Homepage: http://pads.cs.unibo.it</p>
    <p>WiFra</p>
    <p>GAIA+</p>
    <p>ARTS</p>
  </div>
  <div class="page">
    <p>GAIA+: communication and computation load-balancing</p>
    <p>GAIA+ framework is responsible to adaptively manage the</p>
    <p>migration of the simulated entities</p>
    <p>It is composed by a set of tightly coupled heuristics, that take care</p>
    <p>of the computation and communication load-balancing</p>
    <p>It provides an easy to use abstraction level for the definition of</p>
    <p>new simulation models</p>
    <p>WiFra</p>
    <p>GAIA+</p>
    <p>ARTS</p>
  </div>
  <div class="page">
    <p>WiFra: Wireless Framework</p>
    <p>The Wireless Framework (WiFra) is a collection of wireless models</p>
    <p>In this case we have implemented a IEEE 802.11 DCF MAC Layer</p>
    <p>protocol and on top of it a very simple info-mobility application</p>
    <p>Each entity defined in WiFra can be automatically migrated by</p>
    <p>GAIA+, depending on the defined heuristics and the tuning</p>
    <p>parameters</p>
    <p>WiFra</p>
    <p>GAIA+</p>
    <p>ARTS</p>
  </div>
  <div class="page">
    <p>Experimental evaluation</p>
    <p>Wireless model parameters Simulation time-step 10 s (802.11 SIFS)</p>
    <p>MAC layer IEEE 802.11 DCF</p>
    <p>Packet size 1024 bytes</p>
    <p>Packet rate 4 pkt/s</p>
    <p>Propagation model Transmission range</p>
    <p>Free space propagation 250 meters</p>
    <p>Simulated area Variable size Fixed density of nodes</p>
    <p>Nominal channel bit rate 2 Mbps</p>
    <p>Mobility model Random WayPoint (RWP)</p>
    <p>Simulated devices (SMHs) 200.000, 1.000.000</p>
  </div>
  <div class="page">
    <p>Experimental evaluation: distributed simulation environment</p>
    <p>Scalability evaluation: WiFra</p>
    <p>#PEUs</p>
    <p>S pe</p>
    <p>ed U</p>
    <p>p</p>
    <p>GHz with 1GB of RAM, interconnected by Fast Ethernet</p>
  </div>
  <div class="page">
    <p>Experimental evaluation: GAIA+ ON/OFF</p>
    <p>Scalability evaluation: WiFra &amp; GAIA+</p>
    <p>S p</p>
    <p>ee dU</p>
    <p>p</p>
    <p>GAIA+ OFF GAIA+ ON</p>
  </div>
  <div class="page">
    <p>Experimental evaluation: massively populated scenario</p>
    <p>Very large-scale wireless network composed of 1.000.000 nodes</p>
    <p>Execution architecture:</p>
    <p>interconnected by Fast Ethernet</p>
    <p>Each PEU initially allocates 32.250 SMHs</p>
    <p>During the simulation the GAIA+ mechanism triggers re</p>
    <p>allocations to adapt the load of each PEU to the performance of the</p>
    <p>hardware and background load (e.g. other running tasks)</p>
  </div>
  <div class="page">
    <p>Experimental evaluation: massively populated scenario</p>
    <p>WiFra &amp; GAIA+ (Differencies from Initial Allocation)</p>
    <p>PEU (ID)</p>
    <p>N u</p>
    <p>m b</p>
    <p>er o</p>
    <p>f S M</p>
    <p>H s</p>
  </div>
  <div class="page">
    <p>Experimental evaluation: massively populated scenario</p>
    <p>Distributed simulation: GAIA+ OFF vs. ON</p>
    <p>W al</p>
    <p>l-C lo</p>
    <p>ck -T</p>
    <p>im e</p>
    <p>(s )</p>
    <p>GAIA+ ON GAIA+ OFF</p>
    <p>The gain in terms of performance is up to 21% More complex user level protocols would increase this gain</p>
  </div>
  <div class="page">
    <p>Conclusions and future work</p>
    <p>Distributed simulation is a feasible approach for the detailed (fine</p>
    <p>grained) simulation of large-scale wireless networks</p>
    <p>An approach based on adaptive migration of the simulated entities</p>
    <p>can both enhance the communication and computation load</p>
    <p>balancing, therefore increasing the simulation speed-up</p>
    <p>We plan to add more protocol models to WiFra</p>
    <p>Further develop the GAIA+ framework to adaptively activate more</p>
    <p>CPUs (on-demand) and to reduce the number of used CPUs when</p>
    <p>are not necessary, therefore reducing the synchronization</p>
    <p>overhead</p>
  </div>
  <div class="page">
    <p>Gabriele DAngelo</p>
    <p>joint work with</p>
    <p>Michele Bracuto</p>
    <p>University of Bologna Department of Computer Science</p>
    <p>DS-RT 2007  Crete Island (Greece)</p>
    <p>Detailed Simulation of Large-Scale Wireless Networks</p>
  </div>
</Presentation>
