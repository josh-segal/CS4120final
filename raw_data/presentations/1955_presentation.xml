<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>JACKPOT: Online Experimentation of Cloud Microservices</p>
    <p>Talk @ HotCloud July 15, 2020</p>
    <p>BY M. TOSLALI1, S. PARTHASARATHY2, F. OLIVEIRA2, AND A. K. COSKUN1</p>
  </div>
  <div class="page">
    <p>Cloud Microservices in Todays World</p>
    <p>Cloud microservices architecture provides agility  Shortens code delivery cycles</p>
    <p>Enables developers to rapidly innovate</p>
    <p>Agile practices encapsulate:  Continuous deployment</p>
    <p>Online experimentation Figure from cisco.com</p>
  </div>
  <div class="page">
    <p>Web &amp; Mobile Online Experimentation</p>
    <p>Goal: Compare multiple versions of a component in production to identify best one</p>
    <p>Versions are subject to single KPI1 (reward, e.g., CTR2)</p>
    <p>Figure from optimizely.com</p>
  </div>
  <div class="page">
    <p>Cloud Challenges</p>
    <p>Cloud is volatile due to:  Resource contention</p>
    <p>Failures</p>
    <p>Latency</p>
    <p>Profound financial and reputation damages</p>
    <p>Half a second delay caused a 20% drop in traffic3</p>
    <p>Every 100 of latency cost 1% in sales4</p>
    <p>Necessity: multi KPI experiments  Latency along with a reward</p>
  </div>
  <div class="page">
    <p>Further Challenges Posed by Microservices</p>
    <p>Interactions between microservices can affect the overall user-perceived performance and correctness</p>
    <p>Canopy [Kaldor et al., 2017] describes a scenario on Facebook.com</p>
    <p>v1</p>
    <p>v2</p>
    <p>v1</p>
    <p>+300 (or 13%)</p>
    <p>Necessity: Experiment with combination of microservices (i.e., path)  E.g., path = _2,_1</p>
  </div>
  <div class="page">
    <p>Jackpot: Online Experimentation of Cloud Microservices</p>
    <p>We propose a novel formulation for online experimentation of cloud microservices  Generalizes traditional approaches used in mobile &amp; web environment</p>
    <p>Encapsulates challenges posed by the cloud environment</p>
    <p>To enable developers to apply our formulation:  We present the system Jackpot: Online Experimentation of Cloud Microservices</p>
  </div>
  <div class="page">
    <p>Design Choices</p>
    <p>Hard and soft constraints on KPIs</p>
    <p>Utility maximization</p>
    <p>Pure statistical estimation</p>
  </div>
  <div class="page">
    <p>Jackpot Internals</p>
    <p>Tracing substrate</p>
    <p>Microservices application in</p>
    <p>a service mesh</p>
    <p>Ingress</p>
    <p>Probabilistic traffic policy</p>
    <p>Belief distributions</p>
    <p>JACKPOT</p>
    <p>End-user requests</p>
    <p>Devops Engineer</p>
    <p>Experiment specification</p>
    <p>Multivariate sigmoid</p>
    <p>Istio service mesh provides:</p>
    <p>Jackpot injects headers to incoming requests in the course of an experiment: 1) Enables traffic routing according to a path 2) Collects path specific KPIs</p>
  </div>
  <div class="page">
    <p>Jackpots Workflow</p>
    <p>Probabilistic traffic policy</p>
    <p>Belief distributions</p>
    <p>Devops Engineer</p>
    <p>Experiment specification</p>
    <p>Multivariate sigmoid</p>
    <p>Jackpot input: Experiment Spec  Provided as a YAML file  Contains:</p>
    <p>Services  KPIs</p>
  </div>
  <div class="page">
    <p>Multivariate Sigmoid</p>
    <p>Probabilistic traffic policy</p>
    <p>Belief distributions</p>
    <p>Devops Engineer</p>
    <p>Experiment specification</p>
    <p>Multivariate sigmoid</p>
    <p>: Amplification, j: KPI, j: Constraint</p>
  </div>
  <div class="page">
    <p>Online Learning</p>
    <p>Traffic policy</p>
    <p>Belief distributions</p>
    <p>Multivariate sigmoid</p>
    <p>Utility components need to be learned online</p>
    <p>Jackpot maintains Bayesian belief distributions</p>
    <p>Monte Carlo sampling answers: 1. What is the estimated utility of path p?</p>
  </div>
  <div class="page">
    <p>Holistic Algorithm: Top-k Sigmoid Thompson Sampling</p>
    <p>Thompson Sampling (TS) is a provably robust multi-armed bandit algorithm  Multi-armed bandit: exploration vs. exploitation dilemma  k-STS samples from belief distributions and plug these into the sigmoid function</p>
    <p>(Monte Carlo)  Finally chooses top-k paths uniformly at random</p>
    <p>Generalized version of TS  Exploits the best path</p>
    <p>Type1: Utility maximization</p>
    <p>Generalized version of Top-two TS  Explores the best and an alternative</p>
    <p>Type2: Best path identification</p>
    <p>N-STS/UNIF</p>
    <p>Uniform policy (UNIF)  Evaluates each candidate equally</p>
    <p>Type3: Statistical estimates</p>
  </div>
  <div class="page">
    <p>Probabilistic traffic policy</p>
    <p>Belief distributions</p>
    <p>JACKPOTDevops Engineer</p>
    <p>Experiment specification</p>
    <p>Multivariate sigmoid</p>
    <p>Microservices Mesh</p>
    <p>Jackpots Workflow</p>
  </div>
  <div class="page">
    <p>Experiments</p>
    <p>We evaluate the performance of 1-STS, 2-STS, UNIF.</p>
    <p>Constraint on mean latency  i.e., [1[]] &lt;= 300</p>
    <p>Set  = 10 hard constraint  Workload: 50 /  100 , 5</p>
    <p>v1</p>
    <p>v1</p>
    <p>v2</p>
    <p>v1</p>
    <p>v2 v1</p>
    <p>v2v3</p>
    <p>productpage</p>
    <p>details</p>
    <p>reviews ratings</p>
    <p>Istio-ingress</p>
    <p>Virtual service</p>
    <p>Request</p>
    <p>Bookinfo application</p>
  </div>
  <div class="page">
    <p>Best Path Identification</p>
    <p>1-STS struggles to reach higher confidence levels  Selects the optimal in almost all periods</p>
    <p>2-STS prevents focusing on one candidate  Top-2, the best or an alternative is chosen</p>
    <p>2-STS requires 49% fewer epochs compared to UNIF, and 63% fewer compared to 1-STS</p>
  </div>
  <div class="page">
    <p>Utility Maximization</p>
    <p>Observe that 1-STS maximizes the reward during experimentation  True reward of optimal = 0.77</p>
    <p>1-STS works toward exploiting the optimal, thus maximizing the utility</p>
  </div>
  <div class="page">
    <p>Next Steps</p>
    <p>Dynamic incorporation of versions as they arrive into ongoing experiments  The ability to handle heterogeneous cloud applications</p>
    <p>Absence of header propagation No path-level traffic splitting</p>
    <p>Absence of distributed tracing Multi-type telemetry functionality</p>
  </div>
  <div class="page">
    <p>THANK YOU</p>
    <p>Online experimentation on a combination of microservices (i.e., paths)</p>
    <p>Multi-KPI experiments  Multi-types of experimentation</p>
    <p>Tracing substrate</p>
    <p>Microservices application in</p>
    <p>a service mesh</p>
    <p>Ingress</p>
    <p>Probabilistic traffic policy</p>
    <p>Belief distributions</p>
    <p>JACKPOT</p>
    <p>End-user requests</p>
    <p>Devops Engineer</p>
    <p>Experiment specification</p>
    <p>Multivariate sigmoid</p>
    <p>Jackpot: Online Experimentation of Cloud Microservices</p>
    <p>Contact: toslali@bu.edu</p>
  </div>
</Presentation>
