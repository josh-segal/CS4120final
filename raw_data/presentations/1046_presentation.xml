<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Popularity Prediction of Facebook Videos for Higher Quality Streaming</p>
    <p>Linpeng Tang</p>
    <p>Qi Huang , Amit Puntambekar</p>
    <p>Ymir Vigfusson , Wyatt Lloyd , Kai Li</p>
  </div>
  <div class="page">
    <p>Videos are Central to Facebook 8 billion views per day</p>
    <p>Americas Got Talent</p>
    <p>Black bear roaming</p>
    <p>in Princeton</p>
    <p>Small shop making</p>
    <p>frozen yogurt</p>
  </div>
  <div class="page">
    <p>Workflow of Videos on Facebook</p>
    <p>Original</p>
    <p>Streaming Video Engine</p>
    <p>CDN</p>
    <p>Encoded</p>
    <p>ABR Streaming</p>
    <p>Upload</p>
    <p>Backend Storage</p>
    <p>ABR streams the best quality</p>
    <p>version of the video that fits! Intensive processing needed to create</p>
    <p>multiple video versions for ABR streaming</p>
  </div>
  <div class="page">
    <p>Better Video Streaming from More Processing</p>
    <p>Better compression at the same quality</p>
    <p>QuickFire: 20% size reduction using</p>
    <p>More users can view the high quality versions</p>
    <p>AliceBob</p>
  </div>
  <div class="page">
    <p>Better Video Streaming from More Processing</p>
    <p>Better compression at the same quality</p>
    <p>QuickFire: 20% size reduction using</p>
    <p>More users can view the high quality versions</p>
    <p>AliceBob</p>
    <p>Better Compression</p>
  </div>
  <div class="page">
    <p>How to apply QuickFire for FB videos</p>
    <p>Infeasible to encode all videos with QuickFire</p>
    <p>Increase by 20X the already large processing fleet</p>
    <p>High skew in popularity</p>
    <p>Reap most benefit with modest processing?</p>
  </div>
  <div class="page">
    <p>Opportunity: High Skew in Popularity</p>
    <p>Access logs of 1 million videos randomly sampled by ID</p>
    <p>Watch time: total time users spent watching a video</p>
  </div>
  <div class="page">
    <p>Opportunity: High Skew in Popularity</p>
    <p>We can serve most watch time even with a small fraction</p>
    <p>of videos encoded with QuickFire</p>
    <p>Can we predict these videos for more processing?</p>
  </div>
  <div class="page">
    <p>CHESS Video Prediction System</p>
    <p>Popularity prediction is important for higher</p>
    <p>quality streaming</p>
    <p>Direct encoding on videos with the largest benefit</p>
    <p>Goal of CHESS video prediction system</p>
    <p>Identify videos with highest future watch time</p>
    <p>Maximize watch-time ratio with budgeted processing</p>
  </div>
  <div class="page">
    <p>CHESS Video Prediction System</p>
    <p>Streaming Video Engine</p>
    <p>CDN</p>
    <p>Backend Storage CHESS-VPS</p>
    <p>Predicted</p>
    <p>Popular Videos</p>
    <p>Social signals</p>
    <p>Facebook Graph</p>
    <p>Serving System</p>
    <p>Access logs</p>
  </div>
  <div class="page">
    <p>CHESS Video Prediction System</p>
    <p>Streaming Video Engine</p>
    <p>CDN</p>
    <p>Backend Storage</p>
    <p>Predicted</p>
    <p>Popular Videos</p>
    <p>QuickFire</p>
    <p>Encoded</p>
    <p>CHESS-VPS</p>
    <p>Original</p>
    <p>Social signals</p>
    <p>Facebook Graph</p>
    <p>Serving System</p>
    <p>Access logs</p>
  </div>
  <div class="page">
    <p>Social signals</p>
    <p>Facebook Graph</p>
    <p>Serving System</p>
    <p>Access logs</p>
    <p>CHESS Video Prediction System</p>
    <p>Streaming Video Engine</p>
    <p>CDN</p>
    <p>Backend Storage</p>
    <p>Predicted</p>
    <p>Popular Videos</p>
    <p>QuickFire</p>
    <p>Encoded</p>
    <p>CHESS-VPS</p>
    <p>Original</p>
    <p>Serving QuickFire-encoded versions!</p>
  </div>
  <div class="page">
    <p>Requirements of CHESS-VPS</p>
    <p>Handle working set of ~80 million videos</p>
    <p>Generate new predictions every few minutes</p>
    <p>Requires a new prediction algorithm: CHESS!</p>
  </div>
  <div class="page">
    <p>CHESS Key Insights</p>
    <p>Efficiently model influence of past accesses as</p>
    <p>the basis for scalable prediction</p>
    <p>Combine multiple predictors to boost accuracy</p>
  </div>
  <div class="page">
    <p>Efficiently model past access influence</p>
    <p>Self exciting process</p>
    <p>A past access makes future accesses more probable, i.e.</p>
    <p>provides some influence on future popularity</p>
    <p>Influence of past accesses</p>
  </div>
  <div class="page">
    <p>Efficiently model past access influence</p>
    <p>Self exciting process</p>
    <p>A past access makes future accesses more probable, i.e.</p>
    <p>provides some influence on future popularity</p>
    <p>Prediction: sum up total future influence of all past accesses</p>
    <p>Total future influence</p>
    <p>now</p>
  </div>
  <div class="page">
    <p>Efficiently model past access influence</p>
    <p>Influence modeled with kernel function</p>
    <p>Power-law kernel used by prior works</p>
    <p>Provides high accuracy</p>
    <p>Scan all past accesses, O(N) time/space not scalable</p>
  </div>
  <div class="page">
    <p>Efficiently model past access influence</p>
    <p>Influence modeled with kernel function</p>
    <p>Power-law kernel used by prior works</p>
    <p>Key insight: use exponential kernel for scalability</p>
  </div>
  <div class="page">
    <p>Efficiently model past access influence</p>
    <p>Self exciting process with the exponential kernel</p>
    <p>Current Access</p>
    <p>Watch-time +</p>
    <p>Previous</p>
    <p>Prediction</p>
    <p>Exponential</p>
    <p>Decay x</p>
  </div>
  <div class="page">
    <p>Efficiently model past access influence</p>
    <p>Single exponential kernel is less accurate than</p>
    <p>power-law kernel</p>
    <p>10% lower watch time ratio</p>
    <p>O(1) space/time to maintain</p>
    <p>Single exponential kernel is</p>
    <p>less accurate yet scalable</p>
  </div>
  <div class="page">
    <p>Combining Efficient Features in a Model</p>
    <p>Key insight: maintain multiple exponential kernels</p>
    <p>O(1) space/time Exponential kernels</p>
    <p>Modeled by</p>
    <p>Combining multiple exponential kernels is as accurate as a power-law kernel</p>
    <p>Actual access</p>
    <p>pattern</p>
  </div>
  <div class="page">
    <p>Combining Efficient Features in a Model</p>
    <p>Social signals further boosts accuracy</p>
    <p>Future Popularity</p>
    <p>Neural</p>
    <p>Network</p>
    <p>Raw features</p>
    <p>Multiple</p>
    <p>Kernels</p>
    <p>Directly-used</p>
    <p>Features</p>
    <p>likes</p>
    <p>comments</p>
    <p>shares</p>
    <p>owner likes</p>
    <p>video age</p>
    <p>Past access</p>
    <p>watch-time</p>
  </div>
  <div class="page">
    <p>CHESS Video Prediction System</p>
    <p>Aggr</p>
    <p>Aggregated</p>
    <p>top videos</p>
    <p>Aggr</p>
    <p>Worker1</p>
    <p>Worker2</p>
    <p>Worker3</p>
    <p>Worker4</p>
    <p>Prediction</p>
    <p>workers</p>
    <p>Shard1</p>
    <p>Shard2</p>
    <p>Shard3</p>
    <p>Shard4</p>
    <p>Access logs</p>
    <p>Streaming</p>
    <p>Model</p>
    <p>Model</p>
    <p>NN Models</p>
    <p>Client</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>What is the accuracy of CHESS?</p>
    <p>How do our design decisions on CHESS affect its</p>
    <p>accuracy and resource consumption?</p>
    <p>What is CHESSs impact on video processing and</p>
    <p>watch time ratio of QuickFire?</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>What is the accuracy of CHESS?</p>
    <p>How do our design decisions on CHESS affect its</p>
    <p>accuracy and resource consumption?</p>
    <p>What is CHESSs impact on video processing and</p>
    <p>watch time ratio of QuickFire?</p>
  </div>
  <div class="page">
    <p>Metrics</p>
    <p>Watch time ratio</p>
    <p>Ratio of watch time from better encoded videos</p>
    <p>Directly proportional to benefits of better encoding</p>
    <p>Processing time</p>
  </div>
  <div class="page">
    <p>Metrics</p>
    <p>Watch time ratio</p>
    <p>Ratio of watch time from better encoded videos</p>
    <p>Directly proportional to benefits of better encoding</p>
    <p>Processing time (infeasible to encode all videos)</p>
    <p>Video length processing time</p>
    <p>Video length ratio  computation overhead</p>
  </div>
  <div class="page">
    <p>CHESS is Accurate</p>
    <p>Vary video length ratio (proxy for processing overhead)</p>
    <p>Observe watch time ratio of better encoded videos</p>
  </div>
  <div class="page">
    <p>CHESS is Accurate</p>
    <p>Initial(1d): initial watch time up to 1 day after upload</p>
  </div>
  <div class="page">
    <p>CHESS is Accurate</p>
    <p>Initial(1d): initial watch time up to 1 day after upload</p>
    <p>SESIMIC: handcrafted power-law kernel</p>
  </div>
  <div class="page">
    <p>CHESS is Accurate</p>
    <p>Initial(1d): initial watch time up to 1 day after upload</p>
    <p>SESIMIC: handcrafted power-law kernel</p>
    <p>CHESS provides higher accuracy than even</p>
    <p>the non-scalable state of the art</p>
  </div>
  <div class="page">
    <p>CHESS Reduces Encoding Processing</p>
    <p>Predict on whole Facebook video workload in real-time</p>
    <p>Sample 0.5% videos for actual encoding</p>
    <p>CHESS reduces CPU by 3x (54% to 17%)</p>
    <p>for 80% watch time ratio</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Popularity Prediction</p>
    <p>Video QoE Optimization</p>
    <p>Caching</p>
    <p>Hawkes'71, Crane'08, Szabo'10, Cheng'14, SEISMIC'15</p>
    <p>Liu'12, Aaron'15, Huang'15, Jiang'16, QuickFire'16</p>
    <p>LFU93, LRU94, SLRU94, GDS97, GDSF98, MQ01</p>
    <p>CHESS is scalable and accurate</p>
    <p>Optimize encoding with access feedback</p>
    <p>Identify hot items to improve efficiency</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Popularity prediction can direct encoding for higher</p>
    <p>quality streaming</p>
    <p>CHESS: first scalable and accurate popularity predictor</p>
    <p>Model influence of past accesses with O(1) time/space</p>
    <p>Combine multiple kernels &amp; social signals to boost accuracy</p>
    <p>Evaluation on Facebook video workload</p>
    <p>More accurate than non-scalable state of the art method</p>
    <p>Serve 80% user watch time with 3x reduction in processing 34</p>
  </div>
</Presentation>
