<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Implementing IPv6 for Windows NT</p>
    <p>Richard P. Draves, Microsoft Research</p>
    <p>Allison Mankin, USC/ISI</p>
    <p>Brian D. Zill, Microsoft Research</p>
  </div>
  <div class="page">
    <p>Main Points</p>
    <p>Windows NT is a good base</p>
    <p>for network protocol development</p>
    <p>Our release is great sample code:</p>
    <p>http://research.microsoft.com/msripv6</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Motivation</p>
    <p>Windows NT Networking</p>
    <p>Our Implementation</p>
    <p>Problems &amp; Solutions</p>
    <p>Source Code Access</p>
    <p>Performance</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Primarily a learning experience</p>
    <p>Bootstrap Microsoft on IPv6</p>
    <p>Platform for further research</p>
  </div>
  <div class="page">
    <p>Windows NT Networking Application</p>
    <p>ws2_32.dll Winsock 2</p>
    <p>Winsock</p>
    <p>wship6.dll Winsock Helper for IPv6</p>
    <p>WSH msafd.dll MSs Winsock Provider</p>
    <p>WSP</p>
    <p>rnr20.dll MSs Namespace Provider</p>
    <p>NSP</p>
    <p>afd.sys Driver for Winsock</p>
    <p>tcpip6.sys IPv6 Protocol</p>
    <p>TDI</p>
    <p>ndis.sys Device-Independent Driver</p>
    <p>NDIS</p>
    <p>dc21x4.sys Device-Specific Driver</p>
    <p>NDIS</p>
    <p>Existing Components</p>
    <p>Added Components User Process</p>
    <p>Kernel</p>
  </div>
  <div class="page">
    <p>Our Implementation</p>
    <p>Started with NT 4.0 TCP/IP source code</p>
    <p>Supports only IPv6</p>
    <p>Supports only NT 4.0/5.0</p>
  </div>
  <div class="page">
    <p>Our Implementation</p>
    <p>LAN Loopback Tunnel</p>
    <p>Neighbor Discovery</p>
    <p>Send/Receive Routing</p>
    <p>TCP UDP</p>
    <p>ICMP MLD</p>
    <p>Link-Layer Modules</p>
    <p>Core</p>
    <p>Upper-Layer Protocols</p>
  </div>
  <div class="page">
    <p>Problems &amp; Solutions</p>
    <p>NDIS receive handlers</p>
    <p>Adding link-layer headers</p>
    <p>Pull-up non-contiguous packet data</p>
    <p>Preventing deadlock with NDIS and TDI</p>
  </div>
  <div class="page">
    <p>NDIS Receive Handlers</p>
    <p>Asynchronous callbacks</p>
    <p>ProtocolReceive  flat look-ahead buffer</p>
    <p>may need separate call to transfer data</p>
    <p>ProtocolReceivePacket  NDIS_PACKET structure with buffer chain</p>
    <p>not implemented by all NICs</p>
    <p>miniport owns the packet/buffers</p>
  </div>
  <div class="page">
    <p>NIC Implementations</p>
    <p>ProtocolReceive + transfer data  Intel EtherExpress 16</p>
    <p>ProtocolReceive  SMS EtherPower II</p>
    <p>3com Fast Etherlink XL</p>
    <p>Intel EtherExpress PRO</p>
    <p>ProtocolReceivePacket  Digital DE435</p>
  </div>
  <div class="page">
    <p>Our NDIS Receive Handler</p>
    <p>Link-layer module hides complexity  Pass up our own IPv6_PACKET structure</p>
    <p>Supports both receive handlers  IPv4 code only supported ProtocolReceive</p>
    <p>Does transfer-data internally if needed  May introduce a copy relative to IPv4</p>
  </div>
  <div class="page">
    <p>Adding Link-Layer Headers</p>
    <p>Must construct link-layer header before handing packet to NDIS</p>
    <p>NT 4.0 IPv4 code chains a buffer in the link-layer module  Adds complexity  Reduces performance</p>
    <p>Allocate space up front  But how much space?  NDIS does not support a packet offset</p>
  </div>
  <div class="page">
    <p>Our Solution</p>
    <p>Leave room for worse-case link-level header</p>
    <p>Rewrite NDIS packet to hide unused space  Must undo this after the send completes</p>
    <p>Communicate offset value in the context area</p>
    <p>What if the unused space spans two pages?</p>
  </div>
  <div class="page">
    <p>Source Code Access</p>
    <p>Source for Windows NT 4.0 TCP/IP  Sample code, UDP/TCP, TDI glue</p>
    <p>Replaced all link-layer, IP, ICMP, MLD code</p>
    <p>DDK sample code</p>
    <p>Source for other Windows NT components  Not essential</p>
    <p>Useful for debugging &amp; documentation</p>
    <p>Our only modification was a fix in msafd.dll</p>
  </div>
  <div class="page">
    <p>Performance</p>
    <p>Expected 1.4% slower, saw 2.5% / 1.9%</p>
    <p>300Mhz P-II -&gt; 266Mhz, SMC Etherpower II</p>
    <p>IPv4</p>
    <p>IPv6</p>
    <p>TCP Throughput in KB/s</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Windows NT is a good base</p>
    <p>for network protocol development</p>
    <p>Our release is great sample code:</p>
    <p>http://research.microsoft.com/msripv6</p>
    <p>Testing, research, educational uses</p>
  </div>
</Presentation>
