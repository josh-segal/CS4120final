<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Willow: A User-Programmable SSD</p>
    <p>Sudharsan Seshadri, Mark Gahagan, Sundaram Bhaskaran, Trevor Bunker,</p>
    <p>Arup De, Yanqin Jin, Yang Liu, and Steven Swanson</p>
    <p>Non-VolaDle Systems Laboratory Computer Science and Engineering University of California, San Diego</p>
  </div>
  <div class="page">
    <p>Ba nd</p>
    <p>w id th R el a;</p>
    <p>ve t o di sk</p>
    <p>Hard Drives (2006)</p>
    <p>PCIe-Flash (2007)</p>
    <p>PCIe-PCM (2010)</p>
    <p>PCIe-Flash (2012)</p>
    <p>PCIe-PCM (2015?)</p>
  </div>
  <div class="page">
    <p>Case Study: Programmable GPUs</p>
    <p>Hidden Programmability (Firmware)</p>
    <p>ParDal Programmability (Shaders)</p>
  </div>
  <div class="page">
    <p>Modern SSDs Hide Their Programmability</p>
    <p>Host</p>
    <p>SSD</p>
    <p>Read() Write()</p>
    <p>SATA/NVMe Block Driver</p>
    <p>CPU</p>
    <p>SATA/NVMe</p>
    <p>NV Memory</p>
    <p>CPU CPU CPU</p>
    <p>Fixed interface  SATA or NVMe  Storage-centric operaDons</p>
    <p>Flexible hardware  MulD-core processors  Complex firmware</p>
  </div>
  <div class="page">
    <p>Candidates for Near-Storage Compute</p>
    <p>Data-intensive computaDon  Database scans  Transcoding  AnalyDcs</p>
    <p>Data-dependent accesses  e.g. pointer chasing</p>
    <p>SemanDc extension  e.g. transacDons</p>
    <p>Privileged execuDon  e.g. OS offload</p>
    <p>Feasible on modern SSD processors</p>
    <p>Modern SSD processors are inadequate</p>
  </div>
  <div class="page">
    <p>OS Offload</p>
    <p>Novel IO Abstractions</p>
    <p>Query Processing</p>
    <p>Specialized SSDs</p>
    <p>Caching</p>
    <p>Key Value Store</p>
    <p>Transaction Support</p>
    <p>Virtualization</p>
    <p>OS Bypass</p>
    <p>[Kang13]</p>
    <p>[Prabhakaran08]</p>
    <p>[Do13] [Kang13]</p>
    <p>[Saxena12]</p>
    <p>[Zhang12]</p>
    <p>[Huang12] [Balakrishnan12]</p>
    <p>[Josephson10]</p>
    <p>[Caulfield12]</p>
    <p>[Coburn13]</p>
    <p>[Caulfield12] [Bhaskaran13]</p>
    <p>[Wang14] [De13]</p>
  </div>
  <div class="page">
    <p>A Programmable SSD Should</p>
    <p>Provide a flexible interface  New arguments, semanDcs, and operaDons  Programmable in C (or something beher)</p>
    <p>Enforce file system permissions  Allow execuDon of untrusted code  Allow mulDple specialized funcDons to coexist  Allow for reuse and sharing of funcDons between applicaDons  Allow applicaDons to invoke operaDons without a system call.  Be able to run trusted code</p>
    <p>The OS can delegate operaDons to Willow  Untrusted applicaDons can to invoke them.</p>
  </div>
  <div class="page">
    <p>Willow System Overview</p>
    <p>WillowHost</p>
    <p>Bridge</p>
    <p>Application</p>
    <p>PCIePCIe Ctrl</p>
    <p>~2 GB/s</p>
    <p>Emulated PCM</p>
    <p>Interconnect</p>
    <p>SPU</p>
    <p>Emulated PCM</p>
    <p>Interconnect</p>
    <p>SPU</p>
    <p>Emulated PCM</p>
    <p>Interconnect</p>
    <p>SPU</p>
    <p>Kernel</p>
    <p>Trusted Firmware</p>
    <p>Trusted Firmware</p>
    <p>Trusted Firmware</p>
    <p>Willow Driver</p>
    <p>Custom Code</p>
    <p>Custom Code</p>
    <p>Custom Code</p>
    <p>Custom Code</p>
  </div>
  <div class="page">
    <p>The Willow Processor Complex</p>
    <p>125 MHz MIPS processor</p>
    <p>32 KB of D- and I-mem  A bank of NVM  Network interface  High-bandwidth Data Streamer</p>
    <p>SPU</p>
    <p>M IP</p>
    <p>S P</p>
    <p>ipeline Streamer Interface</p>
    <p>S tream</p>
    <p>er</p>
    <p>Emulated PCM</p>
    <p>Interconnect</p>
  </div>
  <div class="page">
    <p>Willow Usage Model and SSD Apps</p>
    <p>The programmer creates an SSD App</p>
    <p>The kernel installs SSDApps for applicaDons  The Willow-resident code  A userspace library  A kernel module, if needed</p>
    <p>CommunicaDon via RPCs  Host and SSD code can send</p>
    <p>and receive RPCs</p>
    <p>Process</p>
    <p>Kernel</p>
    <p>Interconnect</p>
    <p>NVM</p>
    <p>Willow CPU</p>
    <p>S tream</p>
    <p>er</p>
    <p>Interconnect</p>
    <p>NVM</p>
    <p>Willow CPU</p>
    <p>S tream</p>
    <p>erSSDAppSSDApp</p>
    <p>SSDApp Library</p>
    <p>App Module</p>
  </div>
  <div class="page">
    <p>NVM NVM</p>
    <p>Process Process</p>
    <p>Kernel</p>
    <p>Interconnect</p>
    <p>S tream</p>
    <p>er</p>
    <p>Interconnect</p>
    <p>S tream</p>
    <p>er</p>
    <p>Willow CPU</p>
    <p>Willow CPU</p>
    <p>Trust and Protection</p>
    <p>A file system sets protecDon policy</p>
    <p>RPCs carry an unforgeable ProcessID</p>
    <p>ExecuDon at SPUs is always on behalf of a ProcessID</p>
    <p>The Willow driver installs access rights</p>
    <p>Willow firmware checks permissions on access</p>
    <p>&lt;Green, 0x100, 0xF00, RDONLY&gt;</p>
  </div>
  <div class="page">
    <p>Willow Case Studies</p>
    <p>Basic IO  Direct IO  Caching  TransacDon processing  Key-Value Store  File Append w/o the file system</p>
    <p>Standard Equipment</p>
  </div>
  <div class="page">
    <p>TransacDon AcceleraDon with MARS</p>
    <p>[SOSP13]</p>
  </div>
  <div class="page">
    <p>Willow</p>
    <p>B C</p>
    <p>Editable Atomic Writes in Willow</p>
    <p>LogWrite(bufA,addrA,lenA,logAddrA); LogWrite(bufB,addrB,lenB,logAddrB); LogWrite(bufC,addrC,lenC,logAddrC); Commit();</p>
    <p>Host Memory</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>Metadata File</p>
    <p>Log File</p>
    <p>Data File</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>A</p>
  </div>
  <div class="page">
    <p>Performance Benefits On TPCB</p>
    <p>Tr an</p>
    <p>sa c; on</p>
    <p>s Pe</p>
    <p>r Se co nd</p>
    <p>Thread Count</p>
    <p>ARIES-DirectIO</p>
    <p>MARS</p>
    <p>MARS-Willow</p>
  </div>
  <div class="page">
    <p>Observations and Limitations</p>
    <p>SSD App development is relaDvely easy  Composability of SSD Apps is very valuable  Striping data across SPUs increases complexity for some SSD Apps</p>
    <p>Limited instrucDon and data storage at SPUs is a persistent challenge</p>
  </div>
  <div class="page">
    <p>The time is ripe for programmable storage</p>
    <p>Fast NVMs increase storage flexibility and performance demands</p>
    <p>ExisDng SSDs are already sopware defined  Numerous applicaDons already exist  Willow provides a clean, flexible interface  Smooth integraDon with exisDng sopware  Powerful enough for complex applicaDons  Preserves file system protecDons</p>
    <p>Programmable storage can simplify and accelerate applicaDons</p>
  </div>
  <div class="page">
    <p>Thanks!</p>
  </div>
</Presentation>
