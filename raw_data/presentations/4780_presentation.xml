<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Learning Based Web Query Processing</p>
    <p>Yanlei Diao Computer Science Department</p>
    <p>Hong Kong U. of Science &amp; Technology</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background  Learning Based Web Query Processing  FACT: A Prototype System  Preliminary System Evaluation  Conclusions  Demonstration</p>
  </div>
  <div class="page">
    <p>Searching the Web</p>
    <p>Want to find a piece of information on the Web?</p>
    <p>Huge Size Heterogeneity</p>
    <p>Lack of Structure</p>
    <p>Diversified User Bases</p>
    <p>EverChanging</p>
  </div>
  <div class="page">
    <p>Search Engines</p>
    <p>Maintain indices, keyword input, match input keywords with indices, return relevant documents.</p>
    <p>Problems  Large hit lists with low precision. Users find</p>
    <p>relevant documents by browsing.  URLs but not the required information are</p>
    <p>returned. Users read the pages for the required information.</p>
  </div>
  <div class="page">
    <p>Web Information Retrieval</p>
    <p>IR: Vector-space model, search and browse capabilities</p>
    <p>Web IR: Web navigation, indexing, query languages, query-document matching, output ranking, user relevance feedback</p>
    <p>Recent Improvement: Hierarchical classification, better presentation of results, hypertext study,</p>
    <p>metasearching...</p>
  </div>
  <div class="page">
    <p>Web IR for Query Processing</p>
    <p>Problems  A list of URLs or documents is returned. Users</p>
    <p>browse a lot to find information.  It asks users for precise query requirements,</p>
    <p>which is hard for casual users.  It lacks a well-defined underlying model. Vector</p>
    <p>space model does not convey as much as Hypertext.</p>
    <p>Large hit lists with low precision, rely on input queries</p>
  </div>
  <div class="page">
    <p>Intelligent Agents</p>
    <p>The agents learn user profiles/models from their search behaviors and employ the knowledge to predict URLs of interest to the user.</p>
    <p>Some rely on search engines and heuristics to find targets of a specific type: e.g. papers or homepages</p>
    <p>Some help users in an interactive mode: They learn while users are browsing.</p>
    <p>Some adaptive agents work autonomously: They use heuristics, recommend pages of interest and take user feedback to improve.</p>
  </div>
  <div class="page">
    <p>Agents for Query Processing</p>
    <p>Problems  Recommending pages of interest, but not</p>
    <p>information of interest to the user  Using vector-space model or converting HTML to</p>
    <p>text documents  Requiring a prior knowledge, such as user</p>
    <p>profiles, or using heuristics for a particular domain</p>
    <p>Not well suited for ad hoc queries</p>
  </div>
  <div class="page">
    <p>Database Approaches</p>
    <p>The Web is a directed graph: nodes are Web pages and edges are hyperlinks between pages.</p>
    <p>Query languages: 1st generation combines content-based and structure-based queries. 2nd generation accesses structure of Web objects and creates complex objects.</p>
    <p>Wrappers and mediators: they present an integrated view of the resources.</p>
  </div>
  <div class="page">
    <p>DB Approaches for Query Processing</p>
    <p>Problems  Wrapper generation is only feasible for a number</p>
    <p>of sites in a domain. The Web is growing very fast!</p>
    <p>Web query languages require knowledge of the Web sites (content and linkage) and the language syntax. They are hard to use.</p>
    <p>Not scalable, good for Web site management but not queries on the entire Web.</p>
  </div>
  <div class="page">
    <p>Our Goal</p>
    <p>A Web query processing system for any Web users that  processes ad hoc queries on HTML pages  automatically extracts succinct and precise query</p>
    <p>results ( a result may take the form of a table, a list or a paragraph).</p>
    <p>Learn the knowledge for query processing from the User!</p>
  </div>
  <div class="page">
    <p>Proposed Approach</p>
    <p>An approach with learning capabilities:  Keyword input (probably not precise)  Search engines return a URL list  During browsing, learns from users</p>
    <p>to navigate through the web pages  to identify the required information on a web page</p>
    <p>Processes the rest URLs automatically  Returns succinct and precise results</p>
  </div>
  <div class="page">
    <p>Unique Features</p>
    <p>Returning succinct and precise results, i.e. segments of pages;</p>
    <p>No a prior knowledge or preprocessing, suited for ad hoc queries;</p>
    <p>exploiting page formatting and linkage information simultaneously, good use of rich information conveyed by HTML.</p>
  </div>
  <div class="page">
    <p>Benefits from Learning</p>
    <p>Bridging the gap between keyword input and real query requirements</p>
    <p>Capable of navigating in the neighborhoods of documents returned by search engines</p>
    <p>Automating the processing of all possibly relevant documents in one query</p>
    <p>Almost imperceptible to users, user-friendly</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background  Learning Based Web Query Processing  FACT: A Prototype System  Preliminary System Evaluation  Conclusions  Demonstration</p>
  </div>
  <div class="page">
    <p>Modeling a Web Page</p>
    <p>Segment: a group of tag delimited elements, unit in query processing, e.g. paragraph, table, list, nested (atomic segments to the document), Segment Tree</p>
    <p>Attributes of a segment  content: text in the scope of the segment  description: summary of the content</p>
    <p>Hyperlink: represented as segments to be comparable  content: URL  description: anchor text  associated with the parent segment</p>
  </div>
  <div class="page">
    <p>A Sample</p>
    <p>&lt;html&gt;&lt;head&gt; &lt;title&gt;  Hotel &lt;/title&gt;&lt;/head&gt; &lt;body&gt;&lt;p&gt;1999 Room Rates&lt;/p&gt; &lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;ul&gt; &lt;li&gt;&lt;a href=&quot;ac01a.html&quot;&gt; Guest Room&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;ac02a.html&quot;&gt; Executive Suite&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt; &lt;td&gt; Special Promotion &lt;br&gt; &lt;table&gt;&lt;tr&gt;&lt;td&gt;Room Type&lt;/td&gt; &lt;td&gt;Single/Double (HK$)&lt;/td&gt; &lt;tr&gt;&lt;td&gt;Standard&lt;/td&gt; &lt;td&gt;1000&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Excutive Suite&lt;/td&gt; &lt;td&gt;2750&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; &lt;/body&gt;&lt;/html&gt;</p>
    <p>&quot;Room Type Single /Double (HK$) Standard 1000 Executive Suite 2750&quot;</p>
    <p>&quot;Special Promotion &quot; &amp; the content of the child table</p>
    <p>&amp; contents of child paragraph and table</p>
    <p>&quot;1999 Room Rates&quot;</p>
    <p>Document</p>
    <p>Paragraph</p>
    <p>Content</p>
    <p>Content</p>
    <p>Table</p>
    <p>Table</p>
    <p>List</p>
    <p>Link</p>
    <p>Content</p>
    <p>Content</p>
    <p>Content</p>
  </div>
  <div class="page">
    <p>Modeling a Web Site</p>
    <p>Ignore backward links, links pointing to themselves, links outside a site.</p>
    <p>A Web site is modeled as hyperlink-connected segment trees, called</p>
    <p>Segment Graph.</p>
    <p>Definition: Sijk: Segment Lm:Hyperlink</p>
    <p>S1</p>
    <p>S11 S12 S13</p>
    <p>S131</p>
    <p>S2S21 S3</p>
    <p>S31 S32</p>
    <p>S4 S41</p>
    <p>L1 L2</p>
    <p>L3</p>
    <p>L4</p>
  </div>
  <div class="page">
    <p>Knowledge for the Locating Task</p>
    <p>well enough or conclusion of irrelevancy can be drawn.</p>
    <p>A decision of following a link or choosing a segment should be made on each page.</p>
    <p>Segments and links on a page should be comparable!</p>
    <p>The locating task is to find a segment in the Segment Graph of a site as the query result.</p>
  </div>
  <div class="page">
    <p>Two Types of Knowledge</p>
    <p>A link conveys description of the pointed page while a queried segment contains both description and the result itself.</p>
    <p>Segments and links on a page are not comparable by content!</p>
    <p>Two types of knowledge are needed!  One only concerns descriptive information and helps find</p>
    <p>the navigational path.  The other checks if a segment meets query requirements</p>
    <p>on both descriptive information and the result.</p>
  </div>
  <div class="page">
    <p>Navigation Knowledge</p>
    <p>concerns descriptive information and helps find the navigational path</p>
    <p>a set of (term, weight) pairs  Term: a selected word f the description of</p>
    <p>segments and links on the navigational path  Weight: indicating the importance of the term in</p>
    <p>leading to the queried segment</p>
  </div>
  <div class="page">
    <p>Learning Navigation Knowledge</p>
    <p>Navigational path, (link)*segment, e.g. L2L4S41. Extended navigational path, ((segment )*link)* ((segment )*</p>
    <p>segment), e.g. (S1S11L2)  (S3S31L4)  (S4S41).</p>
    <p>Step1. Assign a weight to each component on the path, e.g. L2, S31, S41. The closer to the target, the higher the weight.</p>
    <p>Step2. Assign a weight to each term in the description of a component on the path.</p>
    <p>The weight of a term can be summed up over navigational paths. The set of (term, weight) pairs is stored into the navigation knowledge base.</p>
  </div>
  <div class="page">
    <p>Classification knowledge</p>
    <p>Checks if a segment meets query requirements on both descriptive information and the result.</p>
    <p>Cast in the Bayesian learning framework.</p>
    <p>Set of triples: (feature, NP, NN)  Feature: word, integer, real, symbol, , date, time, email</p>
    <p>address, , contained in a segment  NP: #occurrences of the feature in positive samples  NN: #occurrences of the feature in negative samples</p>
  </div>
  <div class="page">
    <p>Learning Classification knowledge</p>
    <p>Count NP and NN accumulatively for each feature over all samples. Store all triples (feature, NP, NN) into the classification knowledge base.</p>
    <p>The queried segment is a positive sample. All other segments on the same page are negative samples.</p>
    <p>The content of each segment is parsed into a set of features, either simple and complex types.</p>
  </div>
  <div class="page">
    <p>Query Processing Using Learned Knowledge</p>
    <p>After a Web page is retrieved, the segment graph is built  For each segment and link, a score is computed by applying</p>
    <p>the navigation knowledge (ApplyNavigation).  Segments/links are sorted on the score</p>
    <p>If a link has the highest score, the system navigates through the link</p>
    <p>If a segment has the highest score, all segments on the page are checked to see if there is a queried segment</p>
    <p>The process is repeated until either a segment is found or conclusion can be made that the site does not contain queried information.</p>
  </div>
  <div class="page">
    <p>Locating Algorithm</p>
    <p>On each page, if the result is not found:</p>
    <p>choosing an unprocessed component with highest score: if a link is chosen  if a segment is chosen Definition:</p>
    <p>Sijk: Segment Lm:Hyperlink</p>
    <p>S1</p>
    <p>S11 S12 S13</p>
    <p>S131</p>
    <p>S2S21 S3</p>
    <p>S31 S32</p>
    <p>S4 S41</p>
    <p>L1 L2</p>
    <p>L3</p>
    <p>L4</p>
  </div>
  <div class="page">
    <p>Locating Algorithm</p>
    <p>On each page, if the result is not found:</p>
    <p>choosing an unprocessed component with highest score: if a link is chosen if a segment is chosen  (ApplyClassification)</p>
    <p>Definition: Sijk: Segment Lm:Hyperlink</p>
    <p>S1</p>
    <p>S11 S12 S13</p>
    <p>S131</p>
    <p>S2S21 S3</p>
    <p>S31 S32</p>
    <p>S4 S41</p>
    <p>L1 L2</p>
    <p>L3</p>
    <p>L4</p>
  </div>
  <div class="page">
    <p>Applying Learned Knowledge</p>
    <p>Application of Navigation Knowledge:  extracts terms in the description of a link/segment  reads the weights of the terms and assigns a score to the</p>
    <p>link/segment by a certain function (max currently)  sorts all links and segments by their scores</p>
    <p>Application of Classification Knowledge:  computes the confidence C to classify a segment as the</p>
    <p>queried result  chooses the segment on a page with the largest C. If the</p>
    <p>largest C is over a threshold, returns the segment</p>
  </div>
  <div class="page">
    <p>Hotel 2</p>
    <p>Hotel 1</p>
    <p>done</p>
    <p>forward</p>
    <p>User browses it!</p>
  </div>
  <div class="page">
    <p>User clicks here!</p>
  </div>
  <div class="page">
    <p>Room information</p>
    <p>User marks it!</p>
  </div>
  <div class="page">
    <p>Generating Navigation Knowledge</p>
    <p>The navigation path looks like:</p>
    <p>Hotel Reservation-&gt;single hk$ double hk$ standard room deluxe room +executive room</p>
    <p>By our weighting scheme, a weight is assigned to each term</p>
    <p>hotel reservation single double standard deluxe executive 0.25 0.25 0.2 0.2 0.2 0.2 0.2</p>
  </div>
  <div class="page">
    <p>Generating Classification Knowledge</p>
    <p>Training Samples</p>
    <p>Occurrences of each feature are counted</p>
    <p>Positive single hk$ double hk$ standard room 999.00 1,039.00 deluxe room 1,199.00 1,239.00</p>
    <p>+executive room 1,399.00 1,499.00</p>
    <p>Negative Holiday Inn Golden Mile</p>
    <p>In the heart of Tsim Sha Tsui - Kowloon, Holiday Inn Golden Mile is your number one choice for accommodation, dining, meetings and banquets.</p>
    <p>Ideally situated in the heart of ...</p>
    <p>accomodation banquet  deluxe double &amp;'$' executive &amp;float  single standard positive 0 0 1 1 2 1 6 1 1 negative 1 1 1 0 2 1 0 1 2</p>
  </div>
  <div class="page">
    <p>back</p>
    <p>Fact starts here!</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Applying Navigation Knowledge</p>
    <p>The page contains</p>
    <p>Navigation knowledge shows</p>
    <p>Links Main</p>
    <p>Features &amp; Services</p>
    <p>Dining and Banqueting</p>
    <p>Hotel Rates</p>
    <p>Reservation</p>
    <p>...</p>
    <p>Paragraph 57 - 73 Lockhart Road, Wanchai, Hong Kong, SAR, PRC</p>
    <p>Paragraph Located in the hub of Wanchai, the Wharney Hotel is within walking distance of the Hong Kong Arts Centre, Convention and Exhibition Centre, busy commercial complexes and shopping malls.</p>
    <p>... Paragraph TEL: (852) 2861-1000 FAX: (852) 2865-6023</p>
    <p>execut hong hotel  kong  rate servic reserve suit 0.2 0.285714 0.392857 0.285714 3 0.066667 0.25 0.230769</p>
  </div>
  <div class="page">
    <p>Fact chooses it!</p>
    <p>Current 0.0666667 0 3.0 0.25 0</p>
    <p>Navigation Knowledge</p>
    <p>assigns scores</p>
  </div>
  <div class="page">
    <p>Table: 0.586447</p>
    <p>Paragraph: 3.0</p>
    <p>Paragraph: 0.25</p>
    <p>List: 0.25</p>
    <p>Visited Current0.0666667 0 0.25 0</p>
    <p>Navigation Knowledge</p>
    <p>assigns scores</p>
  </div>
  <div class="page">
    <p>C=6.3e-008</p>
    <p>C=0.0001</p>
    <p>C=2.5e-007</p>
    <p>C=1.0 Apply</p>
    <p>Classification</p>
    <p>Knowledge to</p>
    <p>all Segments</p>
    <p>C=0.3569</p>
    <p>Classification Knowledge</p>
    <p>computes confidence</p>
  </div>
  <div class="page">
    <p>Fact finds it!</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background  Learning Based Web Query Processing  FACT: A Prototype System  Preliminary System Evaluation  Conclusions  Demonstration</p>
  </div>
  <div class="page">
    <p>A Query Processing System</p>
    <p>A learning based query processing system:  User Interface: accepts user queries, presents query results, a</p>
    <p>browser capable of capturing user actions  Query Analyzer: analyzes and transforms user queries  Session Controller: coordinates learning and locating  Learner: generates knowledge from captured user actions  Locator: applies knowledge and locates query results  Retriever &amp; Parser: retrieves pages and parses to trees  Knowledge Base: stores learned knowledge</p>
  </div>
  <div class="page">
    <p>Reference Architecture</p>
    <p>Session</p>
    <p>Controller</p>
    <p>Locator</p>
    <p>Search Engine</p>
    <p>Web</p>
    <p>User Interface</p>
    <p>Knowledge Base</p>
    <p>Learner</p>
    <p>Query Analyzer</p>
    <p>Retriever &amp; Parser</p>
    <p>User</p>
  </div>
  <div class="page">
    <p>A Query Session</p>
    <p>Session Controller</p>
    <p>Training Strategy</p>
    <p>Segment Graph</p>
    <p>Result Buffer</p>
    <p>Knowledge Base</p>
    <p>User Actions</p>
    <p>Query results Checking</p>
    <p>URLs</p>
    <p>Locating Process</p>
    <p>LocatorQuery Result Presenter</p>
    <p>Learning Process LearnerBrowser</p>
    <p>Scripts</p>
  </div>
  <div class="page">
    <p>Training Strategies</p>
    <p>Sequential  First n sites: user browses and system learns  Next N-n sites: system processes</p>
    <p>Random  Randomly choose n sites: user browses and system learns  the system processes the rest</p>
    <p>Interleaved  First n0 sites, user browses and system learns  Next n - n0 site, system makes decision. For incorrect ones,</p>
    <p>user browses and system re-learns  Next N-n sites: system processes</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background  Learning Based Web Query Processing  FACT: A Prototype System  Preliminary System Evaluation  Conclusions  Demonstration</p>
  </div>
  <div class="page">
    <p>System Evaluation  System Capabilities  Performance</p>
    <p>Effectiveness: precision, recall, correctness  Efficiency: in a site, how many pages the system visits to</p>
    <p>find a result or to recognize the irrelevancy  Training efficiency: how many training samples are needed</p>
    <p>Key Issues  Effectiveness of the knowledge  Effectiveness of training strategies</p>
    <p>Tests on A Range of Queries</p>
  </div>
  <div class="page">
    <p>A System Output Sample</p>
  </div>
  <div class="page">
    <p>System Capabilities</p>
    <p>The system returns segments of the Web pages</p>
    <p>The segments may not contain any input keyword but meet the requirement of room rates.  The system learned the query requirement from the user!</p>
    <p>Segments can be from pages whose URLs are not directly returned by Yahoo!.  The system learned how to follow the hyperlinks to the</p>
    <p>queried segment!</p>
  </div>
  <div class="page">
    <p>System Evaluation - Effectiveness</p>
    <p>Given a set of URLs in a query session, the system makes N decisions</p>
    <p>N =N1 + N2 + N3 + N4</p>
    <p>Precision = N1 / (N1+N3) , Recall = N1 / # sites that contain</p>
    <p>results, Correctness = (N1+N2) / N .</p>
    <p>Found Not Found Right N1 N2 Wrong N3 N4</p>
  </div>
  <div class="page">
    <p>System Evaluation - Efficiency</p>
    <p>How efficiently the system finds a queried segment in a site?</p>
    <p>Level of a Queried Segment = the length of the shortest path to find it</p>
    <p>Absolute Path length = # Visited pages,</p>
    <p>Relative Path Length = # Visited pages / Level of the Queried Segment .</p>
  </div>
  <div class="page">
    <p>Basic Performance</p>
    <p>URL Returned</p>
    <p>URL Selected</p>
    <p>URL Used</p>
    <p>URL for Training</p>
    <p>URL Processed</p>
    <p>Relevant URL</p>
    <p>Q11 424 100 69 9 60 29 Q12 69533 100 71 9 62 38</p>
    <p>Q11: Hong Kong Hotel Room Rate Q12: Hong Kong Hotel</p>
    <p>Precision Recall Correctness Q11 76.7 79.3 81.7 Q12 87.5 73.7 79.0</p>
    <p>Sequential training</p>
  </div>
  <div class="page">
    <p>Effectiveness of Knowledge</p>
    <p>Other two systems implemented for comparison  Classification Knowledge Only: treat links and</p>
    <p>segments the same by the Bayes classifier  Learning</p>
    <p>Locating</p>
    <p>Action positive negative click a link the link other links on the page mark a segment the segment other segments on the page</p>
    <p>Classify all segments and links If a link has the highest confidence, follow the link; If a segment has the highest confidence and passes</p>
    <p>the threshold, return it.</p>
  </div>
  <div class="page">
    <p>Effectiveness of Knowledge</p>
    <p>Navigation Knowledge Only: only checks the descriptive information of links and segments  Learning</p>
    <p>Locating</p>
    <p>Navigational path  Navigation Knowledge</p>
    <p>Assigns scores to all links and segments using navigation knowledge If a link has the highest score, follow the link; If a segment has the highest score, return it.</p>
  </div>
  <div class="page">
    <p>Effectiveness of Knowledge</p>
    <p>Correctness Precision Recall Correctness Precision Recall Both Types of Knowledge 81.70% 76.70% 79.30% 79.00% 87.50% 73.70% Bayesian Only 58.30% 51.20% 69.00% 38.70% 34.00% 42.10% Navigation Only 36.70% 28.80% 55.60% 29.00% 26.80% 39.50%</p>
    <p>Query 2Query 1Effectiveness of three systems</p>
    <p>Irrelevant Level=1 Level=2 Irrelevant Level=1 Level=2 31(60) 27(60) 2(60) 24(62) 12(62) 26(62)</p>
    <p>Both Types of Knowledge 83.80% 81.50% 50% 87.50% 91.70% 65.40% Bayesian Only 48.40% 70.40% 50% 33.30% 75% 26.90% Navigation Only 21.20% 60% 0% 12.50% 58.30% 30.80%</p>
    <p>Query 2Query 1 Correctness of three systems</p>
    <p>Only works for results on the first page</p>
    <p>Bad filtering capability! Navigation only checks description,</p>
    <p>nearly not workable</p>
    <p>Poor navigation capability!</p>
  </div>
  <div class="page">
    <p>Effects of Training Strategies</p>
    <p>Query 12 - Precision</p>
    <p>Training Size</p>
    <p>P re</p>
    <p>c is</p>
    <p>io n</p>
    <p>Sequential</p>
    <p>Random</p>
    <p>Interactive</p>
    <p>Query 12 - Recall</p>
    <p>R e c a ll</p>
    <p>Sequential</p>
    <p>Random</p>
    <p>Interactive</p>
    <p>Query 12 - Correctness</p>
    <p>C o rr</p>
    <p>e c tn</p>
    <p>e ss</p>
    <p>Sequential</p>
    <p>Random</p>
    <p>Interactive</p>
    <p>Query Q12 Training Size 3-10</p>
  </div>
  <div class="page">
    <p>Effects of Training Strategies</p>
    <p>Random training performs badly, low in recall  As the training size increases, interleaved training</p>
    <p>outperforms sequential training  Best accuracy reaches or exceeds 90% in all metrics</p>
    <p>when the interleaved training strategy is used  Enlarging the training size for</p>
    <p>random and sequential training is not effective</p>
    <p>Query 2 - Correctness (3-20)</p>
    <p>Training Size</p>
    <p>C o</p>
    <p>rr e c tn</p>
    <p>e s s</p>
    <p>Sequential</p>
    <p>Random</p>
  </div>
  <div class="page">
    <p>Improved Performance</p>
    <p>Q11 Q12 Correctness 0.93 0.9 Precision 0.92 0.92 Recall 0.88 0.94 Relative Path Length (Found)</p>
    <p>Absolute Path Length (Not Found)</p>
    <p>Interleaved training</p>
  </div>
  <div class="page">
    <p>A Range of Queries</p>
    <p>Hotel room rates: targets at prices, easy to identify  Admission requirements on graduate student: includes</p>
    <p>items such as degree, GPA, GRE, etc. that are not easy to specify in keywords but easy to show by marking</p>
    <p>Data Mining Researcher: concept, subjective, evidence including research interests, projects, professional activity, etc</p>
    <p>Query Requirement (QR) Keyword Query KQ1 Keyword Query KQ2 1: room rates of Hong Kong hotels 11: Hong Kong hotel room rate 12: &quot;Hong Kong hotel&quot; 2: admission requirements on graduate applicants</p>
  </div>
  <div class="page">
    <p>Results of A Range of Queries</p>
    <p>QR3 KQ11 KQ12 KQ21 KQ22 KQ3</p>
    <p>Correctness 0.93 0.9 0.84 0.91 0.83 Precision 0.92 0.92 0.85 0.88 0.64 Recall 0.88 0.94 0.94 0.91 0.67 Relative Path Length (Found) 1 1.21 1.08 1.1 1 Absolute Path Length (Not Found) 1.3 1.57 2.5 1.76 1.67</p>
    <p>QR2QR1</p>
    <p>Interleaved training</p>
    <p>More precise More precise</p>
  </div>
  <div class="page">
    <p>Performance for the Queries</p>
    <p>Effectiveness  first 4 queries: accuracy is 80% to above 90%  the last query: still capable of filtering out irrelevant sites</p>
    <p>Efficiency  relative path length to locate a queried segment is close to 1  absolute path length to conclude irrelevancy is no more than</p>
    <p>the keyword query is. The system learns query requirements</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background  Learning Based Web Query Processing  FACT: A Prototype System  Preliminary System Evaluation  Conclusions  Demonstration</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Proposed and implemented learning based Web query processing with the following features  Returning succinct results: segments of pages;  No a prior knowledge or preprocessing, suited for</p>
    <p>ad hoc queries;  exploiting page formatting and linkage</p>
    <p>information simultaneously.  The preliminary results are promising</p>
  </div>
  <div class="page">
    <p>Future Work</p>
    <p>Better segmentation for HTML documents  Better knowledge, key factor that affects system</p>
    <p>performance  other weighting schemes for navigation</p>
    <p>knowledge  other implementation of classification knowledge</p>
    <p>More system evaluation  Dynamic web pages</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background  Learning Based Web Query Processing  FACT: A Prototype System  Preliminary System Evaluation  Conclusions  Demonstration</p>
  </div>
  <div class="page">
    <p>Demonstration</p>
  </div>
</Presentation>
