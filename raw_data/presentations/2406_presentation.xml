<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Block-switched Networks: A New Paradigm for Wireless Transport</p>
    <p>Ming Li, Devesh Agrawal, Deepak Ganesan, and Arun Venkataramani</p>
    <p>University of Massachusetts Amherst</p>
  </div>
  <div class="page">
    <p>What You Buy vs. What You Get</p>
    <p>TCP performs poorly over wireless links</p>
    <p>Advertised capacity: 11Mbps</p>
  </div>
  <div class="page">
    <p>E2E Feedback</p>
    <p>E2E rate control is error-prone</p>
    <p>E2E retransmissions are wasteful</p>
    <p>E2E route disruptions cause unavailability</p>
    <p>Rate Control Rate</p>
    <p>Control</p>
    <p>DestSource Congestion? Link loss?</p>
    <p>Loss Rate</p>
    <p>RTT</p>
  </div>
  <div class="page">
    <p>E2E rate control is error-prone</p>
    <p>E2E retransmissions are wasteful</p>
    <p>E2E route disruptions cause unavailability</p>
    <p>Source Dest Redundant</p>
    <p>Transmissions</p>
    <p>E2E Retransmissions</p>
    <p>P</p>
  </div>
  <div class="page">
    <p>E2E rate control is error-prone</p>
    <p>E2E retransmissions are wasteful</p>
    <p>E2E route disruptions cause unavailability</p>
    <p>Route disruptions due to mobility</p>
  </div>
  <div class="page">
    <p>Channel access Link layer ARQ</p>
    <p>Listen Backoff RTS/CTS</p>
  </div>
  <div class="page">
    <p>Channel access Link layer ARQ</p>
    <p>Timeout Backoff Timeout Backoff</p>
  </div>
  <div class="page">
    <p>Transport</p>
    <p>Link</p>
    <p>Link-layer ARQs/backoffs hurt TCP rate control</p>
    <p>Highly Variable RTT</p>
    <p>Link ARQ Link ARQ Link ARQ</p>
    <p>Rate Control Rate</p>
    <p>Control</p>
  </div>
  <div class="page">
    <p>Hop: A Clean Slate Re-design</p>
    <p>End-To-End</p>
    <p>Packets</p>
    <p>Complexity</p>
    <p>Hop-by-Hop</p>
    <p>Blocks</p>
    <p>Minimalism</p>
  </div>
  <div class="page">
    <p>Hop Design</p>
    <p>Reliable Block Transfer</p>
    <p>ACK Withholding</p>
    <p>Micro-block Prioritization</p>
    <p>Virtual Retransmission</p>
    <p>Backpressure</p>
    <p>Per-hop Multi-hop</p>
  </div>
  <div class="page">
    <p>Reliable Per-Hop Block Transfer</p>
    <p>B-SYN Request for B-ACK</p>
    <p>B-ACK Packet bitmap</p>
    <p>Mechanisms</p>
    <p>Burst mode (TXOP)</p>
    <p>Block ACK based ARQ</p>
    <p>Benefits</p>
    <p>Amortizes control overhead</p>
    <p>CSMA TXOP</p>
  </div>
  <div class="page">
    <p>Hop Design</p>
    <p>Reliable Block Transfer</p>
    <p>ACK Withholding</p>
    <p>Micro-block Prioritization</p>
    <p>Virtual Retransmission</p>
    <p>Backpressure</p>
    <p>Per-hop Multi-hop</p>
  </div>
  <div class="page">
    <p>Mechanism Leverages in-network caching Re-transmits blocks only when unavailable in cache</p>
    <p>Benefits Fewer transmissions Low overhead Simple</p>
    <p>Virtual Retransmission (VTX)</p>
    <p>B-SYN B-ACK</p>
    <p>A B</p>
    <p>E</p>
    <p>C</p>
    <p>D</p>
    <p>DATA</p>
  </div>
  <div class="page">
    <p>Mechanism Leverages in-network caching Re-transmits blocks only when unavailable in cache</p>
    <p>Benefits Fewer transmissions Low overhead Simple</p>
    <p>Virtual Retransmission (VTX)</p>
    <p>A B</p>
    <p>E</p>
    <p>D</p>
    <p>B-SYNVTX B-ACK</p>
    <p>B-SYNVTX B-SYN with VTX flag set</p>
    <p>VTX Timer E2 E AC K</p>
    <p>BSY NVTX Timer</p>
  </div>
  <div class="page">
    <p>Hop Design</p>
    <p>Reliable Block Transfer</p>
    <p>ACK Withholding</p>
    <p>Micro-block Prioritization</p>
    <p>Virtual Retransmission</p>
    <p>Backpressure</p>
    <p>Per-hop Multi-hop</p>
  </div>
  <div class="page">
    <p>Mechanism Limits #outstanding_blocks per-flow at forwarder</p>
    <p>Backpressure</p>
    <p>A B C D E</p>
    <p>Source Dest</p>
    <p>Slow</p>
    <p>Limit of Outstanding Blocks=2</p>
    <p>B-SYN</p>
    <p>Withhold B-ACK</p>
    <p>B-SYN B-SYN</p>
  </div>
  <div class="page">
    <p>Mechanism Limits #outstanding blocks per-flow at forwarder</p>
    <p>Benefits Improves network utilization</p>
    <p>Backpressure</p>
    <p>A B C</p>
    <p>D E</p>
    <p>Source</p>
    <p>Dest</p>
    <p>F G</p>
    <p>Dest</p>
    <p>Aggregate goodput without backpressure: 6Mbps</p>
  </div>
  <div class="page">
    <p>Mechanism Limits #outstanding blocks per-flow at forwarder</p>
    <p>Benefits Improves network utilization</p>
    <p>Backpressure</p>
    <p>A B C</p>
    <p>D E</p>
    <p>Source</p>
    <p>Dest</p>
    <p>F G</p>
    <p>Dest</p>
    <p>Aggregate goodput with backpressure: 10Mbps</p>
    <p>Limit of Outstanding Blocks=1</p>
  </div>
  <div class="page">
    <p>Hop Design</p>
    <p>Reliable Block Transfer</p>
    <p>ACK Withholding</p>
    <p>Micro-block Prioritization</p>
    <p>Virtual Retransmission</p>
    <p>Backpressure</p>
    <p>Per-hop Multi-hop</p>
    <p>RTS/CTS is overly conservative and incurs high overhead.</p>
  </div>
  <div class="page">
    <p>Mechanism: Receiver withholds all but one B-ACK</p>
    <p>Benefit: Low overhead Less conservative Simple</p>
    <p>Ack Withholding</p>
    <p>A C B</p>
    <p>B-SYN B-ACK</p>
    <p>DATA</p>
    <p>B-SYN</p>
    <p>B-ACK DATA</p>
    <p>Withhold B-ACK</p>
  </div>
  <div class="page">
    <p>Hop Design</p>
    <p>Reliable Block Transfer</p>
    <p>ACK Withholding</p>
    <p>Micro-block Prioritization</p>
    <p>Virtual Retransmission</p>
    <p>Backpressure</p>
    <p>Per-hop Multi-hop</p>
  </div>
  <div class="page">
    <p>Micro-block Prioritization Mechanisms</p>
    <p>Sender piggybacks small blocks to B-SYN Receiver prioritizes small blocks B-ACK</p>
    <p>Benefits Low delay for small blocks</p>
    <p>SSH FTP</p>
    <p>B-SYN</p>
    <p>B-ACK DATA</p>
    <p>B-SYN 64B 1MB</p>
    <p>Sender SenderReceiver</p>
  </div>
  <div class="page">
    <p>Apple Mac Mini Dual Core 1.8GHz, 2GB RAM, Atheros 802.11 a/b/g card</p>
    <p>Testbed</p>
  </div>
  <div class="page">
    <p>Single-flow Single-hop Performance</p>
    <p>Hop achieves significant gains over TCP</p>
    <p>HopTcp</p>
  </div>
  <div class="page">
    <p>Single-flow Multi-hop Performance</p>
    <p>HopTcp</p>
    <p>Hop achieves significant gains over TCP</p>
  </div>
  <div class="page">
    <p>Graceful Degradation with Loss</p>
    <p>Emulated link layer losses at the receiver</p>
    <p>TCP drops to zero with moderate losses</p>
    <p>HopTcp</p>
  </div>
  <div class="page">
    <p>Scalability to High Load 30 concurrent flows</p>
    <p>Hop achieves massive gains over TCP and is much fairer</p>
    <p>Mean Goodput</p>
    <p>HopTcp</p>
    <p>Hop-by-hop TCP</p>
  </div>
  <div class="page">
    <p>Hop over WLAN</p>
    <p>Hop improves utilization over TCP+RTS/CTS</p>
    <p>AP</p>
    <p>Mean (kbps)</p>
    <p>Median (kbps)</p>
    <p>Hop 663 652</p>
    <p>TCP 587 244</p>
    <p>TCP+RTS/CTS 463 333</p>
  </div>
  <div class="page">
    <p>Low Delay for Small Transfers</p>
    <p>AP</p>
    <p>Transfer Size (KB)</p>
    <p>Hop lowers delay across all file sizes</p>
  </div>
  <div class="page">
    <p>Summary of Other Results</p>
    <p>Partitionable network TCP breaks down Hop significantly outperforms (TCP-based) DTN2.5</p>
    <p>Network and link layer dynamics Hop outperforms TCP under dynamic network conditions</p>
    <p>Hop under 802.11g Similar performance gains as in 802.11b</p>
    <p>Impact on VoIP Hop impacts concurrent VoIP slightly more than TCP, but achieves significantly higher goodput.</p>
  </div>
  <div class="page">
    <p>Related Work Fixing E2E rate-control</p>
    <p>Separating loss/congestion [Snoop, WTCP, Westwood+, ATCP, TCP[Snoop, WTCP, Westwood+, ATCP, TCP--ELFN]ELFN] Network-assisted rate control [ATP, NRED, IFRC, WCP][ATP, NRED, IFRC, WCP] Hop circumvents rate control</p>
    <p>Backpressure ATM, theoretical work [[TassiulasTassiulas,,]] Tree/chain sensor data aggregation [Fusion, Flush][Fusion, Flush] Reliable point-to-point transport [RAIN, CXCC, Horizon][RAIN, CXCC, Horizon] Hop reduces backpressure overhead using blocks</p>
    <p>Batching Common optimization at link [802.11e/802.11n, [802.11e/802.11n, WiLDNetWiLDNet, Kim08, , Kim08, CMAP]CMAP], transport [Delayed[Delayed--ACK, DTN2.5]ACK, DTN2.5], and network [[ExORExOR]] layers Hop leverages batching across layers</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Block switching &gt; packet switching Key abstraction: Reliable per-hop block transfer</p>
    <p>Hop Fast: Significant throughput, fairness, delay gains Robust: Degrades gracefully to challenged networks Simple: Minimizes complex cross-layer interaction</p>
    <p>Source code at</p>
    <p>http://hop.cs.umass.edu</p>
    <p>Can we have one transport protocol for diverse wireless networks? Yes, we can!</p>
  </div>
  <div class="page">
    <p>The End</p>
    <p>Questions?</p>
  </div>
  <div class="page">
    <p>Dynamic Network Conditions</p>
    <p>Hop continues to significantly outperform TCP under dynamic network conditions</p>
  </div>
</Presentation>
