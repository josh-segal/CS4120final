<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>NotaBot (NAB): Improving Service Availability in the Face of Botnet A=acks</p>
    <p>Ramakrishna (Ramki) Gummadi</p>
    <p>MIT</p>
    <p>Hari Balakrishnan (MIT), Petros Maniatis and Sylvia Ratnasamy (Intel Research)</p>
  </div>
  <div class="page">
    <p>NSDI 2009 2</p>
    <p>The problem: Service unavailability</p>
    <p>Misclassified email</p>
    <p>Bounced email</p>
  </div>
  <div class="page">
    <p>NSDI 2009 3</p>
    <p>Botnets: Reduce service availability</p>
    <p>Email: 85% of spam from top six botnets  Over 95% of all inboxes affected  120 billion messages/day: Overloaded mail servers</p>
    <p>DDoS: 4000 attacks/week [Moore et al.,06]</p>
    <p>Click-fraud: ad fraud, search engine fraud  ~ 15% of all ad clicks  Compromise search results</p>
    <p>QuesEon: General way to disEnguish bots from humans?</p>
  </div>
  <div class="page">
    <p>NSDI 2009 4</p>
    <p>ExisEng soluEons</p>
    <p>Drawback: Intrusive</p>
    <p>How to disEnguish humans from bots automaEcally?</p>
    <p>Drawback: Default yes [Whitten,Tygar 99]</p>
    <p>CAPTCHAs User Account Control</p>
  </div>
  <div class="page">
    <p>NSDI 2009 5</p>
    <p>Strawman: A=esEng human acEvity with Trusted PlaMorm Modules</p>
    <p>Keystrokes Attested Keystrokes</p>
  </div>
  <div class="page">
    <p>NSDI 2009 6</p>
    <p>Attested Keystrokes</p>
    <p>Problems with the strawman</p>
    <p>OS Browser</p>
    <p>Slow</p>
    <p>High-rate clicks</p>
  </div>
  <div class="page">
    <p>NSDI 2009 7</p>
    <p>AssumpEons and Requirements</p>
    <p>Assumptions  Untrusted OS  Verifiable TPM bootup  Correct implementation of cryptographic primitives</p>
    <p>Requirements  Automatic  Fast (handle interactive traffic)  Small TCB (Trusted Computing Base)  Preserve privacy and anonymity</p>
  </div>
  <div class="page">
    <p>NSDI 2009 8</p>
    <p>TPM Background</p>
    <p>Small, physically sealed chip  Internal private key for measuring and</p>
    <p>reporting system integrity</p>
    <p>Two relevant protocols  Direct anonymous attestation</p>
    <p>Group signatures using a key  Sealed storage</p>
    <p>Secure location to store until system integrity verified</p>
    <p>Kpriv</p>
    <p>Kpriv</p>
  </div>
  <div class="page">
    <p>NSDI 2009 9</p>
    <p>NAB (NotABot) Architecture</p>
    <p>A&quot;ester A=ested requests</p>
    <p>TPM</p>
    <p>OS Browser</p>
    <p>Network</p>
    <p>Verifier Web Server</p>
    <p>TCB</p>
    <p>Goal: Attest all human requests, reduce attested bot requests  No blacklisting: human requests from</p>
    <p>compromised hosts still receive service</p>
  </div>
  <div class="page">
    <p>NSDI 2009 10</p>
    <p>A=estaEon security properEes</p>
    <p>Non-transferable  Cannot generate at one host, use at another</p>
    <p>Bound to request content</p>
    <p>No way to send spam from bots using one gmail account</p>
    <p>Single-use (verifier detects dupes)  Limited valid time-window</p>
  </div>
  <div class="page">
    <p>NSDI 2009 11</p>
    <p>When to a=est?</p>
    <p>Simple, timing-based attestation  Requires human activity</p>
    <p>Allow attestation when request received within {k,m} of last keyboard, mouse click</p>
    <p>Attester provides attestation only if {k,m}&lt;{k,m} (= 1s for email)  Verifier checks {k,m} in attestation for validity</p>
    <p>Reduces click harvesting</p>
  </div>
  <div class="page">
    <p>NSDI 2009 12</p>
    <p>What to a=est?</p>
    <p>Challenger-specific  Cannot be retargeted</p>
    <p>Responder-specific  Cannot exploit manually configured whitelisting</p>
    <p>Content-specific  Cannot modify or piggyback on valid messages</p>
    <p>To: bob@b.org From: alice@a.org Hi Bob,</p>
  </div>
  <div class="page">
    <p>NSDI 2009 13</p>
    <p>What is in an a=estaEon?</p>
    <p>Signed SHA-1 hash of message  160-bit signed nonce</p>
    <p>Verifier stores nonces for application-defined period, checks duplicates</p>
    <p>Optional {k,m} values (omitted for privacy)  Certificate to verify Kpriv</p>
    <p>Kpriv{H(msg)} m, k} Siged Nonce</p>
    <p>Kpriv{ certified Kpub Attestation</p>
  </div>
  <div class="page">
    <p>NSDI 2009 14</p>
    <p>A=ester Interfaces</p>
    <p>A=ester</p>
    <p>A=estaEon</p>
    <p>kbd, mouse clicks User</p>
    <p>TPM</p>
    <p>Measure integrity, release cerEfied {Kpub,Kpriv} at boot</p>
    <p>req(h(msg), type, , , PID)  k  m</p>
    <p>OS App</p>
    <p>Type: Anonymous or non-anonymous PID: Delayed attestation release for a process</p>
  </div>
  <div class="page">
    <p>NSDI 2009 15</p>
    <p>A=ester OperaEon</p>
    <p>Installation: Set to use TPM register# 18: PCRExtend(18, Hash(Attester Code))</p>
    <p>Sealing private key Kpriv to host: S=Seal(18,Kpriv)</p>
    <p>Booting: Release Kpriv to attester: Kpriv =Unseal(S,(18,PCR18))</p>
    <p>Kpriv</p>
    <p>Recomputed attesters hash</p>
  </div>
  <div class="page">
    <p>NSDI 2009 16</p>
    <p>Verifier OperaEon</p>
    <p>Checks validity of Kpriv, attestation, nonce  Uses application-specific policies  Email:</p>
    <p>Below spam assassin threshold? yes</p>
    <p>Forward</p>
    <p>mail</p>
    <p>no</p>
    <p>A=ested? yes no</p>
    <p>Discard</p>
    <p>Forward</p>
    <p>Nonce valid?</p>
    <p>Discard</p>
    <p>yes no</p>
  </div>
  <div class="page">
    <p>NSDI 2009 17</p>
    <p>Email: Usage scenarios and incenEves</p>
    <p>Mailing lists  Verifier checks subscription to mailing list</p>
    <p>name in To: field</p>
    <p>Offline mode  Attestation requested when user hits send</p>
    <p>Sender incentive  Better email reliability</p>
    <p>Recipient incentive  Reduced mail server load, better reliability</p>
  </div>
  <div class="page">
    <p>NSDI 2009 18</p>
    <p>Request processing at verifier</p>
    <p>Requests</p>
    <p>Attested</p>
    <p>Unattested</p>
    <p>Overloaded email, web server</p>
    <p>PrioriEze a=ested requests</p>
  </div>
  <div class="page">
    <p>NSDI 2009 19</p>
    <p>DDoS, Clickfraud: Usage and incenEves</p>
    <p>Browser gets attestation when requesting document root (http://foo.com/)  Verifier stores attestation, accepts same attestation in</p>
    <p>future for all embedded links</p>
    <p>10 minutes expiry  Browser forced to use new attestation for next fetch</p>
    <p>Incentive: Attester distributed in search engine toolbars</p>
  </div>
  <div class="page">
    <p>NSDI 2009 20</p>
    <p>EvaluaEon</p>
    <p>Implemented attester with Xen VMM  Uses domain disaggregation [Murray et al.,08]  Attester within a paravirtualized Xen domain built with</p>
    <p>miniOS, isolated from untrusted OS</p>
    <p>Trace-driven verifier evaluation  Click traces of 328 users in one month [Giroire et al.,08]  Publicly available spam, DDoS and click-fraud traces  Worst-case scenario with adaptive bots</p>
  </div>
  <div class="page">
    <p>NSDI 2009 21</p>
    <p>A=ester evaluaEon</p>
    <p>CPU cost: At most 10 ms on 2 GHz CPU  RSA signatures, 1024-bit modulus</p>
    <p>Complexity metric: lines of code  Attester kernel module: 500 lines  miniOS: 30,000 lines</p>
    <p>Applications: NET::SMTP (Email), cURL (Web)  250 lines of code modified  Attestations as extended protocol objects</p>
  </div>
  <div class="page">
    <p>NSDI 2009 22</p>
    <p>Verifier evaluaEon</p>
    <p>Methodology: 328 click traces at 1s intervals  Adaptive bot: steals as many clicks as possible  Generates traffic using all stolen clicks  Compare against status quo (normal bot without NAB)</p>
    <p>within the same time</p>
    <p>328 data points, one for each users trace  Other metrics</p>
    <p>Nonce storage cost (&lt; 600 GB for one-month nonces with million clients)</p>
    <p>Throughput: 10,000 attestations/s</p>
  </div>
  <div class="page">
    <p>NSDI 2009 23</p>
    <p>Spam miEgaEon Default: 1.5% missed spam, 0.08% misclassified as spam</p>
    <p>NAB: 0.15% missed spam, 0% misclassified as spam</p>
    <p>NAB reduces inbox spam by 90%</p>
  </div>
  <div class="page">
    <p>NSDI 2009 24</p>
    <p>Email server overload miEgaEon</p>
    <p>NAB reduces email server overload by at least 92%</p>
    <p>No trace sees more than 8% prioritized spam</p>
  </div>
  <div class="page">
    <p>NSDI 2009 25</p>
    <p>DDoS miEgaEon</p>
    <p>NAB miEgates 89% of DDoS requests</p>
    <p>No trace sees more than 11% prioritized DDoS</p>
  </div>
  <div class="page">
    <p>NSDI 2009 26</p>
    <p>Clickfraud miEgaEon</p>
    <p>NAB reduces clickfraud by 87%</p>
    <p>No trace sees more than 13% click-fraud traffic</p>
  </div>
  <div class="page">
    <p>NSDI 2009 27</p>
    <p>Related work</p>
    <p>Human activity detection  CAPTCHAs [Ahn et al.,03]</p>
    <p>Susceptible to man-in-the-middle attack  Nexus [Williams et al.,08]</p>
    <p>Not for commodity OSes</p>
    <p>Mitigating spam, DDoS, click-fraud  Spam: Occam [Fleizach et al.,07], SPF, DKIM  DDoS: Path validation, bandwidth-as-payment  Click-fraud: Syndicators, clickable CAPTCHAs  Mostly specialized, share little commonality</p>
  </div>
  <div class="page">
    <p>NSDI 2009 28</p>
    <p>Conclusions  NAB: Improves service availability in the</p>
    <p>presence of botnets  Even on botted hosts, users get ~ 100% service</p>
    <p>No blacklisting  De-prioritize or drop up to 90% bot traffic</p>
    <p>Automatic content- and machine-specific attestations</p>
    <p>Single abstraction, support for applicationspecific verifier policies</p>
    <p>Future work: Attestation without virtualization</p>
  </div>
</Presentation>
