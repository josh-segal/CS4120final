<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Tight Bounds for Asynchronous Randomized Consensus</p>
    <p>Hagit Attiya &amp; Keren Censor Department of Computer Science</p>
    <p>Technion</p>
  </div>
  <div class="page">
    <p>November 2007 2</p>
    <p>Consensus</p>
    <p>Alice and Bob want to meet for dinner. They write and read notes on the bulletin board.</p>
    <p>Tonight at 20:00?Yes, tonight</p>
    <p>at 20:00.</p>
    <p>OK, tonight at 20:00.</p>
    <p>Alright then, tonight at 20:00.</p>
    <p>Deterministic asynchronous consensus is impossible [Fischer,Lynch &amp; Paterson 1985]</p>
  </div>
  <div class="page">
    <p>November 2007 3</p>
    <p>Consensus</p>
    <p>Each process pi has an input value xi{0,1} and should produce an output value yi{0,1}</p>
    <p>Agreement: all the outputs are equal for every yi,yj that are assigned, yi= yj</p>
    <p>Validity: the output is the input of some process for every yi that is assigned, yi= xj for some j</p>
    <p>Termination: every nonfaulty process eventually decides</p>
    <p>every nonfaulty process pi eventually assigns yi</p>
  </div>
  <div class="page">
    <p>November 2007 4</p>
    <p>Randomized Consensus</p>
    <p>Each process pi has an input value xi{0,1} and should produce an output value yi{0,1}</p>
    <p>Agreement: all the outputs are equal for every yi,yj that are assigned, yi= yj</p>
    <p>Validity: the output is the input of some process for every yi that is assigned, yi= xj for some j</p>
    <p>Termination: every nonfaulty process eventually decides</p>
    <p>every nonfaulty process pi eventually assigns yi</p>
    <p>with probability 1,</p>
    <p>The total step complexity is the expected total number of steps taken by all the processes</p>
  </div>
  <div class="page">
    <p>November 2007 5</p>
    <p>Shared Memory Multiprocessor</p>
    <p>n asynchronous processes p1 pnp2 p3</p>
    <p>Multi-writer multi-reader shared registers</p>
    <p>write read</p>
    <p>At most f crash failures (at some point the process stops taking steps) Cannot tell whether a process has failed or is just slow</p>
    <p>The ordering of steps is determined by a strong adversary Makes the scheduling decision after observing the local coin-flips</p>
  </div>
  <div class="page">
    <p>November 2007 6</p>
    <p>Bounds on the Total Step Complexity</p>
    <p>O(exp(n)) [Abrahamson 1988] O(n4) [Aspnes &amp; Herlihy 1990, Aspnes 1993] O(n3) [Saks, Shavit &amp; Woll 1991] O(n2logn) [Bracha &amp; Rachman 1991] O(n2) (n2) (n2) (n2/log2n) [Aspnes 1998]</p>
  </div>
  <div class="page">
    <p>November 2007 7</p>
    <p>Upper Bound: Shared Coin</p>
    <p>Shared coin with agreement parameter : for v{0,1}, the probability that all processes return v is at least  Randomized consesnsus with step complexity -1T where T is the step comptexity of the shared coin</p>
    <p>[Aspnes &amp; Herlihy 1990]</p>
    <p>Nave shared coin: every process flips its own coin, agreement parameter is 1/2n [Abrahamson 1988]</p>
    <p>We present a shared coin with constant agreement parameter and O(n2) total step complexity</p>
  </div>
  <div class="page">
    <p>November 2007 8</p>
    <p>Shared Coin: Flipping Many Coins</p>
    <p>A</p>
    <p>p1 p2 pn</p>
    <p>Stop flipping coins when there are enough</p>
  </div>
  <div class="page">
    <p>November 2007 9</p>
    <p>Collect to check how many coins were flipped</p>
    <p>Shared Coin: How Many Coins?</p>
    <p>A</p>
    <p>p1 p2 pn</p>
  </div>
  <div class="page">
    <p>November 2007 10</p>
    <p>Shared Coin: Balancing Act</p>
    <p>A</p>
    <p>p1 p2 pn</p>
    <p>collect costs n steps</p>
    <p>perform fewer collects</p>
    <p>more coins written between collects</p>
    <p>perform more collects</p>
    <p>[Bracha &amp; Rachman 1991] Collect to check how many coins were flipped</p>
  </div>
  <div class="page">
    <p>November 2007 11</p>
    <p>Shared Coin: Raising the Flag</p>
    <p>A</p>
    <p>p1 p2 pn</p>
    <p>done</p>
    <p>not done</p>
    <p>checking done costs 1 step!</p>
  </div>
  <div class="page">
    <p>November 2007 12</p>
    <p>Shared Coin Algorithm</p>
    <p>while not done do A[i] = {count++, sum+random(-1,+1)} every n coin flips</p>
    <p>collect A if &gt; n2 coins were flipped</p>
    <p>then done = true collect A return the majority value of the coin flips</p>
  </div>
  <div class="page">
    <p>November 2007 13</p>
    <p>Total Step Complexity</p>
    <p>n2 coins are written to A</p>
    <p>true is written to done</p>
    <p>pi performs final collect</p>
    <p>n2 coins  n-1 extra coins</p>
    <p>Writing O(n2) coins, and reading done O(n2) operations, Every n coins a process performs a collect (n read operations) O(n2) operations</p>
    <p>done</p>
  </div>
  <div class="page">
    <p>November 2007 14</p>
    <p>Agreement Parameter: Overview</p>
    <p>n2 coins are written to A</p>
    <p>true is written to done</p>
    <p>pi performs final collect</p>
    <p>sum  3n with constant prob.</p>
    <p>sum  -2n with constant prob.</p>
    <p>n2 coins  n-1 extra coins</p>
    <p>done</p>
    <p>The stopping time is under the control of the adversary. Partial sums of a stochastic process (Kolmogorov ineq.)</p>
    <p>Central limit theorem</p>
    <p>Pr 1 ( )nsum x N x</p>
  </div>
  <div class="page">
    <p>November 2007 15</p>
    <p>Agreement Parameter: Summing Up</p>
    <p>n2 coins are written to A</p>
    <p>true is written to done</p>
    <p>pi performs final collect</p>
    <p>sum  3n with constant prob.</p>
    <p>sum  -2n with constant prob.</p>
    <p>sum  n with constant prob.</p>
    <p>extra coins cannot make sum negative</p>
    <p>n2 coins  n-1 extra coins</p>
    <p>every output is 1 with constant prob. (same for -1)</p>
    <p>done</p>
  </div>
  <div class="page">
    <p>November 2007 16</p>
    <p>Partial Sums of Random Variables</p>
    <p>A sequence of independent random variables X1, X2, , Xm with E[Xi]=0 and Var[Xi]=1</p>
    <p>Yields a sequence of partial sums Sj = X1++Xj E[Sj] = E[X1++Xj] = E[X1]++E[Xj] = 0 Var[Sj] = Var[X1++Xj] = Var[X1]++Var[Xj] = j</p>
    <p>[ ]21 1</p>
    <p>Pr max | |j mj m S Var S</p>
    <p>Kolmogorovs Inequality:</p>
    <p>n     =</p>
    <p>Sj  -2n for every 1jn2 , with prob. 3/4</p>
  </div>
  <div class="page">
    <p>November 2007 17</p>
    <p>So</p>
    <p>The total step complexity of randomized consensus can be improved.</p>
    <p>but only so much</p>
  </div>
  <div class="page">
    <p>November 2007 18</p>
    <p>Lower Bounds: A Brief History</p>
    <p>History repeats itself. Historians repeat each other</p>
    <p>(n2/log2n) coin flips (asynchronous sm) [Aspnes 1998]</p>
    <p>((n/logn)) rounds (synchronous mp) [Bar-Joseph &amp; Ben-Or 1998]</p>
    <p>(n(n/logn)) total step complexity (asynchronous mp/sm)</p>
    <p>Worse than previous bound</p>
    <p>computer scientists</p>
  </div>
  <div class="page">
    <p>November 2007 19</p>
    <p>FLP: Valency</p>
    <p>and deciding 1</p>
    <p>bivalent 0-valent</p>
    <p>initially deciding</p>
  </div>
  <div class="page">
    <p>November 2007 20</p>
    <p>Valency w/ Randomization</p>
    <p>and high probability for deciding 1 null-valent: not high probability for deciding 0</p>
    <p>and not high probability for deciding 1</p>
    <p>bivalent 0-valent</p>
    <p>nullvalent</p>
    <p>initially deciding[Aspnes 1998]</p>
  </div>
  <div class="page">
    <p>November 2007 21</p>
    <p>[Bar-Joseph &amp; Ben-Or 1998] Executions proceed in rounds</p>
    <p>May need to hide O(lognn) processes in a round cannot go for more than ((n/logn)) rounds</p>
    <p>An asynchronous process can be delayed without failing Synchronous model w/ mobile failures</p>
    <p>asynchronous model [Santoro, Widmayer 1989]</p>
    <p>no step of P</p>
    <p>The Synchronous Lower Bound</p>
    <p>null-valent</p>
    <p>w.h.p. null-valent bivalent</p>
    <p>w.h.p. bivalent</p>
    <p>w.h.p. bivalent</p>
    <p>n-f  n-f hiding P failing pi no step of pi</p>
  </div>
  <div class="page">
    <p>November 2007 22</p>
    <p>Our Asynchronous Lower Bound</p>
    <p>Executions proceed in layers (sequence of  n-f distinct processes) [Moses &amp; Rajsbaum 1998]</p>
    <p>An asynchronous process can be hidden, by delaying, without failing</p>
    <p>f layers, each with at least n-f steps f(n-f) steps</p>
    <p>null-valent</p>
    <p>w.h.p. null-valent bivalent</p>
    <p>w.h.p. bivalent</p>
    <p>w.h.p. bivalent</p>
    <p>n-f  n-f hiding P failing pi no step of pimaybe P</p>
  </div>
  <div class="page">
    <p>November 2007 23</p>
    <p>Strong Adversary, In More Detail</p>
    <p>Two sources of non-determinism: coin-flips &amp; scheduling</p>
    <p>configuration C</p>
    <p>p1 p2 pn</p>
    <p>possibilities for next configuration</p>
  </div>
  <div class="page">
    <p>November 2007 24</p>
    <p>Valency, In More Detail 0-valent: high probability for deciding 0 1-valent: high probability for deciding 1 bivalent: high probability for deciding 0</p>
    <p>and high probability for deciding 1 null-valent: not high probability for deciding 0</p>
    <p>and not high probability for deciding 1</p>
    <p>bivalent 0-valent</p>
    <p>nullvalent</p>
    <p>initially</p>
    <p>Pr[decision from C under  is 0]max adv.</p>
    <p>Pr[decision from C under  is 1]max adv.</p>
    <p>bivalent</p>
    <p>null-valent</p>
    <p>( )3 1</p>
    <p>k k</p>
    <p>n n n f  =</p>
    <p>where k is the layer number</p>
    <p>deciding</p>
  </div>
  <div class="page">
    <p>November 2007 25</p>
    <p>Remaining Null-Valent</p>
    <p>Theorem: one outcome has high probability</p>
  </div>
  <div class="page">
    <p>November 2007 26</p>
    <p>One Outcome has High Probability The probability space</p>
    <p>W1 ={points where hiding t coordinates does not give outcome 1}</p>
    <p>W3</p>
    <p>W2 x</p>
    <p>x= x1   xn g(x)1</p>
    <p>xnx1xI= g(xI)1|I|t</p>
    <p>We want to prove that for some u, Pr[Wu]&lt;1/n3</p>
  </div>
  <div class="page">
    <p>November 2007 27</p>
    <p>One Outcome has High Probability The probability space</p>
    <p>W1</p>
    <p>W3</p>
    <p>W2 B(W1,t/3)</p>
    <p>B(W2,t/3) = {points that differ in at most t/3 coordinates from some point in W2}</p>
    <p>B(W3,t/3)</p>
    <p>Wu  adversary cannot reach outcome u.</p>
    <p>y</p>
    <p>Assume Pr[Wu]1/n3</p>
    <p>Isoperimetric inequality: if Pr[Wu]1/n3 then Pr[B(Wu,t/3)]1-1/n3</p>
    <p>x1</p>
    <p>x3</p>
    <p>x2 x1=</p>
    <p>x2=</p>
    <p>x3=</p>
    <p>y= yny1</p>
    <p>g(yI)=g(x1I)=g(x2I)=g(x3I)=?</p>
    <p>1 2 3</p>
    <p>yI=</p>
    <p>x1I=</p>
    <p>x2I=</p>
    <p>x3I=</p>
    <p>We want to prove that for some u, Pr[Wu]&lt;1/n3</p>
  </div>
  <div class="page">
    <p>November 2007 28</p>
    <p>One Outcome has High Probability</p>
    <p>W1</p>
    <p>W3</p>
    <p>W2 B(W1,t/3)</p>
    <p>B(W2,t/3)</p>
    <p>B(W3,t/3)</p>
    <p>Wu  adversary cannot reach outcome u. For some u, Pr[Wu]&lt;1/n3. The adversary can reach the outcome u with probability 1-1/n3. Must be the null-valent category.</p>
    <p>The probability space 1 2 ... nX X X X=</p>
  </div>
  <div class="page">
    <p>November 2007 29</p>
    <p>Remaining Null-Valent</p>
    <p>Product probability space = results of local coin-flips  stands for a process not taking a step in the layer</p>
    <p>some outcome can be forced (by hiding processes) w.h.p.</p>
    <p>Since we started from a null-valent configuration 1. not high probability of deciding 0</p>
    <p>cannot have high probability for reaching a 0-valent configuration 2. not high probability of deciding 1</p>
    <p>cannot have high probability for reaching a 1-valent configuration the null-valent category must be the one with high probability</p>
  </div>
  <div class="page">
    <p>November 2007 30</p>
    <p>Must Remain Null-Valent Null-valent configuration has probability for deciding 0 at most 1-k Assume 0-valent or bivalent configuration can be reached with probability 1-1/m3</p>
    <p>New configuration has probability for deciding 0 at least 1-k+1 Together, the probability for deciding 0 from the null-valent configuration is:</p>
    <p>( ) ( )</p>
    <p>( ) 13 33</p>
    <p>( )k k</p>
    <p>n f n nn f n f  +</p>
    <p>+    =   +</p>
    <p>( ) ( ) ( )3 3 6 1 1 1</p>
    <p>n n n f n f n n n f +</p>
    <p>=  + +</p>
    <p>( )3 1</p>
    <p>n n n f &gt;  + =</p>
    <p>Cannot have high probability for reaching a 0-valent or bivalent configuration</p>
  </div>
  <div class="page">
    <p>November 2007 31</p>
    <p>Big Picture: Bivalent Configurations</p>
    <p>bivalent 0-valent</p>
    <p>nullvalent</p>
    <p>initially deciding</p>
  </div>
  <div class="page">
    <p>November 2007 32</p>
    <p>high pro</p>
    <p>bab ility</p>
    <p>for d ecid</p>
    <p>ing 0 only pi</p>
    <p>distinguishes</p>
    <p>Bivalent Configurations: Connectivity</p>
    <p>bivalent</p>
    <p>for deciding 1</p>
    <p>only pj distinguishes</p>
    <p>fail pi must have same valence null-valent</p>
    <p>One layer</p>
  </div>
  <div class="page">
    <p>November 2007 33</p>
    <p>Connectivity in Shared Memory</p>
    <p>w R3</p>
    <p>w R1</p>
    <p>w R2</p>
    <p>w R4</p>
    <p>r R4</p>
    <p>r R1</p>
    <p>r R3</p>
    <p>r R4</p>
    <p>p1 p2 pn</p>
    <p>w R3</p>
    <p>w R1</p>
    <p>w R2</p>
    <p>w R4</p>
    <p>r R4</p>
    <p>r R1</p>
    <p>r R3</p>
    <p>p1 p2 pn</p>
    <p>p3</p>
    <p>only p3 distinguishes</p>
    <p>w R3</p>
    <p>w R1</p>
    <p>w R2</p>
    <p>w R4</p>
    <p>r R4</p>
    <p>r R1</p>
    <p>r R3</p>
    <p>p1 p2 pn</p>
    <p>only pn distinguishes</p>
    <p>w R3</p>
    <p>w R2</p>
    <p>w R4</p>
    <p>r R4</p>
    <p>r R1</p>
    <p>r R3</p>
    <p>p1 p2 pn</p>
    <p>only pn-1 distinguishes</p>
    <p>pn-1</p>
    <p>pn-1</p>
    <p>pn-1</p>
    <p>both pn-1 and pn distinguish</p>
    <p>w R1</p>
    <p>w R2</p>
    <p>w R4</p>
    <p>r R1</p>
    <p>r R3</p>
    <p>pnpn-1</p>
    <p>r R1</p>
    <p>pn w R1</p>
    <p>pn-1</p>
    <p>pn-2</p>
    <p>pn-2p4</p>
    <p>pn-2</p>
    <p>pn-2</p>
    <p>pn-2</p>
  </div>
  <div class="page">
    <p>November 2007 34</p>
    <p>high pro</p>
    <p>bab ility</p>
    <p>for d ecid</p>
    <p>ing 0</p>
    <p>Bivalent Configurations Revisited</p>
    <p>bivalent</p>
    <p>for deciding 1</p>
    <p>Adversary with high probability for deciding 0 0-valent configuration</p>
    <p>Cannot even guarantee it with high probability</p>
    <p>One layer</p>
  </div>
  <div class="page">
    <p>November 2007 35</p>
    <p>high prob</p>
    <p>abilit y</p>
    <p>for d ecidi</p>
    <p>ng 0</p>
    <p>v-Switching Configurations</p>
    <p>bivalent</p>
    <p>prob abili</p>
    <p>ty</p>
    <p>for d ecid</p>
    <p>ing 0</p>
    <p>hig h p</p>
    <p>rob abi</p>
    <p>lity</p>
    <p>for dec</p>
    <p>idin g 0</p>
    <p>high probability</p>
    <p>for deciding 1</p>
    <p>The above 0-valent configuration exists with high probability (at least 1-k)</p>
    <p>And now continue as from a bivalent configuration</p>
    <p>One layer One layer One layer</p>
  </div>
  <div class="page">
    <p>November 2007 36</p>
    <p>Individual Step Complexity</p>
    <p>The expected number of steps taken by a single process O(nlog2n) using single-writer registers [Aspnes &amp; Waarts 1996] In our algorithm, a process running solo must generate all n2 coins alone</p>
    <p>A multi-writer register allows randomized consensus with O(nlogn) individual step complexity</p>
    <p>The coins of a process have increasing weights A process that runs alone flips only O(nlogn) coins But now the coins are not independent  weights of flipped coins can be different</p>
  </div>
  <div class="page">
    <p>November 2007 37</p>
    <p>Wrap-Up: Whats this Work About?</p>
    <p>At face value: Clever math Stochastic processes, martingales, Kolmogorov</p>
    <p>Really, confluence of models Asynchronous synchronous w/ mobile failures Taking connectivity arguments from message passing to (multi-writer) shared memory Multi-writer bit induces instantaneous views</p>
    <p>Still needs to do your math</p>
  </div>
  <div class="page">
    <p>November 2007 38</p>
    <p>Whats Next?</p>
    <p>Randomized consensus revisited Weaker adversaries? Single-writer registers? Message-passing model? Byzantine failures?</p>
    <p>Cryptographic requirements for BFT?</p>
    <p>And other problems k-set consensus, renaming Seems to defy existing techniques</p>
  </div>
</Presentation>
