<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Hocheol Shin1, Yunmok Son1, Youngseok Park1, 2, Yujin Kwon1, and Yongdae Kim1</p>
    <p>Sampling Race: Bypassing Timingbased Analog Active Sensor Spoofing Detection on Analog-digital Systems</p>
  </div>
  <div class="page">
    <p>Cyber-physical Systems and Sensors</p>
  </div>
  <div class="page">
    <p>Traditional Cyber Systems</p>
    <p>External Network System</p>
    <p>Other Systems</p>
    <p>Human Control</p>
    <p>Communication Interface</p>
    <p>Control &amp; In/Output Interface</p>
  </div>
  <div class="page">
    <p>Cyber-physical Systems and Sensors</p>
    <p>Surroundings</p>
    <p>Cyber-physical System</p>
    <p>Sensors</p>
    <p>Actuators</p>
  </div>
  <div class="page">
    <p>Sensor Spoofing and CPS Security</p>
    <p>CPS</p>
    <p>Sensors</p>
    <p>Actuators</p>
    <p>Controller</p>
    <p>Surroundings</p>
  </div>
  <div class="page">
    <p>Sensor Spoofing and CPS Security</p>
    <p>CPS</p>
    <p>Sensors</p>
    <p>Actuators</p>
    <p>Controller</p>
    <p>Surroundings CPS Safety</p>
    <p>Features Errors, Noises,</p>
    <p>Natural Disturbances</p>
  </div>
  <div class="page">
    <p>Sensor Spoofing and CPS Security</p>
    <p>Surroundings</p>
    <p>CPS</p>
    <p>Sensors</p>
    <p>Actuators</p>
    <p>Controller</p>
    <p>W/O CPS Security Features</p>
  </div>
  <div class="page">
    <p>Attack Vectors of Sensor Spoofing</p>
    <p>Sensor Physical</p>
    <p>quantitiesSystem</p>
    <p>Data/Signal injection</p>
    <p>Regular channel</p>
    <p>Sensing data injection</p>
    <p>Interference</p>
    <p>Side channel</p>
    <p>Transmission channel</p>
    <p>Regular Channel: physical quantity sensed by the target  Infusion Pump (Park et. al. WOOT16)  ABS (Shoukry et. al. CHES13)</p>
    <p>Side Channel: physical quantity not sensed by the target  Expose gyroscope on a drone to acoustic noise of</p>
    <p>resonant freq.  Son et. al. USENIX SEC16</p>
    <p>Transmission Channel: channel connecting sensor and backend  Inject EMI to connecting wire  Foo Kune et. al. S&amp;P13</p>
  </div>
  <div class="page">
    <p>PyCRA</p>
    <p>Active Sensor Measured Entity</p>
    <p>No (negligible) Delay</p>
    <p>Physical Challenge-Response Authentication For Active Sensors Under Spoofing Attacks</p>
    <p>CCS15  On detecting spoofing attempts against active sensors</p>
    <p>Claimed to be a generalizable &amp; robust defense scheme Core Idea</p>
  </div>
  <div class="page">
    <p>PyCRA</p>
    <p>Physical Challenge-Response Authentication For Active Sensors Under Spoofing Attacks</p>
    <p>CCS15  On detecting spoofing attempts against active sensors</p>
    <p>Claimed to be a generalizable &amp; robust defense scheme Core Idea</p>
    <p>Active Sensor Measured Entity</p>
    <p>No (negligible) Delay</p>
    <p>Attacker Fundamental Delay</p>
    <p>Due to Nature</p>
    <p>Spoofing attack detected!</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>PyCRA backgrounds</p>
    <p>Theoretical security analysis of PyCRA</p>
    <p>Experimental validation of the analytic study</p>
    <p>Open problem: good sensor spoofing defense</p>
  </div>
  <div class="page">
    <p>Passive Sensors</p>
    <p>Just receive incoming emissions</p>
    <p>Relatively short-distance applications</p>
    <p>Gas, PIR, microphone, camera, etc.</p>
    <p>Active Sensors</p>
    <p>Emitter + passive sensor</p>
    <p>Measurement based on the difference of emitted and</p>
    <p>received signal</p>
    <p>Selective &amp; remote sensing, ranging applications</p>
    <p>Radar, lidar, drop counter, etc.</p>
    <p>Active Sensors</p>
    <p>Passive Sensor Measured Entity</p>
    <p>(3rd-party emitter)</p>
    <p>Active Sensor</p>
    <p>Measured Entity</p>
    <p>Emission/Illumination</p>
    <p>Reflection/Modification</p>
  </div>
  <div class="page">
    <p>PyCRA  Simple Detector</p>
    <p>Three schemes for spoofing detection  Simple detector, confusion phase, and 2 detector  2 detector omitted for brevity</p>
    <p>Simple detector Emitter Signal</p>
    <p>Emitter signal modulated by PyCRA Spoofing Signal</p>
  </div>
  <div class="page">
    <p>PyCRA  Confusion Phase</p>
    <p>Another trap to confuse the attacker 1. Reduce the emitter signal under that of noise floor for a random period</p>
    <p>(Confusion Phase) 2. Emitter signal is completely turned off to enter silent phase (LOW) 3. Emitter is turned on again (HIGH)</p>
    <p>With a high probability, attacker will have a nonzero delay to distinguish confusion &amp; silent phase</p>
  </div>
  <div class="page">
    <p>Attack Model</p>
    <p>Active sensor system  Both emitter and receiver cannot be shielded  Analog-digital system: sampled and quantized</p>
    <p>Victim System</p>
    <p>Can transparently receive victim emitter signal, and transparently inject spoofing signal</p>
    <p>Has more resources than the victim  Trusted measured entity, non invasive, physical/computational delay</p>
    <p>Attacker</p>
  </div>
  <div class="page">
    <p>Sampling Race</p>
    <p>Fundamental vulnerability of PyCRA</p>
    <p>Emitter (Prover)</p>
    <p>Receiver (Verifier)</p>
    <p>Shared secret: timings of signal level</p>
    <p>changes</p>
    <p>Secret has very short valid period Arms race of time-precision  Sampling Race</p>
    <p>Attacker</p>
    <p>Can know the secret soon after the</p>
    <p>challenge</p>
    <p>Attacker Delay</p>
    <p>Race exit condition 1.  Nontrivial lower bound of attacker delay 2. Victims time precision &lt; lower bound of attacker delay</p>
  </div>
  <div class="page">
    <p>Simple Detector Bypass</p>
    <p>Signal level</p>
    <p>Physical delay of Attacker</p>
    <p>Spoofing detected</p>
    <p>Attackers reaction</p>
    <p>Time</p>
    <p>Challenge signal</p>
    <p>Victims sampling</p>
    <p>Attackers sensing</p>
    <p>Spoofing signal</p>
    <p>Sampling interval of Victim</p>
    <p>Victims sampling</p>
    <p>Transition time of Attacker</p>
    <p>Spoofing detected</p>
    <p>Signal level</p>
    <p>Physical delay of an Attacker</p>
    <p>Spoofing not detected</p>
    <p>Attackers reaction</p>
    <p>Time</p>
    <p>Challenge signal</p>
    <p>Victims sampling</p>
    <p>Attackers sensing</p>
    <p>Sampling interval of Victim</p>
    <p>Victims sampling</p>
    <p>Spoofing signal</p>
    <p>Transition time of Attacker</p>
    <p>Spoofing not detected</p>
  </div>
  <div class="page">
    <p>Simple Detector Bypass</p>
    <p>Signal level</p>
    <p>Physical delay of Attacker</p>
    <p>Spoofing detected</p>
    <p>Attackers reaction</p>
    <p>Time</p>
    <p>Challenge signal</p>
    <p>Victims sampling</p>
    <p>Attackers sensing</p>
    <p>Spoofing signal</p>
    <p>Sampling interval of Victim</p>
    <p>Victims sampling</p>
    <p>Transition time of Attacker</p>
    <p>Spoofing detected</p>
    <p>Signal level</p>
    <p>Physical delay of an Attacker</p>
    <p>Spoofing not detected</p>
    <p>Attackers reaction</p>
    <p>Time</p>
    <p>Challenge signal</p>
    <p>Victims sampling</p>
    <p>Attackers sensing</p>
    <p>Sampling interval of Victim</p>
    <p>Victims sampling</p>
    <p>Spoofing signal</p>
    <p>Transition time of Attacker</p>
    <p>Spoofing not detected</p>
    <p>Victims sampling rate for robustness depends on the attackers agility  But, what would be the maximum? How can we decide it?</p>
    <p>Is it practical to make all sensors super fast against uncertain attacks?</p>
  </div>
  <div class="page">
    <p>Simple Detector Bypass</p>
    <p>Bypass condition  + , + ,</p>
    <p>Signal level</p>
    <p>Sampling interval</p>
    <p>of Attacker ()</p>
    <p>Spoofing not detected</p>
    <p>Time</p>
    <p>Challenge signal</p>
    <p>Spoofing signal</p>
    <p>Sampling interval of Victim ()</p>
    <p>Transition time of Attacker (,)</p>
    <p>Physical delay of Attacker (,)</p>
    <p>Worst case for attacker</p>
  </div>
  <div class="page">
    <p>Simple Detector Bypass</p>
    <p>Bypass condition  + , + ,</p>
    <p>Signal level</p>
    <p>Sampling interval</p>
    <p>of Attacker ()</p>
    <p>Spoofing not detected</p>
    <p>Time</p>
    <p>Challenge signal</p>
    <p>Spoofing signal</p>
    <p>Sampling interval of Victim ()</p>
    <p>Transition time of Attacker (,)</p>
    <p>Physical delay of Attacker (,)</p>
    <p>Worst case for attacker</p>
    <p>Same condition applies to bypass 2 detector.  Refer to the paper for details</p>
  </div>
  <div class="page">
    <p>Confusion Phase Bypass</p>
    <p>Assume timid attackers  Stop spoofing with any</p>
    <p>anomalies in emitter signal  Restart spoofing when emitter</p>
    <p>signal is fully restored  Basically can be bypassed if</p>
    <p>simple detector can be bypassed</p>
    <p>Signal level</p>
    <p>Physical delay of Attacker</p>
    <p>Spoofing not detected</p>
    <p>Attackers reaction</p>
    <p>Time</p>
    <p>Challenge signal</p>
    <p>Victims sampling</p>
    <p>Attackers sensing</p>
    <p>Spoofing signal</p>
    <p>Sampling interval of Victim</p>
    <p>Victims sampling</p>
    <p>Confusion phase</p>
  </div>
  <div class="page">
    <p>Experiment - Overview</p>
    <p>Conceptual experiment  Shows even crude circuitries can bypass 200kHz of sampling rate  PyCRA is valid when the race exit condition holds</p>
    <p>200kHz as a criterion  Equivalent to 5s of sampling interval  Given as sampling rate of high end MCUs in PyCRA paper  More than enough for most sensing applications</p>
  </div>
  <div class="page">
    <p>Real-world IR drop counter for medical infusion pump (JSB-1200)</p>
    <p>Drop counter  Non-contact measurement of liquid volume</p>
    <p>Experiment  Target Active Sensor</p>
  </div>
  <div class="page">
    <p>Experiment - Setup</p>
    <p>Experiment Process</p>
    <p>@ T1</p>
    <p>emitter as soon as possible @ T2</p>
    <p>Arduino 1</p>
    <p>Arduino 2</p>
    <p>Comparator</p>
    <p>T1</p>
    <p>Victim emitter</p>
    <p>Victim receiver</p>
    <p>T2</p>
    <p>drop counter</p>
    <p>eavesdrop</p>
    <p>attackervictim</p>
    <p>Attacker receiver</p>
    <p>Attacker emitter</p>
    <p>P1 P2</p>
    <p>P3 P4</p>
  </div>
  <div class="page">
    <p>Experiment - Comparator</p>
    <p>Attackers only have to catch the falling edge Comparator</p>
    <p>Compare VIN with VREF  Binary output  Used the most basic type VIN</p>
    <p>VREF2 1 2</p>
    <p>R R + R CC</p>
    <p>V</p>
    <p>VOUT CCV</p>
    <p>VSAT</p>
    <p>+</p>
    <p>VOUT</p>
    <p>VIN R1</p>
    <p>R2</p>
    <p>VREF</p>
    <p>CCV</p>
  </div>
  <div class="page">
    <p>Experiment - Comparator</p>
    <p>Implemented with MCP602 op-amp IC</p>
    <p>Falling transition time reduced to 1/5</p>
    <p>Dedicated comparator ICs have much shorter switching time</p>
    <p>Before Comparator (P1)</p>
    <p>After Comparator (P2)</p>
  </div>
  <div class="page">
    <p>Experiment  Overall Delay</p>
    <p>Reducing processor-side delay  Arduino analog read/write API: AnalogRead, AnalogWrite  10kHz Too slow to achieve 5s</p>
    <p>Use of comparator  faster digitalRead/Write  Used digitalRead/WriteFast library</p>
  </div>
  <div class="page">
    <p>Experiment  Overall Delay</p>
    <p>Reducing processor-side delay  Arduino analog read/write API: AnalogRead, AnalogWrite  10kHz Too slow to achieve 5s</p>
    <p>Use of comparator  faster digitalRead/Write  Used digitalRead/WriteFast library</p>
    <p>Overall delay of 2.8 s achieved  Measured @ input terminals of two LEDs  Equivalent to 358kHz of sampling rate  80% faster than 200kHz</p>
    <p>Attacker emitter (P4)</p>
  </div>
  <div class="page">
    <p>Constraint on Manufacturing</p>
    <p>Adoption of high sampling rate  Resources!</p>
    <p>More power &amp; cost required</p>
    <p>Hard to adopt sampling rate &gt;&gt; required for sensing application</p>
    <p>Uneven Competition</p>
    <p>A secure sensor must satisfy race exit condition which depends on possible</p>
    <p>spoofer implementation</p>
  </div>
  <div class="page">
    <p>Sample Rate and Additional Delay</p>
    <p>Attacker vs. victim cost  Attacker cost: attacker sampling rate + additional delay  Victim cost: victim sampling rate  Both depends on sampling rate  Equal competition when additional delay is negligible</p>
    <p>Plot bypass condition with sampling rate   + , + ,</p>
    <p>,   1</p>
    <p>,   , + ,</p>
    <p>1  1</p>
    <p>1</p>
  </div>
  <div class="page">
    <p>PyCRA Crypto</p>
    <p>Near Linear PyCRA Security</p>
    <p>Near y=x (Equal)</p>
    <p>Not much adversarial penalty, near race exit point</p>
    <p>Fast increase by powers of 2</p>
  </div>
  <div class="page">
    <p>Race Exit Points and Additional Delay</p>
    <p>Additional delay &amp; race exit point</p>
    <p>1  1</p>
    <p>1</p>
    <p>Reciprocal relation  Small decrease in additional delay  Large increase in race exit point</p>
    <p>Race Exit Points</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>PyCRA, first work on generalizable and robust defense  Practicality should be implicitly assumed.  Under sampling race: not robust  After race exit: not practical for some applications  not generalizable</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>PyCRA, first work on generalizable and robust defense  Practicality should be implicitly assumed.  Under sampling race: not robust  After race exit: not practical for some applications  not generalizable</p>
    <p>Requirements for good sensor spoofing defense solution</p>
    <p>Robust</p>
    <p>PracticalGeneralizable</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>PyCRA, first work on generalizable and robust defense  Practicality should be implicitly assumed.  Under sampling race: not robust  After race exit: not practical for some applications  not generalizable</p>
    <p>Requirements for good sensor spoofing defense solution</p>
    <p>Robust</p>
    <p>PracticalGeneralizable</p>
    <p>No solution satisfies all three properties: robustness, generalizability, and practicality</p>
    <p>Defense of active sensor spoofing  Remains as an open problem</p>
  </div>
</Presentation>
