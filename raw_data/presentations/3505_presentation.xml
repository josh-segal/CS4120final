<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Charm: Facilitating Dynamic Analysis of Device Drivers of Mobile Systems</p>
    <p>Seyed Mohammadjavad Seyed Talebi, Hamid Tavakoli, Hang Zhang, Zheng Zhang, Ardalan Amiri Sani, Zhiyun Qian</p>
    <p>UC Irvine UC Riverside</p>
  </div>
  <div class="page">
    <p>Key ideas to solve the problem What is the problem?</p>
    <p>Design</p>
    <p>Summary Evaluation</p>
  </div>
  <div class="page">
    <p>Security of mobile systems is vital</p>
  </div>
  <div class="page">
    <p>Mobile systems are diverse</p>
    <p>More than 1,000 Android device manufacturers</p>
    <p>More than 24,000 distinct Android devices</p>
  </div>
  <div class="page">
    <p>Diverse hardware  many device drivers</p>
    <p>Vendors competition  more features  more hardwares  more device drivers</p>
  </div>
  <div class="page">
    <p>Device drivers are a major risk to the security of mobile systems</p>
  </div>
  <div class="page">
    <p>How to investigate bugs in device drivers of mobile systems?</p>
  </div>
  <div class="page">
    <p>Fuzzing Interactive debugging</p>
    <p>REC Play</p>
    <p>Record-and-replay Selective Symbolic Execution</p>
    <p>Dynamic analysis is useful to find vulnerabilities</p>
    <p>Dynamic taint analysis</p>
  </div>
  <div class="page">
    <p>Many existing dynamic analysis tools use virtual machines</p>
    <p>Fuzzing</p>
    <p>kAFL  Digtool</p>
    <p>Interactive debugging</p>
    <p>REC Play</p>
    <p>Record-and-replay</p>
    <p>GDB  QEMU</p>
    <p>Selective Symbolic Execution</p>
    <p>S2E</p>
    <p>Dynamic taint analysis</p>
    <p>DECAF</p>
  </div>
  <div class="page">
    <p>Many existing dynamic analysis tools use virtual machines</p>
    <p>Fuzzing</p>
    <p>kAFL  Digtool</p>
    <p>Interactive debugging</p>
    <p>REC Play</p>
    <p>Record-and-replay</p>
    <p>GDB  QEMU</p>
    <p>Selective Symbolic Execution</p>
    <p>S2E</p>
    <p>Dynamic taint analysis</p>
    <p>DECAF</p>
  </div>
  <div class="page">
    <p>Many existing dynamic analysis tools use virtual machines</p>
    <p>Fuzzing Interactive debugging</p>
    <p>REC Play</p>
    <p>Record-and-replay</p>
    <p>kAFL  Digtool</p>
    <p>GDB  QEMU</p>
    <p>Selective Symbolic Execution</p>
    <p>S2E</p>
    <p>Dynamic taint analysis</p>
    <p>DECAF</p>
  </div>
  <div class="page">
    <p>Many existing dynamic analysis tools use virtual machines</p>
    <p>Fuzzing Interactive debugging</p>
    <p>REC Play</p>
    <p>Record-and-replay</p>
    <p>kAFL  Digtool</p>
    <p>GDB  QEMU</p>
    <p>Selective Symbolic Execution</p>
    <p>S2E</p>
    <p>Dynamic taint analysis</p>
    <p>DECAF</p>
  </div>
  <div class="page">
    <p>Many existing dynamic analysis tools use virtual machines</p>
    <p>Fuzzing Interactive debugging</p>
    <p>REC Play</p>
    <p>Record-and-replay</p>
    <p>kAFL  Digtool</p>
    <p>GDB  QEMU</p>
    <p>Selective Symbolic Execution</p>
    <p>S2E</p>
    <p>Dynamic taint analysis</p>
    <p>DECAF</p>
  </div>
  <div class="page">
    <p>Applying these tools to device drivers in mobile systems is hard</p>
    <p>Hardware assisted virtual machine</p>
    <p>Not available</p>
  </div>
  <div class="page">
    <p>Applying these tools to device drivers in mobile systems is hard</p>
    <p>Software only virtual machine</p>
    <p>Hardware assisted virtual machine</p>
    <p>Poor performanceNot available</p>
  </div>
  <div class="page">
    <p>Design Key ideas to solve the problem</p>
    <p>Evaluation Summary</p>
  </div>
  <div class="page">
    <p>Key idea 1: running device drivers of a mobile system in a virtual machine on a workstation</p>
    <p>Virtual machine</p>
    <p>Device driver(s) of</p>
    <p>mobile system</p>
  </div>
  <div class="page">
    <p>Key idea 1: running device driver of a mobile system in a virtual machine on a workstation</p>
    <p>Virtual machine</p>
    <p>Device driver(s) of</p>
    <p>mobile system</p>
    <p>Fails without I/O access</p>
  </div>
  <div class="page">
    <p>Virtual machine</p>
    <p>Device driver(s) of</p>
    <p>mobile system</p>
    <p>Low-level I/O operations</p>
    <p>Key idea 2: use the mobile device to serve low-level I/O operations</p>
  </div>
  <div class="page">
    <p>Design</p>
    <p>Evaluation Summary</p>
  </div>
  <div class="page">
    <p>User space Kernel</p>
    <p>Mobile system OS</p>
    <p>I/O device</p>
    <p>Shared modules</p>
    <p>Shared HW</p>
    <p>Device driver of a mobile system: a closer look</p>
    <p>Device driver</p>
  </div>
  <div class="page">
    <p>User space Kernel</p>
    <p>Mobile system OS</p>
    <p>Shared modules</p>
    <p>Shared HWI/O device</p>
    <p>Device driver of a mobile system: a closer look</p>
    <p>Device driver</p>
    <p>Memory mapped register read/writes</p>
    <p>Interrupt</p>
  </div>
  <div class="page">
    <p>User space Kernel</p>
    <p>Mobile system OS</p>
    <p>I/O device</p>
    <p>Device driver</p>
    <p>Shared modules</p>
    <p>Device driver of a mobile system: a closer look</p>
    <p>Shared HW</p>
    <p>Clock, power management, GPIO,</p>
    <p>and pin control</p>
  </div>
  <div class="page">
    <p>User space Kernel</p>
    <p>Mobile system OS</p>
    <p>I/O device</p>
    <p>Device driver</p>
    <p>Shared modules</p>
    <p>Device driver of a mobile system: a closer look</p>
    <p>Shared HW</p>
    <p>Function calls to Linux API for shared</p>
    <p>modules</p>
  </div>
  <div class="page">
    <p>User space</p>
    <p>Kernel User space</p>
    <p>Kernel</p>
    <p>Workstation Mobile system</p>
    <p>Hypervisor</p>
    <p>Virtual machine OS OS</p>
    <p>I/O device</p>
    <p>Shared modules</p>
    <p>Shared HW</p>
    <p>Move the device driver to a workstation</p>
    <p>Device driver</p>
  </div>
  <div class="page">
    <p>User space</p>
    <p>Kernel User space</p>
    <p>Kernel</p>
    <p>Workstation Mobile system</p>
    <p>Hypervisor</p>
    <p>Virtual machine OS OS</p>
    <p>I/O device</p>
    <p>Shared modules</p>
    <p>Shared HW</p>
    <p>Device driver</p>
    <p>Move the device driver to a workstation</p>
  </div>
  <div class="page">
    <p>User space</p>
    <p>Kernel User space</p>
    <p>Kernel</p>
    <p>Workstation Mobile system</p>
    <p>Hypervisor</p>
    <p>Virtual machine OS OS</p>
    <p>I/O device</p>
    <p>Shared modules</p>
    <p>Shared HW</p>
    <p>Mobile system cannot boot without clock, power</p>
    <p>management, GPIO, and pin control modules</p>
    <p>Device driver</p>
    <p>Challenge: cannot move shared modules</p>
  </div>
  <div class="page">
    <p>User space</p>
    <p>Kernel User space</p>
    <p>Kernel</p>
    <p>Workstation Mobile system</p>
    <p>Hypervisor</p>
    <p>Virtual machine OS OS</p>
    <p>I/O device</p>
    <p>Shared modules</p>
    <p>Device driver</p>
    <p>Do not move shared modules</p>
    <p>Shared HW</p>
  </div>
  <div class="page">
    <p>User space</p>
    <p>Kernel User space</p>
    <p>Kernel</p>
    <p>Workstation Mobile system</p>
    <p>Hypervisor</p>
    <p>Virtual machine OS OS</p>
    <p>I/O device</p>
    <p>Shared modules</p>
    <p>Remote I/O operations</p>
    <p>Fails without I/O access</p>
    <p>Device driver</p>
    <p>Shared HW</p>
  </div>
  <div class="page">
    <p>User space</p>
    <p>Kernel User space</p>
    <p>Kernel</p>
    <p>Workstation Mobile system</p>
    <p>Hypervisor</p>
    <p>Virtual machine OS OS</p>
    <p>I/O device</p>
    <p>Shared modules</p>
    <p>Stub</p>
    <p>Stub</p>
    <p>USB channel</p>
    <p>Device driver</p>
    <p>Low latency USB channel</p>
    <p>Shared HW</p>
  </div>
  <div class="page">
    <p>Shared HW</p>
    <p>Device driver</p>
    <p>I/O device</p>
    <p>Shared modules</p>
    <p>User space</p>
    <p>Kernel User space</p>
    <p>Kernel</p>
    <p>Workstation Mobile system</p>
    <p>Hypervisor</p>
    <p>Virtual machine OS</p>
    <p>Stub</p>
    <p>OS</p>
    <p>Stub</p>
    <p>Charm USB</p>
    <p>channel</p>
    <p>Design decision 2: low latency USB channel Normal</p>
    <p>USB channel</p>
    <p>~ 2 ms Latency</p>
    <p>~ 100 us Latency</p>
  </div>
  <div class="page">
    <p>Virtual machine OS</p>
    <p>Shared modules</p>
    <p>Shared HW</p>
    <p>OS User space</p>
    <p>Hypervisor</p>
    <p>Kernel Kernel User space</p>
    <p>Workstation Mobile system</p>
    <p>I/O device</p>
    <p>Remote I/O interface 1: remote register read/write</p>
    <p>Stub</p>
    <p>Stub</p>
    <p>USB channel</p>
    <p>Device driver</p>
  </div>
  <div class="page">
    <p>Virtual machine OS</p>
    <p>Shared modules</p>
    <p>Shared HW</p>
    <p>OS User space</p>
    <p>Hypervisor</p>
    <p>Kernel Kernel User space</p>
    <p>Workstation Mobile system</p>
    <p>I/O device 33</p>
    <p>Stub</p>
    <p>Stub</p>
    <p>USB channel</p>
    <p>Device driver</p>
    <p>Remote I/O interface 2: remote interrupt handling</p>
  </div>
  <div class="page">
    <p>Virtual machine OS OS User space</p>
    <p>Hypervisor</p>
    <p>Kernel Kernel User space</p>
    <p>I/O device</p>
    <p>Shared modules</p>
    <p>Workstation Mobile system</p>
    <p>Stub</p>
    <p>Stub</p>
    <p>USB channel</p>
    <p>Device driver</p>
    <p>Remote I/O interface 3: Remote Procedure Call (RPC)</p>
    <p>Shared HW</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Summary</p>
  </div>
  <div class="page">
    <p>Charm supports various drivers and devices</p>
    <p>Model Nexus 5X Nexus 6P Galaxy S7</p>
    <p>Manufacturer LG Huawei Samsung</p>
    <p>Supported drivers Camera, Audio GPU IMU Sensors</p>
    <p>Lines of Code Ported 65,000 + 30,000 31,000 3000</p>
    <p>Porting time - 7 days 2 days</p>
  </div>
  <div class="page">
    <p>Time it takes to port a driver to Charm</p>
    <p>Model Nexus 5X Nexus 6P Galaxy S7</p>
    <p>Manufacturer LG Huawei Samsung</p>
    <p>Supported drivers Camera, Audio GPU IMU Sensors</p>
    <p>Lines of Code Ported 65,000 + 30,000 31,000 3000</p>
    <p>Porting time - 7 days 2 days</p>
  </div>
  <div class="page">
    <p>Charm supports various dynamic analysis techniques</p>
    <p>Fuzzing  Record-and-replay  Manual Interactive debugging</p>
  </div>
  <div class="page">
    <p>How Charm facilitates fuzzing</p>
    <p>More hardware support</p>
    <p>VT-x PT</p>
  </div>
  <div class="page">
    <p>How Charm facilitates fuzzing</p>
    <p>More hardware support</p>
    <p>VT-x PT</p>
    <p>KASAN KMSAN KTSAN</p>
    <p>More software support</p>
  </div>
  <div class="page">
    <p>How Charm facilitates fuzzing</p>
    <p>Reliable console access No special hardware</p>
    <p>More hardware support</p>
    <p>VT-x PT</p>
    <p>KASAN KMSAN KTSAN</p>
    <p>More software support</p>
  </div>
  <div class="page">
    <p>Fuzzing scenarios</p>
    <p>Scenario 1</p>
    <p>Execute fuzzer on the phone</p>
    <p>Scenario 2</p>
    <p>Execute fuzzer on the server</p>
    <p>Without Charm With Charm</p>
  </div>
  <div class="page">
    <p>Fuzzing performance on Charm</p>
  </div>
  <div class="page">
    <p>Low overhead for fuzzing on Charm</p>
    <p>Low-level I/O operationsHigher</p>
    <p>performance</p>
    <p>Not frequent</p>
  </div>
  <div class="page">
    <p>Bugs found by Charm</p>
    <p>Total number of bugs 25</p>
    <p>New bugs 14</p>
    <p>Bugs found using KASAN 2</p>
    <p>False positive bugs 0</p>
  </div>
  <div class="page">
    <p>Fuzzing  Record-and-replay  Manual Interactive debugging</p>
    <p>REC Play</p>
    <p>Charm supports various dynamic analysis techniques</p>
  </div>
  <div class="page">
    <p>Charm facilitates record-and-replay</p>
    <p>Not feasible without Charm for mobile device drivers</p>
    <p>REC Play</p>
  </div>
  <div class="page">
    <p>Virtual machine OS User space</p>
    <p>Kernel User space</p>
    <p>Kernel</p>
    <p>OS</p>
    <p>Resident modules</p>
    <p>Resident hwHypervisor</p>
    <p>Workstation</p>
    <p>Device driver</p>
    <p>Mobile system</p>
    <p>I/O device</p>
    <p>Record all remote I/O interactions</p>
    <p>Stub</p>
    <p>Stub</p>
    <p>USB channel</p>
    <p>REC</p>
  </div>
  <div class="page">
    <p>Virtual machine OS User space</p>
    <p>Hypervisor</p>
    <p>Kernel</p>
    <p>Workstation</p>
    <p>Device driver</p>
    <p>Stub</p>
    <p>Replay the recorded interactions</p>
    <p>Play</p>
  </div>
  <div class="page">
    <p>Virtual machine OS User space</p>
    <p>Hypervisor</p>
    <p>Kernel</p>
    <p>Workstation</p>
    <p>Device driver</p>
    <p>Stub</p>
    <p>Replay the recorded interactions</p>
    <p>Play</p>
    <p>Mobile system is not needed while replaying</p>
  </div>
  <div class="page">
    <p>Record-and-replay performance</p>
  </div>
  <div class="page">
    <p>Fuzzing  Record and Replay  Manual Interactive debugging</p>
    <p>Charm supports various dynamic analysis techniques</p>
  </div>
  <div class="page">
    <p>Charm facilitates manual interactive debugging</p>
    <p>Charm enables using GDB for device drivers</p>
    <p>Breakpoint Watchpoint Single-step execution</p>
  </div>
  <div class="page">
    <p>Manual interactive debugging results</p>
    <p>We analyzed three known vulnerabilities  CVE-2016-3903: use-after-free bug  CVE-2016-2501: out-of-bounds access bug  CVE-2016-2061: out-of-bounds access bug</p>
    <p>We built an arbitrary kernel code execution exploit using CVE-2016-2061</p>
  </div>
  <div class="page">
    <p>Related work</p>
    <p>Charm Avatar [NDSS14]</p>
    <p>Surrogate [WOOT15]</p>
    <p>Target Mobile systems, open source device drivers</p>
    <p>Embedded systems firmware</p>
    <p>Embedded systems firmware</p>
    <p>Forward I/O accesses Yes Yes Yes</p>
    <p>Communication channel</p>
    <p>USB UART and JTAG PCIe FPGA board/JTAG</p>
    <p>Performance Near native Poor Near native</p>
  </div>
  <div class="page">
    <p>Limitations and Future work</p>
    <p>Current Implementation Future work</p>
    <p>Manual port of drivers Automatic port of drivers</p>
    <p>No DMA support DMA support</p>
    <p>Open source drivers support Binary drivers support</p>
  </div>
  <div class="page">
    <p>Summary</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Charm facilitates dynamic analysis of mobile device drivers</p>
    <p>Charms performance is on par with actual mobile systems</p>
    <p>Charm supports a broad variety of device drivers with reasonable engineering effort</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Charm facilitates dynamic analysis of mobile device drivers</p>
    <p>Charms performance is on par with actual mobile systems</p>
    <p>Charm supports a broad variety of device drivers with reasonable engineering effort</p>
    <p>Charm is open source: http://trusslab.github.io/charm</p>
  </div>
  <div class="page">
    <p>Backup slides: vulnerable code snippet of CVE-2016-2061</p>
  </div>
  <div class="page">
    <p>Backup slides: vulnerable code snippet of CVE-2016-2061</p>
  </div>
  <div class="page">
    <p>Backup slides: building exploit</p>
    <p>Heap or stack?</p>
  </div>
  <div class="page">
    <p>Backup slides: building exploit</p>
    <p>Heap or stack? Heap -&gt; Spray target objects</p>
  </div>
  <div class="page">
    <p>Backup slides: building exploit</p>
    <p>Vulnerable object</p>
    <p>Target object</p>
    <p>offset</p>
  </div>
  <div class="page">
    <p>Dynamic analysis is very useful</p>
    <p>Static analysis Dynamic analysis</p>
    <p>False positives rate High Low</p>
    <p>Compiler/linker bugs Cannot find Can find</p>
    <p>Code obfuscation Vulnerable Not vulnerable</p>
    <p>Unknown types of bugs Cannot find Can find</p>
    <p>Code coverage High Low</p>
  </div>
  <div class="page">
    <p>CVE-2016-3903</p>
    <p>Is it out-of-bound access?</p>
  </div>
  <div class="page">
    <p>CVE-2016-3903</p>
    <p>Is it out-of-bound access?</p>
  </div>
  <div class="page">
    <p>CVE-2016-3903</p>
    <p>Watch points</p>
    <p>Use after free</p>
  </div>
</Presentation>
