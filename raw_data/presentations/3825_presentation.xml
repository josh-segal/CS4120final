<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>An optimal dynamic spanner An optimal dynamic spanner for points residing in doubling for points residing in doubling</p>
    <p>metric spacesmetric spaces</p>
    <p>Lee-Ad GottliebLee-Ad Gottlieb NYUNYU Weizmann Weizmann</p>
    <p>Liam RodittyLiam Roditty WeizmannWeizmann</p>
  </div>
  <div class="page">
    <p>SpannersSpanners</p>
    <p>A spanner for graph G is a subgraph A spanner for graph G is a subgraph HH</p>
    <p>H contains all vertices in GH contains all vertices in G  H contains only some edges of GH contains only some edges of G</p>
    <p>G</p>
    <p>H</p>
  </div>
  <div class="page">
    <p>SpannersSpanners</p>
    <p>Some qualities of a spannerSome qualities of a spanner  degreedegree  stretchstretch  hophop  weightweight</p>
    <p>Applications: networks, routingApplications: networks, routing G</p>
    <p>H</p>
  </div>
  <div class="page">
    <p>SpannersSpanners</p>
    <p>Our goal:Our goal:  Build (1+Build (1+)-stretch spanner for the full )-stretch spanner for the full</p>
    <p>graph on graph on SS  Low degreeLow degree  Maintain dynamicallyMaintain dynamically</p>
    <p>Lower bounds on degree and Lower bounds on degree and dynamic maintenance followdynamic maintenance follow  First need to define doubling dimensionFirst need to define doubling dimension</p>
  </div>
  <div class="page">
    <p>Doubling DimensionDoubling Dimension</p>
    <p>Point set X has Point set X has doubling doubling dimensiondimension  if if  the points of X covered by the points of X covered by</p>
    <p>ball B can be covered by 2ball B can be covered by 2 balls of half the radius.balls of half the radius.</p>
    <p>Where a Where a ballball centered at centered at point point cc is the space within is the space within distance distance rr of of cc.. 1</p>
  </div>
  <div class="page">
    <p>Lower bound on degreeLower bound on degree</p>
    <p>Low stretch spanner necessitates Low stretch spanner necessitates high degree. high degree.  Example: A Example: A</p>
    <p>(2-(2-)-spanner )-spanner</p>
    <p>is the full graphis the full graph</p>
    <p>Lower bounds on degreeLower bounds on degree  (1/(1/))O(O())</p>
  </div>
  <div class="page">
    <p>Lower bounds on insertionsLower bounds on insertions</p>
    <p>Lower bound on insertionsLower bound on insertions  An insertion of a new point in a (1+An insertion of a new point in a (1+)-)</p>
    <p>spanner subsumes a (1+spanner subsumes a (1+)-NNS)-NNS</p>
    <p>H</p>
  </div>
  <div class="page">
    <p>Search lower boundsSearch lower bounds</p>
    <p>Lower bounds on (1+Lower bounds on (1+)-ANN search )-ANN search (arbitrary metric space)(arbitrary metric space)  22O(O() ) log nlog n  (1/(1/))O(O())</p>
    <p>q</p>
  </div>
  <div class="page">
    <p>NNS in Low Doubling DimensionNNS in Low Doubling Dimension</p>
    <p>Krauthgamer and Lee (SODA 04)Krauthgamer and Lee (SODA 04)  considered (1+considered (1+)-ANN queries on )-ANN queries on S S having having</p>
    <p>low doubling dimensionlow doubling dimension  Created a point hierarchy to solve this Created a point hierarchy to solve this</p>
    <p>problemproblem</p>
    <p>Hierarchy is composed of levels of Hierarchy is composed of levels of -nets. -nets.  PackingPacking: Points of each net spaced out: Points of each net spaced out  CoveringCovering: Points of each net : Points of each net cover cover all points all points</p>
    <p>of the previous levelof the previous level</p>
  </div>
  <div class="page">
    <p>HierarchiesHierarchies</p>
    <p>Spanners can be created using point Spanners can be created using point hierarchies (GGN-04)hierarchies (GGN-04)</p>
    <p>ExampleExample  Consider the hierarchy of KL-04, used in Consider the hierarchy of KL-04, used in</p>
    <p>nearest neighbor searchnearest neighbor search  Hierarchy is composed of levels of Hierarchy is composed of levels of -nets. -nets.</p>
    <p>PackingPacking: Points of each net spaced out: Points of each net spaced out  CoveringCovering: Points of each net : Points of each net cover cover all points all points</p>
    <p>of the previous levelof the previous level</p>
  </div>
  <div class="page">
    <p>HierarchyHierarchy 1-net 2-net 4-net 8-net</p>
  </div>
  <div class="page">
    <p>HierarchyHierarchy 1-net 2-net 4-net 8-net</p>
    <p>Radius = 1</p>
    <p>Covering: all points are covered</p>
    <p>Packing</p>
  </div>
  <div class="page">
    <p>HierarchyHierarchy 1-net 2-net 4-net 8-net</p>
    <p>Radius = 2</p>
  </div>
  <div class="page">
    <p>HierarchyHierarchy 1-net 2-net 4-net 8-net</p>
  </div>
  <div class="page">
    <p>HierarchyHierarchy 1-net 2-net 4-net 8-net</p>
  </div>
  <div class="page">
    <p>HierarchyHierarchy 1-net 2-net 4-net 8-net</p>
  </div>
  <div class="page">
    <p>HierarchyHierarchy 1-net 2-net 4-net 8-net</p>
  </div>
  <div class="page">
    <p>HierarchyHierarchy 1-net 2-net 4-net 8-net</p>
  </div>
  <div class="page">
    <p>HierarchyHierarchy 1-net 2-net 4-net 8-net</p>
  </div>
  <div class="page">
    <p>Another PerspectiveAnother Perspective</p>
    <p>Spanning Tree defines Parent-child relationship</p>
    <p>Let log be the aspect Ratio of the point set. The tree has log levels.</p>
  </div>
  <div class="page">
    <p>Spanner ConstructionSpanner Construction</p>
    <p>EdgesEdges  Parent-childParent-child  LateralLateral</p>
    <p>Path:Path:  Up, across, downUp, across, down Tree</p>
    <p>Parent-child edge</p>
  </div>
  <div class="page">
    <p>Spanner ConstructionSpanner Construction</p>
    <p>EdgesEdges  Parent-childParent-child  LateralLateral</p>
    <p>Path:Path:  Up, across, downUp, across, down Tree</p>
    <p>Lateral edge</p>
  </div>
  <div class="page">
    <p>Spanner PathsSpanner Paths</p>
    <p>EdgesEdges  Parent-childParent-child  LateralLateral</p>
    <p>Path:Path:  Up, across, downUp, across, down Tree</p>
    <p>Path</p>
  </div>
  <div class="page">
    <p>Spanner PathsSpanner Paths</p>
    <p>EdgesEdges  Parent-childParent-child  LateralLateral</p>
    <p>Path:Path:  Up, across, downUp, across, down Tree</p>
    <p>Path</p>
  </div>
  <div class="page">
    <p>Spanner PathsSpanner Paths</p>
    <p>EdgesEdges  Parent-childParent-child  LateralLateral</p>
    <p>Path:Path:  Up, across, downUp, across, down Tree</p>
    <p>Path</p>
  </div>
  <div class="page">
    <p>Spanner PathsSpanner Paths</p>
    <p>EdgesEdges  Parent-childParent-child  LateralLateral</p>
    <p>Path:Path:  Up, across, downUp, across, down Tree</p>
    <p>Path</p>
  </div>
  <div class="page">
    <p>Spanner PathsSpanner Paths</p>
    <p>EdgesEdges  Parent-childParent-child  LateralLateral</p>
    <p>Path:Path:  Up, across, downUp, across, down Tree</p>
    <p>Path</p>
  </div>
  <div class="page">
    <p>Spanner PathsSpanner Paths</p>
    <p>EdgesEdges  Parent-childParent-child  LateralLateral</p>
    <p>Path:Path:  Up, across, downUp, across, down Tree</p>
    <p>Path</p>
  </div>
  <div class="page">
    <p>Spanner ConstructionSpanner Construction</p>
    <p>Identify 1-net points</p>
  </div>
  <div class="page">
    <p>Spanner ConstructionSpanner Construction</p>
    <p>Connect 1-net Points within radius 3</p>
    <p>Call these lateral connections</p>
  </div>
  <div class="page">
    <p>Spanner ConstructionSpanner Construction</p>
    <p>Identify 2-net points</p>
    <p>Note that we got all parentchild connections for free</p>
  </div>
  <div class="page">
    <p>Spanner ConstructionSpanner Construction</p>
    <p>Connect 2-net Points within radius 6</p>
  </div>
  <div class="page">
    <p>Spanner ConstructionSpanner Construction</p>
    <p>Identify 4-net points</p>
  </div>
  <div class="page">
    <p>Spanner ConstructionSpanner Construction</p>
    <p>Connect 4-net Points within radius 12</p>
  </div>
  <div class="page">
    <p>AnalysisAnalysis</p>
    <p>Whats the stretch between these two Points?</p>
  </div>
  <div class="page">
    <p>AnalysisAnalysis</p>
    <p>Whats the stretch between these two Points?</p>
    <p>Key to proof: blue points are connected, but white points arent</p>
  </div>
  <div class="page">
    <p>AnalysisAnalysis</p>
    <p>Stretch: dspanner/d = (2+4+(d+4+4)+4+2)/(d-2-2) = (d+20)/(d-4) &lt; 13</p>
    <p>d&gt;6</p>
  </div>
  <div class="page">
    <p>AnalysisAnalysis</p>
    <p>We connected -net points within distance 3.  More generally</p>
    <p>Connect -net points that are within distance c  Degree is ccO(O())</p>
    <p>Let j be the last level at which parents of the points are not connected. Stretch:</p>
    <p>dspanner/d &lt; ((d+2j+1+2j+1)+2j+2+2j+2)/(d-2j-1-2j-1) &lt; (c2j+2j+2+2j+2+2j+2)/(c2j-2j) = (c+12)/(c-1) = 1+13/(c-1) = (1+(1+))</p>
  </div>
  <div class="page">
    <p>DegreeDegree</p>
    <p>Whats the degree of the spanner in Whats the degree of the spanner in the previous example?the previous example?</p>
  </div>
  <div class="page">
    <p>DegreeDegree</p>
    <p>Problem: degree is log</p>
  </div>
  <div class="page">
    <p>DegreeDegree</p>
    <p>Problem: This node appears at every level.  Solution: Why require each level to be subset of the next one?</p>
  </div>
  <div class="page">
    <p>Dynamic hierarchy</p>
    <p>Another problem: Need fast dynamic updates  CG-06 showed how to support a hierarchy</p>
    <p>under dynamic update in 22O(O() ) log n log n time.  But doesnt support deletions!</p>
    <p>Goals:  Replace deleted points  Low Degree:</p>
    <p>each point should appear only O(1) times in the hierarchy</p>
  </div>
  <div class="page">
    <p>Dynamic hierarchyDynamic hierarchy</p>
    <p>A look at the new hierarchy</p>
  </div>
  <div class="page">
    <p>Dynamic hierarchyDynamic hierarchy</p>
    <p>Step 1: Remove leaf nodes of deleted points</p>
  </div>
  <div class="page">
    <p>Dynamic hierarchyDynamic hierarchy</p>
    <p>Step 1: Remove leaf nodes of deleted points</p>
  </div>
  <div class="page">
    <p>Dynamic hierarchyDynamic hierarchy</p>
    <p>Step 2: Compress single child paths</p>
  </div>
  <div class="page">
    <p>Dynamic hierarchyDynamic hierarchy</p>
    <p>Step 2: Compress single child paths</p>
  </div>
  <div class="page">
    <p>Dynamic hierarchyDynamic hierarchy</p>
    <p>Step 2: Compress single child paths</p>
  </div>
  <div class="page">
    <p>Dynamic hierarchyDynamic hierarchy</p>
    <p>Step 2: Compress single child paths</p>
  </div>
  <div class="page">
    <p>Dynamic hierarchyDynamic hierarchy</p>
    <p>Step 2: Compress single child paths</p>
  </div>
  <div class="page">
    <p>Dynamic hierarchyDynamic hierarchy</p>
    <p>Step 2: Compress single child paths</p>
    <p>Tree with degree at least 2</p>
  </div>
  <div class="page">
    <p>Dynamic hierarchyDynamic hierarchy</p>
    <p>Replacement scheme: -Eliminates deleted points -Each point appears</p>
    <p>O(1) times -Adds a small cost to the stretch</p>
  </div>
  <div class="page">
    <p>Extracting a spannerExtracting a spanner</p>
    <p>Spanner edges: -Have parent-child edges -Missing some lateral edges</p>
    <p>parent-child edges</p>
    <p>Missing lateral edge</p>
  </div>
  <div class="page">
    <p>SpannerSpanner</p>
    <p>Possible solution?</p>
  </div>
  <div class="page">
    <p>Extracting a spanner</p>
    <p>Replacing lateral edgesReplacing lateral edges Problem: Too many replacement edges incident on a single node</p>
    <p>Solution: Assign x as a step child of the lowest covering point</p>
    <p>x</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Final spanner  (1+) stretch  (1/)O() degree (optimal)  (1/)O() log n update time (optimal?)</p>
    <p>Thank you!</p>
  </div>
</Presentation>
