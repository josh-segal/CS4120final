<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Building Access Oblivious Storage Cloud for Enterprise</p>
    <p>Sarit Mukherjee (with H. Chang, M. Kodialam, T.V. Lakshman, L. Wang) Bell Labs Research, Alcatel-Lucent</p>
  </div>
  <div class="page">
    <p>Motivation: Service Provider and Enterprise eco-system</p>
    <p>Offer NeedUse</p>
    <p>Offer Need</p>
    <p>Use</p>
  </div>
  <div class="page">
    <p>VPN interconnection: Enterprises view</p>
    <p>Enterprise A</p>
    <p>Enterprise B</p>
    <p>Enterprise C</p>
    <p>Enterprise A</p>
    <p>Service Provider NetworkService Provider Network</p>
    <p>Enterprise B Enterprise C</p>
    <p>Enterprise leases VPN service from a service provider to interconnect multiple sites</p>
    <p>Each site gets a pre-specified bandwidth guaranteed VPN connection</p>
    <p>All enterprise resources are accessible from any site regardless of the resources location</p>
    <p>Enterprise is able to aggregate IT resources in one or a few locations</p>
  </div>
  <div class="page">
    <p>VPN interconnection: Service Providers view</p>
    <p>Enterprise A</p>
    <p>Enterprise B</p>
    <p>Enterprise C</p>
    <p>Enterprise A</p>
    <p>Enterprise B Enterprise C</p>
    <p>Service provider wants to provide enterprise-grade services leveraging its network</p>
    <p>VPN uses networking service</p>
    <p>Service provider intends to providing an enterprise-grade cloud solution from its network</p>
    <p>Enterprise should be able to outsource IT resources and enjoy benefits of cloud service</p>
  </div>
  <div class="page">
    <p>Service Providers Cloud in the Network</p>
    <p>Enterprise A</p>
    <p>Enterprise B</p>
    <p>Enterprise C</p>
    <p>Enterprise A</p>
    <p>Enterprise B Enterprise C</p>
    <p>Service providers are building data centers in their network</p>
    <p>Large number of small data centers spread all over the network</p>
    <p>Provide compute, storage, content and other bandwidth and latency sensitive services</p>
    <p>We address service provider enabled storage services for enterprise</p>
  </div>
  <div class="page">
    <p>Service Providers' Networked Cloud From Centralized Cloud to Distributed Cloud</p>
    <p>ServicesServices</p>
    <p>Services</p>
  </div>
  <div class="page">
    <p>Enterprises expectation from Storage Cloud Service Service Isolation</p>
    <p>Enterprise A</p>
    <p>Enterprise B</p>
    <p>Enterprise C</p>
    <p>Enterprise A</p>
    <p>Enterprise B Enterprise C</p>
    <p>The enterprise's virtual resources in the cloud must be</p>
    <p>isolated from the other users of the cloud</p>
  </div>
  <div class="page">
    <p>Enterprises expectation from Storage Cloud Service Location independence</p>
    <p>Enterprise A</p>
    <p>Enterprise B</p>
    <p>Enterprise C</p>
    <p>Enterprise A</p>
    <p>Enterprise B Enterprise C</p>
    <p>The enterprise users must be able to connect to the</p>
    <p>virtual resources in the cloud from any enterprise location</p>
  </div>
  <div class="page">
    <p>Enterprises expectation from Storage Cloud Service Seamlessness</p>
    <p>Enterprise A</p>
    <p>Enterprise B</p>
    <p>Enterprise C</p>
    <p>Enterprise A</p>
    <p>Enterprise B Enterprise C</p>
    <p>An enterprise user must not see any difference between</p>
    <p>accessing an in-house resource vs. one in the cloud</p>
  </div>
  <div class="page">
    <p>Enterprises expectation from Storage Cloud Service</p>
    <p>Enterprise A</p>
    <p>Enterprise B</p>
    <p>Enterprise C</p>
    <p>Enterprise A</p>
    <p>Enterprise B Enterprise C</p>
    <p>Isolation Location</p>
    <p>Independence</p>
    <p>Seamlessness</p>
    <p>Solutions</p>
    <p>exist Addressed in this paper</p>
  </div>
  <div class="page">
    <p>Distributed Storage Provisioning and File Access in Cloud</p>
    <p>Location 1 Location 2</p>
    <p>C1: [P1,Q1]</p>
    <p>C4: [P2,Q2]</p>
    <p>C3: [P1,Q1]</p>
    <p>U1</p>
    <p>U2== size(Q2)</p>
    <p>size(Q1)</p>
    <p>size(P2)</p>
    <p>size(P1)</p>
    <p>= C2),traffic(U1</p>
    <p>C1),traffic(U1</p>
    <p>Files: P and Q</p>
    <p>No. of chunks: 2</p>
    <p>Replication: 2</p>
    <p>Location 3</p>
    <p>C2: [P2,Q2] U3 C2),traffic(U1</p>
  </div>
  <div class="page">
    <p>Prototype Implementation of Distributed Storage Cloud</p>
    <p>Distributed storage cloud automation layer optimally provisions the customer</p>
    <p>Determines the customers attachment points into the Providers network</p>
    <p>Attachment points act as the Gateways into the distributed storage cloud</p>
    <p>Provisions storage for the customer at the optimal storage locations</p>
    <p>Built in Linux kernel as a Unix-based file system (Ceph)</p>
    <p>Exports NFS interface through the Gateway</p>
    <p>Customers connect to the cloud through the Gateways and specify the bandwidth needs</p>
  </div>
  <div class="page">
    <p>Ceph Distributed File System Architecture</p>
    <p>Clients</p>
    <p>MDS Daemon</p>
    <p>Metadata Cluster</p>
    <p>Metadata Operations</p>
    <p>Metadata Storage</p>
    <p>Monitor</p>
    <p>Mon Daemon</p>
    <p>Mount Operation</p>
    <p>Linux kernel</p>
    <p>Ceph module</p>
    <p>Linux kernel</p>
    <p>FUSE module</p>
    <p>LibFUSE</p>
    <p>Ceph process</p>
    <p>OSD Daemon</p>
    <p>Object Storage Cluster</p>
    <p>File I/O Operations</p>
    <p>Operations</p>
    <p>Runs in the Gateway Runs in the Cloud</p>
  </div>
  <div class="page">
    <p>Storage CloudCeph</p>
    <p>Data Placement in Distributed Storage Cloud</p>
    <p>PGID = UserLookup (UserID,</p>
    <p>File</p>
    <p>Objects</p>
    <p>Placement</p>
    <p>ObjectID = (Inode, Object#)</p>
    <p>ObjectID = (Inode, Object#)</p>
    <p>PGID = hash</p>
    <p>(UserID, MountLocation)</p>
    <p>Placement Groups</p>
    <p>Object Storage Devices</p>
    <p>Placement(Object) = (osd1, osd4, osd5)</p>
    <p>Placement(Object) = (osd1, osd4, osd5)</p>
    <p>PGID = hash (ObjectID)</p>
  </div>
  <div class="page">
    <p>Experimental Results</p>
    <p>RocketFuels router-level</p>
    <p>ISP maps with uniform link</p>
    <p>capacity</p>
    <p>YouTube access traces</p>
    <p>containing 1000 distinct</p>
    <p>users and 7,465 distinct</p>
    <p>video sessions, covering 6</p>
    <p>hours</p>
    <p>Simulated using GTNetS</p>
    <p>Does not include bandwidth</p>
    <p>Bandwidth-Aware Provisioning: Determines the optimal chunking and replication per-file such that the maximum link utilization remains minimized with changing access patterns.</p>
    <p>Proximity-Aware Provisioning: Splits and places files as close as possible (in terms of network hops) to the edge nodes accessing them, without considering link capacity constraints.</p>
    <p>bandwidth required for relocation</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Enterprise-grade storage system tailor-made for a service providers cloud</p>
    <p>Custom design and architecture to exploit service providers networked cloud</p>
    <p>Implementation on Linux platform with popular file system interface for users</p>
    <p>Benefits of the proposed architecture</p>
    <p>Storage provisioning with guaranteed performance using marginally extra bandwidth</p>
    <p>Storage provisioning with guaranteed performance using marginally extra bandwidth</p>
    <p>New users can join easily at any location and new content can be ingested into the cloud so long as the bandwidth demands remain within the service limits</p>
    <p>Significant reduction of operating costs of running a storage cloud by eliminating the</p>
    <p>need for shuffling content in the cloud to meet performance requirements with</p>
    <p>changing access patterns</p>
    <p>Easy determination of provisioning request admission into the cloud</p>
  </div>
</Presentation>
