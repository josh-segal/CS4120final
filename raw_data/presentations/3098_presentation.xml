<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>BLOCK MANAGEMENT IN SOLID-STATE DEVICES</p>
    <p>Abhishek Rajimwale (University of Wisconsin-Madison) Vijayan Prabhakaran (Microsoft Research) John D Davis (Microsoft Research)</p>
  </div>
  <div class="page">
    <p>Existing storage stack</p>
    <p>Storage stack has remained static  Mechanical disk drives for decades  Narrow block interface existing for years (ATA, SCSI)  No information flow except block reads/writes</p>
    <p>File systems make assumptions about devices  Sequential access much faster than random access  Little or no background activity</p>
    <p>Assumptions true for disk drives  What if the underlying device changes ?</p>
  </div>
  <div class="page">
    <p>SSD  A different beast</p>
    <p>SSDs differ from disks  No mechanical or moving parts  Contain multiple flash elements  Different internal architecture  Complex internal operations</p>
    <p>SSDs differ among themselves  Low, medium, and high end devices  Firmware, interconnections, mapping, striping, ganging</p>
    <p>Will the existing file system assumptions hold ?</p>
  </div>
  <div class="page">
    <p>Problem</p>
    <p>Several assumptions are no longer valid</p>
    <p>Assumptions Disks SSDs</p>
    <p>Sequential accesses much faster than random</p>
    <p>No write amplification</p>
    <p>Little background activity</p>
    <p>Media does not wear down</p>
    <p>Distant LBNs lead to longer access time</p>
    <p>Implications  Need to modify storage stack for SSDs ?</p>
  </div>
  <div class="page">
    <p>Results</p>
    <p>Modifications to tune storage stack for SSDs  Cope with violated assumptions</p>
    <p>Rich interface to convey more information to device  IO priorities  Free blocks</p>
    <p>More functionality in device  Low level block management</p>
    <p>Possible Solution  Object based storage (OSD)</p>
  </div>
  <div class="page">
    <p>Talk outline</p>
    <p>SSD benchmarking  Case studies</p>
    <p>Write amplification  Background activity  Device wear-down</p>
    <p>Object-based storage  Related work  Conclusion</p>
  </div>
  <div class="page">
    <p>SSD benchmarking</p>
    <p>Used a range of SSDs for experimentation  Engineering samples and pre-production samples  Used both SLC and MLC-based SSDs  Anonymized the SSDs as S1, S2, S3, S4</p>
    <p>Performed read/write experiments on  HDD: Seagate Barracuda 7200.11 drive  SSD samples</p>
  </div>
  <div class="page">
    <p>SSD benchmarking results</p>
    <p>Random-reads fast in SSDs  Random-writes getting better with FTL techniques</p>
    <p>Device Read (MB/s) Write (MB/s)</p>
    <p>Seq Rand Ratio Seq Rand Ratio</p>
    <p>HDD 86 0.6 143 86 1.3 66 S1slc 205 18 11 169 53 3.1</p>
    <p>S2slc 40 4.4 9 32 0.1 328</p>
    <p>S3slc 72 29 2.4 75 0.5 151</p>
    <p>S4mlc 68 21 3.2 22 15 1.5</p>
  </div>
  <div class="page">
    <p>Talk outline</p>
    <p>SSD benchmarking  Case studies (3 violated assumptions)</p>
    <p>Write amplification  Background activity  Device wear-down</p>
    <p>Object-based storage  Related work  Conclusion</p>
  </div>
  <div class="page">
    <p>Methodology</p>
    <p>Measurement on real SSDs  File system traces from real</p>
    <p>machine  DiskSim simulator (PDL)</p>
    <p>Complete storage stack  Synthetic trace generator  External traces</p>
    <p>SSD module extension</p>
  </div>
  <div class="page">
    <p>Talk outline</p>
    <p>SSD benchmarking  Case studies</p>
    <p>Write amplification  Background activity  Device wear-down</p>
    <p>Object-based storage  Related work  Conclusion</p>
  </div>
  <div class="page">
    <p>Write amplification</p>
    <p>Low-end and medium-range SSDs</p>
    <p>Reasons  Write size &lt; stripe size  Physical page &lt; logical page</p>
  </div>
  <div class="page">
    <p>Write amplification in real device</p>
    <p>Th ro</p>
    <p>u g h p u t (M</p>
    <p>B /s</p>
    <p>)</p>
    <p>Write size (MB)</p>
    <p>SSD sample S2  32GB  Measurements taken on a</p>
    <p>real device  SSD sample S2  32GB</p>
    <p>(Low end SSD)  Experiment: Issued</p>
    <p>continuous writes of varying sizes</p>
    <p>Writes are striped  Stripe size: 1 MB</p>
    <p>Write amplification not seen in S1, S4</p>
  </div>
  <div class="page">
    <p>Write amplification improvement</p>
    <p>Violated assumption  No write amplification</p>
    <p>Proposed improvement  Merge requests along stripe boundary in device</p>
    <p>Case study implementation  Implemented logic in simulator SSD module  Run traces on modified simulator</p>
  </div>
  <div class="page">
    <p>Write amplification- Results</p>
    <p>N o rm</p>
    <p>a li ze</p>
    <p>d R</p>
    <p>es p o n se</p>
    <p>t im</p>
    <p>e</p>
    <p>Probability of sequential access</p>
    <p>Normalized response time</p>
    <p>Benchmark Improvement (%)</p>
    <p>Postmark 1.15</p>
    <p>TPCC 3.08</p>
    <p>Exchange 4.89</p>
    <p>IOzone 36.54</p>
    <p>Synthetic trace Real benchmark traces</p>
  </div>
  <div class="page">
    <p>Talk outline</p>
    <p>SSD benchmarking  Case studies</p>
    <p>Write amplification  Background activity  Device wear-down</p>
    <p>Object-based storage  Related work  Conclusion</p>
  </div>
  <div class="page">
    <p>Background activity</p>
    <p>Violated Assumption  Storage device passive - little or no background activity  SSD does cleaning and wear-leveling</p>
    <p>Problem  Host cant control background activity  Prevent effect of background operations on priority</p>
    <p>requests Proposed Improvement: Priority-aware cleaning</p>
    <p>Inform device about priorities  Device avoids background operations</p>
  </div>
  <div class="page">
    <p>Priority-aware cleaning - Implementation</p>
    <p>Methodology  DiskSim supports priority request queuing  Used synthetic trace generator  Modified simulator SSD module</p>
    <p>Improvement: Priority-aware cleaning  Two cleaning thresholds</p>
    <p>Low  Critical</p>
    <p>Outstanding priority requests  Clean only if below the critical watermark</p>
  </div>
  <div class="page">
    <p>Priority-aware cleaning - Results</p>
    <p>10% improvement in response time of priority requests</p>
    <p>Improvement at the cost of non-priority traffic</p>
    <p>R es</p>
    <p>p o n se</p>
    <p>t im</p>
    <p>e (</p>
    <p>m s)</p>
    <p>Write percentage</p>
    <p>Priority unaware cleaning Priority aware cleaning</p>
    <p>Priority requests</p>
    <p>Non- Priority requests</p>
    <p>R es</p>
    <p>p o n se</p>
    <p>t im</p>
    <p>e (</p>
    <p>m s)</p>
    <p>Write percentage</p>
    <p>Priority unaware cleaning</p>
    <p>Priority requests</p>
    <p>Non- Priority requests IO-Scheduling</p>
  </div>
  <div class="page">
    <p>Talk outline</p>
    <p>SSD benchmarking  Case studies</p>
    <p>Write amplification  Background activity  Device wear-down</p>
    <p>Object-based storage  Related work  Conclusion</p>
  </div>
  <div class="page">
    <p>Device wear-down</p>
    <p>Violated Assumption  Media does not wear down  SSD: Blocks have finite erase cycles</p>
    <p>Problem  Must reduce writes to blocks</p>
    <p>Proposed Improvement: Informed Cleaning  File system has free block information  Inform device about block freeing  Free blocks need not be copied in cleaning</p>
  </div>
  <div class="page">
    <p>Informed cleaning - Example</p>
    <p>File System 2,3,4,5,6,7,8,9</p>
    <p>Free block information</p>
    <p>File system used blocks</p>
  </div>
  <div class="page">
    <p>Informed cleaning - Implementation</p>
    <p>Methodology  Used postmark benchmark traces</p>
    <p>from real machine  Intercepted block-free calls at</p>
    <p>pseudo driver below FS  Generate real traces with free</p>
    <p>block information Improvement: Informed Cleaning</p>
    <p>Modified simulator SSD module  Track freed blocks  Skip copying free blocks for</p>
    <p>reclamation</p>
  </div>
  <div class="page">
    <p>Informed cleaning - Results</p>
    <p>Cleaning efficiency  One-third pages moved  Cleaning efficiency</p>
    <p>improved by factor of 3  Device lifetime improved</p>
    <p>Cleaning time  30 to 40 % improvement  Response time improved 0</p>
    <p># P</p>
    <p>a g es</p>
    <p>m ov</p>
    <p>ed (</p>
    <p>th o u sa</p>
    <p>n d s)</p>
    <p># transactions (postmark)</p>
    <p>without free info with free info</p>
  </div>
  <div class="page">
    <p>Summary of improvements</p>
    <p>Write amplification  Need stripe size from device</p>
    <p>Background activity (Priority aware cleaning)  Need IO priority information from OS</p>
    <p>Device wear-down (Informed cleaning)  Need free block information from FS</p>
    <p>Need richer interface</p>
  </div>
  <div class="page">
    <p>Possible solution</p>
    <p>SSD has intricate knowledge of its internals  Amount of parallelism</p>
    <p>Ganging ?  Shared bus and/or shared data ?</p>
    <p>Logical to physical mapping  Super-paging ?  Striping ?</p>
    <p>Internal background operations  When cleaning and wear-leveling ?  Separate unit for cleaning ?</p>
    <p>Solution:  Rich interface to convey higher level semantics  Device handles block management</p>
  </div>
  <div class="page">
    <p>SSD as OSD</p>
    <p>OSD manages space for objects  Informed cleaning  Stripe aligned accesses  Logical to physical mapping</p>
    <p>OSD has object attributes  Wear-leveling using cold data information  Priority assigned to objects</p>
    <p>OSD handles low-level operations  Block management in SSD</p>
  </div>
  <div class="page">
    <p>Related work</p>
    <p>Design tradeoffs for SSDs  MEMS-based storage devices and standard disk</p>
    <p>interfaces  Operating system management of MEMS based</p>
    <p>storage devices  Bridging the information gap in storage protocol stacks  Non-Volatile Memory Host Controller Interface 1.0  Object-based storage  Track-aligned extents</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Revisited storage specific assumptions for SSDs  Several assumptions violated</p>
    <p>Proposed improvements to tune storage stack for SSDs</p>
    <p>Need for richer interface  More functionality in devices  One possible solution: OSD</p>
    <p>Understands high-level semantics  Handles low-level operations</p>
  </div>
  <div class="page">
    <p>Questions</p>
  </div>
</Presentation>
