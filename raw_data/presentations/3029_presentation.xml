<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Yunqi Zhang, George Prekas, Giovanni Matteo Fumarola, Marcus Fontoura, igo Goiri, Ricardo Bianchini</p>
  </div>
  <div class="page">
    <p>Datacenters are underutilized</p>
    <p>Datacenters are massive</p>
    <p>Overprovision resources</p>
    <p>Low tail latency requirement</p>
    <p>Provisioned for peak load</p>
    <p>Unexpected load spikes and failures</p>
    <p>Underutilization wastes money Server Utilization Distribution of a Google Cluster.</p>
  </div>
  <div class="page">
    <p>Harvesting spare resources</p>
    <p>Interactive services + batch</p>
    <p>Low priority batch tasks</p>
    <p>Find safe co-locations</p>
    <p>Cluster-level</p>
    <p>Performance isolation</p>
    <p>Server-level</p>
  </div>
  <div class="page">
    <p>Time</p>
    <p>U til</p>
    <p>iz at</p>
    <p>io n</p>
    <p>Challenges</p>
    <p>Data unavailable  Data loss</p>
    <p>Task killing</p>
    <p>Interactive services own the servers  Resource availability dynamics</p>
    <p>Data storage co-location</p>
  </div>
  <div class="page">
    <p>Time</p>
    <p>U til</p>
    <p>iz at</p>
    <p>io n</p>
    <p>Challenges</p>
    <p>Data unavailable  Data loss</p>
    <p>Task killing</p>
    <p>Interactive services own the servers  Resource availability dynamics</p>
    <p>Data storage co-location</p>
    <p>Distributed data analytics across servers</p>
  </div>
  <div class="page">
    <p>Goals</p>
    <p>Improve efficiency without sacrificing QoS</p>
    <p>Minimize the probability of killing batch tasks</p>
    <p>Maximize data availability and durability</p>
  </div>
  <div class="page">
    <p>Batch task scheduling</p>
    <p>Time</p>
    <p>U til</p>
    <p>iz at</p>
    <p>io n</p>
    <p>Can we learn anything from history?</p>
  </div>
  <div class="page">
    <p>Batch task scheduling</p>
    <p>Periodic</p>
    <p>Constant</p>
    <p>Unpredictable</p>
    <p>Fourier Transform</p>
    <p>Daily pattern</p>
  </div>
  <div class="page">
    <p>History-based task scheduling</p>
    <p>Time U</p>
    <p>til iz</p>
    <p>at io</p>
    <p>n</p>
    <p>Time</p>
    <p>U til</p>
    <p>iz at</p>
    <p>io nLong Jobs</p>
    <p>Medium Jobs</p>
    <p>Short Jobs</p>
    <p>Constant  1  MAX(Peak, Current)</p>
    <p>Periodic  1  MAX(Average, Current)</p>
    <p>Unpredictable  1  Current</p>
    <p>Time</p>
    <p>U til</p>
    <p>iz at</p>
    <p>io n</p>
    <p>headroom</p>
    <p>headroom</p>
    <p>headroom</p>
  </div>
  <div class="page">
    <p>Data storage co-location</p>
    <p>Data availability Data durability</p>
    <p>Diverse in utilization pattern. Diverse in reimaging pattern.</p>
  </div>
  <div class="page">
    <p>History-based replica placement</p>
    <p>(Data Durability)</p>
    <p>(D at</p>
    <p>a Av</p>
    <p>ai la</p>
    <p>bi lit</p>
    <p>y)</p>
    <p>Disk Reimage Rate</p>
    <p>Pe ak</p>
    <p>U til</p>
    <p>iz at</p>
    <p>io n</p>
  </div>
  <div class="page">
    <p>History-based replica placement</p>
    <p>(Data Durability)</p>
    <p>(D at</p>
    <p>a Av</p>
    <p>ai la</p>
    <p>bi lit</p>
    <p>y)</p>
    <p>Disk Reimage Rate</p>
    <p>Pe ak</p>
    <p>U til</p>
    <p>iz at</p>
    <p>io n</p>
  </div>
  <div class="page">
    <p>History-based replica placement</p>
    <p>(Data Durability)</p>
    <p>(D at</p>
    <p>a Av</p>
    <p>ai la</p>
    <p>bi lit</p>
    <p>y)</p>
    <p>Disk Reimage Rate</p>
    <p>Pe ak</p>
    <p>U til</p>
    <p>iz at</p>
    <p>io n</p>
  </div>
  <div class="page">
    <p>System implementation</p>
    <p>Clustering service  Extract utilization and reimaging patterns</p>
    <p>YARN-H  Protect interactive services by killing batch tasks</p>
    <p>Tez-H  History-based batch task scheduling</p>
    <p>HDFS-H  History-based replica placement  Protect interactive services by denying accesses</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Real-system deployment  102-server cluster  Interactive service: Lucene with utilization trace  Batch task: TPC-DS queries on Hive</p>
    <p>Large-scale simulation  Trace from 10 production datacenters at Microsoft  Full datacenters for one month</p>
    <p>Production environment deployment  Data replica placement</p>
  </div>
  <div class="page">
    <p>Batch task scheduling -- real system</p>
    <p>Degrading interactive service</p>
  </div>
  <div class="page">
    <p>Batch task scheduling -- real system</p>
    <p>Kill batch tasks</p>
  </div>
  <div class="page">
    <p>Batch task scheduling -- real system</p>
  </div>
  <div class="page">
    <p>Batch task scheduling -- simulation</p>
    <p>Up to 90% improvement  32% improvement on average</p>
  </div>
  <div class="page">
    <p>Replica placement -- durability</p>
    <p>Deployed to thousands of production servers for almost a year  Eliminated data losses except minor bugs and not enough diversity</p>
    <p>&gt;2 orders of magnitude improvement  Higher durability with fewer replicas</p>
  </div>
  <div class="page">
    <p>Lessons learned from deployment</p>
    <p>Placement diversity and disk space utilization</p>
    <p>Synchronous operations and unavailability</p>
    <p>Simplicity is critical in production systems</p>
    <p>More lessons in the paper</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>History-based resource harvesting</p>
    <p>Resource utilization dynamics</p>
    <p>Data storage co-location</p>
    <p>Complex data analytics distributed across servers</p>
    <p>Significantly improve datacenter efficiency</p>
    <p>Deployed in production datacenters</p>
    <p>Contributed to open-source community</p>
  </div>
  <div class="page">
    <p>Yunqi Zhang, George Prekas, Giovanni Matteo Fumarola, Marcus Fontoura, igo Goiri, Ricardo Bianchini</p>
  </div>
</Presentation>
