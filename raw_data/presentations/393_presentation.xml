<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Experiences with Tracing Causality in Networked Services</p>
    <p>Rodrigo Fonseca, Brown</p>
    <p>Michael Freedman, Princeton</p>
    <p>George Porter, UCSD</p>
    <p>April 2010</p>
    <p>INM/WREN</p>
    <p>San Jose, CA</p>
  </div>
  <div class="page">
    <p>Which way to Bangalore?</p>
  </div>
  <div class="page">
    <p>TroubleshooOng Networked Systems</p>
    <p>Hard to develop, debug, deploy, troubleshoot  No standard way to integrate debugging, monitoring, diagnosOcs</p>
  </div>
  <div class="page">
    <p>Status quo: device centric</p>
    <p>...</p>
    <p>... 28 03:55:38 PM fire... 28 03:55:38 PM fire... 28 03:55:38 PM fire... 28 03:55:38 PM fire... 28 03:55:38 PM fire... 28 03:55:38 PM fire... 28 03:55:38 PM fire... 28 03:55:39 PM fire... 28 03:55:39 PM fire... 28 03:55:39 PM fire... 28 03:55:39 PM fire... 28 03:55:39 PM fire... 28 03:55:39 PM fire... 28 03:55:39 PM fire... 28 03:55:39 PM fire... ...</p>
    <p>...</p>
    <p>... [04:03:23 2006] [noOce] Dispatch s1... [04:03:23 2006] [noOce] Dispatch s2... [04:04:18 2006] [noOce] Dispatch s3... [04:07:03 2006] [noOce] Dispatch s1... [04:10:55 2006] [noOce] Dispatch s2... [04:03:24 2006] [noOce] Dispatch s3... [04:04:47 2006] [crit] Server s3 down... ... ...</p>
    <p>...</p>
    <p>... 72.30.107.159 - - [20/Aug/2006:09:12:58 -0700] &quot;GET /ga 65.54.188.26 - - [20/Aug/2006:09:13:32 -0700] &quot;GET /rob 65.54.188.26 - - [20/Aug/2006:09:13:32 -0700] &quot;GET /rob 65.54.188.26 - - [20/Aug/2006:09:13:32 -0700] &quot;GET /gal 65.54.188.26 - - [20/Aug/2006:09:13:32 -0700] &quot;GET /gal 66.249.72.163 - - [20/Aug/2006:09:15:04 -0700] &quot;GET /ga 66.249.72.163 - - [20/Aug/2006:09:15:07 -0700] &quot;GET /ga 66.249.72.163 - - [20/Aug/2006:09:15:10 -0700] &quot;GET /ro 66.249.72.163 - - [20/Aug/2006:09:15:11 -0700] &quot;GET /ga ... ...</p>
    <p>...</p>
    <p>... 72.30.107.159 - - [20/Aug/2006:09:12:58 -0700] &quot;GET /ga 65.54.188.26 - - [20/Aug/2006:09:13:32 -0700] &quot;GET /rob 65.54.188.26 - - [20/Aug/2006:09:13:32 -0700] &quot;GET /rob 65.54.188.26 - - [20/Aug/2006:09:13:32 -0700] &quot;GET /gal 65.54.188.26 - - [20/Aug/2006:09:13:32 -0700] &quot;GET /gal 66.249.72.163 - - [20/Aug/2006:09:15:04 -0700] &quot;GET /ga 66.249.72.163 - - [20/Aug/2006:09:15:07 -0700] &quot;GET /ga 66.249.72.163 - - [20/Aug/2006:09:15:10 -0700] &quot;GET /ro 66.249.72.163 - - [20/Aug/2006:09:15:11 -0700] &quot;GET /ga ... ...</p>
    <p>...</p>
    <p>... LOG: statement: select oid... LOG: statement: SELECT COU... LOG: statement: SELECT g2_... LOG: statement: select oid... LOG: statement: SELECT COU... LOG: statement: SELECT g2_... LOG: statement: select oid... LOG: statement: SELECT COU... LOG: statement: SELECT g2_... LOG: statement: select oid... LOG: statement: select oid... LOG: statement: SELECT COU... LOG: statement: SELECT g2_... LOG: statement: select oid... LOG: statement: SELECT COU... LOG: statement: SELECT g2_... LOG: statement: select oid... ... ...</p>
    <p>Firewall</p>
    <p>Load Balancer</p>
    <p>Web 1</p>
    <p>Web 2</p>
    <p>Database</p>
  </div>
  <div class="page">
    <p>Status quo: device centric</p>
    <p>Determining paths:  Join logs on Ome and ad-hoc idenOfiers</p>
    <p>Relies on  well synchronized clocks  extensive applicaOon knowledge</p>
    <p>Requires all operaOons logged to guarantee complete paths</p>
  </div>
  <div class="page">
    <p>This talk</p>
    <p>Causality Tracking: an alternaOve  Many previous frameworks:</p>
    <p>X-Trace, PIP, Whodunit, Magpie, Googles Dapper  Experiences integraOng and using X-Trace</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Tracing causality with X-Trace  Case studies</p>
    <p>802.1X AuthenOcaOon Service  CoralCDN and OASIS anycast service</p>
    <p>Challenges  Conclusion</p>
  </div>
  <div class="page">
    <p>X-Trace</p>
    <p>X-Trace records events in a distributed execuOon and their causal relaOonship</p>
    <p>Events are grouped into tasks  Well defined starOng event and all that is causally related</p>
    <p>Each event generates a report, binding it to one or more preceding events</p>
    <p>Captures full happens-before relaOon</p>
  </div>
  <div class="page">
    <p>X-Trace Output</p>
    <p>Task graph capturing task execuOon  Nodes: events across layers, devices  Edges: causal relaOons between events</p>
    <p>IP IP</p>
    <p>Router IP</p>
    <p>Router IP</p>
    <p>TCP 1 Start</p>
    <p>TCP 1 End</p>
    <p>IP IP</p>
    <p>Router IP</p>
    <p>TCP 2 Start</p>
    <p>TCP 2 End</p>
    <p>HTTP Proxy</p>
    <p>HTTP Server</p>
    <p>HTTP Client</p>
  </div>
  <div class="page">
    <p>Each event uniquely idenOfied within a task: [TaskId, EventId]</p>
    <p>[TaskId, EventId] propagated along execuOon path  For each event create and log an X-Trace report</p>
    <p>Enough info to reconstruct the task graph</p>
    <p>Basic Mechanism</p>
    <p>IP IP</p>
    <p>Router IP</p>
    <p>Router IP</p>
    <p>TCP 1 Start</p>
    <p>TCP 1 End</p>
    <p>IP IP</p>
    <p>Router IP</p>
    <p>TCP 2 Start</p>
    <p>TCP 2 End</p>
    <p>HTTP Proxy</p>
    <p>HTTP Server</p>
    <p>HTTP Client</p>
    <p>f h b</p>
    <p>a g</p>
    <p>m</p>
    <p>n</p>
    <p>c d e i j k l</p>
    <p>[T, g] [T, a]</p>
    <p>[T, a] X-Trace Report TaskID: T EventID: g Edge: from a, f</p>
  </div>
  <div class="page">
    <p>X-Trace Library API</p>
    <p>Handles propagaOon within app  Threads / event-based (e.g., libasync)  Akin to a logging API:</p>
    <p>Main call is logEvent(message)  Library takes care of event id creaOon, binding, reporOng, etc</p>
    <p>ImplementaOons in C++, Java, Ruby, Javascript</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Tracing causality with X-Trace  Case studies</p>
    <p>802.1X AuthenOcaOon Service  CoralCDN and OASIS anycast service</p>
    <p>Challenges  Conclusion</p>
  </div>
  <div class="page">
    <p>Client</p>
    <p>AuthenOcator e.g. Acc. Point</p>
    <p>Auth Server RADIUS</p>
    <p>IdenOty Store e.g. LDAP</p>
    <p>EAP L2</p>
    <p>RADIUS Over UDP</p>
    <p>LDAP</p>
    <p>IdenOfied 5 common authenOcaOon issues from vendor logs</p>
    <p>Added a few X-Trace instrumentaOon points sufficient to differenOate these faults</p>
    <p>Introduced faults in a test environment</p>
  </div>
  <div class="page">
    <p>InstrumentaOon was easy:  Nested invocaOons  No in-task concurrency  Extensible protocols (RADIUS, LDAP)  Modular, request-oriented server somware</p>
  </div>
  <div class="page">
    <p>Misconfigured Firewall: no LDAP</p>
  </div>
  <div class="page">
    <p>Misconfigured Firewall: no LDAP  Miscalibrated Timeout Value</p>
    <p>Key: mulOple correlated vantage points  Can help tune Omeout values</p>
  </div>
  <div class="page">
    <p>CoralCDN and OASIS</p>
    <p>Instrumented producOon deployment  Heavy use of sampling:</p>
    <p>0.1% of requests to CoralCDN traced  Leveraged libasync, libarpc X-Trace instrumentaOon</p>
    <p>Much more complex program flow  E.g. windowed parallel RPC calls, variable Omeouts</p>
    <p>Found bugs, performance problems, clock skews</p>
  </div>
  <div class="page">
    <p>CoralCDN</p>
    <p>CoralCDN Distributed HTTP Cache</p>
  </div>
  <div class="page">
    <p>189s: Linux TCP Timeout connecting to origin 189 seconds</p>
    <p>CoralCDN Response Times</p>
  </div>
  <div class="page">
    <p>189s: Linux TCP Timeout connecting to origin</p>
    <p>Slow connection Proxy -&gt; Client</p>
    <p>CoralCDN Response Times</p>
  </div>
  <div class="page">
    <p>189s: Linux TCP Timeout connecting to origin</p>
    <p>Slow connection Proxy -&gt; Client</p>
    <p>Slow connection Origin -&gt; Proxy</p>
    <p>CoralCDN Response Times</p>
  </div>
  <div class="page">
    <p>189s: Linux TCP Timeout connecting to origin</p>
    <p>Slow connection Proxy -&gt; Client</p>
    <p>Slow connection Origin -&gt; Proxy</p>
    <p>Timeout in RPC, due to slow Planetlab node!</p>
    <p>Same symptoms, very different causes</p>
    <p>CoralCDN Response Times</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Brief X-Trace Intro  Case studies</p>
    <p>802.1X AuthenOcaOon Service  CoralCDN  OASIS Anycast Service</p>
    <p>Challenges  Conclusion</p>
  </div>
  <div class="page">
    <p>Hidden Channels  Example: CoralCDN DNS Calls</p>
    <p>foo</p>
    <p>DNS Resolver</p>
    <p>Send</p>
    <p>Receive</p>
    <p>*</p>
    <p>resolve(foo,*)</p>
    <p>Tasks</p>
    <p>A B</p>
    <p>C</p>
    <p>DNS resolve</p>
    <p>In general: deferral structures  E.g., queues, thread pools, conOnuaOons  Store metadata with the structure</p>
    <p>Omen encapsulated in libraries, high leverage</p>
  </div>
  <div class="page">
    <p>Incidental vs. SemanOc Concurrency</p>
    <p>Forks and joins tricky for nave instrumentaOon</p>
    <p>Non-intuiOve fork  Incorrect join</p>
    <p>start do(1) do(2) do(3) end</p>
    <p>done(1) done(2) done(3)</p>
  </div>
  <div class="page">
    <p>Incidental vs. SemanOc Concurrency</p>
    <p>Extra code annotaOon fixes the problem  Manually change parent of do() events</p>
    <p>start</p>
    <p>do(1)</p>
    <p>do(2)</p>
    <p>do(3)</p>
    <p>end</p>
    <p>done(1)</p>
    <p>done(2)</p>
    <p>done(3)</p>
  </div>
  <div class="page">
    <p>Incidental vs. SemanOc Concurrency</p>
    <p>Extra code annotaOon fixes the problem  Manually change parent of do() events  Manually add edges from done() to end</p>
    <p>start</p>
    <p>do(1)</p>
    <p>do(2)</p>
    <p>do(3)</p>
    <p>end</p>
    <p>done(1)</p>
    <p>done(2)</p>
    <p>done(3)</p>
  </div>
  <div class="page">
    <p>Dealing with Black Boxes</p>
    <p>Ideal scenario: all components instrumented with X-Trace  Log all events</p>
    <p>client proxy server</p>
  </div>
  <div class="page">
    <p>Dealing with Black Boxes</p>
    <p>Gray-box proxy: passes X-Trace metadata on  Log events on the client and server  Layering does this automaOcally</p>
    <p>client proxy server</p>
  </div>
  <div class="page">
    <p>Dealing with Black Boxes</p>
    <p>client proxy server</p>
    <p>Black box proxy: drops X-Trace metadata  No X-Trace events on proxy or server  Can always trace around black box, in client</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Brief X-Trace Intro  Case studies</p>
    <p>802.1X AuthenOcaOon Service  CoralCDN  OASIS Anycast Service</p>
    <p>Challenges  Conclusion</p>
  </div>
  <div class="page">
    <p>RevisiOng TroubleshooOng</p>
    <p>Device-centric Logs</p>
    <p>Depends on well syncd clocks</p>
    <p>Joins on ad-hoc idenOfiers</p>
    <p>Needs all ops logged for complete traces</p>
    <p>No modificaOons to exisOng code</p>
    <p>Task-centric traces</p>
    <p>Does not depend on clocks (can actually fix them)</p>
    <p>DeterminisOc joins on standardized ids</p>
    <p>Sample-based tracing possible</p>
    <p>Requires instrumentaOon</p>
  </div>
  <div class="page">
    <p>X-Trace InstrumentaOon</p>
    <p>InstrumenOng is easy in most cases  A few key libraries go a long way  Can be done iteraOvely</p>
    <p>Refining expectaOons (a la Pip)  ParOal annotaOon sOll useful  Independent instrumentaOon feasible  Huge benefits</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Simple, uniform task graphs useful in debugging, troubleshooOng, diagnosOcs</p>
    <p>InstrumentaOon is feasible</p>
    <p>Causal tracing should be a first-class concept in networked systems</p>
  </div>
  <div class="page">
    <p>Thank you</p>
    <p>More details on paper  For more info: www.x-trace.net</p>
    <p>www.coralcdn.org</p>
  </div>
</Presentation>
