<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>SelectiveEC: Selective Reconstruction in</p>
    <p>Erasure-coded Storage Systems</p>
    <p>Liangliang Xu, Min Lyu, Qiliang Li, Lingjiang Xie, and Yinlong Xu</p>
    <p>University of Science and Technology of China</p>
    <p>HotStorage 2020</p>
  </div>
  <div class="page">
    <p>Distributed Storage Systems (DSSes)</p>
    <p>Data is important</p>
    <p>Large scale</p>
    <p>Exponential growth</p>
    <p>DSSes are the core</p>
    <p>infrastructures</p>
    <p>Thousands of nodes</p>
    <p>Fat node</p>
    <p>Up to 72 TB of storage (about</p>
    <p>Frequent failures</p>
    <p>Disk</p>
    <p>faults</p>
    <p>Network</p>
    <p>failures</p>
    <p>Artificial</p>
    <p>errors</p>
    <p>Cluster</p>
    <p>crushed</p>
    <p>[1] ATC2019: Dayu: Fast and Low-interference Data Recovery in Very-large Storage Systems</p>
  </div>
  <div class="page">
    <p>Erasure Coding (EC)</p>
    <p>EC popularly adopted in DSSes</p>
    <p>Provide high reliability with low</p>
    <p>storage cost</p>
    <p>(k, m)-Reed Solomon (RS) codes</p>
    <p>k data chunks</p>
    <p>m parity chunks</p>
    <p>Tolerate any m nodes failures</p>
    <p>Client</p>
    <p>D0 D1 D2 P0 P1</p>
    <p>D0 D1 D2 P0 P1</p>
    <p>Node0 Node1 Node2 Node3 Node4</p>
    <p>Writing a (3,2)-RS stripe</p>
  </div>
  <div class="page">
    <p>Reconstruction</p>
    <p>Reconstructing a chunk of (3,2)-RS stripe</p>
    <p>D0 D1 D2 P0 P1</p>
    <p>Node0 Node1 Node2 Node3 Node4</p>
  </div>
  <div class="page">
    <p>Reconstruction</p>
    <p>Reconstructing a chunk of (3,2)-RS stripe</p>
    <p>D0 D1 D2 P0 P1</p>
    <p>Node0 Node1 Node2 Node3 Node4</p>
    <p>Node5</p>
    <p>D0</p>
  </div>
  <div class="page">
    <p>Reconstruction</p>
    <p>Reconstructing a chunk of (3,2)-RS stripe</p>
    <p>D0 D1 D2 P0 P1</p>
    <p>Node0 Node1 Node2 Node3 Node4</p>
    <p>Node5</p>
    <p>D0</p>
    <p>Reading chunks from source nodes</p>
  </div>
  <div class="page">
    <p>Reconstruction</p>
    <p>Reconstructing a chunk of (3,2)-RS stripe</p>
    <p>D0 D1 D2 P0 P1</p>
    <p>Node0 Node1 Node2 Node3 Node4</p>
    <p>Node5</p>
    <p>D0</p>
    <p>Reading chunks from source nodes  Transferring data in network</p>
  </div>
  <div class="page">
    <p>Reconstruction</p>
    <p>Reconstructing a chunk of (3,2)-RS stripe</p>
    <p>D0 D1 D2 P0 P1</p>
    <p>Node0 Node1 Node2 Node3 Node4</p>
    <p>Node5</p>
    <p>D0</p>
    <p>Reading chunks from source nodes  Transferring data in network  Decoding</p>
  </div>
  <div class="page">
    <p>Reconstruction</p>
    <p>Reconstructing a chunk of (3,2)-RS stripe</p>
    <p>D0 D1 D2 P0 P1</p>
    <p>Node0 Node1 Node2 Node3 Node4</p>
    <p>Node5</p>
    <p>D0</p>
    <p>Reading chunks from source nodes  Transferring data in network  Decoding  Writing decoded data</p>
  </div>
  <div class="page">
    <p>Breakdown of EC Reconstruction Time</p>
    <p>Network transferring contributes most to the reconstruction time</p>
    <p>Settings  28 nodes: 1NN + 27DNs</p>
    <p>quad-core 3.4 GHz Intel Core i5</p>
    <p>8GB RAM</p>
    <p>1T HDD</p>
    <p>1Gbps switch (30MB/s, 90MB/s</p>
    <p>or 150MB/s in Pangu[1])</p>
    <p>128MB chunk size</p>
    <p>Reconstructing a (3,2)-RS chunk in 1Gbps network</p>
    <p>[1] ATC2019: Dayu: Fast and Low-interference Data Recovery in Very-large Storage Systems</p>
    <p>Stages</p>
    <p>Reading</p>
    <p>chunks from</p>
    <p>source nodes</p>
    <p>Transferring</p>
    <p>data in</p>
    <p>network</p>
    <p>Decoding</p>
    <p>Writing</p>
    <p>decoded</p>
    <p>data</p>
    <p>Time</p>
    <p>Ratio 0.68% 85.23% 7.82% 6.27%</p>
  </div>
  <div class="page">
    <p>Random Data Layout</p>
    <p>Random distribution</p>
    <p>Load balance in a large amount of stripes</p>
    <p>Reconstruction batch by batch</p>
    <p>Limited network, disk I/O, CPU and memory resource</p>
    <p>Optimal batch size</p>
    <p># of live nodes</p>
    <p>Detailed analysis in the paper</p>
  </div>
  <div class="page">
    <p>Random Data Layout</p>
    <p>Nonuniform data layout in a batch</p>
    <p>Unbalanced upstream bandwidth occupation</p>
    <p>Node0 Node1 Node2 Node3 Node4 Node5 Node6 Node7</p>
    <p>Random data layout of (3,2)-RS stripes</p>
  </div>
  <div class="page">
    <p>Random Data Layout</p>
    <p>Nonuniform choices of replacement nodes</p>
    <p>Unbalanced downstream bandwidth occupation</p>
    <p>Node0 Node1 Node2 Node3 Node4 Node5 Node6 Node7</p>
    <p>Random data layout of (3,2)-RS stripes</p>
  </div>
  <div class="page">
    <p>Goals</p>
    <p>Balanced distribution of source nodes</p>
    <p>Node0 Node1 Node2 Node3 Node4 Node5 Node6 Node7</p>
    <p>Random data layout of (3,2)-RS stripes</p>
  </div>
  <div class="page">
    <p>Goals</p>
    <p>Balanced distribution of source nodes</p>
    <p>Balanced distribution of replacement nodes</p>
    <p>Node0 Node1 Node2 Node3 Node4 Node5 Node6 Node7</p>
    <p>Random data layout of (3,2)-RS stripes</p>
  </div>
  <div class="page">
    <p>SelectiveEC</p>
    <p>Schedule reconstruction tasks out of order</p>
    <p>Select source nodes dynamically</p>
    <p>Select replacement nodes dynamically</p>
  </div>
  <div class="page">
    <p>Graph Model</p>
    <p>Bipartite graph Gs = (T  N, E) for the selection of source nodes</p>
    <p>T: tasks, i.e. each having k+m-1 source nodes</p>
    <p>N: source nodes, i.e. all of live nodes</p>
    <p>(Ti, Nj)  E iff there is a chunk of stripe Ti in source node Nj</p>
    <p>Tasks</p>
    <p>Source nodes</p>
    <p>Connections of tasks</p>
    <p>and live nodes</p>
    <p>Nonuniform distribution</p>
    <p>of chunks</p>
    <p>Gs = (T  N, E) for (3, 2)-RS</p>
  </div>
  <div class="page">
    <p>Select k Source Nodes Dynamically</p>
    <p>Goal: balance upstream</p>
    <p>bandwidth occupation</p>
    <p>Using maximum flow to select k</p>
    <p>source nodes</p>
    <p>Construct a flow graph FGs</p>
    <p>Find a maximum flow</p>
    <p>Maximum flow value = 17</p>
    <p>No conflict in the chosen source</p>
    <p>connections</p>
  </div>
  <div class="page">
    <p>Schedule Reconstruction Tasks Out of Order</p>
    <p>Preparation work</p>
    <p>Find the most unsaturated task</p>
    <p>Compute an unsaturated list of source nodes</p>
    <p>Task to be replaced: T7  Unsaturated list: N5, N6, N7</p>
  </div>
  <div class="page">
    <p>Schedule Reconstruction Tasks Out of Order</p>
    <p>Schedule reconstruction tasks</p>
    <p>Scan the reconstruction queue</p>
    <p>Find a new task</p>
    <p>More connections with unsaturated list</p>
    <p>Update FGs  Find a maximum flow</p>
    <p>Maximum flow value = 19</p>
    <p>Replace a new task: T7</p>
  </div>
  <div class="page">
    <p>Schedule Reconstruction Tasks Out of Order</p>
    <p>Schedule reconstruction tasks</p>
    <p>Scan the reconstruction queue</p>
    <p>Find a new task</p>
    <p>More connections with unsaturated list</p>
    <p>Update FGs  Find a maximum flow</p>
    <p>Achieve more balanced upstream</p>
    <p>bandwidth occupation</p>
  </div>
  <div class="page">
    <p>Select Replacement Nodes Dynamically</p>
    <p>Construct bipartite graph Gr for the selection of replacement</p>
    <p>nodes</p>
    <p>Complement of Gs</p>
    <p>Find a perfect matching</p>
    <p>Easy to find in large-scale DSSes</p>
    <p>Achieve load balance of replacement nodes</p>
    <p>Balanced downstream bandwidth occupation</p>
    <p>Balanced disk I/O, CPU and memory usage</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Implement simulative prototype of SeletiveEC</p>
    <p>The simulations run in a server with</p>
    <p>Two 12-core Intel Xeon E5-2650 processors</p>
    <p>64GB DDR4 memory</p>
    <p>Linux 3.10.0</p>
    <p>(3,2)-RS stripes</p>
    <p># of chunks in a fat node</p>
    <p>100 times of the number of live nodes</p>
    <p>DRP: the degree of recovery parallelism</p>
  </div>
  <div class="page">
    <p>The First Batch</p>
    <p>For small scale, DRP of SelectiveEC are all bigger than 0.975</p>
    <p>For large scale, DRP of SelectiveEC improves the DRP up to 97.6%</p>
    <p>Small scale Large scale</p>
  </div>
  <div class="page">
    <p>Full Batches</p>
    <p>Around 0.97 for SelectiveEC</p>
    <p>Around 0.50 for random reconstruction</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>SelectiveEC, a balanced scheduling module</p>
    <p>Schedule reconstruction tasks out of order</p>
    <p>Select source nodes dynamically</p>
    <p>Select replacement nodes dynamically</p>
    <p>Improve the load balance for single failure recovery effectively</p>
    <p>Simulation results</p>
    <p>Improve the degree of recovery parallelism significantly</p>
    <p>Future work</p>
    <p>Deploy in practical systems</p>
    <p>Optimize the algorithms to support multiple failures</p>
  </div>
  <div class="page">
    <p>Thanks for your attention!</p>
    <p>Q&amp;A</p>
    <p>Liangliang Xu@USTC</p>
    <p>llxu@mail.ustc.edu.cn</p>
  </div>
</Presentation>
