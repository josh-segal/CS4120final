<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>A Semantic Framework for Data Analysis in Networked Systems</p>
    <p>Arun Viswanathan, Alefiya Hussain, Jelena Mirkovic, Stephen Schwab, John Wroclawski</p>
    <p>USC/Information Sciences Institute</p>
  </div>
  <div class="page">
    <p>Data Analysis in Networked Systems</p>
    <p>Is my hypothesis validated?</p>
    <p>Did my experiment</p>
    <p>run as expected?</p>
    <p>Why did failure X happen?</p>
    <p>Is there any evidence of a known</p>
    <p>attack?</p>
    <p>Alerts</p>
    <p>Packet Dumps</p>
    <p>Audit Logs</p>
    <p>Application Logs</p>
  </div>
  <div class="page">
    <p>Our Semantic Approach</p>
    <p>Semantic Analysis</p>
    <p>Framework</p>
    <p>Answers to Questions</p>
    <p>Packet dumps</p>
    <p>Webserver logs</p>
    <p>Auth logs</p>
    <p>Data collected from an execution</p>
    <p>of a system</p>
    <p>Models drive analysis over data!</p>
    <p>hypothesis? expectations</p>
    <p>met?</p>
    <p>failure X why?</p>
    <p>evidence of known attacks?</p>
    <p>Pose Questions</p>
    <p>?</p>
    <p>MODEL Captures user's</p>
    <p>high-level understanding</p>
    <p>of system</p>
    <p>MODELS Capture</p>
    <p>high-level understanding</p>
    <p>of system EXPERT</p>
  </div>
  <div class="page">
    <p>Approximate Lay of the Land</p>
    <p>Performance</p>
    <p>High</p>
    <p>Low</p>
    <p>Level of Analysis Abstraction</p>
    <p>Patterns</p>
    <p>Ex. wireshark, tcpdump,</p>
    <p>snort</p>
    <p>Queries</p>
    <p>Ex. SQL, Splunk</p>
    <p>Custom Hackery</p>
    <p>Ex. scripts, tools</p>
    <p>Logic-based Ex. temporal-logic</p>
    <p>specification for IDS, CTPL-logic</p>
    <p>for malware</p>
    <p>Languagebased</p>
    <p>Ex. Bro, SEC</p>
    <p>Low Higher</p>
  </div>
  <div class="page">
    <p>Approximate Lay of the Land</p>
    <p>Performance</p>
    <p>Levels of Analysis Abstractions</p>
    <p>Patterns</p>
    <p>Ex. wireshark, tcpdump,</p>
    <p>snort</p>
    <p>Queries</p>
    <p>Ex. SQL, Splunk</p>
    <p>Custom Hackery</p>
    <p>Ex. scripts, tools</p>
    <p>Logic-based Ex. temporal-logic</p>
    <p>specification for IDS, CTPL-logic</p>
    <p>for malware</p>
    <p>Languagebased</p>
    <p>Ex. Bro, SEC</p>
    <p>Key differences with other logic-based approaches</p>
    <p>Composable abstractions to capture semantics</p>
    <p>Expressive relationships for networked systems</p>
    <p>Semantic Analysis</p>
    <p>Framework</p>
    <p>Trade performance for expressiveness</p>
    <p>Low-level data details (low expressiveness,</p>
    <p>high performance, low reusability)</p>
    <p>Models (high expressiveness, usable performance,</p>
    <p>reusable)</p>
    <p>High</p>
    <p>Low</p>
    <p>Low Higher</p>
  </div>
  <div class="page">
    <p>Basics of our Modeling Approach</p>
    <p>Behavior (fundamental abstraction) Sequence or group of one or</p>
    <p>more related facts</p>
    <p>Complex Behaviors Related behaviors</p>
    <p>Models encode higher-level system semantics!</p>
    <p>FACTS</p>
    <p>DATA Multitype, multi</p>
    <p>variate, timestamped</p>
    <p>......</p>
    <p>(ex: FILE_OPEN, FILE_CLOSE, TCP_PACKET, ....</p>
    <p>Relationships are key Model</p>
    <p>Top-level behavior</p>
  </div>
  <div class="page">
    <p>Relationships in the Modeling Language</p>
    <p>A file open eventually leads to a file close</p>
    <p>Causality/Ordering Eventuality Invariance</p>
    <p>Synchrony/Timing</p>
    <p>Temporal Relationships</p>
    <p>Interval Temporal Operators</p>
    <p>HTTP_FLOW olap FTP_FLOW</p>
    <p>Dependency relationships b/w data</p>
    <p>attributes</p>
    <p>File open and file close are behaviors related by their filename.</p>
    <p>HTTP and FTP flows are concurrent.</p>
    <p>Parallelism Overlaps</p>
    <p>Concurrent Relationships</p>
    <p>FILE_OPEN ~&gt; FILE_CLOSE</p>
    <p>Temporal Operators</p>
    <p>FILE_CLOSE.name = FILE_OPEN.name</p>
    <p>EXPT_SUCCESS xor EXPT_FAIL</p>
    <p>Logical OperatorsLogical Relationships</p>
    <p>Experiment either succeeds or fails</p>
    <p>Combinations Exclusions</p>
  </div>
  <div class="page">
    <p>Cache Poisoning Behavior</p>
    <p>Real Nameserver (R)</p>
    <p>Victim Nameserver</p>
    <p>(V)</p>
    <p>Attacker (A)</p>
    <p>Steps 1-4 keep running in a loop.</p>
    <p>KEY ISSUES</p>
    <p>Attacker fails to poison cache due to</p>
    <p>(1) Race conditions with real nameserver.</p>
    <p>(2) Incorrectly GUESSED responses.</p>
    <p>Cache Poisioning Behavior (DNS Kaminsky) Objective: Attacker poisons the victim's</p>
    <p>DNS cache.</p>
  </div>
  <div class="page">
    <p>Tricky to analyze  Requires Expertise.</p>
    <p>Too many random values in the data to extract</p>
    <p>using simple patterns.</p>
    <p>Race conditions (timing issues) are hard to</p>
    <p>debug over 10's of thousands of packets.</p>
    <p>Many ways to fail.</p>
    <p>Analysis using typical approach</p>
  </div>
  <div class="page">
    <p>Model of Behavior</p>
    <p>SUCCESS = A guesses right and</p>
    <p>wins race with R</p>
    <p>Nodes: Simple behavior</p>
    <p>Arrows : Causal relationships</p>
    <p>Path (from root to leaf) : Complex Behaviors</p>
    <p>EXPERT</p>
  </div>
  <div class="page">
    <p>Model of Behavior</p>
    <p>SUCCESS = A guesses right and</p>
    <p>wins race with R</p>
    <p>TIMING_FAIL = A guesses right but</p>
    <p>loses race to R.</p>
    <p>EXPERT</p>
    <p>Nodes: Simple behavior</p>
    <p>Arrows : Causal relationships</p>
    <p>Path (from root to leaf) : Complex Behaviors</p>
  </div>
  <div class="page">
    <p>Model of Behavior</p>
    <p>SUCCESS = A guesses right and</p>
    <p>wins race with R</p>
    <p>Behavior Model = 1 SUCCESS +</p>
    <p>BADGUESS_1 = A guesses wrong</p>
    <p>response</p>
    <p>TIMING_FAIL = A guesses right but</p>
    <p>loses race to R.</p>
    <p>EXPERT Node: Simple behavior</p>
    <p>Arrows : Causal relationships</p>
    <p>Path (from root to leaf) : Complex Behaviors</p>
  </div>
  <div class="page">
    <p>Encoding the Model</p>
    <p>#3. Define Behavior Model (assertion to capture users understanding of system operation)</p>
    <p>VtoR_query = DNSREQRES.dns_req(sip=$AtoV_query.dip, dnsquesname=$AtoV_query.dnsquesname)</p>
    <p>TIMING_FAIL = (AtoV_query ~&gt; VtoR_query ~&gt; RtoV_resp ~&gt;AtoV_resp)</p>
    <p>DNSKAMINSKY = SUCCESS xor TIMING_FAIL xor BADGUESS_1 xor BADGUESS_2</p>
    <p>#1. Capture simple behaviors (to capture facts for each distinct attack step)</p>
    <p>#2. Relate simple behaviors to form complex behaviors</p>
    <p>(to capture the causal relationships between steps) 4 behaviors = 1 SUCCESS + 3 FAILURES</p>
  </div>
  <div class="page">
    <p>Analysis Using the Model</p>
    <p>Semantic Analysis Framework</p>
    <p>Semantic Analysis Framework</p>
    <p>[states] sB = {sip=$sA.dip,dip=$sA.sip}</p>
    <p>[behavior] b = sA ~&gt; sB</p>
    <p>[model] SUCCESS = b_1</p>
    <p>[states] sB = {sip=$sA.dip,dip=$sA.sip}</p>
    <p>[behavior] b = sA ~&gt; sB</p>
    <p>[model] SUCCESS = b_1</p>
    <p>DNS Kaminsky Behavior model</p>
    <p>DNS Data Behavior captured in</p>
    <p>Summary : DNSCACHEPOISON_TIMING_FAIL ======================== Total Matching Instances: 622 etype | timestamp | sip | dip | sport | dport | dnsid | dnsauth ----------------------------------------------------------------------------------------PKT_DNS | 1275515486 | 10.1.11.2 | 10.1.4.2 | 6916 | 53 | 47217 | PKT_DNS | 1275515486 | 10.1.4.2 | 10.1.6.3 | 32778 | 53 | 15578 | PKT_DNS | 1275515486 | 10.1.6.3 | 10.1.4.2 | 53 | 32778 | 15578 |realns.eby.com PKT_DNS | 1275515486 | 10.1.6.3 | 10.1.4.2 | 53 | 32778 | 47217 |fakens.fakeeby.com PKT_DNS | 1275515486 | 10.1.6.3 | 10.1.4.2 | 53 | 32778 | 47217 |fakens.fakeeby.com PKT_DNS | 1275515486 | 10.1.6.3 | 10.1.4.2 | 53 | 32778 | 47217 |fakens.fakeeby.com PKT_DNS | 1275515486 | 10.1.6.3 | 10.1.4.2 | 53 | 32778 | 47217 |fakens.fakeeby.com PKT_DNS | 1275515486 | 10.1.6.3 | 10.1.4.2 | 53 | 32778 | 47217 |fakens.fakeeby.com PKT_DNS | 1275515486 | 10.1.6.3 | 10.1.4.2 | 53 | 32778 | 47217 |fakens.fakeeby.com PKT_DNS | 1275515486 | 10.1.6.3 | 10.1.4.2 | 53 | 32778 | 47217 |fakens.fakeeby.com</p>
    <p>Answers in the form of facts satisfying the model.</p>
    <p>TIMING_FAIL (A loses the race against R)</p>
    <p>Did the poisoning succed or fail?</p>
    <p>EXPERT</p>
  </div>
  <div class="page">
    <p>Current Implementation and Performance</p>
    <p>Prototype algorithm for applying models over data.</p>
    <p>Algorithm performance</p>
    <p>O(N 2 ) worst-case performance</p>
    <p>Straight-forward</p>
    <p>Analysis Framework  Written in Python  SQLite-based storage backend</p>
    <p>Scalability and performance issues are under active investigation.</p>
  </div>
  <div class="page">
    <p>Applicability</p>
    <p>Broad range of event-based modeling in networked systems</p>
    <p>More examples in paper  Modeling hypotheses</p>
    <p>Ex. Validating DoS detection heuristics over traces</p>
    <p>Modeling a security threat  Ex. Model of a simple worm spread over IDS logs</p>
    <p>Modeling dynamic change  Ex. Model of changes in traffic rate due to attack.</p>
  </div>
  <div class="page">
    <p>Future Work</p>
    <p>Extend Modeling Capabities  Modeling probabilistic behavior  Modeling packet distributions</p>
    <p>Analysis Framework</p>
    <p>Scalability and performance  Reducing the computational complexity of correlations</p>
    <p>using dependent attributes.</p>
  </div>
  <div class="page">
    <p>Composing, Sharing and Reusing</p>
    <p>Public</p>
    <p>Knowledge Base of Models</p>
    <p>[states] sA = {sip=$1, dip=$2} sB = {sip=$sA.dip,dip=$sA.sip}</p>
    <p>[behavior] b = sA ~&gt; sB</p>
    <p>[model] SUCCESS = b_1</p>
    <p>[states] sA = {sip=$1, dip=$2} sB = {sip=$sA.dip,dip=$sA.sip}</p>
    <p>[behavior] b = sA ~&gt; sB</p>
    <p>[model] SUCCESS = b_1</p>
    <p>Abstract Behavior Models</p>
    <p>SHARE</p>
    <p>Semantic Analysis Framework enables data analysis at higher-levels of abstraction.</p>
    <p>Repository of expertise</p>
    <p>Exploratory data analysis</p>
    <p>Enable sharing and reuse of experiments</p>
    <p>DNSWORM</p>
    <p>DNS DNSKAMINSKY</p>
    <p>IP TCP PORTSCAN</p>
    <p>Composing models to create higher-level meaning</p>
    <p>Sharing and reusing expertise REUSE</p>
  </div>
  <div class="page">
    <p>Thank You!</p>
    <p>Our framework will soon be publicly available at http://thirdeye.isi.deterlab.net</p>
    <p>Please register on our mailing-list to stay in tune with release and updates</p>
  </div>
</Presentation>
