<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Realistic Graph Generation and Evolution Using</p>
    <p>Kronecker Multiplication</p>
    <p>Jurij Leskovec, CMU</p>
    <p>Deepay Chakrabarti, CMU/Yahoo</p>
    <p>Jon Kleinberg, Cornell</p>
    <p>Christos Faloutsos, CMU</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Graphs are everywhere  What can we do with</p>
    <p>graphs?  What patterns or</p>
    <p>laws hold for most real-world graphs?</p>
    <p>Can we build models of graph generation and evolution? Needle exchange</p>
    <p>networks of drug users</p>
    <p>Introduction</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Outline  Introduction  Static graph patterns  Temporal graph patterns  Proposed graph generation model</p>
    <p>Kronecker Graphs</p>
    <p>Properties of Kronecker Graphs  Stochastic Kronecker Graphs  Experiments  Observations and Conclusion</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Outline  Introduction  Static graph patterns  Temporal graph patterns  Proposed graph generation model</p>
    <p>Kronecker Graphs</p>
    <p>Properties of Kronecker Graphs  Stochastic Kronecker Graphs  Experiments  Observations and Conclusion</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Static Graph Patterns (1)</p>
    <p>Power Law degree distributions</p>
    <p>log(Degree)</p>
    <p>Many lowdegree nodes</p>
    <p>Few highdegree nodes</p>
    <p>Internet in December 1998</p>
    <p>Y=a*Xb</p>
    <p>lo g</p>
    <p>(C o</p>
    <p>u n</p>
    <p>t)</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Static Graph Patterns (2)</p>
    <p>Small-world</p>
    <p>[Watts, Strogatz]++  6 degrees of</p>
    <p>separation  Small diameter</p>
    <p>Effective diameter:  Distance at which 90%</p>
    <p>of pairs of nodes are reachable</p>
    <p>Hops #</p>
    <p>R e</p>
    <p>a c h</p>
    <p>a b</p>
    <p>le p</p>
    <p>a ir</p>
    <p>s</p>
    <p>Effective Diameter</p>
    <p>Epinions who-trustswhom social network</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Static Graph Patterns (3)</p>
    <p>Scree plot</p>
    <p>[Chakrabarti et al]  Eigenvalues of graph</p>
    <p>adjacency matrix follow a power law</p>
    <p>Network values (components of principal eigenvector) also follow a power-law Rank</p>
    <p>E ig</p>
    <p>e n</p>
    <p>va lu</p>
    <p>e</p>
    <p>Scree Plot</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Outline  Introduction  Static graph patterns  Temporal graph patterns  Proposed graph generation model</p>
    <p>Kronecker Graphs</p>
    <p>Properties of Kronecker Graphs  Stochastic Kronecker Graphs  Observations and Conclusion</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Temporal Graph Patterns  Conventional Wisdom:</p>
    <p>Constant average degree: the number of edges grows linearly with the number of nodes</p>
    <p>Slowly growing diameter: as the network grows the distances between nodes grow</p>
    <p>Recently found [Leskovec, Kleinberg and Faloutsos, 2005]:  Densification Power Law: networks are becoming</p>
    <p>denser over time  Shrinking Diameter: diameter is decreasing as the</p>
    <p>network grows</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Temporal Patterns  Densification  Densification Power Law</p>
    <p>N(t)  nodes at time t  E(t)  edges at time t</p>
    <p>Suppose that N(t+1) = 2 * N(t)</p>
    <p>Q: what is your guess for E(t+1) =? 2 * E(t)</p>
    <p>A: over-doubled!  But obeying the</p>
    <p>Densification Power Law N(t)</p>
    <p>E(t)</p>
    <p>Densification Power Law</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Temporal Patterns  Densification  Densification Power Law</p>
    <p>networks are becoming denser over time  the number of edges grows faster than the number of</p>
    <p>nodes  average degree is increasing</p>
    <p>Densification exponent a: 1  a  2:  a=1: linear growth  constant out-degree</p>
    <p>(assumed in the literature so far)  a=2: quadratic growth  clique</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Temporal Patterns  Diameter  Prior work on Power Law</p>
    <p>graphs hints at Slowly growing diameter:  diameter ~ O(log N)  diameter ~ O(log log N)</p>
    <p>Diameter Shrinks/Stabilizes over time  As the network grows the</p>
    <p>distances between nodes slowly decrease</p>
    <p>time [years]</p>
    <p>d ia</p>
    <p>m e</p>
    <p>te r</p>
    <p>Diameter over time</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Patterns hold in many graphs  All these patterns can be observed in many real</p>
    <p>life graphs:  World wide web [Barabasi]  On-line communities [Holme, Edling, Liljeros]  Who call whom telephone networks [Cortes]  Autonomous systems [Faloutsos, Faloutsos, Faloutsos]  Internet backbone  routers [Faloutsos, Faloutsos, Faloutsos]  Movie  actors [Barabasi]  Science citations [Leskovec, Kleinberg, Faloutsos]  Co-authorship [Leskovec, Kleinberg, Faloutsos]  Sexual relationships [Liljeros]  Click-streams [Chakrabarti]</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Problem Definition  Given a growing graph with nodes N1, N2,   Generate a realistic sequence of graphs that</p>
    <p>will obey all the patterns  Static Patterns</p>
    <p>Power Law Degree Distribution  Small Diameter  Power Law eigenvalue and eigenvector distribution</p>
    <p>Dynamic Patterns  Growth Power Law  Shrinking/Constant Diameters</p>
    <p>And ideally we would like to prove them</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Graph Generators  Lots of work</p>
    <p>Random graph [Erdos and Renyi, 60s]  Preferential Attachment [Albert and Barabasi, 1999]  Copying model [Kleinberg, Kumar, Raghavan, Rajagopalan</p>
    <p>and Tomkins, 1999]  Community Guided Attachment and Forest Fire Model</p>
    <p>[Leskovec, Kleinberg and Faloutsos, 2005]  Also work on Web graph and virus propagation [Ganesh et al,</p>
    <p>Satorras and Vespignani]++</p>
    <p>But all of these  Do not obey all the patterns  Or we are not able prove them</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Why is all this important?</p>
    <p>Simulations of new algorithms where real graphs are impossible to collect</p>
    <p>Predictions  predicting future from the past  Graph sampling  many real world graphs are</p>
    <p>too large to deal with  What if scenarios</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Outline  Introduction  Static graph patterns  Temporal graph patterns  Proposed graph generation model</p>
    <p>Kronecker Graphs</p>
    <p>Properties of Kronecker Graphs  Stochastic Kronecker Graphs  Observations and Conclusion</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Problem Definition  Given a growing graph with count of nodes</p>
    <p>N1, N2,   Generate a realistic sequence of graphs that</p>
    <p>will obey all the patterns</p>
    <p>Idea: Self-similarity  Leads to power laws  Communities within communities</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>There are many obvious (but wrong) ways</p>
    <p>Does not obey Densification Power Law  Has increasing diameter</p>
    <p>Kronecker Product is exactly what we need</p>
    <p>Recursive Graph Generation  There are many obvious (but wrong) ways</p>
    <p>Initial graph Recursive expansion</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Adjacency matrix</p>
    <p>Kronecker Product  a Graph</p>
    <p>Intermediate stage</p>
    <p>Adjacency matrix</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Kronecker Product  a Graph  Continuing multypling with G1 we obtain G4 and</p>
    <p>so on</p>
    <p>G4 adjacency matrix</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Kronecker Graphs  Formally:  We create the self-similar graphs</p>
    <p>recursively:  Start with a initiator graph G1 on N1</p>
    <p>nodes and E1 edges  The recursion will then product larger</p>
    <p>graphs G2, G3, Gk on N1k nodes  Since we want to obey Densification</p>
    <p>Power Law graph Gk has to have E1k edges</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Kronecker Product  Definition  The Kronecker product of matrices A and B is</p>
    <p>given by</p>
    <p>We define a Kronecker product of two graphs as a Kronecker product of their adjacency matrices</p>
    <p>N x M K x L</p>
    <p>N*K x M*L</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Kronecker Graphs  We propose a growing sequence of</p>
    <p>graphs by iterating the Kronecker product</p>
    <p>Each Kronecker multiplication exponentially increases the size of the graph</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Kronecker Graphs  Intuition  Intuition:</p>
    <p>Recursive growth of graph communities  Nodes get expanded to micro communities  Nodes in sub-community link among themselves and</p>
    <p>to nodes from different communities</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Outline  Introduction  Static graph patterns  Temporal graph patterns  Proposed graph generation model</p>
    <p>Kronecker Graphs</p>
    <p>Properties of Kronecker Graphs  Stochastic Kronecker Graphs  Experiments  Conclusion</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Problem Definition  Given a growing graph with nodes N1, N2,   Generate a realistic sequence of graphs that</p>
    <p>will obey all the patterns  Static Patterns</p>
    <p>Power Law Degree Distribution  Power Law eigenvalue and eigenvector distribution  Small Diameter</p>
    <p>Dynamic Patterns  Growth Power Law  Shrinking/stabilizing Diameters</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Problem Definition  Given a growing graph with nodes N1, N2,   Generate a realistic sequence of graphs that</p>
    <p>will obey all the patterns  Static Patterns</p>
    <p>Power Law Degree Distribution  Power Law eigenvalue and eigenvector distribution  Small Diameter</p>
    <p>Dynamic Patterns  Growth Power Law  Shrinking/stabilizing Diameters</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Properties of Kronecker Graphs  Theorem: Kronecker Graphs have</p>
    <p>Multinomial in- and out-degree distribution (which can be made to behave like a Power Law)</p>
    <p>Proof:  Let G1 have degrees d1, d2, , dN  Kronecker multiplication with a node of degree d</p>
    <p>gives degrees dd1, dd2, , ddN  After Kronecker powering Gk has multinomial</p>
    <p>degree distribution</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Eigen-value/-vector Distribution  Theorem: The Kronecker Graph has multinomial</p>
    <p>distribution of its eigenvalues</p>
    <p>Theorem: The components of each eigenvector in Kronecker Graph follow a multinomial distribution</p>
    <p>Proof: Trivial by properties of Kronecker multiplication</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Problem Definition  Given a growing graph with nodes N1, N2,   Generate a realistic sequence of graphs that</p>
    <p>will obey all the patterns  Static Patterns</p>
    <p>Power Law Degree Distribution</p>
    <p>Power Law eigenvalue and eigenvector distribution</p>
    <p>Small Diameter</p>
    <p>Dynamic Patterns  Growth Power Law  Shrinking/Stabilizing Diameters</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Problem Definition  Given a growing graph with nodes N1, N2,   Generate a realistic sequence of graphs that</p>
    <p>will obey all the patterns  Static Patterns</p>
    <p>Power Law Degree Distribution</p>
    <p>Power Law eigenvalue and eigenvector distribution</p>
    <p>Small Diameter</p>
    <p>Dynamic Patterns  Growth Power Law  Shrinking/Stabilizing Diameters</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Temporal Patterns: Densification  Theorem: Kronecker graphs follow a</p>
    <p>Densification Power Law with densification exponent</p>
    <p>Proof:  If G1 has N1 nodes and E1 edges then Gk has Nk = N1k</p>
    <p>nodes and Ek = E1k edges</p>
    <p>And then Ek = Nka</p>
    <p>Which is a Densification Power Law</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Constant Diameter  Theorem: If G1 has diameter d then graph Gk</p>
    <p>also has diameter d</p>
    <p>Theorem: If G1 has diameter d then q-effective diameter if Gk converges to d</p>
    <p>q-effective diameter is distance at which q% of the pairs of nodes are reachable</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Constant Diameter  Proof Sketch  Observation: Edges in Kronecker graphs:</p>
    <p>where X are appropriate nodes</p>
    <p>Example:</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Problem Definition  Given a growing graph with nodes N1, N2,   Generate a realistic sequence of graphs that</p>
    <p>will obey all the patterns  Static Patterns</p>
    <p>Power Law Degree Distribution</p>
    <p>Power Law eigenvalue and eigenvector distribution</p>
    <p>Small Diameter</p>
    <p>Dynamic Patterns Growth Power Law</p>
    <p>Shrinking/Stabilizing Diameters</p>
    <p>First and the only generator for which we can prove all the properties</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Outline  Introduction  Static graph patterns  Temporal graph patterns  Proposed graph generation model</p>
    <p>Kronecker Graphs</p>
    <p>Properties of Kronecker Graphs  Stochastic Kronecker Graphs  Experiments  Observations and Conclusion</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Kronecker Graphs  Kronecker Graphs have all desired properties  But they produce staircase effects</p>
    <p>We introduce a probabilistic version</p>
    <p>Stochastic Kronecker Graphs</p>
    <p>Degree Rank</p>
    <p>C o</p>
    <p>u n</p>
    <p>t</p>
    <p>E ig</p>
    <p>e n</p>
    <p>va lu</p>
    <p>e</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>How to randomize a graph?  We want a randomized version of</p>
    <p>Kronecker Graphs  Obvious solution</p>
    <p>Randomly add/remove some edges</p>
    <p>Wrong!  is not biased  adding random edges destroys degree</p>
    <p>distribution, diameter,</p>
    <p>Want add/delete edges in a biased way  How to randomize properly and maintain all</p>
    <p>the properties?</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Stochastic Kronecker Graphs  Create N1N1 probability matrix P1  Compute the kth Kronecker power Pk  For each entry puv of Pk include an</p>
    <p>edge (u,v) with probability puv</p>
    <p>P1</p>
    <p>Instance</p>
    <p>Matrix G2</p>
    <p>Pk</p>
    <p>flip biased</p>
    <p>coins</p>
    <p>Kronecker</p>
    <p>multiplication</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Outline  Introduction  Static graph patterns  Temporal graph patterns  Proposed graph generation model</p>
    <p>Kronecker Graphs</p>
    <p>Properties of Kronecker Graphs  Stochastic Kronecker Graphs  Experiments  Conclusion</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Experiments  How well can we match real graphs?</p>
    <p>Arxiv: physics citations:  30,000 papers, 350,000 citations  10 years of data</p>
    <p>U.S. Patent citation network  4 million patents, 16 million citations  37 years of data</p>
    <p>Autonomous systems  graph of internet  Single snapshot from January 2002  6,400 nodes, 26,000 edges</p>
    <p>We show both static and temporal patterns</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Arxiv  Degree Distribution</p>
    <p>Count Count Count</p>
    <p>D e</p>
    <p>g re</p>
    <p>e</p>
    <p>Real graph Deterministic</p>
    <p>Kronecker Stochastic Kronecker</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Arxiv  Scree Plot</p>
    <p>Rank Rank Rank</p>
    <p>E ig</p>
    <p>e n</p>
    <p>va lu</p>
    <p>e</p>
    <p>Real graph Deterministic</p>
    <p>Kronecker Stochastic Kronecker</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Arxiv  Densification</p>
    <p>Nodes(t) Nodes(t) Nodes(t)</p>
    <p>E d</p>
    <p>g e</p>
    <p>s</p>
    <p>Real graph Deterministic</p>
    <p>Kronecker Stochastic Kronecker</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Arxiv  Effective Diameter</p>
    <p>Nodes(t) Nodes(t) Nodes(t)</p>
    <p>D ia</p>
    <p>m e</p>
    <p>te r</p>
    <p>Real graph Deterministic</p>
    <p>Kronecker Stochastic Kronecker</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Arxiv citation network</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>U.S. Patent citations</p>
    <p>Static patterns Temporal patterns</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Autonomous Systems</p>
    <p>Static patterns</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>How to choose initiator G1?</p>
    <p>Open problem  Kronecker division/root  Work in progress</p>
    <p>We used heuristics  We restricted the space of all parameters</p>
    <p>Details are in the paper</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Outline  Introduction  Static graph patterns  Temporal graph patterns  Proposed graph generation model</p>
    <p>Kronecker Graphs</p>
    <p>Properties of Kronecker Graphs  Stochastic Kronecker Graphs  Experiments  Observations and Conclusion</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Observations  Generality</p>
    <p>Stochastic Kronecker Graphs include Erdos-Renyi model and RMAT graph generator as a special case</p>
    <p>Phase transitions  Similarly to Erdos-Renyi model Kronecker graphs</p>
    <p>exhibit phase transitions in the size of giant component and the diameter</p>
    <p>We think  additional properties will be easy to prove (clustering</p>
    <p>coefficient, number of triangles, )</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Conclusion (1)</p>
    <p>We propose a family of Kronecker Graph generators</p>
    <p>We use the Kronecker Product  We introduce a randomized version</p>
    <p>Stochastic Kronecker Graphs</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Conclusion (2)</p>
    <p>The resulting graphs have  All the static properties</p>
    <p>Heavy tailed degree distributions</p>
    <p>Small diameter</p>
    <p>Multinomial eigenvalues and eigenvectors</p>
    <p>All the temporal properties Densification Power Law</p>
    <p>Shrinking/Stabilizing Diameters</p>
    <p>We can formally prove these results</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Thank you!</p>
    <p>Questions?</p>
    <p>jure@cs.cmu.edu</p>
  </div>
  <div class="page">
    <p>School of Computer Science Carnegie Mellon</p>
    <p>Stochastic Kronecker Graphs  We define Stochastic Kronecker Graphs</p>
    <p>Start with N1N1 probability matrix P1 where pij denotes probability that edge (i,j) is</p>
    <p>present</p>
    <p>Compute the kth Kronecker power Pk  For each entry puv of Pk we include an edge</p>
    <p>(u,v) with probability puv</p>
  </div>
</Presentation>
