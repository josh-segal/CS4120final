<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Gabriele DAngelo</p>
    <p>joint work with</p>
    <p>Sandro Pifferi Ludovico Gardenghi</p>
    <p>Luciano Bononi</p>
    <p>University of Bologna Department of Computer Science</p>
    <p>Dallas (TX), 29/11/2004</p>
    <p>Design and Simulation of a Migrationbased Architecture for Massively</p>
    <p>Populated Internet Games</p>
  </div>
  <div class="page">
    <p>Presentation outline</p>
    <p>Gaming Architecture of MMORPGs</p>
    <p>Problem definition and migration based proposed solution</p>
    <p>Simulation model definition</p>
    <p>Migration mechanism and heuristics description</p>
    <p>Experimental results</p>
    <p>Conclusions and work in progress</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>In recent years many popular interactive computer games have</p>
    <p>gained online remote multiplayer functionalities</p>
    <p>Massive Multiplayer Online Role-Playing Games (MMORPGs)</p>
    <p>are the computer-based counterpart of the well-known Role</p>
    <p>Playing Games (RPGs)</p>
    <p>Big multiplayer games systems are usually based on a pool of</p>
    <p>servers, geographically distributed across one or more countries</p>
    <p>MMORPG servers usually have to manage hundreds, or even</p>
    <p>thousands of avatars co-existing in the same virtual world</p>
  </div>
  <div class="page">
    <p>Gaming Architecture of MMORPGs</p>
    <p>The typical MMORPGs gaming structure is a simple client-server</p>
    <p>The gaming protocol is usually a request/reply scheme: clients</p>
    <p>send commands to the servers, servers synchronize each other</p>
    <p>send replies to the clients</p>
    <p>The choice of the server is usually made in the following ways:</p>
    <p>a round-robin DNS entry, or</p>
    <p>the nearest server selection</p>
    <p>The concept of near server is usually intended as the</p>
    <p>geographically nearest to the client. Another solution is to</p>
    <p>connect to the topologically nearest server, i.e. the server</p>
    <p>reachable by traversing the minimum number of hops</p>
  </div>
  <div class="page">
    <p>Problem definition</p>
    <p>Due to the heterogeneous communication infrastructure and</p>
    <p>network asymmetries, some users may suffer slow, congested and</p>
    <p>unreliable Internet connections, while others may have access to</p>
    <p>fast and reliable links</p>
    <p>Failing to send a command, or sending it too late, may cause</p>
    <p>damages to the avatar evolution (death, injury, loss of resources)</p>
    <p>and may result in unjustified penalties for the player</p>
    <p>Users with high-latency or low-bandwidth Internet connections</p>
    <p>may be more disadvantaged than their opponents supported by</p>
    <p>fast connections</p>
  </div>
  <div class="page">
    <p>The proposed solution</p>
    <p>In the classical gaming implementations, each client chooses its</p>
    <p>server at the beginning of its session, and keeps using it until the</p>
    <p>end of the playing</p>
    <p>The fairness may be improved with the introduction of the</p>
    <p>dynamic migration of clients among servers</p>
    <p>The target of our modeling and simulation investigation will be a</p>
    <p>qualitative comparison between a classic gaming network</p>
    <p>infrastructure scenario and the same scenario with the effects of</p>
    <p>the migration mechanism</p>
  </div>
  <div class="page">
    <p>The simulated network model: a set of areas</p>
    <p>We assume the network is organized in a numbered set of Areas,</p>
    <p>roughly corresponding to big Autonomous Systems, Internet</p>
    <p>Service Provided Networks or Internet Carriers</p>
  </div>
  <div class="page">
    <p>The simulated network model: latency and transfer time</p>
    <p>We assume that transmission times are mainly determined by link</p>
    <p>bandwidth and link latency network parameters</p>
    <p>To each client and server host is assigned a connection class that</p>
    <p>identifies the connection type the host adopts (i.e. modem,</p>
    <p>xDSL..)</p>
    <p>The end-to-end latency is calculated as summation of intra-area</p>
    <p>and extra-area latencies and transfer time</p>
  </div>
  <div class="page">
    <p>Experimental latency distribution for ping times, inside the same</p>
    <p>area (measured between two hosts inside the GARR network)</p>
    <p>Experimental latency distribution for ping times, across two different</p>
    <p>areas (GARR &lt;-&gt; TeleGlobe)</p>
    <p>The simulated network model: latency distribution</p>
    <p>It could be</p>
    <p>approximated</p>
    <p>by a</p>
    <p>right-shifted</p>
    <p>lognormal</p>
    <p>distribution</p>
  </div>
  <div class="page">
    <p>The simulated server model</p>
    <p>To characterize the CPU computation time distributions of the servers</p>
    <p>(usually commercial and closed source) external observations has been</p>
    <p>made. The time passed from the arrival of a request to the server and the</p>
    <p>departure of the reply was measured</p>
  </div>
  <div class="page">
    <p>The migration mechanism</p>
    <p>There is no information to assist the client in making a good</p>
    <p>server choice at the beginning of the server session</p>
    <p>The migration mechanism would allow a client to disconnect from</p>
    <p>a server, and to connect to another server, while continuing to</p>
    <p>play in way transparent to the user</p>
    <p>One critical point is the design and implementation of the</p>
    <p>migration heuristic to assist clients in the decision to migrate</p>
    <p>Intuitively, the aim of the migration is to make the latency curve</p>
    <p>distribution of the clients as much homogeneous as possible</p>
  </div>
  <div class="page">
    <p>The migration heuristics</p>
    <p>The migration trigger: to migrate or not to migrate?</p>
    <p>Two approaches experimented:</p>
    <p>simple migration</p>
    <p>once every a fixed number of seconds the client sends a ping</p>
    <p>probe to the servers in the list. If a different server appears to</p>
    <p>be faster than the current one, then a migration process will be</p>
    <p>activated</p>
    <p>early migration</p>
    <p>in addition to the fixed time intervals evaluation, clients collects</p>
    <p>runtime statistics on the network round trip time by exploiting</p>
    <p>command/reply from/to the server. The client could try to</p>
    <p>anticipate the migration attempt.</p>
  </div>
  <div class="page">
    <p>Simulation tool and setup</p>
    <p>A dedicated simulator has been designed and implemented. The</p>
    <p>runtime is opportunely optimized for the RAM management in</p>
    <p>order to overcome the memory bottleneck in a massive simulation</p>
    <p>Monolithic, sequential, discrete event-based simulation</p>
    <p>The simulated scenario is composed by a network with 20 gaming</p>
    <p>servers and 2000 concurrent clients. It has been tuned with real</p>
    <p>world and literature based parameters</p>
    <p>A number ranging from 10 to 20 independent runs has been</p>
    <p>executed for each test in order to achieve good confidence level</p>
  </div>
  <div class="page">
    <p>Performance results</p>
    <p>The main performance index is the play time:</p>
    <p>how much a client has to wait for the reply after it has sent a</p>
    <p>request to the server</p>
    <p>The play time is composed by the time necessary for the client-to</p>
    <p>server communication and the time consumed by the server to</p>
    <p>compute the next state</p>
    <p>It is expressed in milliseconds (ms) and it is used to compare the</p>
    <p>fairness of a gaming infrastructure under many different</p>
    <p>scenarios</p>
    <p>We are interested in the distribution, average and variance of play</p>
    <p>times</p>
  </div>
  <div class="page">
    <p>Experimental results: no migration vs. simple migration</p>
    <p>The play times appear to be much more concentrated with migration on, instead of</p>
    <p>distributed around at lest 5 sets of distant local aggregation values</p>
  </div>
  <div class="page">
    <p>Experimental results: simple vs. early migration</p>
    <p>The simple migration mechanism gives the better results, with respect to the early</p>
    <p>migration scheme</p>
  </div>
  <div class="page">
    <p>Experimental results: all together</p>
  </div>
  <div class="page">
    <p>Experimental results: average play time</p>
  </div>
  <div class="page">
    <p>Experimental results: play time variance</p>
    <p>After the initial re-allocation phase, the original architecture (orange line) leads to higher</p>
    <p>variance value than the same architecture with the simple migration (blue line)</p>
  </div>
  <div class="page">
    <p>Experimental results: play time variance</p>
    <p>The early migration scheme has some difficulties when there are two or more servers</p>
    <p>with a very similar latency. This makes a subset of clients to swing between servers,</p>
    <p>introducing overheads and unbalanced loads on the servers</p>
  </div>
  <div class="page">
    <p>Conclusions and future work</p>
    <p>We propose and simulated an improved, migration based</p>
    <p>architecture for online multiplayer games, focused on MMORPGs</p>
    <p>with multiple replicated servers</p>
    <p>Work in progress</p>
    <p>more efficient migration and load balancing algorithms</p>
    <p>refinement of server-to-server communication protocols</p>
    <p>a new architecture integrated by a pool of proxies</p>
    <p>accepting connections from the clients and forwarding the</p>
    <p>requests to the right area server</p>
    <p>server side computation migration and replicated execution</p>
  </div>
  <div class="page">
    <p>Gabriele DAngelo &lt;gdangelo@cs.unibo.it&gt;</p>
    <p>joint work with</p>
    <p>Sandro Pifferi Ludovico Gardenghi</p>
    <p>Luciano Bononi</p>
    <p>University of Bologna Department of Computer Science</p>
    <p>Dallas (TX), 29/11/2004</p>
    <p>Design and Simulation of a Migrationbased Architecture for Massively</p>
    <p>Populated Internet Games</p>
  </div>
</Presentation>
