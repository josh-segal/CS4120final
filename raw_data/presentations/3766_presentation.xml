<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Micah Sherr, Matt Blaze, and Boon Thau Loo University of Pennsylvania</p>
    <p>USENIX Technical June 18th, 2009</p>
    <p>Veracity: Practical Secure Network Coordinates via Vote-Based Agreements</p>
  </div>
  <div class="page">
    <p>Network Coordinate Systems</p>
    <p>Network coordinate systems enable efficient network distance estimations without requiring pairwise measurements</p>
    <p>Coordinate system maps nodes to n-dimensional coordinates</p>
    <p>Distance between two peers' coordinates represents actual network distance (e.g., RTT) between them</p>
  </div>
  <div class="page">
    <p>Applications</p>
    <p>Support wide range of network services:  Proximity-based routing</p>
    <p>Neighbor selection in overlays</p>
    <p>Network-aware overlays</p>
    <p>Replica placement</p>
    <p>Anonymous path selection</p>
    <p>Detour routing</p>
    <p>E.g., Vuze BitTorrent client maintains million+ node coordinate system for efficient DHT traversal</p>
  </div>
  <div class="page">
    <p>Vulnerability to Attack</p>
    <p>Distributed coordinate systems easy to manipulate  10% malicious nodes  4.9X decrease in accuracy</p>
    <p>30% malicious nodes  11X decrease in accuracy</p>
  </div>
  <div class="page">
    <p>Veracity</p>
    <p>Security protection layer for coordinate systems  Lightweight</p>
    <p>No a priori trust required</p>
    <p>Amenable to realistic network conditions</p>
    <p>Fully distributed</p>
    <p>Intuition: Truthfulness of coordinates can be accurately assessed by independent peers with different vantage points</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Assumes no TIVs</p>
    <p>Fully distributed (no a priori trusted nodes or PKI)</p>
    <p>Supports dynamic neighborsets</p>
    <p>Does not depend on temporal or spatial locality heuristics</p>
    <p>PIC</p>
    <p>Secure coordinates</p>
    <p>[Kaafar et al.]</p>
    <p>RVivaldi</p>
    <p>Zage et al. CCS07</p>
    <p>VeracityVeracity</p>
  </div>
  <div class="page">
    <p>Coordinate Systems 101</p>
    <p>Many flavors: Vivaldi, PIC, etc.</p>
    <p>Iterative update mechanism:</p>
    <p>Node retrieves coordinate of random neighbor</p>
    <p>Node measures metric between itself and neighbor</p>
    <p>Updates local coordinate to minimize error function</p>
    <p>Embedding errors due to network triangle-inequality violations (TIVs)</p>
    <p>(-5,2) (6,2)</p>
    <p>(-6,2)</p>
  </div>
  <div class="page">
    <p>Coordinate Systems 101</p>
    <p>Embedding errors due to network triangleinequality violations (TIVs)</p>
    <p>Median error ratio: median of percentage difference between virtual and real distances between a node and all other nodes</p>
  </div>
  <div class="page">
    <p>Attacking Virtual Coordinate Systems</p>
    <p>Disorder attacks: decrease accuracy (and utility) of coordinate system</p>
    <p>Attack techniques:</p>
    <p>When queried, provide false coordinate</p>
    <p>When probed, delay measurement response</p>
    <p>Possible attack implications:</p>
    <p>Malicious hosts selected for routes, neighbors, or replicas</p>
    <p>Requests misrouted; false data returned in CDNs</p>
    <p>Partitioned DHTs</p>
  </div>
  <div class="page">
    <p>Veracity: A security layer that protects</p>
    <p>the accuracy of coordinate systems</p>
  </div>
  <div class="page">
    <p>Veracity Participants</p>
    <p>Publisher Investigator</p>
    <p>Advertises coordinate. May or may not be truthful</p>
    <p>Wants to use Publisher's coordinate to update local coordinate</p>
  </div>
  <div class="page">
    <p>Node Discovery</p>
    <p>Fully-distributed directory servicedirectory service used to locate peers</p>
    <p>Distributed directory server (e.g., DHT) must support:</p>
    <p>Each node calculates GUID as HASH(ip|port)</p>
    <p>DELIVER(g,m) : deliver message m to node whose globally unique identifier (GUID) is closest to g</p>
  </div>
  <div class="page">
    <p>Veracity's Two Protection Phases</p>
    <p>Phase I: Publisher coordinate verification</p>
    <p>Rejects inconsistent or inaccurate coordinates</p>
    <p>Phase II: Candidate coordinate verification</p>
    <p>Prevents delayed measurements after coordinate passes publisher coordinate verification</p>
  </div>
  <div class="page">
    <p>Publisher Coordinate Verification</p>
    <p>Investigator</p>
    <p>Publisher</p>
  </div>
  <div class="page">
    <p>Publisher Coordinate Verification: Publisher notifies VSet of coordinate</p>
    <p>Publisher updates his coordinate</p>
    <p>Step 1: Publisher computes his verification set (VSet), consisting of peers whose GUIDs are closest to h</p>
    <p>using the recurrence:</p>
    <p>h i = HASH(g) if i=1 HASH(h</p>
    <p>i -1) if i&gt;1</p>
  </div>
  <div class="page">
    <p>Publisher Coordinate Verification: Publisher notifies VSet of coordinate</p>
    <p>Step 2: Publisher sends its GUID g and new coordinate C to each VSet member via deliver</p>
  </div>
  <div class="page">
    <p>Publisher Coordinate Verification: VSet members assess Publisher's coordinate</p>
    <p>Each VSet member measures the RTT between itself and Publisher</p>
    <p>Each computes the error ratio: the % difference between the empirical (RTT) and coordinatebased distances:</p>
    <p>indicates VSet member's belief in the publisher's advertised coordinate</p>
    <p>VSet members store Publisher's advertised coordinate and its error ratio as evidence tuple</p>
    <p>C, 1</p>
    <p>C, 2</p>
    <p>C, 3</p>
    <p>e</p>
  </div>
  <div class="page">
    <p>Publisher Coordinate Verification: Investigator queries Publisher for coordinate</p>
    <p>Investigator queries Publisher for its coordinate</p>
    <p>Publisher returns its coordinate C ?</p>
    <p>C</p>
  </div>
  <div class="page">
    <p>Investigator uses the same recurrence</p>
    <p>h i = HASH(g) if i=1</p>
    <p>HASH(h i -1) if i&gt;1</p>
    <p>to compute Publisher's VSet</p>
    <p>Investigator requests evidence tuple from each VSet member</p>
    <p>Evidence tuples with incorrect coordinate are discarded</p>
    <p>Publisher Coordinate Verification: Investigator computes Publisher's VSet, requests evidence</p>
    <p>C, 1</p>
    <p>C, 2</p>
    <p>C, 3</p>
  </div>
  <div class="page">
    <p>If the number of evidence tuples having</p>
    <p>&lt; max  is at least R, then</p>
    <p>coordinate is accepted.</p>
    <p>Publisher Coordinate Verification: Investigator considers evidence</p>
  </div>
  <div class="page">
    <p>Publisher Coordinate Verification ensures that:</p>
    <p>Publisher must advertise consistent coordinate to VSet members and Investigator</p>
    <p>Publisher's coordinate must match VSet members' empirically measured RTTs</p>
    <p>But this is insufficient to protect a virtual coordinate system...</p>
    <p>Publisher behaves honestly, allowing coordinate to pass Publisher Coordinate Verification</p>
    <p>After verifying coordinate, Investigator measures RTT to Publisher</p>
    <p>Publisher delays Investigator's RTT probe</p>
    <p>(-7,2) (6,2)</p>
    <p>True latency: 13ms Delay latency: 2000ms</p>
    <p>(-934,2)</p>
  </div>
  <div class="page">
    <p>Candidate Coordinate Verification</p>
    <p>Investigator queries coordinates of random nodes (RSet)</p>
    <p>Conducts RTT measurement to each RSet member</p>
    <p>Computes new candidate coordinate C' using Publisher's verified coordinate</p>
    <p>Using current (C) and candidate coordinate (C'), computes error ratios E and E'</p>
    <p>If , Investigator replaces C with C'</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Accuracy in Absence of Attack</p>
    <p>Veracity functionality added to Bamboo DHT</p>
    <p>Median error ratios of 500 nodes from the King (pairwise latency) dataset</p>
    <p>Veracity increases median of median error ratios by just 4.6% (0.79ms)</p>
    <p>Median error ratios after stabilization</p>
  </div>
  <div class="page">
    <p>Resilience to Nave Attack  Malicious nodes report inconsistent and random</p>
    <p>coordinates and delay RTT probes by up to 2000ms  Worst case for Vivaldi</p>
    <p>Inconsistent coordinates easily detected by VSet</p>
  </div>
  <div class="page">
    <p>Resilience to Coordinated Attack  Malicious nodes (30% of network) randomly delay RTT</p>
    <p>probes and advertise false coordinates</p>
    <p>Malicious nodes offer supporting evidence (low error ratios) for other malicious nodes, no evidence for honest nodes</p>
  </div>
  <div class="page">
    <p>PlanetLab Deployment</p>
    <p>Installed on ~100 geographically diverse PlanetLab nodes</p>
  </div>
  <div class="page">
    <p>Communication Cost  Publisher Coordinate Verification and Candidate</p>
    <p>Coordinate Verification both impose linear communication overheads</p>
    <p>Cost of each deliver request is O(log N) Measured BW on PlanetLab Predicted BW using Log Regression (R2=0.99)</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Veracity effectively mitigates disorder attacks  Reduces Vivaldi's median error ratio by 88% when 30% of</p>
    <p>nodes are malicious and uncoordinated</p>
    <p>Even against coordinated attacks, Veracity reduces Vivaldi's error ratio by 70% when 30% are malicious</p>
    <p>Unlike existing approaches, Veracity  Does not rely on TIV assumptions</p>
    <p>Requires no centralized infrastructure</p>
    <p>Does not require a priori trust</p>
    <p>Veracity incurs minimal communication overhead and can be practically deployed</p>
  </div>
  <div class="page">
    <p>Micah Sherr, Matt Blaze, and Boon Thau Loo University of Pennsylvania</p>
    <p>USENIX Technical June 18th, 2009</p>
    <p>Veracity: Practical Secure Network Coordinates via Vote-Based Agreements</p>
  </div>
  <div class="page">
    <p>Backup slides</p>
  </div>
  <div class="page">
    <p>Rejected: VSet-only and/or RSet-only Veracity</p>
  </div>
  <div class="page">
    <p>Resilience to Repulsion and Isolation Attacks</p>
    <p>Malicious nodes partitioned into 3 coalitions</p>
    <p>Each coalition attempts to move victim node to far coordinate (-1000 in all dimensions)</p>
  </div>
  <div class="page">
    <p>DHT Security</p>
    <p>Veracity relies on reliability of deliver requests  DHT attacks: Sybil: register multiple identities to increase influence in network</p>
    <p>Eclipse: falsify routing update messages to corrupt DHT routing tables</p>
    <p>Routing: misroute or modify requests, or forge responses</p>
  </div>
  <div class="page">
    <p>DHT Security (2)</p>
    <p>Sybil attack countermeasures:  Distributed registration in which nodes vote on whether IP is</p>
    <p>allowed to join [Dinger'06]</p>
    <p>Use bootstrap graphs to generate trust profiles [Danezis'05]</p>
    <p>Cryptopuzzles [Borisov'06]</p>
    <p>Eclipse and Routing attack countermeasures:  Organize network into swarms; forward message only if lookup</p>
    <p>sent from majority of members of previous swarm [Fiat'05]</p>
    <p>Send via redundant routes [Castro'02]</p>
  </div>
  <div class="page">
    <p>Publisher Coordinate Verification: Publisher notifies VSet of coordinate</p>
    <p>Each publisher assigned a Verification Set (VSet) of peers whose GUIDs are closest to h</p>
    <p>determined using the</p>
    <p>recurrence:</p>
    <p>After updating his coordinate, publisher sends tuple to each VSet member via deliver</p>
    <p>g  publisher's GUID</p>
    <p>C  publisher's coordinate</p>
    <p>ip  publisher's IP+port</p>
    <p>g,C,ip</p>
    <p>Publisher VSet</p>
  </div>
  <div class="page">
    <p>Publisher Coordinate Verification: VSet members assess coordinate</p>
    <p>Each VSet member measures the RTT between itself and the publisher</p>
    <p>VSet members compute the error ratio:</p>
    <p>Error ratio reflects percentage difference between real and estimated distances</p>
    <p>Indicates VSet member's belief in the publisher's advertised coordinate</p>
    <p>VSet member stores evidence tuple (g,C,ip,)</p>
    <p>Publisher VSet</p>
    <p>RTT probes</p>
  </div>
  <div class="page">
    <p>Publisher Coordinate Verification: Investigator queries Publisher for coordinate</p>
    <p>Investigator queries Publisher for its coordinate.</p>
    <p>Publisher responds with claim tuple:</p>
    <p>g  publisher's GUID</p>
    <p>publisher's VSet size C  publisher's coordinate</p>
    <p>ip  publisher's network address</p>
    <p>Investigator Publisher</p>
    <p>(g,,C,ip)</p>
  </div>
  <div class="page">
    <p>Publisher Coordinate Verification: Investigator probes VSet for evidence</p>
    <p>Investigator calculates Publisher's VSet and queries each member for its evidence tuple</p>
    <p>Investigator VSet</p>
  </div>
  <div class="page">
    <p>VSet members return evidence tuples to Investigator</p>
    <p>If the number of evidence tuples having &lt; max   is at least R,</p>
    <p>then coordinate is accepted</p>
    <p>Investigator VSet</p>
    <p>(g,ip, 1...4</p>
    <p>)</p>
    <p>Publisher Coordinate Verification: Investigator considers VSet evidence</p>
  </div>
</Presentation>
