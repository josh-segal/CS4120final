<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Depletable Storage Systems</p>
    <p>Vijayan Prabhakaran Mahesh Balakrishnan, John Davis, Ted Wobber</p>
    <p>Microsoft Research, Silicon Valley</p>
  </div>
  <div class="page">
    <p>Depletable Storage Systems</p>
    <p>Traditional diskbased storage systems  Space is the primary resource constraint  E.g.: Quota on file servers, pricing model in cloud</p>
    <p>SSDbased storage systems  Also, limited by number of erasures  Space and write cycles</p>
    <p>Depletable storage systems  Limited lifetime  Measureable, predictable, relate to workload</p>
  </div>
  <div class="page">
    <p>Writelifetime of an SSD</p>
    <p>Writelifetime  Amount of data written during SSDs lifetime  Ideal: size x maximum erase cycles  E.g.: 80 GB x 5000 cycles = 400 TB</p>
    <p>Writelifetime in practice  Affected by firmware inefficiencies  Write amplification  Cleaning and wearleveling</p>
  </div>
  <div class="page">
    <p>Writelifetime Metrics</p>
    <p>SSD manufacturers address writelifetime</p>
    <p>SanDisks Longterm Data Endurance (LDE)  Includes write amplification and wearleveling</p>
    <p>Intels media wearout indicator  Percentage of lifetime left  Decreases from 100 to 1 as average erase cycles used</p>
    <p>increases to the rated maximum</p>
  </div>
  <div class="page">
    <p>Writelifetime Measurements  Simple experiment</p>
    <p>Create a 70 GB file in Intel X25M  Write certain size to a random offset</p>
  </div>
  <div class="page">
    <p>DepletionAware Functionalities</p>
    <p>Predictable device replacement based on lifetime  E.g., proactive RAID reconstruction</p>
    <p>New pricing model  Charge users based on writes as well</p>
    <p>New axis for comparison  Compare designs that reduce depletion</p>
    <p>New attack models  Depletion of lifetime attack</p>
  </div>
  <div class="page">
    <p>New Mechanisms and Algorithms</p>
    <p>Mechanisms  Track the writes  Attribute writes to appropriate applications  Control the writes</p>
    <p>Depletionaware resource management  New scheduling algorithms</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Layers in software stack  VFS, caching, journaling, I/O schedulers, volume manager,</p>
    <p>software/hardware RAID, device  Impact writes: Delay, Amplify, Reduce</p>
    <p>Media heterogeneity  MLC or SLC  Different priceperformance and erasure limits</p>
  </div>
  <div class="page">
    <p>Possible Solutions</p>
    <p>Track, Attribute, and Control  VM to isolate applications and their writes  Cloud already uses VM for isolation</p>
    <p>Beneath the VM  Minimize layers before issuing to SSD  Scheduling: allocate time quanta per VM [Argon]  May provide depletion isolation</p>
    <p>Heterogeneity: write credit  Ideal writelifetime / price  Intel X25M: (80GB x 5K erasures) / $220 = 1.78 TB per dollar  Intel X25E: (64GB x 100K erasures)/ $745 = 8.59 TB per dollar</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>SSD Focus: performance, reliability, lifetime  Propose to treat SSDs as depletable storage systems  Need new mechanisms and algorithms to enable new</p>
    <p>functionalities</p>
  </div>
</Presentation>
