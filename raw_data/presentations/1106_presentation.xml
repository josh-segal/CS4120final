<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Varys Protecting SGX Enclaves From Practical Side-Channel Attacks</p>
    <p>Oleksii Oleksenko, Bohdan Trach Robert Krahn, Andre Martin, Christof Fetzer Mark Silberstein</p>
  </div>
  <div class="page">
    <p>Key issue of the cloud:</p>
    <p>We cannot trust it</p>
  </div>
  <div class="page">
    <p>We cannot trust the cloud</p>
    <p>Thousands of employees  Legal obligations  Inf rastructure vulnerabilities</p>
  </div>
  <div class="page">
    <p>We cannot trust the cloud</p>
    <p>Thousands of employees  Legal obligations  Inf rastructure vulnerabilities</p>
  </div>
  <div class="page">
    <p>We cannot trust the cloud</p>
    <p>Thousands of employees  Legal obligations  Inf rastructure vulnerabilities</p>
  </div>
  <div class="page">
    <p>Privileged attack vectors</p>
    <p>Hosted process</p>
    <p>I'm Eve. I control the OS and Hypervisor</p>
  </div>
  <div class="page">
    <p>Privileged attack vectors: Network</p>
    <p>Hosted process</p>
    <p>Network traff ic</p>
    <p>Sending: SECRET</p>
  </div>
  <div class="page">
    <p>Privileged attack vectors: Network</p>
    <p>Hosted process</p>
    <p>Network traff ic</p>
    <p>Sending: SECRET</p>
    <p>I see: SECRET</p>
  </div>
  <div class="page">
    <p>Privileged attack vectors: Network</p>
    <p>Hosted process</p>
    <p>Network traff ic</p>
    <p>TLS</p>
    <p>I see: $%sdf%#</p>
    <p>Sending: SECRET</p>
  </div>
  <div class="page">
    <p>Privileged attack vectors: Memory</p>
    <p>Hosted process</p>
    <p>Memory</p>
    <p>Process's data:</p>
    <p>....</p>
    <p>..... SECRET....</p>
    <p>....</p>
    <p>Network traff ic</p>
    <p>I write SECRET to memory</p>
  </div>
  <div class="page">
    <p>Privileged attack vectors: Memory</p>
    <p>Hosted process</p>
    <p>Memory</p>
    <p>Process's data:</p>
    <p>....</p>
    <p>..... SECRET....</p>
    <p>....</p>
    <p>Network traff ic</p>
    <p>I read: SECRET</p>
    <p>I write SECRET to memory</p>
  </div>
  <div class="page">
    <p>Privileged attack vectors: Memory</p>
    <p>Hosted process</p>
    <p>Memory</p>
    <p>Network traff ic</p>
    <p>I read: $%sdf%#</p>
    <p>SGX Enclave</p>
    <p>I write SECRET to memory</p>
  </div>
  <div class="page">
    <p>Privileged attack vectors: System Calls</p>
    <p>Hosted process</p>
    <p>OS</p>
    <p>Memory</p>
    <p>SGX Enclave Network</p>
    <p>traff ic</p>
    <p>System calls</p>
    <p>I request: mmap()</p>
  </div>
  <div class="page">
    <p>Privileged attack vectors: System Calls</p>
    <p>Hosted process</p>
    <p>OS</p>
    <p>Memory</p>
    <p>SGX Enclave Network</p>
    <p>traff ic</p>
    <p>System calls</p>
    <p>I request: mmap()</p>
    <p>I return: exploit</p>
  </div>
  <div class="page">
    <p>Privileged attack vectors: System Calls</p>
    <p>Hosted process</p>
    <p>OS</p>
    <p>Memory</p>
    <p>SGX Enclave Network</p>
    <p>traff ic</p>
    <p>System calls</p>
    <p>SCONE</p>
    <p>I request: mmap()</p>
    <p>I return: exploit</p>
    <p>Error!</p>
  </div>
  <div class="page">
    <p>Privileged attack vectors: Shared Resources</p>
    <p>Hosted process</p>
    <p>OS</p>
    <p>Memory</p>
    <p>SGX Enclave</p>
    <p>Caches Page Tables</p>
    <p>Network traff ic</p>
    <p>System calls</p>
    <p>SCONE</p>
    <p>I write to address: 0x123</p>
  </div>
  <div class="page">
    <p>Privileged attack vectors: Shared Resources</p>
    <p>Hosted process</p>
    <p>OS</p>
    <p>Memory</p>
    <p>SGX Enclave</p>
    <p>Caches Page Tables</p>
    <p>Network traff ic</p>
    <p>System calls</p>
    <p>SCONE</p>
    <p>I write to address: 0x123</p>
    <p>I see an access to: 0x123</p>
  </div>
  <div class="page">
    <p>Privileged attack vectors: Shared Resources</p>
    <p>Hosted process</p>
    <p>OS</p>
    <p>Memory</p>
    <p>SGX Enclave</p>
    <p>Caches Page Tables</p>
    <p>Network traff ic</p>
    <p>System calls</p>
    <p>SCONE</p>
    <p>This talk</p>
  </div>
  <div class="page">
    <p>Existing solutions</p>
    <p>Low overhead Low effort (no code changes required)</p>
    <p>Cloak [1]</p>
    <p>Dppel [2]</p>
    <p>[1] Gruss, D., Lettner, J., Schuster, F., Ohrimenko, O., Haller, I., &amp; Costa, M. Strong and Efficient Cache Side-Channel Protection using Hardware Transactional Memory. In Usenix Security 2017. [2] Zhang, Y., Reiter, M. K., Zhang, Y., &amp; Reiter, M. K. Dppel: Retrofitting Commodity Operating Systems to Mitigate Cache Side Channels in the Cloud. In CCS 2013. [3] Brasser, F., Capkun, S., Dmitrienko, A., Frassetto, T., Kostiainen, K., Mller, U., &amp; Sadeghi, A.-R. DR.SGX: Hardening SGX Enclaves against Cache Attacks with Data Location Randomization. In arXiv 2017. [4] Chen, S., Reiter, M. K., Zhang, X., &amp; Zhang, Y. Detecting Privileged Side-Channel Attacks in Shielded Execution with Dj Vu. In ASIA CCS 17. [5] Shih, M., Lee, S., &amp; Kim, T. T-SGX: Eradicating controlled-channel attacks against enclave programs. In NDSS 2017.</p>
    <p>Dr.SGX [3]</p>
    <p>Dj Vu [4]</p>
    <p>T-SGX [5]</p>
  </div>
  <div class="page">
    <p>Existing solutions</p>
    <p>Low overhead Low effort (no code changes required)</p>
    <p>Varys  15% average slowdown  No code changes</p>
    <p>Dppel [2]</p>
    <p>Dr.SGX [3]</p>
    <p>Dj Vu [4]</p>
    <p>T-SGX [5]</p>
    <p>Cloak [1]</p>
  </div>
  <div class="page">
    <p>Approach</p>
    <p>Rely but verify</p>
  </div>
  <div class="page">
    <p>Approach</p>
    <p>Rely but verify</p>
    <p>Request isolation f rom the untrusted OS</p>
  </div>
  <div class="page">
    <p>Approach</p>
    <p>Rely but verify</p>
    <p>Request isolation f rom the untrusted OS</p>
    <p>Check within the enclave</p>
  </div>
  <div class="page">
    <p>Varys implements a low-cost protection for Intel SGX enclaves against side-channel attacks by creating an isolated environment and verifying it at runtime.</p>
    <p>Complete description</p>
  </div>
  <div class="page">
    <p>Rest of the talk explains this sentence</p>
    <p>Varys implements a low-cost protection for Intel SGX enclaves against side-channel attacks by creating an isolated environment and verifying it at runtime.</p>
  </div>
  <div class="page">
    <p>Varys implements a low-cost protection for Intel SGX enclaves against side-channel attacks by creating an isolated environment and verifying it at runtime.</p>
  </div>
  <div class="page">
    <p>Side-channel attacks</p>
    <p>Hosted process</p>
  </div>
  <div class="page">
    <p>Side-channel attacks</p>
    <p>Hosted process</p>
    <p>if (secret == 0) read(addr1) else read(addr2)</p>
  </div>
  <div class="page">
    <p>Side-channel attacks</p>
    <p>Hosted process</p>
    <p>if (secret == 0) read(addr1) else read(addr2)</p>
    <p>Shared resource</p>
    <p>addr1</p>
    <p>addr2</p>
  </div>
  <div class="page">
    <p>Side-channel attacks</p>
    <p>Hosted process</p>
    <p>if (secret == 0) read(addr1) else read(addr2)</p>
    <p>Shared resource</p>
    <p>addr1</p>
    <p>addr2</p>
    <p>Cleanup</p>
  </div>
  <div class="page">
    <p>Side-channel attacks</p>
    <p>Hosted process</p>
    <p>if (secret == 0) read(addr1) else read(addr2)</p>
    <p>Shared resource</p>
    <p>addr1</p>
    <p>addr2</p>
    <p>Running...</p>
  </div>
  <div class="page">
    <p>Side-channel attacks</p>
    <p>Hosted process</p>
    <p>if (secret == 0) read(addr1) else read(addr2)</p>
    <p>Shared resource</p>
    <p>addr1</p>
    <p>addr2</p>
    <p>Running...</p>
  </div>
  <div class="page">
    <p>Side-channel attacks</p>
    <p>Hosted process</p>
    <p>if (secret == 0) read(addr1) else read(addr2)</p>
    <p>Shared resource</p>
    <p>addr1</p>
    <p>addr2</p>
    <p>Running...</p>
  </div>
  <div class="page">
    <p>Side-channel attacks</p>
    <p>Hosted process</p>
    <p>if (secret == 0) read(addr1) else read(addr2)</p>
    <p>Shared resource</p>
    <p>addr1</p>
    <p>addr2</p>
  </div>
  <div class="page">
    <p>Side-channel attacks</p>
    <p>Hosted process</p>
    <p>if (secret == 0) read(addr1) else read(addr2)</p>
    <p>Shared resource</p>
    <p>addr1</p>
    <p>addr2</p>
    <p>addr1 was accessed!</p>
  </div>
  <div class="page">
    <p>Side-channel attacks</p>
    <p>Hosted process</p>
    <p>if (secret == 0) read(addr1) else read(addr2)</p>
    <p>Shared resource</p>
    <p>addr1</p>
    <p>addr2</p>
    <p>addr2 was not accessed!</p>
  </div>
  <div class="page">
    <p>Side-channel attacks</p>
    <p>Hosted process</p>
    <p>if (secret == 0) read(addr1) else read(addr2)</p>
    <p>Shared resource</p>
    <p>addr1</p>
    <p>addr2</p>
    <p>This line was executed</p>
  </div>
  <div class="page">
    <p>Side-channel attacks</p>
    <p>Hosted process</p>
    <p>if (secret == 0) read(addr1) else read(addr2)</p>
    <p>Shared resource</p>
    <p>addr1</p>
    <p>addr2</p>
    <p>The secret is 0</p>
  </div>
  <div class="page">
    <p>Vulnerable shared resources</p>
    <p>CPU caches  Page tables  FPU  Memory bus  ...</p>
  </div>
  <div class="page">
    <p>Vulnerable shared resources</p>
    <p>CPU caches (L1, L2)  Page tables  FPU  Memory bus  ...</p>
    <p>Varys</p>
  </div>
  <div class="page">
    <p>Varys implements a low-cost protection for Intel SGX enclaves against side-channel attacks by creating an isolated environment and verifying it at runtime.</p>
  </div>
  <div class="page">
    <p>Attack requirements</p>
    <p>High interrupt rate  Predef ined cache state  Shared core</p>
  </div>
  <div class="page">
    <p>Attack requirements</p>
    <p>High interrupt rate  Predef ined cache state  Shared core</p>
    <p>Isolated environment</p>
  </div>
  <div class="page">
    <p>Varys implements a low-cost protection for Intel SGX enclaves against side-channel attacks by creating an isolated environment and verifying it at runtime.</p>
  </div>
  <div class="page">
    <p>Design</p>
    <p>High preemption rate Restrict and terminate  Predef ined cache state Cache eviction  Shared core Trusted reservation</p>
  </div>
  <div class="page">
    <p>Design</p>
    <p>High preemption rate Restrict and terminate  Predef ined cache state Cache eviction  Shared core Trusted reservation</p>
  </div>
  <div class="page">
    <p>Restricting preemption rate</p>
    <p>Attack exit rate: ~ 5000 exits/s.</p>
  </div>
  <div class="page">
    <p>Restricting preemption rate</p>
    <p>Attack exit rate: ~ 5000 exits/s.  Normal exit rate: ~ 30 exits/s.</p>
  </div>
  <div class="page">
    <p>Restricting preemption rate</p>
    <p>Attack exit rate: ~ 5000 exits/s.  Normal exit rate: ~ 30 exits/s.</p>
  </div>
  <div class="page">
    <p>Asynchronous Enclave Exit (AEX)</p>
    <p>Hosted process</p>
    <p>Memory</p>
    <p>SGX Enclave</p>
    <p>SGX</p>
    <p>RIP = 0x123 RAX = 0x111 RBX = 0x222</p>
    <p>.</p>
    <p>.</p>
    <p>.</p>
    <p>CPU state</p>
  </div>
  <div class="page">
    <p>Asynchronous Enclave Exit (AEX)</p>
    <p>Hosted process</p>
    <p>Memory</p>
    <p>SGX Enclave</p>
    <p>SGX. . .</p>
    <p>CPU state</p>
    <p>OS</p>
    <p>Interrupt</p>
    <p>RIP = 0x123 RAX = 0x111 RBX = 0x222</p>
  </div>
  <div class="page">
    <p>Asynchronous Enclave Exit (AEX)</p>
    <p>Hosted process</p>
    <p>Memory</p>
    <p>SGX Enclave</p>
    <p>SGX. . .</p>
    <p>CPU state</p>
    <p>OS</p>
    <p>Interrupt</p>
    <p>RIP = 0x123 RAX = 0x111 RBX = 0x222</p>
  </div>
  <div class="page">
    <p>Asynchronous Enclave Exit (AEX)</p>
    <p>Hosted process</p>
    <p>Memory</p>
    <p>SGX Enclave</p>
    <p>SGX. . .</p>
    <p>CPU state</p>
    <p>OS</p>
    <p>Interrupt</p>
    <p>RIP = 0x123 RAX = 0x111 RBX = 0x222</p>
    <p>SSA</p>
    <p>RIP = 0x100 RAX = 0x000 RBX = 0x000</p>
  </div>
  <div class="page">
    <p>Detecting interrupts</p>
    <p>Hosted process</p>
    <p>Memory</p>
    <p>SGX Enclave</p>
    <p>SGX. . .</p>
    <p>CPU state</p>
    <p>OS</p>
    <p>SSA</p>
    <p>RIP = 0x123 RAX = 0x111 RBX = 0x222</p>
  </div>
  <div class="page">
    <p>Detecting interrupts</p>
    <p>Hosted process</p>
    <p>Memory</p>
    <p>SGX Enclave</p>
    <p>SGX. . .</p>
    <p>CPU state</p>
    <p>OS</p>
    <p>RIP = 0x000 SSA</p>
    <p>RIP = 0x123 RAX = 0x111 RBX = 0x222</p>
  </div>
  <div class="page">
    <p>Detecting interrupts</p>
    <p>Hosted process</p>
    <p>Memory</p>
    <p>SGX Enclave</p>
    <p>SGX. . .</p>
    <p>CPU state</p>
    <p>OS</p>
    <p>RIP = 0x000 SSA</p>
    <p>RIP = 0x123 RAX = 0x111 RBX = 0x222</p>
    <p>Read SSA</p>
  </div>
  <div class="page">
    <p>Detecting interrupts</p>
    <p>Hosted process</p>
    <p>Memory</p>
    <p>SGX Enclave</p>
    <p>SGX. . .</p>
    <p>CPU state</p>
    <p>OS</p>
    <p>RIP = 0x000 SSA</p>
    <p>RIP = 0x123 RAX = 0x111 RBX = 0x222</p>
    <p>Still 0x000 Continue..</p>
  </div>
  <div class="page">
    <p>Detecting interrupts</p>
    <p>Hosted process</p>
    <p>Memory</p>
    <p>SGX Enclave</p>
    <p>SGX. . .</p>
    <p>CPU state</p>
    <p>OS</p>
    <p>SSA</p>
    <p>RIP = 0x123 RAX = 0x111 RBX = 0x222</p>
    <p>Interrupt</p>
    <p>RIP = 0x123 RAX = 0x111 RBX = 0x222</p>
  </div>
  <div class="page">
    <p>Detecting interrupts</p>
    <p>Hosted process</p>
    <p>Memory</p>
    <p>SGX Enclave</p>
    <p>SGX. . .</p>
    <p>CPU state</p>
    <p>OS</p>
    <p>SSA</p>
    <p>RIP = 0x123 RAX = 0x111 RBX = 0x222 RIP = 0x123</p>
    <p>RAX = 0x111 RBX = 0x222</p>
    <p>Read SSA</p>
  </div>
  <div class="page">
    <p>Detecting interrupts</p>
    <p>Hosted process</p>
    <p>Memory</p>
    <p>SGX Enclave</p>
    <p>SGX. . .</p>
    <p>CPU state</p>
    <p>OS</p>
    <p>SSA</p>
    <p>RIP = 0x123 RAX = 0x111 RBX = 0x222 RIP = 0x123</p>
    <p>RAX = 0x111 RBX = 0x222</p>
    <p>Not 0x000 There was an interrupt!</p>
  </div>
  <div class="page">
    <p>Design</p>
    <p>High preemption rate Restrict and terminate  Predef ined cache state Cache eviction  Shared core Trusted reservation</p>
  </div>
  <div class="page">
    <p>Hiding cache traces</p>
    <p>Hosted process</p>
    <p>Cache</p>
    <p>addr1</p>
    <p>addr2</p>
  </div>
  <div class="page">
    <p>addr1</p>
    <p>addr2</p>
    <p>Hosted process</p>
    <p>Cleanup</p>
    <p>Hiding cache traces</p>
    <p>Cache</p>
  </div>
  <div class="page">
    <p>addr1</p>
    <p>addr2</p>
    <p>Hosted process</p>
    <p>There was an interrupt!</p>
    <p>Hiding cache traces</p>
    <p>Cache</p>
  </div>
  <div class="page">
    <p>addr1</p>
    <p>addr2</p>
    <p>Hosted process</p>
    <p>Hiding cache traces</p>
    <p>Cache</p>
  </div>
  <div class="page">
    <p>addr1</p>
    <p>addr2</p>
    <p>Hosted process</p>
    <p>Hiding cache traces</p>
    <p>Cache</p>
  </div>
  <div class="page">
    <p>addr1</p>
    <p>addr2</p>
    <p>Hosted process</p>
    <p>Hiding cache traces</p>
    <p>Cache</p>
  </div>
  <div class="page">
    <p>addr1</p>
    <p>addr2</p>
    <p>Hosted process</p>
    <p>Hiding cache traces</p>
    <p>Access addr1 Cache</p>
  </div>
  <div class="page">
    <p>addr1</p>
    <p>addr2</p>
    <p>Hosted process</p>
    <p>Hiding cache traces</p>
    <p>??? Cache</p>
  </div>
  <div class="page">
    <p>Design</p>
    <p>High preemption rate Restrict and terminate  Predef ined cache state Cache eviction  Shared core Trusted reservation</p>
  </div>
  <div class="page">
    <p>Preventing core sharing</p>
    <p>Occupy both hyperthreads</p>
    <p>Core 1</p>
    <p>Process Attacker</p>
  </div>
  <div class="page">
    <p>Preventing core sharing</p>
    <p>Occupy both hyperthreads  Use process aff inity</p>
    <p>Core 1</p>
    <p>Process Process</p>
  </div>
  <div class="page">
    <p>How do we ensure reservation?</p>
    <p>Core 1</p>
    <p>Process Process</p>
    <p>Core 2</p>
  </div>
  <div class="page">
    <p>How do we ensure reservation?</p>
    <p>Core 1</p>
    <p>Process</p>
    <p>Core 2</p>
    <p>Attacker Process</p>
  </div>
  <div class="page">
    <p>Handshake</p>
    <p>Use shared access timing</p>
    <p>L1/L2</p>
    <p>LLC</p>
    <p>Core 1 Core 2</p>
    <p>Fast</p>
    <p>Slow</p>
    <p>Process Process</p>
  </div>
  <div class="page">
    <p>Handshake</p>
    <p>Use shared access timing</p>
    <p>L1/L2</p>
    <p>LLC</p>
    <p>Core 1 Core 2</p>
    <p>Fast</p>
    <p>Slow</p>
    <p>Process Process</p>
    <p>Write to 0x123</p>
  </div>
  <div class="page">
    <p>Handshake</p>
    <p>Use shared access timing</p>
    <p>L1/L2</p>
    <p>LLC</p>
    <p>Core 1 Core 2</p>
    <p>Fast</p>
    <p>Slow</p>
    <p>Process Process</p>
    <p>Read f rom to 0x123</p>
  </div>
  <div class="page">
    <p>Handshake</p>
    <p>Use shared access timing</p>
    <p>L1/L2</p>
    <p>LLC</p>
    <p>Core 1 Core 2</p>
    <p>Fast</p>
    <p>Slow</p>
    <p>Process Process It was fast!</p>
  </div>
  <div class="page">
    <p>Handshake</p>
    <p>Use shared access timing</p>
    <p>L1/L2</p>
    <p>LLC</p>
    <p>Core 1 Core 2</p>
    <p>Fast</p>
    <p>Slow</p>
    <p>Process Attacker Process</p>
  </div>
  <div class="page">
    <p>Handshake</p>
    <p>Use shared access timing</p>
    <p>L1/L2</p>
    <p>LLC</p>
    <p>Core 1 Core 2</p>
    <p>Fast</p>
    <p>Slow</p>
    <p>Process Attacker Process</p>
    <p>Read f rom to 0x123</p>
  </div>
  <div class="page">
    <p>Handshake</p>
    <p>Use shared access timing</p>
    <p>L1/L2</p>
    <p>LLC</p>
    <p>Core 1 Core 2</p>
    <p>Fast</p>
    <p>Slow</p>
    <p>Process Attacker Process</p>
    <p>It was slow! Something is wrong...</p>
  </div>
  <div class="page">
    <p>Design</p>
    <p>High preemption rate Restrict and terminate  Predef ined cache state Cache eviction  Shared core Trusted reservation</p>
  </div>
  <div class="page">
    <p>Varys implements a low-cost protection for Intel SGX enclaves against side-channel attacks by creating an isolated environment and verifying it at runtime.</p>
  </div>
  <div class="page">
    <p>Implementation</p>
    <p>Source code</p>
    <p>LLVM pass (Exit detection)</p>
    <p>Compiler (SCONE)</p>
    <p>Hardened binary</p>
    <p>Runtime library (Handshake &amp; cache eviction)</p>
  </div>
  <div class="page">
    <p>Varys implements a low-cost protection for Intel SGX enclaves against side-channel attacks by creating an isolated environment and verifying it at runtime.</p>
  </div>
  <div class="page">
    <p>Evaluation: performance</p>
    <p>Lower is better</p>
  </div>
  <div class="page">
    <p>Evaluation: performance</p>
    <p>Lower is better</p>
  </div>
  <div class="page">
    <p>Evaluation: performance</p>
    <p>Lower is better</p>
  </div>
  <div class="page">
    <p>Evaluation: performance</p>
    <p>Lower is better</p>
  </div>
  <div class="page">
    <p>Evaluation: performance</p>
    <p>Lower is better</p>
  </div>
  <div class="page">
    <p>Evaluation: performance</p>
    <p>Handshake and eviction only at enclave exits  20-30 times per second</p>
    <p>Lower is better</p>
  </div>
  <div class="page">
    <p>Evaluation: multithreading</p>
  </div>
  <div class="page">
    <p>Evaluation: multithreading</p>
    <p>Lower is better</p>
  </div>
  <div class="page">
    <p>Evaluation: multithreading</p>
    <p>EPC paging  higher exit rate</p>
    <p>Lower is better</p>
  </div>
  <div class="page">
    <p>Evaluation: multithreading</p>
    <p>EPC paging  higher exit rate</p>
    <p>Lower is better</p>
    <p>False positives</p>
  </div>
  <div class="page">
    <p>Varys implements a low-cost protection for Intel SGX enclaves against side-channel attacks by creating an isolated environment and verifying it at runtime.</p>
  </div>
  <div class="page">
    <p>Evaluation: security</p>
    <p>Privileged cache SCA  Target: L1 cache</p>
    <p>No eviction</p>
  </div>
  <div class="page">
    <p>Evaluation: security</p>
    <p>Privileged cache SCA  Target: L2 cache</p>
    <p>No eviction</p>
  </div>
  <div class="page">
    <p>Evaluation: security</p>
    <p>Privileged cache SCA  Target: L2 cache</p>
    <p>No eviction</p>
  </div>
  <div class="page">
    <p>Evaluation: security</p>
    <p>Privileged cache SCA  Target: L2 cache</p>
    <p>Varys protection</p>
  </div>
  <div class="page">
    <p>Evaluation: security</p>
    <p>Privileged cache SCA  Target: L2 cache</p>
    <p>Varys protection</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Varys: side-channel protection for SGX enclaves  &quot;Rely but verify&quot; approach</p>
    <p>Ask OS for  Lower interrupt rate  Paired thread allocation</p>
    <p>Verify the request  Evict caches on enclave exits</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Thanks! oleksii.oleksenko@tu-dresden.de</p>
    <p>@oleksii_o</p>
    <p>Varys: side-channel protection for SGX enclaves  &quot;Rely but verify&quot; approach</p>
    <p>Ask OS for  Lower interrupt rate  Paired thread allocation</p>
    <p>Verify the request  Evict caches on enclave exits</p>
  </div>
</Presentation>
