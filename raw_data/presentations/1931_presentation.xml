<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Tackling Parallelization Challenges of Kernel Network Stack for Container Overlay Networks</p>
    <p>Jiaxin Lei*, Kun Suo+, Hui Lu*, Jia Rao+</p>
    <p>* SUNY at Binghamton + University of Texas at Arlington</p>
  </div>
  <div class="page">
    <p>Containers Are Widely Adopted by Industry</p>
    <p>OS level virtualization Lightweight Higher consolidation density Lower operational cost</p>
  </div>
  <div class="page">
    <p>Containers Are Widely Adopted by Industry</p>
    <p>OS level virtualization Lightweight Higher consolidation density Lower operational cost</p>
  </div>
  <div class="page">
    <p>Containers Are Widely Adopted by Industry</p>
    <p>OS level virtualization Lightweight Higher consolidation density Lower operational cost</p>
  </div>
  <div class="page">
    <p>Overlay Networks Are the Technique For Containers Connectivity Typical overlay network solutions:</p>
    <p>Docker Overlay, Flannel, Calico, Weave</p>
    <p>They are generally built upon the tunneling approach like using VxLAN protocol.</p>
  </div>
  <div class="page">
    <p>Overlay Networks Are the Technique For Containers Connectivity</p>
    <p>Inner IP Header</p>
    <p>Inner Ethernet Header Payload</p>
    <p>Original L2 Frame</p>
    <p>Typical overlay network solutions: Docker Overlay, Flannel, Calico, Weave</p>
    <p>They are generally built upon the tunneling approach like using VxLAN protocol.</p>
  </div>
  <div class="page">
    <p>Overlay Networks Are the Technique For Containers Connectivity</p>
    <p>Inner IP Header</p>
    <p>Inner Ethernet Header Payload</p>
    <p>Original L2 Frame</p>
    <p>VxLAN Header</p>
    <p>Outer UDP Header</p>
    <p>Outer IP Header</p>
    <p>Outer Ethernet Header FCS</p>
    <p>VxLAN Encapsulated Packet</p>
    <p>Typical overlay network solutions: Docker Overlay, Flannel, Calico, Weave</p>
    <p>They are generally built upon the tunneling approach like using VxLAN protocol.</p>
  </div>
  <div class="page">
    <p>Overlay Networks Are the Technique For Containers Connectivity</p>
    <p>Inner IP Header</p>
    <p>Inner Ethernet Header Payload</p>
    <p>Original L2 Frame</p>
    <p>VxLAN Header</p>
    <p>Outer UDP Header</p>
    <p>Outer IP Header</p>
    <p>Outer Ethernet Header FCS</p>
    <p>VxLAN Encapsulated Packet</p>
    <p>VxLAN Flags Reserved VNI Reserved</p>
    <p>VxLAN Network Identifier</p>
    <p>Typical overlay network solutions: Docker Overlay, Flannel, Calico, Weave</p>
    <p>They are generally built upon the tunneling approach like using VxLAN protocol.</p>
  </div>
  <div class="page">
    <p>Overlay Networks Are the Technique For Containers Connectivity</p>
    <p>Inner IP Header</p>
    <p>Inner Ethernet Header Payload</p>
    <p>Original L2 Frame</p>
    <p>VxLAN Header</p>
    <p>Outer UDP Header</p>
    <p>Outer IP Header</p>
    <p>Outer Ethernet Header FCS</p>
    <p>VxLAN Encapsulated Packet</p>
    <p>VxLAN Flags Reserved VNI Reserved</p>
    <p>VxLAN Network Identifier</p>
    <p>Typical overlay network solutions: Docker Overlay, Flannel, Calico, Weave</p>
    <p>They are generally built upon the tunneling approach like using VxLAN protocol.</p>
  </div>
  <div class="page">
    <p>Overlay Networks Are the Technique For Containers Connectivity</p>
    <p>Inner IP Header</p>
    <p>Inner Ethernet Header Payload</p>
    <p>Original L2 Frame</p>
    <p>VxLAN Header</p>
    <p>Outer UDP Header</p>
    <p>Outer IP Header</p>
    <p>Outer Ethernet Header FCS</p>
    <p>VxLAN Encapsulated Packet</p>
    <p>VxLAN Flags Reserved VNI Reserved</p>
    <p>VxLAN Network Identifier</p>
    <p>Typical overlay network solutions: Docker Overlay, Flannel, Calico, Weave</p>
    <p>They are generally built upon the tunneling approach like using VxLAN protocol.</p>
  </div>
  <div class="page">
    <p>Network Packet Processing Path Prolonged network packet processing path Additional virtual devices overhead</p>
  </div>
  <div class="page">
    <p>Network Packet Processing Path</p>
    <p>Receiving Side</p>
    <p>Prolonged network packet processing path Additional virtual devices overhead</p>
    <p>Native</p>
  </div>
  <div class="page">
    <p>Network Packet Processing Path</p>
    <p>NIC</p>
    <p>Receiving Side Kernel Space</p>
    <p>Container Applications</p>
    <p>Prolonged network packet processing path Additional virtual devices overhead</p>
    <p>Native</p>
    <p>User Space</p>
  </div>
  <div class="page">
    <p>Network Packet Processing Path</p>
    <p>NIC</p>
    <p>Receiving Side</p>
    <p>Container Applications</p>
    <p>IRQ</p>
    <p>Prolonged network packet processing path Additional virtual devices overhead</p>
    <p>Kernel Space User Space</p>
    <p>Native</p>
  </div>
  <div class="page">
    <p>Network Packet Processing Path</p>
    <p>NIC</p>
    <p>Receiving Side</p>
    <p>Network Stack</p>
    <p>Container Applications</p>
    <p>IRQ SoftIRQ</p>
    <p>Prolonged network packet processing path Additional virtual devices overhead</p>
    <p>Kernel Space User Space</p>
    <p>Native</p>
  </div>
  <div class="page">
    <p>Network Packet Processing Path</p>
    <p>NIC</p>
    <p>Receiving Side</p>
    <p>Network Stack</p>
    <p>Container Applications</p>
    <p>IRQ SoftIRQ</p>
    <p>Prolonged network packet processing path Additional virtual devices overhead</p>
    <p>Kernel Space User Space</p>
    <p>Native</p>
  </div>
  <div class="page">
    <p>Network Packet Processing Path</p>
    <p>NIC</p>
    <p>Receiving Side</p>
    <p>Network Stack</p>
    <p>Container Applications</p>
    <p>IRQ SoftIRQ</p>
    <p>Prolonged network packet processing path Additional virtual devices overhead</p>
    <p>Kernel Space User Space</p>
    <p>Native</p>
  </div>
  <div class="page">
    <p>Network Packet Processing Path</p>
    <p>NIC</p>
    <p>Receiving Side</p>
    <p>Network Stack</p>
    <p>Container Applications</p>
    <p>IRQ SoftIRQ</p>
    <p>Prolonged network packet processing path Additional virtual devices overhead</p>
    <p>Kernel Space User Space</p>
    <p>Native</p>
  </div>
  <div class="page">
    <p>Network Packet Processing Path</p>
    <p>NIC</p>
    <p>Receiving Side</p>
    <p>Network Stack</p>
    <p>Container Applications</p>
    <p>IRQ SoftIRQ</p>
    <p>Prolonged network packet processing path Additional virtual devices overhead</p>
    <p>Kernel Space User Space</p>
    <p>Native</p>
  </div>
  <div class="page">
    <p>Network Packet Processing Path</p>
    <p>Container Applications</p>
    <p>NIC</p>
    <p>Receiving Side</p>
    <p>Prolonged network packet processing path Additional virtual devices overhead</p>
    <p>Overlay</p>
    <p>Kernel Space User Space</p>
  </div>
  <div class="page">
    <p>Network Packet Processing Path</p>
    <p>Container Applications</p>
    <p>NIC</p>
    <p>Receiving Side IRQ SoftIRQ</p>
    <p>Network Stack</p>
    <p>Prolonged network packet processing path Additional virtual devices overhead</p>
    <p>Overlay</p>
    <p>Kernel Space User Space</p>
  </div>
  <div class="page">
    <p>Network Packet Processing Path</p>
    <p>Container Applications</p>
    <p>NIC</p>
    <p>Receiving Side IRQ</p>
    <p>VxLAN SoftIRQ</p>
    <p>Network Stack SoftIRQ</p>
    <p>Prolonged network packet processing path Additional virtual devices overhead</p>
    <p>Kernel Space User Space</p>
    <p>Overlay</p>
  </div>
  <div class="page">
    <p>Network Packet Processing Path</p>
    <p>Container Applications</p>
    <p>NIC</p>
    <p>Receiving Side IRQ</p>
    <p>VxLAN SoftIRQ</p>
    <p>Network Stack SoftIRQ</p>
    <p>vBridge Veth</p>
    <p>Packet decapsulation</p>
    <p>Prolonged network packet processing path Additional virtual devices overhead</p>
    <p>Kernel Space User Space</p>
    <p>Overlay</p>
  </div>
  <div class="page">
    <p>Network Packet Processing Path</p>
    <p>Container Applications</p>
    <p>NIC</p>
    <p>Receiving Side IRQ</p>
    <p>VxLAN SoftIRQ</p>
    <p>Network Stack SoftIRQ</p>
    <p>vBridge Veth Network Stack SoftIRQ</p>
    <p>Packet decapsulation</p>
    <p>Prolonged network packet processing path Additional virtual devices overhead</p>
    <p>Kernel Space User Space</p>
    <p>Overlay</p>
  </div>
  <div class="page">
    <p>Network Packet Processing Path</p>
    <p>Container Applications</p>
    <p>NIC</p>
    <p>Receiving Side IRQ</p>
    <p>VxLAN SoftIRQ</p>
    <p>Network Stack SoftIRQ</p>
    <p>vBridge Veth Network Stack SoftIRQ</p>
    <p>Packet decapsulation</p>
    <p>Prolonged network packet processing path Additional virtual devices overhead</p>
    <p>Kernel Space User Space</p>
    <p>Overlay</p>
  </div>
  <div class="page">
    <p>Network Packet Processing Path</p>
    <p>Container Applications</p>
    <p>NIC</p>
    <p>Receiving Side IRQ</p>
    <p>VxLAN SoftIRQ</p>
    <p>Network Stack SoftIRQ</p>
    <p>vBridge Veth Network Stack SoftIRQ</p>
    <p>Packet decapsulation</p>
    <p>Prolonged network packet processing path Additional virtual devices overhead</p>
    <p>Kernel Space User Space</p>
    <p>Overlay</p>
  </div>
  <div class="page">
    <p>Network Packet Processing Path</p>
    <p>Container Applications</p>
    <p>NIC</p>
    <p>Receiving Side IRQ</p>
    <p>VxLAN SoftIRQ</p>
    <p>Network Stack SoftIRQ</p>
    <p>vBridge Veth Network Stack SoftIRQ</p>
    <p>Packet decapsulation</p>
    <p>Prolonged network packet processing path Additional virtual devices overhead</p>
    <p>Kernel Space User Space</p>
    <p>Overlay</p>
  </div>
  <div class="page">
    <p>Container Applications</p>
    <p>NIC</p>
    <p>Receiving Side IRQ</p>
    <p>VxLAN SoftIRQ</p>
    <p>Network Stack SoftIRQ</p>
    <p>vBridge Veth Network Stack SoftIRQ</p>
    <p>Existing Optimizations for Packet Processing</p>
    <p>Packet decapsulation</p>
    <p>Kernel Space User Space</p>
  </div>
  <div class="page">
    <p>Container Applications</p>
    <p>NIC</p>
    <p>Receiving Side IRQ</p>
    <p>VxLAN SoftIRQ</p>
    <p>Network Stack SoftIRQ</p>
    <p>vBridge Veth Network Stack SoftIRQ</p>
    <p>Existing Optimizations for Packet Processing</p>
    <p>Packet decapsulation</p>
    <p>IRQ coalescing GRO</p>
    <p>Kernel Space User Space</p>
  </div>
  <div class="page">
    <p>Container Applications</p>
    <p>NIC</p>
    <p>Receiving Side User Space IRQ</p>
    <p>VxLAN SoftIRQ</p>
    <p>Network Stack SoftIRQ</p>
    <p>vBridge Veth Network Stack SoftIRQ</p>
    <p>Existing Optimizations for Packet Processing</p>
    <p>Packet decapsulation</p>
    <p>IRQ coalescing GRO RPSMulti-queue</p>
    <p>Kernel Space</p>
  </div>
  <div class="page">
    <p>Experimental Settings Hardware Software</p>
    <p>CPU Memory NIC Throughput CPU Usage 2.2 GHz 64GB 40Gbps iPerf3 mpstat 10 cores Multi-queue</p>
  </div>
  <div class="page">
    <p>Experimental Settings Hardware Software</p>
    <p>CPU Memory NIC Throughput CPU Usage 2.2 GHz 64GB 40Gbps iPerf3 mpstat 10 cores Multi-queue</p>
    <p>S1 - Native S2 - Linux Overlay S3 - Docker Overlay</p>
  </div>
  <div class="page">
    <p>Experimental Settings</p>
    <p>Host1 Host2</p>
    <p>eth0</p>
    <p>iPerf3 iPerf3</p>
    <p>eth0</p>
    <p>Hardware Software CPU Memory NIC Throughput CPU Usage</p>
    <p>S1 - Native S2 - Linux Overlay S3 - Docker Overlay</p>
  </div>
  <div class="page">
    <p>Experimental Settings</p>
    <p>Host1 Host2 Host1 Host2</p>
    <p>eth0</p>
    <p>VxLANiPerf3 iPerf3</p>
    <p>iPerf3 iPerf3</p>
    <p>eth0 eth0 eth0</p>
    <p>VxLAN</p>
    <p>Hardware Software CPU Memory NIC Throughput CPU Usage</p>
    <p>S1 - Native S2 - Linux Overlay S3 - Docker Overlay</p>
  </div>
  <div class="page">
    <p>Experimental Settings</p>
    <p>S3 - Docker Overlay</p>
    <p>Host1 Host2 Host1 Host2 Host1 Host2</p>
    <p>eth0</p>
    <p>VxLAN</p>
    <p>vBridge</p>
    <p>Veth0</p>
    <p>iPerf3</p>
    <p>iPerf3 Container</p>
    <p>iPerf3 Container</p>
    <p>iPerf3</p>
    <p>iPerf3 iPerf3</p>
    <p>eth0 eth0 eth0 eth0 eth0</p>
    <p>VxLAN VxLAN VxLAN</p>
    <p>vBridge</p>
    <p>Veth0</p>
    <p>S2 - Linux Overlay</p>
    <p>Hardware Software CPU Memory NIC Throughput CPU Usage</p>
    <p>S1 - Native</p>
  </div>
  <div class="page">
    <p>Single Flow Performance</p>
    <p>TCP and UDP Throughputs under Three Different Cases</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut (G</p>
    <p>b/ s)</p>
    <p>S1 S2 S3</p>
  </div>
  <div class="page">
    <p>TCP Throughput of Docker Overlay case drops 72% compared with native case.</p>
    <p>Single Flow Performance</p>
    <p>TCP and UDP Throughputs under Three Different Cases</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut (G</p>
    <p>b/ s)</p>
    <p>S1 S2 S3</p>
  </div>
  <div class="page">
    <p>TCP Throughput of Docker Overlay case drops 72% compared with native case.</p>
    <p>UDP Throughput drops 58%.</p>
    <p>Single Flow Performance</p>
    <p>TCP and UDP Throughputs under Three Different Cases</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut (G</p>
    <p>b/ s)</p>
    <p>S1 S2 S3</p>
  </div>
  <div class="page">
    <p>Single Flow Performance</p>
    <p>CPU Usage under Three Different Cases for TCP</p>
    <p>To ta</p>
    <p>l C P</p>
    <p>U U</p>
    <p>sa ge</p>
    <p>S1 S2 S3</p>
    <p>User</p>
    <p>System</p>
    <p>SoftIRQ</p>
    <p>* 5% indicates one cpu core is fully saturated.</p>
  </div>
  <div class="page">
    <p>Single Flow Performance</p>
    <p>Packet processing overhead fully saturates one cpu core in two overlay cases.</p>
    <p>CPU Usage under Three Different Cases for TCP</p>
    <p>To ta</p>
    <p>l C P</p>
    <p>U U</p>
    <p>sa ge</p>
    <p>S1 S2 S3</p>
    <p>User</p>
    <p>System</p>
    <p>SoftIRQ</p>
    <p>~5%</p>
    <p>* 5% indicates one cpu core is fully saturated.</p>
  </div>
  <div class="page">
    <p>Single Flow Performance</p>
    <p>CPU Usage under Three Different Cases for TCP</p>
    <p>To ta</p>
    <p>l C P</p>
    <p>U U</p>
    <p>sa ge</p>
    <p>S1 S2 S3</p>
    <p>User</p>
    <p>System</p>
    <p>SoftIRQ</p>
    <p>~5%  Packet processing overhead fully saturates one cpu core in two overlay cases.</p>
    <p>Current solutions cant scale single flow performance.</p>
    <p>* 5% indicates one cpu core is fully saturated.</p>
  </div>
  <div class="page">
    <p>Multiple Flows Performance</p>
    <p>Native</p>
    <p>Pair Number of Iperf Connection</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut (G</p>
    <p>b/ s)</p>
  </div>
  <div class="page">
    <p>Multiple Flows Performance</p>
    <p>Native</p>
    <p>Pair Number of Iperf Connection</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut (G</p>
    <p>b/ s)</p>
    <p>Native case quickly reaches ~37 Gbps under TCP with only 2 pairs.</p>
    <p>~37Gbps</p>
  </div>
  <div class="page">
    <p>Multiple Flows Performance</p>
    <p>Native Linux Overlay Docker Overlay</p>
    <p>Pair Number of Iperf Connection</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut (G</p>
    <p>b/ s)</p>
    <p>Native case quickly reaches ~37 Gbps under TCP with only 2 pairs.</p>
    <p>In two overlay cases, TCP throughput grows slowly.</p>
  </div>
  <div class="page">
    <p>Multiple Flows Performance</p>
    <p>Native Linux Overlay Docker Overlay</p>
    <p>Pair Number of Iperf Connection</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut (G</p>
    <p>b/ s)</p>
    <p>Native case quickly reaches ~37 Gbps under TCP with only 2 pairs.</p>
    <p>In two overlay cases, TCP throughput grows slowly.</p>
  </div>
  <div class="page">
    <p>Multiple Flows Performance</p>
    <p>Under the same throughput (e.g., 40 Gbps), overlay networks consume much more CPU resources (e.g., around 2.5 times) than the native case.</p>
    <p>User System SoftIRQ</p>
    <p>Native Linux Overlay Docker Overlay Pair Number of Iperf Connection</p>
    <p>To ta</p>
    <p>l C P</p>
    <p>U U</p>
    <p>sa ge</p>
    <p>~2.5 times</p>
  </div>
  <div class="page">
    <p>Multiple Flows Performance</p>
    <p>Bad scalability is largely due to the inefficient interplay of many tasks.</p>
    <p>User System SoftIRQ</p>
    <p>Native Linux Overlay Docker Overlay Pair Number of Iperf Connection</p>
    <p>To ta</p>
    <p>l C P</p>
    <p>U U</p>
    <p>sa ge</p>
    <p>~2.5 times</p>
  </div>
  <div class="page">
    <p>Small Packet Performance</p>
    <p>Native Linux Overlay Docker Overlay</p>
    <p>P ac</p>
    <p>ke t N</p>
    <p>um be</p>
    <p>r / s</p>
    <p>Packet Size of Iperf Connection</p>
  </div>
  <div class="page">
    <p>Small Packet Performance</p>
    <p>Native Linux Overlay Docker Overlay</p>
    <p>P ac</p>
    <p>ke t N</p>
    <p>um be</p>
    <p>r / s</p>
    <p>Packet Size of Iperf Connection</p>
    <p>Docker overlay achieves as low as 50% packet processing rate of that in the native case.</p>
  </div>
  <div class="page">
    <p>Interrupt Number with Varying Packet Sizes</p>
    <p>Native Linux Overlay Docker Overlay</p>
    <p>IRQ SoftIRQ Packet Size of Iperf Connection</p>
    <p>IR Q</p>
    <p>/s (S</p>
    <p>of tIR</p>
    <p>Q /s</p>
    <p>)</p>
    <p>IRQ SoftIRQ Packet Size of Iperf Connection</p>
    <p>IR Q</p>
    <p>/s (S</p>
    <p>of tIR</p>
    <p>Q /s</p>
    <p>)</p>
    <p>Native Linux Overlay Docker Overlay</p>
    <p>Interrupt number for TCP Interrupt number for UDP</p>
    <p>IRQ number increases dramatically in the Docker overlay UDP case  10x of that in the TCP case.</p>
  </div>
  <div class="page">
    <p>Interrupt Number with Varying Packet Sizes</p>
    <p>Native Linux Overlay Docker Overlay</p>
    <p>IRQ SoftIRQ Packet Size of Iperf Connection</p>
    <p>IR Q</p>
    <p>/s (S</p>
    <p>of tIR</p>
    <p>Q /s</p>
    <p>)</p>
    <p>IRQ SoftIRQ Packet Size of Iperf Connection</p>
    <p>IR Q</p>
    <p>/s (S</p>
    <p>of tIR</p>
    <p>Q /s</p>
    <p>)</p>
    <p>Native Linux Overlay Docker Overlay</p>
    <p>Interrupt number for TCP Interrupt number for UDP</p>
    <p>IRQ number increases dramatically in the Docker overlay UDP case  10x of that in the TCP case.</p>
    <p>3x softIRQ numbers are observed in Docker Overlay case compared with the IRQ numbers.</p>
  </div>
  <div class="page">
    <p>Insights and Conclusions</p>
  </div>
  <div class="page">
    <p>Insights and Conclusions  Kernel does not provide per-packet level parallelization.</p>
  </div>
  <div class="page">
    <p>Insights and Conclusions  Kernel does not provide per-packet level parallelization.  Kernel does not efficiently handle various packet processing tasks.</p>
  </div>
  <div class="page">
    <p>Insights and Conclusions  Kernel does not provide per-packet level parallelization.  Kernel does not efficiently handle various packet processing tasks.  Bottlenecks become more severe for small packets.</p>
  </div>
  <div class="page">
    <p>Insights and Conclusions  Kernel does not provide per-packet level parallelization.  Kernel does not efficiently handle various packet processing tasks.  Bottlenecks become more severe for small packets.</p>
    <p>Thinking about future works:</p>
  </div>
  <div class="page">
    <p>Insights and Conclusions  Kernel does not provide per-packet level parallelization.  Kernel does not efficiently handle various packet processing tasks.  Bottlenecks become more severe for small packets.</p>
    <p>Thinking about future works:  Is it feasible to provide packet-level parallelization for a single network</p>
    <p>flow?</p>
  </div>
  <div class="page">
    <p>Insights and Conclusions  Kernel does not provide per-packet level parallelization.  Kernel does not efficiently handle various packet processing tasks.  Bottlenecks become more severe for small packets.</p>
    <p>Thinking about future works:  Is it feasible to provide packet-level parallelization for a single network</p>
    <p>flow?</p>
    <p>How can the kernel perform a better isolation among multiple flows especially for efficiently utilizing shared hardware resources?</p>
  </div>
  <div class="page">
    <p>Insights and Conclusions  Kernel does not provide per-packet level parallelization.  Kernel does not efficiently handle various packet processing tasks.  Bottlenecks become more severe for small packets.</p>
    <p>Thinking about future works:  Is it feasible to provide packet-level parallelization for a single network</p>
    <p>flow?</p>
    <p>How can the kernel perform a better isolation among multiple flows especially for efficiently utilizing shared hardware resources?</p>
    <p>Can the packets be further coalesced with optimized network path for reduced interrupts and context switches?</p>
  </div>
  <div class="page">
    <p>Thank you!</p>
  </div>
</Presentation>
