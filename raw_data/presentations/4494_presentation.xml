<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Optimal Scalable Video Multiplexing in Mobile Broadcast Networks</p>
    <p>Farid M. Tabrizi, Cheng-Hsin Hsu,</p>
    <p>Mohamed Hefeeda, and Joseph G. Peters</p>
    <p>Network Systems Lab, Simon Fraser University, Canada</p>
    <p>Deutsche Telekom Lab, USA</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Motivations</p>
    <p>Mobile Video Broadcast Networks</p>
    <p>Problem Statement and Formulation</p>
    <p>Our Solution</p>
    <p>Evaluation Results</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Motivations</p>
    <p>Mobile videos are getting increasingly popular</p>
    <p>However, delivering mobile videos over unicast channels of cellular networks is inefficient - Analysis predicted that 3G cellular networks would collapse</p>
    <p>with only 40% mobile phone users watching 8-minute video each day [Liang et al. PTC08]</p>
    <p>- AT&amp;T is phasing out their unlimited data plans</p>
    <p>More efficient delivery method is needed</p>
    <p>We study broadcast networks that support multicast/broadcast for higher spectrum efficiency</p>
  </div>
  <div class="page">
    <p>Mobile Broadcast Networks</p>
    <p>Streaming Server</p>
    <p>Camera</p>
    <p>Multiplexer Modulator</p>
    <p>IP Networks</p>
    <p>Content Providers</p>
    <p>Network Operator Mobile Users</p>
    <p>We studied the design of multiplexers</p>
    <p>Content providers create videos for recorded and live programs</p>
    <p>Network operator multiplexes multiple videos into a broadcast stream</p>
    <p>Mobile users receive the broadcast stream</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Designing multiplexer is not easy - Small buffer sizes of mobile receivers</p>
    <p>- Energy constraints for mobile receivers</p>
    <p>- Variability in the bitrates of video streams</p>
    <p>Goal: a real-time scheduling algorithm to - Maximize number of broadcast streams in the network</p>
    <p>- Minimize energy consumption on mobile receivers</p>
    <p>- Maximize the overall video quality 5</p>
  </div>
  <div class="page">
    <p>Medium-Grained Scalable Streams</p>
    <p>Modern H.264/SVC codec supports two types of quality scalability: coarse-grained scalability (CGS) and medium-grained scalability (MGS)</p>
    <p>CGS enables layer-level adaptation - Switching between frames is only possible at I-frames</p>
    <p>- The choice among different bitrates is limited by no. layers</p>
    <p>MGS allows packet-level adaptation - Switching at any frame</p>
    <p>- Many more bitrates are possible</p>
    <p>We leverage on MGS coded streams</p>
  </div>
  <div class="page">
    <p>Problem Statement</p>
    <p>Problem: Broadcasting S MGS video streams from a base station to a large number of mobile receivers over a shared wireless medium</p>
    <p>Notations: - There are S video streams</p>
    <p>- Each frame video stream s has a base layer and MGS layers</p>
    <p>- Each video stream has I frames</p>
    <p>- Indicates the size of layer k of</p>
    <p>frame i of stream s</p>
    <p>- Each stream is coded at F frame-per-second</p>
    <p>sQ</p>
    <p>ksil ,,</p>
    <p>ksil ,,</p>
    <p>Frame i of stream s</p>
    <p>Base layer</p>
  </div>
  <div class="page">
    <p>Formulation</p>
    <p>Goodput, fraction of ontime delivered data</p>
    <p>Energy saving, fraction of network interface off-time</p>
    <p>Overall video quality in PSNR</p>
    <p>No burst overlapping</p>
    <p>No buffer overflow</p>
    <p>No buffer underflow</p>
    <p>Bursts are large enough to accommodate selected video packets</p>
  </div>
  <div class="page">
    <p>Problem Solution</p>
    <p>Split receiver buffer of size B to two buffers of size B/2</p>
    <p>For each video stream, we assign time windows</p>
    <p>At each time window of each video stream, one buffer is being drained while the other buffer is being filled</p>
    <p>Earliest-deadline-first scheduling in each window</p>
    <p>When the draining buffer is empty, we switch the buffers</p>
    <p>If due to bandwidth limitations a complete video cannot be sent, we drop MGS layers in a ratedistortion optimized manner and schedule a burst for the empty buffer</p>
  </div>
  <div class="page">
    <p>Double Buffering Technique</p>
    <p>b u</p>
    <p>ff er</p>
    <p>b u</p>
    <p>ff er</p>
    <p>b u</p>
    <p>ff er</p>
    <p>Buffer being drained</p>
    <p>Buffer being filled</p>
    <p>Data</p>
    <p>Size B</p>
    <p>Size B/2 Size B/2</p>
    <p>Image from http://www.supgifts.com/images/cell%20phones/Cellphone652.jpg</p>
  </div>
  <div class="page">
    <p>Evaluation Setup</p>
    <p>Use a MobileTV testbed developed in our lab - The base station: a Linux box with RF signal modulator</p>
    <p>implementing the physical layer of mobile broadcast protocol</p>
    <p>- Indoor antenna to transmit DVB-H compliant signals</p>
    <p>Settings - We set the modulator to use 16-QAM (Quadrature Amplitude</p>
    <p>Modulation)</p>
    <p>- 10MHz radio channel</p>
    <p>- Transition overhead time To=100 ms</p>
  </div>
  <div class="page">
    <p>Evaluation Setup (cont.)</p>
    <p>Video streams - 10 video streams of different categories of: sport, TV</p>
    <p>game show, documentary, talk show and have very different visual characteristics</p>
    <p>- Bitrates ranging from 250 to 768 kbps</p>
    <p>- We created video streams with different MGS layers and the trace file for each stream using JSVM</p>
    <p>Comparison - We compare our OSVM algorithm with MBS (Mobile</p>
    <p>Broadcast Solution) from Nokia and SMS algorithm [MM09] which has been previously developed in our Lab</p>
  </div>
  <div class="page">
    <p>Comparison again Current Base Station</p>
    <p>We compared our OSVM with MBS algorithm in its best and worst cases (by tuning its parameters)</p>
    <p>OSVM algorithm reduces the dropped frame rate from at least 20% to less than 5%</p>
  </div>
  <div class="page">
    <p>Comparison against Our Prior Work</p>
    <p>OSVM algorithm results in 46% lower frame drop rate</p>
  </div>
  <div class="page">
    <p>Comparison against Our Previous Work (cont.)</p>
    <p>OSVM achieve quality improvement of 1.34dB on average</p>
  </div>
  <div class="page">
    <p>Per-Stream Energy Saving</p>
    <p>The energy saving resulted from OSVM for all video streams ranges from 70% to 99%</p>
  </div>
  <div class="page">
    <p>Per-Stream Video Quality</p>
    <p>The gap between maximum and minimum video quality among all streams is only 1dB</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>We studied scalable video broadcast networks</p>
    <p>We formulated a burst scheduling problem to jointly optimize: (i) video quality, (ii) network goodput, and (iii) receiver energy consumption.</p>
    <p>We proposed an efficient algorithm for the problem</p>
    <p>We implement the proposed algorithm in a real mobile TV testbed</p>
    <p>Extensive experimental results indicate that our algorithm outperforms the algorithms used in current base stations and proposed in our previous work [MM09]</p>
  </div>
  <div class="page">
    <p>Thank You</p>
  </div>
  <div class="page">
    <p>Fairness on Frame Drop Rate</p>
    <p>The frame drop rate among all video streams quickly converges to the range of 4.49% to 6.6%</p>
  </div>
  <div class="page">
    <p>Future Work</p>
    <p>Making the solution adaptive based on the changes in bitrate of video streams</p>
    <p>Considering the effect of larger lookahead window on the performance of multiplexing algorithm</p>
    <p>Using other scalability opportunities like temporal scalability</p>
  </div>
  <div class="page">
    <p>Scalable Video Coding</p>
    <p>Scalable video coding - Temporal scalability</p>
    <p>- Spatial scalability</p>
    <p>- Quality scalability</p>
    <p>Temporal scalability - The frames must be encoded in hierarchical prediction</p>
    <p>structure</p>
    <p>GOP GOP</p>
    <p>F o</p>
    <p>ur T</p>
    <p>em p o ra</p>
    <p>l L</p>
    <p>ay er</p>
    <p>s</p>
  </div>
  <div class="page">
    <p>Spatial Scalability</p>
    <p>Images with different spatial resolutions</p>
    <p>Each layer in the spatial scalable video stream improves the final image resolution</p>
  </div>
  <div class="page">
    <p>Quality Scalability</p>
    <p>Quality scalability could be considered as a special case of spatial scalability</p>
    <p>Dividing the video into several quality layers: Coarse Grain Scalability (CGS) - In CGS, motion estimation is conducted in each spatial layer</p>
    <p>separately</p>
    <p>Switching between frames is only possible at I-frames</p>
    <p>The choice among different bitrates is limited to the number of layers</p>
  </div>
  <div class="page">
    <p>Quality Scalability</p>
    <p>Coarse Grain Scalability</p>
  </div>
  <div class="page">
    <p>Quality Scalability</p>
    <p>Alternatives for CGS: - All quality levels in one spatial layer</p>
    <p>Fine Grain Scalability - Motion compensation is done at the lowest quality level of the</p>
    <p>reference picture</p>
  </div>
  <div class="page">
    <p>Quality Scalability</p>
    <p>FGS advantages: - Encoder and decoder use the same quality level of the reference</p>
    <p>picture</p>
    <p>- Bitrate scaling could be done at packet level</p>
    <p>FGS disadvantage: - Coding efficiency</p>
  </div>
  <div class="page">
    <p>Quality Scalability</p>
    <p>Medium Grain Scalability - A trade-off between Fine Grain Scalability and Coarse Grain</p>
    <p>Scalability</p>
    <p>- Keeps drift at an acceptable level</p>
    <p>- Motion prediction done in the enhancement layer with periodic updates at base layer</p>
  </div>
  <div class="page">
    <p>Definitions</p>
    <p>Bandwidth utilization - The fraction of video frames received at the decoder before</p>
    <p>their decoding deadline</p>
    <p>Energy saving - The fraction of time the receivers can put their wireless</p>
    <p>receivers into sleep</p>
    <p>- We use the average energy saving among all video streams</p>
    <p>FI</p>
    <p>Rb S</p>
    <p>s</p>
    <p>n</p>
    <p>j</p>
    <p>s j</p>
    <p>s</p>
    <p>/</p>
    <p>/ 1 1</p>
    <p>S S</p>
    <p>s s /)(</p>
  </div>
  <div class="page">
    <p>Problem Formulation</p>
    <p>The average quality of all transmitted frames is shown by - We use peak-signal-to-noise-ration (PSNR) as a quality metric</p>
    <p>)(log10 2</p>
    <p>MAX PSNR I</p>
    <p>s</p>
    <p>s s k</p>
    <p>s k</p>
    <p>s i</p>
    <p>n</p>
    <p>k</p>
    <p>s k</p>
    <p>S</p>
    <p>s</p>
    <p>n</p>
    <p>k</p>
    <p>h</p>
    <p>gi</p>
    <p>u</p>
    <p>q qsi</p>
    <p>b 1</p>
  </div>
  <div class="page">
    <p>Problem Formulation</p>
    <p>FI</p>
    <p>Rb S</p>
    <p>s</p>
    <p>n</p>
    <p>j</p>
    <p>s j</p>
    <p>s</p>
    <p>/</p>
    <p>/ 1 1</p>
    <p>S FI</p>
    <p>RbT S</p>
    <p>s</p>
    <p>n</p>
    <p>j</p>
    <p>s j</p>
    <p>s</p>
    <p>/ /</p>
    <p>)/(</p>
    <p>s</p>
    <p>s s k</p>
    <p>s k</p>
    <p>s i</p>
    <p>n</p>
    <p>k</p>
    <p>s k</p>
    <p>S</p>
    <p>s</p>
    <p>n</p>
    <p>k</p>
    <p>h</p>
    <p>gi</p>
    <p>u</p>
    <p>q qsi</p>
    <p>b 1</p>
    <p>Bandwidth Utilization</p>
    <p>Energy Saving</p>
    <p>Average Image Quality</p>
  </div>
  <div class="page">
    <p>Problem Solution</p>
    <p>Time window in which one buffer is being drained and</p>
    <p>another one being filled</p>
    <p>The amount of data assigned to stream s in each time window should be the size</p>
    <p>of half a buffer</p>
    <p>The length of time window should be equal to the playout</p>
    <p>time of the playing buffer</p>
    <p>Stream s</p>
  </div>
  <div class="page">
    <p>Problem Solution</p>
    <p>The usefulness of layers of a frame - We drop the layers with the lowest weights</p>
    <p>'</p>
    <p>,,</p>
    <p>'</p>
    <p>,,</p>
    <p>',</p>
    <p>)1'/( )(</p>
    <p>i</p>
    <p>ij qsi</p>
    <p>i</p>
    <p>ij qsis ii</p>
    <p>l</p>
    <p>ii qw</p>
    <p>s</p>
    <p>s+1</p>
    <p>s+2</p>
    <p>Rescheduling window</p>
  </div>
  <div class="page">
    <p>Evaluation Setup (cont.)  Video streams</p>
    <p>- 10 video streams of different categories of: sport, TV game show, documentary, talk show and have very different visual characteristics</p>
    <p>- Bitrates ranging from 250 to 768 kbps</p>
    <p>- We created video streams with different MGS layers and the trace file for each stream using BitStreamExtractorStatic tool provided by JSVM</p>
    <p>- We used PSNRStatic to determine the PSNR value of each MGS layer of each video stream</p>
    <p>Comparison - We compare our OSVM algorithm with MBS (Mobile Broadcast</p>
    <p>Solution) from Nokia and SMS algorithm [MM09] which has been previously developed in our Lab</p>
  </div>
</Presentation>
