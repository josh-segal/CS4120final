<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Sirius: Distributing and Coordinating Application Reference Data</p>
    <p>Michael Bevilacqua-Linn, Maulan Byron, Peter Cline, Jon Moore, and Steve Muir</p>
    <p>Comcast Cable @jon_moore</p>
  </div>
  <div class="page">
    <p>Photo: http://www.flickr.com/photos/37080143@N08/3409059834 by SimCity Research Laboratory: http://www.flickr.com/photos/37080143@N08/ License: http://creativecommons.org/licenses/by-sa/2.0/</p>
    <p>What is Reference Data anyway?</p>
  </div>
  <div class="page">
    <p>wikipedia-en.xml.tar</p>
    <p>Uncompressed!</p>
  </div>
  <div class="page">
    <p>App Server</p>
    <p>Reference Data</p>
  </div>
  <div class="page">
    <p>App Server</p>
    <p>Reference Data Obscuring the Real Mechanism</p>
  </div>
  <div class="page">
    <p>App Server</p>
    <p>Reference Data</p>
    <p>IOExceptions  Timeouts  Cache misses  Cxn pools</p>
  </div>
  <div class="page">
    <p>App Server</p>
    <p>Data structures  Algorithms  Unit tests  Profilers</p>
  </div>
  <div class="page">
    <p>Application</p>
    <p>Sirius</p>
    <p>Request Handler</p>
    <p>update</p>
    <p>enqueue{Put,Delete}</p>
    <p>Paxos</p>
    <p>txn log</p>
    <p>persist handle</p>
    <p>apply</p>
  </div>
  <div class="page">
    <p>Application</p>
    <p>Sirius</p>
    <p>Request Handler txn</p>
    <p>log</p>
  </div>
  <div class="page">
    <p>Application</p>
    <p>Sirius</p>
    <p>Request Handler txn</p>
    <p>log</p>
    <p>client request</p>
    <p>read</p>
  </div>
  <div class="page">
    <p>App Server App Server App Server</p>
    <p>App Server App Server App Server App Server App Server App Server</p>
    <p>ingest</p>
    <p>client service client service</p>
    <p>Photo: http://www.flickr.com/photos/37080143@N08/3409059834 by SimCity Research Laboratory: http://www.flickr.com/photos/37080143@N08/ License: http://creativecommons.org/licenses/by-sa/2.0/</p>
  </div>
  <div class="page">
    <p>App Server</p>
    <p>segment write</p>
  </div>
  <div class="page">
    <p>App Server</p>
    <p>segment</p>
    <p>segment</p>
    <p>write</p>
  </div>
  <div class="page">
    <p>App Server</p>
    <p>segment</p>
    <p>segment</p>
    <p>segment write</p>
  </div>
  <div class="page">
    <p>App Server</p>
    <p>segment</p>
    <p>segment</p>
    <p>segment write</p>
    <p>compact</p>
  </div>
  <div class="page">
    <p>App Server</p>
    <p>segment</p>
    <p>segment</p>
    <p>segment write</p>
    <p>compact</p>
  </div>
  <div class="page">
    <p>App Server</p>
    <p>segment</p>
    <p>segment</p>
    <p>segment write</p>
    <p>compact</p>
  </div>
  <div class="page">
    <p>App Server</p>
    <p>segment</p>
    <p>segment</p>
    <p>segment write</p>
    <p>compact</p>
  </div>
  <div class="page">
    <p>Implementation</p>
  </div>
  <div class="page">
    <p>def receive = { case Request(command: Command) =&gt; propose(command) case decision @ Decision(slot, decisionCommand) =&gt; decisions.put(slot, decisionCommand) reproposeIfClobbered(slot, decisionCommand) try { performFun(decision) } catch { case t: Throwable =&gt; logger.warning(&quot;&quot;) } case decisionHint @ DecisionHint(decisionHintSlotNum) =&gt; slotNum = decisionHintSlotNum + 1 outstandingProposals.filter((k, _) =&gt; k &gt; decisionHintSlotNum) decisions.filter((k, _) =&gt; k &gt; decisionHintSlotNum) localLeader forward decisionHint case Reap =&gt; reapStagnantProposals() }</p>
    <p>Robbert van Renesse. Paxos Made Moderately Complex. March, 2011. http://www.cs.cornell.edu/courses/CS6452/2012sp/papers/paxos-complex.pdf</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Photo: Copyright Comcast</p>
  </div>
  <div class="page">
    <p>Sirius provides access to reference data with:  Native, arbitrary data structures  Eventually consistent replication  Persistence and replay  Convenient library interface</p>
    <p>http://comcast.github.io/sirius/</p>
  </div>
</Presentation>
