<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>CHAINIAC: Proactive Software-Update Transparency via Collectively Signed Skipchains and Verified Builds</p>
  </div>
  <div class="page">
    <p>Software Updates</p>
    <p>Hilary Mason's Twitter A program tape for the 1944 Harvard Mark I, one of the first digital computers. Wikipedia.</p>
  </div>
  <div class="page">
    <p>Softwares updates are used to patch disclosed vulnerabilities, add new features, and improve security posture</p>
    <p>If you do not update your system, things can go bad</p>
    <p>The Sun</p>
    <p>Forbes</p>
    <p>The Verge</p>
    <p>Software Updates</p>
  </div>
  <div class="page">
    <p>But even if you do update your system regularly, things can go wrong too</p>
    <p>Software-update systems are a lucrative attack target due to their centralized design and potential impact on users</p>
    <p>Software Updates</p>
    <p>How can we make software-update systems more secure and transparent?</p>
  </div>
  <div class="page">
    <p>Software Release Pipeline</p>
    <p>Development/Review  Building release binaries  Sign-off  Release distribution</p>
    <p>&lt;/CODE&gt;</p>
    <p>Developers</p>
    <p>Distribution center</p>
    <p>Users</p>
  </div>
  <div class="page">
    <p>Software Release Pipeline</p>
    <p>Development/Review  Building release binaries  Sign-off  Release distribution</p>
    <p>&lt;/CODE&gt;</p>
    <p>Build server</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
  </div>
  <div class="page">
    <p>Software Release Pipeline</p>
    <p>Development/Review  Building release binaries  Sign-off  Release distribution</p>
    <p>&lt;/CODE&gt;</p>
    <p>Build server</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
  </div>
  <div class="page">
    <p>Software Release Pipeline</p>
    <p>Development/Review  Building release binaries  Sign-off  Release distribution</p>
    <p>&lt;/CODE&gt;</p>
    <p>Build server</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>&lt;/CODE&gt;</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>&lt;/CODE&gt;</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>&lt;/CODE&gt;</p>
    <p>Build server</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Petya/NotPetya attacks Mashable</p>
    <p>Kaspersky Securelist</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>&lt;/CODE&gt;</p>
    <p>Build server</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>&lt;/CODE&gt;</p>
    <p>Build server</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>&lt;/CODE&gt;</p>
    <p>Build server</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
  </div>
  <div class="page">
    <p>Over 90% of the source packages included in Debian 9 will build bitfor-bit identical binary packages</p>
    <p>Challenges 2. Prevent malicious substitution of a release binary during a build process</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>How many of you have reproducibly built software binaries for personal use?</p>
  </div>
  <div class="page">
    <p>Building the Tor Browser bundle takes 32 hours on a modern laptop</p>
    <p>Challenges 2. Prevent malicious substitution of a release binary during a build process</p>
    <p>Closed-source software?</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Build server</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Build server</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>&lt;/CODE&gt;</p>
    <p>&lt;/CODE&gt;</p>
    <p>Build server</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>&lt;/CODE&gt;</p>
    <p>&lt;/CODE&gt;</p>
    <p>Build server</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>&lt;/CODE&gt;</p>
    <p>&lt;/CODE&gt;</p>
    <p>Build server</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Build server</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
    <p>Build server</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
    <p>Build server</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Developers</p>
    <p>Users</p>
    <p>Distribution center</p>
    <p>Build server</p>
  </div>
  <div class="page">
    <p>Design of CHAINIAC</p>
  </div>
  <div class="page">
    <p>Roadmap to CHAINIAC</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Decentralized Release-Approval</p>
    <p>Policy</p>
    <p>User</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Policy</p>
    <p>Decentralized Release-Approval</p>
    <p>Developers</p>
    <p>User</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Policy</p>
    <p>Release &lt;source code&gt;</p>
    <p>Release &lt;binary&gt;</p>
    <p>Decentralized Release-Approval 1. Make software-update process resilient to partial key compromise</p>
    <p>Distribution center Developers</p>
    <p>User</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Policy</p>
    <p>Release &lt;source code&gt;</p>
    <p>Developers signatures</p>
    <p>Release &lt;binary&gt;</p>
    <p>Decentralized Release-Approval 1. Make software-update process resilient to partial key compromise</p>
    <p>Distribution center Developers</p>
    <p>User</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Policy Developers signatures</p>
    <p>Release &lt;binary&gt;</p>
    <p>Decentralized Release-Approval 1. Make software-update process resilient to partial key compromise</p>
    <p>Distribution center Developers</p>
    <p>User</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Policy</p>
    <p>Developers signatures</p>
    <p>Release &lt;binary&gt;</p>
    <p>Decentralized Release-Approval 1. Make software-update process resilient to partial key compromise</p>
    <p>Distribution center Developers</p>
    <p>User</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Background  Collective Authority (Cothority), Collective Signing (CoSi), and BFT-CoSi</p>
    <p>record</p>
    <p>record</p>
    <p>record</p>
    <p>Authority</p>
    <p>Witness</p>
    <p>Cosigners</p>
    <p>each statement collectively</p>
    <p>signed by both authority</p>
    <p>and all or most witnesses</p>
    <p>Authoritative statements: e.g. log records</p>
    <p>References  Ewa Syta, Iulia Tamas, Dylan Visher, David Isaac Wolinsky, Philipp</p>
    <p>Jovanovic, Linus Gasser, Nicolas Gailly, Ismail Khoffi, and Bryan Ford. Keeping Authorities Honest or Bust with Decentralized Witness Cosigning. In 37th IEEE Symposium on Security and Privacy, May 2016.</p>
    <p>Eleftherios Kokoris-Kogias, Philipp Jovanovic, Nicolas Gailly, Ismail Khoffi, Linus Gasser, and Bryan Ford. Enhancing Bitcoin Security and Performance with Strong Consistency via Collective Signing. In Proceedings of the 25th USENIX Conference on Security Symposium, 2016.</p>
  </div>
  <div class="page">
    <p>Verified Builds</p>
    <p>Policy</p>
    <p>Developers signatures</p>
    <p>Release Tree &lt;source code&gt;</p>
    <p>&lt;binaries&gt;</p>
    <p>Cothority</p>
    <p>centerDevelopers</p>
    <p>User</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Policy</p>
    <p>Developers signatures</p>
    <p>Release Tree &lt;source code&gt;</p>
    <p>&lt;binaries&gt;</p>
    <p>Verified Builds</p>
    <p>Cothority</p>
    <p>Distribution centerDevelopers</p>
    <p>User</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Policy</p>
    <p>Co-signature</p>
    <p>Release Tree &lt;source code&gt;</p>
    <p>&lt;binaries&gt;</p>
    <p>Verified Builds</p>
    <p>Cothority</p>
    <p>Distribution centerDevelopers</p>
    <p>User</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Policy</p>
    <p>Co-signature</p>
    <p>Release Tree &lt;source code&gt;</p>
    <p>&lt;binaries&gt;</p>
    <p>Verified Builds</p>
    <p>Cothority</p>
    <p>Distribution centerDevelopers</p>
    <p>User</p>
    <p>Download &amp; Verify</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Release Policy File - List of individual developer public keys</p>
    <p>- Signing threshold - Cothority public key - Supported platforms for verified builds</p>
    <p>-</p>
    <p>Verified Builds</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Anti-equivocation Measures 3. Protect users from targeted attacks by coerced or bribed developers</p>
    <p>Policy</p>
    <p>Release 1</p>
    <p>Co-signature</p>
    <p>Release 2</p>
    <p>Co-signature</p>
    <p>Release 3</p>
    <p>Co-signature Developers signatures</p>
    <p>Release Tree &lt;source code&gt;</p>
    <p>&lt;binaries&gt; &lt;previous head&gt;</p>
    <p>Transparency Release Log</p>
    <p>Cothority</p>
    <p>Distribution centerDevelopers</p>
    <p>User</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Policy</p>
    <p>Release 4</p>
    <p>Co-signature</p>
    <p>Release 1</p>
    <p>Co-signature</p>
    <p>Release 2</p>
    <p>Co-signature</p>
    <p>Release 3</p>
    <p>Co-signature</p>
    <p>Anti-equivocation Measures</p>
    <p>Transparency Release Log</p>
    <p>Cothority</p>
    <p>Distribution centerDevelopers</p>
    <p>User</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Policy</p>
    <p>Release 4</p>
    <p>Co-signature</p>
    <p>Release 1</p>
    <p>Co-signature</p>
    <p>Release 2</p>
    <p>Co-signature</p>
    <p>Release 3</p>
    <p>Co-signature</p>
    <p>Anti-equivocation Measures</p>
    <p>Transparency Release Log</p>
    <p>Cothority</p>
    <p>Distribution centerDevelopers</p>
    <p>User</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Evolution of Developer Keys 4. Enable developers to securely rotate their signing keys</p>
    <p>Release 4</p>
    <p>Co-signature</p>
    <p>Release 1</p>
    <p>Co-signature</p>
    <p>Release 2</p>
    <p>Co-signature</p>
    <p>Release 3</p>
    <p>Co-signature</p>
    <p>Developers signatures</p>
    <p>Release Tree &lt;source code&gt;</p>
    <p>&lt;binaries&gt; &lt;previous head&gt;</p>
    <p>Cothority</p>
    <p>Distribution centerDevelopers</p>
    <p>User</p>
    <p>Policy</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Evolution of Developer Keys</p>
    <p>Release 4</p>
    <p>Co-signature</p>
    <p>Release 1</p>
    <p>Co-signature</p>
    <p>Release 2</p>
    <p>Co-signature</p>
    <p>Release 3</p>
    <p>Co-signature</p>
    <p>Developers signatures</p>
    <p>Release Tree</p>
    <p>Cothority</p>
    <p>Distribution centerDevelopers</p>
    <p>User</p>
    <p>Policy dev keys</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Evolution of Developer Keys</p>
    <p>Release 4</p>
    <p>Co-signature</p>
    <p>Release 1</p>
    <p>Co-signature</p>
    <p>Release 2</p>
    <p>Co-signature</p>
    <p>Release 3</p>
    <p>Co-signature</p>
    <p>Cothority</p>
    <p>Distribution centerDevelopers</p>
    <p>User</p>
    <p>Developers signatures</p>
    <p>Release Tree</p>
    <p>Policy dev keys</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Evolution of Developer Keys</p>
    <p>Release 4</p>
    <p>Co-signature</p>
    <p>Release 1</p>
    <p>Co-signature</p>
    <p>Release 2</p>
    <p>Co-signature</p>
    <p>Release 3</p>
    <p>Co-signature</p>
    <p>Cothority</p>
    <p>Distribution centerDevelopers</p>
    <p>User</p>
    <p>Developers signatures</p>
    <p>Release Tree</p>
    <p>Policy dev keys</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Cothority key config I</p>
    <p>Release 4</p>
    <p>Co-signature</p>
    <p>Release 1</p>
    <p>Co-signature</p>
    <p>Release 2</p>
    <p>Co-signature</p>
    <p>Release 3</p>
    <p>Co-signature</p>
    <p>Evolution of Cothority Configuration</p>
    <p>Cothority</p>
    <p>Distribution centerDevelopers</p>
    <p>User</p>
    <p>Developers signatures</p>
    <p>Release Tree</p>
    <p>Policy co-config</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Cothority key config I</p>
    <p>Cothority key config II</p>
    <p>Release 4</p>
    <p>Co-signature</p>
    <p>Release 1</p>
    <p>Co-signature</p>
    <p>Release 2</p>
    <p>Co-signature</p>
    <p>Release 3</p>
    <p>Co-signature</p>
    <p>Evolution of Cothority Configuration</p>
    <p>Cothority</p>
    <p>Distribution centerDevelopers</p>
    <p>User</p>
    <p>Developers signatures</p>
    <p>Release Tree</p>
    <p>Policy co-config</p>
    <p>Decentralized Release Approval Anti-equivocation Key EvolutionVerified Builds</p>
  </div>
  <div class="page">
    <p>Skipchains</p>
  </div>
  <div class="page">
    <p>Skipchains  Novel data structure: blockchain + skip lists</p>
    <p>Blocks have multi-hop two-way links:</p>
    <p>Backward links - hashes of past blocks</p>
    <p>Forward links - (collective) signatures</p>
    <p>Secure and efficient traversal of arbitrary long timelines</p>
  </div>
  <div class="page">
    <p>Skipchains</p>
    <p>Cothority configuration</p>
    <p>Skipblock Backward link (hash) Forward link (co-signature)</p>
  </div>
  <div class="page">
    <p>Implementation and Evaluation</p>
  </div>
  <div class="page">
    <p>Implementation  CHAINIAC is implemented in Go</p>
    <p>Using the DEDIS Kyber crypto library and Onet networking framework</p>
    <p>Available open-source at https://github.com/dedis/paper_chainiac</p>
  </div>
  <div class="page">
    <p>Evaluation Methodology What is the cost effect of CHAINIAC on cothority nodes and on clients?</p>
    <p>Cothority-node CPU cost of validating releases and maintaining transparency release log  The average values for six Debian packages over two years</p>
  </div>
  <div class="page">
    <p>Evaluation 1. Cothority-node CPU cost of validating releases and maintaining release log</p>
    <p>Number of nodes</p>
    <p>T im</p>
    <p>e s</p>
    <p>p e n t o</p>
    <p>n e</p>
    <p>a c h n</p>
    <p>o d e p</p>
    <p>e r p</p>
    <p>a c k a g e (</p>
    <p>s e c )</p>
    <p>Wall-total over all nodes</p>
    <p>CPU / Wall</p>
    <p>Dev-signature verification</p>
    <p>Creating timestamp</p>
    <p>Collective signing</p>
    <p>Reproducible build</p>
    <p>Release 1</p>
    <p>Co-signature</p>
    <p>Release 2</p>
    <p>Co-signature</p>
    <p>Release 3</p>
    <p>Co-signature</p>
    <p>Cothority</p>
  </div>
  <div class="page">
    <p>Evaluation 1. Cothority-node CPU cost of validating releases and maintaining release log</p>
    <p>Number of nodes</p>
    <p>T im</p>
    <p>e s</p>
    <p>p e n t o</p>
    <p>n e</p>
    <p>a c h n</p>
    <p>o d e p</p>
    <p>e r p</p>
    <p>a c k a g e (</p>
    <p>s e c )</p>
    <p>Wall-total over all nodes</p>
    <p>CPU / Wall</p>
    <p>Dev-signature verification</p>
    <p>Creating timestamp</p>
    <p>Collective signing</p>
    <p>Reproducible build</p>
    <p>Release 1</p>
    <p>Co-signature</p>
    <p>Release 2</p>
    <p>Co-signature</p>
    <p>Release 3</p>
    <p>Co-signature</p>
    <p>Cothority</p>
  </div>
  <div class="page">
    <p>Evaluation Methodology What is the cost effect of CHAINIAC on cothority nodes and on clients?</p>
    <p>Cothority-node CPU cost of validating releases and maintaining transparency release log  The average values of six required Debian packages</p>
    <p>CPU cost of reproducing packages on cothority nodes  From 1.5 to 30 minutes to reproduce a package</p>
    <p>Skipchain effect on communication cost  Reducing the cost by the factor of 30 on 1.5 million update-requests from the PyPI repository</p>
    <p>CPU and bandwidth cost of securing a multi-package distribution  ~20 sec to create a snapshot of &gt;50k-packages Debian repository</p>
  </div>
  <div class="page">
    <p>Conclusion  CHAINIAC decentralizes each step of the software-update process to</p>
    <p>increase trustworthiness and to eliminate single points of failure</p>
    <p>Skipchain structure for efficient logging and secure key evolution; See https://bford.github.io/2017/08/01/skipchain/ for more applications</p>
    <p>Verified builds as an improvement over reproducible builds</p>
    <p>Role-based architecture, multi-package Chainiac and more are in the paper</p>
    <p>Kirill Nikitin</p>
    <p>kirill.nikitin@epfl.ch</p>
    <p>@nikir1ll</p>
  </div>
</Presentation>
