<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>ZMap</p>
    <p>Fast Internet-Wide Scanning and its Security Applications</p>
    <p>Zakir Durumeric Eric Wustrow J. Alex Halderman</p>
    <p>University of Michigan</p>
  </div>
  <div class="page">
    <p>Previous research has shown promise of Internet-wide surveys Internet-Wide Network Studies</p>
    <p>Mining Ps and Qs: Widespread weak keys in network devices (2012)</p>
    <p>EFF SSL Observatory: A glimpse at the CA ecosystem (2010)</p>
    <p>Census and Survey of the Visible Internet (2008)</p>
  </div>
  <div class="page">
    <p>Previous research has shown promise of Internet-wide surveys Internet-Wide Network Studies</p>
    <p>Mining Ps and Qs: Widespread weak keys in network devices (2012)</p>
    <p>EFF SSL Observatory: A glimpse at the CA ecosystem (2010)</p>
    <p>Census and Survey of the Visible Internet (2008)</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>What if?</p>
    <p>What if Internet surveys didnt require heroic effort?</p>
    <p>What if we could scan the HTTPS ecosystem every day?</p>
    <p>What if we wrote a whole-Internet scanner from scratch?</p>
  </div>
  <div class="page">
    <p>Introducing ZMap an open-source tool that can port scan the entire IPv4 address space from just one machine in under 45 minutes with 98% coverage</p>
    <p>With Zmap, an Internet-wide TCP SYN scan on port 443 is as easy as:</p>
    <p>$ zmap p 443 o results.txt 34,132,693 listening hosts (took 44m12s)</p>
  </div>
  <div class="page">
    <p>Talk Roadmap</p>
  </div>
  <div class="page">
    <p>ZMap Architecture Existing Network Scanners Reduce state by scanning in batches - Time lost due to blocking - Results lost due to timeouts</p>
    <p>Track individual hosts and retransmit - Most hosts will not respond</p>
    <p>Avoid flooding through timing - Time lost waiting</p>
    <p>Utilize existing OS network stack - Not optimized for immense number of connections</p>
    <p>ZMap Eliminate local per-connection state - Fully asynchronous components - No blocking except for network</p>
    <p>Shotgun Scanning Approach - Always send n probes per host</p>
    <p>Scan widely dispersed targets - Send as fast as network allows</p>
    <p>Probe-optimized Network Stack - Bypass inefficiencies by generating Ethernet frames</p>
  </div>
  <div class="page">
    <p>Addressing Probes 1. Scan hosts according to random permutation</p>
    <p>How do we randomly scan addresses without excessive state?</p>
    <p>Negligible State 4</p>
  </div>
  <div class="page">
    <p>Validating Responses How do we validate responses without local per-target state?</p>
    <p>Encode secrets into mutable fields of probe packets that will have recognizable effect on responses</p>
    <p>receiver MAC address</p>
    <p>sender MAC address</p>
    <p>length data</p>
    <p>V sender IP address</p>
    <p>data  IHL receiver IP address</p>
    <p>receiver port</p>
    <p>sender port</p>
    <p>sequence number data</p>
    <p>ack. number</p>
    <p>Ethernet</p>
    <p>IP</p>
    <p>TCP</p>
  </div>
  <div class="page">
    <p>Validating Responses How do we validate responses without local per-target state?</p>
    <p>Encode secrets into mutable fields of probe packets that will have recognizable effect on responses</p>
    <p>receiver MAC address</p>
    <p>sender MAC address</p>
    <p>length data</p>
    <p>V sender IP address data  IHL</p>
    <p>receiver IP address</p>
    <p>receiver port</p>
    <p>sender port</p>
    <p>sequence number data</p>
    <p>ack. number</p>
    <p>Ethernet</p>
    <p>IP</p>
    <p>TCP</p>
  </div>
  <div class="page">
    <p>Validating Responses How do we validate responses without local per-target state?</p>
    <p>Encode secrets into mutable fields of probe packets that will have recognizable effect on responses</p>
    <p>receiver MAC address</p>
    <p>sender MAC address</p>
    <p>length data</p>
    <p>V sender IP address data  IHL</p>
    <p>receiver IP address</p>
    <p>sender port</p>
    <p>sequence number data</p>
    <p>ack. number</p>
    <p>receiver port</p>
    <p>Ethernet</p>
    <p>IP</p>
    <p>TCP</p>
  </div>
  <div class="page">
    <p>Packet Transmission and Receipt</p>
    <p>How do we make processing probes easy and fast?</p>
    <p>Probe Generation</p>
    <p>Configuration, Addressing, and Timing</p>
    <p>Response Interpretation</p>
    <p>Packet Tx (raw socket)</p>
    <p>Packet Rx (libpcap)</p>
    <p>Output Handler</p>
  </div>
  <div class="page">
    <p>Talk Roadmap</p>
  </div>
  <div class="page">
    <p>How fast is too fast? Scan Rate No correlation between hit-rate and scan-rate.</p>
    <p>Slower scanning does not reveal additional hosts.</p>
  </div>
  <div class="page">
    <p>Is one probe packet sufficient? Coverage</p>
    <p>Scan Coverage</p>
    <p>We expect an eventual plateau in responsive hosts, regardless of additional probes.</p>
    <p>Estimated Ground Truth</p>
  </div>
  <div class="page">
    <p>Comparison with Nmap</p>
    <p>ZMap is capable of scanning more than 1300 times faster than the most aggressive Nmap default configuration (insane)</p>
    <p>Surprisingly, ZMap also finds more results than Nmap</p>
    <p>Normalized Coverage</p>
    <p>Duration (mm:ss)</p>
    <p>Est. Internet Wide Scan</p>
    <p>Nmap (1 probe) 81.4% 24:12 62.5 days</p>
    <p>Nmap (2 probes) 97.8% 45:03 116.3 days</p>
    <p>ZMap (1 probe) 98.7% 00:10 1:09:35</p>
    <p>ZMap (2 probes) 100.0% 00:11 2:12:35</p>
    <p>Averages for scanning 1 million random hosts</p>
  </div>
  <div class="page">
    <p>Why does ZMap find more hosts than Nmap? Probe Response Times</p>
    <p>Response Times</p>
    <p>Statelessness leads to both higher performance and increased coverage.</p>
  </div>
  <div class="page">
    <p>Talk Roadmap</p>
  </div>
  <div class="page">
    <p>ZMap SYN Scan</p>
    <p>libevent2</p>
    <p>OpenSSL</p>
    <p>Custom Processing</p>
    <p>Visibility into Distributed Systems</p>
    <p>ZMap enables us to scan the public HTTPS Ecosystem every day</p>
    <p>Gaining near real-time perspective into the CA ecosystem</p>
    <p>Completed 110 scans of the HTTPS ecosystem in the last year</p>
    <p>We collected more than 42 million unique certificates of which 6.9 million were browser trusted. Identified 2 sets of misissued CA certificates.</p>
  </div>
  <div class="page">
    <p>Tracking Protocol Adoption Examining the growth in global HTTPS adoption</p>
    <p>June 2012May 2013</p>
  </div>
  <div class="page">
    <p>Enumerating Vulnerable Hosts</p>
    <p>HD Moore disclosed vulnerabilities in several common UPnP frameworks in January 2013.</p>
    <p>Under 6 hours to code and run UPnP discovery scan. Custom probe module, 150 SLOC.</p>
    <p>We found that 3.34 M of 15.7 M devices were vulnerable.</p>
    <p>Compromise possible with a single UDP packet!</p>
    <p>Discovering UPnP Vulnerabilities En Masse</p>
  </div>
  <div class="page">
    <p>Enumerating Unadvertised Tor Bridges Uncovering Hidden Services</p>
    <p>Scanning has potential to uncover unadvertised services</p>
    <p>We perform a Tor handshake with public IPv4 addresses on port 9001 and 443</p>
    <p>We identified 86% of live allocated bridges with a single scan</p>
    <p>Tor has developed obfsproxy that listens on random ports to count this type of attack</p>
  </div>
  <div class="page">
    <p>Further ZMap Potential Further Potential Applications</p>
    <p>Detect Service Disruptions</p>
    <p>Track Adoption of Defenses</p>
    <p>Study Criminal Behavior</p>
    <p>Other Security Implications</p>
    <p>Anonymous Communication</p>
    <p>Track users between IP leases</p>
    <p>Snapshot of HTTPS outages caused by Hurricane Sandy</p>
  </div>
  <div class="page">
    <p>Talk Roadmap</p>
  </div>
  <div class="page">
    <p>Ethics of Active Scanning Considerations Impossible to request permission from all owners</p>
    <p>No IP-level equivalent to robots exclusion standard</p>
    <p>Administrators may believe that they are under attack</p>
    <p>Reducing Scan Impact Scan in random order to avoid overwhelming networks</p>
    <p>Signal benign nature over HTTP and w/ DNS hostnames</p>
    <p>Honor all requests to be excluded from future scans</p>
  </div>
  <div class="page">
    <p>User Responses</p>
    <p>Responses from 145 users</p>
    <p>Blacklisted 91 entities (3.7 M total addresses)</p>
    <p>Over 200 Internet-wide scans over the past year (&gt;1 trillion probes)</p>
    <p>Entity Type Responses</p>
    <p>Small Business 41</p>
    <p>Home User 38</p>
    <p>Corporation 17</p>
    <p>Academic Institution 22</p>
    <p>Government 15</p>
    <p>ISP 2</p>
    <p>Unknown 10</p>
    <p>Total 145</p>
  </div>
  <div class="page">
    <p>Future Work</p>
    <p>TLS Server Name Indication</p>
    <p>Scanning Exclusion Standards</p>
    <p>IPv6 Scanning Methdology?</p>
    <p>Use ZMap to do great research!</p>
  </div>
  <div class="page">
    <p>Public Release</p>
    <p>Releasing ZMap as a fully documented open source project</p>
    <p>Downloaded it now from https://zmap.io</p>
    <p>Scanning the Internet really is as simple as:</p>
    <p>Be sure you have adequate bandwidth and be a good Internet neighbor!</p>
    <p>$ zmap p 443 o results.txt</p>
  </div>
  <div class="page">
    <p>Conclusion Living in a unique period IPv4 can be quickly, exhaustively scanned IPv6 has not yet been widely deployed</p>
    <p>ZMap lowers barriers of entry for Internet-wide surveys Now possible to scan the entire IPv4 address space from one host in under 45 minutes with 98% coverage</p>
    <p>Explored potential applications</p>
    <p>Ultimately we hope ZMap enables future research</p>
  </div>
  <div class="page">
    <p>ZMap</p>
    <p>Fast Internet-Wide Scanning and its Security Applications</p>
    <p>Zakir Durumeric Eric Wustrow J. Alex Halderman University of Michigan</p>
    <p>https://zmap.io</p>
  </div>
</Presentation>
