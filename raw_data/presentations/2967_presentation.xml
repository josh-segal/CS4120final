<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>User-Guided Device Driver Synthesis Leonid Ryzhyk Adam Walker John Keys</p>
    <p>Alexander Legg Arun Raghunath Michael Stumm</p>
    <p>Mona Vij</p>
  </div>
  <div class="page">
    <p>The joys of driver development</p>
    <p>Drivers are hard to write</p>
    <p>and even harder to debug</p>
    <p>They often delay product delivery</p>
    <p>and are the most common source of OS failures</p>
  </div>
  <div class="page">
    <p>The joys of driver development</p>
    <p>Drivers are hard to write</p>
    <p>and even harder to debug</p>
    <p>They often delay product delivery</p>
    <p>and are the most common source of OS failures</p>
    <p>Funded by a research grant from Intel</p>
  </div>
  <div class="page">
    <p>Observation</p>
    <p>driver.c</p>
    <p>OS interface spec</p>
    <p>device spec</p>
    <p>Driver development is a mechanical task</p>
    <p>Can in principle be automated</p>
  </div>
  <div class="page">
    <p>Observation</p>
    <p>driver.c</p>
    <p>OS interface spec</p>
    <p>device spec</p>
    <p>Driver development is a mechanical task</p>
    <p>Can in principle be automated</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>driver</p>
    <p>OS requests</p>
    <p>device</p>
    <p>physical I/O</p>
    <p>completion callbacks</p>
    <p>Driver synthesis can be formalised as a two-player game: driver vs (device + OS)</p>
  </div>
  <div class="page">
    <p>Motivation</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Addresses an important problem</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Addresses an important problem A simple, neat idea</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Addresses an important problem A simple, neat idea</p>
    <p>One of few applications of FM to OS (beyond verification)</p>
    <p>+</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Addresses an important problem A simple, neat idea</p>
    <p>Considered impossibleOne of few applications of FM to OS (beyond verification)</p>
    <p>+</p>
  </div>
  <div class="page">
    <p>driver.c</p>
    <p>OS interface spec</p>
    <p>device spec</p>
  </div>
  <div class="page">
    <p>driver.c</p>
    <p>OS interface spec</p>
    <p>device spec</p>
  </div>
  <div class="page">
    <p>driver.c</p>
    <p>OS interface spec</p>
    <p>device spec</p>
  </div>
  <div class="page">
    <p>driver.c</p>
    <p>OS interface spec</p>
    <p>device spec</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>request:set_time(19:30:00)</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>request:set_time(19:30:00)</p>
    <p>write_hours(19)</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>request:set_time(19:30:00)</p>
    <p>write_hours(19)</p>
    <p>write_minutes(30)</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>request:set_time(19:30:00)</p>
    <p>write_hours(19)</p>
    <p>write_minutes(30)</p>
    <p>write_seconds(00)</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>request:set_time(19:30:00)</p>
    <p>write_hours(19)</p>
    <p>TICK</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>request:set_time(19:30:00)</p>
    <p>write_hours(19)</p>
    <p>TICK</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>request:set_time(19:30:00)</p>
    <p>write_hours(19)</p>
    <p>TICK</p>
    <p>write_minutes(30)</p>
    <p>write_seconds(00)</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>request:set_time(19:30:00)</p>
    <p>STOP</p>
    <p>write_hours(19)</p>
    <p>write_minutes(30)</p>
    <p>write_seconds(00)</p>
    <p>START19:30:00</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>set_time(19:30:00)</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>set_time(19:30:00)</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>set_time 9:59:59</p>
    <p>write_hours</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>write_hours</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>STOP</p>
    <p>START</p>
    <p>START</p>
    <p>START</p>
    <p>TICK</p>
    <p>TICK</p>
    <p>TICK</p>
    <p>STOP</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>set_time 9:59:59</p>
    <p>write_hours</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>write_hours</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>STOP</p>
    <p>START</p>
    <p>START</p>
    <p>START</p>
    <p>TICK</p>
    <p>TICK</p>
    <p>TICK</p>
    <p>STOP</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>set_time 9:59:59</p>
    <p>write_hours</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>write_hours</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>STOP</p>
    <p>START</p>
    <p>START</p>
    <p>START</p>
    <p>TICK</p>
    <p>TICK</p>
    <p>TICK</p>
    <p>STOP</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>set_time 9:59:59</p>
    <p>write_hours</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>write_hours</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>STOP</p>
    <p>START</p>
    <p>START</p>
    <p>START</p>
    <p>TICK</p>
    <p>TICK</p>
    <p>TICK</p>
    <p>STOP</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>set_time 9:59:59</p>
    <p>write_hours</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>write_hours</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>STOP</p>
    <p>START</p>
    <p>START</p>
    <p>START</p>
    <p>TICK</p>
    <p>TICK</p>
    <p>TICK</p>
    <p>STOP</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>set_time 9:59:59</p>
    <p>write_hours</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>write_hours</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>STOP</p>
    <p>START</p>
    <p>START</p>
    <p>START</p>
    <p>TICK</p>
    <p>TICK</p>
    <p>TICK</p>
    <p>STOP</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>set_time 9:59:59</p>
    <p>write_hours</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>write_hours</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>STOP</p>
    <p>START</p>
    <p>START</p>
    <p>START</p>
    <p>TICK</p>
    <p>TICK</p>
    <p>TICK</p>
    <p>STOP</p>
  </div>
  <div class="page">
    <p>Driver Synthesis as a Game</p>
    <p>set_time 9:59:59</p>
    <p>write_hours</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>write_hours</p>
    <p>write_minutes</p>
    <p>write_seconds</p>
    <p>START</p>
    <p>START</p>
    <p>START</p>
    <p>TICK</p>
    <p>TICK</p>
    <p>TICK</p>
    <p>STOP</p>
    <p>STOP</p>
  </div>
  <div class="page">
    <p>Termite Tool Demo</p>
  </div>
  <div class="page">
    <p>Push-Button Synthesis (SOSP'09)</p>
    <p>spec code</p>
    <p>correct spec =&gt; correct implementation</p>
    <p>In theory:</p>
    <p>In practice: (based on our experience) taking control away from the developer is not a good idea</p>
  </div>
  <div class="page">
    <p>Push-Button Synthesis (SOSP'09)</p>
    <p>Choosing a preferred implementation method is hard (e.g., polling vs interrupts)</p>
    <p>Non-functional properties (power, performance, timing, etc.) are hard to enforce</p>
    <p>Achieving nice code structure is hard</p>
  </div>
  <div class="page">
    <p>User-Guided Synthesis</p>
    <p>The user is in control  can write arbitrary manual code or</p>
    <p>arbitrarily alter automatically generated code</p>
    <p>Synthesiser works as smart auto-complete  can generate a statement, a function, or even the whole driver</p>
    <p>(on demand)</p>
    <p>never alters user code</p>
    <p>completes synthesised+manual code to a correct implementation when possible</p>
    <p>The tool enforces correctness</p>
  </div>
  <div class="page">
    <p>Demo (continued)</p>
  </div>
  <div class="page">
    <p>Guided Synthesis Scenario 1: Fully Automatic Synthesis</p>
    <p>send(){ ... }</p>
    <p>receive(){ ... }</p>
    <p>driver template</p>
    <p>send(){ write(ctl,flags); write(irq_en,0xff); write(cmd,snd);</p>
    <p>}</p>
    <p>receive(){ write(ctl,flags); write(irq_en,0xff); write(cmd,rcv);</p>
    <p>}</p>
    <p>synthesised driver</p>
  </div>
  <div class="page">
    <p>Guided Synthesis Scenario 2: Hybrid Approach</p>
    <p>send(){ ... }</p>
    <p>receive(){ ... }</p>
    <p>empty driver template</p>
    <p>send(){ write(ctl,flags);</p>
    <p>... }</p>
    <p>receive(){ ... }</p>
    <p>partially synthesised driver</p>
  </div>
  <div class="page">
    <p>Guided Synthesis Scenario 2: Hybrid Approach</p>
    <p>send(){ write(ctl,0); ... }</p>
    <p>receive(){ ... }</p>
    <p>modified driver template</p>
    <p>send(){ write(ctl,flags);</p>
    <p>... }</p>
    <p>receive(){ ... }</p>
    <p>partially synthesised driver</p>
  </div>
  <div class="page">
    <p>Guided Synthesis Scenario 2: Hybrid Approach</p>
    <p>send(){ write(ctl,0); ... }</p>
    <p>receive(){ ... }</p>
    <p>modified driver template synthesised driver</p>
    <p>send(){ write(ctl,flags); write(irq_en,0xff); write(cmd,snd);</p>
    <p>}</p>
    <p>receive(){ write(ctl,flags); write(irq_en,0xff); write(cmd,rcv);</p>
    <p>}</p>
  </div>
  <div class="page">
    <p>Guided Synthesis Scenario 3: Verification</p>
    <p>manually developed driver</p>
    <p>send(){ write(ctl,flags); write(irq_en,0xff); write(cmd,snd);</p>
    <p>}</p>
    <p>receive(){ write(ctl,flags); write(irq_en,0xff); write(cmd,rcv);</p>
    <p>}</p>
  </div>
  <div class="page">
    <p>Obtaining Specs for Driver Synthesis</p>
    <p>driver.c</p>
    <p>OS interface spec</p>
    <p>device spec</p>
  </div>
  <div class="page">
    <p>Obtaining Specs for Driver Synthesis</p>
    <p>driver.c</p>
    <p>OS interface spec</p>
    <p>device spec</p>
    <p>The synthesis paradox: developing the spec is harder</p>
    <p>than writing the driver by hand.</p>
  </div>
  <div class="page">
    <p>Obtaining Specs for Driver Synthesis</p>
    <p>driver.c</p>
    <p>OS interface spec</p>
    <p>device spec</p>
    <p>OS specs are generic, i.e., made once for a class of devices</p>
  </div>
  <div class="page">
    <p>Obtaining Specs for Driver Synthesis</p>
    <p>driver.c</p>
    <p>OS interface spec</p>
    <p>device spec</p>
    <p>device specs obtained from hardware developers</p>
  </div>
  <div class="page">
    <p>Synthesised Drivers</p>
    <p>Device Synthesis time (s)</p>
    <p>locs</p>
    <p>Real-time clock 74 56</p>
    <p>IDE 71 94</p>
    <p>STM32F103RB UART 309 74</p>
    <p>exynos 5 UART 177 35</p>
    <p>STM32F103RB I2C 39 119</p>
    <p>exynos 5 I2C 40 77</p>
    <p>webcam 190 113</p>
    <p>SPI 15 27</p>
  </div>
  <div class="page">
    <p>Synthesised Drivers</p>
    <p>Device Synthesis time (s)</p>
    <p>locs</p>
    <p>Real-time clock 74 56</p>
    <p>IDE 71 94</p>
    <p>STM32F103RB UART 309 74</p>
    <p>exynos 5 UART 177 35</p>
    <p>STM32F103RB I2C 39 119</p>
    <p>exynos 5 I2C 40 77</p>
    <p>webcam 190 113</p>
    <p>SPI 15 27</p>
  </div>
  <div class="page">
    <p>Scope and Limitations</p>
    <p>Focus on synthesising device control logic  Resource allocation, binding to OS interfaces, etc., must be</p>
    <p>written manually or synthesised using different techniques</p>
    <p>Sequential synthesis  Synchronisation synthesis as a separate step (jointly with</p>
    <p>CU Boulder and IST Austria)</p>
    <p>No DMA support  WiP</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>https://github.com/termite2</p>
    <p>http://termite2.org</p>
    <p>Termite automates tedious driver development</p>
    <p>The user has full control over the source code, but Termite enforces correctness</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>https://github.com/termite2</p>
    <p>http://termite2.org</p>
    <p>Termite automates tedious driver development</p>
    <p>The user has full control over the source code, but Termite enforces correctness</p>
    <p>Driver synthesis is less impossible than previously believed</p>
  </div>
</Presentation>
