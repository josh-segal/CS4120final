<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Low-latency Job Scheduling with Preemption for the Development of Deep Learning Hidehito Yabuuchi* (The University of Tokyo) Daisuke Taniwaki, Shingo Omura (Preferred Networks, Inc.)</p>
  </div>
  <div class="page">
    <p>Outline  Introduction</p>
    <p>Deep Learning Development on Clusters  DL Training Jobs Characteristics  Related Work  Goal &amp; Result Summary</p>
    <p>System Model  Proposed Scheduling Algorithm: FitGpp  Evaluation  Conclusion</p>
  </div>
  <div class="page">
    <p>Deep Learning Development on Clusters</p>
    <p>Efficient resource management of clusters for deep learning development is essential  DL dev conducted explosively in many fields</p>
    <p>CV, NLP, robotics, bio, ...  Prompting usage of computing clusters</p>
    <p>DL dev requires large computing resource including GPUs</p>
  </div>
  <div class="page">
    <p>DL Training Jobs Characteristics</p>
    <p>Many: Trial-and-Error (TE) jobs  for debugging &amp; testing prototypes  supposed to be started immediately</p>
    <p>Developers want to monitor progress soon  to save time for exploring numerous options</p>
    <p>Others: can be executed in Best-Effort (BE) manner  e.g. Large-scale evaluation after tuning</p>
    <p>time</p>
    <p>ac cu</p>
    <p>ra cy</p>
    <p>job 3 job 1</p>
    <p>job 4 job 2</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Handle TE jobs &amp; BE jobs mixture in limited situations  Big-C [W. Chen+, ATC 17]</p>
    <p>Container-based preemptive job scheduler  GPUs not efficiently shared</p>
    <p>Optimus [Y. Peng+, EuroSys 18], Gandiva [W. Xiao+, OSDI 18]  Job schedulers specialized for DL training jobs  Only compatible with select DL frameworks</p>
    <p>Hawk [P. Delgado+, ATC 15] , Eagle [P. Delgado+, SoCC 16]  Reserve part of cluster for immediate scheduling of short jobs  Finding optimal reservation factor is not trivial</p>
  </div>
  <div class="page">
    <p>Goals &amp; Result Summary  Low-latency scheduling of TE jobs</p>
    <p>TE slowdown 95th: -99.6% cmp. with FIFO  w/o greatly prolonging slowdown of BE jobs</p>
    <p>BE slowdown 95th: -16.4% cmp. with other preemptive sched  in versatile situations</p>
    <p>Only requires that BE jobs can be suspended</p>
  </div>
  <div class="page">
    <p>Outline  Introduction  System Model</p>
    <p>System Model  Grace Period</p>
    <p>Proposed Scheduling Algorithm: FitGpp  Evaluation  Conclusion</p>
  </div>
  <div class="page">
    <p>System Model</p>
    <p>(Supposing systems similar to k8s)  User-specified job spec</p>
    <p>TE or BE  Resource demand  Grace period (GP)</p>
    <p>Schedulers may suspend BE jobs  placed back to job queue  Many DL frameworks support</p>
    <p>checkpointing</p>
    <p>job queue</p>
    <p>BE</p>
    <p>TE</p>
    <p>BE</p>
    <p>running</p>
    <p>suspend</p>
  </div>
  <div class="page">
    <p>Grace Period</p>
    <p>Jobs do suspension processing before suspended  e.g. saving partially-trained models to storage  holding resources during GP</p>
    <p>Typical DL jobs require long GPs for checkpointing</p>
    <p>Suspension processing</p>
    <p>SIGTERM SIGKILL</p>
    <p>Running</p>
    <p>Grace period</p>
  </div>
  <div class="page">
    <p>Outline  Introduction  System Model  Proposed Scheduling Algorithm: FitGpp</p>
    <p>Overview  Design  Formalization</p>
    <p>Evaluation  Conclusion</p>
  </div>
  <div class="page">
    <p>Fitting Grace Period Preemption (FitGpp)</p>
    <p>Built on FIFO principle  Suspended jobs placed back to</p>
    <p>front of the queue  Prioritize TE jobs over BEs</p>
    <p>to reduce latency  Preempt BE jobs</p>
    <p>if resource is insufficient  Which BE jobs?  not to greatly delay BE jobs</p>
    <p>job queue</p>
    <p>TE</p>
    <p>node</p>
    <p>BE</p>
    <p>node</p>
  </div>
  <div class="page">
    <p>Minimizing Re-scheduling Intervals</p>
    <p>Preempting large BE jobs will likely cause head-of-line blocking  placed back to front of the queue</p>
    <p>Prefer BE jobs with small resource demand</p>
    <p>job queue</p>
    <p>TE</p>
    <p>BE</p>
    <p>node node</p>
    <p>re-sched</p>
  </div>
  <div class="page">
    <p>Minimizing #Preemption</p>
    <p>Preempting too small BE jobs will likely require another preemption  increasing total</p>
    <p>re-scheduling time loss  Select BE jobs that can offer</p>
    <p>enough resources for TE job</p>
    <p>job queue</p>
    <p>TE</p>
    <p>node</p>
    <p>BE</p>
    <p>node</p>
  </div>
  <div class="page">
    <p>Minimizing Preemption-incurred Time Loss</p>
    <p>GP length determines time until incoming TE job starts running</p>
    <p>Prefer BE jobs with short GPs</p>
  </div>
  <div class="page">
    <p>Avoiding Starvation</p>
    <p>Limit max #preemption of each BE job  making sure each BE job makes progress</p>
  </div>
  <div class="page">
    <p>Formalization</p>
    <p>Dj = normalized resource demand vector</p>
    <p>Dj</p>
    <p>N</p>
    <p>TE</p>
    <p>BE</p>
    <p>DTE</p>
    <p>Prefer short GP Prefer small resource demand</p>
  </div>
  <div class="page">
    <p>Formalization</p>
    <p>N = free resource of node on which j is running</p>
    <p>Starvation-free Offer enough resource</p>
    <p>Dj</p>
    <p>N</p>
    <p>TE</p>
    <p>BE</p>
    <p>DTE</p>
  </div>
  <div class="page">
    <p>Formalization</p>
    <p>Dj = normalized resource demand vector</p>
    <p>N = free resource of node on which j is running</p>
    <p>Not rely on exec time estimation</p>
    <p>Dj</p>
    <p>N</p>
    <p>TE</p>
    <p>BE</p>
    <p>DTE</p>
  </div>
  <div class="page">
    <p>Outline  Introduction  System Model  Proposed Scheduling Algorithm: FitGpp  Evaluation</p>
    <p>Setup  Result  Source of Improvement</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Setup</p>
    <p>Synthesized typical workload based on real jobs  30% TE</p>
    <p>Compared with:  FIFO  Longest Remaining Time Preemption (LRTP; used in Big-C)  Random</p>
    <p>In simulated environment  Max #preemption P = 1</p>
  </div>
  <div class="page">
    <p>Result - TE Jobs</p>
    <p>better</p>
    <p>TE 95th: -99.6% cmp. with FIFO</p>
  </div>
  <div class="page">
    <p>Result - BE jobs</p>
    <p>BE 95th: -16.4%</p>
    <p>BE 50th: -13.2% cmp. with LRTP</p>
    <p>better</p>
  </div>
  <div class="page">
    <p>Sources of Improvement</p>
    <p>Re-scheduling intervals reduced to ~half</p>
    <p>Proportion of preempted jobs reduced to &lt; 7.0%</p>
    <p>LRTP 4.0 4.0 5.0</p>
    <p>Random 4.0 4.0 6.0</p>
    <p>FitGpp 2.0 2.0 4.0</p>
    <p>LRTP 9.6%</p>
    <p>Random 9.7%</p>
    <p>FitGpp 0.63%</p>
    <p>[min]</p>
  </div>
  <div class="page">
    <p>Outline  Introduction  System Model  Proposed Scheduling Algorithm: FitGpp  Evaluation  Conclusion</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>FitGpp, preemptive scheduling algorithm  reduce latency of TE jobs</p>
    <p>TE slowdown 95th: -99.6% compared with FIFO  control slowdown of BE jobs</p>
    <p>BE slowdown 95th: -16.4% compared with LRTP  applicable to versatile situations</p>
    <p>Future directions  Multi-node jobs in distributed DL  Apply to other fields than DL dev</p>
  </div>
</Presentation>
