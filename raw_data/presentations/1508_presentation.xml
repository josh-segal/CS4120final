<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Reducing File System Tail Latencies with</p>
    <p>Chopper Jun He, Duy Nguyen+,</p>
    <p>Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau</p>
    <p>Department of Computer Sciences, +Department of Statistics University of Wisconsin, Madison</p>
  </div>
  <div class="page">
    <p>Uncommon tail latencies become common at scale</p>
  </div>
  <div class="page">
    <p>Uncommon tail latencies become common at scale</p>
    <p>Temporary high-latency episodes (unimportant in moderate-size systems) may come to dominate overall</p>
    <p>service performance at large scale.</p>
  </div>
  <div class="page">
    <p>Uncommon tail latencies become common at scale</p>
  </div>
  <div class="page">
    <p>Uncommon tail latencies become common at scale</p>
  </div>
  <div class="page">
    <p>Uncommon tail latencies become common at scale</p>
    <p>Important to avoid long latencies at every node in the data center</p>
  </div>
  <div class="page">
    <p>Local file systems contribute to tail latency</p>
    <p>Local FS</p>
    <p>Local FS</p>
    <p>Local FS</p>
    <p>Local FS</p>
    <p>Local FS</p>
  </div>
  <div class="page">
    <p>Local file systems contribute to tail latency</p>
    <p>Local FS</p>
    <p>Local FS</p>
    <p>Local FS</p>
    <p>Local FS</p>
    <p>Local FS</p>
    <p>Important to avoid long latencies in local file systems</p>
  </div>
  <div class="page">
    <p>Chopper discovers highlatency operations in local FS</p>
    <p>Local FS</p>
    <p>Block Allocator</p>
    <p>Goal Find problematic corner cases in</p>
    <p>file system block allocator</p>
    <p>Challenge File system input space is huge</p>
  </div>
  <div class="page">
    <p>Chopper explores file systems by statistical techniques</p>
  </div>
  <div class="page">
    <p>Chopper explores file systems by statistical techniques</p>
    <p>We provide an overall analysis of file system block allocations (XFS, ext4)</p>
  </div>
  <div class="page">
    <p>Chopper explores file systems by statistical techniques</p>
    <p>We provide an overall analysis of file system block allocations (XFS, ext4)</p>
    <p>We have analyzed unexpected behaviors in detail</p>
  </div>
  <div class="page">
    <p>Chopper explores file systems by statistical techniques</p>
    <p>We provide an overall analysis of file system block allocations (XFS, ext4)</p>
    <p>We have analyzed unexpected behaviors in detail</p>
    <p>We have found and fixed four allocation issues in ext4 and significantly improved layout quality</p>
  </div>
  <div class="page">
    <p>Outline Part 1</p>
    <p>Collect Data</p>
    <p>Part 2 Analyze Data</p>
    <p>Part 3 Understand File System</p>
  </div>
  <div class="page">
    <p>Outline Part 1</p>
    <p>Collect Data</p>
    <p>Part 2 Analyze Data</p>
    <p>Part 3 Understand File System</p>
  </div>
  <div class="page">
    <p>We quantify and qualify everything</p>
    <p>Layout quality</p>
    <p>Workload File system</p>
    <p>INPUT</p>
    <p>OUTPUT</p>
    <p>{</p>
  </div>
  <div class="page">
    <p>We quantify and qualify everything</p>
    <p>Layout quality</p>
    <p>Workload File system</p>
    <p>d-span (unit: byte)</p>
    <p>file: First Last</p>
    <p>INPUT</p>
    <p>OUTPUT</p>
    <p>{</p>
  </div>
  <div class="page">
    <p>We quantify and qualify everything</p>
    <p>Layout quality</p>
    <p>Workload File system</p>
    <p>d-span (unit: byte)</p>
    <p>file: First Last</p>
    <p>First Last</p>
    <p>First Last</p>
    <p>Good:</p>
    <p>Bad:</p>
    <p>INPUT</p>
    <p>OUTPUT</p>
    <p>{</p>
  </div>
  <div class="page">
    <p>What values to pick for the factors?</p>
    <p>Disk Size  Used Ratio  Fragmentation  CPU Count</p>
    <p>File Size  Chunk Count  Internal Density  Chunk Order  Fsync  Sync  File Count  Directory Span</p>
    <p>File System Workload</p>
  </div>
  <div class="page">
    <p>What values to pick for the factors?</p>
    <p>Disk Size  Used Ratio  Fragmentation  CPU Count</p>
    <p>File Size  Chunk Count  Internal Density  Chunk Order  Fsync  Sync  File Count  Directory Span</p>
    <p>File System Workload</p>
  </div>
  <div class="page">
    <p>What values to pick for the factors?</p>
    <p>Disk Size  Used Ratio  Fragmentation  CPU Count</p>
    <p>File Size  Chunk Count  Internal Density  Chunk Order  Fsync  Sync  File Count  Directory Span</p>
    <p>File System Workload</p>
  </div>
  <div class="page">
    <p>What values to pick for the factors?</p>
    <p>Disk Size  Used Ratio  Fragmentation  CPU Count</p>
    <p>File Size  Chunk Count  Internal Density  Chunk Order  Fsync  Sync  File Count  Directory Span</p>
    <p>After refining, 250 years to explore all combinations</p>
    <p>File System Workload</p>
  </div>
  <div class="page">
    <p>We use Latin Hypercube Sampling to search efficiently</p>
  </div>
  <div class="page">
    <p>We use Latin Hypercube Sampling to search efficiently</p>
    <p>Random Sampling</p>
    <p>X X X</p>
    <p>X</p>
    <p>File Size</p>
    <p>D is</p>
    <p>k S</p>
    <p>iz e</p>
    <p>B 8</p>
    <p>G B</p>
    <p>B</p>
  </div>
  <div class="page">
    <p>We use Latin Hypercube Sampling to search efficiently</p>
    <p>Random Sampling</p>
    <p>X X X</p>
    <p>X</p>
    <p>File Size</p>
    <p>D is</p>
    <p>k S</p>
    <p>iz e</p>
    <p>B 8</p>
    <p>G B</p>
    <p>B</p>
  </div>
  <div class="page">
    <p>We use Latin Hypercube Sampling to search efficiently</p>
    <p>Random Sampling</p>
    <p>X X X</p>
    <p>X</p>
    <p>File Size</p>
    <p>D is</p>
    <p>k S</p>
    <p>iz e</p>
    <p>B 8</p>
    <p>G B</p>
    <p>B</p>
  </div>
  <div class="page">
    <p>We use Latin Hypercube Sampling to search efficiently</p>
    <p>Random Sampling</p>
    <p>X X X</p>
    <p>X</p>
    <p>File Size</p>
    <p>D is</p>
    <p>k S</p>
    <p>iz e</p>
    <p>B 8</p>
    <p>G B</p>
    <p>B</p>
  </div>
  <div class="page">
    <p>We use Latin Hypercube Sampling to search efficiently</p>
    <p>File Size</p>
    <p>D is</p>
    <p>k S</p>
    <p>iz e</p>
    <p>Latin Hypercube Sampling</p>
    <p>X X</p>
    <p>X X</p>
    <p>B 8</p>
    <p>G B</p>
    <p>B Random Sampling</p>
    <p>X X X</p>
    <p>X</p>
    <p>File Size</p>
    <p>D is</p>
    <p>k S</p>
    <p>iz e</p>
    <p>B 8</p>
    <p>G B</p>
    <p>B</p>
  </div>
  <div class="page">
    <p>We use Latin Hypercube Sampling to search efficiently</p>
    <p>File Size</p>
    <p>D is</p>
    <p>k S</p>
    <p>iz e</p>
    <p>Latin Hypercube Sampling</p>
    <p>X X</p>
    <p>X X</p>
    <p>B 8</p>
    <p>G B</p>
    <p>B Random Sampling</p>
    <p>X X X</p>
    <p>X</p>
    <p>File Size</p>
    <p>D is</p>
    <p>k S</p>
    <p>iz e</p>
    <p>B 8</p>
    <p>G B</p>
    <p>B</p>
  </div>
  <div class="page">
    <p>We use Latin Hypercube Sampling to search efficiently</p>
    <p>File Size</p>
    <p>D is</p>
    <p>k S</p>
    <p>iz e</p>
    <p>Latin Hypercube Sampling</p>
    <p>X X</p>
    <p>X X</p>
    <p>B 8</p>
    <p>G B</p>
    <p>B Random Sampling</p>
    <p>X X X</p>
    <p>X</p>
    <p>File Size</p>
    <p>D is</p>
    <p>k S</p>
    <p>iz e</p>
    <p>B 8</p>
    <p>G B</p>
    <p>B</p>
    <p>Explores space evenly  Aids visualization  Explores interactions between factors well</p>
  </div>
  <div class="page">
    <p>We use Latin Hypercube Sampling to search efficiently</p>
    <p>File Size</p>
    <p>D is</p>
    <p>k S</p>
    <p>iz e</p>
    <p>Latin Hypercube Sampling</p>
    <p>X X</p>
    <p>X X</p>
    <p>B 8</p>
    <p>G B</p>
    <p>B Random Sampling</p>
    <p>X X X</p>
    <p>X</p>
    <p>File Size</p>
    <p>D is</p>
    <p>k S</p>
    <p>iz e</p>
    <p>B 8</p>
    <p>G B</p>
    <p>B</p>
    <p>Explores space evenly  Aids visualization  Explores interactions between factors well</p>
  </div>
  <div class="page">
    <p>d-span is a signal of block allocation problems</p>
    <p>We use d-span</p>
    <p>A</p>
    <p>B</p>
  </div>
  <div class="page">
    <p>d-span is a signal of block allocation problems</p>
    <p>We use d-span</p>
    <p>A</p>
    <p>B</p>
    <p>Alternative 1 Average</p>
    <p>block distance</p>
  </div>
  <div class="page">
    <p>d-span is a signal of block allocation problems</p>
    <p>We use d-span</p>
    <p>A</p>
    <p>B</p>
    <p>Complex</p>
    <p>Alternative 1 Average</p>
    <p>block distance</p>
  </div>
  <div class="page">
    <p>d-span is a signal of block allocation problems</p>
    <p>App</p>
    <p>Alternative 2 End-to-end</p>
    <p>performance</p>
    <p>We use d-span</p>
    <p>A</p>
    <p>B</p>
    <p>Complex</p>
    <p>Alternative 1 Average</p>
    <p>block distance</p>
  </div>
  <div class="page">
    <p>d-span is a signal of block allocation problems</p>
    <p>App</p>
    <p>Alternative 2 End-to-end</p>
    <p>performance</p>
    <p>We use d-span</p>
    <p>A</p>
    <p>B</p>
    <p>Complex Confounded</p>
    <p>Alternative 1 Average</p>
    <p>block distance</p>
  </div>
  <div class="page">
    <p>d-span is a signal of block allocation problems</p>
    <p>App</p>
    <p>Alternative 2 End-to-end</p>
    <p>performance</p>
    <p>We use d-span</p>
    <p>A</p>
    <p>B</p>
    <p>Simple &amp;</p>
    <p>Informative Complex Confounded</p>
    <p>Alternative 1 Average</p>
    <p>block distance</p>
  </div>
  <div class="page">
    <p>How Chopper works?</p>
    <p>experimental plan</p>
  </div>
  <div class="page">
    <p>How Chopper works?</p>
    <p>experimental plan</p>
    <p>RAM FS</p>
  </div>
  <div class="page">
    <p>How Chopper works?</p>
    <p>experimental plan</p>
    <p>RAM FS</p>
    <p>tmp file</p>
  </div>
  <div class="page">
    <p>How Chopper works?</p>
    <p>experimental plan</p>
    <p>RAM FS</p>
    <p>looping device</p>
    <p>tmp file</p>
  </div>
  <div class="page">
    <p>How Chopper works?</p>
    <p>experimental plan</p>
    <p>File System</p>
    <p>RAM FS</p>
    <p>looping device</p>
    <p>tmp file</p>
  </div>
  <div class="page">
    <p>How Chopper works?</p>
    <p>experimental plan</p>
    <p>Workload</p>
    <p>File System</p>
    <p>RAM FS</p>
    <p>looping device</p>
    <p>tmp file</p>
  </div>
  <div class="page">
    <p>Factors d-span</p>
    <p>How Chopper works?</p>
    <p>experimental plan</p>
    <p>Workload</p>
    <p>File System</p>
    <p>RAM FS</p>
    <p>looping device</p>
    <p>tmp file</p>
  </div>
  <div class="page">
    <p>Factors d-span</p>
    <p>How Chopper works?</p>
    <p>experimental plan</p>
    <p>Workload</p>
    <p>File System</p>
    <p>RAM FS</p>
    <p>looping device</p>
    <p>tmp file</p>
  </div>
  <div class="page">
    <p>Factors d-span</p>
    <p>How Chopper works?</p>
    <p>experimental plan</p>
    <p>Workload</p>
    <p>File System</p>
    <p>RAM FS</p>
    <p>looping device</p>
    <p>tmp file</p>
    <p>All operations are in user space  No kernel modification needed</p>
  </div>
  <div class="page">
    <p>Part 1 Collect Data</p>
    <p>Part 2 Analyze Data</p>
    <p>Part 3 Understand File System</p>
    <p>Outline</p>
  </div>
  <div class="page">
    <p>C um</p>
    <p>ul at</p>
    <p>iv e</p>
    <p>D en</p>
    <p>si ty</p>
    <p>xfsvanilla ext4vanilla</p>
    <p>ext4</p>
    <p>XFS</p>
  </div>
  <div class="page">
    <p>C um</p>
    <p>ul at</p>
    <p>iv e</p>
    <p>D en</p>
    <p>si ty</p>
    <p>xfsvanilla ext4vanilla</p>
    <p>ext4</p>
    <p>XFS</p>
    <p>ext4s block allocator has a large performance tail</p>
  </div>
  <div class="page">
    <p>Factor prioritization shows which factors influence layout the most</p>
    <p>Factor A</p>
    <p>dsp</p>
    <p>an</p>
    <p>Factor B d</p>
    <p>sp an</p>
    <p>More importantLess important</p>
  </div>
  <div class="page">
    <p>Factor prioritization shows which factors influence layout the most in ext4</p>
    <p>CPUCount FileCount</p>
    <p>InternalDensity UsedRatio</p>
    <p>DirectorySpan FreeSpaceLayout</p>
    <p>Fsync ChunkOrder</p>
    <p>Sync FileSize</p>
    <p>DiskSize</p>
    <p>Most important</p>
    <p>Least important Importance (Variance Contribution)</p>
  </div>
  <div class="page">
    <p>Factor prioritization shows which factors influence layout the most in ext4</p>
    <p>CPUCount FileCount</p>
    <p>InternalDensity UsedRatio</p>
    <p>DirectorySpan FreeSpaceLayout</p>
    <p>Fsync ChunkOrder</p>
    <p>Sync FileSize</p>
    <p>DiskSize</p>
    <p>Most important</p>
    <p>Least important Importance (Variance Contribution)</p>
  </div>
  <div class="page">
    <p>Factor prioritization shows which factors influence layout the most in ext4</p>
    <p>CPUCount FileCount</p>
    <p>InternalDensity UsedRatio</p>
    <p>DirectorySpan FreeSpaceLayout</p>
    <p>Fsync ChunkOrder</p>
    <p>Sync FileSize</p>
    <p>DiskSize</p>
    <p>Most important</p>
    <p>Least important Importance (Variance Contribution)</p>
  </div>
  <div class="page">
    <p>Factor prioritization shows which factors influence layout the most in ext4</p>
    <p>CPUCount FileCount</p>
    <p>InternalDensity UsedRatio</p>
    <p>DirectorySpan FreeSpaceLayout</p>
    <p>Fsync ChunkOrder</p>
    <p>Sync FileSize</p>
    <p>DiskSize</p>
    <p>Most important</p>
    <p>Least important Importance (Variance Contribution)</p>
  </div>
  <div class="page">
    <p>Factor prioritization shows which factors influence layout the most in ext4</p>
    <p>CPUCount FileCount</p>
    <p>InternalDensity UsedRatio</p>
    <p>DirectorySpan FreeSpaceLayout</p>
    <p>Fsync ChunkOrder</p>
    <p>Sync FileSize</p>
    <p>DiskSize</p>
    <p>Most important</p>
    <p>Least important Importance (Variance Contribution)</p>
  </div>
  <div class="page">
    <p>Factor prioritization shows which factors influence layout the most in ext4</p>
    <p>CPUCount FileCount</p>
    <p>InternalDensity UsedRatio</p>
    <p>DirectorySpan FreeSpaceLayout</p>
    <p>Fsync ChunkOrder</p>
    <p>Sync FileSize</p>
    <p>DiskSize</p>
    <p>Most important</p>
    <p>Least important Importance (Variance Contribution)</p>
  </div>
  <div class="page">
    <p>Factor prioritization shows which factors influence layout the most in ext4</p>
    <p>CPUCount FileCount</p>
    <p>InternalDensity UsedRatio</p>
    <p>DirectorySpan FreeSpaceLayout</p>
    <p>Fsync ChunkOrder</p>
    <p>Sync FileSize</p>
    <p>DiskSize</p>
    <p>Most important</p>
    <p>Least important Importance (Variance Contribution)</p>
    <p>Many factors influence data layout unexpectedly</p>
  </div>
  <div class="page">
    <p>ChunkOrder</p>
    <p>Fs yn</p>
    <p>c</p>
    <p>Sometimes bad Always good</p>
    <p>Some combinations always produce good layouts</p>
  </div>
  <div class="page">
    <p>ChunkOrder</p>
    <p>Fs yn</p>
    <p>c</p>
    <p>Sometimes bad Always good</p>
    <p>Some combinations always produce good layouts</p>
    <p>Good Region</p>
  </div>
  <div class="page">
    <p>ChunkOrder</p>
    <p>Fs yn</p>
    <p>c</p>
    <p>Sometimes bad Always good</p>
    <p>Some combinations always produce good layouts</p>
    <p>Factors interact unexpectedly in ext4</p>
    <p>Good Region</p>
  </div>
  <div class="page">
    <p>Summary of unexpected behaviors in ext4</p>
  </div>
  <div class="page">
    <p>Summary of unexpected behaviors in ext4</p>
    <p>Linux ext4 may spread files wider on larger disks</p>
  </div>
  <div class="page">
    <p>Summary of unexpected behaviors in ext4</p>
    <p>Linux ext4 may spread files wider on larger disks</p>
    <p>File size influences d-span more than expected</p>
  </div>
  <div class="page">
    <p>Summary of unexpected behaviors in ext4</p>
    <p>Linux ext4 may spread files wider on larger disks</p>
    <p>File size influences d-span more than expected</p>
    <p>Sequential writes can be harmful</p>
  </div>
  <div class="page">
    <p>Summary of unexpected behaviors in ext4</p>
    <p>Linux ext4 may spread files wider on larger disks</p>
    <p>File size influences d-span more than expected</p>
    <p>Sequential writes can be harmful</p>
    <p>Patterns of sync() and fsync() change layout</p>
  </div>
  <div class="page">
    <p>Summary of unexpected behaviors in ext4</p>
    <p>Linux ext4 may spread files wider on larger disks</p>
    <p>File size influences d-span more than expected</p>
    <p>Sequential writes can be harmful</p>
    <p>Patterns of sync() and fsync() change layout</p>
    <p>Fragmentations and used ratio of disk dont matter</p>
  </div>
  <div class="page">
    <p>Summary of unexpected behaviors in ext4</p>
    <p>Linux ext4 may spread files wider on larger disks</p>
    <p>File size influences d-span more than expected</p>
    <p>Sequential writes can be harmful</p>
    <p>Patterns of sync() and fsync() change layout</p>
    <p>Fragmentations and used ratio of disk dont matter</p>
    <p>Factors interact when determining data layout</p>
  </div>
  <div class="page">
    <p>Summary of unexpected behaviors in ext4</p>
    <p>More in the paper</p>
    <p>Linux ext4 may spread files wider on larger disks</p>
    <p>File size influences d-span more than expected</p>
    <p>Sequential writes can be harmful</p>
    <p>Patterns of sync() and fsync() change layout</p>
    <p>Fragmentations and used ratio of disk dont matter</p>
    <p>Factors interact when determining data layout</p>
  </div>
  <div class="page">
    <p>Part 1 Collect Data</p>
    <p>Part 2 Analyze Data</p>
    <p>Part 3 Understand File System</p>
    <p>Outline</p>
  </div>
  <div class="page">
    <p>The unexpected behaviors in ext4 can be explained by four design issues</p>
    <p>Special End Policy</p>
    <p>Scheduler Dependency</p>
    <p>File Size Dependency</p>
    <p>Normalization Bug</p>
    <p>in this talk</p>
    <p>in this talk</p>
    <p>in paper</p>
    <p>in paper</p>
  </div>
  <div class="page">
    <p>Special End Policy</p>
    <p>ChunkOrder</p>
    <p>Fs yn</p>
    <p>c</p>
    <p>Sometimes bad Always good</p>
  </div>
  <div class="page">
    <p>ChunkOrder</p>
    <p>Fs yn</p>
    <p>c  Sometimes bad Always good</p>
    <p>Writing and syncing file end first could avoid poor layout</p>
  </div>
  <div class="page">
    <p>ChunkOrder</p>
    <p>Fs yn</p>
    <p>c  Sometimes bad Always good</p>
    <p>Writing and syncing file end first could avoid poor layout</p>
    <p>Write file end first</p>
  </div>
  <div class="page">
    <p>ChunkOrder</p>
    <p>Fs yn</p>
    <p>c  Sometimes bad Always good</p>
    <p>Writing and syncing file end first could avoid poor layout</p>
    <p>Call fsync() after first write</p>
    <p>Write file end first</p>
  </div>
  <div class="page">
    <p>ending</p>
    <p>Why layout is bad? The allocator treats the ending data extent of a file differently</p>
    <p>Condition 1: the extent is at the end of the file Condition 2: the file is closed</p>
    <p>A file: non-ending</p>
  </div>
  <div class="page">
    <p>ending</p>
    <p>Why layout is bad? The allocator treats the ending data extent of a file differently</p>
    <p>Condition 1: the extent is at the end of the file Condition 2: the file is closed</p>
    <p>A file:</p>
    <p>non-ending</p>
  </div>
  <div class="page">
    <p>ChunkOrder</p>
    <p>Fs yn</p>
    <p>c  Sometimes bad Always good</p>
  </div>
  <div class="page">
    <p>Why ChunkOrder=3120 and Fsync=1100 always have good layout?</p>
    <p>fsync() 1</p>
    <p>fsync() 1 0 0</p>
    <p>Cond 1 (is end?): Cond 2 (is closed?):</p>
    <p>Special End?</p>
  </div>
  <div class="page">
    <p>Why ChunkOrder=3120 and Fsync=1100 always have good layout?</p>
    <p>fsync() 1</p>
    <p>fsync() 1 0 0</p>
    <p>Cond 1 (is end?): Cond 2 (is closed?):</p>
    <p>Special End?</p>
  </div>
  <div class="page">
    <p>Why ChunkOrder=3120 and Fsync=1100 always have good layout?</p>
    <p>fsync() 1</p>
    <p>fsync() 1 0 0</p>
    <p>Cond 1 (is end?):</p>
    <p>Cond 2 (is closed?): Special End?</p>
  </div>
  <div class="page">
    <p>Why ChunkOrder=3120 and Fsync=1100 always have good layout?</p>
    <p>fsync() 1</p>
    <p>fsync() 1 0 0</p>
    <p>Cond 1 (is end?):</p>
    <p>Cond 2 (is closed?):</p>
    <p>Special End?</p>
  </div>
  <div class="page">
    <p>Why ChunkOrder=3120 and Fsync=1100 always have good layout?</p>
    <p>fsync() 1</p>
    <p>fsync() 1 0 0</p>
    <p>Cond 1 (is end?):</p>
    <p>Cond 2 (is closed?):</p>
    <p>Special End?</p>
  </div>
  <div class="page">
    <p>Why ChunkOrder=3120 and Fsync=1100 always have good layout?</p>
    <p>fsync() 1</p>
    <p>fsync() 1 0 0</p>
    <p>Cond 1 (is end?):</p>
    <p>Cond 2 (is closed?):</p>
    <p>Special End?</p>
  </div>
  <div class="page">
    <p>Special End Policy is never triggered</p>
    <p>Why ChunkOrder=3120 and Fsync=1100 always have good layout?</p>
    <p>fsync() 1</p>
    <p>fsync() 1 0 0</p>
    <p>Cond 1 (is end?):</p>
    <p>Cond 2 (is closed?):</p>
    <p>Special End?</p>
  </div>
  <div class="page">
    <p>Special End Policy</p>
    <p>Fix Treat non-ending and ending extents equally</p>
    <p>Lesson Learned</p>
    <p>Policies for different circumstances should be harmonious with one another</p>
  </div>
  <div class="page">
    <p>Scheduler Dependency</p>
  </div>
  <div class="page">
    <p>Up to 44GB difference on a 64GB disk</p>
  </div>
  <div class="page">
    <p>Up to 44GB difference on a 64GB disk</p>
    <p>Data layout can be random</p>
  </div>
  <div class="page">
    <p>Data layouts of small files depend on OS scheduler</p>
    <p>CPU0</p>
    <p>Reserved Space for CPU0</p>
    <p>Disk</p>
    <p>flushing thread</p>
  </div>
  <div class="page">
    <p>Data layouts of small files depend on OS scheduler</p>
    <p>CPU0</p>
    <p>Reserved Space for CPU0</p>
    <p>Disk</p>
    <p>flushing thread</p>
  </div>
  <div class="page">
    <p>CPU0</p>
    <p>Reserved Space for CPU0</p>
    <p>Disk</p>
    <p>CPU1</p>
    <p>Reserved Space for CPU1</p>
    <p>flushing thread</p>
  </div>
  <div class="page">
    <p>CPU0</p>
    <p>Reserved Space for CPU0</p>
    <p>Disk</p>
    <p>CPU1</p>
    <p>Reserved Space for CPU1</p>
    <p>flushing thread</p>
  </div>
  <div class="page">
    <p>Scheduler Dependency Fix</p>
    <p>Choose locations based on inode number, instead of CPU id</p>
    <p>Lesson Learned</p>
    <p>Policies should not depend on environmental factors that may change and are outside the</p>
    <p>control of the file system</p>
  </div>
  <div class="page">
    <p>Special End Policy</p>
    <p>Scheduler Dependency</p>
    <p>File Size Dependency</p>
    <p>Target locations depend on dynamic file size</p>
    <p>Normalization Bug</p>
    <p>Block allocation request are not correctly adjusted</p>
    <p>Issues found and fixed</p>
    <p>just covered</p>
    <p>in paper</p>
    <p>in paper</p>
    <p>just covered</p>
  </div>
  <div class="page">
    <p>C um</p>
    <p>ul at</p>
    <p>iv e</p>
    <p>D en</p>
    <p>si ty</p>
    <p>Final Vanilla</p>
    <p>Removing the issues significantly cuts tail size of d-span distribution</p>
    <p>Before</p>
    <p>After</p>
  </div>
  <div class="page">
    <p>C um</p>
    <p>ul at</p>
    <p>iv e</p>
    <p>D en</p>
    <p>si ty</p>
    <p>Final Vanilla</p>
    <p>Removing the issues significantly cuts tail size of d-span distribution</p>
    <p>Before</p>
    <p>After</p>
    <p>Our fixes improve ext4s data layout</p>
  </div>
  <div class="page">
    <p>Write</p>
    <p>W rit</p>
    <p>e Ti</p>
    <p>m e</p>
    <p>(m s)</p>
    <p>But, do our fixes reduce latencies?</p>
    <p>Before</p>
    <p>After</p>
    <p>U pd</p>
    <p>at e</p>
    <p>Ti m</p>
    <p>e (m</p>
    <p>s)</p>
  </div>
  <div class="page">
    <p>Write</p>
    <p>W rit</p>
    <p>e Ti</p>
    <p>m e</p>
    <p>(m s)</p>
    <p>But, do our fixes reduce latencies?</p>
    <p>Before</p>
    <p>After</p>
    <p>U pd</p>
    <p>at e</p>
    <p>Ti m</p>
    <p>e (m</p>
    <p>s)</p>
  </div>
  <div class="page">
    <p>Write</p>
    <p>W rit</p>
    <p>e Ti</p>
    <p>m e</p>
    <p>(m s)</p>
    <p>But, do our fixes reduce latencies?</p>
    <p>After</p>
    <p>U pd</p>
    <p>at e</p>
    <p>Ti m</p>
    <p>e (m</p>
    <p>s)</p>
  </div>
  <div class="page">
    <p>Write</p>
    <p>W rit</p>
    <p>e Ti</p>
    <p>m e</p>
    <p>(m s)</p>
    <p>But, do our fixes reduce latencies?</p>
    <p>After</p>
    <p>Our fixes reduce tail latencies</p>
    <p>U pd</p>
    <p>at e</p>
    <p>Ti m</p>
    <p>e (m</p>
    <p>s)</p>
  </div>
  <div class="page">
    <p>Conclusions  Statistical techniques are practical  Found and fixed four allocation issues in ext4  Our fixes  better layouts  lower latency at a node</p>
    <p>lower latency at scale  Lessons learned</p>
    <p>Policies should be harmonious  Policies should not depend on environmental factors</p>
  </div>
  <div class="page">
    <p>Conclusions  Statistical techniques are practical  Found and fixed four allocation issues in ext4  Our fixes  better layouts  lower latency at a node</p>
    <p>lower latency at scale  Lessons learned</p>
    <p>Policies should be harmonious  Policies should not depend on environmental factors</p>
    <p>Rigorous statistics will help to reduce unexpected issues caused by intuitive but unreliable design decisions</p>
  </div>
  <div class="page">
    <p>Thanks!</p>
    <p>Source code and data</p>
    <p>http://research.cs.wisc.edu/adsl/Software/chopper/</p>
  </div>
</Presentation>
