<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>ToothPicker Apple Picking in the iOS Bluetooth Stack</p>
    <p>TOOTHP CKER</p>
    <p>Jiska Classen, Matthias Hollick Technische Universitt Darmstadt</p>
    <p>Secure Mobile Networking Lab - SEEMOO</p>
    <p>Dennis Heinze Technische Universitt Darmstadt Secure Mobile Networking Lab - SEEMOO ERNW Enno Rey Netzwerke GmbH</p>
  </div>
  <div class="page">
    <p>Bluetooth in the Apple Ecosystem</p>
  </div>
  <div class="page">
    <p>Bluetooth in the Apple Ecosystem</p>
    <p>The Apple ecosystem encourages turning on Bluetooth</p>
    <p>Handoff</p>
    <p>Continuity AirPods (BT Headphones in general)</p>
    <p>Apple Watch</p>
    <p>Apple TV Remote</p>
  </div>
  <div class="page">
    <p>Bluetooth in the Apple Ecosystem</p>
    <p>Three different Bluetooth stack implementations:</p>
    <p>macOS iOS RTKit</p>
    <p>(AirPods, Siri Remote, )</p>
  </div>
  <div class="page">
    <p>Bluetooth in the Apple Ecosystem</p>
    <p>Three different Bluetooth stack implementations:</p>
    <p>macOS iOS RTKit</p>
    <p>(AirPods, Siri Remote, )</p>
    <p>Recent work: blogs.360.cn/post/</p>
    <p>macOS_Bluetoothd_0-click.html</p>
  </div>
  <div class="page">
    <p>Bluetooth in the Apple Ecosystem</p>
    <p>Three different Bluetooth stack implementations:</p>
    <p>macOS iOS RTKit</p>
    <p>(AirPods, Siri Remote, )</p>
    <p>Recent work: blogs.360.cn/post/</p>
    <p>macOS_Bluetoothd_0-click.html</p>
    <p>Difficult to inspect (no debugging, no logs)</p>
  </div>
  <div class="page">
    <p>Bluetooth in the Apple Ecosystem</p>
    <p>Three different Bluetooth stack implementations:</p>
    <p>macOS iOS RTKit</p>
    <p>(AirPods, Siri Remote, )</p>
    <p>Recent work: blogs.360.cn/post/</p>
    <p>macOS_Bluetoothd_0-click.html</p>
    <p>Difficult to inspect (no debugging, no logs)</p>
    <p>Implements most of Apples proprietary Bluetooth protocols + is</p>
    <p>carried around by people</p>
  </div>
  <div class="page">
    <p>Bluetooth on iOS</p>
    <p>While its not a remote zero-click attack surface for targeted attacks, Bluetooth RCEs are easily worm-able</p>
  </div>
  <div class="page">
    <p>Proprietary Bluetooth Protocols</p>
    <p>Category Protocol iOS macOS RTKit</p>
    <p>Fixed L2CAP Channels MagicPairing</p>
    <p>Magnet</p>
    <p>LEA{P,S}  -</p>
    <p>FastConnect Discovery</p>
    <p>DoAP</p>
    <p>L2CAP Channels ExternalAccessory</p>
    <p>AAP</p>
    <p>Magnet Channels</p>
    <p>FastConnect</p>
    <p>Apple Pencil GATT  -</p>
    <p>Other BRO/UTP - -</p>
    <p>USB OOB Pairing -</p>
  </div>
  <div class="page">
    <p>Fuzzing iOS bluetoothd</p>
  </div>
  <div class="page">
    <p>Bluetooth on iOS</p>
    <p>bluetoothd</p>
    <p>bluetoothaudiod</p>
    <p>sharingd ...</p>
    <p>Bluetooth Chip</p>
    <p>Lots of interaction with different system daemons</p>
    <p>Constant interaction with the Bluetooth Chip</p>
    <p>Multiple Threads  StackLoop (for HCI1)  RxLoop  TxLoop</p>
    <p>Huge binary file  (Almost) no symbols</p>
  </div>
  <div class="page">
    <p>Over-the-Air Fuzzing</p>
    <p>Attacker iPhone with InternalBlue1</p>
    <p>Target iPhone</p>
    <p>macOS with PacketLogger</p>
    <p>Fuzzing Data</p>
  </div>
  <div class="page">
    <p>Over-the-Air Fuzzing</p>
    <p>Attacker iPhone with InternalBlue1</p>
    <p>Target iPhone</p>
    <p>macOS with PacketLogger</p>
    <p>Fuzzing Data</p>
    <p>+ few false positives + platform independence</p>
    <p>- connection termination - speed - coverage / feedback</p>
  </div>
  <div class="page">
    <p>Fuzzing bluetoothd</p>
    <p>Coverage</p>
    <p>Feedback on crashes</p>
    <p>No physical connection</p>
    <p>No connection termination</p>
    <p>FIDA Stalker</p>
    <p>FIDA Exception Handler</p>
    <p>} Virtual Connections by code injection</p>
  </div>
  <div class="page">
    <p>ToothPicker</p>
  </div>
  <div class="page">
    <p>In-Process Fuzzing</p>
  </div>
  <div class="page">
    <p>In-Process Fuzzing</p>
  </div>
  <div class="page">
    <p>In-Process Fuzzing</p>
    <p>General Fuzzing Harness</p>
    <p>Specialized Fuzzing Harness</p>
    <p>Fuzzing Harness</p>
  </div>
  <div class="page">
    <p>In-Process Fuzzing</p>
    <p>Generate Fuzzing Input</p>
    <p>General Fuzzing Harness</p>
    <p>Specialized Fuzzing Harness</p>
    <p>Fuzzing Harness</p>
    <p>Execute reception handler</p>
    <p>Report BB coverage or crash</p>
  </div>
  <div class="page">
    <p>In-Process Fuzzing</p>
    <p>Generate Fuzzing Input</p>
    <p>General Fuzzing Harness</p>
    <p>Specialized Fuzzing Harness</p>
    <p>Fuzzing Harness</p>
    <p>Execute reception handler</p>
    <p>Report BB coverage or crash Coverage</p>
    <p>information for input</p>
  </div>
  <div class="page">
    <p>In-Process Fuzzing</p>
    <p>Generate Fuzzing Input</p>
    <p>General Fuzzing Harness</p>
    <p>Specialized Fuzzing Harness</p>
    <p>Fuzzing Harness</p>
    <p>Execute reception handler</p>
    <p>Report BB coverage or crash</p>
    <p>Corpus</p>
    <p>If new coverage: add input to</p>
    <p>corpus</p>
    <p>Coverage</p>
    <p>information for input</p>
  </div>
  <div class="page">
    <p>In-Process Fuzzing</p>
    <p>Generate Fuzzing Input</p>
    <p>General Fuzzing Harness</p>
    <p>Specialized Fuzzing Harness</p>
    <p>Fuzzing Harness</p>
    <p>Execute reception handler</p>
    <p>Report BB coverage or crash</p>
    <p>Corpus</p>
    <p>Crashes</p>
    <p>If new coverage: add input to</p>
    <p>corpus</p>
    <p>Coverage</p>
    <p>information for input</p>
  </div>
  <div class="page">
    <p>In-Process Fuzzing</p>
    <p>Generate Fuzzing Input</p>
    <p>General Fuzzing Harness</p>
    <p>Specialized Fuzzing Harness</p>
    <p>Fuzzing Harness</p>
    <p>Execute reception handler</p>
    <p>Report BB coverage or crash</p>
    <p>Corpus</p>
    <p>Crashes</p>
    <p>If new coverage: add input to</p>
    <p>corpus</p>
    <p>Coverage</p>
    <p>information for input</p>
    <p>Send to OTAFuzzer to verify7</p>
  </div>
  <div class="page">
    <p>In-Process Fuzzing</p>
  </div>
  <div class="page">
    <p>In-Process Fuzzing</p>
  </div>
  <div class="page">
    <p>void acl_reception_handler(short handle, size_t len, char *data)</p>
    <p>In-Process Fuzzing</p>
    <p>Connection handle value of the Bluetooth connection</p>
    <p>Data and length of received ACL</p>
    <p>data</p>
    <p>The functions and structures are named by us, Apple stripped all these symbols</p>
  </div>
  <div class="page">
    <p>void acl_reception_handler(short handle, size_t len, char *data)</p>
    <p>In-Process Fuzzing</p>
    <p>Connection handle value of the Bluetooth connection</p>
    <p>Data and length of received ACL</p>
    <p>data</p>
    <p>We need to create this!</p>
    <p>The functions and structures are named by us, Apple stripped all these symbols</p>
  </div>
  <div class="page">
    <p>bt_connection_t *allocate_connection(char *bd_addr, int state)</p>
    <p>In-Process Fuzzing</p>
    <p>Create a Bluetooth connection structure</p>
    <p>The functions and structures are named by us, Apple stripped all these symbols</p>
  </div>
  <div class="page">
    <p>bt_connection_t *allocate_connection(char *bd_addr, int state)</p>
    <p>In-Process Fuzzing</p>
    <p>Create a Bluetooth connection structure</p>
    <p>*(short*)connection = 0x11; Set the handle value of the connection:</p>
    <p>The functions and structures are named by us, Apple stripped all these symbols</p>
  </div>
  <div class="page">
    <p>bt_connection_t *allocate_connection(char *bd_addr, int state)</p>
    <p>In-Process Fuzzing</p>
    <p>Create a Bluetooth connection structure</p>
    <p>*(short*)connection = 0x11; Set the handle value of the connection:</p>
    <p>acl_reception_handler(0x11, len, data);</p>
    <p>Now we can call the reception handler with</p>
    <p>our fuzzing data</p>
    <p>The functions and structures are named by us, Apple stripped all these symbols</p>
  </div>
  <div class="page">
    <p>In-Process Fuzzing</p>
    <p>Forge connection - Call allocate_connection to create connection object - Set handle value of the connection</p>
    <p>Filter BT Chip interaction - Overwrite other HCI-related functions that confuse bluetoothd</p>
    <p>(the connection is not real and the BT chip does not know the handle value)</p>
    <p>Stabilize Connection - Overwrite functions that force-disconnect the handle</p>
    <p>Similar process for BLE connections (more complex connection creation)</p>
  </div>
  <div class="page">
    <p>Results</p>
  </div>
  <div class="page">
    <p>Bluetooth Protocol Targets</p>
    <p>Category Protocol iOS macOS RTKit Accessibility Proprietary Knowledge Target</p>
    <p>Fixed L2CAP Channels MagicPairing</p>
    <p>GATT   ()</p>
    <p>Signal Channel</p>
    <p>Magnet   ? -  -</p>
    <p>LEA{P,S}   -  -</p>
    <p>FastConnect Discovery</p>
    <p>L2CAP Channels SDP</p>
    <p>Other ACL</p>
  </div>
  <div class="page">
    <p>Performance</p>
    <p>25-30 messages per second  bottlenecks:</p>
    <p>FIDA Instrumentation  radamsa input mutation1  on never devices: Pointer Authentication</p>
    <p>Accumulated coverage: ~6.000 BBs of 153.620 BBs  coverage is only a small part of bluetoothd  however, ACL-based Bluetooth protocols prior to pairing are</p>
    <p>also only a small part of bluetoothd  hard to determine the exact number of BBs for these</p>
  </div>
  <div class="page">
    <p>Results</p>
    <p>ID Description Effect Detection Method OS Disclosure Status</p>
    <p>MP1 Ratchet AES SIV Crash ToothPicker iOS Oct 30 2019 Not fixed</p>
    <p>MP2 Hint Crash ToothPicker iOS Dec 4 2019 Not fixed</p>
    <p>MP7 Ratchet AES SIV Crash ToothPicker iOS Mar 13 2020 Not fixed</p>
    <p>MP8 Ratchet AES SIV Crash ToothPicker iOS Mar 13 2020 Not fixed</p>
    <p>L2CAP2 Group Message Crash ToothPicker iOS Mar 13 2020 Not fixed</p>
    <p>LEAP1 Version Leak Information Disclosure Manual iOS Mar 31 2020 Not fixed</p>
    <p>SMP1 SMP OOB Partial PC Control ToothPicker iOS Mar 31 2020 Fixed in iOS 13.5: CVE-2020-9838</p>
    <p>SIG1 Missing Checks DoS ToothPicker iOS Mar 31 2020 Fixed in iOS 13.6: CVE-2020-9931</p>
  </div>
  <div class="page">
    <p>Results</p>
    <p>ID Description Effect Detection Method OS Disclosure Status</p>
    <p>MP1 Ratchet AES SIV Crash ToothPicker iOS Oct 30 2019 Not fixed</p>
    <p>MP2 Hint Crash ToothPicker iOS Dec 4 2019 Not fixed</p>
    <p>MP7 Ratchet AES SIV Crash ToothPicker iOS Mar 13 2020 Not fixed</p>
    <p>MP8 Ratchet AES SIV Crash ToothPicker iOS Mar 13 2020 Not fixed</p>
    <p>L2CAP2 Group Message Crash ToothPicker iOS Mar 13 2020 Not fixed</p>
    <p>LEAP1 Version Leak Information Disclosure Manual iOS Mar 31 2020 Not fixed</p>
    <p>SMP1 SMP OOB Partial PC Control ToothPicker iOS Mar 31 2020 Fixed in iOS 13.5: CVE-2020-9838</p>
    <p>SIG1 Missing Checks DoS ToothPicker iOS Mar 31 2020 Fixed in iOS 13.6: CVE-2020-9931</p>
  </div>
  <div class="page">
    <p>TOOTHP CKER</p>
    <p>github.com/seemoo-lab/toothpicker dennis@bluetooth.lol</p>
    <p>jiska@bluetooth.lol mhollick@seemoo.de</p>
    <p>Twitter: @ttdennis @naehrdine @seemoolab</p>
  </div>
</Presentation>
