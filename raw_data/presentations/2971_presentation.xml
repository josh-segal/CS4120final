<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>The Power of Choice in ! Data-Aware Cluster Scheduling</p>
    <p>Shivaram Venkataraman1 , Aurojit Panda1 Ganesh Ananthanarayanan2, Michael Franklin1, Ion Stoica1</p>
    <p>amplab</p>
  </div>
  <div class="page">
    <p>Trends: Big Data</p>
    <p>Challenge&amp;1:&amp;Data&amp;is&amp;Big&amp; Projected&amp;Growth&amp;</p>
    <p>In cr ea</p>
    <p>se &amp;o ve</p>
    <p>r&amp; 20</p>
    <p>Moore's$Law$</p>
    <p>Overall$Data$</p>
    <p>Particle$Accel.$</p>
    <p>DNA$Sequencers$</p>
    <p>Data$Grows$faster$than$Moores$Law$ [IDC$report,$Kathy$Yelick,$LBNL]$</p>
    <p>Data grows faster than Moores Law!</p>
  </div>
  <div class="page">
    <p>Trends: Big Data</p>
    <p>Projected&amp;Growth&amp; In cr ea</p>
    <p>se &amp;o ve</p>
    <p>r&amp; 20</p>
    <p>Moore's$Law$</p>
    <p>Overall$Data$</p>
    <p>Particle$Accel.$</p>
    <p>DNA$Sequencers$</p>
    <p>Facebook Hive cluster Last 4 years:</p>
    <p>data growth 2500x ! queries/day 60x!</p>
    <p>Microsoft Scope Cluster The number of daily jobs has doubled every six months for the past two years.</p>
  </div>
  <div class="page">
    <p>Trends: Low Latency</p>
    <p>batch job</p>
    <p>Spark</p>
  </div>
  <div class="page">
    <p>Big Data or Low Latency ? SQL Query : 2.5 TB on 100 machines</p>
    <p>&gt; 15 minutes 1 - 5 Minutes</p>
    <p>&lt; 10s</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>Sampling</p>
  </div>
  <div class="page">
    <p>Applications</p>
    <p>Machine learning algorithms stochastic gradient, coordinate descent</p>
    <p>Approximate Query Processing blinkdb, presto, minitable</p>
  </div>
  <div class="page">
    <p>Choices</p>
    <p>N Any K</p>
  </div>
  <div class="page">
    <p>Choices</p>
    <p>N Any K</p>
    <p>Sampling  Smaller Inputs + Choice</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>M</p>
    <p>M</p>
    <p>R N = 4 K = 2</p>
  </div>
  <div class="page">
    <p>Rack</p>
    <p>Available (N) = 2 Required (K) = 2</p>
    <p>Time</p>
    <p>Available Data Running</p>
    <p>Busy</p>
    <p>Existing</p>
    <p>Unavailable Data</p>
  </div>
  <div class="page">
    <p>Rack</p>
    <p>Available (N) = 4 Required (K) = 2</p>
    <p>Time</p>
    <p>Choice-Aware</p>
    <p>Available Data Running</p>
    <p>Busy</p>
  </div>
  <div class="page">
    <p>Rack</p>
    <p>Available (N) = 4 Required (K) = 2</p>
    <p>Time</p>
    <p>Choice-Aware</p>
    <p>Launched (M) = 3</p>
    <p>Available Data Running</p>
    <p>Busy</p>
  </div>
  <div class="page">
    <p>KMN Scheduler - How much can KMN improve locality - Propagate benefits across stages - Handling stragglers</p>
  </div>
  <div class="page">
    <p>Job  DAG</p>
    <p>KMN Scheduler</p>
    <p>One-to-One Many-to-One 15</p>
  </div>
  <div class="page">
    <p>One-to-One Stages Locality</p>
    <p>Disk ~ 100MB/s Network ~ 10 Gbps (~1GB/s) Memory ~ 50GB/s</p>
  </div>
  <div class="page">
    <p>KMN Locality</p>
    <p>Choices N K !</p>
    <p>&quot; #</p>
    <p>$</p>
    <p>% &amp;</p>
  </div>
  <div class="page">
    <p>Locality, K=100</p>
    <p>Pr ob</p>
    <p>. o f L</p>
    <p>oc al</p>
    <p>ity</p>
    <p>Utilization</p>
    <p>K/N=1.0 K/N=0.5 K/N=0.1 K  Number of blocks chosen N  Number of blocks available</p>
    <p>KMN significantly improves locality</p>
  </div>
  <div class="page">
    <p>Many-to-One Stages</p>
    <p>KMN Scheduler</p>
  </div>
  <div class="page">
    <p>Many-to-One Stage</p>
    <p>M1</p>
    <p>M2</p>
    <p>M4</p>
    <p>M5</p>
    <p>M3 R3</p>
    <p>R2</p>
    <p>R1</p>
  </div>
  <div class="page">
    <p>Many-To-One Transfers</p>
    <p>R3</p>
    <p>M1 M2 M4 M5</p>
    <p>R2</p>
    <p>M3</p>
    <p>Core</p>
    <p>R1</p>
    <p>M1 R3</p>
    <p>M1 R2</p>
    <p>M2 R3</p>
    <p>M2 R2</p>
    <p>M3 R3</p>
    <p>M3 R3</p>
  </div>
  <div class="page">
    <p>Bottleneck Link</p>
    <p>R3</p>
    <p>M1 M2 M4 M5</p>
    <p>R2</p>
    <p>M3</p>
    <p>Core</p>
    <p>R1</p>
    <p>Bottleneck Link Link with Max. transfers</p>
    <p>Cross Rack Data Skew</p>
    <p>Minimum transfers Maximum transfers</p>
    <p>= 6 2 =3</p>
  </div>
  <div class="page">
    <p>Facebook Trace Cross Rack Data Skew</p>
    <p>Minimum transfers</p>
    <p>Maximum transfers</p>
    <p>C D</p>
    <p>F</p>
    <p>Cross Rack Data Skew</p>
    <p>&lt;50 tasks 50-150 tasks &gt;150 tasks</p>
  </div>
  <div class="page">
    <p>Power of Choice Load balancing: balls and bins Insight: Run extra tasks (M &gt; K)</p>
    <p>M1</p>
    <p>M2</p>
    <p>M4 M5</p>
    <p>M3</p>
    <p>M6 M7</p>
    <p>Cross Rack Data Skew = 3</p>
  </div>
  <div class="page">
    <p>Power of Choice</p>
    <p>Technique: Spread out choice of K tasks to reduce skew</p>
    <p>M1</p>
    <p>M2</p>
    <p>M4 M5</p>
    <p>M3</p>
    <p>M6 M7</p>
    <p>M = 7, K = 5 Cross Rack Data Skew = 2</p>
  </div>
  <div class="page">
    <p>Handling Stragglers M1</p>
    <p>M2</p>
    <p>M4</p>
    <p>M5</p>
    <p>M3</p>
    <p>M6</p>
    <p>M7</p>
    <p>Rack</p>
    <p>Rack</p>
    <p>Stragglers</p>
    <p>vs.</p>
    <p>Cross-Rack Data Skew</p>
    <p>Time</p>
  </div>
  <div class="page">
    <p>Using KMN</p>
    <p>// Create Spark RDD file = sc.textFile(tpc-h.data) // Select a 10% sample using KMN sample = file.blockSample(0.1) // RDD operations sample.map { li =&gt; (li.linestatus, li.quantity) }.collect()</p>
  </div>
  <div class="page">
    <p>Also in the paper</p>
    <p>User-defined sampling functions Placing reduce tasks</p>
    <p>Killing extra tasks</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Baseline: Use a pre-selected random sample Setup: 100 m2.4xlarge EC2 machines, 60GB RAM/mc</p>
    <p>Facebook traces replay Long DAGs (Stochastic Gradient Descent) SQL queries from Conviva Reducer placement Varying Utilization</p>
  </div>
  <div class="page">
    <p>Facebook Overall</p>
    <p>&gt;100</p>
    <p>Job Completion Time (s)</p>
    <p>Jo b</p>
    <p>Si ze</p>
    <p>Baseline KMN-M/K=1.05</p>
  </div>
  <div class="page">
    <p>Cross Rack Skew</p>
    <p>&lt;=4</p>
    <p>&gt;8</p>
    <p>Shuffle Stage Time (seconds)</p>
    <p>C ro</p>
    <p>ss R</p>
    <p>ac k</p>
    <p>Sk ew</p>
    <p>Baseline KMN-M/K=1.0 KMN-M/K=1.05 KMN-M/K=1.1</p>
  </div>
  <div class="page">
    <p>How many extra tasks ?</p>
    <p>M/K=1.0 M/K=1.1 M/K=2.0</p>
    <p>M/K=1.0 M/K=1.1 M/K=2.0</p>
  </div>
  <div class="page">
    <p>KMN: How many stages ?</p>
    <p>Aggregate1</p>
    <p>Aggregate2</p>
    <p>Aggregate3</p>
    <p>Stochastic Gradient Descent</p>
  </div>
  <div class="page">
    <p>KMN: How many stages ?</p>
    <p>Aggregate1</p>
    <p>Aggregate2</p>
    <p>Aggregate3</p>
    <p>KMN Stages Time (s)</p>
    <p>Gradient 15.27</p>
  </div>
  <div class="page">
    <p>KMN: How many stages ?</p>
    <p>Aggregate1</p>
    <p>Aggregate2</p>
    <p>Aggregate3</p>
    <p>KMN Stages Time (s)</p>
    <p>Gradient 15.27</p>
    <p>Gradient + Agg1 12.72</p>
  </div>
  <div class="page">
    <p>KMN: How many stages ?</p>
    <p>Aggregate1</p>
    <p>Aggregate2</p>
    <p>Aggregate3</p>
    <p>KMN Stages Time (s)</p>
    <p>Gradient 15.27</p>
    <p>Gradient + Agg1 12.72</p>
    <p>Gradient + Agg2 11.79</p>
  </div>
  <div class="page">
    <p>KMN: How many stages ?</p>
    <p>Aggregate1</p>
    <p>Aggregate2</p>
    <p>Aggregate3</p>
    <p>KMN Stages Time (s)</p>
    <p>Gradient 15.27</p>
    <p>Gradient + Agg1 12.72</p>
    <p>Gradient + Agg2 11.79</p>
    <p>Gradient + Agg3 12.09</p>
  </div>
  <div class="page">
    <p>Related Work Power of Choice</p>
    <p>Power-of-Two choices [TPDS01] Sparrow [SOSP13]</p>
    <p>Improving Cluster Scheduling</p>
    <p>Quincy [SOSP09] alsched [SOCC12] Dolly [NSDI13]</p>
  </div>
  <div class="page">
    <p>KMN Scheduler</p>
    <p>Emerging applications: ML algorithms, AQP Improves locality, Balances network transfers</p>
    <p>N Any K</p>
  </div>
</Presentation>
