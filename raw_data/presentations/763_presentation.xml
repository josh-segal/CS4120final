<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>EndRE: An End-System Redundancy Elimination Service for Enterprises</p>
    <p>Ram Ramjee Microsoft Research India</p>
    <p>Bhavish Aggarwal^, Aditya Akella*, Ashok Anand*,</p>
    <p>Athula Balachandran~, Pushkar Chitnis^, Chitra Muthukrishnan*, and George Varghese#</p>
    <p>^: Microsoft Research India *: University of Wisconsin-Madison ~: CMU #: University of California, San Diego</p>
  </div>
  <div class="page">
    <p>Large enterprises have a global footprint</p>
    <p>Data centers consolidated to save management cost</p>
    <p>Diminished performance due to Wide Area Network (WAN) bandwidth and latency constraints</p>
    <p>Enterprise Dilemma</p>
  </div>
  <div class="page">
    <p>Middlebox-based WAN Optimizers</p>
    <p>Protocol independent redundancy elimination using synchronized in-memory caches at two ends [Spring &amp; Wetherall, Sigcomm 2000]</p>
    <p>Disk-based caches for large static objects  Current leaders: RiverBed, Juniper, Cisco,  Annual revenue &gt; $1Billion  Are middleboxes the right approach for enterprises?</p>
    <p>Enterprise Data Center</p>
    <p>Synchronized packet caches</p>
  </div>
  <div class="page">
    <p>Issues with Middleboxes</p>
    <p>Either no RE or require key sharing</p>
    <p>No RE on the bandwidth limited 2.5/3G wireless link</p>
    <p>Data Center Enterprise</p>
  </div>
  <div class="page">
    <p>End-to-End RE: Benefits</p>
    <p>Enterprise Data Center</p>
  </div>
  <div class="page">
    <p>Enterprise</p>
    <p>Data Center</p>
    <p>Our Contributions</p>
    <p>Optimized data structures for reducing memory overhead by 33-75%</p>
    <p>Small-scale deployment</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Overview</p>
    <p>Design of EndRE</p>
    <p>EndRE costs and benefits</p>
    <p>Summary</p>
  </div>
  <div class="page">
    <p>EndRE: Design Goals</p>
    <p>Opportunistic use of limited end host resources</p>
    <p>Lightweight and tunable depending on server load</p>
    <p>Data structure and design optimizations to reduce memory overhead</p>
    <p>Simple client decoding</p>
  </div>
  <div class="page">
    <p>Redundancy Elimination: Overview</p>
    <p>Bandwidth constrained link</p>
    <p>Packet cache (Synchronized circular buffer)</p>
    <p>Fingerprinting</p>
    <p>hash-table lookups pointer lookups</p>
    <p>Need to quickly identify repeated content (32 bytes)  Identifying all matches (optimal) impractical  Sampling-based approach necessary but comes at the cost of missed redundancy identification</p>
  </div>
  <div class="page">
    <p>Redundancy Elimination: Overview</p>
    <p>Bandwidth constrained link</p>
    <p>Packet cache (Synchronized circular buffer)</p>
    <p>Fingerprinting</p>
    <p>hash-table lookups</p>
    <p>pointer lookups</p>
  </div>
  <div class="page">
    <p>Packet payload</p>
    <p>Window</p>
    <p>Rabin fingerprinting</p>
    <p>Value sampling: sample those fingerprints whose value is 0 mod p</p>
    <p>Compute fingerprints based on content [Spring &amp; Wetherall]</p>
    <p>+ Robust to small changes in content  better bandwidth savings  Rabin hashes expensive and not adaptive  lower speed</p>
  </div>
  <div class="page">
    <p>Choose marker every p bytes</p>
    <p>Fingerprints chosen at fixed intervals by position in the packet</p>
    <p>+ Simple selection criteria and tunable  fast and adaptive  A small insertion/deletion in content will result in failure in</p>
    <p>detecting redundancy  lower bandwidth savings 12</p>
    <p>Hash w-byte</p>
    <p>Hash w-byte</p>
    <p>Hash w-byte</p>
    <p>Fingerprints</p>
  </div>
  <div class="page">
    <p>Choose marker if F(singlebyte) = 1; e.g., F(0) = 1, F(5) =1 Once chosen, skip p/2 bytes</p>
    <p>Can we get the speed/adaptability of FIXED and the robustness of MODP?</p>
    <p>F(singlebyte) derived from training data using a greedy strategy</p>
    <p>Hash w-byte</p>
    <p>Hash w-byte</p>
    <p>Hash w-byte</p>
    <p>Fingerprints</p>
    <p>+ Content-based  bandwidth savings close to MODP? + Simple selection &amp; tunable skipping  speed/adaptability of FIXED?</p>
  </div>
  <div class="page">
    <p>Approach used in Spring &amp; Wetherall  Meta data overhead is</p>
    <p>Collisions are not costly  Simple hash function</p>
    <p>Overwrite hash table</p>
    <p>No deletion</p>
    <p>Dont store fingerprints!  Use the table index to</p>
    <p>implicitly represent part/all of fingerprint</p>
    <p>Meta data overhead is 6-12% of cache size</p>
    <p>(e.g., 32bytes)</p>
    <p>Fingerprint hash table Packet Cache</p>
    <p>fingerprint</p>
    <p>payload</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Overview</p>
    <p>Design of EndRE</p>
    <p>EndRE costs and benefits</p>
    <p>Summary</p>
  </div>
  <div class="page">
    <p>Fingerprinting Algorithms: Comparison</p>
    <p>S p</p>
    <p>e e</p>
    <p>d (</p>
    <p>G b</p>
    <p>p s)</p>
    <p>Sampling period (p)</p>
    <p>SAMPLEBYTE MODP FIXED</p>
    <p>a n</p>
    <p>d w</p>
    <p>id th</p>
    <p>s a</p>
    <p>v in</p>
    <p>g s</p>
    <p>(% )</p>
    <p>Sampling period (p)</p>
    <p>SAMPLEBYTE MODP FIXED</p>
    <p>SAMPLEBYTE delivers bandwidth savings similar to MODP while operating at speeds similar to FIXED</p>
  </div>
  <div class="page">
    <p>EndRE Memory Requirements: 44-day 11-enterprise Trace Analysis</p>
    <p>% o</p>
    <p>f C</p>
    <p>li e</p>
    <p>n ts</p>
    <p>Maximum Cache Size at Client (MB)</p>
    <p>o f</p>
    <p>S e</p>
    <p>rv e</p>
    <p>rs</p>
    <p>Maximum Cache Size at Server (MB)</p>
    <p>Median/Max memory requirement at Client is 60/360MB</p>
    <p>Memory requirement at server tunable, at cost of reduced savings</p>
  </div>
  <div class="page">
    <p>Implementation</p>
    <p>EndRE Callout</p>
    <p>Other Callout modules</p>
    <p>user</p>
    <p>kernel</p>
    <p>WFP</p>
    <p>Filtering Engine</p>
    <p>Base Filtering Engine (BFE) WFP APIs</p>
    <p>Network Layer</p>
    <p>Transport Layer</p>
    <p>Forward Layer</p>
    <p>IPsec</p>
    <p>Stream Layer</p>
    <p>TDI/WSK</p>
    <p>ALE</p>
    <p>HTTP SMB OTHERS</p>
    <p>EndRE Stream</p>
    <p>Layer Filter</p>
    <p>WFP APIs</p>
    <p>EndRE Management</p>
    <p>ADD CALLOUT ADD FILTER</p>
    <p>EndRE pilot deployment on laptops/desktops over one week with 11 users for HTTP traffic (1.7GB) delivered bandwidth savings of 31%</p>
  </div>
  <div class="page">
    <p>Bandwidth Savings (~2 weeks)</p>
    <p>EndRE delivers average bandwidth savings of 26-34%, a significant portion of the 39-41% savings of middlebox</p>
    <p>Enterprise Site</p>
    <p>Trace Size (GB)</p>
    <p>Middle (2GB)</p>
    <p>% savings</p>
    <p>EndRE (1-10 MB) % savings</p>
    <p>Middle + large-files</p>
    <p>%savings</p>
    <p>EndRE + large-files % savings</p>
    <p>Avg/Site 100 39 26 41 34</p>
  </div>
  <div class="page">
    <p>Mobile Smartphone</p>
    <p>Server</p>
    <p>Energy Savings</p>
    <p>None ZLIB (LZ) EndRE</p>
    <p>Energy uAh</p>
    <p>Energy % savings</p>
    <p>Bandwidth % savings</p>
    <p>Energy %savings</p>
    <p>Bandwidth %savings</p>
    <p>Trace Packet 32KB Packet 32KB Packet Packet</p>
    <p>A 2038 -11 42 26 44 25 29</p>
    <p>B 1496 -11 68 41 75 70 76</p>
    <p>ZLIB works well for large chunk sizes but on a packet-by-packet basis may result in increased energy consumption</p>
  </div>
  <div class="page">
    <p>Mobile Smartphone</p>
    <p>Server</p>
    <p>Energy Savings</p>
    <p>None ZLIB (LZ) EndRE</p>
    <p>Energy uAh</p>
    <p>Energy % savings</p>
    <p>Bandwidth % savings</p>
    <p>Energy %savings</p>
    <p>Bandwidth %savings</p>
    <p>Trace Packet 32KB Packet 32KB Packet Packet</p>
    <p>A 2038 -11 42 26 44 25 29</p>
    <p>B 1496 -11 68 41 75 70 76</p>
    <p>EndREs bandwidth savings translate into equivalent savings in energy with no additional latency</p>
  </div>
  <div class="page">
    <p>Related work</p>
    <p>Static content (e.g., large files)  Host: Disk De-Duplication  Client and Server: LBFS (SOSP01), RSYNC/RDC  Peer-to-Peer: DOT(NSDI06), SET (NSDI07), BranchCache</p>
    <p>in Win7</p>
    <p>Dynamic content  Middlebox</p>
    <p>Spring &amp; Wetherall (SIGCOMM00)  Products from Riverbed, Cisco, Juniper, etc.</p>
    <p>New architectures  Packet Caches: RE in routers (SIGCOMM08)  Ditto: RE in wireless mesh networks (MobiCom08)</p>
  </div>
  <div class="page">
    <p>Summary 1. EndRE</p>
    <p>SAMPLEBYTE fingerprinting algorithm supports processing speeds of 1.5-4Gbps/core</p>
    <p>Data structure optimizations reduce server memory requirement by 33-75%</p>
    <p>Median client requires only 60MB of memory; Server up to 2GB</p>
    <p>Bandwidth savings equivalent energy savings on smartphones</p>
    <p>EndRE is a promising alternative to WAN optimizers</p>
  </div>
  <div class="page">
    <p>Questions?</p>
  </div>
</Presentation>
