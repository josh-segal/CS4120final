<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Fair Resource Allocation in Consolidated Flash Systems</p>
    <p>Wonil Choi, Bhuvan Urgaonkar, Mahmut Kandemir, and Myoungsoo Jung*</p>
    <p>Pennsylvania State University, KAIST*</p>
  </div>
  <div class="page">
    <p>Trend: Consolidated Flash Systems</p>
    <p>Flash/SSD technologies have become mature</p>
    <p>(1) Massive capacity!</p>
    <p>(2) High performance!</p>
    <p>Parallelism Software-specific</p>
    <p>C</p>
    <p>Multiple workloads are consolidated in single system</p>
    <p>Flash system</p>
    <p>W1 W2 Wn Flash system</p>
    <p>W1</p>
  </div>
  <div class="page">
    <p>Motivational Question: How Consolidated Workloads Fairly Share Multiple Resources in a System?</p>
    <p>Consolidated workloads contend to use shared resources</p>
    <p>System Resources</p>
    <p>W1 W2 Wn</p>
    <p>Different types Limited amount</p>
    <p>Different demands Inter- &amp; intra</p>
    <p>Q1: What resource types do we allocate?</p>
    <p>Q3: How can we achieve a fair allocation?</p>
    <p>Our interest is to find a fair allocation of resources</p>
    <p>Q2: How can we coordinate different types of resources?</p>
  </div>
  <div class="page">
    <p>Question 1: What Resources Do We Allocate? - Resource Types of Flash System</p>
    <p>Three critical resources are taken into account</p>
    <p>(1) Bandwidth Representative, prime resource in various domains Literature: Huang [FAST17], Kim [HotStorage18]</p>
    <p>(2) Capacity If as main-storage, allocation should accommodate all If as caching, allocation affects hit-ratio and performance</p>
    <p>(3) Lifetime (flash-specific)</p>
    <p>It is consumable/non-renewable (# page writes is limited) It is also consumed implicitly (GC writes)</p>
    <p>We propose to view device lifetime as a critical resource</p>
    <p>It is coupled with capacity resource (OP-GC relationship)</p>
  </div>
  <div class="page">
    <p>Question 2: How Treating Lifetime on Equal Footing with Bandwidth and Capacity?</p>
    <p>- Coordination of Three Resources Bandwidth &amp; capacity can be allocated at small time scale</p>
    <p>When workloads change their resource demand patterns</p>
    <p>How can we treat lifetime allocation? Approach (1): goal of ensuring that device lasts for 1 year</p>
    <p>New device End of lifetime (1 year)</p>
    <p>Total # of page writes</p>
    <p>new allocation with given # of writes (budget)</p>
    <p>Approach (2): only interested in fairly dividing the remaining New device @ any decision point, new allocation</p>
    <p>with all remaining writes</p>
    <p>budgetbudgetbudget budget budget</p>
  </div>
  <div class="page">
    <p>Question 2: How Treating Lifetime on Equal Footing with Bandwidth and Capacity?</p>
    <p>- Epoch-based Resource Allocation</p>
    <p>New device End of lifetime</p>
    <p>Epoch (e.g., 1 hour)</p>
    <p>Total capacity</p>
    <p>Total bandwidth</p>
    <p>(e.g., 256GB)</p>
    <p>(e.g., 500MB/s)</p>
    <p>Total lifetime budget (e.g., 10M page writs)</p>
    <p>Given total resource</p>
    <p>Workload A Workload B Workload C</p>
    <p>Given consolidated workloads</p>
    <p>End</p>
    <p>Epoch: a period of relative workload stationarity We propose to allocate resources in each &amp; every epoch</p>
    <p>Allocation</p>
  </div>
  <div class="page">
    <p>Question 3: How Fair Allocation Can be Achieved? - Dominant Resource Fairness (DRF) [NSDI11]</p>
    <p>* Total resources: &lt;9 CPU, 18 GB&gt; Example: two users share two resource types, CPU and Mem</p>
    <p>* User1s demand: &lt;1 CPU, 4 GB&gt; per task * User2s demand: &lt;3 CPU, 1 GB&gt; per task</p>
    <p>DRF equalizes dominant shares of users</p>
    <p>alloc: 2 tasks &lt;6 CPU, 2 GB&gt; - dominant share: 6/9 (66%)</p>
    <p>alloc: 3 tasks &lt;3 CPU, 12 GB&gt; - dominant share: 12/18 (66%)</p>
    <p>Dominant resource and dominant share (alloc / total amount) * User1s demand: 1/9 CPU &lt; 4/18 GB - Mem and 4/18 * User2s demand: 3/9 CPU &gt; 1/18 GB - CPU and 3/9</p>
  </div>
  <div class="page">
    <p>Proposal: DRF Adaptation in Flash Device Context - Experimental Setup</p>
    <p>We assume an epoch with given 3 resources</p>
    <p>Capacity: 256 GB (flash cache) Bandwidth: 512 MB/s</p>
    <p>Lifetime (write budget): 11M page writes</p>
    <p>We propose to adapt DRF to flash resource allocation</p>
    <p>DRF works based on workloads standardized resource demands We assume a set of 3 workloads running in the epoch</p>
    <p>Our target workload has its own executable unit (stream)</p>
    <p>S</p>
    <p>Workload A</p>
    <p>S</p>
    <p>Req:RD(0.1M)/WR(1M) Share(20GB)/Private(5GB)</p>
    <p>Write Amp(3.0) Lifetime-dominant</p>
    <p>Workload C</p>
    <p>S S</p>
    <p>S</p>
    <p>RD(50M)/WR(0.3M) S(30GB)/P(10GB)</p>
    <p>Write Amp(1.5) Bandwidth-dominant</p>
    <p>Workload B</p>
    <p>S S</p>
    <p>S</p>
    <p>RD(1M)/WR(0.1M) S(60GB)/P(20GB) Write Amp(1.2)</p>
    <p>Capacity-dominant</p>
    <p>S</p>
  </div>
  <div class="page">
    <p>Proposal: DRF Adaptation in Flash Device Context - Allocation Algorithm and Result</p>
    <p>DRF allocation result</p>
    <p>DRF algorithm (i) pick a random workload &amp; launch its stream</p>
    <p>until no more streams can be launched due to lack of resources (ii) calculate dominant share of each workload (iii) pick the workload whose dominant share is minimum (iv) launch its stream towards equal dominant share</p>
    <p>Workload # Streams Launched</p>
    <p>Bandwidth Alloc</p>
    <p>Capacity Alloc</p>
    <p>Write Alloc</p>
    <p>Dominant Share</p>
    <p>Dominant Resource</p>
    <p>A 2 7 MB/s 30 GB 6 M 6/11.2 M = 0.535</p>
    <p>Write</p>
    <p>B 4 5 MB/s 140 GB 0.48 M 140/256 GB = 0.546</p>
    <p>Capacity</p>
    <p>C 5 274 MB/s 80 GB 2.25 M 274/512 MB/s = 0.535</p>
    <p>Bandwidth</p>
    <p>Total 512 MB/s 256 GB 11.2M</p>
  </div>
  <div class="page">
    <p>Observation 1: Considering Bandwidth &amp; Capacity Only - DRF without Lifetime Management</p>
    <p>Workload # Streams Launched</p>
    <p>Bandwidth Alloc</p>
    <p>Capacity Alloc</p>
    <p>Dominant Share</p>
    <p>Dominant Resource</p>
    <p>Resultant Writes</p>
    <p>A 13 44 MB/s 85 GB 85/256 GB = 0.332</p>
    <p>Capacity 39M</p>
    <p>B 2 3 MB/s 100 GB 100/256 GB = 0.391</p>
    <p>Capacity 0.24M</p>
    <p>C 4 219 MB/s 70 GB 219/512 MB/s = 0.427</p>
    <p>Bandwidth 1.8M</p>
    <p>Total 512 MB/s 256 GB 41.04M</p>
    <p>DRF allocation result</p>
    <p>What if lifetime resource is not explicitly managed?</p>
    <p>Bandwidth &amp; capacity are still considered Workloads are allowed to consume as many writes as they need</p>
    <p>Ignoring lifetime results in Total write consumption significantly increases (41.04M) Writes across workloads look quite unfair (39M, 0.24M, 1.8M)</p>
  </div>
  <div class="page">
    <p>Observation 2: Considering Shared Data among Streams - Non-Linearity in Capacity Demand</p>
    <p>In a storage workload, its streams can share data Capacity demand non-linearly increases, as #streams increases</p>
    <p>So far, DRF allocations considered data sharing across streams E.g., shared(20GB)/private(5GB);#streams=1(25GB),2(30GB),</p>
    <p>Workload # Streams Launched</p>
    <p>Bandwidth Alloc</p>
    <p>Capacity Alloc</p>
    <p>Write Alloc</p>
    <p>Dominant Share</p>
    <p>Dominant Resource</p>
    <p>A 2 8 MB/s 50 GB 6 M 6/11.2 M = 0.535</p>
    <p>Write</p>
    <p>B 1 2 MB/s 80 GB 0.12 M 80/256 GB = 0.313</p>
    <p>Capacity</p>
    <p>C 2 164 MB/s 120 GB 1.35 M 120/256 GB = 0.468</p>
    <p>Capacity</p>
    <p>Total 512 MB/s 256 GB 11.2M</p>
    <p>What if data sharing across streams is not considered? DRF allocation result</p>
    <p>Dominant resource of C changes from bandwidth to capacity</p>
    <p>Vanilla DRF assumes uniform per-task resource demands Total demands linearly increases, as #task increases</p>
  </div>
  <div class="page">
    <p>Observation 3: Considering Different Lifetime Policy - Budget = What Lifetime Remains</p>
    <p>One can prefer different lifetime management options Device can last for a longer time? -&gt; tight write budget Only interested in fairness? -&gt; Budget = what lifetime remains</p>
    <p>What if write budget = what lifetime remains?</p>
    <p>New device End of lifetime</p>
    <p>Alloc point A Alloc point B Alloc point A (earlier part of lifetime)</p>
    <p>Budget is set to a very large number No workloads have lifetime as dominant resource This is the same as DRF without lifetime management</p>
    <p>Alloc point B (latter part of lifetime) Budget is set to a very small number All (or most) workloads have lifetime as dominant resource</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Consolidating multiple workloads in a single flash system</p>
    <p>Various resource types in a flash system</p>
    <p>Need of fair resource allocation among consolidated workloads</p>
    <p>We propose to employ Dominant Resource Fairness (DRF) DRF is said to be fair due to its desirable properties</p>
    <p>Such workloads contend to get shared system resources</p>
    <p>Conventional (bandwidth &amp; capacity) &amp; flash-specific (lifetime)</p>
    <p>Lifetime is a critical resource that needs to be managed Our DRF adaptation in flash system empirically reveals,</p>
    <p>Non-linearity in resource demand should be considered</p>
  </div>
</Presentation>
