<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Michael Backes, Sven Bugiel, Chris4an Hammer, Oliver Schranz, Philipp von Styp-Rekowsky</p>
    <p>Boxify: Full-fledged App Sandboxing for Stock Android</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Cells [SOSP11]</p>
    <p>Apex [ASIACCS10]</p>
    <p>ASM [SEC15]</p>
    <p>L4Android [SPSM11]</p>
    <p>AppGuard [TACAS13]</p>
    <p>TaintDroid [OSDI10]</p>
    <p>CRePE [ISC10] TrustDroid</p>
    <p>[SPSM11]</p>
    <p>I-ARM-Droid [MoST12] DroidForce</p>
    <p>[ARES14]</p>
    <p>MOSES [SACMAT12]</p>
    <p>AirBag [NDSS14]</p>
    <p>Aurasium [SEC12]</p>
    <p>FlaskDroid [SEC13]</p>
    <p>RetroSkeleton [MobiSys13]</p>
    <p>Dr. Android &amp; Mr. Hide [SPSM12]</p>
  </div>
  <div class="page">
    <p>Motivation Cells</p>
    <p>[SOSP11]</p>
    <p>Apex [ASIACCS10]</p>
    <p>ASM [SEC15]</p>
    <p>L4Android [SPSM11]</p>
    <p>AppGuard [TACAS13]</p>
    <p>TaintDroid [OSDI10]</p>
    <p>CRePE [ISC10]</p>
    <p>TrustDroid [SPSM11]</p>
    <p>I-ARM-Droid [MoST12]</p>
    <p>DroidForce [ARES14]</p>
    <p>MOSES [SACMAT12]</p>
    <p>AirBag [NDSS14]</p>
    <p>Aurasium [SEC12]</p>
    <p>FlaskDroid [SEC13]</p>
    <p>RetroSkeleton [MobiSys13]</p>
    <p>Dr. Android &amp; Mr. Hide [SPSM12]</p>
  </div>
  <div class="page">
    <p>Motivation Cells</p>
    <p>[SOSP11]</p>
    <p>Apex [ASIACCS10]</p>
    <p>ASM [SEC15]</p>
    <p>L4Android [SPSM11]</p>
    <p>AppGuard [TACAS13]</p>
    <p>TaintDroid [OSDI10]</p>
    <p>CRePE [ISC10]</p>
    <p>TrustDroid [SPSM11]</p>
    <p>I-ARM-Droid [MoST12]</p>
    <p>DroidForce [ARES14]</p>
    <p>MOSES [SACMAT12]</p>
    <p>AirBag [NDSS14]</p>
    <p>Aurasium [SEC12]</p>
    <p>FlaskDroid [SEC13]</p>
    <p>RetroSkeleton [MobiSys13]</p>
    <p>Dr. Android &amp; Mr. Hide [SPSM12]</p>
    <p>OS Extensions Application Layer Solutions</p>
  </div>
  <div class="page">
    <p>Android OS Extensions</p>
    <p>System Services</p>
    <p>Linux Kernel</p>
    <p>Binder IPC Syscall API</p>
    <p>App App</p>
    <p>Kernel Boundary</p>
    <p>Process Boundary</p>
  </div>
  <div class="page">
    <p>Android OS Extensions</p>
    <p>System Services</p>
    <p>Linux Kernel</p>
    <p>Binder IPC Syscall API</p>
    <p>App App</p>
    <p>Monitor</p>
    <p>Monitor</p>
    <p>Strong security</p>
    <p>Hard to deploy</p>
  </div>
  <div class="page">
    <p>Application Layer Solutions</p>
    <p>System Services</p>
    <p>Linux Kernel</p>
    <p>Binder IPC Syscall API</p>
    <p>App App Monitor</p>
    <p>Easy to deploy</p>
    <p>No app monitoring possible</p>
  </div>
  <div class="page">
    <p>Inlined Reference Monitor</p>
    <p>System Services</p>
    <p>Linux Kernel</p>
    <p>Binder IPC Syscall API</p>
    <p>App App</p>
    <p>Monitor</p>
    <p>Easy to deploy</p>
    <p>Weak security</p>
  </div>
  <div class="page">
    <p>Hard to deploy</p>
    <p>Goal</p>
    <p>OS Extensions Application Layer Solutions</p>
    <p>Strong security</p>
    <p>Easy to deploy</p>
    <p>Weak security</p>
  </div>
  <div class="page">
    <p>Hard to deploy</p>
    <p>Strong security</p>
    <p>Goal</p>
    <p>OS Extensions Application Layer Solutions</p>
    <p>Easy to deploy</p>
    <p>Weak security</p>
    <p>Our Goal</p>
    <p>Easy to deploy</p>
    <p>Strong security</p>
  </div>
  <div class="page">
    <p>Objectives Monitor and constrain untrusted applications</p>
    <p>Easy to deploy - No firmware modification / root - No application modification</p>
    <p>Strong security - Protected reference monitor - Fail-safe defaults</p>
  </div>
  <div class="page">
    <p>Approach (1)</p>
    <p>Objective: No firmware modification / root</p>
    <p>Solution: Regular user-space application</p>
    <p>System Services</p>
    <p>Linux Kernel</p>
    <p>Binder IPC Syscall API</p>
    <p>App App Monitor</p>
  </div>
  <div class="page">
    <p>Approach (2)</p>
    <p>Objective: No application modification</p>
    <p>Solution: Application virtualization</p>
    <p>System Services</p>
    <p>Linux Kernel</p>
    <p>Binder IPC Syscall API</p>
    <p>Monitor App</p>
    <p>App</p>
  </div>
  <div class="page">
    <p>System Services</p>
    <p>Linux Kernel</p>
    <p>Binder IPC Syscall API</p>
    <p>Monitor App Shim App</p>
    <p>Approach (3)</p>
    <p>Objective: Protected reference monitor</p>
    <p>Solution: Separate process</p>
  </div>
  <div class="page">
    <p>Approach (4)</p>
    <p>Objective: Fail-safe defaults</p>
    <p>System Services</p>
    <p>Linux Kernel</p>
    <p>Binder IPC Syscall API</p>
    <p>Monitor App Shim App</p>
  </div>
  <div class="page">
    <p>Approach (4)</p>
    <p>Objective: Fail-safe defaults</p>
    <p>System Services</p>
    <p>Linux Kernel</p>
    <p>Binder IPC Syscall API</p>
    <p>Monitor App Shim App</p>
  </div>
  <div class="page">
    <p>Approach (4)</p>
    <p>Objective: Fail-safe defaults</p>
    <p>System Services</p>
    <p>Linux Kernel</p>
    <p>Binder IPC Syscall API</p>
    <p>Monitor App Zero Perm</p>
    <p>App</p>
  </div>
  <div class="page">
    <p>Approach (4)</p>
    <p>Objective: Fail-safe defaults</p>
    <p>Solution: Isolated process</p>
  </div>
  <div class="page">
    <p>Isolated Process</p>
    <p>Allows service components to run isolated from the rest of the application</p>
    <p>Isolated processes - Have zero permissions - Have no access to system services - Run with a distinct, transient UID - Cannot write to the filesystem</p>
  </div>
  <div class="page">
    <p>Architecture</p>
    <p>Boxify</p>
    <p>System Services</p>
    <p>Linux Kernel</p>
    <p>Binder IPC Syscall API</p>
    <p>Monitor App</p>
    <p>Isolated Process App</p>
  </div>
  <div class="page">
    <p>Architecture</p>
    <p>Boxify</p>
    <p>System Services</p>
    <p>Linux Kernel</p>
    <p>Binder IPC Syscall API</p>
    <p>Broker App</p>
    <p>Target App</p>
  </div>
  <div class="page">
    <p>Target</p>
    <p>Broker</p>
    <p>Target App</p>
    <p>IPC Shim Syscall Shim Sandbox Service</p>
  </div>
  <div class="page">
    <p>Target</p>
    <p>Broker</p>
    <p>Target App</p>
    <p>IPC Shim Syscall Shim Sandbox Service IPC Shim</p>
    <p>Divert Binder IPC to Broker</p>
  </div>
  <div class="page">
    <p>Target</p>
    <p>Broker</p>
    <p>Target App</p>
    <p>IPC Shim Syscall Shim Sandbox Service Syscall Shim</p>
    <p>Divert Syscalls to Broker</p>
  </div>
  <div class="page">
    <p>Target</p>
    <p>Broker</p>
    <p>Target App</p>
    <p>IPC Shim Syscall Shim Sandbox Service Sandbox Service</p>
    <p>Control channel for loading/terminating apps</p>
  </div>
  <div class="page">
    <p>Loading an app Broker Target</p>
    <p>Context.bindService()</p>
    <p>Binder SandboxService</p>
    <p>SandboxService.prepare()</p>
    <p>Binder Applica4onThread</p>
    <p>Applica4onThread.bindApplica4on()</p>
    <p>Isolated process is created</p>
    <p>Shims are set up</p>
    <p>App is started</p>
  </div>
  <div class="page">
    <p>Broker</p>
    <p>API Layer</p>
    <p>Target</p>
    <p>IPC Receiver Syscall Receiver</p>
    <p>Core Logic Layer</p>
    <p>Virtualiza4on Layer</p>
    <p>Srv Stub Srv Stub</p>
    <p>Service PEP</p>
    <p>Service PEP</p>
    <p>Core Services</p>
    <p>Syscall PEP</p>
    <p>Component Broker</p>
  </div>
  <div class="page">
    <p>API Layer</p>
    <p>Target</p>
    <p>IPC Receiver Syscall Receiver</p>
    <p>Core Logic Layer</p>
    <p>Virtualiza4on Layer</p>
    <p>Srv Stub Srv Stub</p>
    <p>Service PEP</p>
    <p>Service PEP</p>
    <p>Core Services</p>
    <p>Syscall PEP</p>
    <p>Component Broker</p>
    <p>Establish compatibility across Android versions</p>
    <p>API Layer</p>
  </div>
  <div class="page">
    <p>API Layer</p>
    <p>Target</p>
    <p>IPC Receiver Syscall Receiver</p>
    <p>Core Logic Layer</p>
    <p>Virtualiza4on Layer</p>
    <p>Srv Stub Srv Stub</p>
    <p>Service PEP</p>
    <p>Service PEP</p>
    <p>Core Services</p>
    <p>Syscall PEP</p>
    <p>Component Broker</p>
    <p>Baseline enforcement &amp; virtual system services</p>
    <p>Core Logic Layer</p>
  </div>
  <div class="page">
    <p>API Layer</p>
    <p>Target</p>
    <p>IPC Receiver Syscall Receiver</p>
    <p>Core Logic Layer</p>
    <p>Virtualiza4on Layer</p>
    <p>Srv Stub Srv Stub</p>
    <p>Service PEP</p>
    <p>Service PEP</p>
    <p>Core Services</p>
    <p>Syscall PEP</p>
    <p>Component Broker</p>
    <p>Virtualization Layer</p>
    <p>Translate between Boxify and Android system</p>
  </div>
  <div class="page">
    <p>App</p>
    <p>Virtualization Layer</p>
    <p>Ac4vity A Ac4vity B Service A Service B Receiver A</p>
    <p>Boxify</p>
    <p>Ac4vity 1 Ac4vity N Service 1   Receiver 1 Service N</p>
    <p>startAc4vity(Ac4vity A)</p>
    <p>startAc4vity(Ac4vity 1) scheduleLaunchAc4vity(Ac4vity 1)</p>
    <p>scheduleLaunchAc4vity(Ac4vity A)</p>
    <p>Ac4vity A</p>
    <p>Ac4vity 1</p>
  </div>
  <div class="page">
    <p>System Integration</p>
    <p>Launching apps - Dedicated Activity</p>
    <p>Installing/Updating apps</p>
  </div>
  <div class="page">
    <p>System Integration</p>
    <p>Launching apps - Dedicated Activity - Shortcuts on Home Screen</p>
    <p>Installing/Updating apps</p>
  </div>
  <div class="page">
    <p>System Integration</p>
    <p>Launching apps - Dedicated Activity - Shortcuts on Home Screen - Virtualized Launcher</p>
    <p>Installing/Updating apps</p>
  </div>
  <div class="page">
    <p>System Integration</p>
    <p>Launching apps - Dedicated Activity - Shortcuts on Home Screen - Virtualized Launcher</p>
    <p>Installing/Updating apps - Directly via App Stores</p>
  </div>
  <div class="page">
    <p>Performance</p>
    <p>API Call Na&gt;ve On Boxify Overhead</p>
    <p>Open Camera 103.24 ms 104.48 ms 1.24 ms (1.2%)</p>
    <p>Query Contacts 7.63 ms 8.55 ms 0.92 ms (12.0%)</p>
    <p>Insert Contacts 66.49 ms 67.51 ms 1.02 ms (1.5%)</p>
    <p>Delete Contacts 75.86 ms 76.81 ms 0.95 ms (0.9%)</p>
    <p>Middleware Microbenchmark</p>
  </div>
  <div class="page">
    <p>Performance</p>
    <p>System Call Na&gt;ve On Boxify Overhead</p>
    <p>create 47.2 s 162.4 s 115.2 s</p>
    <p>open 9.5 s 122.7 s 113.2 s</p>
    <p>remove 49.5 s 159.6 s 110.1 s</p>
    <p>mkdir 88.4 s 199.4 s 111.0 s</p>
    <p>Syscall Microbenchmark</p>
  </div>
  <div class="page">
    <p>Performance</p>
    <p>Tool Na&gt;ve On Boxify Loss</p>
    <p>CF Bench 16082 Pts 15376 Pts 4.3%</p>
    <p>Geekbench 1649 Pts 1621 Pts 1.6%</p>
    <p>PassMark 3674 Pts 3497 Pts 4.8%</p>
    <p>Quadrant 7820 Pts 7532 Pts 3.6%</p>
    <p>Benchmark Tools</p>
  </div>
  <div class="page">
    <p>Discussion &amp; Limitations</p>
    <p>Cancels Androids own access control checks</p>
    <p>Violates Principle of Least Privilege</p>
    <p>Full kernel attack surface available</p>
    <p>Presence of Boxify detectable</p>
  </div>
  <div class="page">
    <p>Use Cases</p>
    <p>Instantiate OS extensions at application layer - Fine-grained access control - Information flow control - Dual-persona, BYOD - Dynamic analysis - Automated testing - Xposed -</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Lightweight application virtualization for stock Android</p>
    <p>No root or app modification required</p>
    <p>Low runtime performance overhead</p>
    <p>Wide range of applications</p>
    <p>Thank you!</p>
  </div>
</Presentation>
