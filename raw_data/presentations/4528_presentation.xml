<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>A Stochastic Local Search Approach to Vertex Cover</p>
    <p>September 11, 2007</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>Task: Control all network links using  11 controllers</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>Task: Control all network links using  11 controllers</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>k -VERTEX COVER</p>
    <p>Input: Graph G = (V, E ) and positive integer k Task: Find C  V s. t. all edges have an endpoint in C</p>
    <p>and |C|  k</p>
    <p>NP-complete</p>
    <p>Applications in biology, networks, scheduling, VLSI design,. . .</p>
  </div>
  <div class="page">
    <p>Related Problems</p>
    <p>Independent Set: subset of vertices that are not connected</p>
    <p>Clique: subset of vertices that are fully connected</p>
    <p>vertex cover independent set clique (complement graph)</p>
  </div>
  <div class="page">
    <p>Stochastic Local Search</p>
    <p>Popular approach to NP-hard problems (e. g. SAT)</p>
    <p>Begin with some candidate solution S.</p>
    <p>While S is not a solution. . . Modify S slightly.</p>
  </div>
  <div class="page">
    <p>Algorithm Overview</p>
    <p>The COVER algorithm: Begin with a greedily constructed set C. Iteratively. . .</p>
  </div>
  <div class="page">
    <p>Algorithm Overview</p>
    <p>The COVER algorithm: Begin with a greedily constructed set C. Iteratively. . .</p>
  </div>
  <div class="page">
    <p>Algorithm Overview</p>
    <p>The COVER algorithm: Begin with a greedily constructed set C. Iteratively. . .</p>
  </div>
  <div class="page">
    <p>Algorithm Overview</p>
    <p>The COVER algorithm: Begin with a greedily constructed set C. Iteratively. . .</p>
  </div>
  <div class="page">
    <p>Algorithm Overview</p>
    <p>The COVER algorithm: Begin with a greedily constructed set C. Iteratively. . .</p>
  </div>
  <div class="page">
    <p>Algorithm Overview</p>
    <p>The COVER algorithm: Begin with a greedily constructed set C. Iteratively. . .</p>
  </div>
  <div class="page">
    <p>Algorithm Overview</p>
    <p>The COVER algorithm: Begin with a greedily constructed set C. Iteratively. . .</p>
  </div>
  <div class="page">
    <p>Algorithm Overview</p>
    <p>The COVER algorithm: Begin with a greedily constructed set C. Iteratively. . .</p>
  </div>
  <div class="page">
    <p>Algorithm Overview</p>
    <p>The COVER algorithm: Begin with a greedily constructed set C. Iteratively. . .</p>
  </div>
  <div class="page">
    <p>The Search Heuristic I</p>
    <p>Edge weights: positive real numbers associated with edges High weight  difficult edge</p>
    <p>initialized to constant incremented at each iteration for uncovered edges</p>
    <p>Vertex weights: derived from weights of those incident edges that a vertex is responsible for Higher weight  vertex more likely to be chosen</p>
    <p>Swap vertices a and b to maximise gain: weight(b)  weight(a) +</p>
  </div>
  <div class="page">
    <p>The Search Heuristic II</p>
    <p>Additional conditions:</p>
    <p>Taboo list: the 2 vertices last removed/inserted</p>
    <p>Not allowed to be chosen for inclusion/removal in C Preserves most recent decision</p>
    <p>Time stamp: iteration when a vertex was last removed</p>
    <p>Prefer vertices with lower time stamp Used to break ties</p>
  </div>
  <div class="page">
    <p>The COVER Algorithm</p>
    <p>while iteration number &lt; MAX ITERATIONS do 5: choose uncovered edge (u1, u2) randomly w. u. p. 6: choose vertices u {u1, u2} and v  C according to</p>
    <p>max gain criterion, taboo list &amp; time stamps 7: C = C \{v} 8: C = C {u} 9: taboo list = {v, u}</p>
  </div>
  <div class="page">
    <p>The COVER Algorithm</p>
    <p>while iteration number &lt; MAX ITERATIONS do 5: choose uncovered edge (u1, u2) randomly Exploration 6: choose vertices u {u1, u2} and v  C according to</p>
    <p>max gain criterion, taboo list &amp; time stamps Exploitation 7: C = C \{v} 8: C = C {u} 9: taboo list = {v, u}</p>
  </div>
  <div class="page">
    <p>Empirical Evaluation</p>
    <p>Three benchmark sets: Biological problems BHOSLIB DIMACS</p>
    <p>Comparison against different approaches from literature</p>
    <p>Repeat unsuccessful runs, increasing k</p>
  </div>
  <div class="page">
    <p>Biological Problems</p>
    <p>Finding correlated protein sequences</p>
    <p>Largest possible set of correlated sequences  maximum clique problem Problem instances from Abu-Khzam et al. (2006) Comparison against Abu-Khzam et al.s parallel exhaustive search based on Fixed-Parameter Tractability (P-FPT)</p>
  </div>
  <div class="page">
    <p>Experimental Results I</p>
    <p>Graph COVER P-FPT Instance |V| |E| k Quality Median Runtime globin3 972 3898 165 10000 0.01 23 globin7 972 38557 350 10000 0.01 47 globin9 972 62525 378 10000 0.01 227</p>
    <p>globin15 972 149473 427 9811 0.01 14 sh2-3 839 5860 246 10000 0.01 22 sh2-4 839 13799 337 10000 0.01 2593 sh2-5 839 26612 399 10000 0.01 7</p>
    <p>sh2-10 839 129697 547 10000 0.01 332 sh3-10 2466 1508850 2044 10000 0.80 8400</p>
  </div>
  <div class="page">
    <p>Experimental Results I</p>
    <p>Graph COVER P-FPT Instance |V| |E| k Quality Median Runtime globin3 972 3898 165 10000 0.01 23 globin7 972 38557 350 10000 0.01 47 globin9 972 62525 378 10000 0.01 227</p>
    <p>globin15 972 149473 427 9811 0.01 14 sh2-3 839 5860 246 10000 0.01 22 sh2-4 839 13799 337 10000 0.01 2593 sh2-5 839 26612 399 10000 0.01 7</p>
    <p>sh2-10 839 129697 547 10000 0.01 332 sh3-10 2466 1508850 2044 10000 0.80 8400</p>
  </div>
  <div class="page">
    <p>Experimental Results I</p>
    <p>Graph COVER P-FPT Instance |V| |E| k Quality Median Runtime globin3 972 3898 165 10000 0.01 23 globin7 972 38557 350 10000 0.01 47 globin9 972 62525 378 10000 0.01 227</p>
    <p>globin15 972 149473 427 9811 0.01 14 sh2-3 839 5860 246 10000 0.01 22 sh2-4 839 13799 337 10000 0.01 2593 sh2-5 839 26612 399 10000 0.01 7</p>
    <p>sh2-10 839 129697 547 10000 0.01 332 sh3-10 2466 1508850 2044 10000 0.80 8400</p>
  </div>
  <div class="page">
    <p>BHOSLIB</p>
    <p>Benchmarks with Hidden Optimal Solutions</p>
    <p>CSP problems generated according to model RB (Xu 2005) Instances in phase transition area Proven to be hard</p>
    <p>Problem instances from Xus benchmark repository</p>
  </div>
  <div class="page">
    <p>Experimental Results IIa</p>
    <p>Instance Groups</p>
    <p>% O</p>
    <p>p t.</p>
    <p>S o lu</p>
    <p>ti o n s</p>
    <p>Problem sizes: V = 450  1 534, E = 17 827  125 982 All non-optimal solutions off by 1 Found optimal solution at least once</p>
  </div>
  <div class="page">
    <p>Experimental Results IIa</p>
    <p>Instance Groups</p>
    <p>R u n -t</p>
    <p>im e (</p>
    <p>s)</p>
    <p>Problem sizes: V = 450  1 534, E = 17 827  125 982 All non-optimal solutions off by 1 Found optimal solution at least once</p>
  </div>
  <div class="page">
    <p>Results IIb</p>
    <p>Comparison on the BHOSLIB problems:</p>
    <p>Ant Colony (Gilmour &amp; Dras, 2006): off by 8.625 on avg. COVER: off by 0.25</p>
    <p>In addition: 20-year challenge problem</p>
    <p>|V| = 4000, |E| = 572 774, k = 3900 best known solution so far: 3904 vertices in 3 743 sec. COVER: 3903 vertices in 71 sec.</p>
  </div>
  <div class="page">
    <p>DIMACS</p>
    <p>Second DIMACS Implementation Challenge (1992-1993)</p>
    <p>C-fat family: fault diagnosis johnson, hamming: coding theory random graphs brock family: hard graphs . . .</p>
    <p>Comparison against DLS-MC (Pullan &amp; Hoos 2006)</p>
  </div>
  <div class="page">
    <p>Experimental Results IIIa</p>
    <p>For 74 of the 80 instances, COVER finds an optimal or best-known solution. The 6 problematic instances are all from the same problem class (brock-family). On 2 instances, COVER sets new records.</p>
  </div>
  <div class="page">
    <p>Experimental Results IIIb</p>
    <p>Graph COVER DLS-MC Instance |V| k Quality Median Avg. Quality Avg.</p>
    <p>c-fat200-1 200 188 10000 0.01 0.01 10000 0.01 c-fat200-2 200 176 10000 0.01 0.01 10000 0.01</p>
    <p>keller4 171 160 10000 0.01 0.01 10000 0.01 keller5 776 749 10000 0.03 0.07 10000 0.02 keller6 3361 3302 10000 15.18 15.63 10000 170.48</p>
    <p>C1000.9 1000 932 10000 3.27 5.82 10000 4.44 C2000.5 2000 1984 10000 1.84 3.78 10000 0.97 C2000.9 2000 1922 84160 323.11 369.33 9370 193.22 C4000.5 4000 3982 9820 621.38 689.74 10000 181.23</p>
    <p>MANN a9 45 29 10000 0.01 0.01 10000 0.01 MANN a27 378 252 10000 0.01 0.01 10000 0.05 MANN a45 1035 690 41590 (0.28) n/a 01000 n/a MANN a81 3321 2221 4393 (30.89) n/a 00100 n/a brock200 1 200 179 10000 0.01 0.01 10000 0.02 brock200 2 200 188 10000 0.23 0.43 10000 0.02 brock400 1 400 373 00100 (0.06) n/a 10000 n/a brock400 3 400 369 603010 247.87 135.26 10000 0.18 brock800 1 800 777 00100 (1.06) n/a 10000 n/a brock800 2 800 776 00100 (0.98) n/a 10000 n/a</p>
  </div>
  <div class="page">
    <p>Experimental Results IIIb</p>
    <p>Graph COVER DLS-MC Instance |V| k Quality Median Avg. Quality Avg.</p>
    <p>c-fat200-1 200 188 10000 0.01 0.01 10000 0.01 c-fat200-2 200 176 10000 0.01 0.01 10000 0.01</p>
    <p>keller4 171 160 10000 0.01 0.01 10000 0.01 keller5 776 749 10000 0.03 0.07 10000 0.02 keller6 3361 3302 10000 15.18 15.63 10000 170.48</p>
    <p>C1000.9 1000 932 10000 3.27 5.82 10000 4.44 C2000.5 2000 1984 10000 1.84 3.78 10000 0.97 C2000.9 2000 1922 84160 323.11 369.33 9370 193.22 C4000.5 4000 3982 9820 621.38 689.74 10000 181.23</p>
    <p>MANN a9 45 29 10000 0.01 0.01 10000 0.01 MANN a27 378 252 10000 0.01 0.01 10000 0.05 MANN a45 1035 690 41590 (0.28) n/a 01000 n/a MANN a81 3321 2221 4393 (30.89) n/a 00100 n/a brock200 1 200 179 10000 0.01 0.01 10000 0.02 brock200 2 200 188 10000 0.23 0.43 10000 0.02 brock400 1 400 373 00100 (0.06) n/a 10000 n/a brock400 3 400 369 603010 247.87 135.26 10000 0.18 brock800 1 800 777 00100 (1.06) n/a 10000 n/a brock800 2 800 776 00100 (0.98) n/a 10000 n/a</p>
  </div>
  <div class="page">
    <p>Experimental Results IIIb</p>
    <p>Graph COVER DLS-MC Instance |V| k Quality Median Avg. Quality Avg.</p>
    <p>c-fat200-1 200 188 10000 0.01 0.01 10000 0.01 c-fat200-2 200 176 10000 0.01 0.01 10000 0.01</p>
    <p>keller4 171 160 10000 0.01 0.01 10000 0.01 keller5 776 749 10000 0.03 0.07 10000 0.02 keller6 3361 3302 10000 15.18 15.63 10000 170.48</p>
    <p>C1000.9 1000 932 10000 3.27 5.82 10000 4.44 C2000.5 2000 1984 10000 1.84 3.78 10000 0.97 C2000.9 2000 1922 84160 323.11 369.33 9370 193.22 C4000.5 4000 3982 9820 621.38 689.74 10000 181.23</p>
    <p>MANN a9 45 29 10000 0.01 0.01 10000 0.01 MANN a27 378 252 10000 0.01 0.01 10000 0.05 MANN a45 1035 690 41590 (0.28) n/a 01000 n/a MANN a81 3321 2221 4393 (30.89) n/a 00100 n/a brock200 1 200 179 10000 0.01 0.01 10000 0.02 brock200 2 200 188 10000 0.23 0.43 10000 0.02 brock400 1 400 373 00100 (0.06) n/a 10000 n/a brock400 3 400 369 603010 247.87 135.26 10000 0.18 brock800 1 800 777 00100 (1.06) n/a 10000 n/a brock800 2 800 776 00100 (0.98) n/a 10000 n/a</p>
  </div>
  <div class="page">
    <p>Experimental Results IIIb</p>
    <p>Graph COVER DLS-MC Instance |V| k Quality Median Avg. Quality Avg.</p>
    <p>c-fat200-1 200 188 10000 0.01 0.01 10000 0.01 c-fat200-2 200 176 10000 0.01 0.01 10000 0.01</p>
    <p>keller4 171 160 10000 0.01 0.01 10000 0.01 keller5 776 749 10000 0.03 0.07 10000 0.02 keller6 3361 3302 10000 15.18 15.63 10000 170.48</p>
    <p>C1000.9 1000 932 10000 3.27 5.82 10000 4.44 C2000.5 2000 1984 10000 1.84 3.78 10000 0.97 C2000.9 2000 1922 84160 323.11 369.33 9370 193.22 C4000.5 4000 3982 9820 621.38 689.74 10000 181.23</p>
    <p>MANN a9 45 29 10000 0.01 0.01 10000 0.01 MANN a27 378 252 10000 0.01 0.01 10000 0.05 MANN a45 1035 690 41590 (0.28) n/a 01000 n/a MANN a81 3321 2221 4393 (30.89) n/a 00100 n/a brock200 1 200 179 10000 0.01 0.01 10000 0.02 brock200 2 200 188 10000 0.23 0.43 10000 0.02 brock400 1 400 373 00100 (0.06) n/a 10000 n/a brock400 3 400 369 603010 247.87 135.26 10000 0.18 brock800 1 800 777 00100 (1.06) n/a 10000 n/a brock800 2 800 776 00100 (0.98) n/a 10000 n/a</p>
  </div>
  <div class="page">
    <p>Experimental Results IIIb</p>
    <p>Graph COVER DLS-MC Instance |V| k Quality Median Avg. Quality Avg.</p>
    <p>c-fat200-1 200 188 10000 0.01 0.01 10000 0.01 c-fat200-2 200 176 10000 0.01 0.01 10000 0.01</p>
    <p>keller4 171 160 10000 0.01 0.01 10000 0.01 keller5 776 749 10000 0.03 0.07 10000 0.02 keller6 3361 3302 10000 15.18 15.63 10000 170.48</p>
    <p>C1000.9 1000 932 10000 3.27 5.82 10000 4.44 C2000.5 2000 1984 10000 1.84 3.78 10000 0.97 C2000.9 2000 1922 84160 323.11 369.33 9370 193.22 C4000.5 4000 3982 9820 621.38 689.74 10000 181.23</p>
    <p>MANN a9 45 29 10000 0.01 0.01 10000 0.01 MANN a27 378 252 10000 0.01 0.01 10000 0.05 MANN a45 1035 690 41590 (0.28) n/a 01000 n/a MANN a81 3321 2221 4393 (30.89) n/a 00100 n/a brock200 1 200 179 10000 0.01 0.01 10000 0.02 brock200 2 200 188 10000 0.23 0.43 10000 0.02 brock400 1 400 373 00100 (0.06) n/a 10000 n/a brock400 3 400 369 603010 247.87 135.26 10000 0.18 brock800 1 800 777 00100 (1.06) n/a 10000 n/a brock800 2 800 776 00100 (0.98) n/a 10000 n/a</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>COVERs empirical performance</p>
    <p>Biology: significantly faster than P-FPT BHOSLIB: very good performance</p>
    <p>New record on 20-year challenge problem</p>
    <p>DIMACS: competitive with state of the art</p>
    <p>New records on 2 problems Bad results on brock instances</p>
  </div>
  <div class="page">
    <p>Search without parameter</p>
    <p>COVER is an algorithm for k -vertex cover. . .</p>
    <p>What if optimal value for k is not known?</p>
    <p>A small experiment: Start with a greedy approximation to k</p>
    <p>Search iteratively with decreasing values of k Conjecture: most time is spent in last iteration (k = k)</p>
  </div>
  <div class="page">
    <p>Search without parameter</p>
    <p>Graph Run-time(s) k k + 1 k + 2 k + 3 &gt; k + 3 Globin7 0.54 48.15% 48.15% 3.70% Sh2-5 0.70 37.14% 37.14% 25.71%</p>
    <p>johnson32-2-4 0.92 28.26% 28.26% 26.09% 11.96% 5.43% brock200 1 1.52 21.71% 17.11% 17.11% 16.45% 27.63% p hat700-1 2.16 43.06% 24.54% 11.57% 10.65% 10.19%</p>
    <p>keller5 5.12 40.43% 7.23% 5.08% 5.08% 42.19% frb30-15-1 7.15 41.68% 24.20% 7.27% 3.64% 23.22%</p>
    <p>hamming10-4 10.73 47.62% 25.63% 2.42% 2.42% 21.90% san400 0.5 1 15.30 34.77% 22.35% 15.82% 19.28% 7.78% DSJC1000.5 88.10 97.63% 1.16% 0.30% 0.30% 0.62% brock200 3 166.01 99.18% 0.19% 0.16% 0.16% 0.32%</p>
    <p>san1000 645.26 28.25% 20.13% 18.73% 18.72% 14.16% frb50-23-4 1344.88 85.85% 9.78% 2.42% 1.42% 0.53% frb59-26-5 17611.90 84.57% 13.84% 0.89% 0.35% 0.35%</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Conclusion: A very competitive vertex cover algorithm</p>
    <p>Simple, needs no parameter Performs well even if k is not known</p>
    <p>Future work: Further techniques to escape local minima</p>
  </div>
  <div class="page">
    <p>The End</p>
    <p>Thank you!</p>
    <p>Questions?</p>
  </div>
</Presentation>
