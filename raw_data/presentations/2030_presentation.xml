<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>EdgeBalance: Model-Based Load Balancing for Network Edge Data Planes</p>
    <p>Wei Zhang, Abhigyan Sharma*, Timothy Wood</p>
    <p>George Washington University *AT&amp;T Labs Research</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Outline  Background and Motivation</p>
    <p>EdgeBalance Design</p>
    <p>Environment Setup and Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Network Edge Computing</p>
    <p>User Plane</p>
    <p>Current</p>
    <p>Control Plane</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Network Edge Computing</p>
    <p>User Plane</p>
    <p>Control Plane</p>
    <p>User Plane</p>
    <p>User Plane</p>
    <p>User Plane</p>
    <p>User Plane</p>
    <p>Current</p>
    <p>5G Edge Control Plane</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Network Edge Computing</p>
    <p>User Plane</p>
    <p>Control Plane</p>
    <p>User Plane</p>
    <p>User Plane</p>
    <p>User Plane</p>
    <p>User Plane</p>
    <p>Current</p>
    <p>5G Edge</p>
    <p>User plane more distributed More network services can be pushed into edge</p>
    <p>Control Plane</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Edge Computing runs NFs  Network services comprise of chains</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Edge Computing runs NFs  Replicated NF chains require a load balancer</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Cloud Load Balancer  Homogeneous services, static policies  Google Maglev  Microsoft Ananta  Facebook Mcrouter  Twitter TwemProxy</p>
    <p>Web</p>
    <p>Web</p>
    <p>Web</p>
    <p>Memcached</p>
    <p>Memcached</p>
    <p>Memcached</p>
    <p>Memcached</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Cloud Load Balancer  Homogeneous services, static policies  Google Maglev  Microsoft Ananta  Facebook Mcrouter  Twitter TwemProxy</p>
    <p>Web</p>
    <p>Web</p>
    <p>Web</p>
    <p>Memcached</p>
    <p>Memcached</p>
    <p>VPN Snort FW</p>
    <p>VPN Snort FW</p>
    <p>VPN Snort FW</p>
    <p>LB for NF Chains</p>
    <p>Memcached</p>
    <p>Memcached</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Bidirectional Affinity  Forward and reverse flows are required to pass through the same set of network functions</p>
    <p>Update header</p>
    <p>Client ServerLoad Balancer</p>
    <p>NF NF NF NF</p>
    <p>Client Server</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Static LB is not enough  Dynamic server resources  Dynamic service chains  Dynamic workloads</p>
    <p>NF1 NF2 NF3</p>
    <p>NF4 NF5</p>
    <p>NF1</p>
    <p>NF6</p>
    <p>NF6</p>
    <p>Different Length of NF Chains</p>
    <p>Pr o ce</p>
    <p>ss in</p>
    <p>g C</p>
    <p>o st</p>
    <p>NF1 NF2 NF3 NF4 NF5 NF6</p>
    <p>Different Processing Cost of NFs</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Challenges for Dynamic LB</p>
    <p>Fine-grained metrics are required for dynamic load balancing  Real time CPU monitoring is  Impossible for poll mode NFs</p>
    <p>May have stale data</p>
    <p>Increases system overhead</p>
    <p>C PU</p>
    <p>U sa</p>
    <p>ge</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Outline  Background and Motivation</p>
    <p>EdgeBalance Design</p>
    <p>Environment Setup and Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>EdgeBalance 1. Bidirectional affinity 2. Accurate CPU prediction</p>
    <p>Client</p>
    <p>ServerLoad Balancer</p>
    <p>NF NF</p>
    <p>Client</p>
    <p>Server Flow 1 (purple) Host 1, Core 2, Chain2</p>
    <p>Flow 2 (yellow) Host 2, Core 2, Chain2</p>
    <p>Chain 2 Host 1, Core 2</p>
    <p>Host 2, Core 2 Host1C1 C2</p>
    <p>NF NF Chain1 Chain2</p>
    <p>NF NF</p>
    <p>Host2C1 C2</p>
    <p>NF NF Chain1 Chain2</p>
    <p>Rule</p>
    <p>Flow Table</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Bidirectional Affinity</p>
    <p>Add forward flow and reverse flow into forward table and reverse table</p>
    <p>&lt;srcIP1, dstIP1, udp, srcPort1, dstPort1&gt; NF11-&gt;NF21-&gt;NF31</p>
    <p>&lt;srcIP2, dstIP2, tcp, srcPort2, dstPort2&gt; NF12-&gt;NF22-&gt;NF32 Forward Table</p>
    <p>Reverse Table</p>
    <p>NF11</p>
    <p>&lt;dstIP1, srcIP1, udp, dstPort11, srcPort1&gt; NF11-&gt;NF21-&gt;NF31</p>
    <p>&lt;dstIP2, srcIP2, tcp, dstPort2, srcPort2&gt; NF12-&gt;NF22-&gt;NF32</p>
    <p>NF21 NF31</p>
    <p>NF12 NF22 NF32 Flow2</p>
    <p>Flow1</p>
    <p>Update dst port</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Bidirectional Affinity</p>
    <p>Remove forward flow and reverse flow from forward table and reverse table</p>
    <p>&lt;srcIP1, dstIP1, udp, srcPort1, dstPort1&gt; NF11-&gt;NF21-&gt;NF31</p>
    <p>Forward Table</p>
    <p>Reverse Table</p>
    <p>NF11</p>
    <p>&lt;dstIP1, srcIP1, udp, dstPort11, srcPort1&gt; NF11-&gt;NF21-&gt;NF31</p>
    <p>NF21 NF31</p>
    <p>NF12 NF22 NF32</p>
    <p>Flow1</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Accurate CPU Prediction</p>
    <p>Model to predict CPU usage</p>
    <p>Chain processing cost</p>
    <p>The number of flows</p>
    <p>Flow rate</p>
    <p>NF1 NF2 NF3</p>
    <p>Core</p>
    <p>NF4 NF5 NF6</p>
    <p>NF7 NF8 NF9</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Accurate CPU Prediction</p>
    <p>Model to predict CPU usage</p>
    <p>Chain processing cost</p>
    <p>The number of flows</p>
    <p>Flow rate</p>
    <p>NF1 NF2 NF3</p>
    <p>Core</p>
    <p>NF4 NF5 NF6</p>
    <p>NF7 NF8 NF9</p>
    <p>&lt;hostID, coreID, chainID&gt; Stats (bits, packets)</p>
    <p>&lt;host1, core1, chain1&gt; xx, yy</p>
    <p>Predict_CPUijk = Costijk k=1</p>
    <p>n</p>
    <p>*Rateijk i: host I j: core j k: number of chains</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Dynamic Load Balancing</p>
    <p>Balance the load across the hosts and cores  PID controller for LB weight setting</p>
    <p>- Seeks to equalize load on hosts and cores</p>
    <p>- Uses local information for feedback</p>
    <p>Host1</p>
    <p>C1 CM</p>
    <p>Weight?</p>
    <p>Hostk</p>
    <p>C1 CN Controller Target system: Evenly CPU usage</p>
    <p>Average_PCPU Diff_PCPU_i</p>
    <p>Weight_i Disturbance</p>
    <p>PCPU_i</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>High Performance</p>
    <p>DPDK high network IO  Multi-threads</p>
    <p>- RSS dispatch flows to cores  Lockless flow table</p>
    <p>- Per-core flow table</p>
    <p>- Cleanup on the same thread Kernel Space</p>
    <p>User Space</p>
    <p>Core1 Core1</p>
    <p>NIC RSS</p>
    <p>Flow Table Flow Table</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Outline  Background and Motivation</p>
    <p>EdgeBalance Design</p>
    <p>Environment Setup and Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Experiment Setup</p>
    <p>Cloudlab c220g5 specs  DPDK 18.02  Ubuntu 14.04  Packet generator</p>
    <p>- Pktgen-DPDK</p>
    <p>- Cisco Trex  Bess runs NFs</p>
    <p>EdgeBalance</p>
    <p>Pktgen-DPDK Cisco-Trex</p>
    <p>Bess</p>
    <p>NF1 NF2 NF3</p>
    <p>Bess</p>
    <p>NF1 NF2 NF3</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Evaluation: Prediction Accuracy</p>
    <p>Accuracy of model-based CPU use prediction</p>
    <p>C P U U sa ge</p>
    <p>(% )</p>
    <p>Processing cost of NF chain (ns)</p>
    <p>Measured CPU Predicted CPU</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Evaluation: Outperform</p>
    <p>A workload with a mix of elephant and mice flows  EdgeBalance outperforms static and monitor-based LBs</p>
    <p>Th ro ug hp ut (M bp s)</p>
    <p>Elephant traffc ratio (%)</p>
    <p>Static WRR Monitor</p>
    <p>EdgeBalace 0 50 100 150 200 250 300 350 400</p>
    <p>La te nc y (u s)</p>
    <p>Elephant traffc ratio (%)</p>
    <p>Static WRR Monitor</p>
    <p>EdgeBalace</p>
  </div>
  <div class="page">
    <p>Wei Zhang</p>
    <p>Conclusions  EdgeBalance aims to balance the load for network service chains at edge  Network edge has unique challenges</p>
    <p>Limited resources Heterogeniety Affinity due to stateful network functions</p>
    <p>Bidirectional flow affinity  Forward flow and reverse flow go through the same set of NFs</p>
    <p>Dynamic load balance Accurately predict CPU load Dynamically adjust allocation weight with PID controller to balance CPU load across hosts</p>
    <p>wei.zhang.gb@gmail.com</p>
  </div>
</Presentation>
