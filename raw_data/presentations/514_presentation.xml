<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Fast Deterministic Distributed Algorithms for Sparse Spanners</p>
    <p>Bilel Derbel</p>
    <p>(LaBRI, Bordeaux 1)</p>
    <p>joint work with</p>
    <p>Cyril Gavoille (LaBRI, Bordeaux1)</p>
  </div>
  <div class="page">
    <p>Problem Definition: H is a k-spanner of G if H  G and dH (u, v)  k  dG(u, v) u, v  V (G)</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.1/16</p>
  </div>
  <div class="page">
    <p>Problem Definition: H is a k-spanner of G if H  G and dH (u, v)  k  dG(u, v) u, v  V (G)</p>
    <p>G is a 1-spanner of G A BFS spanning tree of G is a D-spanner of G.</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.1/16</p>
  </div>
  <div class="page">
    <p>Problem Definition: H is a k-spanner of G if H  G and dH (u, v)  k  dG(u, v) u, v  V (G)</p>
    <p>G is a 1-spanner of G A BFS spanning tree of G is a D-spanner of G. high quality = good stretch-size trade-offs</p>
    <p>[Folklore] Every graph G has a (2k  1)-spanner with O(n1+1/k) edges</p>
    <p>this stretch-size trade-off is believed to be tight according to a girth conjecture by Erdos (proved for k = 1, 2, 3, 5).</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.1/16</p>
  </div>
  <div class="page">
    <p>Problem Definition: H is a k-spanner of G if H  G and dH (u, v)  k  dG(u, v) u, v  V (G)</p>
    <p>G is a 1-spanner of G A BFS spanning tree of G is a D-spanner of G. high quality = good stretch-size trade-offs</p>
    <p>[Folklore] Every graph G has a (2k  1)-spanner with O(n1+1/k) edges</p>
    <p>this stretch-size trade-off is believed to be tight according to a girth conjecture by Erdos (proved for k = 1, 2, 3, 5).</p>
    <p>We want to efficiently compute a high quality spanner in a distributed way.</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.1/16</p>
  </div>
  <div class="page">
    <p>Problem Definition: H is a k-spanner of G if H  G and dH (u, v)  k  dG(u, v) u, v  V (G)</p>
    <p>We want to efficiently compute a high quality spanner in a distributed way.</p>
    <p>Model of computation = LOCAL model locality nature of a distributed problem in 1 time unit, a node can send messages of unlimited size to its neighbours. negligible time for local computations.</p>
    <p>SIROCCO06/03-07-06 B.DERBEL Fast Deterministic Distributed Algorithms for Sparse Spanners  p.1/16</p>
  </div>
  <div class="page">
    <p>Problem</p>
    <p>Deterministic Constructions (A. Awerbuch, D. Peleg ... )</p>
    <p>O(n+1/k) time = Sparse covers and decompositions</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.2/16</p>
  </div>
  <div class="page">
    <p>Problem</p>
    <p>Deterministic Constructions (A. Awerbuch, D. Peleg ... )</p>
    <p>O(n+1/k) time = Sparse covers and decompositions = O(k)-spanner with O(n1+1/k) edges.</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.2/16</p>
  </div>
  <div class="page">
    <p>Problem</p>
    <p>Deterministic Constructions (A. Awerbuch, D. Peleg ... )</p>
    <p>O(n+1/k) time = Sparse covers and decompositions = O(k)-spanner with O(n1+1/k) edges.</p>
    <p>Can we construct a constant stretch spanner with o(n2) edges in O(n) (deterministic) time ?</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.2/16</p>
  </div>
  <div class="page">
    <p>Problem</p>
    <p>Deterministic Constructions (A. Awerbuch, D. Peleg ... )</p>
    <p>O(n+1/k) time = Sparse covers and decompositions = O(k)-spanner with O(n1+1/k) edges.</p>
    <p>Can we construct a constant stretch spanner with o(n2) edges in O(n) (deterministic) time ?</p>
    <p>YES</p>
    <p>SIROCCO06/03-07-06 B.DERBEL Fast Deterministic Distributed Algorithms for Sparse Spanners  p.2/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm</p>
    <p>add edges to the spanner in parallel at different regions of the graph</p>
    <p>break the symmetry</p>
    <p>we use a maximal independent -dominating set IDS(G)</p>
    <p>u  V , v  IDS(G) such that d(u, v)  . u, v  IDS(G), d(u, v)  2, i.e., (u, v) / E. maximal for inclusion.</p>
    <p>a MIS is a maximal independent 1-dominating set</p>
    <p>SIROCCO06/03-07-06 B.DERBEL Fast Deterministic Distributed Algorithms for Sparse Spanners  p.3/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 2</p>
    <p>G</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.4/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 2 if the degree dv of a node v verifies dv</p>
    <p>n, then</p>
    <p>add the star N (v) to the spanner. delete v from G</p>
    <p>G</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.4/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 2 if the degree dv of a node v verifies dv</p>
    <p>n, then</p>
    <p>add the star N (v) to the spanner. delete v from G</p>
    <p>find a maximal independent set I of G2.</p>
    <p>G</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.4/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 2 if the degree dv of a node v verifies dv</p>
    <p>n, then</p>
    <p>add the star N (v) to the spanner. delete v from G</p>
    <p>find a maximal independent set I of G2. = u  V , d(u, I)  2 = |I|  n/</p>
    <p>n =</p>
    <p>n</p>
    <p>G</p>
    <p>n</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.4/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 2 if the degree dv of a node v verifies dv</p>
    <p>n, then</p>
    <p>add the star N (v) to the spanner. delete v from G</p>
    <p>find a maximal independent set I of G2. = u  V , d(u, I)  2 = |I|  n/</p>
    <p>n =</p>
    <p>n</p>
    <p>v  I, add a BFS tree of N3(v) to the spanner</p>
    <p>G</p>
    <p>n</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.4/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 2 if the degree dv of a node v verifies dv</p>
    <p>n, then</p>
    <p>add the star N (v) to the spanner. delete v from G</p>
    <p>find a maximal independent set I of G2. = u  V , d(u, I)  2 = |I|  n/</p>
    <p>n =</p>
    <p>n</p>
    <p>v  I, add a BFS tree of N3(v) to the spanner Analysis : Let us consider an edge u, v</p>
    <p>u v</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.4/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 2 if the degree dv of a node v verifies dv</p>
    <p>n, then</p>
    <p>add the star N (v) to the spanner. delete v from G</p>
    <p>find a maximal independent set I of G2. = u  V , d(u, I)  2 = |I|  n/</p>
    <p>n =</p>
    <p>n</p>
    <p>v  I, add a BFS tree of N3(v) to the spanner Analysis : Let us consider an edge u, v</p>
    <p>case 1 : du</p>
    <p>n = stretch = 1</p>
    <p>vdu</p>
    <p>n</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.4/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 2 if the degree dv of a node v verifies dv</p>
    <p>n, then</p>
    <p>add the star N (v) to the spanner. delete v from G</p>
    <p>find a maximal independent set I of G2. = u  V , d(u, I)  2 = |I|  n/</p>
    <p>n =</p>
    <p>n</p>
    <p>v  I, add a BFS tree of N3(v) to the spanner Analysis : Let us consider an edge u, v</p>
    <p>case 1 : du</p>
    <p>n = stretch = 1 case 2 : du &gt;</p>
    <p>n and dv &gt;</p>
    <p>n = stretch = 5</p>
    <p>u v w  M IS(G2)</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.4/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 2 if the degree dv of a node v verifies dv</p>
    <p>n, then</p>
    <p>add the star N (v) to the spanner. delete v from G</p>
    <p>find a maximal independent set I of G2. = u  V , d(u, I)  2 = |I|  n/</p>
    <p>n =</p>
    <p>n</p>
    <p>v  I, add a BFS tree of N3(v) to the spanner Analysis</p>
    <p>stretch = 5 size = n</p>
    <p>n +</p>
    <p>n  n = O(n3/2)</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.4/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 2 if the degree dv of a node v verifies dv</p>
    <p>n, then</p>
    <p>add the star N (v) to the spanner. delete v from G</p>
    <p>find a maximal independent set I of G2. = u  V , d(u, I)  2 = |I|  n/</p>
    <p>n =</p>
    <p>n</p>
    <p>v  I, add a BFS tree of N3(v) to the spanner Analysis</p>
    <p>stretch = 5 size = O(n3/2)</p>
    <p>SIROCCO06/03-07-06 B.DERBEL Fast Deterministic Distributed Algorithms for Sparse Spanners  p.4/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 3</p>
    <p>G</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.5/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 3</p>
    <p>dv  n1/3 = add the star N (v) to the spanner.</p>
    <p>G</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.5/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 3</p>
    <p>dv  n1/3 = add the star N (v) to the spanner. find a MIS I of G2.</p>
    <p>G</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.5/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 3</p>
    <p>dv  n1/3 = add the star N (v) to the spanner. find a MIS I of G2.</p>
    <p>= |I|  n/n1/3 = n2/3 n  n2/3 &gt; n1+1/3 !</p>
    <p>G</p>
    <p>n1/3</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.5/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 3</p>
    <p>dv  n1/3 = add the star N (v) to the spanner. find a MIS I of G2.</p>
    <p>= |I|  n/n1/3 = n2/3 n  n2/3 &gt; n1+1/3 !</p>
    <p>v  I, construct the region R(v) of v if |(R(v))|  n1/3|R(v)|, then span (R(v)) =</p>
    <p>|(R(v))|  n1/3</p>
    <p>|R(v)| = n1/3  n</p>
    <p>G</p>
    <p>n1/3</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.5/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 3</p>
    <p>dv  n1/3 = add the star N (v) to the spanner. find a MIS I of G2.</p>
    <p>= |I|  n/n1/3 = n2/3 n  n2/3 &gt; n1+1/3 !</p>
    <p>v  I, construct the region R(v) of v find a MIS I of G6[I]</p>
    <p>= u  I, d(u, I)  6 = v  V , d(v, I)  8 = |I|  n/n2/3 = n1/3</p>
    <p>G</p>
    <p>n2/3</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.5/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 3</p>
    <p>dv  n1/3 = add the star N (v) to the spanner. find a MIS I of G2.</p>
    <p>= |I|  n/n1/3 = n2/3 n  n2/3 &gt; n1+1/3 !</p>
    <p>v  I, construct the region R(v) of v find a MIS I of G6(I) v  I, add a BFS tree of N9(v) to the spanner</p>
    <p>stretch = 2  8 + 1 = 17</p>
    <p>G</p>
    <p>n2/3</p>
    <p>SIROCCO06/03-07-06 B.DERBEL Fast Deterministic Distributed Algorithms for Sparse Spanners  p.5/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 3 dv  n1/3 = add the star N (v) to the spanner. find a MIS I of G2.</p>
    <p>= |I|  n/n1/3 = n2/3 n  n2/3 &gt; n1+1/3 !</p>
    <p>v  I, construct the region R(v) of v there are at most n2/3 regions !</p>
    <p>G</p>
    <p>n1/3</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.6/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 3 dv  n1/3 = add the star N (v) to the spanner. find a MIS I of G2.</p>
    <p>= |I|  n/n1/3 = n2/3 n  n2/3 &gt; n1+1/3 !</p>
    <p>v  I, construct the region R(v) of v there are at most n2/3 regions !</p>
    <p>connect each two neighbouring regions size = n + n2/3n2/3 = O(n1+1/3) stretch = 2 + 2 + 1 + 2 + 2 = 9</p>
    <p>G</p>
    <p>n1/3</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.6/16</p>
  </div>
  <div class="page">
    <p>Main idea of our algorithm : k = 3 dv  n1/3 = add the star N (v) to the spanner. find a MIS I of G2.</p>
    <p>= |I|  n/n1/3 = n2/3 n  n2/3 &gt; n1+1/3 !</p>
    <p>v  I, construct the region R(v) of v there are at most n2/3 regions !</p>
    <p>connect each two neighbouring regions size = n + n2/3n2/3 = O(n1+1/3) stretch = 2 + 2 + 1 + 2 + 2 = 9</p>
    <p>sparsity condition using the number of neighbouring regions</p>
    <p>SIROCCO06/03-07-06 B.DERBEL Fast Deterministic Distributed Algorithms for Sparse Spanners  p.6/16</p>
  </div>
  <div class="page">
    <p>Main idea : general framework associate a region R(v) to each node v</p>
    <p>select some regions to enlarge in parallel independent dominating set</p>
    <p>enlarge the dense regions</p>
    <p>merge the regions together in order to span all nodes in non selected regions</p>
    <p>How to merge the regions ?</p>
    <p>if R(v) is sparse, then span the edges of R(v)</p>
    <p>How to decide if a region is sparse ?</p>
    <p>SIROCCO06/03-07-06 B.DERBEL Fast Deterministic Distributed Algorithms for Sparse Spanners  p.7/16</p>
  </div>
  <div class="page">
    <p>First strategy sparsity = the neighbourhood of a region in G</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.8/16</p>
  </div>
  <div class="page">
    <p>First strategy sparsity = the neighbourhood of a region in G</p>
    <p>r</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.8/16</p>
  </div>
  <div class="page">
    <p>First strategy sparsity = the neighbourhood of a region in G</p>
    <p>r</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.8/16</p>
  </div>
  <div class="page">
    <p>First strategy sparsity = the neighbourhood of a region in G</p>
    <p>r</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.8/16</p>
  </div>
  <div class="page">
    <p>First strategy sparsity = the neighbourhood of a region in G</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.8/16</p>
  </div>
  <div class="page">
    <p>First strategy sparsity = the neighbourhood of a region in G</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.8/16</p>
  </div>
  <div class="page">
    <p>First strategy sparsity = the neighbourhood of a region in G</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.8/16</p>
  </div>
  <div class="page">
    <p>First strategy sparsity = the neighbourhood of a region in G</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.8/16</p>
  </div>
  <div class="page">
    <p>First strategy sparsity = the neighbourhood of a region in G</p>
    <p>v  C, |R+(v)|  n1/k  |R(v)|</p>
    <p>and H := C \ L ; 2. (u, v)  L  V such that  edge e between R(u) and v, S := S  {e} 3. X := IDS(G2(r+1)[H], ) 4. z  V , if dG(z, X)  (2 + 1)r + 2, then set c(z) to be its closest node</p>
    <p>of X, breaking ties with identities. 5. v  X, R(v) := {z  V | c(z) = v} 6. v  X, S := S  BFS(v, R(v)) 7. C := X and r := (2 + 1)r + 2</p>
    <p>r := 3r + 2 |R(v)| &gt; n1/k|R(v)|</p>
    <p>k steps exponential stretch</p>
    <p>SIROCCO06/03-07-06 B.DERBEL Fast Deterministic Distributed Algorithms for Sparse Spanners  p.8/16</p>
  </div>
  <div class="page">
    <p>Second strategy sparsity = the number of neighbouring regions</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.9/16</p>
  </div>
  <div class="page">
    <p>Second strategy sparsity = the number of neighbouring regions</p>
    <p>r</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.9/16</p>
  </div>
  <div class="page">
    <p>Second strategy sparsity = the number of neighbouring regions</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.9/16</p>
  </div>
  <div class="page">
    <p>Second strategy sparsity = the number of neighbouring regions</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.9/16</p>
  </div>
  <div class="page">
    <p>Second strategy sparsity = the number of neighbouring regions</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.9/16</p>
  </div>
  <div class="page">
    <p>Second strategy sparsity = the number of neighbouring regions</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.9/16</p>
  </div>
  <div class="page">
    <p>Second strategy sparsity = the number of neighbouring regions</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.9/16</p>
  </div>
  <div class="page">
    <p>Second strategy sparsity = the number of neighbouring regions</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.9/16</p>
  </div>
  <div class="page">
    <p>Second strategy sparsity = the number of neighbouring regions</p>
    <p>v  C, |R+ C</p>
    <p>(v)|  n1/k  |R(v)| o</p>
    <p>and H := C \ L 2. (u, v)  L  C such that  edge e between R(u) and R(v), S := S  {e} 3. X := IDS((GC )</p>
    <p>r := 5r + 2 |R(v)| &gt; n1/k|Rmin|2</p>
    <p>log(k) steps polynomial stretch</p>
    <p>SIROCCO06/03-07-06 B.DERBEL Fast Deterministic Distributed Algorithms for Sparse Spanners  p.9/16</p>
  </div>
  <div class="page">
    <p>General algorithm</p>
    <p>i1</p>
    <p>i0</p>
    <p>i2</p>
    <p>bin(k)</p>
    <p>STRATEGY2 STRATEGY2</p>
    <p>Input : a graph G = (V, E) with n = |V |, and integers , k  1 Output : a spanner S</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.10/16</p>
  </div>
  <div class="page">
    <p>General algorithm</p>
    <p>i1</p>
    <p>i0</p>
    <p>i2</p>
    <p>bin(k)</p>
    <p>STRATEGY2 STRATEGY2</p>
    <p>the radius increases essentially in a similar way in both strategies the size of a region increases very quickly with STRATEGY2</p>
    <p>sparsity condition = n2 i1 +2i1i0+11</p>
    <p>SIROCCO06/03-07-06 B.DERBEL Fast Deterministic Distributed Algorithms for Sparse Spanners  p.10/16</p>
  </div>
  <div class="page">
    <p>Some Results</p>
    <p>if k = 2p = i0 = last iteration stretch = klog 5 = k2.321 size = O(n1+1/k)</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.11/16</p>
  </div>
  <div class="page">
    <p>Some Results</p>
    <p>if k = 2p = i0 = last iteration stretch = klog 5 = k2.321 size = O(n1+1/k)</p>
    <p>if k = 2p + 2q  1 = i0 = p  q + 1 stretch = 6  5p1 + 4  5q1  1 size = O(n1+1/k)</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.11/16</p>
  </div>
  <div class="page">
    <p>Some Results</p>
    <p>if k = 2p = i0 = last iteration stretch = klog 5 = k2.321 size = O(n1+1/k)</p>
    <p>if k = 2p + 2q  1 = i0 = p  q + 1 stretch = 6  5p1 + 4  5q1  1 size = O(n1+1/k)</p>
    <p>k 1 2 3 4 5</p>
    <p>s[k] 1 5 9 25 33</p>
    <p>SIROCCO06/03-07-06 B.DERBEL Fast Deterministic Distributed Algorithms for Sparse Spanners  p.11/16</p>
  </div>
  <div class="page">
    <p>Distributed implementation</p>
    <p>LOCAL model MIS in the logical graphs GO(r) and (GC )2[H]</p>
    <p>O(r   ) time consuming with  the time needed to construct a MIS in G</p>
    <p>forming the new regions = O(r) time consuming constructing the BFS trees = O(r) time consuming connecting the regions = O(r) time consuming</p>
    <p>Deterministic Implementation nO(1/</p>
    <p>log n) time consuming</p>
    <p>Randomised Implementation O(log n) time consuming (Las Vegas)</p>
    <p>SIROCCO06/03-07-06 B.DERBEL Fast Deterministic Distributed Algorithms for Sparse Spanners  p.12/16</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>our method</p>
    <p>sparse decomposition</p>
    <p>best possible</p>
    <p>T ime</p>
    <p>O(n)</p>
    <p>O(n+1/k)</p>
    <p>?</p>
    <p>k 2 3 4 5</p>
    <p>s[k] 5 9 25 33</p>
    <p>SIROCCO06/03-07-06 B.DERBEL Fast Deterministic Distributed Algorithms for Sparse Spanners  p.13/16</p>
  </div>
  <div class="page">
    <p>Graphs with high minimum degree</p>
    <p>Suppose we are given a -dominating set X of G we can construct a (4 + 1)-spanner with n + |X|2/2 edges in  time</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.14/16</p>
  </div>
  <div class="page">
    <p>Graphs with high minimum degree</p>
    <p>Suppose we are given a -dominating set X of G we can construct a (4 + 1)-spanner with n + |X|2/2 edges in  time</p>
    <p>If</p>
    <p>n we can construct a 9-spanner with 3n/2 edges</p>
    <p>in O(M IS) deterministic time in O(log n) expected time</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.14/16</p>
  </div>
  <div class="page">
    <p>Graphs with high minimum degree</p>
    <p>Suppose we are given a -dominating set X of G we can construct a (4 + 1)-spanner with n + |X|2/2 edges in  time</p>
    <p>If</p>
    <p>n we can construct a 9-spanner with 3n/2 edges</p>
    <p>in O(M IS) deterministic time in O(log n) expected time</p>
    <p>we can construct a 5-spanner with O(n log2 n) edges w.h.p in O(log n) time (Monte Carlo)</p>
    <p>G has a dominating set with size O(</p>
    <p>n log n) (greedy technique) we use the constant approximation algorithm of Khun et al [KMW](SODA 06)</p>
    <p>SIROCCO06/03-07-06 B.DERBEL Fast Deterministic Distributed Algorithms for Sparse Spanners  p.14/16</p>
  </div>
  <div class="page">
    <p>Concluding remarks</p>
    <p>The challenge is to efficiently construct an independent -dominating set.</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.15/16</p>
  </div>
  <div class="page">
    <p>Concluding remarks</p>
    <p>The challenge is to efficiently construct an independent -dominating set. Can we construct a 3-spanner using a MIS ?</p>
    <p>a more careful analysis shows that : if dG(u, v) is even = dH (u, v)  3  dG(u, v) if dG(u, v) is odd = dH (u, v)  3  dG(u, v) + 2</p>
    <p>SIROCCO06/03-07-06 B.DERBEL OFast Deterministic Distributed Algorithms for Sparse Spanners  p.15/16</p>
  </div>
  <div class="page">
    <p>Concluding remarks</p>
    <p>The challenge is to efficiently construct an independent -dominating set. Can we construct a 3-spanner using a MIS ?</p>
    <p>a more careful analysis shows that : if dG(u, v) is even = dH (u, v)  3  dG(u, v) if dG(u, v) is odd = dH (u, v)  3  dG(u, v) + 2</p>
    <p>Idea</p>
    <p>SIROCCO06/03-07-06 B.DERBEL Fast Deterministic Distributed Algorithms for Sparse Spanners  p.15/16</p>
  </div>
  <div class="page">
    <p>THE END</p>
    <p>SIROCCO06/03-07-06 B.DERBEL Fast Deterministic Distributed Algorithms for Sparse Spanners  p.16/16</p>
  </div>
</Presentation>
