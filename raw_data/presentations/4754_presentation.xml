<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Using Forgetful Routing to Control BGP Table Size</p>
    <p>Elliott Karpilovsky, Jennifer Rexford Computer Science Department, Princeton University</p>
  </div>
  <div class="page">
    <p>The Internet: A Router Level View</p>
  </div>
  <div class="page">
    <p>WorldCom suffers widespread Internet outage</p>
    <p>USA Today, 2005</p>
  </div>
  <div class="page">
    <p>Comcast Internet outages lead to nationwide frustration</p>
    <p>among customers</p>
    <p>Denver Post, 2005</p>
  </div>
  <div class="page">
    <p>Tier1 ISPs Dying</p>
    <p>Slashdot, 2005</p>
  </div>
  <div class="page">
    <p>U.S. unprepared for Net meltdown</p>
    <p>News.com, 2006</p>
  </div>
  <div class="page">
    <p>The Internet: A Router Level View</p>
  </div>
  <div class="page">
    <p>Source of Routing Failures  Memory</p>
    <p>Memory</p>
    <p>Memory</p>
  </div>
  <div class="page">
    <p>Overview  Internet Routing (and its Memory Issues)</p>
    <p>Current Solutions (and Their Problems)</p>
    <p>Forgetful Routing (the Theory and Application)</p>
    <p>Future Directions (and Conclusion)</p>
  </div>
  <div class="page">
    <p>Internet Routing</p>
  </div>
  <div class="page">
    <p>How BGP Works</p>
  </div>
  <div class="page">
    <p>How BGP Works</p>
  </div>
  <div class="page">
    <p>How BGP Works</p>
    <p>Prefix based</p>
  </div>
  <div class="page">
    <p>How BGP Works</p>
  </div>
  <div class="page">
    <p>How BGP Works</p>
  </div>
  <div class="page">
    <p>How BGP Works</p>
    <p>Path vector protocol</p>
  </div>
  <div class="page">
    <p>How BGP Works</p>
  </div>
  <div class="page">
    <p>How BGP Works</p>
  </div>
  <div class="page">
    <p>How BGP Works</p>
  </div>
  <div class="page">
    <p>How BGP Works</p>
    <p>Only best route is propagated</p>
  </div>
  <div class="page">
    <p>How BGP Works</p>
  </div>
  <div class="page">
    <p>How BGP Works</p>
  </div>
  <div class="page">
    <p>How BGP Works</p>
  </div>
  <div class="page">
    <p>How BGP Works</p>
  </div>
  <div class="page">
    <p>Router Memory Problems  Many, many prefixes</p>
    <p>Approximately 170,000 prefixes currently in use</p>
    <p>Path diversity  Many routes may be learned per prefix</p>
    <p>Path vector protocol  Stores entire path for each route</p>
    <p>Incremental protocol  Once a route is learned, it is not re-advertised</p>
  </div>
  <div class="page">
    <p>Router Memory  Routing Information Base (RIB)</p>
    <p>Maps prefixes to lists of possible routes  Stored in memory on the router  Can grow very large in size  Focus of our research is RIB reduction</p>
    <p>Forwarding Information Base (FIB)  Maps prefixes to their next-hop  Stored in line cards  Optimal memory reduction techniques exist</p>
  </div>
  <div class="page">
    <p>Current Solutions</p>
  </div>
  <div class="page">
    <p>Memory, a big deal?</p>
  </div>
  <div class="page">
    <p>Memory, a big deal  Cost</p>
  </div>
  <div class="page">
    <p>Memory, a big deal...  Cost</p>
    <p>Quantity</p>
  </div>
  <div class="page">
    <p>Memory, a big deal!  Cost</p>
    <p>Quantity</p>
    <p>Installation (image courtesy of NASA)</p>
  </div>
  <div class="page">
    <p>Operator Solutions  Filter unexpected prefixes</p>
    <p>But is everything known ahead of time?</p>
    <p>Prefix limits  But what about connectivity?</p>
    <p>Guidelines to filter small address blocks  But what about ISPs that don't follow guidelines?</p>
  </div>
  <div class="page">
    <p>BGP is the problem... so change BGP!</p>
    <p>New architectures proposed to replace BGP  Tunneling to core routers, aggressive aggregation,</p>
    <p>etc.</p>
    <p>Big problem: not incrementally deployable  No flag day for the Internet to switch over to a new</p>
    <p>protocol</p>
  </div>
  <div class="page">
    <p>What to do?</p>
  </div>
  <div class="page">
    <p>Forgetful Routing</p>
  </div>
  <div class="page">
    <p>Key Insight</p>
  </div>
  <div class="page">
    <p>Every secondary route is some other router's primary route</p>
  </div>
  <div class="page">
    <p>If every router always remembers its primary, all routing information can</p>
    <p>be reconstructed</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>RFC 2918  Route Refresh  Allows a BGP speaker to send a refresh</p>
    <p>message to neighbor</p>
    <p>Neighbors receiving this message re-advertise their outbound routes</p>
    <p>Supported on all modern CISCO and Juniper routers</p>
  </div>
  <div class="page">
    <p>A Cache Replacement Problem  Exchange possible bandwidth usage for</p>
    <p>memory savings</p>
    <p>When low on memory, what do we evict?  Will affect the number of refreshes needed later</p>
  </div>
  <div class="page">
    <p>Theoretical Limits  Using foresight, look into the future</p>
    <p>Identify alternate routes that are never needed</p>
    <p>Identify alternate routes that are needed furtherest in the future</p>
    <p>For simplicity, treat RIB entries as fixed length</p>
  </div>
  <div class="page">
    <p>Evaluation  Used RouteViews data from 2005/01/01 to</p>
    <p>Created an optimal, offline algorithm to establish a lower bound</p>
  </div>
  <div class="page">
    <p>Optimal Trade-off Curve</p>
  </div>
  <div class="page">
    <p>Optimal Trade-off Curve</p>
  </div>
  <div class="page">
    <p>Evaluation  Used RouteViews data from 2005/01/01 to</p>
    <p>Created several different online algorithms and compared their results  Constraints: O(1) time overhead, minimal space</p>
    <p>overhead</p>
  </div>
  <div class="page">
    <p>Algorithm: Least Recently Used  Routes are ordered by time since they were last</p>
    <p>used as a primary route</p>
    <p>Maintain a doubly-linked list in memory for O(1) time overhead</p>
  </div>
  <div class="page">
    <p>Algorithm: Least Recently Used</p>
  </div>
  <div class="page">
    <p>Algorithm: Least Recently Used  Good performance</p>
    <p>Potentially bad memory overhead  An additional 8 bytes per route  Will consume anywhere from 1.4 megabytes to 40</p>
    <p>megabytes of memory in practice</p>
  </div>
  <div class="page">
    <p>Algorithm: Least Recently Refreshed</p>
    <p>Prefixes are ordered by time since they last needed a refresh  The least preferred route from the most stable</p>
    <p>prefix is evicted</p>
    <p>Maintain a doubly-linked list in memory for O(1) time overhead</p>
    <p>Memory overhead is now 8 bytes per prefix  Will consume about 1.4 megabytes of memory in</p>
    <p>practice</p>
  </div>
  <div class="page">
    <p>Algorithm: Least Recently Refreshed</p>
  </div>
  <div class="page">
    <p>Comparison</p>
  </div>
  <div class="page">
    <p>Issue  Do we have Alternates?  Do real routers have alternate routes that can</p>
    <p>be evicted?  Depends on the router</p>
  </div>
  <div class="page">
    <p>CDF of Avg. Num. Of Routes Per Prefix, Gao Inference on RouteViews, 2005/2/10</p>
  </div>
  <div class="page">
    <p>CDF of Avg. Num. Of Routes Per Prefix, Gao Inference on RouteViews, 2005/2/10</p>
  </div>
  <div class="page">
    <p>Future Directions</p>
  </div>
  <div class="page">
    <p>Future Directions  Can we create better online algorithms?</p>
    <p>Can we acquire a better data source than RouteViews?</p>
    <p>How would such a system perform connected to a real network?</p>
    <p>Can we reduce the number of prefixes needed without causing bad behavior?</p>
  </div>
  <div class="page">
    <p>Thank you to  Nick Feamster  Changhoon Kim  Anja Feldmann  Randy Bush  Wen Xu  Anonymous reviewers</p>
  </div>
</Presentation>
