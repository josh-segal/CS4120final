<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>On the Feasibility of Large- Scale Infections of iOS Devices</p>
    <p>Tielei Wang, Yeongjin Jang, Yizheng Chen, Simon Chung, Billy Lau, and Wenke Lee</p>
    <p>Georgia Institute of Technology</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background and Motivation</p>
    <p>Security Risks in Connecting iOS Devices to Compromised PCs</p>
    <p>Measurement Results</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Jekyll on iOS [USENIX Security13]</p>
    <p>We created a seemingly benign app named Jekyll and published it on the Apple App Store</p>
    <p>Jekyll can be instructed to carry out malicious tasks by reordering and rearranging benign functionalities</p>
    <p>Conclusion: Apples vetting process cannot prevent malicious apps</p>
  </div>
  <div class="page">
    <p>Key Limitation of Jekyll Apps</p>
    <p>Jekyll apps did not get a lot of downloads  Malicious apps, like any other apps, have the challenge of attracting attention from users</p>
    <p>Such apps can only affect a limited number of iOS users who accidentally download and run them</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Is it feasible to proactively deliver malicious apps to iOS devices at scale?</p>
  </div>
  <div class="page">
    <p>Attack Vector</p>
    <p>We reviewed the iOS app distribution channels, and con[irmed that PCs become a new attack vector to iOS devices</p>
    <p>Install or remove apps</p>
    <p>Access data in mobile devices</p>
    <p>PC iPhonebackup,(restore,(syncing,(upgrade,(and(charging.</p>
  </div>
  <div class="page">
    <p>Contributions</p>
    <p>Demonstrated security risks in connecting iOS devices to compromised computers</p>
    <p>Measured the overlap between iOS devices and compromised Windows PCs</p>
    <p>Compromised* Computers</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background and Motivation</p>
    <p>Security Risks in Connecting iOS Devices to Compromised PCs</p>
    <p>Measurement Results</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Attack I: Delivery of Jekyll Apps</p>
    <p>Intuition: Attacker downloads a Jekyll app, and then injects the Jekyll app to plugged-in iOS devices</p>
    <p>Challenge: Digital Rights Management (DRM) technology in iOS prevents users from sharing apps among arbitrary iOS devices</p>
    <p>Compromised* Computers</p>
  </div>
  <div class="page">
    <p>FairPlay DRM</p>
    <p>Downloading apps from the App Store requires an Apple ID</p>
    <p>User attempting to run an app downloaded by a different Apple ID on his iOS device needs to [irst enter the correct Apple ID and password</p>
  </div>
  <div class="page">
    <p>Key Observation: iTunes Syncing</p>
    <p>syncing</p>
    <p>iTunes with Apple ID A iOS device with Apple ID B</p>
    <p>After syncing, apps purchased by Apple ID A can also run on the iOS device</p>
    <p>iTunes can authorize an iOS device with a different Apple ID to run its apps</p>
  </div>
  <div class="page">
    <p>The Detailed Process</p>
    <p>syncing</p>
    <p>iTunes with Apple ID A iOS device with Apple ID B</p>
  </div>
  <div class="page">
    <p>The Man-in-the-Middle syncing</p>
    <p>iOS device with Apple ID B</p>
    <p>iTunes with Botmaster's Apple ID A</p>
  </div>
  <div class="page">
    <p>Attack I Summary  Attackers can remotely instruct an already compromised computer to install apps on a connected iOS device, completely bypassing DRM checks</p>
    <p>Even if an app has been removed from the App Store, attackers can still distribute their own copies to iOS users</p>
    <p>Although Apple has absolute control of the App Store, attackers can leverage MitM to build a covert distribution channel of iOS apps</p>
  </div>
  <div class="page">
    <p>Attack II: Delivery of Attacker-Signed Apps</p>
    <p>Apple allows developers to test their apps on iOS devices through a process called device provisioning</p>
    <p>A compromised computer can be instructed to provision a plugged-in iOS device without user knowledge</p>
    <p>It allows the computer to further install any app signed by the attacker</p>
  </div>
  <div class="page">
    <p>Attack III: Stealing Credentials</p>
    <p>iOS Sandboxing  Each app has a unique home directory for its [ile  Apps are restricted from accessing [iles stored by other apps or from making changes to the device</p>
  </div>
  <div class="page">
    <p>Attack III: Stealing Credentials</p>
    <p>Many iOS apps store credentials in plaintext, because the developers presume that the iOS sandbox can prevent other apps from accessing [iles in their apps home directories</p>
  </div>
  <div class="page">
    <p>Attack III: Stealing Credentials</p>
    <p>However, from a USB connection, a host computer has access to the contents of all apps</p>
  </div>
  <div class="page">
    <p>Attack III: Stealing Credentials</p>
    <p>As a proof of concept, we implemented a tool that can retrieve the cookies of Facebook and Gmail apps from a USB- connected iOS device</p>
    <p>By reusing the cookies, we successfully logged in as the iOS user via the web services for both Facebook and Gmail</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background and Motivation</p>
    <p>Security Risks of Connecting iOS Devices to Compromised PCs</p>
    <p>Measurement Results</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>The Goal of the Measurement</p>
    <p>To quantitatively estimate how many users would connect iOS devices to compromised PCs</p>
    <p>Compromise PCs iOS Devices</p>
  </div>
  <div class="page">
    <p>Two Main Datasets</p>
    <p>DNS Query Dataset  Obtained from two large ISPs in the US, collected in 13 cities for [ive days in Oct 2013</p>
    <p>54 million client IDs, 62 million queries, and 12 billion records daily from 13 sensors in total</p>
    <p>Labeled C&amp;C Domains  Obtained command and control (C&amp;C) domain names for botnets that Damballa is tracking</p>
  </div>
  <div class="page">
    <p>Basic Information</p>
    <p>Home Network</p>
    <p>NAT</p>
    <p>Internet</p>
    <p>We know DNS queries from this IP address</p>
  </div>
  <div class="page">
    <p>Step1: Determine Bot Population</p>
    <p>Home Network</p>
    <p>Internet</p>
    <p>If a CID queried any C&amp;C domain in a day, we</p>
    <p>consider it as having a bot at home for that day</p>
  </div>
  <div class="page">
    <p>Step2: Exclude Mac OS X</p>
    <p>Home Network</p>
    <p>Internet</p>
    <p>After excluding Mac OS X, we have 466,540 bot CIDs</p>
    <p>Mac OS X is set to automatically check for security updates daily since version 10.6  swscan.apple.com swquery.apple.com swdist.apple.com swdownload.apple.com swcdn.apple.com</p>
  </div>
  <div class="page">
    <p>Step3: Determine coexistence of iOS</p>
    <p>Home Network</p>
    <p>Internet</p>
    <p>We used unique domains from two default apps and one service in iOS (the Weather app, Stocks app, and Location Services) to get a lower bound of CIDs</p>
    <p>containing iOS devices</p>
    <p>Of 466,540 CIDs without Mac OS X traf[ic, 142,907 queried these domains</p>
  </div>
  <div class="page">
    <p>Step4: Determine Windows iTunes Purchases</p>
    <p>Connecting iOS devices to a PC does not generate observable network traf[ic</p>
  </div>
  <div class="page">
    <p>Step4: Determine Windows iTunes Purchases</p>
    <p>More evidences  If iTunes is installed on a users PC and is also used to purchase some items from the App Store, the user will eventually connect her iOS devices to the PC</p>
  </div>
  <div class="page">
    <p>Step4: Determine Windows iTunes Purchases</p>
    <p>Solution: Leverage iOS heartbeat DNS queries  iOS devices must send an HTTP request to initp01st.push.apple.com to get push server con[igurations at least every 1,800s</p>
    <p>Heartbeat Query</p>
    <p>time</p>
    <p>App Store Purchase</p>
    <p>Issued from Windows PC</p>
    <p>Issued from iOS</p>
  </div>
  <div class="page">
    <p>Measurement Summary</p>
    <p>23% of all bot population have connections with iOS devices</p>
  </div>
  <div class="page">
    <p>Measurement Summary</p>
    <p>23% of all bot population have connections with iOS devices</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background and Motivation</p>
    <p>Security Risks of Connecting iOS Devices to Compromised PCs</p>
    <p>Measurement Results</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Demonstrated attacks:  Bypass Apple DRM and install Apple-signed malicious apps</p>
    <p>Stealthily provision the devices and install attacker-signed malicious apps</p>
    <p>Obtain app credentials (e.g., Gmail and Facebook cookies)</p>
    <p>Measurement Results: 23% of all bot population have connections with iOS devices</p>
  </div>
  <div class="page">
    <p>QUESTIONS?</p>
  </div>
</Presentation>
