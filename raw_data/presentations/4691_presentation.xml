<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>On Computing Top-t Most Influential</p>
    <p>Spatial Sites</p>
    <p>Tian Xia, Donghui Zhang, Evangelos Kanoulas, Yang Du</p>
    <p>Northeastern University Boston, USA</p>
  </div>
  <div class="page">
    <p>Outline  Problem Definition  Related Work  The New Metric: minExistDNN  Data Structures and Algorithm  Experimental Results  Conclusions</p>
  </div>
  <div class="page">
    <p>Problem Definition  Given:</p>
    <p>a set of sites S  a set of weighted objects O  a spatial region Q  an integer t.</p>
    <p>Top-t most influential sites query:  find t sites in Q with the largest influences.</p>
    <p>influence of a site s = total weight of objects that consider s as the nearest site.</p>
  </div>
  <div class="page">
    <p>Motivation  Which supermarket in Boston is the most</p>
    <p>influential among residential buildings?  Sites: supermarkets;  Objects: residential buildings;  Weight: # people in a building;  Query region: Boston;</p>
    <p>Which wireless station in Boston is the most influential among mobile users?</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>Suppose all objects have weight = 1, Q is the whole space, and t = 1.</p>
    <p>The most influential site is s1, with influence = 3.</p>
    <p>s1</p>
    <p>s2 s3</p>
    <p>s4</p>
    <p>o1 o2</p>
    <p>o3</p>
    <p>o4 o5</p>
    <p>o6</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>Now that Q is the shadowed rectangle and t = 2.</p>
    <p>Top-2 most influential sites: s4 and s2.</p>
    <p>s1</p>
    <p>s2 s3</p>
    <p>s4</p>
    <p>o1 o2</p>
    <p>o3</p>
    <p>o4 o5</p>
    <p>o6</p>
  </div>
  <div class="page">
    <p>Outline  Problem Definition  Related Work  The New Metric: minExistDNN  Data Structures and Algorithm  Experimental Results  Conclusions</p>
  </div>
  <div class="page">
    <p>Related Work  Bi-chromatic RNN query: considers two</p>
    <p>datasets, sites and objects.  The RNNs of a site s  S are the objects</p>
    <p>that consider s as the nearest site.</p>
    <p>s1</p>
    <p>s2 s3</p>
    <p>s4</p>
    <p>o1 o2</p>
    <p>o3</p>
    <p>o4 o5</p>
    <p>o6</p>
  </div>
  <div class="page">
    <p>Related Work  Solutions to the RNN query based on pre</p>
    <p>computation [KM00, YL01].</p>
    <p>s1</p>
    <p>s2 s3</p>
    <p>s4</p>
    <p>o1 o2</p>
    <p>o3</p>
    <p>o4 o5</p>
    <p>o6</p>
  </div>
  <div class="page">
    <p>Related Work  Solution to RNN query based on Voronoi</p>
    <p>diagram [SRAE01].  Compute the Voronoi cell of s: a region</p>
    <p>enclosing the locations closer to s than to any other sites.</p>
    <p>Querying the object R-tree using the Voronoi cell.</p>
  </div>
  <div class="page">
    <p>Related Work [SRAE01]</p>
    <p>s1</p>
    <p>s2 s3</p>
    <p>s4</p>
    <p>o1 o2</p>
    <p>o3</p>
    <p>o4 o5</p>
    <p>o6</p>
  </div>
  <div class="page">
    <p>Our Problem vs. RNN Query  RNN query:</p>
    <p>A single site as an input.  Interested in the actual set of the RNNs.</p>
    <p>Top-t most influential sites query:  A spatial region as an input.  Interested in the aggregate weight of RNNs.</p>
  </div>
  <div class="page">
    <p>Straightforward Solution 1  For each site, pre-compute its influence.  At query time, find the sites in Q and</p>
    <p>return the t sites with max influences.</p>
    <p>Drawback 1: Costly maintenance upon updates.</p>
    <p>Drawback 2: binding a set of sites closely with a set of objects.</p>
  </div>
  <div class="page">
    <p>Straightforward Solution 2  An extension of the Voronoi diagram</p>
    <p>based solution to the RNN query. 1. Find all sites in Q.</p>
  </div>
  <div class="page">
    <p>Straightforward Solution 2  Drawback 1: All sites in Q need to be</p>
    <p>retrieved from the leaf nodes.</p>
    <p>Drawback 2: The object R-tree and the site R-tree are browsed multiple times.  For each site in Q, browse the site R-tree to</p>
    <p>compute the Voronoi Cell.  For each such Voronoi Cell, browse the object</p>
    <p>R-tree to compute the influence.</p>
  </div>
  <div class="page">
    <p>Features of Our Solution  Systematically browse both trees once.  Pruning techniques are provided based on</p>
    <p>a new metric, minExistDNN.  No need to compute the influences for all</p>
    <p>sites in Q, or even to locate all sites in Q.</p>
  </div>
  <div class="page">
    <p>Outline  Problem Definition  Related Work  The New Metric: minExistDNN  Data Structures and Algorithm  Experimental Results  Conclusions</p>
  </div>
  <div class="page">
    <p>Motivation  Intuitively, if some object in Oi may consider</p>
    <p>some site in Sj as an NN, Oi affects Sj.  To estimate the influences of all sites in a site</p>
    <p>MBR Sj, we need to know whether an object MBR Oi will affect Sj.</p>
    <p>O2O1 S1 S2</p>
    <p>O1 only affects S1, while O2 affects both S1 and S2.</p>
  </div>
  <div class="page">
    <p>maxDist  A Loose Estimation  If maxDist(O1, S1) &lt; minDist(O1, S2), O1</p>
    <p>does not affect S2.  Why not good enough?</p>
    <p>minDist(O1,S2)=8</p>
    <p>maxDist(O1,S1)=10</p>
    <p>O1</p>
    <p>S1</p>
    <p>S2</p>
  </div>
  <div class="page">
    <p>minMaxDist  A Tight Estimation?</p>
    <p>An object o does not affect S2, if there exists S1 such that</p>
    <p>minMaxDist(o1, S1) &lt; minDist(o1, S2)</p>
    <p>o1 S1</p>
    <p>S2</p>
    <p>minMaxDist(o1, S1) = 5</p>
    <p>minDist(o1,S2) = 6</p>
  </div>
  <div class="page">
    <p>minMaxDist  A Tight Estimation?</p>
    <p>Not true for an object MBR O1.</p>
    <p>O1 S1</p>
    <p>S2</p>
    <p>minMaxDist(O1, S1) = 5</p>
    <p>minDist(O1,S2) = 6</p>
    <p>o1</p>
    <p>s1</p>
    <p>s2</p>
  </div>
  <div class="page">
    <p>A Tight Estimation?  A metric m(O1, S1) should:</p>
  </div>
  <div class="page">
    <p>New Metric  minExistDNNS1(O1)  Definition: minExistDNNS1(O1) =</p>
    <p>max {minMaxDist(l, S1) |  location l O1}</p>
    <p>O1 does not affect S2, if there exists S1, s.t. minExistDNNS1(O1) &lt; minDist(O1, S2).</p>
  </div>
  <div class="page">
    <p>Examples of minExistDNNS1(O1)</p>
    <p>How to calculate it?</p>
    <p>O1</p>
    <p>S1</p>
    <p>O1</p>
    <p>S1</p>
  </div>
  <div class="page">
    <p>Calculating minExistDNNS1(O1)</p>
    <p>P1:b P2:c P3:a P4:d</p>
    <p>P5:cP6:bP7:dP8:a</p>
    <p>b</p>
    <p>a c</p>
    <p>d</p>
    <p>S1</p>
    <p>Step 1: Space partitioning</p>
    <p>Every location l in the same partition is associated with the second closest corner of S1  the distance is minMaxDist(l, S1)!</p>
  </div>
  <div class="page">
    <p>Space Partitioning  O1 is divided into multiple sub-regions, one</p>
    <p>in each partition. P1:b</p>
    <p>b</p>
    <p>a c</p>
    <p>d</p>
    <p>P2:c</p>
    <p>S1</p>
    <p>O1</p>
  </div>
  <div class="page">
    <p>Calculating minExistDNNS1(O1)  Step 2: Choose up-to 8 locations on O1 border</p>
    <p>and compute the minMaxDists to S1.  minExistDNN is the largest one!</p>
    <p>P1:b</p>
    <p>b</p>
    <p>a c</p>
    <p>d</p>
    <p>P2:c</p>
    <p>S1</p>
    <p>O1 minExistDNNS1(O1)</p>
  </div>
  <div class="page">
    <p>Outline  Problem Definition  Related Work  The New Metric: minExistDNN  Data Structures and Algorithm  Experimental Results  Conclusions</p>
  </div>
  <div class="page">
    <p>Data Structure  Two R-trees: S of sites, O of objects.  Three queues:</p>
    <p>queueSIN: entries of S inside Q.  queueSOUT: entries of S outside Q.  queueO: entries of O.</p>
  </div>
  <div class="page">
    <p>Q</p>
    <p>Data Structure</p>
    <p>queueSIN:  queueO:  queueSOUT:</p>
    <p>O1</p>
    <p>O2</p>
    <p>O4</p>
    <p>O3</p>
    <p>S1</p>
    <p>S3</p>
    <p>S4</p>
    <p>S2</p>
    <p>O1</p>
    <p>S1</p>
    <p>S3</p>
    <p>S2</p>
  </div>
  <div class="page">
    <p>maxInfluence and minInfluence  For each entry Sj in queueSIN,</p>
    <p>maxInfluence: total weight of entries in queueO that affect Sj.</p>
    <p>minInfluence: total weight of entries in queueO that ONLY affect Sj, divided by the number of objects in Sj.</p>
    <p>queueSIN is sorted in decreasing order of maxInfluence.</p>
  </div>
  <div class="page">
    <p>Algorithm Overview  Expand an entry from one of the three</p>
    <p>queues.  Remove the entry from the queue.  Retrieve the referenced node, and insert the</p>
    <p>(unpruned) entries into the same queue.  Update maxInfluence and minInfluence if</p>
    <p>necessary.</p>
    <p>If top-t entries in queueSIN are sites, with minInfluences  maxInfluences of all remaining entries, return.</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>S6 is not affected by O1, prune S6.  O5 does not affect S5 and S7, prune O5.</p>
    <p>Q O1</p>
    <p>S1</p>
    <p>S3</p>
    <p>O5</p>
    <p>O6</p>
    <p>S5</p>
    <p>S7</p>
    <p>S6</p>
    <p>queueSIN: S1  queueO: O1  queueSOUT: S3</p>
    <p>queueSIN: S5, S7  queueO: O6  queueSOUT: S9</p>
    <p>S8</p>
    <p>S9</p>
  </div>
  <div class="page">
    <p>A Pruning Case</p>
    <p>S2 is pruned because of minExistDNNS3(O1) &lt; minDist(S2, O1)</p>
    <p>S1 S2</p>
    <p>minDist(S2, O1)=5</p>
    <p>O1</p>
    <p>S3</p>
    <p>S4</p>
    <p>Expand S1</p>
    <p>minExistDNNS3(O1)=4</p>
    <p>minExistDNNS1(O1)=7</p>
  </div>
  <div class="page">
    <p>Choosing an Entry to Expand  Expand top entries in queueSIN.</p>
    <p>Expand the most important Oi.  Importance: |Oi| * #affected entries * area(Oi)</p>
    <p>Expand Sj that contains the most important Oi.</p>
  </div>
  <div class="page">
    <p>Choosing an Entry to Expand  Estimate the probability of pruning Oi using some</p>
    <p>Sj in queueSOUT.</p>
    <p>Q</p>
    <p>S2</p>
    <p>O1</p>
    <p>S1</p>
    <p>minExistDNNS2(O1)=6</p>
    <p>minDist(S1, O1)=5minDist(S1, O1)=5</p>
    <p>Q</p>
    <p>S1</p>
    <p>S2</p>
    <p>O1</p>
    <p>minExistDNNS2(O1)=6</p>
    <p>After expanding S2, O1 is likely not to affect S1.</p>
  </div>
  <div class="page">
    <p>Outline  Problem Definition  Related Work  The New Metric: minExistDNN  Data Structures and Algorithm  Experimental Results  Conclusions</p>
  </div>
  <div class="page">
    <p>Experimental Setup  Data sets:</p>
    <p>24,493 populated places in North America  9,203 cultural landmarks in North America</p>
    <p>R-tree page size: 1 KB  LRU buffer: 128 disk pages.  t = 4.</p>
    <p>Comparing to the solution using Voronoi diagram.</p>
  </div>
  <div class="page">
    <p>Selected Experimental Results</p>
    <p>#sites : #objects = 1 : 2.5</p>
  </div>
  <div class="page">
    <p>Selected Experimental Results</p>
    <p>#sites : #objects = 2.5 : 1</p>
  </div>
  <div class="page">
    <p>Outline  Problem Definition  Related Work  The New Metric: minExistDNN  Data Structures and Algorithm  Experimental Results  Conclusions</p>
  </div>
  <div class="page">
    <p>Conclusions  We addressed a new problem: Top-t most</p>
    <p>influential sites query.  We proposed a new metric: minExistDNN.</p>
    <p>It can be used to prune search space in NN/RNN related problems.</p>
    <p>We carefully designed an algorithm which systematically browses both R-trees once.</p>
    <p>Experiments showed more than an order of magnitude improvement.</p>
  </div>
  <div class="page">
    <p>Thank you!Thank you!</p>
    <p>Q &amp; A</p>
  </div>
</Presentation>
