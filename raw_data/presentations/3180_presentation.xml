<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Nonlinear Relational Markov Networks with an Application to the Game of Go</p>
    <p>Tapani Raiko</p>
    <p>Helsinki University of Technology</p>
    <p>ICANN 2005</p>
  </div>
  <div class="page">
    <p>Relational Markov Networks</p>
    <p>Relational database contains labels and attributes in several tables</p>
    <p>knows knows</p>
    <p>Alex consumer</p>
    <p>consumer</p>
    <p>consumer</p>
    <p>Carl</p>
    <p>Bob</p>
    <p>knows</p>
    <p>friend</p>
    <p>neighbour</p>
    <p>colleague</p>
    <p>who whom</p>
    <p>Alex Bob</p>
    <p>CarlBob</p>
    <p>Carl Alex</p>
    <p>who smoker ...</p>
    <p>Alex</p>
    <p>Bob</p>
    <p>Carl</p>
    <p>no</p>
    <p>no</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>how</p>
    <p>yes</p>
    <p>knows consumer</p>
    <p>Template (con(X), knows(X, Y ), con(Y )) has three occurences</p>
    <p>Let us make a transformation to get rid of labels</p>
    <p>a table for each template</p>
  </div>
  <div class="page">
    <p>knows knows</p>
    <p>Alex consumer</p>
    <p>consumer</p>
    <p>consumer</p>
    <p>Carl</p>
    <p>Bob</p>
    <p>knows</p>
    <p>friend</p>
    <p>neighbour</p>
    <p>colleague</p>
    <p>who whom</p>
    <p>Alex Bob</p>
    <p>CarlBob</p>
    <p>Carl Alex</p>
    <p>who smoker ...</p>
    <p>Alex</p>
    <p>Bob</p>
    <p>Carl</p>
    <p>no</p>
    <p>no</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>how</p>
    <p>yes</p>
    <p>how smoker ......smoker</p>
    <p>no</p>
    <p>no</p>
    <p>...</p>
    <p>... no</p>
    <p>yes</p>
    <p>yes ...</p>
    <p>...friend</p>
    <p>neighbour</p>
    <p>colleague no</p>
    <p>...</p>
    <p>...</p>
    <p>X = alex, Y = bob</p>
    <p>X = bob, Y = carl</p>
    <p>X = carl, Y = alex</p>
    <p>(consumer(X), knows(X,Y), consumer(Y)) consumer consumerknows</p>
    <p>knows consumer</p>
    <p>Find a potential for attributes in the transformed tables</p>
    <p>Each row corresponds to a clique in a Markov network</p>
  </div>
  <div class="page">
    <p>Continuous Values</p>
    <p>Some of the attributes are continuous valued</p>
    <p>Find a multivariate pdf:</p>
    <p>Gaussian (only linear dependencies)</p>
    <p>Nonlinear factor analysis (Multilayer perceptron network</p>
    <p>from latent variables to observations)</p>
    <p>Mixture model, Self-organising map, etc.</p>
    <p>Bayes Blocks software library used</p>
    <p>Variational Bayesian treatment</p>
    <p>a parametric distribution is fitted to the true posterior</p>
  </div>
  <div class="page">
    <p>Learning and Inference</p>
    <p>Learning and inference is done as in the flat case (non-relational)</p>
    <p>except that some variables are bound to each other</p>
    <p>Variational Bayesian learning provides a cost function that is</p>
    <p>minimised  convergence guaranteed regardles of loops</p>
    <p>Further work</p>
    <p>cooperative learning</p>
    <p>finding the best set of templates</p>
  </div>
  <div class="page">
    <p>Go</p>
    <p>Invented in China 3000+ years ago</p>
    <p>National game of Japan</p>
    <p>Increasingly popular around the world</p>
    <p>Empty board, stones added alternately</p>
    <p>(never moved)</p>
    <p>Goal: exert more influence on territory than opponent</p>
    <p>Means: capturing by surrounding groups of stones</p>
    <p>4-connected stones of the same colour form groups</p>
    <p>A group needs to be 4-connected to an empty point to survive</p>
  </div>
  <div class="page">
    <p>Computer Go</p>
    <p>Computers are easily beaten by human amateurs</p>
    <p>Second-most researched game after Chess</p>
    <p>Static board evaluation is difficult (visual nature)</p>
    <p>Large branching factor</p>
    <p>State of the art: Pattern databases, local searches, etc.</p>
  </div>
  <div class="page">
    <p>Go81 (my program)</p>
    <p>Go-playing program for Palm handheld computers</p>
    <p>Done in spare time 20022004</p>
    <p>Tiny and fast, available with source codes</p>
    <p>AI based on swarm intelligence:</p>
    <p>The game is played several times to the end from</p>
    <p>the current position</p>
    <p>The simple agents use only local information to</p>
    <p>score moves</p>
    <p>Current position</p>
    <p>eye empty triangleconnectwalking</p>
  </div>
  <div class="page">
    <p>Experiments</p>
    <p>Goal: determine the status of the stones without lookahead</p>
    <p>Input: 13 features for each block, pairwise relations with 1 feature</p>
    <p>Output: How many times the block survives in the 1000 possible</p>
    <p>futures (self-play)</p>
    <p>Templates: (block(X), ally(X, Y ), block(Y )) and</p>
    <p>(block(X), enemy(X, Y ), block(Y ))</p>
    <p>Collective regression for all the blocks</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>Results</p>
    <p>RMS errors for inferring the survival probabilities of the blocks</p>
    <p>Linear Nonlinear</p>
    <p>Separate regression 0.2172 0.2052</p>
    <p>Collective regression 0.2171 0.2037</p>
    <p>Nonlinear models better than linear ones</p>
    <p>Collective regression better than separate regression</p>
    <p>Results still unsatisfactory  static board evaluation is difficult!</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Nonlinear Relational Markov Networks extend graphical modelling to</p>
    <p>both nonlinear and relational directions for the first time</p>
    <p>As a testbed, the game of Go is a difficult enough</p>
    <p>but still clearly bounded and results measurable</p>
  </div>
</Presentation>
