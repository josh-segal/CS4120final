<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Scaling Distributed Machine Learning with the</p>
    <p>Mu Li muli@cs.cmu.edu</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>query: osdi search engine</p>
    <p>user</p>
  </div>
  <div class="page">
    <p>query: osdi search engine</p>
    <p>advertisercharge</p>
    <p>user</p>
  </div>
  <div class="page">
    <p>Machine learning is concerned with systems that can learn from data</p>
  </div>
  <div class="page">
    <p>Machine learning is concerned with systems that can learn from data</p>
    <p>Year</p>
    <p>Training data</p>
    <p>size (TB)</p>
    <p>Ad click prediction</p>
  </div>
  <div class="page">
    <p>Machine learning is concerned with systems that can learn from data</p>
    <p>Year</p>
    <p>Training data</p>
    <p>size (TB)</p>
    <p>Annual revenue</p>
    <p>(Billion $)</p>
    <p>Ad click prediction</p>
  </div>
  <div class="page">
    <p>Machine learning is concerned with systems that can learn from data</p>
    <p>Year</p>
    <p>Training data</p>
    <p>size (TB)</p>
    <p>Annual revenue</p>
    <p>(Billion $)</p>
    <p>We will report results using 1,000 machines!</p>
    <p>Ad click prediction</p>
  </div>
  <div class="page">
    <p>Overview of machine learning raw data training data machine learning system model</p>
    <p>(key,value) pairs</p>
  </div>
  <div class="page">
    <p>example by feature matrix</p>
    <p>osdi www.usenix.org user_mu_li</p>
    <p>Overview of machine learning raw data training data machine learning system model</p>
    <p>(key,value) pairs</p>
  </div>
  <div class="page">
    <p>example by feature matrix</p>
    <p>osdi www.usenix.org user_mu_li</p>
    <p>Overview of machine learning raw data training data machine learning system model</p>
    <p>(key,value) pairs</p>
    <p>Scale of Industry problems</p>
  </div>
  <div class="page">
    <p>example by feature matrix</p>
    <p>osdi www.usenix.org user_mu_li</p>
    <p>Overview of machine learning raw data training data machine learning system model</p>
    <p>(key,value) pairs</p>
    <p>scale to industry problems  efficient communication  fault tolerance  easy to use</p>
    <p>Scale of Industry problems</p>
  </div>
  <div class="page">
    <p>Industry size machine learning problems</p>
  </div>
  <div class="page">
    <p>Data and model partition</p>
    <p>Training data</p>
  </div>
  <div class="page">
    <p>Data and model partition</p>
    <p>Training data Worker machines</p>
  </div>
  <div class="page">
    <p>Data and model partition</p>
    <p>Training data Worker machines</p>
    <p>Model</p>
  </div>
  <div class="page">
    <p>Data and model partition</p>
    <p>Training data Worker machines</p>
    <p>Server machines</p>
    <p>Model</p>
  </div>
  <div class="page">
    <p>Data and model partition</p>
    <p>Training data</p>
    <p>push</p>
    <p>Worker machines</p>
    <p>Server machines</p>
    <p>Model</p>
  </div>
  <div class="page">
    <p>Data and model partition</p>
    <p>Training data</p>
    <p>push</p>
    <p>Worker machines</p>
    <p>Server machines</p>
    <p>pull</p>
    <p>Model</p>
  </div>
  <div class="page">
    <p>Example: distributed gradient descent</p>
    <p>Worker machines</p>
    <p>Server machines</p>
  </div>
  <div class="page">
    <p>Example: distributed gradient descent</p>
    <p>Workers pull the working set of model</p>
    <p>Worker machines</p>
    <p>Server machines</p>
  </div>
  <div class="page">
    <p>Example: distributed gradient descent</p>
    <p>Workers pull the working set of model Iterate until stop</p>
    <p>workers compute gradients</p>
    <p>Worker machines</p>
    <p>Server machines</p>
  </div>
  <div class="page">
    <p>Example: distributed gradient descent</p>
    <p>Workers pull the working set of model Iterate until stop</p>
    <p>workers compute gradients workers push gradients</p>
    <p>Worker machines</p>
    <p>Server machines</p>
  </div>
  <div class="page">
    <p>Example: distributed gradient descent</p>
    <p>Workers pull the working set of model Iterate until stop</p>
    <p>workers compute gradients workers push gradients update model</p>
    <p>Worker machines</p>
    <p>Server machines</p>
  </div>
  <div class="page">
    <p>Example: distributed gradient descent</p>
    <p>Workers pull the working set of model Iterate until stop</p>
    <p>workers compute gradients workers push gradients update model workers pull updated model</p>
    <p>Worker machines</p>
    <p>Server machines</p>
  </div>
  <div class="page">
    <p>Industry size machine learning problems</p>
    <p>Efficient communication</p>
  </div>
  <div class="page">
    <p>Challenges for data synchronization</p>
  </div>
  <div class="page">
    <p>Challenges for data synchronization</p>
    <p>Massive communication traffic frequent access to the shared model</p>
  </div>
  <div class="page">
    <p>Challenges for data synchronization</p>
    <p>Massive communication traffic frequent access to the shared model</p>
    <p>Expensive global barriers between iterations</p>
  </div>
  <div class="page">
    <p>Task</p>
  </div>
  <div class="page">
    <p>Task</p>
    <p>a push / pull / user defined function (an iteration)</p>
  </div>
  <div class="page">
    <p>Task</p>
    <p>a push / pull / user defined function (an iteration)  execute-after-finished dependency</p>
  </div>
  <div class="page">
    <p>Task</p>
    <p>a push / pull / user defined function (an iteration)  execute-after-finished dependency</p>
    <p>CPU intensive Network intensive</p>
    <p>gradient push &amp; pulliter 0</p>
    <p>iter 1 gradient push &amp; pull</p>
    <p>Synchronous</p>
  </div>
  <div class="page">
    <p>Task</p>
    <p>a push / pull / user defined function (an iteration)  execute-after-finished dependency</p>
    <p>executed asynchronously</p>
    <p>CPU intensive Network intensive</p>
    <p>gradient push &amp; pulliter 0</p>
    <p>iter 1 gradient push &amp; pull</p>
    <p>Synchronous</p>
  </div>
  <div class="page">
    <p>Task</p>
    <p>a push / pull / user defined function (an iteration)  execute-after-finished dependency</p>
    <p>executed asynchronously</p>
    <p>CPU intensive Network intensive</p>
    <p>gradient push &amp; pulliter 0</p>
    <p>iter 1 gradient push &amp; pull</p>
    <p>iter 1 gradient push &amp; pull</p>
    <p>Synchronous</p>
    <p>gradient push &amp; pulliter 0 Asynchronous</p>
  </div>
  <div class="page">
    <p>Flexible consistency</p>
    <p>Trade-off between algorithm efficiency and system performance</p>
  </div>
  <div class="page">
    <p>Flexible consistency</p>
    <p>Trade-off between algorithm efficiency and system performance</p>
  </div>
  <div class="page">
    <p>Flexible consistency</p>
    <p>Trade-off between algorithm efficiency and system performance</p>
    <p>Eventual 1 2 3 4</p>
  </div>
  <div class="page">
    <p>Flexible consistency</p>
    <p>Trade-off between algorithm efficiency and system performance</p>
    <p>Eventual 1 2 3 4</p>
  </div>
  <div class="page">
    <p>Results for bounded delay</p>
  </div>
  <div class="page">
    <p>Results for bounded delay</p>
    <p>Ad click prediction</p>
    <p>Bounded delay</p>
    <p>computing waiting</p>
    <p>time (hour)</p>
  </div>
  <div class="page">
    <p>Results for bounded delay</p>
    <p>Ad click prediction</p>
    <p>Bounded delay</p>
    <p>computing waiting</p>
    <p>time (hour)</p>
    <p>sequential</p>
  </div>
  <div class="page">
    <p>Results for bounded delay</p>
    <p>Ad click prediction</p>
    <p>Bounded delay</p>
    <p>computing waiting</p>
    <p>time (hour)</p>
    <p>sequential</p>
  </div>
  <div class="page">
    <p>Results for bounded delay</p>
    <p>Ad click prediction</p>
    <p>Bounded delay</p>
    <p>computing waiting</p>
    <p>time (hour)</p>
    <p>sequential</p>
    <p>best trade-off</p>
  </div>
  <div class="page">
    <p>User-defined filters</p>
  </div>
  <div class="page">
    <p>User-defined filters</p>
    <p>Selectively communicate (key, value) pairs</p>
  </div>
  <div class="page">
    <p>User-defined filters</p>
    <p>Selectively communicate (key, value) pairs  E.g. , the KKT filter send pairs if they are likely to affect the model &gt;95% keys are filtered in the ad click prediction task</p>
  </div>
  <div class="page">
    <p>Industry size machine learning problems</p>
    <p>Efficient communication</p>
    <p>Fault tolerance</p>
  </div>
  <div class="page">
    <p>Machine learning job logs in a three-month period:</p>
  </div>
  <div class="page">
    <p>Machine learning job logs in a three-month period:</p>
    <p>#machine x time (hour)</p>
    <p>failure rate %</p>
  </div>
  <div class="page">
    <p>Machine learning job logs in a three-month period:</p>
    <p>#machine x time (hour)</p>
    <p>failure rate %</p>
  </div>
  <div class="page">
    <p>Machine learning job logs in a three-month period:</p>
    <p>#machine x time (hour)</p>
    <p>failure rate %</p>
  </div>
  <div class="page">
    <p>Machine learning job logs in a three-month period:</p>
    <p>#machine x time (hour)</p>
    <p>failure rate %</p>
  </div>
  <div class="page">
    <p>Fault tolerance</p>
  </div>
  <div class="page">
    <p>Fault tolerance</p>
    <p>Model is partitioned by consistent hashing</p>
  </div>
  <div class="page">
    <p>Fault tolerance</p>
    <p>Model is partitioned by consistent hashing  Default replication: Chain replication (consistent, safe)</p>
  </div>
  <div class="page">
    <p>Fault tolerance</p>
    <p>worker 0 server 0 server 1 push x push f(x)</p>
    <p>ackack</p>
    <p>Model is partitioned by consistent hashing  Default replication: Chain replication (consistent, safe)</p>
  </div>
  <div class="page">
    <p>Fault tolerance</p>
    <p>worker 0 server 0 server 1 push x push f(x)</p>
    <p>ackack</p>
    <p>pus h x</p>
    <p>push y</p>
    <p>worker 0</p>
    <p>server 0 server 1</p>
    <p>worker 1</p>
    <p>Model is partitioned by consistent hashing  Default replication: Chain replication (consistent, safe)</p>
    <p>Option: Aggregation reduces backup traffic (algo specific)</p>
  </div>
  <div class="page">
    <p>Fault tolerance</p>
    <p>worker 0 server 0 server 1 push x push f(x)</p>
    <p>ackack</p>
    <p>push f(x+y)</p>
    <p>ack</p>
    <p>pus h x</p>
    <p>push y ack</p>
    <p>ackworker 0</p>
    <p>server 0 server 1</p>
    <p>worker 1</p>
    <p>Model is partitioned by consistent hashing  Default replication: Chain replication (consistent, safe)</p>
    <p>Option: Aggregation reduces backup traffic (algo specific)</p>
  </div>
  <div class="page">
    <p>Fault tolerance</p>
    <p>worker 0 server 0 server 1 push x push f(x)</p>
    <p>ackack</p>
    <p>push f(x+y)</p>
    <p>ack</p>
    <p>pus h x</p>
    <p>push y ack</p>
    <p>ackworker 0</p>
    <p>server 0 server 1</p>
    <p>worker 1</p>
    <p>Model is partitioned by consistent hashing  Default replication: Chain replication (consistent, safe)</p>
    <p>Option: Aggregation reduces backup traffic (algo specific) implemented by efficient</p>
    <p>vector clock</p>
  </div>
  <div class="page">
    <p>Industry size machine learning problems</p>
    <p>Efficient communication</p>
    <p>Fault tolerance Easy to use</p>
  </div>
  <div class="page">
    <p>(Key, value) vectors for the shared parameters</p>
    <p>math sparse vector (key, value) store</p>
    <p>i1 i2 i3</p>
    <p>(i1, ) (i2, ) (i3, )</p>
  </div>
  <div class="page">
    <p>(Key, value) vectors for the shared parameters</p>
    <p>Good for programmers: Matches mental model  Good for system: Expose optimizations based upon</p>
    <p>structure of data</p>
    <p>math sparse vector (key, value) store</p>
    <p>i1 i2 i3</p>
    <p>(i1, ) (i2, ) (i3, )</p>
  </div>
  <div class="page">
    <p>(Key, value) vectors for the shared parameters</p>
    <p>Good for programmers: Matches mental model  Good for system: Expose optimizations based upon</p>
    <p>structure of data</p>
    <p>math sparse vector (key, value) store</p>
    <p>i1 i2 i3</p>
    <p>(i1, ) (i2, ) (i3, )</p>
    <p>Example: computing gradient gradient = dataT  (  label  1 / ( 1 + exp (label  data  model))</p>
  </div>
  <div class="page">
    <p>Industry size machine learning problems</p>
    <p>Efficient communication</p>
    <p>Fault tolerance Easy to use Evaluation</p>
  </div>
  <div class="page">
    <p>Sparse Logistic Regression</p>
    <p>Predict ads will be clicked or not</p>
  </div>
  <div class="page">
    <p>Sparse Logistic Regression</p>
    <p>Method Consistency LOC</p>
    <p>System-A L-BFGS Sequential 10K</p>
    <p>System-B Block PG Sequential 30K</p>
    <p>Parameter Server Block PG Bounded Delay + KKT 300</p>
    <p>Predict ads will be clicked or not  Baseline: two systems in production</p>
  </div>
  <div class="page">
    <p>Sparse Logistic Regression</p>
    <p>Method Consistency LOC</p>
    <p>System-A L-BFGS Sequential 10K</p>
    <p>System-B Block PG Sequential 30K</p>
    <p>Parameter Server Block PG Bounded Delay + KKT 300</p>
    <p>Predict ads will be clicked or not  Baseline: two systems in production</p>
    <p>636T real ads data 170 billions of examples, 65 billions of features</p>
    <p>1,000 machines with 16,000 cores</p>
  </div>
  <div class="page">
    <p>Progress</p>
    <p>time (hour)</p>
    <p>large</p>
    <p>small</p>
    <p>error</p>
  </div>
  <div class="page">
    <p>Progress</p>
    <p>System A</p>
    <p>time (hour)</p>
    <p>large</p>
    <p>small</p>
    <p>error</p>
  </div>
  <div class="page">
    <p>Progress</p>
    <p>System A System B</p>
    <p>time (hour)</p>
    <p>large</p>
    <p>small</p>
    <p>error</p>
  </div>
  <div class="page">
    <p>Progress</p>
    <p>System A System B Parameter Server</p>
    <p>time (hour)</p>
    <p>large</p>
    <p>small</p>
    <p>error</p>
  </div>
  <div class="page">
    <p>Time decomposition</p>
    <p>time (hour)</p>
  </div>
  <div class="page">
    <p>Time decomposition</p>
    <p>System-A System-B Parameter Server</p>
    <p>computing waiting</p>
    <p>time (hour)</p>
  </div>
  <div class="page">
    <p>Time decomposition</p>
    <p>System-A System-B Parameter Server</p>
    <p>computing waiting</p>
    <p>time (hour)</p>
  </div>
  <div class="page">
    <p>Time decomposition</p>
    <p>System-A System-B Parameter Server</p>
    <p>computing waiting</p>
    <p>time (hour)</p>
  </div>
  <div class="page">
    <p>Time decomposition</p>
    <p>System-A System-B Parameter Server</p>
    <p>computing waiting</p>
    <p>time (hour)</p>
  </div>
  <div class="page">
    <p>Topic Modeling (LDA)</p>
    <p>Gradient descent with eventual consistency  5B users click logs, Group users into 1,000</p>
    <p>groups based on URLs they clicked</p>
  </div>
  <div class="page">
    <p>Topic Modeling (LDA)</p>
    <p>Gradient descent with eventual consistency  5B users click logs, Group users into 1,000</p>
    <p>groups based on URLs they clicked</p>
    <p>time (hour) 0 10 20 30 40 50 60 70</p>
    <p>large</p>
    <p>small</p>
    <p>error</p>
  </div>
  <div class="page">
    <p>Topic Modeling (LDA)</p>
    <p>Gradient descent with eventual consistency  5B users click logs, Group users into 1,000</p>
    <p>groups based on URLs they clicked</p>
    <p>time (hour) 0 10 20 30 40 50 60 70</p>
    <p>large</p>
    <p>small</p>
    <p>error</p>
  </div>
  <div class="page">
    <p>Topic Modeling (LDA)</p>
    <p>Gradient descent with eventual consistency  5B users click logs, Group users into 1,000</p>
    <p>groups based on URLs they clicked</p>
    <p>time (hour) 0 10 20 30 40 50 60 70</p>
    <p>large</p>
    <p>small</p>
    <p>error</p>
  </div>
  <div class="page">
    <p>Largest experiments of related systems</p>
    <p>model size</p>
    <p>#cores</p>
    <p>Data were collected on April14</p>
  </div>
  <div class="page">
    <p>Largest experiments of related systems</p>
    <p>REEF (LR)</p>
    <p>VW (LR)</p>
    <p>Naiad (LR)</p>
    <p>Petuum (Lasso)</p>
    <p>MLbase (LR)</p>
    <p>model size</p>
    <p>#cores</p>
    <p>Sparse LR</p>
    <p>Parameter Server Data were collected on April14</p>
  </div>
  <div class="page">
    <p>Largest experiments of related systems</p>
    <p>REEF (LR)</p>
    <p>VW (LR)</p>
    <p>Naiad (LR)</p>
    <p>Petuum (Lasso)</p>
    <p>MLbase (LR) Graphlab (LDA)</p>
    <p>YahooLDA (LDA) model</p>
    <p>size</p>
    <p>#cores</p>
    <p>Sparse LR LDA</p>
    <p>Parameter Server Data were collected on April14</p>
  </div>
  <div class="page">
    <p>Largest experiments of related systems</p>
    <p>REEF (LR)</p>
    <p>VW (LR)</p>
    <p>Naiad (LR)</p>
    <p>Petuum (Lasso)</p>
    <p>MLbase (LR) Graphlab (LDA)</p>
    <p>YahooLDA (LDA)</p>
    <p>Distbelief (DNN) Adam (DNN)</p>
    <p>model size</p>
    <p>#cores</p>
    <p>Sparse LR LDA</p>
    <p>Parameter Server Data were collected on April14</p>
  </div>
  <div class="page">
    <p>Industry size machine learning problems</p>
    <p>Efficient communication</p>
    <p>Fault tolerance Easy to use Evaluation</p>
  </div>
  <div class="page">
    <p>Industry size machine learning problems</p>
    <p>Efficient communication</p>
    <p>Fault tolerance Easy to use</p>
    <p>Code available at parameterserver.org</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Q&amp;A</p>
  </div>
</Presentation>
