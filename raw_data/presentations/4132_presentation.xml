<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Johannes Obermaier, Marc Schink, Kosma Moczek</p>
    <p>August 11, 2020</p>
    <p>One Exploit to Rule them All?</p>
    <p>On the Security of Drop-in Replacement and Counterfeit Microcontrollers</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>- Research Scope</p>
    <p>- Optical Die Inspection</p>
    <p>- Security Concept</p>
    <p>- Debugger-based Attack Vectors</p>
    <p>- Hardware-based Attack Vectors</p>
    <p>- Conclusion and Outlook</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 1 / 17</p>
  </div>
  <div class="page">
    <p>Research Scope Drop-in Replacement and Counterfeit Devices</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 2 / 17</p>
  </div>
  <div class="page">
    <p>Research Scope Drop-in Replacement and Counterfeit Devices</p>
    <p>FA KE !</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 2 / 17</p>
  </div>
  <div class="page">
    <p>Research Scope Drop-in Replacement and Counterfeit Devices</p>
    <p>FA KE !</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 2 / 17</p>
  </div>
  <div class="page">
    <p>Research Scope Drop-in Replacement and Counterfeit Devices</p>
    <p>FA KE !</p>
    <p>Research: One exploit to rule them all?</p>
    <p>Unknown source: Surplus devices? Manufacturing data leak?</p>
    <p>Device security unknown / undisclosed</p>
    <p>Limitation: DiY attacks only! One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 2 / 17</p>
  </div>
  <div class="page">
    <p>Research Scope Selected Devices</p>
    <p>STM32F103(C8T6)</p>
    <p>The original</p>
    <p>device</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 3 / 17</p>
  </div>
  <div class="page">
    <p>Research Scope Selected Devices</p>
    <p>STM32F103(C8T6)</p>
    <p>The original</p>
    <p>device</p>
    <p>GD32F103(C8T6)</p>
    <p>CKS32F103(C8T6)APM32F103(CBT6)</p>
    <p>GD32F130(C8T6) GD32VF103(CBT6)</p>
    <p>Cortex-M3 only except for one RISC-V device</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 3 / 17</p>
  </div>
  <div class="page">
    <p>Optical Die Inspection Digging Deeper...</p>
    <p>Sulfuric acid chip decapping</p>
    <p>Exposes the silicon die for comparison</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 4 / 17</p>
  </div>
  <div class="page">
    <p>Optical Die Inspection Digging Deeper...</p>
    <p>Sulfuric acid chip decapping</p>
    <p>Exposes the silicon die for comparison</p>
    <p>STM32F103C8T6 APM32F103CBT6 CKS32F103C8T6</p>
    <p>GD32F103C8T6 GD32F130C8T6 GD32VF103CBT6 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 4 / 17</p>
  </div>
  <div class="page">
    <p>Optical Die Inspection Digging Deeper...</p>
    <p>Sulfuric acid chip decapping</p>
    <p>Exposes the silicon die for comparison</p>
    <p>STM32F103C8T6 APM32F103CBT6 CKS32F103C8T6</p>
    <p>GD32F103C8T6 GD32F130C8T6 GD32VF103CBT6  Individually developed devices</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 4 / 17</p>
  </div>
  <div class="page">
    <p>Security Concept Readout Protection Levels</p>
    <p>Read Protection Debug Permissions Config Value</p>
    <p>RDP Level 0 Full Access 0xA55A</p>
    <p>RDP Level 1 Flash Read Protection Others</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 5 / 17</p>
  </div>
  <div class="page">
    <p>Security Concept Readout Protection Levels</p>
    <p>Read Protection Debug Permissions Config Value</p>
    <p>RDP Level 0 Full Access 0xA55A</p>
    <p>RDP Level 1 Flash Read Protection Others</p>
    <p>Yes Full erase</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 5 / 17</p>
  </div>
  <div class="page">
    <p>Security Concept Readout Protection Levels</p>
    <p>Read Protection Debug Permissions Config Value</p>
    <p>RDP Level 0 Full Access 0xA55A</p>
    <p>RDP Level 1 Flash Read Protection Others</p>
    <p>Yes Full erase</p>
    <p>RDP Level 2 Debug Interface Disabled 0x33CC</p>
    <p>Yes Never (GD32F130 only)</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 5 / 17</p>
  </div>
  <div class="page">
    <p>Security Concept Bus Masters and Flash Access Permissions</p>
    <p>CPU Core CM3 / RISC-V</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>Bus masters: Debug, CPU, DMA</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 6 / 17</p>
  </div>
  <div class="page">
    <p>Security Concept Bus Masters and Flash Access Permissions</p>
    <p>CPU Core CM3 / RISC-V</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>Bus masters: Debug, CPU, DMA</p>
    <p>CPU or DMA: Flash access allowed</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 6 / 17</p>
  </div>
  <div class="page">
    <p>Security Concept Bus Masters and Flash Access Permissions</p>
    <p>CPU Core CM3 / RISC-V</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>Bus masters: Debug, CPU, DMA</p>
    <p>CPU or DMA: Flash access allowed</p>
    <p>Attacker</p>
    <p>Debugger: Flash access blocked</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 6 / 17</p>
  </div>
  <div class="page">
    <p>Security Concept Bus Masters and Flash Access Permissions</p>
    <p>CPU Core CM3 / RISC-V</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>Bus masters: Debug, CPU, DMA</p>
    <p>CPU or DMA: Flash access allowed</p>
    <p>Attacker</p>
    <p>Debugger: Flash access blocked</p>
    <p>Debugger via CPU or DMA: Indirect flash access permitted?</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 6 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors Load Instructions (GD32VF103, CKS32F103)</p>
    <p>GD32VF103 CKS32F103</p>
    <p>CPU Core RISC-V</p>
    <p>Debug B u s</p>
    <p>M a tr</p>
    <p>ix ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>CPU Core CM3</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 7 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors Load Instructions (GD32VF103, CKS32F103)</p>
    <p>GD32VF103 CKS32F103</p>
    <p>CPU Core RISC-V</p>
    <p>Debug B u s</p>
    <p>M a tr</p>
    <p>ix ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>CPU Core CM3</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>SRAM writeable+executable via debugger</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 7 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors Load Instructions (GD32VF103, CKS32F103)</p>
    <p>GD32VF103 CKS32F103</p>
    <p>CPU Core RISC-V</p>
    <p>Debug B u s</p>
    <p>M a tr</p>
    <p>ix ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>CPU Core CM3</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>SRAM writeable+executable via debugger</p>
    <p>Flash read access when running from SRAM</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 7 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors Load Instructions (GD32VF103, CKS32F103)</p>
    <p>GD32VF103 CKS32F103</p>
    <p>CPU Core RISC-V</p>
    <p>Debug B u s</p>
    <p>M a tr</p>
    <p>ix ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>CPU Core CM3</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>SRAM writeable+executable via debugger</p>
    <p>Flash read access when running from SRAM</p>
    <p>Dump flash via SRAM firmware</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 7 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors Load Instructions (GD32VF103, CKS32F103)</p>
    <p>GD32VF103 CKS32F103</p>
    <p>CPU Core RISC-V</p>
    <p>Debug B u s</p>
    <p>M a tr</p>
    <p>ix ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>CPU Core CM3</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>SRAM writeable+executable via debugger</p>
    <p>Flash read access when running from SRAM</p>
    <p>Dump flash via SRAM firmware</p>
    <p>Single stepping via debugger allowed</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 7 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors Load Instructions (GD32VF103, CKS32F103)</p>
    <p>GD32VF103 CKS32F103</p>
    <p>CPU Core RISC-V</p>
    <p>Debug B u s</p>
    <p>M a tr</p>
    <p>ix ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>CPU Core CM3</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>SRAM writeable+executable via debugger</p>
    <p>Flash read access when running from SRAM</p>
    <p>Dump flash via SRAM firmware</p>
    <p>Single stepping via debugger allowed</p>
    <p>CPU registers can be modified</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 7 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors Load Instructions (GD32VF103, CKS32F103)</p>
    <p>GD32VF103 CKS32F103</p>
    <p>CPU Core RISC-V</p>
    <p>Debug B u s</p>
    <p>M a tr</p>
    <p>ix ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>CPU Core CM3</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>SRAM writeable+executable via debugger</p>
    <p>Flash read access when running from SRAM</p>
    <p>Dump flash via SRAM firmware</p>
    <p>Single stepping via debugger allowed</p>
    <p>CPU registers can be modified</p>
    <p>Dump flash via LDR-gadget stepping</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 7 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors Demo: CKS32F103 Memory Extraction</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 8 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors Exceptional Failure (APM32F103, CKS32F103, STM32F103)</p>
    <p>Interrupt routine address fetched from flash</p>
    <p>Debugger can trigger interrupts +0x10</p>
    <p>VTOR</p>
    <p>+0x20</p>
    <p>+0x30</p>
    <p>+0x40</p>
    <p>MemManage</p>
    <p>DebugMon</p>
    <p>Ext 0</p>
    <p>Reset</p>
    <p>BusFault</p>
    <p>Ext 1</p>
    <p>NMI</p>
    <p>UsageFault</p>
    <p>PendSV</p>
    <p>Ext 2</p>
    <p>HardFault</p>
    <p>SVCall</p>
    <p>SysTick</p>
    <p>Ext 3</p>
    <p>+0x70 Ext 12 Ext 13 Ext 14 Ext 15</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 9 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors Exceptional Failure (APM32F103, CKS32F103, STM32F103)</p>
    <p>Interrupt routine address fetched from flash</p>
    <p>Debugger can trigger interrupts +0x10</p>
    <p>VTOR</p>
    <p>+0x20</p>
    <p>+0x30</p>
    <p>+0x40</p>
    <p>MemManage</p>
    <p>DebugMon</p>
    <p>Ext 0</p>
    <p>Reset</p>
    <p>BusFault</p>
    <p>Ext 1</p>
    <p>NMI</p>
    <p>UsageFault</p>
    <p>PendSV</p>
    <p>Ext 2</p>
    <p>HardFault</p>
    <p>SVCall</p>
    <p>SysTick</p>
    <p>Ext 3</p>
    <p>+0x70 Ext 12 Ext 13 Ext 14 Ext 15</p>
    <p>MSP</p>
    <p>MemManage</p>
    <p>DebugMon</p>
    <p>Ext 0</p>
    <p>Reset</p>
    <p>BusFault</p>
    <p>Ext 1</p>
    <p>NMI</p>
    <p>UsageFault</p>
    <p>PendSV</p>
    <p>Ext 2</p>
    <p>HardFault</p>
    <p>SVCall</p>
    <p>SysTick</p>
    <p>Ext 3</p>
    <p>Ext 12 Ext 13 Ext 14 Ext 15</p>
    <p>Fetched address leaks memory contents</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 9 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors Exceptional Failure (APM32F103, CKS32F103, STM32F103)</p>
    <p>Interrupt routine address fetched from flash</p>
    <p>Debugger can trigger interrupts +0x10</p>
    <p>VTOR</p>
    <p>+0x20</p>
    <p>+0x30</p>
    <p>+0x40</p>
    <p>MemManage</p>
    <p>DebugMon</p>
    <p>Ext 0</p>
    <p>Reset</p>
    <p>BusFault</p>
    <p>Ext 1</p>
    <p>NMI</p>
    <p>UsageFault</p>
    <p>PendSV</p>
    <p>Ext 2</p>
    <p>HardFault</p>
    <p>SVCall</p>
    <p>SysTick</p>
    <p>Ext 3</p>
    <p>+0x70 Ext 12 Ext 13 Ext 14 Ext 15</p>
    <p>MSP</p>
    <p>MemManage</p>
    <p>DebugMon</p>
    <p>Ext 0</p>
    <p>Reset</p>
    <p>BusFault</p>
    <p>Ext 1</p>
    <p>NMI</p>
    <p>UsageFault</p>
    <p>PendSV</p>
    <p>Ext 2</p>
    <p>HardFault</p>
    <p>SVCall</p>
    <p>SysTick</p>
    <p>Ext 3</p>
    <p>Ext 12 Ext 13 Ext 14 Ext 15</p>
    <p>Fetched address leaks memory contents</p>
    <p>VTOR MSP</p>
    <p>MemManage</p>
    <p>DebugMon</p>
    <p>Ext 0</p>
    <p>Reset</p>
    <p>BusFault</p>
    <p>Ext 1</p>
    <p>NMI</p>
    <p>UsageFault</p>
    <p>PendSV</p>
    <p>Ext 2</p>
    <p>HardFault</p>
    <p>SVCall</p>
    <p>SysTick</p>
    <p>Ext 3</p>
    <p>VTOR 0x0801 0080</p>
    <p>+0x10</p>
    <p>+0x20</p>
    <p>+0x30</p>
    <p>+0x40</p>
    <p>ResetMSP NMI HardFault</p>
    <p>MemManage BusFault UsageFault</p>
    <p>SVCall</p>
    <p>DebugMon PendSV SysTick</p>
    <p>Ext 0 Ext 1 Ext 2 Ext 3</p>
    <p>+0x70 Ext 12 Ext 13 Ext 14 Ext 15</p>
    <p>-</p>
    <p>Ext 12</p>
    <p>Ext 13 Ext 14 Ext 15</p>
    <p>Interrupt vector table relocateable</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 9 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors Exceptional Failure (APM32F103, CKS32F103, STM32F103)</p>
    <p>Interrupt routine address fetched from flash</p>
    <p>Debugger can trigger interrupts +0x10</p>
    <p>VTOR</p>
    <p>+0x20</p>
    <p>+0x30</p>
    <p>+0x40</p>
    <p>MemManage</p>
    <p>DebugMon</p>
    <p>Ext 0</p>
    <p>Reset</p>
    <p>BusFault</p>
    <p>Ext 1</p>
    <p>NMI</p>
    <p>UsageFault</p>
    <p>PendSV</p>
    <p>Ext 2</p>
    <p>HardFault</p>
    <p>SVCall</p>
    <p>SysTick</p>
    <p>Ext 3</p>
    <p>+0x70 Ext 12 Ext 13 Ext 14 Ext 15</p>
    <p>MSP</p>
    <p>MemManage</p>
    <p>DebugMon</p>
    <p>Ext 0</p>
    <p>Reset</p>
    <p>BusFault</p>
    <p>Ext 1</p>
    <p>NMI</p>
    <p>UsageFault</p>
    <p>PendSV</p>
    <p>Ext 2</p>
    <p>HardFault</p>
    <p>SVCall</p>
    <p>SysTick</p>
    <p>Ext 3</p>
    <p>Ext 12 Ext 13 Ext 14 Ext 15</p>
    <p>Fetched address leaks memory contents</p>
    <p>VTOR MSP</p>
    <p>MemManage</p>
    <p>DebugMon</p>
    <p>Ext 0</p>
    <p>Reset</p>
    <p>BusFault</p>
    <p>Ext 1</p>
    <p>NMI</p>
    <p>UsageFault</p>
    <p>PendSV</p>
    <p>Ext 2</p>
    <p>HardFault</p>
    <p>SVCall</p>
    <p>SysTick</p>
    <p>Ext 3</p>
    <p>VTOR 0x0801 0080</p>
    <p>+0x10</p>
    <p>+0x20</p>
    <p>+0x30</p>
    <p>+0x40</p>
    <p>ResetMSP NMI HardFault</p>
    <p>MemManage BusFault UsageFault</p>
    <p>SVCall</p>
    <p>DebugMon PendSV SysTick</p>
    <p>Ext 0 Ext 1 Ext 2 Ext 3</p>
    <p>+0x70 Ext 12 Ext 13 Ext 14 Ext 15</p>
    <p>-</p>
    <p>Ext 12</p>
    <p>Ext 13 Ext 14 Ext 15</p>
    <p>Interrupt vector table relocateable</p>
    <p>Dump ~90% of flash via interrupt generation</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 9 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors VTOR Control Flow Redirection (GD32F103)</p>
    <p>SRAM writeable by debugger</p>
    <p>CPU Core CM3</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 10 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors VTOR Control Flow Redirection (GD32F103)</p>
    <p>SRAM writeable by debugger</p>
    <p>CPU Core CM3</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>Interrupt vector table relocation + triggering allowed</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 10 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors VTOR Control Flow Redirection (GD32F103)</p>
    <p>SRAM writeable by debugger</p>
    <p>CPU Core CM3</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>Interrupt vector table relocation + triggering allowed</p>
    <p>Flash accessible from SRAM, if CPU-debugging is off</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 10 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors VTOR Control Flow Redirection (GD32F103)</p>
    <p>SRAM writeable by debugger</p>
    <p>CPU Core CM3</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>Interrupt vector table relocation + triggering allowed</p>
    <p>Flash accessible from SRAM, if CPU-debugging is off</p>
    <p>Dump flash via an injected interrupt routine in SRAM</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 10 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors DMA-based Extraction (CKS32F103, GD32F103)</p>
    <p>CPU Core CM3 / RISC-V</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>Flash accessible by the DMA module</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 11 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors DMA-based Extraction (CKS32F103, GD32F103)</p>
    <p>CPU Core CM3 / RISC-V</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>Flash accessible by the DMA module</p>
    <p>DMA reconfigurable via the debugger</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 11 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors DMA-based Extraction (CKS32F103, GD32F103)</p>
    <p>CPU Core CM3 / RISC-V</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>Flash accessible by the DMA module</p>
    <p>DMA reconfigurable via the debugger</p>
    <p>Configure: Copy from flash to SRAM</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 11 / 17</p>
  </div>
  <div class="page">
    <p>Debugger-based Attack Vectors DMA-based Extraction (CKS32F103, GD32F103)</p>
    <p>CPU Core CM3 / RISC-V</p>
    <p>Debug</p>
    <p>B u s</p>
    <p>M a tr</p>
    <p>ix</p>
    <p>ICode</p>
    <p>DCode</p>
    <p>System</p>
    <p>DMADMA</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>Peripherals</p>
    <p>DBG</p>
    <p>Flash accessible by the DMA module</p>
    <p>DMA reconfigurable via the debugger</p>
    <p>Configure: Copy from flash to SRAM</p>
    <p>Dump flash via the DMA+SRAM module</p>
    <p>SRAM readable via the debugger</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 11 / 17</p>
  </div>
  <div class="page">
    <p>Hardware-based Attack Vectors Invasive Data Eavesdropping (GD32F103, GD32F130)</p>
    <p>Logic die Flash die</p>
    <p>Stacked die concept</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 12 / 17</p>
  </div>
  <div class="page">
    <p>Hardware-based Attack Vectors Invasive Data Eavesdropping (GD32F103, GD32F130)</p>
    <p>Logic die Flash die</p>
    <p>Stacked die concept Logic die Flash die</p>
    <p>Access to Logic-to-Flash interconnect</p>
    <p>grinded</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 12 / 17</p>
  </div>
  <div class="page">
    <p>Hardware-based Attack Vectors Invasive Data Eavesdropping (GD32F103, GD32F130)</p>
    <p>Logic die Flash die</p>
    <p>Stacked die concept Logic die Flash die</p>
    <p>Access to Logic-to-Flash interconnect</p>
    <p>grinded</p>
    <p>Bonding wires</p>
    <p>IO3 IO0</p>
    <p>IO1 IO2</p>
    <p>Silver paint contact pads</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 12 / 17</p>
  </div>
  <div class="page">
    <p>Hardware-based Attack Vectors Invasive Data Eavesdropping (GD32F103, GD32F130)</p>
    <p>Logic die Flash die</p>
    <p>Stacked die concept Logic die Flash die</p>
    <p>Access to Logic-to-Flash interconnect</p>
    <p>grinded</p>
    <p>Bonding wires</p>
    <p>IO3 IO0</p>
    <p>IO1 IO2</p>
    <p>Silver paint contact pads</p>
    <p>Obfuscated QSPI transmissions</p>
    <p>Address+data permutation</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 12 / 17</p>
  </div>
  <div class="page">
    <p>Hardware-based Attack Vectors Invasive Data Eavesdropping (GD32F103, GD32F130)</p>
    <p>Logic die Flash die</p>
    <p>Stacked die concept Logic die Flash die</p>
    <p>Access to Logic-to-Flash interconnect</p>
    <p>grinded</p>
    <p>Bonding wires</p>
    <p>IO3 IO0</p>
    <p>IO1 IO2</p>
    <p>Silver paint contact pads</p>
    <p>Obfuscated QSPI transmissions</p>
    <p>Address+data permutation</p>
    <p>Deobfuscation successful</p>
    <p>Firmware extraction via eavesdropping</p>
    <p>(untested) APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 12 / 17</p>
  </div>
  <div class="page">
    <p>Hardware-based Attack Vectors Invasive RDP Manipulation (GD32F130)</p>
    <p>RDP setting at 0x4000: 33CC [....]</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 13 / 17</p>
  </div>
  <div class="page">
    <p>Hardware-based Attack Vectors Invasive RDP Manipulation (GD32F130)</p>
    <p>RDP setting at 0x4000: 33CC [....]</p>
    <p>Factory config at 0x0400: A55A [...]</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 13 / 17</p>
  </div>
  <div class="page">
    <p>Hardware-based Attack Vectors Invasive RDP Manipulation (GD32F130)</p>
    <p>RDP setting at 0x4000: 33CC [....]</p>
    <p>Factory config at 0x0400: A55A [...] RDP level 0 setting?!?</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 13 / 17</p>
  </div>
  <div class="page">
    <p>Hardware-based Attack Vectors Invasive RDP Manipulation (GD32F130)</p>
    <p>RDP setting at 0x4000: 33CC [....]</p>
    <p>Factory config at 0x0400: A55A [...] RDP level 0 setting?!?</p>
    <p>Overwrite address phase of RDP loading with 0x0400</p>
    <p>(other data / pattern) RDP Firmware</p>
    <p>Debug/SWD</p>
    <p>QSPI IO2</p>
    <p>DuT</p>
    <p>Attack Board</p>
    <p>IO2</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 13 / 17</p>
  </div>
  <div class="page">
    <p>Hardware-based Attack Vectors Invasive RDP Manipulation (GD32F130)</p>
    <p>RDP setting at 0x4000: 33CC [....]</p>
    <p>Factory config at 0x0400: A55A [...] RDP level 0 setting?!?</p>
    <p>Overwrite address phase of RDP loading with 0x0400</p>
    <p>(other data / pattern) RDP Firmware</p>
    <p>Debug/SWD</p>
    <p>QSPI IO2</p>
    <p>DuT</p>
    <p>Attack Board</p>
    <p>IO2</p>
    <p>Firmware extraction via security downgrade to RDP 0</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 13 / 17</p>
  </div>
  <div class="page">
    <p>Hardware-based Attack Vectors Shellcode Exec. via Glitch and Patchpoint (APM32F103, STM32F103)</p>
    <p>Attack Board DuT</p>
    <p>BOOT0</p>
    <p>VCCDebug/UART</p>
    <p>Reset</p>
    <p>SWD</p>
    <p>Attached debugger prevents flash access and execution</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 14 / 17</p>
  </div>
  <div class="page">
    <p>Hardware-based Attack Vectors Shellcode Exec. via Glitch and Patchpoint (APM32F103, STM32F103)</p>
    <p>Attack Board DuT</p>
    <p>BOOT0</p>
    <p>VCCDebug/UART</p>
    <p>Reset</p>
    <p>SWD</p>
    <p>Attached debugger prevents flash access and execution</p>
    <p>Load 2-stage shellcode to SRAM</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 14 / 17</p>
  </div>
  <div class="page">
    <p>Hardware-based Attack Vectors Shellcode Exec. via Glitch and Patchpoint (APM32F103, STM32F103)</p>
    <p>Attack Board DuT</p>
    <p>BOOT0</p>
    <p>VCCDebug/UART</p>
    <p>Reset</p>
    <p>SWD</p>
    <p>Attached debugger prevents flash access and execution</p>
    <p>Load 2-stage shellcode to SRAM</p>
    <p>Disconnect Debugger, apply power glitch (debug module resets, SRAM shellcode remains)</p>
    <p>DuT VDD</p>
    <p>DuT RESET</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 14 / 17</p>
  </div>
  <div class="page">
    <p>Hardware-based Attack Vectors Shellcode Exec. via Glitch and Patchpoint (APM32F103, STM32F103)</p>
    <p>Attack Board DuT</p>
    <p>BOOT0</p>
    <p>VCCDebug/UART</p>
    <p>Reset</p>
    <p>SWD</p>
    <p>Attached debugger prevents flash access and execution</p>
    <p>Load 2-stage shellcode to SRAM</p>
    <p>Disconnect Debugger, apply power glitch (debug module resets, SRAM shellcode remains)</p>
    <p>DuT VDD</p>
    <p>DuT RESET</p>
    <p>Boot SRAM/stage 1: Add Patchpoint to flash entry point</p>
    <p>Boot from flash, control flow gets &quot;patched&quot; into stage 2</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 14 / 17</p>
  </div>
  <div class="page">
    <p>Hardware-based Attack Vectors Shellcode Exec. via Glitch and Patchpoint (APM32F103, STM32F103)</p>
    <p>Attack Board DuT</p>
    <p>BOOT0</p>
    <p>VCCDebug/UART</p>
    <p>Reset</p>
    <p>SWD</p>
    <p>Attached debugger prevents flash access and execution</p>
    <p>Load 2-stage shellcode to SRAM</p>
    <p>Disconnect Debugger, apply power glitch (debug module resets, SRAM shellcode remains)</p>
    <p>DuT VDD</p>
    <p>DuT RESET</p>
    <p>Boot SRAM/stage 1: Add Patchpoint to flash entry point</p>
    <p>Boot from flash, control flow gets &quot;patched&quot; into stage 2</p>
    <p>Flash reader shellcode execution</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 14 / 17</p>
  </div>
  <div class="page">
    <p>Hardware-based Attack Vectors Demo:APM32 Flash Extraction via Shellcode</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 15 / 17</p>
  </div>
  <div class="page">
    <p>Conclusion and Outlook</p>
    <p>Instead: Vulnerabilities expose EACH one to DiY methods NO exploit to rule them ALL</p>
    <p>Insufficient security engineering (design, testing, ...)</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 16 / 17</p>
  </div>
  <div class="page">
    <p>Conclusion and Outlook</p>
    <p>Instead: Vulnerabilities expose EACH one to DiY methods NO exploit to rule them ALL</p>
    <p>Insufficient security engineering (design, testing, ...)</p>
    <p>Coordinated disclosure process performed But: Very little responsiveness from manufacturers</p>
    <p>APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103 One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 16 / 17</p>
  </div>
  <div class="page">
    <p>Conclusion and Outlook</p>
    <p>Instead: Vulnerabilities expose EACH one to DiY methods NO exploit to rule them ALL</p>
    <p>Insufficient security engineering (design, testing, ...)</p>
    <p>Coordinated disclosure process performed But: Very little responsiveness from manufacturers</p>
    <p>Weaknesses all in hardware, no known (software) workarounds  New fixed hardware revisions required</p>
    <p>? ? ? ? ? ? APM32F103 CKS32F103 GD32F103 GD32F130 GD32VF103 STM32F103</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 16 / 17</p>
  </div>
  <div class="page">
    <p>Contact Information</p>
    <p>Johannes Obermaier mail@obermaier-johannes.de</p>
    <p>Marc Schink mail@marcschink.de</p>
    <p>Kosma Moczek kosma@kosma.pl</p>
    <p>Supplementary materials at: https://science.obermaier-johannes.de/f103-analysis</p>
    <p>One Exploit to Rule them All? | Johannes Obermaier, Marc Schink, Kosma Moczek | August 11, 2020 | 17 / 17</p>
  </div>
</Presentation>
