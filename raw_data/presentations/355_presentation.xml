<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Liquidity in Credit Networks A Little Trust Goes a Long Way</p>
    <p>Pranav Dandekar Stanford University</p>
    <p>(joint work with Ashish Goel, Ramesh Govindan, Ian Post)</p>
    <p>NetEcon 10 Vancouver, BC, Canada</p>
  </div>
  <div class="page">
    <p>Outline</p>
  </div>
  <div class="page">
    <p>Barter Economy in Armorica</p>
    <p>Asterix willing to accept up to 100 IOUs from Obelix Obelix willing to accept up to 50 IOUs from Asterix</p>
  </div>
  <div class="page">
    <p>Barter Economy in Armorica</p>
    <p>Asterix willing to accept up to 100 IOUs from Obelix Obelix willing to accept up to 50 IOUs from Asterix</p>
  </div>
  <div class="page">
    <p>Barter Economy in Armorica</p>
    <p>Obelix needs a favor worth 10 IOUs.</p>
    <p>Gives Asterix 10 IOUs as payment.</p>
  </div>
  <div class="page">
    <p>Barter Economy in Armorica</p>
    <p>Obelix needs a favor worth 10 IOUs.</p>
    <p>Gives Asterix 10 IOUs as payment.</p>
  </div>
  <div class="page">
    <p>Barter Economy in Armorica</p>
    <p>New trust values....</p>
  </div>
  <div class="page">
    <p>Barter Economy in Armorica</p>
  </div>
  <div class="page">
    <p>Barter Economy in Armorica</p>
  </div>
  <div class="page">
    <p>Barter Economy in Armorica</p>
  </div>
  <div class="page">
    <p>What is a Credit Network?</p>
    <p>Decentralized payment infrastructure introduced by [DeFigueiredo, Barr, 2005] and [Ghosh et. al., 2007]</p>
    <p>Do not need banks, common currency  Models trust in networked interactions</p>
  </div>
  <div class="page">
    <p>What is a Credit Network?</p>
    <p>Graph G (V , E ) represents a network (social network, p2p network, etc.)</p>
    <p>Nodes: (non-rational) agents/players; print their own currency</p>
    <p>Edges: credit limits cuv &gt; 0 extended by nodes to each other1</p>
    <p>Payments made by passing IOUs along a chain of trust  Credit gets replenished when payments are made in the other</p>
    <p>direction</p>
  </div>
  <div class="page">
    <p>What is a Credit Network?</p>
    <p>Graph G (V , E ) represents a network (social network, p2p network, etc.)</p>
    <p>Nodes: (non-rational) agents/players; print their own currency</p>
    <p>Edges: credit limits cuv &gt; 0 extended by nodes to each other1</p>
    <p>Payments made by passing IOUs along a chain of trust  Credit gets replenished when payments are made in the other</p>
    <p>direction</p>
  </div>
  <div class="page">
    <p>What is a Credit Network?</p>
    <p>Graph G (V , E ) represents a network (social network, p2p network, etc.)</p>
    <p>Nodes: (non-rational) agents/players; print their own currency</p>
    <p>Edges: credit limits cuv &gt; 0 extended by nodes to each other1</p>
    <p>Payments made by passing IOUs along a chain of trust  Credit gets replenished when payments are made in the other</p>
    <p>direction</p>
  </div>
  <div class="page">
    <p>What is a Credit Network?</p>
    <p>Graph G (V , E ) represents a network (social network, p2p network, etc.)</p>
    <p>Nodes: (non-rational) agents/players; print their own currency</p>
    <p>Edges: credit limits cuv &gt; 0 extended by nodes to each other1</p>
    <p>Payments made by passing IOUs along a chain of trust  Credit gets replenished when payments are made in the other</p>
    <p>direction</p>
  </div>
  <div class="page">
    <p>What is a Credit Network?</p>
    <p>Graph G (V , E ) represents a network (social network, p2p network, etc.)</p>
    <p>Nodes: (non-rational) agents/players; print their own currency</p>
    <p>Edges: credit limits cuv &gt; 0 extended by nodes to each other1</p>
    <p>Payments made by passing IOUs along a chain of trust  Credit gets replenished when payments are made in the other</p>
    <p>direction</p>
  </div>
  <div class="page">
    <p>Applications</p>
    <p>Barter/Exchange economies like P2P networks.  Combating social spam (Facebook, LinkedIn)  Distributing proxy addresses to circumvent censorship in</p>
    <p>repressive regimes</p>
  </div>
  <div class="page">
    <p>Liquidity Model</p>
    <p>Edges have integer capacity c &gt; 0  Transaction rate matrix  = {uv : u, v  V ,uu = 0}  Repeated transactions; at each time step choose (s, t ) with</p>
    <p>prob. st</p>
    <p>Try to route a unit payment from s to t via the shortest feasible path; update edge capacities along the path</p>
    <p>Transaction fails if no path exists</p>
  </div>
  <div class="page">
    <p>Liquidity Model</p>
    <p>Markov Chain</p>
    <p>Repeated transactions induce a Markov chain M with (c + 1)m states</p>
    <p>State S of M captures the states of all edges in G  Transition probability P (S,S) = st , where s  t in S leads</p>
    <p>to S</p>
    <p>P (S,S):= failure prob. at state S</p>
    <p>Questions</p>
    <p>Steady-state distribution?  Steady-state transaction success probability?  Comparison with a centralized payment infrastructure</p>
  </div>
  <div class="page">
    <p>Liquidity Model</p>
    <p>Markov Chain</p>
    <p>Repeated transactions induce a Markov chain M with (c + 1)m states</p>
    <p>State S of M captures the states of all edges in G  Transition probability P (S,S) = st , where s  t in S leads</p>
    <p>to S</p>
    <p>P (S,S):= failure prob. at state S</p>
    <p>Questions</p>
    <p>Steady-state distribution?  Steady-state transaction success probability?  Comparison with a centralized payment infrastructure</p>
  </div>
  <div class="page">
    <p>Main Results</p>
    <p>Success probability independent of path along which transactions are routed</p>
    <p>For symmetric transaction rates, the success probability for  Complete Graphs: Goes to one with increase in network size</p>
    <p>or credit capacity.  Gc (n, p) networks (p &gt; ln n/n): Goes to one with increase in</p>
    <p>one of n, p or c keeping the other two constant.  PA networks: Goes to one with increase in avg. node degree</p>
    <p>or credit capacity (indepedent of network size).</p>
    <p>Success probability in Complete graphs and Erdos-Renyi graphs only constant-factor worse than equiv. centralized payment system.</p>
  </div>
  <div class="page">
    <p>Main Results</p>
    <p>Success probability independent of path along which transactions are routed</p>
    <p>For symmetric transaction rates, the success probability for  Complete Graphs: Goes to one with increase in network size</p>
    <p>or credit capacity.  Gc (n, p) networks (p &gt; ln n/n): Goes to one with increase in</p>
    <p>one of n, p or c keeping the other two constant.  PA networks: Goes to one with increase in avg. node degree</p>
    <p>or credit capacity (indepedent of network size).</p>
    <p>Success probability in Complete graphs and Erdos-Renyi graphs only constant-factor worse than equiv. centralized payment system.</p>
  </div>
  <div class="page">
    <p>Main Results</p>
    <p>Success probability independent of path along which transactions are routed</p>
    <p>For symmetric transaction rates, the success probability for  Complete Graphs: Goes to one with increase in network size</p>
    <p>or credit capacity.  Gc (n, p) networks (p &gt; ln n/n): Goes to one with increase in</p>
    <p>one of n, p or c keeping the other two constant.  PA networks: Goes to one with increase in avg. node degree</p>
    <p>or credit capacity (indepedent of network size).</p>
    <p>Success probability in Complete graphs and Erdos-Renyi graphs only constant-factor worse than equiv. centralized payment system.</p>
  </div>
  <div class="page">
    <p>Analysis Cycle-reachability</p>
    <p>Definition Let S and S be two states of the network. We say that S is cycle-reachable from S if the network can be transformed from state S to state S by routing a sequence of payments along feasible cycles (i.e. from a node to itself along a feasible path).</p>
    <p>Transactions along a feasible cycle are free.</p>
  </div>
  <div class="page">
    <p>Analysis Path-independence</p>
    <p>Theorem Let (s1, t1), (s2, t2), . . . , (sT , tT ) be the set of transactions of value v1, v2, . . . , vT respectively that succeed when the payment is routed along the shortest feasible path from si to ti . Then the same set of transactions succeed when the payment is routed along any feasible path from si to ti .</p>
  </div>
  <div class="page">
    <p>Analysis Path-independence</p>
    <p>Proof Sketch. Proof by induction on T . Sk := state of the network when transactions (s1, t1), . . . , (sk, tk ) are routed along the shortest feasible path Sk := state of the network when not all of the transactions (s1, t1), . . . , (sk, tk ) are routed along the shortest feasible path From Sk undo transactions (sk, tk ), (sk1, tk1), . . . , (s1, t1) and redo (s1, t1), . . . , (sk tk ) along their shortest feasible paths. This results in state S. But undoing and redoing is equal to k transactions along cycles. Therefore, Sk and Sk are cycle-reachable. So if (sk+1, tk+1) is feasible in state Sk , it is also feasible in state Sk .</p>
  </div>
  <div class="page">
    <p>Analysis Path-independence</p>
    <p>Proof Sketch. Proof by induction on T . Sk := state of the network when transactions (s1, t1), . . . , (sk, tk ) are routed along the shortest feasible path Sk := state of the network when not all of the transactions (s1, t1), . . . , (sk, tk ) are routed along the shortest feasible path From Sk undo transactions (sk, tk ), (sk1, tk1), . . . , (s1, t1) and redo (s1, t1), . . . , (sk tk ) along their shortest feasible paths. This results in state S. But undoing and redoing is equal to k transactions along cycles. Therefore, Sk and Sk are cycle-reachable. So if (sk+1, tk+1) is feasible in state Sk , it is also feasible in state Sk .</p>
  </div>
  <div class="page">
    <p>Analysis Path-independence</p>
    <p>Proof Sketch. Proof by induction on T . Sk := state of the network when transactions (s1, t1), . . . , (sk, tk ) are routed along the shortest feasible path Sk := state of the network when not all of the transactions (s1, t1), . . . , (sk, tk ) are routed along the shortest feasible path From Sk undo transactions (sk, tk ), (sk1, tk1), . . . , (s1, t1) and redo (s1, t1), . . . , (sk tk ) along their shortest feasible paths. This results in state S. But undoing and redoing is equal to k transactions along cycles. Therefore, Sk and Sk are cycle-reachable. So if (sk+1, tk+1) is feasible in state Sk , it is also feasible in state Sk .</p>
  </div>
  <div class="page">
    <p>Analysis Path-independence</p>
    <p>Proof Sketch. Proof by induction on T . Sk := state of the network when transactions (s1, t1), . . . , (sk, tk ) are routed along the shortest feasible path Sk := state of the network when not all of the transactions (s1, t1), . . . , (sk, tk ) are routed along the shortest feasible path From Sk undo transactions (sk, tk ), (sk1, tk1), . . . , (s1, t1) and redo (s1, t1), . . . , (sk tk ) along their shortest feasible paths. This results in state S. But undoing and redoing is equal to k transactions along cycles. Therefore, Sk and Sk are cycle-reachable. So if (sk+1, tk+1) is feasible in state Sk , it is also feasible in state Sk .</p>
  </div>
  <div class="page">
    <p>Analysis Path-independence</p>
    <p>Proof Sketch. Proof by induction on T . Sk := state of the network when transactions (s1, t1), . . . , (sk, tk ) are routed along the shortest feasible path Sk := state of the network when not all of the transactions (s1, t1), . . . , (sk, tk ) are routed along the shortest feasible path From Sk undo transactions (sk, tk ), (sk1, tk1), . . . , (s1, t1) and redo (s1, t1), . . . , (sk tk ) along their shortest feasible paths. This results in state S. But undoing and redoing is equal to k transactions along cycles. Therefore, Sk and Sk are cycle-reachable. So if (sk+1, tk+1) is feasible in state Sk , it is also feasible in state Sk .</p>
  </div>
  <div class="page">
    <p>Analysis Cycle-reachability</p>
    <p>Cycle-reachability induces a partition C on the set of states in M. Fact For any equivalence class C C, if a transaction (s, t ) is feasible in some state S  C , it is feasible for all states S  C (since S is cycle-reachable from S).</p>
    <p>Fact If a transaction (s, t ) is feasible in two states Si,Sj  C and results in transitions to states Si and S</p>
    <p>j respectively, then S</p>
    <p>i and S</p>
    <p>j are</p>
    <p>cycle-reachable (in other words, belong to the same equivalence class).</p>
    <p>Corollary If a transaction (s, t ) in some state in the equivalence class Ci results in a transition to a state in equivalence class Cj , then the reverse transaction (t, s ) from any state in Cj will result in a transition to a state in Ci .</p>
  </div>
  <div class="page">
    <p>Analysis Cycle-reachability</p>
    <p>Cycle-reachability induces a partition C on the set of states in M. Fact For any equivalence class C C, if a transaction (s, t ) is feasible in some state S  C , it is feasible for all states S  C (since S is cycle-reachable from S).</p>
    <p>Fact If a transaction (s, t ) is feasible in two states Si,Sj  C and results in transitions to states Si and S</p>
    <p>j respectively, then S</p>
    <p>i and S</p>
    <p>j are</p>
    <p>cycle-reachable (in other words, belong to the same equivalence class).</p>
    <p>Corollary If a transaction (s, t ) in some state in the equivalence class Ci results in a transition to a state in equivalence class Cj , then the reverse transaction (t, s ) from any state in Cj will result in a transition to a state in Ci .</p>
  </div>
  <div class="page">
    <p>Analysis Cycle-reachability</p>
    <p>Cycle-reachability induces a partition C on the set of states in M. Fact For any equivalence class C C, if a transaction (s, t ) is feasible in some state S  C , it is feasible for all states S  C (since S is cycle-reachable from S).</p>
    <p>Fact If a transaction (s, t ) is feasible in two states Si,Sj  C and results in transitions to states Si and S</p>
    <p>j respectively, then S</p>
    <p>i and S</p>
    <p>j are</p>
    <p>cycle-reachable (in other words, belong to the same equivalence class).</p>
    <p>Corollary If a transaction (s, t ) in some state in the equivalence class Ci results in a transition to a state in equivalence class Cj , then the reverse transaction (t, s ) from any state in Cj will result in a transition to a state in Ci .</p>
  </div>
  <div class="page">
    <p>Analysis Cycle-reachability</p>
    <p>Cycle-reachability induces a partition C on the set of states in M. Fact For any equivalence class C C, if a transaction (s, t ) is feasible in some state S  C , it is feasible for all states S  C (since S is cycle-reachable from S).</p>
    <p>Fact If a transaction (s, t ) is feasible in two states Si,Sj  C and results in transitions to states Si and S</p>
    <p>j respectively, then S</p>
    <p>i and S</p>
    <p>j are</p>
    <p>cycle-reachable (in other words, belong to the same equivalence class).</p>
    <p>Corollary If a transaction (s, t ) in some state in the equivalence class Ci results in a transition to a state in equivalence class Cj , then the reverse transaction (t, s ) from any state in Cj will result in a transition to a state in Ci .</p>
  </div>
  <div class="page">
    <p>Analysis Steady-state Distribution</p>
    <p>Theorem Consider a Markov chain MS0 starting in state S0 induced by a symmetric transaction rate matrix . Let CS0 C be the set of equivalence classes accessible from S0 under the regime defined by . Then MS0 has a uniform steady-state distribution over CS0 .</p>
  </div>
  <div class="page">
    <p>Analysis Steady-state Distribution</p>
    <p>Proof. Tij := {(s, t ) | s  t in state S  Ci leads to state S  Cj} Define transition probability between Ci, Cj CS0 as</p>
    <p>P (Ci, Cj ) =</p>
    <p>(s,t)Tij</p>
    <p>st</p>
    <p>Since (s, t ) Tij  (t, s ) Tji and  is symmetric, therefore P is a symmetric stochastic matrix. = uniform distribution over CS0 is stationary w.r.t. P .</p>
    <p>Corollary If M is an ergodic Markov chain induced by a symmetric transaction rate matrix , it has a uniform steady state distribution over C.</p>
  </div>
  <div class="page">
    <p>Analysis Steady-state Distribution</p>
    <p>Proof. Tij := {(s, t ) | s  t in state S  Ci leads to state S  Cj} Define transition probability between Ci, Cj CS0 as</p>
    <p>P (Ci, Cj ) =</p>
    <p>(s,t)Tij</p>
    <p>st</p>
    <p>Since (s, t ) Tij  (t, s ) Tji and  is symmetric, therefore P is a symmetric stochastic matrix. = uniform distribution over CS0 is stationary w.r.t. P .</p>
    <p>Corollary If M is an ergodic Markov chain induced by a symmetric transaction rate matrix , it has a uniform steady state distribution over C.</p>
  </div>
  <div class="page">
    <p>Analysis Steady-state Distribution</p>
    <p>Proof. Tij := {(s, t ) | s  t in state S  Ci leads to state S  Cj} Define transition probability between Ci, Cj CS0 as</p>
    <p>P (Ci, Cj ) =</p>
    <p>(s,t)Tij</p>
    <p>st</p>
    <p>Since (s, t ) Tij  (t, s ) Tji and  is symmetric, therefore P is a symmetric stochastic matrix. = uniform distribution over CS0 is stationary w.r.t. P .</p>
    <p>Corollary If M is an ergodic Markov chain induced by a symmetric transaction rate matrix , it has a uniform steady state distribution over C.</p>
  </div>
  <div class="page">
    <p>Analysis Steady-state Distribution</p>
    <p>Proof. Tij := {(s, t ) | s  t in state S  Ci leads to state S  Cj} Define transition probability between Ci, Cj CS0 as</p>
    <p>P (Ci, Cj ) =</p>
    <p>(s,t)Tij</p>
    <p>st</p>
    <p>Since (s, t ) Tij  (t, s ) Tji and  is symmetric, therefore P is a symmetric stochastic matrix. = uniform distribution over CS0 is stationary w.r.t. P .</p>
    <p>Corollary If M is an ergodic Markov chain induced by a symmetric transaction rate matrix , it has a uniform steady state distribution over C.</p>
  </div>
  <div class="page">
    <p>Analysis Centralized Payment Infrastructure</p>
  </div>
  <div class="page">
    <p>Analysis Centralized Payment Infrastructure</p>
  </div>
  <div class="page">
    <p>Analysis Centralized Payment Infrastructure</p>
  </div>
  <div class="page">
    <p>Analysis Centralized Payment Infrastructure</p>
    <p>Convert Credit Network  Centralized Model</p>
    <p>u, cru =  v</p>
    <p>cvu</p>
    <p>= Total credit in the system is conserved during conversion</p>
  </div>
  <div class="page">
    <p>Analysis Centralized Payment Infrastructure</p>
    <p>Convert Credit Network  Centralized Model</p>
    <p>u, cru =  v</p>
    <p>cvu</p>
    <p>= Total credit in the system is conserved during conversion</p>
  </div>
  <div class="page">
    <p>Analysis Centralized Payment Infrastructure</p>
    <p>M has ( mc+m1</p>
    <p>m1 )</p>
    <p>states</p>
  </div>
  <div class="page">
    <p>Analysis Centralized Payment Infrastructure</p>
    <p>M has ( mc+m1</p>
    <p>m1 )</p>
    <p>states</p>
  </div>
  <div class="page">
    <p>Analysis Centralized Payment Infrastructure</p>
    <p>Theorem If M is ergodic and  is symmetric, then M has a uniform steady-state distribution.</p>
    <p>Corollary If M is ergodic and  is symmetric, then the steady-state success probability is c/(c + 1).</p>
  </div>
  <div class="page">
    <p>Analysis Centralized Payment Infrastructure</p>
    <p>Theorem If M is ergodic and  is symmetric, then M has a uniform steady-state distribution.</p>
    <p>Corollary If M is ergodic and  is symmetric, then the steady-state success probability is c/(c + 1).</p>
  </div>
  <div class="page">
    <p>Liquidity Comparison</p>
    <p>Credit Network Centralized System</p>
    <p>Star-network (1/c ) (1/c ) Complete Graph (1/nc ) (1/nc )</p>
    <p>Gc (n, p) 2 (1/npc ) (1/npc )</p>
    <p>Table: Steady-state Failure Probability in Credit Network v/s Centralized System</p>
  </div>
  <div class="page">
    <p>Simulations</p>
    <p>Setup</p>
    <p>Repeated transactions on Gc (n, p) and PA graphs.  Stopping criterion: success-rate in consecutive time windows</p>
    <p>Studied effect of varying network size, network density, and credit capacity</p>
    <p>For each run, recorded following metrics:  Number of (weakly) connected components  Avg. path length of successful transactions  Number of sink/source nodes</p>
    <p>Averaged metrics over 100 runs</p>
  </div>
  <div class="page">
    <p>Simulations Effect of Variation in Credit Capacity</p>
    <p>n = 100; p = 0.10; d = 5</p>
    <p>c</p>
    <p>s u c c e s s p</p>
    <p>ro b a b il it y</p>
    <p>(a)</p>
    <p>c</p>
    <p>a v g . p a th</p>
    <p>le n g th</p>
    <p>o f s u c c e s s fu</p>
    <p>l tr</p>
    <p>a n s a c ti o n s</p>
    <p>(b)</p>
    <p>c</p>
    <p>a v g . n u m</p>
    <p>b e r</p>
    <p>o f s in</p>
    <p>k n</p>
    <p>o d e s</p>
    <p>(c)</p>
    <p>G(n,p)</p>
    <p>Pref. Attachment</p>
  </div>
  <div class="page">
    <p>Simulations Effect of Variation in Credit Capacity</p>
    <p>n = 100; p = 0.10; d = 5</p>
    <p>c</p>
    <p>s u c c e s s p</p>
    <p>ro b a b il it y</p>
    <p>(a)</p>
    <p>c</p>
    <p>a v g . p a th</p>
    <p>le n g th</p>
    <p>o f s u c c e s s fu</p>
    <p>l tr</p>
    <p>a n s a c ti o n s</p>
    <p>(b)</p>
    <p>c</p>
    <p>a v g . n u m</p>
    <p>b e r</p>
    <p>o f s in</p>
    <p>k n</p>
    <p>o d e s</p>
    <p>(c)</p>
    <p>G(n,p)</p>
    <p>Pref. Attachment</p>
  </div>
  <div class="page">
    <p>Simulations Effect of Variation in Network Size</p>
    <p>c = 1; p = 0.10; d = 5</p>
    <p>(a)</p>
    <p>s u</p>
    <p>c c e</p>
    <p>s s p</p>
    <p>ro b</p>
    <p>a b</p>
    <p>il it y</p>
    <p>n</p>
    <p>a v g</p>
    <p>. p</p>
    <p>a th</p>
    <p>le n</p>
    <p>g th</p>
    <p>o f</p>
    <p>s u</p>
    <p>c c e</p>
    <p>s s fu</p>
    <p>l tr</p>
    <p>a n</p>
    <p>s a</p>
    <p>c ti o</p>
    <p>n s</p>
    <p>n</p>
    <p>(b)</p>
    <p>a v g</p>
    <p>. n</p>
    <p>u m</p>
    <p>b e</p>
    <p>r o</p>
    <p>f s in</p>
    <p>k n</p>
    <p>o d</p>
    <p>e s</p>
    <p>n</p>
    <p>G(n,p)</p>
    <p>Pref. Attachment</p>
    <p>G(n,p) with np=const.</p>
  </div>
  <div class="page">
    <p>Simulations Effect of Variation in Network Size</p>
    <p>c = 1; p = 0.10; d = 5</p>
    <p>(a)</p>
    <p>s u</p>
    <p>c c e</p>
    <p>s s p</p>
    <p>ro b</p>
    <p>a b</p>
    <p>il it y</p>
    <p>n</p>
    <p>a v g</p>
    <p>. p</p>
    <p>a th</p>
    <p>le n</p>
    <p>g th</p>
    <p>o f</p>
    <p>s u</p>
    <p>c c e</p>
    <p>s s fu</p>
    <p>l tr</p>
    <p>a n</p>
    <p>s a</p>
    <p>c ti o</p>
    <p>n s</p>
    <p>n</p>
    <p>(b)</p>
    <p>a v g</p>
    <p>. n</p>
    <p>u m</p>
    <p>b e</p>
    <p>r o</p>
    <p>f s in</p>
    <p>k n</p>
    <p>o d</p>
    <p>e s</p>
    <p>n</p>
    <p>G(n,p)</p>
    <p>Pref. Attachment</p>
    <p>G(n,p) with np=const.</p>
  </div>
  <div class="page">
    <p>Open Problems</p>
    <p>Effect of node failures on liquidity and how it varies with network topology</p>
    <p>Effect of non-zero payment routing fees on liquidity  Endow nodes with rationality: how do nodes initialize and</p>
    <p>update trust values?</p>
    <p>Questions?</p>
  </div>
  <div class="page">
    <p>Open Problems</p>
    <p>Effect of node failures on liquidity and how it varies with network topology</p>
    <p>Effect of non-zero payment routing fees on liquidity  Endow nodes with rationality: how do nodes initialize and</p>
    <p>update trust values?</p>
    <p>Questions?</p>
  </div>
  <div class="page">
    <p>Dimitri B. DeFigueiredo and Earl T. Barr Trustdavis: A non-exploitable online reputation system, CEC 2005</p>
    <p>Arpita Ghosh, Mohammad Mahdian, Daniel M. Reeves, David M. Pennock, and Ryan Fugger Mechanism design on trust networks, WINE 2007.</p>
    <p>Mohammad Mahdian Fighting censorship with algorithms, FUN 2010.</p>
  </div>
</Presentation>
