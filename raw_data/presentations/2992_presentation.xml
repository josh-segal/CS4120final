<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Firmament Fast, centralized cluster scheduling at scale</p>
    <p>Ionel Gog Malte Schwarzkopf Adam Gleave</p>
    <p>Robert N. M. Watson Steven Hand</p>
  </div>
  <div class="page">
    <p>Meet Sesame, Inc.</p>
    <p>Sesames employees run:</p>
    <p>Sesame Inc</p>
  </div>
  <div class="page">
    <p>The cluster scheduler must achieve:</p>
    <p>no idle resources</p>
    <p>Ideal scheduler</p>
  </div>
  <div class="page">
    <p>State of the art</p>
    <p>Centralized vs. distributed</p>
    <p>Good task placements</p>
    <p>Low scheduling latency</p>
    <p>Centralized Sophisticated algorithms</p>
    <p>[Borg, Quincy, Quasar]</p>
    <p>Distributed Simple heuristics</p>
    <p>[Sparrow, Tarcil, Yaq-d]</p>
    <p>Cant get both good placements and low latency for the entire workload!</p>
    <p>Hybrid Split workload, provide either</p>
    <p>[Mercury, Hawk, Eagle]</p>
  </div>
  <div class="page">
    <p>Firmament provides a solution!</p>
    <p>Centralized vs. distributed</p>
    <p>Centralized architecture</p>
    <p>Good task placements</p>
    <p>Low task scheduling latency</p>
    <p>Scales to 10,000+ machines</p>
  </div>
  <div class="page">
    <p>Finds optimal task placements</p>
    <p>Min-cost flow-based centralized scheduler</p>
    <p>[S O</p>
    <p>SP 2</p>
    <p>Quincy: Fair Scheduling for</p>
    <p>Distributed Computing Clusters</p>
    <p>Flow-based intro</p>
    <p>Copyright - Heather Gwinn</p>
  </div>
  <div class="page">
    <p>Min-cost flow scheduler</p>
    <p>Rack 1 Rack 2</p>
    <p>Interactive</p>
    <p>Batch</p>
    <p>Service</p>
    <p>Flow-based schedules all tasks</p>
    <p>Preference for first rack Me too!</p>
  </div>
  <div class="page">
    <p>Min-cost flow scheduler</p>
    <p>Rack 1 Rack 2</p>
    <p>Interactive</p>
    <p>Batch</p>
    <p>Service</p>
    <p>Schedules all tasks at the same time</p>
    <p>Flow-based schedules all tasks</p>
  </div>
  <div class="page">
    <p>Min-cost flow scheduler</p>
    <p>Rack 1 Rack 2</p>
    <p>Interactive</p>
    <p>Batch</p>
    <p>Service</p>
    <p>Flow-based schedules all tasks</p>
    <p>Migrate Preempt</p>
    <p>Considers tasks for migration or preemption</p>
  </div>
  <div class="page">
    <p>Min-cost flow scheduler</p>
    <p>Rack 1 Rack 2</p>
    <p>Interactive</p>
    <p>Batch</p>
    <p>Service</p>
    <p>Flow-based schedules all tasks</p>
    <p>Globally optimal placement!</p>
  </div>
  <div class="page">
    <p>T 0</p>
    <p>Tasks Machines</p>
    <p>Introduction to min-cost flow scheduling</p>
    <p>Flow scheduling: tasks &amp; machines</p>
    <p>T 1</p>
    <p>T 2</p>
    <p>T 3</p>
    <p>T 4</p>
    <p>T 5</p>
    <p>M 0</p>
    <p>M 1</p>
    <p>M 2</p>
    <p>M 3</p>
    <p>M 4</p>
    <p>M 5</p>
  </div>
  <div class="page">
    <p>Introduction to min-cost flow scheduling</p>
    <p>Flow scheduling: tasks to machines</p>
    <p>T 0 M</p>
    <p>M 1</p>
    <p>M 2</p>
    <p>M 3</p>
    <p>M 4</p>
    <p>M 5</p>
    <p>T 1</p>
    <p>T 2</p>
    <p>T 3</p>
    <p>T 4</p>
    <p>T 5</p>
  </div>
  <div class="page">
    <p>Introduction to min-cost flow scheduling</p>
    <p>T 0 M</p>
    <p>M 1</p>
    <p>M 2</p>
    <p>M 3</p>
    <p>M 4</p>
    <p>M 5</p>
    <p>T 1</p>
    <p>T 2</p>
    <p>T 3</p>
    <p>T 4</p>
    <p>T 5</p>
    <p>Flow scheduling: zoom in</p>
    <p>Cost: 3 Cost: 5</p>
  </div>
  <div class="page">
    <p>Introduction to min-cost flow scheduling</p>
    <p>Flow scheduling: Min costs for all</p>
    <p>T 0 M</p>
    <p>M 1</p>
    <p>M 2</p>
    <p>M 3</p>
    <p>M 4</p>
    <p>M 5</p>
    <p>T 1</p>
    <p>T 2</p>
    <p>T 3</p>
    <p>T 4</p>
    <p>T 5</p>
    <p>Cost: 3</p>
    <p>Cost: 5</p>
    <p>Cost: 7 Cos</p>
    <p>t: 5</p>
    <p>Cost: 3 Cos</p>
    <p>t: 9C os</p>
    <p>t: 6</p>
    <p>Cost: 2</p>
    <p>Cost: 6</p>
    <p>Min-cost flow places tasks with minimum overall cost</p>
  </div>
  <div class="page">
    <p>Introduction to min-cost flow scheduling</p>
    <p>T 0 M</p>
    <p>M 1</p>
    <p>M 2</p>
    <p>M 3</p>
    <p>M 4</p>
    <p>M 5</p>
    <p>T 1</p>
    <p>T 2</p>
    <p>T 3</p>
    <p>T 4</p>
    <p>T 5</p>
    <p>Sink</p>
    <p>S</p>
    <p>Flow demand: 6</p>
    <p>Cost: 3</p>
    <p>Cost: 5</p>
    <p>Cost: 7 Cos</p>
    <p>t: 5</p>
    <p>Cost: 3 Cos</p>
    <p>t: 9C os</p>
    <p>t: 6</p>
    <p>Cost: 2</p>
    <p>Cost: 6</p>
    <p>Flow supply 1</p>
    <p>FLOW</p>
    <p>Flow scheduling: pushing flow for n tasks</p>
  </div>
  <div class="page">
    <p>S</p>
    <p>Introduction to min-cost flow scheduling</p>
    <p>Flow scheduling: pushing flow for n tasks</p>
    <p>T 0 M</p>
    <p>M 1</p>
    <p>M 2</p>
    <p>M 3</p>
    <p>M 4</p>
    <p>M 5</p>
    <p>T 1</p>
    <p>T 2</p>
    <p>T 3</p>
    <p>T 4</p>
    <p>T 5</p>
    <p>Flow supply 0</p>
    <p>Flow demand: 0</p>
  </div>
  <div class="page">
    <p>How well does the Quincy</p>
    <p>approach scale?</p>
    <p>Quincy doesnt scale: intro</p>
  </div>
  <div class="page">
    <p>Simulated Quincy using Google trace, 50% utilization</p>
    <p>be tte</p>
    <p>r</p>
    <p>Google cluster</p>
    <p>Quincy doesnt scale: empty figure</p>
  </div>
  <div class="page">
    <p>Simulated Quincy using Google trace, 50% utilization</p>
    <p>be tte</p>
    <p>r</p>
    <p>Too slow! 30% of tasks wait to be scheduled for over 33% of their runtime and waste resources 19</p>
    <p>Quincy doesnt scale</p>
  </div>
  <div class="page">
    <p>Simulated Quincy using Google trace, 50% utilization Goal: sub-second scheduling latency in</p>
    <p>common case</p>
    <p>be tte</p>
    <p>r</p>
    <p>Quincy doesnt scale</p>
    <p>Goal</p>
  </div>
  <div class="page">
    <p>Contributions</p>
    <p>Firmament contributions</p>
    <p>Low task scheduling latency  Uses best suited min-cost flow algorithm  Incrementally recomputes the solution</p>
    <p>Good task placement  Same optimal placements as Quincy  Customizable scheduling policies</p>
  </div>
  <div class="page">
    <p>Scheduling policy</p>
    <p>sc he</p>
    <p>du le</p>
    <p>r</p>
    <p>m as</p>
    <p>te r</p>
    <p>Task table</p>
    <p>Task statistics</p>
    <p>Agent Agent</p>
    <p>Cluster topology</p>
    <p>m ac</p>
    <p>hi ne</p>
    <p>m ac</p>
    <p>hi ne</p>
    <p>Scheduler Scheduling policy</p>
    <p>Flow graph</p>
    <p>Scheduling policy</p>
    <p>Firmament scheduler: intro</p>
  </div>
  <div class="page">
    <p>class QuincyPolicy {</p>
    <p>Cost_t TaskToResourceNodeCost( TaskID_t task_id) { return task_unscheduled_time * quincy_wait_time_factor; } ... }</p>
    <p>Specifying scheduling policies</p>
    <p>Firmament policy specification</p>
    <p>Defines flow graph</p>
    <p>N.B: More details in the paper.</p>
  </div>
  <div class="page">
    <p>Scheduling policy</p>
    <p>sc he</p>
    <p>du le</p>
    <p>r</p>
    <p>m as</p>
    <p>te r</p>
    <p>Task table</p>
    <p>Task statistics</p>
    <p>Agent Agent</p>
    <p>Cluster topology</p>
    <p>m ac</p>
    <p>hi ne</p>
    <p>m ac</p>
    <p>hi ne</p>
    <p>Scheduler</p>
    <p>Flow graph</p>
    <p>Scheduling policy</p>
    <p>Defines graph</p>
    <p>Flow graph</p>
    <p>Firmament scheduler: intro</p>
  </div>
  <div class="page">
    <p>Scheduling policy</p>
    <p>sc he</p>
    <p>du le</p>
    <p>r</p>
    <p>m as</p>
    <p>te r</p>
    <p>Task table</p>
    <p>Task statistics</p>
    <p>Agent Agent</p>
    <p>Cluster topology</p>
    <p>m ac</p>
    <p>hi ne</p>
    <p>m ac</p>
    <p>hi ne</p>
    <p>Scheduler Scheduling policy</p>
    <p>Flow graph</p>
    <p>Min-cost, max-flow solver</p>
    <p>Submits graph</p>
    <p>Firmament scheduler: submit to solver</p>
    <p>Defines graph</p>
  </div>
  <div class="page">
    <p>Scheduling policy</p>
    <p>sc he</p>
    <p>du le</p>
    <p>r</p>
    <p>m as</p>
    <p>te r</p>
    <p>Task table</p>
    <p>Task statistics</p>
    <p>Agent Agent</p>
    <p>Cluster topology</p>
    <p>m ac</p>
    <p>hi ne</p>
    <p>m ac</p>
    <p>hi ne</p>
    <p>Scheduler Scheduling policy</p>
    <p>Flow graph</p>
    <p>Min-cost max-flow solver</p>
    <p>Firmament scheduler: slow min-cost flow solver</p>
    <p>Defines graph</p>
    <p>Submits graph Most time spent here</p>
  </div>
  <div class="page">
    <p>Algorithm Worst-case complexity Cost scaling O(V2Elog(VC))</p>
    <p>E: number of arcs V: number of nodes U: largest arc capacity C: largest cost value E &gt; V &gt; C  U</p>
    <p>Algorithms complexity: Successive shortest path</p>
    <p>Used by Quincy</p>
  </div>
  <div class="page">
    <p>be tte</p>
    <p>r</p>
    <p>Cost scaling is too slow beyond 1,000 machines</p>
    <p>Subsampled Google trace, 50% slot utilization [Quincy policy]</p>
    <p>T oo</p>
    <p>s lo</p>
    <p>w !</p>
    <p>Goal</p>
    <p>Algorithms results: Cost scaling</p>
  </div>
  <div class="page">
    <p>Algorithm Worst-case complexity Cost scaling O(V2Elog(VC))</p>
    <p>Successive shortest path O(V2Ulog(V))</p>
    <p>E: number of arcs V: number of nodes U: largest arc capacity C: largest cost value E &gt; V &gt; C  U</p>
    <p>Algorithms complexity: Cost scaling</p>
    <p>Lower worst-case complexity</p>
  </div>
  <div class="page">
    <p>Successive shortest path only scales to ~100 machines</p>
    <p>be tte</p>
    <p>r</p>
    <p>T oo</p>
    <p>s lo</p>
    <p>w !</p>
    <p>Goal</p>
    <p>Algorithms results: successive shortest path</p>
    <p>Subsampled Google trace, 50% slot utilization [Quincy policy]</p>
  </div>
  <div class="page">
    <p>Algorithm Worst-case complexity Cost scaling O(V2Elog(VC))</p>
    <p>Successive shortest path O(V2Ulog(V))</p>
    <p>Relaxation O(E3CU2)</p>
    <p>E: number of arcs V: number of nodes U: largest arc capacity C: largest cost value E &gt; V &gt; C  U</p>
    <p>Highest complexity</p>
    <p>Algorithms complexity: Relaxation</p>
  </div>
  <div class="page">
    <p>be tte</p>
    <p>r</p>
    <p>Relaxation meets our sub-second latency goal 32</p>
    <p>Goal</p>
    <p>P er</p>
    <p>fe ct</p>
    <p>!</p>
    <p>Algorithms results: Relaxation</p>
    <p>Subsampled Google trace, 50% slot utilization [Quincy policy]</p>
  </div>
  <div class="page">
    <p>M 0</p>
    <p>M 1</p>
    <p>R 0</p>
    <p>M 2</p>
    <p>M 3</p>
    <p>R 1</p>
    <p>S T</p>
    <p>X</p>
    <p>T 0</p>
    <p>T 1</p>
    <p>T 3</p>
    <p>T 4</p>
    <p>Single-ish pass flow push</p>
    <p>Relaxation is well-suited to the graph structure 33</p>
    <p>Why is Relaxation fast?</p>
    <p>Relaxation single-ish pass</p>
  </div>
  <div class="page">
    <p>M 0</p>
    <p>M 1</p>
    <p>M 2</p>
    <p>M 3</p>
    <p>T 2</p>
    <p>T 0</p>
    <p>T 1</p>
    <p>T 3</p>
    <p>T 4</p>
    <p>S Cap</p>
    <p>acity : 1 t</p>
    <p>ask</p>
    <p>Relaxation suffers in pathological edge cases</p>
    <p>Slow Relaxation: tasks -&gt; machine</p>
    <p>Machine utilization</p>
    <p>high medium</p>
  </div>
  <div class="page">
    <p>M 0</p>
    <p>M 1</p>
    <p>M 2</p>
    <p>M 3</p>
    <p>T 2</p>
    <p>T 0</p>
    <p>T 1</p>
    <p>T 3</p>
    <p>T 4</p>
    <p>S</p>
    <p>Relaxation suffers in pathological edge cases</p>
    <p>Slow Relaxation: machine -&gt; sink</p>
    <p>Cap acity</p>
    <p>: 1 t ask</p>
    <p>Machine utilization</p>
    <p>high medium</p>
  </div>
  <div class="page">
    <p>Machine utilization</p>
    <p>high medium</p>
    <p>M 0</p>
    <p>M 1</p>
    <p>M 2</p>
    <p>M 3</p>
    <p>T 2</p>
    <p>T 0</p>
    <p>T 1</p>
    <p>T 3</p>
    <p>T 4</p>
    <p>S</p>
    <p>Relaxation suffers in pathological edge cases</p>
    <p>Slow Relaxation: machine -&gt; tasks</p>
    <p>Relaxation cannot push flow in a single pass any more 36</p>
    <p>Cap acity</p>
    <p>: 0 t asks</p>
  </div>
  <div class="page">
    <p>How bad does Relaxations edge</p>
    <p>case get? Experimental setup:  Simulated 12,500 machine cluster  Used the Quincy scheduling policy  Utilization &gt;90% to oversubscribed cluster</p>
    <p>High utilization introduction</p>
  </div>
  <div class="page">
    <p>Quincy, 12,500 machines cluster, job of increasing size be</p>
    <p>tte r</p>
    <p>High utilization empty figure</p>
  </div>
  <div class="page">
    <p>Relaxations runtime increases with utilization</p>
    <p>Quincy, 12,500 machines cluster, job of increasing size be</p>
    <p>tte r</p>
    <p>High utilization Relaxation</p>
  </div>
  <div class="page">
    <p>Cost scaling is unaffected by high utilization</p>
    <p>be tte</p>
    <p>r Quincy, 12,500 machines cluster, job of increasing size</p>
    <p>Cost scaling is faster Best</p>
    <p>High utilization Relaxation &amp; Cost scaling</p>
  </div>
  <div class="page">
    <p>Sedulin g policy</p>
    <p>sc he</p>
    <p>du le r</p>
    <p>Scheduling policy</p>
    <p>Flow graph</p>
    <p>Min-cost, max-flow solver</p>
    <p>Input graph</p>
    <p>M in</p>
    <p>-c os</p>
    <p>t m ax</p>
    <p>-f lo</p>
    <p>w s</p>
    <p>ol ve</p>
    <p>r</p>
    <p>Cost scalingRelaxation</p>
    <p>Input graph</p>
    <p>Output flow</p>
    <p>Solver runs both algorithms</p>
  </div>
  <div class="page">
    <p>be tte</p>
    <p>r Quincy, 12,500 machines cluster, job of increasing size</p>
    <p>Algorithm runtime is still high at utilization &gt; 94% 42</p>
    <p>High utilization push-down runtime</p>
  </div>
  <div class="page">
    <p>Sedulin g policy</p>
    <p>sc he</p>
    <p>du le r</p>
    <p>Scheduling policy</p>
    <p>Flow graph</p>
    <p>Min-cost, max-flow solver</p>
    <p>M in</p>
    <p>-c os</p>
    <p>t m ax</p>
    <p>-f lo</p>
    <p>w s</p>
    <p>ol ve</p>
    <p>r</p>
    <p>Cost scaling</p>
    <p>Graph state</p>
    <p>Input graph</p>
    <p>State discarded Output flow</p>
    <p>Incremental cost scaling introduction</p>
  </div>
  <div class="page">
    <p>Sedulin g policy</p>
    <p>sc he</p>
    <p>du le r</p>
    <p>Scheduling policy</p>
    <p>Flow graph</p>
    <p>Min-cost, max-flow solver</p>
    <p>Cost scaling</p>
    <p>M in</p>
    <p>-c os</p>
    <p>t m ax</p>
    <p>-f lo</p>
    <p>w s</p>
    <p>ol ve</p>
    <p>r</p>
    <p>Graph state</p>
    <p>Output flow</p>
    <p>Input graph</p>
    <p>Previous graph state</p>
    <p>Graph changes</p>
    <p>Incremental cost scaling</p>
  </div>
  <div class="page">
    <p>Quincy, 12,500 machines cluster, job of increasing size be</p>
    <p>tte r</p>
    <p>Incremental cost scaling is ~2x faster 45</p>
    <p>Incremental Cost scaling results</p>
  </div>
  <div class="page">
    <p>Note: man</p>
    <p>y add ition</p>
    <p>al</p>
    <p>expe rime</p>
    <p>nts i n the</p>
    <p>pape r.</p>
    <p>Evaluation</p>
    <p>Centralized vs. distributed</p>
    <p>Good task placements</p>
    <p>Low scheduling latency</p>
    <p>Centralized Sophisticated algorithms</p>
    <p>e.g., Borg, Quincy, Quasar</p>
    <p>Distributed Simple heuristics</p>
    <p>e.g., Sparrow, Tarcil</p>
    <p>Does Firmament choose good placements with</p>
    <p>low latency?</p>
  </div>
  <div class="page">
    <p>How do Firmaments placements compare to</p>
    <p>other schedulers?</p>
    <p>Experimental setup:  Homogeneous 40-machine cluster, 10G network  Mixed batch/service/interactive workload</p>
    <p>Workload-mix intro</p>
  </div>
  <div class="page">
    <p>SCHEDULER</p>
    <p>Interactive</p>
    <p>Service</p>
    <p>M 1</p>
    <p>M 2</p>
    <p>M 3</p>
    <p>M 4</p>
    <p>M 8</p>
    <p>M 7</p>
    <p>M 6</p>
    <p>M 5</p>
    <p>M 9</p>
    <p>M 10</p>
    <p>R 1</p>
    <p>R 2</p>
    <p>Agg</p>
    <p>Network utilization: low medium high 48</p>
    <p>Workload mix-service task figure</p>
  </div>
  <div class="page">
    <p>better</p>
    <p>Workload-mix Sparrow</p>
    <p>Firmament chooses good placements</p>
  </div>
  <div class="page">
    <p>Sparrow is unaware of resource utilization 50</p>
    <p>better</p>
    <p>Workload-mix Sparrow</p>
    <p>Firmament chooses good placements</p>
  </div>
  <div class="page">
    <p>Centralized Kubernetes and Docker still suffer 51</p>
    <p>better</p>
    <p>Workload-mix Docker</p>
    <p>Firmament chooses good placements</p>
  </div>
  <div class="page">
    <p>better</p>
    <p>Avoided co-location interference</p>
    <p>Workload-mix Firmament</p>
    <p>Firmament chooses good placements</p>
    <p>Firmament outperforms centralized and distributed schedulers</p>
  </div>
  <div class="page">
    <p>How well does Firmament handle</p>
    <p>challenging workloads?</p>
    <p>Experimental setup:  Simulated 12,500 machine Google cluster  Used the centralized Quincy scheduling policy  Utilization varies between 75% and 95%</p>
    <p>Google acceleration introduction</p>
  </div>
  <div class="page">
    <p>Google acceleration empty figure</p>
    <p>Firmament handles challenging workloads at low latency</p>
    <p>Google trace, 12,500 machines, utilization between 75% and 90%</p>
    <p>Simulate interactive workloads by scaling down task runtimes</p>
    <p>be tte</p>
    <p>r</p>
    <p>Median task runtime: 420s</p>
    <p>Median task runtime: 1.7s</p>
  </div>
  <div class="page">
    <p>Google trace, 12,500 machines, utilization between 75% and 90% 55</p>
    <p>be tte</p>
    <p>r</p>
    <p>Average latency is too high even without many short tasks</p>
    <p>Google acceleration Cost scaling</p>
    <p>Firmament handles challenging workloads at low latency</p>
  </div>
  <div class="page">
    <p>Google trace, 12,500 machines, utilization between 75% and 90%</p>
    <p>Latency with a 250x acceleration: 75th percentile: 2 sec</p>
    <p>maximum: 57 sec 56</p>
    <p>be tte</p>
    <p>r Firmament handles challenging workloads at low latency</p>
    <p>Google acceleration Relaxation</p>
  </div>
  <div class="page">
    <p>Google trace, 12,500 machines, utilization between 75% and 90% 57</p>
    <p>Firmaments common-case latency is sub-second even at 250x acceleration</p>
    <p>be tte</p>
    <p>r</p>
    <p>Google acceleration Firmament</p>
    <p>Firmament handles challenging workloads at low latency</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>firmament.io</p>
    <p>Conclusions</p>
    <p>Low task scheduling latency  Uses best algorithm at all times  Incrementally recomputes solution</p>
    <p>Good task placement  Same optimal placements as Quincy  Customizable scheduling policies</p>
    <p>Open-source and available at:</p>
  </div>
</Presentation>
