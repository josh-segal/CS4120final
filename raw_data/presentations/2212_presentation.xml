<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Reducing NVM Writes with Optimized Shadow Paging</p>
    <p>Yuanjiang Ni, Jishen Zhao, Daniel Bittman, Ethan L. Miller Center for Research in Storage Systems</p>
    <p>University of California, Santa Cruz</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Emerging Technology</p>
    <p>Byte-Addressable High speed</p>
    <p>Small capacity</p>
    <p>Block-Addressable Slow</p>
    <p>Volatile Durable Large Capacity</p>
    <p>Memory Storage</p>
    <p>BNVM</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>New Storage Architecture</p>
    <p>HDD/SSD</p>
    <p>DRAM</p>
    <p>read()/write()</p>
    <p>fsync(), etc</p>
    <p>BNVM</p>
    <p>load/store cache-line flush</p>
    <p>page</p>
    <p>cache-line</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Crash Consistency</p>
    <p>XBEGIN</p>
    <p>A.account -= 500,000</p>
    <p>B.account += 500,000</p>
    <p>XEND</p>
    <p>A 1,000,000</p>
    <p>B 1,000,000</p>
    <p>A 500,000</p>
    <p>B 1,000,000</p>
    <p>A, B lost money!Crash-consistency is a must!</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Leverage byte-addressability  e.g Fine-grained logging.</p>
    <p>Opportunities</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Leverage byte-addressability  e.g Fine-grained logging.</p>
    <p>Leverage virtual memory  Indirection is necessary for many techniques  Can we directly leverage virtual memory indirection?</p>
    <p>Opportunities</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Leverage byte-addressability  e.g Fine-grained logging.</p>
    <p>Leverage virtual memory  Indirection is necessary for many techniques  Can we directly leverage virtual memory indirection?</p>
    <p>Explore Hardware Support  Intel proposes instructions such as clwb for especially persistent memory.  Other HW supports?</p>
    <p>Opportunities</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Extra writes to NVM are bad.  Performance  Endurance</p>
    <p>Inefficiencies of Existing Approaches</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Extra writes to NVM are bad.  Performance  Endurance</p>
    <p>Logging  Write the actual data twice</p>
    <p>Inefficiencies of Existing Approaches</p>
    <p>A Data</p>
    <p>B</p>
    <p>C D</p>
    <p>A B Log</p>
    <p>Write twice Logging</p>
    <p>X Extra Writes Y Newly Written Z Data from Last Commit</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Extra writes to NVM are bad.  Performance  Endurance</p>
    <p>Logging  Write the actual data twice</p>
    <p>shadow paging  Copy unmodified data</p>
    <p>Inefficiencies of Existing Approaches</p>
    <p>A Data</p>
    <p>B</p>
    <p>C D</p>
    <p>A B</p>
    <p>A B</p>
    <p>C D</p>
    <p>A B</p>
    <p>C D</p>
    <p>P0 P1</p>
    <p>Log Write twice</p>
    <p>Copy unmodified</p>
    <p>Logging</p>
    <p>Shadow Paging</p>
    <p>X Extra Writes Y Newly Written Z Data from Last Commit</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Extra writes to NVM are bad.  Performance  Endurance</p>
    <p>Logging  Write the actual data twice</p>
    <p>shadow paging  Copy unmodified data</p>
    <p>Our approach - OSP</p>
    <p>Inefficiencies of Existing Approaches</p>
    <p>A Data</p>
    <p>B</p>
    <p>C D</p>
    <p>A B</p>
    <p>A B</p>
    <p>C D</p>
    <p>A B</p>
    <p>C D</p>
    <p>P0 P1</p>
    <p>Log Write twice</p>
    <p>Copy unmodified</p>
    <p>A</p>
    <p>C</p>
    <p>P0 P1 B</p>
    <p>D</p>
    <p>AB</p>
    <p>Logging</p>
    <p>Shadow Paging</p>
    <p>OSP</p>
    <p>X Extra Writes Y Newly Written Z Data from Last Commit</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Cache-line Level Mapping</p>
    <p>Cant simply reduce page size! Track modifications at cache line level?</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Cache-line Level Mapping</p>
    <p>P0</p>
    <p>P1</p>
    <p>Two bits per cache line Committed Bit - Where is the old state ? Updated Bit - has this cache line been updated?</p>
    <p>Only required when pages are being actively updated!</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Wider TLB entry  Committed bitmap  Updated bitmap  Additional PPN</p>
    <p>TLB Extension</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Wider TLB entry  Committed bitmap  Updated bitmap  Additional PPN</p>
    <p>Minimal impact on run-time performance.  Require only few gate delays  Done in parallel with cache access (e.g. VIPT caches)</p>
    <p>TLB Extension</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Wider TLB entry  Committed bitmap  Updated bitmap  Additional PPN</p>
    <p>Minimal impact on run-time performance.  Require only few gate delays  Done in parallel with cache access (e.g. VIPT caches)</p>
    <p>Need not change the PTE  Additional information required only when pages are actively being updated.</p>
    <p>TLB Extension</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Example</p>
    <p>P0</p>
    <p>P1</p>
    <p>VPN P0 P1 Committed Updated</p>
    <p>V P0 P1 1010 0000 Wider TLB entry</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Read the cache line 0</p>
    <p>P0</p>
    <p>P1</p>
    <p>Read from P ( Committed_bit XOR updated_bit )</p>
    <p>VPN P0 P1 Committed Updated</p>
    <p>V P0 P1 1010 0000 Wider TLB entry</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Update the cache line 0</p>
    <p>P0</p>
    <p>P1</p>
    <p>VPN P0 P1 Committed Updated</p>
    <p>V P0 P1 1010 1000 Wider TLB entry</p>
    <p>Writes go to P ( Committed_bit XOR 1 ) And, set the updated_bit</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Update the cache line 1</p>
    <p>P0</p>
    <p>P1</p>
    <p>VPN P0 P1 Committed Updated</p>
    <p>V P0 P1 1010 1100 Wider TLB entry</p>
    <p>And, set the updated_bit Writes go to P ( Committed_bit XOR 1 )</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Commit</p>
    <p>P0</p>
    <p>P1</p>
    <p>P0</p>
    <p>P1</p>
    <p>Before After</p>
    <p>VPN P0 P1 Committed Updated</p>
    <p>V P0 P1 1010 1100 VPN P0 P1 Committed Updated</p>
    <p>V P0 P1 0110 0000</p>
    <p>committed bitmap = (committed bitmap XOR updated bitmap) And, clear the updated bitmap</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Abort</p>
    <p>P0</p>
    <p>P1</p>
    <p>P0</p>
    <p>P1</p>
    <p>Before After</p>
    <p>VPN P0 P1 Committed Updated</p>
    <p>V P0 P1 1010 1100 VPN P0 P1 Committed Updated</p>
    <p>V P0 P1 1010 0000</p>
    <p>Clear the updated bitmap</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Double physical pages can waste memory space  Reduce storage cost  Consolidating virtual pages that are not being actively updated.  Copy valid data into one page and free the other one.  TLB eviction identifies inactive virtual pages.</p>
    <p>Page Consolidation is not a per-transaction overhead.</p>
    <p>Page Consolidation</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Multi-page Atomicity</p>
    <p>VPN Committed</p>
    <p>V1</p>
    <p>V2</p>
    <p>Can't atomically update separate</p>
    <p>locations in-place</p>
    <p>Consistent State Table</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Lightweight Journaling</p>
    <p>VPN Committed</p>
    <p>V1</p>
    <p>V2</p>
    <p>V1 Bitmap1  V2 Bitmap2</p>
    <p>TX-END</p>
    <p>Journaling</p>
    <p>Lightweight and not a per-update overhead!</p>
    <p>Consistent State Table</p>
    <p>V2 Bitmap2</p>
    <p>Completed</p>
    <p>uncompleted</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Based on McSimA+  64-entry L1 DTLB  Transactional workloads: array swap (SPS), hashtable (HT), RB</p>
    <p>tree (RBT), B-tree (BT)  *-uni : inserts/deletes in a uniformly random fashion  *-zipf : inserts/deletes following Zipf distribution  1G ~ 4G footprint  Metric: CPU flush</p>
    <p>Experiment Setup</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>CPU Flushes</p>
    <p>SP S</p>
    <p>HT -un</p>
    <p>i</p>
    <p>HT -zi</p>
    <p>pf</p>
    <p>RB T</p>
    <p>un i</p>
    <p>RB T</p>
    <p>zip f BT</p>
    <p>-un i</p>
    <p>BT -zi</p>
    <p>pf 0.0</p>
    <p>C P U</p>
    <p>fl u sh</p>
    <p>es (n</p>
    <p>or m</p>
    <p>al iz</p>
    <p>ed )</p>
    <p>baseline (undo-log) OSP</p>
    <p>Reduces the number of CPU flushes by 1.6x on average</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Breakdown</p>
    <p>SP S HT</p>
    <p>-un i</p>
    <p>HT -zi</p>
    <p>pf</p>
    <p>RB T</p>
    <p>un i</p>
    <p>RB T</p>
    <p>zip f BT</p>
    <p>-un i</p>
    <p>BT -zi</p>
    <p>pf 0</p>
    <p>C P U</p>
    <p>fl u sh</p>
    <p>es (n</p>
    <p>or m</p>
    <p>al iz</p>
    <p>ed )</p>
    <p>in-place</p>
    <p>journaling</p>
    <p>consolidation</p>
    <p>Nearly eliminate all of the consistency cost for workloads with locality</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Limitations.  Size of a transaction is limited by the TLB capacity  Fallback path.</p>
    <p>TLB coherence for multi-threaded processes  Overhead, correctness</p>
    <p>Work with virtual cache</p>
    <p>Discussion</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Use virtual memory system to implement efficient, transactional update  avoid extra copies required by logging</p>
    <p>Keep two copies of each page being modified  Track modifications at the cache line level  Avoid the inefficiencies of traditional shadow paging</p>
    <p>Small changes to hardware: TLB extension  Preliminary simulation shows great promise</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>CENTER FOR RESEARCH IN</p>
    <p>Questions</p>
    <p>Collaborators:</p>
    <p>Yuanjiang Ni (yni6@ucsc.edu) Jishen Zhao (jzhao@eng.ucsd.edu )</p>
    <p>Daniel Bittman (dbittman@ucsc.edu ) Ethan Miller (elm@ucsc.edu)</p>
  </div>
</Presentation>
