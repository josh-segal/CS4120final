<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>CloudSense</p>
    <p>Con%nuous Fine-Grain Cloud Monitoring with Compressive Sensing</p>
    <p>H. T. Kung, Chit-Kwan Lin, Dario Vlah</p>
  </div>
  <div class="page">
    <p>Monitoring and Performance</p>
    <p>Cloud monitoring and performance can be in%mately related</p>
    <p>Finer-grain cloud state info  beFer performance  Schedulers: improve resource u%liza%on  Apps: improve responsiveness</p>
    <p>Important to providers and customers alike 2 HotCloud 2011</p>
  </div>
  <div class="page">
    <p>Challenges of Fine-Grain Monitoring  Prohibi%ve network overhead</p>
    <p>(125 bytes/1s)  100 streams  10 apps  10K nodes = 10Gbps!  Significant frac%on of bisec%on bandwidth</p>
    <p>BoFleneck at collec%on point limits granularity</p>
    <p>Global rela9ve comparisons require global status collec9on</p>
    <p>Important class of monitoring task  Summariza%on/aggrega%on/filtering cant help here</p>
  </div>
  <div class="page">
    <p>Example: MapReduce Straggler Detec%on</p>
    <p>Requires global rela9ve comparisons  Master iden%fies a task as straggling if its progress is some factor d slower than median task progress</p>
    <p>Requires global status collec9on  Every node periodically reports task progress to master</p>
    <p>The sooner you detect and mi%gate a straggler, the earlier your job completes</p>
  </div>
  <div class="page">
    <p>A Solu%on?</p>
    <p>Monitoring is oaen for anomaly detec%on</p>
    <p>Status stream may be high volume, but we only care about anomalies in the stream, which are by defini%on sparse (i.e., compressible)</p>
    <p>Compress the status stream in-network, before it reaches the boFleneck</p>
  </div>
  <div class="page">
    <p>A Solu%on?</p>
    <p>Monitoring is oaen for anomaly detec%on</p>
    <p>Status stream may be high volume, but we only care about anomalies in the stream, which are by defini%on sparse (i.e., compressible)</p>
    <p>Compress the status stream in-network, before it reaches the boFleneck</p>
    <p>But distributed compression is hard!</p>
  </div>
  <div class="page">
    <p>The Secret Sauce</p>
    <p>Compressive sensing, a signal processing technique for distributed compression without coordina%on/side informa%on</p>
  </div>
  <div class="page">
    <p>Advantages of Compressive Sensing in Cloud Monitoring</p>
    <p>For cloud app monitoring, compressive sensing  Increases repor9ng granularity, given same bandwidth budget</p>
    <p>Is simple to implement inside a switch  Has a useful property that the largest anomalies are iden9fied first (i.e., with just a few reports)</p>
    <p>CloudSense is a switch design that realizes these gains</p>
  </div>
  <div class="page">
    <p>CloudSense Compressive Sensing Basics</p>
    <p>CloudSense Top-of-Rack Switch</p>
    <p>A2 A3 A4 A5</p>
    <p>A1</p>
    <p>Rack A</p>
    <p>xA</p>
    <p>Step 1: Collect Switch collects status of each node (N = 5) into a signal vector xA. xA is sparse and has sparsity K = 2.</p>
  </div>
  <div class="page">
    <p>CloudSense Compressive Sensing Basics</p>
    <p>CloudSense Top-of-Rack Switch</p>
    <p>A2 A3 A4 A5</p>
    <p>A1</p>
    <p>Rack A 0</p>
    <p>A</p>
    <p>xAxA</p>
    <p>53 10</p>
    <p>= yA</p>
    <p>Master</p>
    <p>Step 1: Collect Switch collects status of each node (N = 5) into a signal vector xA. xA is sparse and has sparsity K = 2.</p>
    <p>Step 2: Encode &amp; Send Switch computes random projec%ons of xA onto low-D space, genera%ng measurement vector yA, and sends it to Master. Compression occurs because A is M  N, M &lt;&lt; N.</p>
    <p>measurement matrix</p>
  </div>
  <div class="page">
    <p>CloudSense Compressive Sensing Basics</p>
    <p>CloudSense Top-of-Rack Switch</p>
    <p>A2 A3 A4 A5</p>
    <p>A1</p>
    <p>Rack A 0</p>
    <p>A</p>
    <p>xAxA</p>
    <p>53 10</p>
    <p>= yA</p>
    <p>Master 0</p>
    <p>min xARN</p>
    <p>xA1</p>
    <p>s.t. yA = AxA</p>
    <p>Step 1: Collect Switch collects status of each node (N = 5) into a signal vector xA. xA is sparse and has sparsity K = 2.</p>
    <p>Step 2: Encode &amp; Send Switch computes random projec%ons of xA onto low-D space, genera%ng measurement vector yA, and sends it to Master. Compression occurs because A is M  N, M &lt;&lt; N.</p>
    <p>Step 3: Decode On receiving yA, and since it knows A, Master solves - minimiza%on problem via linear programming to recover xA. High probability of success if M = O(K log N/K).</p>
    <p>measurement matrix</p>
    <p>1</p>
  </div>
  <div class="page">
    <p>A Simplified CloudSense Measurement Collec%on Tree</p>
    <p>CloudSense TOR Switch A</p>
    <p>AxA = yA</p>
    <p>CloudSense TOR Switch B</p>
    <p>BxB = yB</p>
    <p>Rack A</p>
    <p>Rack B</p>
  </div>
  <div class="page">
    <p>A Simplified CloudSense Measurement Collec%on Tree</p>
    <p>At fan-in point (aggrega%on switch), measurement vectors are simply summed</p>
    <p>No increase in outgoing data size over each link 13 HotCloud 2011</p>
    <p>CloudSense Aggrega9on</p>
    <p>Switch</p>
    <p>y = yA + yB</p>
    <p>Master</p>
    <p>min xRN</p>
    <p>x1 s.t. y = x</p>
    <p>CloudSense TOR Switch A</p>
    <p>AxA = yA</p>
    <p>CloudSense TOR Switch B</p>
    <p>BxB = yB</p>
    <p>yA</p>
    <p>yB</p>
    <p>y</p>
    <p>= [AB]</p>
    <p>x =</p>
    <p>xA xB</p>
    <p>Rack A</p>
    <p>Rack B</p>
  </div>
  <div class="page">
    <p>CloudSense Improves Straggler Detec%on</p>
    <p>CloudSense  Allows earlier detec%on due to finer-grain reports  Detects the worst stragglers first</p>
    <p>Simula%on  Synthe%c task progress traces derived from Bing straggler sta%s%cs (Mantri system, OSDI10)</p>
    <p>Each %me step in the trace cons%tutes a signal vector x</p>
    <p>Ta sk</p>
    <p>D ur</p>
    <p>at io</p>
    <p>n</p>
    <p>Node</p>
    <p>Ground truth sorted signal vector x (a sparse signal)</p>
  </div>
  <div class="page">
    <p>C om</p>
    <p>pr es</p>
    <p>si on</p>
    <p>R at</p>
    <p>io</p>
    <p>Time step (s)</p>
    <p>CS, K=800 (10% stragglers) CS, K=400 (5% stragglers) CS, K=80 (1% stragglers)</p>
    <p>Entropy bound, K=80</p>
    <p>Compression Performance</p>
  </div>
  <div class="page">
    <p>Largest-First Anomaly Detec%on</p>
    <p>Fr ac</p>
    <p>tio n</p>
    <p>of u</p>
    <p>nd et</p>
    <p>ec te</p>
    <p>d st</p>
    <p>ra gg</p>
    <p>le rs</p>
    <p>Number of measurements, M</p>
    <p>Duration &gt; 2x Duration &gt; 3x Duration &gt; 4x</p>
  </div>
  <div class="page">
    <p>CloudSense Summary  Improves granularity of status reports via in- network distributed compression</p>
    <p>Conveniently provides largest-first anomaly detec%on</p>
    <p>Easy to implement due to simple encoding</p>
    <p>Permits a new network service for monitoring cloud apps</p>
    <p>HotCloud 2011 17</p>
  </div>
  <div class="page">
    <p>Ques%ons &amp; Discussion Teasers</p>
    <p>How sparse are various applica%on-related status streams in produc%on data centers?</p>
    <p>What are the major applica%on opportuni%es that might benefit from CloudSense, and especially from largest-first anomaly detec%on?</p>
    <p>What are the next steps for further valida%on?</p>
    <p>HotCloud 2011 18</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>CloudSense Decoding Accuracy</p>
    <p>F ra</p>
    <p>c ti o n</p>
    <p>Number of measurements, M</p>
    <p>False negatives at t=1s False negatives at t=10s</p>
    <p>False positives at t=1s False positives at t=10s</p>
  </div>
  <div class="page">
    <p>CloudSense Decoding Accuracy</p>
    <p>ti o n o</p>
    <p>f u n d e te</p>
    <p>c te</p>
    <p>d s</p>
    <p>tr a g g le</p>
    <p>rs</p>
    <p>Number of measurements, M</p>
    <p>t=1s t=10s</p>
  </div>
</Presentation>
