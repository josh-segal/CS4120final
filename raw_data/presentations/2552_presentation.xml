<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Wire Speed Name Lookup:</p>
    <p>A GPU-based Approach</p>
    <p>Yi Wang, Yuan Zu, Ting Zhang, Kunyang Peng,</p>
    <p>Qunfeng Dong, Bin Liu, Wei Meng, Huichen Dai,</p>
    <p>Xin Tian, Hao Wu, Di Yang</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Outline</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Background &amp; Movivation</p>
    <p>Name Lookup is widely used in a broad</p>
    <p>range of technological fields</p>
    <p>search engine</p>
    <p>information retrieval</p>
    <p>text processing</p>
    <p>intrusion detection/prevention</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>But we have met a new research issue in</p>
    <p>the CCN scenario</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Background &amp; Motivation</p>
    <p>Content-Centric Networking (CCN)</p>
    <p>CCN uses names to identify every piece of</p>
    <p>contents instead of IP addresses for hardware</p>
    <p>devices attached to IP network.</p>
    <p>A forwarding table consists of name prefixes.</p>
    <p>A core challenge and enabling technique in</p>
    <p>implementing CCN is exactly to perform name</p>
    <p>lookup for packet forwarding at wire speed.</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Background &amp; Motivation</p>
    <p>Naming in CCN</p>
    <p>A CCN name is hierarchically structured and</p>
    <p>composed of explicitly delimited components</p>
    <p>/com/google/maps</p>
    <p>com google maps</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Background &amp; challenges</p>
    <p>Two High-level Requirements for CCN Name</p>
    <p>Lookup:</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>T</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>name lookup challenges</p>
    <p>The detailed challenges of name lookup</p>
    <p>Complex name structure</p>
    <p>The large-scale name table</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>name lookup challenges</p>
    <p>Backbone IP Table Size Number of Active Web-site Worldwide</p>
    <p>Name tables could be 2~3 orders of magnitude larger than IP lookup table</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>name lookup challenges</p>
    <p>The detailed challenges of name lookup</p>
    <p>Complex name structure 1) consists of digits and characters;</p>
    <p>The large-scale name table (2~3 orders larger )</p>
    <p>Frequently update</p>
    <p>Wire Speed (100Gbps Ethernet, OC-3072)</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Contributions</p>
    <p>evaluation of a GPU-based name lookup engine, which</p>
    <p>obtains 63.52M searches per second, enabling line rate</p>
    <p>of 127 Gbps.</p>
    <p>(MATA) is used to greatly compress storage space.</p>
    <p>packet latency (less than 100us) while keeping high</p>
    <p>lookup throughput.</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Outline</p>
    <p>Background Algorithm Implementation Results Conclusion</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Algorithm &amp; Data Structure</p>
    <p>Background Algorithm Implementation Results Conclusion</p>
    <p>Character Trie Two-Dimensional</p>
    <p>State Transition Table (STT) Name Table</p>
    <p>/a/bc/ /ab/c /a/ /ab/</p>
    <p>b</p>
    <p>/ c b /</p>
    <p>/ c / Character Trie</p>
    <p>/  a b c</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Algorithm &amp; Data Structure</p>
    <p>Background Algorithm Implementation Results Conclusion</p>
    <p>Two-Dimensional State Transition Table</p>
    <p>(STT)</p>
    <p>Advantage</p>
    <p>Easy to build</p>
    <p>Fast speed: One State Transition needs one memory</p>
    <p>access only</p>
    <p>Disadvantage</p>
    <p>Too much memory required to be implemented</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Algorithm &amp; Data Structure</p>
    <p>Background Algorithm Implementation Results Conclusion</p>
    <p>STT Address Transition</p>
    <p>/  a b c</p>
    <p>Aligned Transition Array</p>
    <p>Aligned Transition Array (ATA) to compress STT</p>
    <p>offset + characters ASCII code</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Algorithm &amp; Data Structure</p>
    <p>Background Algorithm Implementation Results Conclusion</p>
    <p>ATA  Advantage</p>
    <p>Keep fast speed: one state transition needs one</p>
    <p>memory access</p>
    <p>Low memory space</p>
    <p>Disadvantage</p>
    <p>Building speed is too slow for large-scale name table</p>
    <p>Cannot support incremental updates</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Algorithm &amp; Data Structure</p>
    <p>Background Algorithm Implementation Results Conclusion</p>
    <p>Multiple Stride Character Trie</p>
    <p>Name Table</p>
    <p>/a/bc/ /ab/c /a/ /ab/</p>
    <p>ab</p>
    <p>/ bc a/</p>
    <p>/ c/</p>
    <p>ATA</p>
    <p>Address Transition</p>
    <p>a/ = 24879</p>
    <p>d-stride character trie, every state</p>
    <p>may have 28d transitions at most.</p>
    <p>ATA cannot support multiple Stride Character Trie</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Algorithm &amp; Data Structure</p>
    <p>Background Algorithm Implementation Results Conclusion</p>
    <p>Multiple Stride Character Trie</p>
    <p>Name Table</p>
    <p>/a/bc/ /ab/c /a/ /ab/</p>
    <p>ab</p>
    <p>/ bc a/</p>
    <p>/ c/</p>
    <p>Address Transition</p>
    <p>Multi-ATA</p>
    <p>Address Transition</p>
    <p>a/ Mod 7=1</p>
    <p>ab Mod 7=3</p>
    <p>bc Mod 7=1</p>
    <p>bc Mod 3=2</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Algorithm &amp; Data Structure</p>
    <p>Background Algorithm Implementation Results Conclusion</p>
    <p>MATA  Advantage</p>
    <p>Improve lookup throughput: one state transition</p>
    <p>consumes multiple characters, and each state</p>
    <p>transition requires only one memory access</p>
    <p>Further compress memory space</p>
    <p>Small ATAs in MATA are easier to build and manage</p>
    <p>Support fast incremental update</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Outline</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Name Lookup Engine Framework</p>
    <p>Name Table</p>
    <p>Character Trie</p>
    <p>Aligned Transition</p>
    <p>Array</p>
    <p>Update Forwarding</p>
    <p>CPU</p>
    <p>Name Lookup Engine</p>
    <p>Name Trace</p>
    <p>PCIe</p>
    <p>PCIe</p>
    <p>GPU</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>NVIDIA GeForce</p>
    <p>GTX590 GPU board</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Latency Optimization</p>
    <p>Name Table</p>
    <p>Character Trie</p>
    <p>Aligned Transition</p>
    <p>Array</p>
    <p>Update Forwarding</p>
    <p>CPU</p>
    <p>Name Lookup Engine</p>
    <p>Name Trace</p>
    <p>PCIe</p>
    <p>PCIe</p>
    <p>GPU</p>
    <p>Name</p>
    <p>Batch</p>
    <p>A</p>
    <p>B</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Latency Optimization</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>Batch Size: 16MB vs. 1MB</p>
    <p>How can we reduce name lookup latency</p>
    <p>while keeping high throughput?</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Latency Optimization</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>CUDA Stream:  a stream is a sequence of operations that execute</p>
    <p>in issue-order</p>
    <p>T0 T1 T2 T3 T4 T5 T6</p>
    <p>Data Fetch</p>
    <p>Kernel Lookup</p>
    <p>Write Back</p>
    <p>T0 T1 T2 T3 T4</p>
    <p>Copy Engine:</p>
    <p>Kernel Engine:</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Latency Optimization</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>CUDA Streams effectively reduce latency</p>
    <p>We still need to</p>
    <p>reduce the delay</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>GPU Memory Access Optimization</p>
    <p>Name Table</p>
    <p>Character Trie</p>
    <p>Aligned Transition</p>
    <p>Array</p>
    <p>Update Forwarding</p>
    <p>CPU</p>
    <p>Name Lookup Engine</p>
    <p>Name Trace</p>
    <p>PCIe</p>
    <p>PCIe</p>
    <p>GPU</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>GPU Memory Access Optimization</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>GPU: Single-Instruction Multiple-Data (SIMD)</p>
    <p>32 threads are organized as a Warp;</p>
    <p>32 threads in a Warp synchronously run in SIMD manner;</p>
    <p>GPU Memory:</p>
    <p>Partition into 128-byte blocks;</p>
    <p>Every memory access fetches a 128-byte block;</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>GPU Memory Access Optimization</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>Each 128-bytes block stores a name  Problem: when the 32 threads simultaneously read the first</p>
    <p>piece of data from each of the names they are processing,</p>
    <p>resulting in 32 separate memory accesses.</p>
    <p>Interweaved Layout  A name is divided into 32 pieces;</p>
    <p>32 pieces from 32 names are stored in one 128-byte block</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Outline</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Experimental Results</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>Platform: A commodity PC</p>
    <p>Name Table  Download from DMOZ website: 3M</p>
    <p>Crawl from Internet: 10M</p>
    <p>Name Trace  Average workload: random name prefix + suffix</p>
    <p>Heavy workload: the longest 10% name prefix + suffix</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Experimental Results</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>Memory Space</p>
    <p>3M name table</p>
    <p>ATA vs STT: 101</p>
    <p>MATA vs STT: 130</p>
    <p>10M name table</p>
    <p>ATA vs STT: 102</p>
    <p>MATA vs STT: 142</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Experimental Results</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>Lookup Speed (Million Searches per Second, MSPS)</p>
    <p>100K, Average Workload</p>
    <p>100K, Heavy Workload</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Experimental Results</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>Lookup Speed (Million Searches per Second, MSPS)</p>
    <p>10M, Average Workload</p>
    <p>10M, Heavy Workload</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Experimental Results</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>Which is the bottleneck of name lookup engine?</p>
    <p>PCIe bus or GPU kernel?</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Experimental Results</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>Which is the bottleneck of name lookup engine?</p>
    <p>PCIe bus or GPU kernel?</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Experimental Results</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>Scalability</p>
    <p>Lookup speed</p>
    <p>Memory</p>
    <p>Latency</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Experimental Results</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>Scalability</p>
    <p>Lookup speed</p>
    <p>Memory</p>
    <p>Latency</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Experimental Results</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>Scalability</p>
    <p>Lookup speed</p>
    <p>Memory</p>
    <p>Latency</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Experimental Results</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>Update</p>
    <p>More than 30K</p>
    <p>insertion per second</p>
    <p>Nearly 600K</p>
    <p>deletion per second</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Outline</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
  </div>
  <div class="page">
    <p>Wire Speed Name Lookup: A GPU-based Approach</p>
    <p>Conclusion</p>
    <p>Introduction Algorithm Implementation Results Conclusion</p>
    <p>GTX590 GPU board</p>
    <p>Latency: &lt;100us</p>
    <p>Memory: compress &gt;100</p>
    <p>Good Scalability</p>
  </div>
  <div class="page">
    <p>Thanks</p>
    <p>Q &amp; A</p>
  </div>
</Presentation>
