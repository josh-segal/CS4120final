<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Towards Combining Online &amp; Offline Management of Big Data Applica&lt;ons</p>
    <p>Brian Laub, Chengwei Wang, Karsten Schwan, and Chad HuneycuF</p>
    <p>Georgia Ins,tute of Technology</p>
    <p>{brian.laub, flinter, karsten.schwan, chadh}@cc.gatech.edu</p>
  </div>
  <div class="page">
    <p>Introduc&lt;on</p>
    <p>Todays datacenters process massive data in real-&lt;me, for cri&lt;cal apps  Business analy&lt;cs, microsales, spam detec&lt;on</p>
    <p>Composed of complex distributed systems  Thousands of nodes, many soSware components  Dis&lt;nct, hard to find failure scenarios  Mul&lt;-tenant virtualized environments</p>
    <p>Efficient and effec,ve monitoring is key!</p>
  </div>
  <div class="page">
    <p>Problem Descrip&lt;on  Tradi&lt;onal monitoring systems collect and archive metrics  Ex: Ganglia, Nagios, OpenTSDB  Historical DB, basic aler&lt;ng but view is limited!  Operator s&lt;ll must analyze data to pinpoint problems</p>
    <p>Emerging research focuses on online monitoring  Ex: Monaly&lt;cs, VScope  Scalable, online algorithms for fast anomaly detec&lt;on, data aggrega&lt;on</p>
    <p>Provide customized monitoring when we need it  Resource-constrained</p>
  </div>
  <div class="page">
    <p>Problem Descrip&lt;on</p>
    <p>Each provides valuable set of tools and info  but no link between these two!  Goal: bridge gap between online &amp; offline monitoring  Iden&lt;fy when a problem occurs  Iden&lt;fy what type of problem it is</p>
  </div>
  <div class="page">
    <p>System Overview  Background: Build upon previous work VScope*  scalable monitoring for &lt;me-sensi&lt;ve apps using online analy&lt;cs</p>
    <p>Distributed Processing Graphs (DPGs)  Scalable overlay networks deployed dynamically that execute customized monitoring code</p>
    <p>Targeted approach  Online algorithms observe short &lt;me windows for fast anomaly detec&lt;on</p>
    <p>Use DPGs to narrow down problem loca&lt;on quickly, then perform in-depth troubleshoo&lt;ng</p>
    <p>Lacks ability to archive data (history is lost) * Refer to [17]: VScope: Middleware for Troubleshoo&lt;ng Time-Sensi&lt;ve Data Center Applica&lt;ons by C. Wang, et. al, ACM Middleware 2012.</p>
  </div>
  <div class="page">
    <p>System Overview</p>
    <p>VStore  new extension to VScope that adds offline data collec&lt;on  Built on OpenTSDB/HBase</p>
    <p>VStore API  Acts as an OpenTSDB client  Hook into DPGs, customized data archiving  Provides a comm. layer between customized monitoring and DB backend</p>
  </div>
  <div class="page">
    <p>System Overview</p>
  </div>
  <div class="page">
    <p>System Overview</p>
    <p>Benefits: VScope + VStore can provide customized monitoring without losing history</p>
    <p>Online algorithms for fast anomaly detec&lt;on, targeted debugging</p>
    <p>Offline data allows for rich historical analysis  Capture anomalies that online algorithms might miss</p>
  </div>
  <div class="page">
    <p>Experiments</p>
    <p>Distributed log-collec&lt;on workload in a cloud environment (OpenStack+Hadoop+HBase+Flume)</p>
    <p>Experimented with 3 typical scenarios:  Periodic process interrup&lt;on, misconfigura&lt;on, network faults</p>
    <p>Ran VScope to monitor hosts online, using VStore in custom DPG to archive data to OpenTSDB</p>
    <p>Goal: highlight scenarios where VScopes online monitoring is limited</p>
  </div>
  <div class="page">
    <p>Periodic Process  Ex: log archiving, major compac&lt;on, MR job  2 cases: CPU spike, intense I/O (Hadoop &lt;er)  Takeaway: online algo. with narrow &lt;me window might miss</p>
    <p>periodic behavior; must watch mul&lt;ple metrics across &lt;ers</p>
  </div>
  <div class="page">
    <p>SoSware Misconfigura&lt;on  Ex: incorrect region spliqng, misconfig causing load</p>
    <p>imbalance  Takeaway: imbalance is not obvious with online algorithms</p>
    <p>that aggregate data (e.g. an average)</p>
  </div>
  <div class="page">
    <p>Network Faults  Ex: wrong link speed, VLAN or SDN misconfigura&lt;on,</p>
    <p>limpware  Takeaway: historical data can highlight slowly degrading perf;</p>
    <p>online analy&lt;cs must watch app metrics too!</p>
  </div>
  <div class="page">
    <p>Uses for VStore</p>
    <p>Targeted debugging with full history  Integrate w/ VScope to offer snapshots of historical data  Run baseline watch DPG for con&lt;nuous monitoring, archiving with VStore</p>
    <p>Operator launches new DPGs to debug specific problems  Historical data from VStore shown side-by-side for comparison</p>
  </div>
  <div class="page">
    <p>Uses for VStore</p>
    <p>Detec&lt;ng limplock*  Failing hardware slows system, but doesnt trigger fail-stop  VScope targets monitoring on systems prone to limplock  History data from VStore to dis&lt;nguish from normal load</p>
    <p>Classifica&lt;on of anomalies  Use VStore to build database of anomaly scenarios for classifica&lt;on</p>
    <p>VScope DPGs can run classifica&lt;on algorithms online to aid debugging</p>
    <p>* Refer to [13]: Limplock: Understanding the impact of limpware on scale-out cloud systems.  by T. Do, et. al, SOCC 2013.</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>VStore bridges gap between online and offline monitoring</p>
    <p>Historical data helps pinpoint anomalies that online algorithms might miss</p>
    <p>Experiments show promise in using online and offline monitoring for targeted debugging of common fault scenarios</p>
  </div>
  <div class="page">
    <p>Future Work</p>
    <p>Tight integra&lt;on w/ VScope  Dynamic archiving from mul&lt;ple points in DPG  Automa&lt;c retrieval of historical data in VShell  Evaluate troubleshoo&lt;ng effec&lt;veness</p>
    <p>Detec&lt;ng infrastructure faults in clouds (from cloud operators perspec&lt;ve)  E.g. SDN misconfig causing faults across tenants</p>
    <p>Thorough performance eval  Larger scale, real-world IaaS clouds</p>
  </div>
  <div class="page">
    <p>Ques&lt;ons?</p>
    <p>Thanks!</p>
  </div>
</Presentation>
