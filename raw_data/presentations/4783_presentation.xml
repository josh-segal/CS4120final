<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Packet Caches on Routers: The Implications of Universal Redundant</p>
    <p>Traffic Elimination</p>
    <p>Ashok Anand, Archit Gupta, Aditya Akella University of Wisconsin, Madison</p>
    <p>Srinivasan Seshan Carnegie Mellon University</p>
    <p>Scott Shenker University of California, Berkeley</p>
  </div>
  <div class="page">
    <p>Redundant Traffic in the Internet</p>
    <p>Lots of redundant traffic in the Internet</p>
    <p>Redundancy due to  Identical objects  Partial content</p>
    <p>match (e.g. page banners)</p>
    <p>Applicationheaders</p>
    <p>2</p>
    <p>Same content traversing same</p>
    <p>set of links</p>
    <p>Time T Time T + 5</p>
  </div>
  <div class="page">
    <p>Redundancy Elimination</p>
    <p>Object-level caching Application layer approaches like Web proxy caches Store static objects in local cache [Summary Cache: SIGCOMM 98, Co-operative Caching: SOSP 99]</p>
    <p>Packet-level caching [Spring et. al: SIGCOMM 00] WAN Optimization Products: Riverbed, Peribit, Packeteer, ..</p>
    <p>Packet-Cache Packet-Cache</p>
    <p>Access link Internet</p>
    <p>Enterprise</p>
    <p>Packet-level caching is better than object-level caching</p>
  </div>
  <div class="page">
    <p>Benefits of Redundancy Elimination  Reduces bandwidth usage cost  Reduces network congestion at access links  Higher throughputs  Reduces in transfer completion times</p>
  </div>
  <div class="page">
    <p>Towards Universal RE  However, existing RE approaches apply only to point</p>
    <p>deployments  E.g. at stub network access links, or between branch offices</p>
    <p>They only benefit the system to which they are directly connected.</p>
    <p>Why not make RE a native network service that everyone can use?</p>
  </div>
  <div class="page">
    <p>Our Contribution  Universal redundancy elimination on routers is</p>
    <p>beneficial</p>
    <p>Re-designing the routing protocol to be redundancy aware gives furthermore benefits</p>
    <p>Practical to implement redundancy elimination</p>
  </div>
  <div class="page">
    <p>Internet2</p>
    <p>Universal Redundancy Elimination At All Routers</p>
    <p>Total packets with universal RE= 12 (ignoring tiny packets)</p>
    <p>Upstream router removes redundant bytes. Downstream router reconstructs full packet</p>
    <p>Total packets w/o RE = 18</p>
    <p>Wisconsin</p>
    <p>BerkeleyCMU</p>
    <p>Packet cache at every router</p>
  </div>
  <div class="page">
    <p>Benefits of Universal Redundancy Elimination</p>
    <p>Subsumes benefits of point deployments  Also benefits Internet Service Providers</p>
    <p>Reduces total traffic carried  better traffic engineering</p>
    <p>Better responsiveness to sudden overload (e.g. flash crowds)</p>
    <p>Re-design network protocols with redundancy elimination in mind  Further enhance the benefits of universal RE</p>
  </div>
  <div class="page">
    <p>Redundancy-Aware Routing</p>
    <p>Total packets with RE + routing= 10 (Further 20% benefit )</p>
    <p>Total packets with RE = 12</p>
    <p>Wisconsin</p>
    <p>BerkeleyCMU</p>
    <p>ISP needs information of traffic similarity between CMU and Berkeley</p>
    <p>ISP needs to compute redundancyaware routes</p>
  </div>
  <div class="page">
    <p>Redundancy-Aware Routing  Intra-domain Routing for ISP  Every N minutes</p>
    <p>Each border router computes a redundancy profile for the first Ts of the N-minute interval</p>
    <p>Estimates how traffic is replicated across other border routers  High speed algorithm for computing profiles</p>
    <p>Centrally compute redundancy-aware routes</p>
    <p>Route traffic for next N minutes on redundancy-aware routes.</p>
    <p>Redundancy elimination is applied hop-by-hop</p>
  </div>
  <div class="page">
    <p>CMU</p>
    <p>Redundancy Profile Example</p>
    <p>Internet2</p>
    <p>Dataunique,pitsburgh= 30 KB Dataunique,Berkeley= 30 KB Datashared= 20 KB</p>
    <p>Wisconsin</p>
    <p>Berkeley</p>
    <p>TotalCMU= 50 KB TotalBerkeley= 50 KB</p>
  </div>
  <div class="page">
    <p>Centralized Route Computation  Linear Program  Objective: minimize the total</p>
    <p>traffic footprint on ISP links  Traffic footprint on each link as</p>
    <p>latency of link times total unique content carried by the link</p>
    <p>Compute narrow, deep trees which aggregate redundant traffic as much as possible</p>
    <p>Impose flow conservation and capacity constraints</p>
    <p>Centralized Platform</p>
    <p>Route computation</p>
  </div>
  <div class="page">
    <p>Inter-domain Routing  ISP selects neighbor AS and the border router for each</p>
    <p>destination  Goal: minimize impact of inter-domain traffic on intra</p>
    <p>domain links and peering links.  Challenges:</p>
    <p>Need to consider AS relationships, peering locations, route announcements</p>
    <p>Compute redundancy profiles across destination ASes</p>
    <p>Details in paper</p>
  </div>
  <div class="page">
    <p>Trace-Based Evaluation</p>
    <p>Trace-based study  RE + Routing: Redundancy aware routing  RE: Shortest path routing with redundancy elimination  Baseline: Compared against shortest path routing without</p>
    <p>redundancy elimination  Packet traces</p>
    <p>Collected at University of Wisconsin access link  Separately captured the outgoing traffic from separate group of</p>
    <p>high volume Web servers in University of Wisconsin  Represents moderate-sized data center</p>
    <p>Rocketfuel ISP topologies  Results for intra-domain routing on Web server trace</p>
  </div>
  <div class="page">
    <p>Benefits in Total Network Footprint</p>
    <p>Average redundancy of this Web server trace is 50% using 2GB cache</p>
    <p>ATT topology  2GB cache per router  CDF of reduction in network</p>
    <p>footprint across border routers of ATT</p>
    <p>RE gives reduction of 1035%</p>
    <p>(RE + Routing) gives reduction of 20-45%</p>
    <p>RE RE +Routing</p>
    <p>Reduction in Network Footprint</p>
    <p>Fr ac</p>
    <p>ti o</p>
    <p>n o</p>
    <p>f B</p>
    <p>o rd</p>
    <p>er R</p>
    <p>o ut</p>
    <p>er s</p>
  </div>
  <div class="page">
    <p>When is RE + Routing Beneficial?</p>
    <p>Topology effect  E.g., multiple multi-hop paths between pairs of</p>
    <p>border routers</p>
    <p>Redundancy profile  Lot of duplication across border routers</p>
  </div>
  <div class="page">
    <p>Synthetic Trace Based Study</p>
    <p>Synthetic trace for covering wide-range of situations  Duplicates striped across border routers in ISP (inter-flow</p>
    <p>redundancy)</p>
    <p>Low striping across border routers , but high redundancy with in traffic to a border router (intra-flow-redundancy)</p>
    <p>Understand topology effect</p>
  </div>
  <div class="page">
    <p>Benefits in Total Network Footprint</p>
    <p>Synthetic trace, average redundancy = 50%</p>
    <p>ATT (7018) topology  Trace is assumed to enter at</p>
    <p>Seattle  RE + Routing, is close to RE at</p>
    <p>high intra-flow redundancy, 50% benefit</p>
    <p>RE has benefit of 8% at zero intra-flow redundancy</p>
    <p>RE + Routing, gets benefit of 26% at zero intra-flow redundancy.</p>
    <p>RE RE+Routing</p>
    <p>Intra-flow redundancy</p>
    <p>Re du</p>
    <p>cti o</p>
    <p>n in</p>
    <p>N et</p>
    <p>w o</p>
    <p>rk F</p>
    <p>o o</p>
    <p>tp ri</p>
    <p>nt</p>
  </div>
  <div class="page">
    <p>Benefits in Max Link Utilization</p>
    <p>Link capacities either 2.5 or 10 Gbps</p>
    <p>Comparison against traditional OSPF based traffic engineering (SPMaxLoad)</p>
    <p>RE offers 1-25% lower maximum link load .</p>
    <p>RE + Routing offers 10-37% lower maximum link load.</p>
    <p>Max link Utilization = 80%, for SP-MaxLoad 19</p>
    <p>(0.2,1.0) (0.5,0.5) 0</p>
    <p>RE RE + Routing</p>
    <p>(Overall redundancy, Inter flow redundancy)</p>
    <p>Re du</p>
    <p>cti o n</p>
    <p>in M</p>
    <p>ax L</p>
    <p>in k</p>
    <p>U ti</p>
    <p>liz ati</p>
    <p>o n</p>
  </div>
  <div class="page">
    <p>Evaluation Summary</p>
    <p>RE significantly reduces network footprint  RE significantly improves traffic engineering</p>
    <p>objectives  RE + Routing further enhances these benefits  Highly beneficial for flash crowd situations  Highly beneficial in inter-domain traffic</p>
    <p>engineering</p>
  </div>
  <div class="page">
    <p>Implementing RE on Routers</p>
    <p>Fingerprint table Packet store</p>
    <p>Fingerprint s</p>
    <p>Main operations  Fingerprint computation</p>
    <p>Easy, can be done with CRC</p>
    <p>Memory operations, Read and Write</p>
  </div>
  <div class="page">
    <p>High Speed Implementation  Reduced the number of memory operations per</p>
    <p>packet  Fixed number of fingerprints (&lt;10 per packet)  Used lazy invalidation of fingerprint for packet</p>
    <p>eviction  Other optimizations in paper</p>
    <p>Click-based software prototype runs at 2.3 Gbps (approx. OC 48 speed ).</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>RE at every router is beneficial ( 10-50%)</p>
    <p>Further benefits (10-25%) from redesigning routing protocol to be redundancy-aware.</p>
    <p>OC48 speed attainable in software</p>
  </div>
  <div class="page">
    <p>Thank you</p>
  </div>
  <div class="page">
    <p>Backup</p>
  </div>
  <div class="page">
    <p>Flash Crowd Simulation</p>
    <p>SP-MaxLoad SP-RE RA</p>
    <p>Volume Increment Factor</p>
    <p>M ax</p>
    <p>L in</p>
    <p>k U</p>
    <p>ti liz</p>
    <p>ati o</p>
    <p>n</p>
    <p>Flash Crowd: Volume increases at one of the border routers  Redundancy ( 20% -&gt; 50%)  Inter Redundancy Fraction</p>
    <p>(0.5 -&gt; 0.75)  Max Link Utilization without</p>
    <p>RE is 50%</p>
    <p>Traditional OSPF traffic engineering gets links at 95% utilization at volume increment factor &gt; 3.5</p>
    <p>Whereas SP-RE at 85% , and RA further lower at 75%</p>
  </div>
  <div class="page">
    <p>Impact of Stale Redundancy Profile</p>
    <p>SP-RE RA RA-stale</p>
    <p>High Volume /24 traces</p>
    <p>Re du</p>
    <p>cti on</p>
    <p>in N</p>
    <p>et w</p>
    <p>or k</p>
    <p>Fo ot</p>
    <p>pr in</p>
    <p>t</p>
    <p>RA relies on redundancy profiles.</p>
    <p>How stable are these redundancy profiles ?</p>
    <p>Used same profile to compute the reduction in network footprint at later times ( with in an hour)</p>
    <p>RA-stale is quite close to RA</p>
  </div>
  <div class="page">
    <p>High Speed Implementation</p>
    <p>Use specialized hardware for fingerprint computation  Reduced the number of memory operations per packet</p>
    <p>Number of memory operations is function of number of fingerprints. Fixed the number of sampled fingerprints</p>
    <p>During evicting packet, explicit invalidating fingerprint require memory operations. Used lazy invalidation</p>
    <p>Fingerprint pointer is checked for validation as well as existence.</p>
    <p>Store packet-table and fingerprint-table in DRAM for high-speed  Used Cuckoo Hash-table. As simple-hash based fingerprint</p>
    <p>table is too large to fit in DRAM</p>
  </div>
  <div class="page">
    <p>Base Implementation Details (Spring et. al)</p>
    <p>Compute fingerprints per packet and sample them  Insert packet into packet store  Check for existence of fingerprint pointer to any</p>
    <p>packet, for match detection.  Encode the match region in the packet.  Insert each fingerprint into Fingerprint table.  As store becomes full, evict the packet in FIFO manner  As a packet gets evicted, invalidate its corresponding</p>
    <p>fingerprint pointers</p>
  </div>
</Presentation>
