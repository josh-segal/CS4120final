<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Recommendations for Randomness in the Operating System</p>
    <p>Henry Corrigan-Gibbs and Suman Jana Stanford University</p>
    <p>HotOS XV  20 May 2015</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Android OpenSSL</p>
    <p>Firefox DNS resolver</p>
    <p>GE Ethernet card</p>
    <p>Apple iOS Sandbox</p>
  </div>
  <div class="page">
    <p>[Everspaugh et al., Oakland14] [Garfinkel+Rosenblum, HotOS05] [Goldberg+Wagner, Dobbs96] [Gutterman+Malkhi, CT-RSA05] [Gutterman et al., Oakland06] [Heninger et al., USENIX Sec12] [Lazar et al., APSys14] [Lenstra et al., 2012] [Ristenpart+Yilek, NDSS12] [Yilek et al., IMC09]</p>
    <p>In the past two years!</p>
  </div>
  <div class="page">
    <p>Why so many bugs? Bad news: OS is a big part of the problem.</p>
    <p>Randomness subsystems have:  Buggy design  Error-prone APIs  Misleading documentation</p>
    <p>Good news: The OS can be part of the solution!</p>
    <p>See paper</p>
  </div>
  <div class="page">
    <p>What is entropy?</p>
    <p>Why do we need it?  Cryptographic secrets  ASLR  DNS source ports  Password salts  Etc.</p>
    <p>Password has k bits of [guessing] entropy</p>
    <p>w.r.t. an adversary A</p>
    <p>It takes A around 2k guesses to guess</p>
    <p>your password</p>
  </div>
  <div class="page">
    <p>Application reads /dev/random</p>
    <p>Randomness pool</p>
  </div>
  <div class="page">
    <p>Once the OS has accumulated enough entropy, it will never run out of entropy</p>
    <p>seed 256+ bits of randomness</p>
  </div>
  <div class="page">
    <p>Great! But what should the OS do before it has</p>
    <p>After first boot .</p>
  </div>
  <div class="page">
    <p>State of the Art: Entropy Estimation</p>
  </div>
  <div class="page">
    <p>Ye Olde Entropy</p>
    <p>Estimator 11</p>
    <p>State of the Art</p>
    <p>2.3 bits</p>
  </div>
  <div class="page">
    <p>Ye Olde Entropy</p>
    <p>Estimator 12</p>
    <p>0.8 bits</p>
    <p>State of the Art</p>
  </div>
  <div class="page">
    <p>Ye Olde Entropy</p>
    <p>Estimator 13</p>
    <p>State of the Art</p>
  </div>
  <div class="page">
    <p>Ye Olde Entropy</p>
    <p>Estimator 14</p>
    <p>Block /dev/random until pool has 256+ bits</p>
    <p>X State of the Art</p>
  </div>
  <div class="page">
    <p>Ye Olde Entropy</p>
    <p>Estimator 15</p>
    <p>Entropy is a function of adversarys knowledge</p>
    <p>Estimate could be: 256 bits Reality could be: 0 bits</p>
    <p>[Barak-Halevi CCS05] [Dodis et al. CCS13]</p>
    <p>[Kelsey et al., SAC00]</p>
  </div>
  <div class="page">
    <p>State of the Art</p>
    <p>Entropy estimation</p>
    <p>Longblocking API</p>
    <p>Entropy DoS attacks</p>
    <p>Trusted vs untrusted</p>
    <p>inputs</p>
    <p>Chaos!!! User-space randomness</p>
    <p>pools</p>
    <p>Slow accumulation</p>
    <p>/dev/random vs. /dev/urandom</p>
  </div>
  <div class="page">
    <p>One Consequence: User-space Pools</p>
    <p>Reading many bytes from /dev/random can drive down entropy estimate and starve other processes</p>
    <p>Kernel Space</p>
    <p>P1</p>
    <p>User Space</p>
    <p>P2</p>
    <p>P1 and P2 get same random values!</p>
    <p>[CVE-2013-1445, CVE-2013-3599, CVE-2014-0016, CVE-2014-0017]</p>
  </div>
  <div class="page">
    <p>Our Proposal</p>
  </div>
  <div class="page">
    <p>Our Proposal Option 1: Strong Assumptions  Assume low-order bit of RDRAND has</p>
    <p>one bit of entropy  Easy! Just gather 256 samples, use them</p>
    <p>to seed a PRG</p>
    <p>What happens if your assumption is wrong?</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Our Proposal Option 2: Best-effort entropy accumulation  Never estimate  Never block  Any process can write into OS pool  Per-process pools [See paper for details]</p>
    <p>Honest process pools will eventually accumulate entropy</p>
    <p>[Barak-Halevi CCS05] [Dodis et al. CCS13] [Kelsey et al., SAC00]</p>
  </div>
  <div class="page">
    <p>Conclusions  Popular OSes make using randomness</p>
    <p>more difficult than it needs to be  Entropy estimation is at the</p>
    <p>heart of the problem</p>
    <p>Our Proposal  Best effort randomness  Never estimate, never block</p>
  </div>
  <div class="page"/>
</Presentation>
