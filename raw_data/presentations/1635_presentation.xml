<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Ziggurat: A Tiered File System for Non-Volatile Main Memories and Disks</p>
    <p>Shengan Zheng, Morteza Hoseinzadeh, Steven Swanson</p>
    <p>Shanghai Jiao Tong University  University of California, San Diego</p>
  </div>
  <div class="page">
    <p>Background</p>
    <p>Non-volatile main memory (NVMM)  Byte-addressability  Persistence  Direct access (DAX)</p>
    <p>NVMM file systems  PMFS, SCMFS, NOVA  EXT4-DAX, XFS-DAX  Capacity? DRAM + Flash NVDIMM</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Bandwidth</p>
    <p>$/GB</p>
    <p>Hard Disk Drive</p>
    <p>SATA SSD NVMe SSD</p>
    <p>Optane SSD NVMM</p>
    <p>DRAM</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Bandwidth</p>
    <p>$/GB</p>
    <p>Hard Disk Drive</p>
    <p>SATA SSD NVMe SSD</p>
    <p>Optane SSD NVMM</p>
    <p>DRAM</p>
  </div>
  <div class="page">
    <p>HDD</p>
    <p>Tiered Storage System</p>
    <p>SSD</p>
    <p>SSD for speed  HDD for capacity</p>
  </div>
  <div class="page">
    <p>HDD</p>
    <p>Tiered Storage System</p>
    <p>NVMM for speed  Disks for capacity</p>
    <p>SSD</p>
    <p>NVMM</p>
  </div>
  <div class="page">
    <p>Ziggurat Overview</p>
    <p>Intelligent data placement policy  Send writes to the most suitable tier  High NVMM space utilization</p>
    <p>Accurate predictors  Predict the synchronicity of each file (synchronicity predictor)  Predict the size of future writes to each file (write size predictor)</p>
    <p>Efficient migration mechanism  Only migrate cold data in cold files  Migrate file data in groups</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Motivation  Data placement policy  Migration mechanism  Evaluation  Conclusion</p>
  </div>
  <div class="page">
    <p>DiskNVMM</p>
    <p>NVMMNVMM</p>
    <p>Synchronously-updated Asynchronously-updated</p>
    <p>Large writes Small writes</p>
    <p>Data Placement Policy</p>
    <p>Although NVMM is the fastest tier in Ziggurat, file writes should not always go to NVMM.</p>
    <p>Synchronicity predictor</p>
    <p>Write size</p>
    <p>predictor</p>
    <p>Data Placement</p>
  </div>
  <div class="page">
    <p>Synchronicity Predictor</p>
    <p>Predict whether the future accesses are likely to be synchronous write(0,2); fsync(); write(2,2); fsync(); write(4,2); fsync();</p>
    <p>write(0,2); write(2,2); write(4,2); fsync();</p>
    <p>Data blocks written: 0 / 4</p>
    <p>Synchronous 4 5 6 7</p>
    <p>Data blocks written: 0 / 4</p>
    <p>Asynchronous 4 5 6 7</p>
    <p>File log</p>
    <p>File data</p>
    <p>Write entry offset, length</p>
    <p>File log</p>
    <p>File data Synchronous</p>
  </div>
  <div class="page">
    <p>Synchronicity Predictor</p>
    <p>Predict whether the future accesses are likely to be synchronous write(0,2); fsync(); write(2,2); fsync(); write(4,2); fsync();</p>
    <p>write(0,2); write(2,2); write(4,2); fsync();</p>
    <p>Data blocks written: 2 / 4</p>
    <p>Synchronous 4 5 6 7</p>
    <p>Data blocks written: 0 / 4</p>
    <p>Asynchronous 4 5 6 7</p>
    <p>File log</p>
    <p>File data</p>
    <p>Write entry offset, length</p>
    <p>File log</p>
    <p>File data Synchronous</p>
  </div>
  <div class="page">
    <p>Synchronicity Predictor</p>
    <p>Predict whether the future accesses are likely to be synchronous write(0,2); fsync(); write(2,2); fsync(); write(4,2); fsync();</p>
    <p>write(0,2); write(2,2); write(4,2); fsync();</p>
    <p>Data blocks written: 0 / 4</p>
    <p>Synchronous 4 5 6 7</p>
    <p>Data blocks written: 0 / 4</p>
    <p>Asynchronous 4 5 6 7</p>
    <p>File log</p>
    <p>File data</p>
    <p>Write entry offset, length</p>
    <p>File log</p>
    <p>File data Synchronous</p>
  </div>
  <div class="page">
    <p>Synchronicity Predictor</p>
    <p>Predict whether the future accesses are likely to be synchronous write(0,2); fsync(); write(2,2); fsync(); write(4,2); fsync();</p>
    <p>write(0,2); write(2,2); write(4,2); fsync();</p>
    <p>Data blocks written: 2 / 4</p>
    <p>Synchronous 4 5 6 7</p>
    <p>Data blocks written: 0 / 4</p>
    <p>Asynchronous 4 5 6 7</p>
    <p>File log</p>
    <p>File data</p>
    <p>Write entry offset, length</p>
    <p>File log</p>
    <p>File data Synchronous</p>
  </div>
  <div class="page">
    <p>Synchronicity Predictor</p>
    <p>Predict whether the future accesses are likely to be synchronous write(0,2); fsync(); write(2,2); fsync(); write(4,2); fsync();</p>
    <p>write(0,2); write(2,2); write(4,2); fsync();</p>
    <p>Data blocks written: 0 / 4</p>
    <p>Synchronous 4 5 6 7</p>
    <p>Data blocks written: 0 / 4</p>
    <p>Asynchronous 4 5 6 7</p>
    <p>File log</p>
    <p>File data</p>
    <p>Write entry offset, length</p>
    <p>File log</p>
    <p>File data Synchronous</p>
  </div>
  <div class="page">
    <p>Synchronicity Predictor</p>
    <p>Predict whether the future accesses are likely to be synchronous write(0,2); fsync(); write(2,2); fsync(); write(4,2); fsync();</p>
    <p>write(0,2); write(2,2); write(4,2); fsync();</p>
    <p>Data blocks written: 2 / 4</p>
    <p>Synchronous 4 5 6 7</p>
    <p>Data blocks written: 0 / 4</p>
    <p>Asynchronous 4 5 6 7</p>
    <p>File log</p>
    <p>File data</p>
    <p>Write entry offset, length</p>
    <p>File log</p>
    <p>File data Synchronous</p>
  </div>
  <div class="page">
    <p>Synchronicity Predictor</p>
    <p>Predict whether the future accesses are likely to be synchronous write(0,2); fsync(); write(2,2); fsync(); write(4,2); fsync();</p>
    <p>write(0,2); write(2,2); write(4,2); fsync();</p>
    <p>Data blocks written: 0 / 4</p>
    <p>Synchronous 4 5 6 7</p>
    <p>Data blocks written: 0 / 4</p>
    <p>Asynchronous 4 5 6 7</p>
    <p>File log</p>
    <p>File data</p>
    <p>Write entry offset, length</p>
    <p>File log</p>
    <p>File data Synchronous</p>
  </div>
  <div class="page">
    <p>Synchronicity Predictor</p>
    <p>Predict whether the future accesses are likely to be synchronous write(0,2); fsync(); write(2,2); fsync(); write(4,2); fsync();</p>
    <p>write(0,2); write(2,2); write(4,2); fsync();</p>
    <p>Data blocks written: 0 / 4</p>
    <p>Synchronous 4 5 6 7</p>
    <p>Data blocks written: 2 / 4</p>
    <p>Asynchronous 4 5 6 7</p>
    <p>File log</p>
    <p>File data</p>
    <p>Write entry offset, length</p>
    <p>File log</p>
    <p>File data Synchronous</p>
  </div>
  <div class="page">
    <p>Synchronicity Predictor</p>
    <p>Predict whether the future accesses are likely to be synchronous write(0,2); fsync(); write(2,2); fsync(); write(4,2); fsync();</p>
    <p>write(0,2); write(2,2); write(4,2); fsync();</p>
    <p>Data blocks written: 0 / 4</p>
    <p>Synchronous 4 5 6 7</p>
    <p>Data blocks written: 4 / 4</p>
    <p>Asynchronous 4 5 6 7</p>
    <p>File log</p>
    <p>File data</p>
    <p>Write entry offset, length</p>
    <p>File log</p>
    <p>File data Synchronous</p>
  </div>
  <div class="page">
    <p>Synchronicity Predictor</p>
    <p>Predict whether the future accesses are likely to be synchronous write(0,2); fsync(); write(2,2); fsync(); write(4,2); fsync();</p>
    <p>write(0,2); write(2,2); write(4,2); fsync();</p>
    <p>Data blocks written: 0 / 4</p>
    <p>Synchronous 4 5 6 7</p>
    <p>Data blocks written: 6 / 4</p>
    <p>Asynchronous 4 5 6 7</p>
    <p>File log</p>
    <p>File data</p>
    <p>Write entry offset, length</p>
    <p>File log</p>
    <p>File data Synchronous</p>
  </div>
  <div class="page">
    <p>Synchronicity Predictor</p>
    <p>Predict whether the future accesses are likely to be synchronous write(0,2); fsync(); write(2,2); fsync(); write(4,2); fsync();</p>
    <p>write(0,2); write(2,2); write(4,2); fsync();</p>
    <p>Data blocks written: 0 / 4</p>
    <p>Synchronous 4 5 6 7</p>
    <p>Data blocks written: 0 / 4</p>
    <p>Asynchronous 4 5 6 7</p>
    <p>File log</p>
    <p>File data</p>
    <p>Write entry offset, length</p>
    <p>File log</p>
    <p>File data</p>
  </div>
  <div class="page">
    <p>Write Size Predictor</p>
    <p>Predict whether the incoming writes are both large and stable</p>
    <p>File log 0,4,3</p>
    <p>File data</p>
    <p>write(0,4); write(6,1); write(4,4);</p>
    <p>offset, length, counterWrite entry</p>
  </div>
  <div class="page">
    <p>Write Size Predictor</p>
    <p>Predict whether the incoming writes are both large and stable</p>
    <p>File log 0,4,3</p>
    <p>File data</p>
    <p>write(0,4); write(6,1); write(4,4);</p>
    <p>offset, length, counterWrite entry</p>
  </div>
  <div class="page">
    <p>Write Size Predictor</p>
    <p>Predict whether the incoming writes are both large and stable</p>
    <p>File log 0,4,3</p>
    <p>File data</p>
    <p>write(0,4); write(6,1); write(4,4);</p>
    <p>offset, length, counterWrite entry</p>
    <p>Predecessor found</p>
    <p>Large</p>
    <p>Stable</p>
    <p>Length  4</p>
  </div>
  <div class="page">
    <p>Write Size Predictor</p>
    <p>Predict whether the incoming writes are both large and stable</p>
    <p>File log 0,4,3</p>
    <p>File data</p>
    <p>write(0,4); write(6,1); write(4,4);</p>
    <p>offset, length, counterWrite entry</p>
    <p>Predecessor found</p>
    <p>Large</p>
    <p>Stable</p>
    <p>Length  4</p>
  </div>
  <div class="page">
    <p>Write Size Predictor</p>
    <p>Predict whether the incoming writes are both large and stable</p>
    <p>File log 0,4,3</p>
    <p>File data</p>
    <p>write(0,4); write(6,1); write(4,4);</p>
    <p>offset, length, counterWrite entry</p>
    <p>Predecessor found</p>
    <p>Large</p>
    <p>Stable</p>
    <p>Length  4</p>
  </div>
  <div class="page">
    <p>Write Size Predictor</p>
    <p>Predict whether the incoming writes are both large and stable</p>
    <p>File log 0,4,3</p>
    <p>File data</p>
    <p>write(0,4); write(6,1); write(4,4);</p>
    <p>offset, length, counterWrite entry</p>
    <p>Predecessor found</p>
    <p>Large</p>
    <p>Stable</p>
    <p>Length  4</p>
    <p>Predecessor found</p>
    <p>Small</p>
    <p>Stable</p>
    <p>Length &lt; 4</p>
  </div>
  <div class="page">
    <p>Write Size Predictor</p>
    <p>Predict whether the incoming writes are both large and stable</p>
    <p>File log 0,4,3</p>
    <p>File data</p>
    <p>write(0,4); write(6,1); write(4,4);</p>
    <p>offset, length, counterWrite entry</p>
    <p>Predecessor found</p>
    <p>Large</p>
    <p>Stable</p>
    <p>Length  4</p>
    <p>Predecessor found</p>
    <p>Small</p>
    <p>Stable</p>
    <p>Length &lt; 4</p>
  </div>
  <div class="page">
    <p>Write Size Predictor</p>
    <p>Predict whether the incoming writes are both large and stable</p>
    <p>File log 0,4,3</p>
    <p>File data</p>
    <p>write(0,4); write(6,1); write(4,4);</p>
    <p>offset, length, counterWrite entry</p>
    <p>Predecessor found</p>
    <p>Large</p>
    <p>Stable</p>
    <p>Length  4</p>
    <p>Predecessor found</p>
    <p>Small</p>
    <p>Stable</p>
    <p>Length &lt; 4</p>
  </div>
  <div class="page">
    <p>Write Size Predictor</p>
    <p>Predict whether the incoming writes are both large and stable</p>
    <p>File log 0,4,3</p>
    <p>File data</p>
    <p>write(0,4); write(6,1); write(4,4);</p>
    <p>offset, length, counterWrite entry</p>
    <p>Predecessor found</p>
    <p>Large</p>
    <p>Stable</p>
    <p>Length  4</p>
    <p>Predecessor found</p>
    <p>Small</p>
    <p>Stable</p>
    <p>Length &lt; 4</p>
    <p>Predecessor not found</p>
    <p>Large</p>
    <p>Unstable</p>
    <p>Length  4</p>
  </div>
  <div class="page">
    <p>Write Size Predictor</p>
    <p>Predict whether the incoming writes are both large and stable</p>
    <p>File log 0,4,3</p>
    <p>File data</p>
    <p>write(0,4); write(6,1); write(4,4);</p>
    <p>offset, length, counterWrite entry</p>
    <p>Predecessor found</p>
    <p>Large</p>
    <p>Stable</p>
    <p>Length  4</p>
    <p>Predecessor found</p>
    <p>Small</p>
    <p>Stable</p>
    <p>Length &lt; 4</p>
    <p>Predecessor not found</p>
    <p>Large</p>
    <p>Unstable</p>
    <p>Length  4</p>
  </div>
  <div class="page">
    <p>Cold Data Identification</p>
    <p>Average modification time (amtime)  Updated differentially</p>
    <p>File log 0,2,2</p>
    <p>File data</p>
    <p>File log 0,2,2</p>
    <p>File data</p>
    <p>amtime = amtime = 2  2 + 4  2 + 6  2</p>
    <p>= 5</p>
    <p>offset, length, mtimeWrite entry</p>
  </div>
  <div class="page">
    <p>Cold Data Identification</p>
    <p>Cold File</p>
    <p>File</p>
    <p>File</p>
    <p>File</p>
    <p>CPU 0</p>
    <p>Hot</p>
    <p>File</p>
    <p>File</p>
    <p>File</p>
    <p>File</p>
    <p>CPU 1</p>
    <p>Among files  Cold lists sorted by amtime</p>
    <p>amtime</p>
    <p>File log 0,2,2</p>
    <p>File data</p>
    <p>amtime = 5</p>
    <p>Within each file  Cold data blocks relative to amtime</p>
    <p>Cold Cold Hot Hot</p>
    <p>offset, length, mtimeWrite entry</p>
  </div>
  <div class="page">
    <p>Migration Mechanism</p>
    <p>Ch m</p>
    <p>od</p>
    <p>W ri</p>
    <p>te 0</p>
    <p>Head TailInode</p>
    <p>Inode log</p>
    <p>NVMM</p>
    <p>Disk</p>
    <p>... Writ e</p>
    <p>File Page 1</p>
    <p>File Page 2</p>
    <p>File Page 3</p>
    <p>File Page 1</p>
    <p>File Page 4</p>
    <p>W ri</p>
    <p>te 8</p>
    <p>Pages</p>
    <p>Page state Stale Live</p>
    <p>Entry type Inode update Old write entry New write entry</p>
    <p>Basic migration  Migrate the coldest data to disk  Consistency is ensured</p>
    <p>Reverse migration  Migrate from disk to NVMM  Handle mmap  Read-dominated workloads</p>
  </div>
  <div class="page">
    <p>Migration Mechanism</p>
    <p>Ch m</p>
    <p>od</p>
    <p>W ri</p>
    <p>te 0</p>
    <p>Head TailInode</p>
    <p>Inode log</p>
    <p>NVMM</p>
    <p>Disk</p>
    <p>... Writ e</p>
    <p>File Page 1</p>
    <p>File Page 2</p>
    <p>File Page 3</p>
    <p>File Page 1</p>
    <p>File Page 4</p>
    <p>W ri</p>
    <p>te 8</p>
    <p>File Page 3</p>
    <p>File Page 4</p>
    <p>Step 1</p>
    <p>Pages</p>
    <p>Page state Stale Live</p>
    <p>Entry type Inode update Old write entry New write entry</p>
    <p>Basic migration  Migrate the coldest data to disk  Consistency is ensured</p>
    <p>Reverse migration  Migrate from disk to NVMM  Handle mmap  Read-dominated workloads</p>
  </div>
  <div class="page">
    <p>Migration Mechanism</p>
    <p>Ch m</p>
    <p>od</p>
    <p>W ri</p>
    <p>te 0</p>
    <p>Head TailInode</p>
    <p>Inode log</p>
    <p>NVMM</p>
    <p>Disk</p>
    <p>... Writ e</p>
    <p>File Page 1</p>
    <p>File Page 2</p>
    <p>File Page 3</p>
    <p>File Page 1</p>
    <p>File Page 4</p>
    <p>W ri</p>
    <p>te 8</p>
    <p>File Page 3</p>
    <p>File Page 4</p>
    <p>Step 1</p>
    <p>Step 2</p>
    <p>Pages</p>
    <p>Page state Stale Live</p>
    <p>Entry type Inode update Old write entry New write entry</p>
    <p>Basic migration  Migrate the coldest data to disk  Consistency is ensured</p>
    <p>Reverse migration  Migrate from disk to NVMM  Handle mmap  Read-dominated workloads</p>
  </div>
  <div class="page">
    <p>Migration Mechanism</p>
    <p>Ch m</p>
    <p>od</p>
    <p>W ri</p>
    <p>te 0</p>
    <p>Head TailInode</p>
    <p>Inode log</p>
    <p>NVMM</p>
    <p>Disk</p>
    <p>... Writ e</p>
    <p>W ri</p>
    <p>te 8</p>
    <p>File Page 1</p>
    <p>File Page 2</p>
    <p>File Page 3</p>
    <p>File Page 1</p>
    <p>File Page 4</p>
    <p>W ri</p>
    <p>te 8</p>
    <p>File Page 3</p>
    <p>File Page 4</p>
    <p>Step 1</p>
    <p>Step 2</p>
    <p>Step 3</p>
    <p>Pages</p>
    <p>Page state Stale Live</p>
    <p>Entry type Inode update Old write entry New write entry</p>
    <p>Basic migration  Migrate the coldest data to disk  Consistency is ensured</p>
    <p>Reverse migration  Migrate from disk to NVMM  Handle mmap  Read-dominated workloads</p>
  </div>
  <div class="page">
    <p>Migration Mechanism</p>
    <p>Ch m</p>
    <p>od</p>
    <p>W ri</p>
    <p>te 0</p>
    <p>Head TailInode</p>
    <p>Inode log</p>
    <p>NVMM</p>
    <p>Disk</p>
    <p>... Writ e</p>
    <p>W ri</p>
    <p>te 8</p>
    <p>File Page 1</p>
    <p>File Page 2</p>
    <p>File Page 3</p>
    <p>File Page 1</p>
    <p>File Page 4</p>
    <p>W ri</p>
    <p>te 8</p>
    <p>File Page 3</p>
    <p>File Page 4</p>
    <p>Step 1</p>
    <p>Step 2</p>
    <p>Step 3</p>
    <p>Step 4</p>
    <p>Pages</p>
    <p>Page state Stale Live</p>
    <p>Entry type Inode update Old write entry New write entry</p>
    <p>Basic migration  Migrate the coldest data to disk  Consistency is ensured</p>
    <p>Reverse migration  Migrate from disk to NVMM  Handle mmap  Read-dominated workloads</p>
  </div>
  <div class="page">
    <p>Migration Mechanism</p>
    <p>Ch m</p>
    <p>od</p>
    <p>W ri</p>
    <p>te 0</p>
    <p>Head TailInode</p>
    <p>Inode log</p>
    <p>NVMM</p>
    <p>Disk</p>
    <p>... Writ e</p>
    <p>W ri</p>
    <p>te 8</p>
    <p>File Page 1</p>
    <p>File Page 2</p>
    <p>File Page 3</p>
    <p>File Page 1</p>
    <p>File Page 4</p>
    <p>W ri</p>
    <p>te 8</p>
    <p>File Page 3</p>
    <p>File Page 4</p>
    <p>Step 1</p>
    <p>Step 2</p>
    <p>Step 3</p>
    <p>Step 4</p>
    <p>Pages Step 5</p>
    <p>Page state Stale Live</p>
    <p>Entry type Inode update Old write entry New write entry</p>
    <p>Basic migration  Migrate the coldest data to disk  Consistency is ensured</p>
    <p>Reverse migration  Migrate from disk to NVMM  Handle mmap  Read-dominated workloads</p>
  </div>
  <div class="page">
    <p>Migration Mechanism</p>
    <p>Ch m</p>
    <p>od</p>
    <p>W ri</p>
    <p>te 0</p>
    <p>Head TailInode</p>
    <p>... Writ e</p>
    <p>File Page 1</p>
    <p>File Page 2</p>
    <p>File Page 3</p>
    <p>File Page 2</p>
    <p>File Page 4</p>
    <p>W ri</p>
    <p>te 8</p>
    <p>W ri</p>
    <p>te 12</p>
    <p>-1 6K</p>
    <p>File Page 4</p>
    <p>...Inodelog</p>
    <p>NVMM</p>
    <p>Disk</p>
    <p>Pages</p>
    <p>Page state Stale Live</p>
    <p>Entry type Inode update Old write entry New write entry</p>
    <p>Group migration  Coalesce adjacent write entries  Utilize the high sequential</p>
    <p>bandwidth of disks  Benefits</p>
    <p>Improve migration efficiency  Accelerate future reads  Reduce log size  Moderate disk fragmentation</p>
  </div>
  <div class="page">
    <p>Migration Mechanism</p>
    <p>Step 1</p>
    <p>File Page 1</p>
    <p>File Page 2</p>
    <p>File Page 3</p>
    <p>File Page 4</p>
    <p>Ch m</p>
    <p>od</p>
    <p>W ri</p>
    <p>te 0</p>
    <p>Head TailInode</p>
    <p>... Writ e</p>
    <p>File Page 1</p>
    <p>File Page 2</p>
    <p>File Page 3</p>
    <p>File Page 2</p>
    <p>File Page 4</p>
    <p>W ri</p>
    <p>te 8</p>
    <p>W ri</p>
    <p>te 12</p>
    <p>-1 6K</p>
    <p>File Page 4</p>
    <p>...Inodelog</p>
    <p>NVMM</p>
    <p>Disk</p>
    <p>Pages</p>
    <p>Page state Stale Live</p>
    <p>Entry type Inode update Old write entry New write entry</p>
    <p>Group migration  Coalesce adjacent write entries  Utilize the high sequential</p>
    <p>bandwidth of disks  Benefits</p>
    <p>Improve migration efficiency  Accelerate future reads  Reduce log size  Moderate disk fragmentation</p>
  </div>
  <div class="page">
    <p>Migration Mechanism</p>
    <p>Step 1</p>
    <p>File Page 1</p>
    <p>File Page 2</p>
    <p>File Page 3</p>
    <p>File Page 4</p>
    <p>Ch m</p>
    <p>od</p>
    <p>W ri</p>
    <p>te 0</p>
    <p>Head TailInode</p>
    <p>... Writ e</p>
    <p>File Page 1</p>
    <p>File Page 2</p>
    <p>File Page 3</p>
    <p>File Page 2</p>
    <p>File Page 4</p>
    <p>W ri</p>
    <p>te 8</p>
    <p>W ri</p>
    <p>te 12</p>
    <p>-1 6K</p>
    <p>File Page 4</p>
    <p>...Inodelog</p>
    <p>NVMM</p>
    <p>Disk</p>
    <p>Pages</p>
    <p>Page state Stale Live</p>
    <p>Entry type Inode update Old write entry New write entry</p>
    <p>Step 2</p>
    <p>Group migration  Coalesce adjacent write entries  Utilize the high sequential</p>
    <p>bandwidth of disks  Benefits</p>
    <p>Improve migration efficiency  Accelerate future reads  Reduce log size  Moderate disk fragmentation</p>
  </div>
  <div class="page">
    <p>Migration Mechanism</p>
    <p>Step 1</p>
    <p>File Page 1</p>
    <p>File Page 2</p>
    <p>File Page 3</p>
    <p>File Page 4</p>
    <p>Ch m</p>
    <p>od</p>
    <p>W ri</p>
    <p>te 0</p>
    <p>Head TailInode</p>
    <p>... Writ e</p>
    <p>File Page 1</p>
    <p>File Page 2</p>
    <p>File Page 3</p>
    <p>File Page 2</p>
    <p>File Page 4</p>
    <p>W ri</p>
    <p>te 8</p>
    <p>W ri</p>
    <p>te 12</p>
    <p>-1 6K</p>
    <p>W ri</p>
    <p>te 0</p>
    <p>File Page 4</p>
    <p>Step 3</p>
    <p>...Inodelog</p>
    <p>NVMM</p>
    <p>Disk</p>
    <p>Pages</p>
    <p>Page state Stale Live</p>
    <p>Entry type Inode update Old write entry New write entry</p>
    <p>Step 2</p>
    <p>Group migration  Coalesce adjacent write entries  Utilize the high sequential</p>
    <p>bandwidth of disks  Benefits</p>
    <p>Improve migration efficiency  Accelerate future reads  Reduce log size  Moderate disk fragmentation</p>
  </div>
  <div class="page">
    <p>Migration Mechanism</p>
    <p>Step 1</p>
    <p>File Page 1</p>
    <p>File Page 2</p>
    <p>File Page 3</p>
    <p>File Page 4</p>
    <p>Ch m</p>
    <p>od</p>
    <p>W ri</p>
    <p>te 0</p>
    <p>Head TailInode</p>
    <p>... Writ e</p>
    <p>File Page 1</p>
    <p>File Page 2</p>
    <p>File Page 3</p>
    <p>File Page 2</p>
    <p>File Page 4</p>
    <p>W ri</p>
    <p>te 8</p>
    <p>Step 4</p>
    <p>W ri</p>
    <p>te 12</p>
    <p>-1 6K</p>
    <p>W ri</p>
    <p>te 0</p>
    <p>File Page 4</p>
    <p>Step 3</p>
    <p>...Inodelog</p>
    <p>NVMM</p>
    <p>Disk</p>
    <p>Pages</p>
    <p>Page state Stale Live</p>
    <p>Entry type Inode update Old write entry New write entry</p>
    <p>Step 2</p>
    <p>Group migration  Coalesce adjacent write entries  Utilize the high sequential</p>
    <p>bandwidth of disks  Benefits</p>
    <p>Improve migration efficiency  Accelerate future reads  Reduce log size  Moderate disk fragmentation</p>
  </div>
  <div class="page">
    <p>Migration Mechanism</p>
    <p>Step 1</p>
    <p>Step 5</p>
    <p>File Page 1</p>
    <p>File Page 2</p>
    <p>File Page 3</p>
    <p>File Page 4</p>
    <p>Ch m</p>
    <p>od</p>
    <p>W ri</p>
    <p>te 0</p>
    <p>Head TailInode</p>
    <p>... Writ e</p>
    <p>File Page 1</p>
    <p>File Page 2</p>
    <p>File Page 3</p>
    <p>File Page 2</p>
    <p>File Page 4</p>
    <p>W ri</p>
    <p>te 8</p>
    <p>Step 4</p>
    <p>W ri</p>
    <p>te 12</p>
    <p>-1 6K</p>
    <p>W ri</p>
    <p>te 0</p>
    <p>File Page 4</p>
    <p>Step 3</p>
    <p>...Inodelog</p>
    <p>NVMM</p>
    <p>Disk</p>
    <p>Pages</p>
    <p>Page state Stale Live</p>
    <p>Entry type Inode update Old write entry New write entry</p>
    <p>Step 2</p>
    <p>Group migration  Coalesce adjacent write entries  Utilize the high sequential</p>
    <p>bandwidth of disks  Benefits</p>
    <p>Improve migration efficiency  Accelerate future reads  Reduce log size  Moderate disk fragmentation</p>
  </div>
  <div class="page">
    <p>File Operations</p>
    <p>NVMM</p>
    <p>DRAM</p>
    <p>write(0,8); write(8,8); fsync(); append(16,1); append(17,1); ... append(23,1); ...... migrate(); ...... read(16,8); mmap(0,8);</p>
    <p>DISK</p>
  </div>
  <div class="page">
    <p>File Operations</p>
    <p>NVMM</p>
    <p>DRAM</p>
    <p>write(0,8); write(8,8); fsync(); append(16,1); append(17,1); ... append(23,1); ...... migrate(); ...... read(16,8); mmap(0,8);</p>
    <p>DISK</p>
  </div>
  <div class="page">
    <p>File Operations</p>
    <p>NVMM</p>
    <p>DRAM</p>
    <p>write(0,8); write(8,8); fsync(); append(16,1); append(17,1); ... append(23,1); ...... migrate(); ...... read(16,8); mmap(0,8);</p>
    <p>DISK</p>
  </div>
  <div class="page">
    <p>File Operations</p>
    <p>NVMM</p>
    <p>DRAM</p>
    <p>write(0,8); write(8,8); fsync(); append(16,1); append(17,1); ... append(23,1); ...... migrate(); ...... read(16,8); mmap(0,8);</p>
    <p>DISK</p>
  </div>
  <div class="page">
    <p>File Operations</p>
    <p>NVMM</p>
    <p>DRAM</p>
    <p>write(0,8); write(8,8); fsync(); append(16,1); append(17,1); ... append(23,1); ...... migrate(); ...... read(16,8); mmap(0,8);</p>
    <p>DISK</p>
  </div>
  <div class="page">
    <p>File Operations</p>
    <p>NVMM</p>
    <p>DRAM</p>
    <p>write(0,8); write(8,8); fsync(); append(16,1); append(17,1); ... append(23,1); ...... migrate(); ...... read(16,8); mmap(0,8);</p>
    <p>DISK</p>
  </div>
  <div class="page">
    <p>File Operations</p>
    <p>NVMM</p>
    <p>DRAM</p>
    <p>write(0,8); write(8,8); fsync(); append(16,1); append(17,1); ... append(23,1); ...... migrate(); ...... read(16,8); mmap(0,8);</p>
    <p>DISK</p>
  </div>
  <div class="page">
    <p>File Operations</p>
    <p>NVMM</p>
    <p>DRAM</p>
    <p>write(0,8); write(8,8); fsync(); append(16,1); append(17,1); ... append(23,1); ...... migrate(); ...... read(16,8); mmap(0,8);</p>
    <p>DISK</p>
  </div>
  <div class="page">
    <p>File Operations</p>
    <p>NVMM</p>
    <p>DRAM</p>
    <p>write(0,8); write(8,8); fsync(); append(16,1); append(17,1); ... append(23,1); ...... migrate(); ...... read(16,8); mmap(0,8);</p>
    <p>DISK</p>
  </div>
  <div class="page">
    <p>File Operations</p>
    <p>NVMM</p>
    <p>DRAM</p>
    <p>write(0,8); write(8,8); fsync(); append(16,1); append(17,1); ... append(23,1); ...... migrate(); ...... read(16,8); mmap(0,8);</p>
    <p>DISK</p>
  </div>
  <div class="page">
    <p>File Operations</p>
    <p>NVMM</p>
    <p>DRAM</p>
    <p>write(0,8); write(8,8); fsync(); append(16,1); append(17,1); ... append(23,1); ...... migrate(); ...... read(16,8); mmap(0,8);</p>
    <p>DISK</p>
  </div>
  <div class="page">
    <p>File Operations</p>
    <p>NVMM</p>
    <p>DRAM</p>
    <p>write(0,8); write(8,8); fsync(); append(16,1); append(17,1); ... append(23,1); ...... migrate(); ...... read(16,8); mmap(0,8);</p>
    <p>DISK</p>
  </div>
  <div class="page">
    <p>File Operations</p>
    <p>NVMM</p>
    <p>DRAM</p>
    <p>write(0,8); write(8,8); fsync(); append(16,1); append(17,1); ... append(23,1); ...... migrate(); ...... read(16,8); mmap(0,8);</p>
    <p>DISK</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Experimental setup  Dual-socket Intel Xeon E5 server  256 GB DRAM  187 GB Intel DC P4800X Optane SSD  400 GB Intel DC P3600 NVMe SSD  Ubuntu 16.04 LTS, Linux kernel 4.13.0</p>
    <p>Emulated NVMM  NUMA effect on DRAM  NUMA node 1: NVMM emulation  NUMA node 0: Processors and memory for applications</p>
    <p>Disk-based file systems  EXT4-DJ (data journaling)  XFS-ML (metadata logging)</p>
    <p>Ziggurat  Ziggurat-X (Optane/NVMe</p>
    <p>SSD + X GB of NVMM)  NVMM-based file systems</p>
    <p>NOVA, EXT4-DAX, XFS-DAX</p>
  </div>
  <div class="page">
    <p>Filebench</p>
    <p>With large amount of NVMM, Ziggurats performance nearly matches that of NVMM-only file systems.</p>
    <p>Fileserver Varmail</p>
    <p>Within 3%</p>
  </div>
  <div class="page">
    <p>Rocksdb</p>
    <p>Ziggurat shows good performance for inserting file data with write-ahead logging (WAL).</p>
    <p>Random insert Sequential insert</p>
  </div>
  <div class="page">
    <p>SQLite</p>
    <p>Ziggurat maintains near-NVMM performance because the hot journal files are frequently updated in NVMM.</p>
    <p>PERSIST WAL</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Ziggurat fully utilizes the strengths of NVMM and disks to offer high file performance for a wide range of access patterns.</p>
    <p>[Prediction] Ziggurat steers the incoming writes to the most suitable tier based on the prediction results.</p>
    <p>[Migration] Ziggurat coalesces adjacent data blocks and migrates them in large chunks to disks.</p>
    <p>[Evaluation] Ziggurat achieves up to 38.9X and 46.5X throughput improvement compared with EXT4 and XFS running on an SSD alone, respectively.</p>
  </div>
  <div class="page">
    <p>Thank you</p>
  </div>
</Presentation>
