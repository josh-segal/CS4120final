<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Adaptive End-to-End QoS Guarantees in IP Networks using an Active Network Approach</p>
    <p>Roman Pletka IBM Research, Zurich Research Laboratory, Switzerland</p>
    <p>Burkhard Stiller University of Federal Armed Forces Munich, Germany and</p>
    <p>Computer Engineering and Networks Laboratory (TIK), ETH Zrich, Switzerland</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Agenda</p>
    <p>Introduction</p>
    <p>The abstract node model</p>
    <p>Active networking framework  Overview of security risks.</p>
    <p>The hierarchical safety levels</p>
    <p>Example Applications  E2E services with RSVP signaling and active packets</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Introduction</p>
    <p>Why is QoS rarely used today?  ISPs use massive over-provisioning.</p>
    <p>Huge variety in existing QoS architectures (Intserv, Diffserv, ST2+, QoS classes in GPRS).</p>
    <p>No end-to-end support for service guarantees in heterogeneous IP networks (Are users willing to pay for unpredictable service?).</p>
    <p>Increasing variety in QoS-provisioning mechanisms (eg., policers, schedulers, AQM schemes)</p>
    <p>=&gt; Need for QoS translation services.</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Building E2E services</p>
    <p>SLA</p>
    <p>SLS</p>
    <p>Networking Parameters Networking ParametersSLA</p>
    <p>SLS</p>
    <p>SLA</p>
    <p>SLS</p>
    <p>Service Description</p>
    <p>End-to-end Service</p>
    <p>Sender Receiver</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Node Model for QoS Provisioning in a Proactive Environment</p>
    <p>E2 E</p>
    <p>Fl ow</p>
    <p>C on</p>
    <p>tro l</p>
    <p>D om</p>
    <p>ai n</p>
    <p>Po lic</p>
    <p>ie s</p>
    <p>Co ng</p>
    <p>es tio</p>
    <p>n Co</p>
    <p>nt ro</p>
    <p>l</p>
    <p>Bu ffe</p>
    <p>r M an</p>
    <p>ag em</p>
    <p>en t</p>
    <p>&amp; S</p>
    <p>ch ed</p>
    <p>ul er</p>
    <p>s in</p>
    <p>R ou</p>
    <p>te rs</p>
    <p>Proactive QoS Plane</p>
    <p>Networking Plane</p>
    <p>Application Plane</p>
    <p>Absolute and Relative QoS Description</p>
    <p>In ts</p>
    <p>er v</p>
    <p>R S</p>
    <p>V P</p>
    <p>D if</p>
    <p>fs er</p>
    <p>v</p>
    <p>A ct</p>
    <p>iv e</p>
    <p>P ac</p>
    <p>k et</p>
    <p>s</p>
    <p>Active Security Hierarchy</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Functional Description</p>
    <p>Discovery process  Leads to initial behavior bounds that specify upper bounds for available resources.  Within the network, not from hosts.</p>
    <p>Resource Management  Comprises the task of maintaining information on the actual status of resource</p>
    <p>availability.  Example: maximum available bandwidth per traffic class, policies, resources related</p>
    <p>to the neighborhood, and router services.</p>
    <p>Feedback Control  Instantaneous traffic characteristics can deviate from QoS reservation.</p>
    <p>Translation phase  Translation of QoS parameters using active code provided by either the network</p>
    <p>administrator or the application itself.  No simple one-to-one mapping =&gt; active code.</p>
    <p>Surjective code translation is obtained by projection onto the new QoS space, whereas injective code translation needs additional information based on default mappings and/or educated guess methods.</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Security Risks in Active Networks</p>
    <p>Byte-code language  Byte-code provides architectural neutrality and intrinsic safety properties [SNAP].</p>
    <p>Common operations can be represented with a single byte-codes which leads to high code compactness.</p>
    <p>Specific characteristics of the underlying architecture are hidden.</p>
    <p>Resource bound  Divides networking resources into a two-dimensional vector (local and network part)</p>
    <p>Limitation of bandwidth, CPU, and memory usage in nodes.</p>
    <p>Enables efficient charging of active packets at the network edge.</p>
    <p>Presence of code and data in the same packet does not compromise security.</p>
    <p>Safety levels  Monitoring control plane activities.</p>
    <p>Handling of active networking packets is split into 6 security levels.</p>
    <p>Sandbox environment  Safe execution environment: Active Networking Sandbox (ANSB)</p>
    <p>Information exchange in nodes only feasible using router services.</p>
    <p>JIT-compiler (SNAP -&gt; Network Processor Picocode).</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>AN Safety Hierarchy</p>
    <p>Dynamic router services: registering new router services</p>
    <p>Authentication of active packets needed using a public key infrastructure.</p>
    <p>Complex policy insertion and manipulation</p>
    <p>Simple policy modification and manipulation</p>
    <p>Creation of new packets and resource-intensive router services (e.g., lookups)</p>
    <p>Simple packet byte-code</p>
    <p>Admission control at the edge of the network, trusted within a domain.</p>
    <p>Running in a sandbox environment, limited by predefined rules and installed router services.</p>
    <p>Sandbox environment based on the knowledge of the instruction performance.</p>
    <p>Safety issues solved by restrictions in the language definition and the use of a sandbox environment.</p>
    <p>No active code present in packets</p>
    <p>Corresponds to the traditional packet forwarding process.</p>
    <p>Safety Level</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>The Sandbox Environment in Active Nodes</p>
    <p>Active Code Handler</p>
    <p>Feedback Control</p>
    <p>Active Byte-code Interpreter</p>
    <p>Hardware specific Services</p>
    <p>Networking Hardware</p>
    <p>Policy Database</p>
    <p>Resource Database</p>
    <p>Neighborhood Database</p>
    <p>Services Tables</p>
    <p>Router Service Handler</p>
    <p>Forwarding Entity</p>
    <p>Control Entity</p>
    <p>Safety Levels</p>
    <p>Cls Pol AQM SchedTE</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>AN and Network Processors</p>
    <p>Forwarding, filtering and classification functions.  In pico-code programmable core language processors.  Coprocessor assists for</p>
    <p>table lookups (FM, LPM, SMT)  queuing  policing  string copy  checksum generator</p>
    <p>Hardware scheduler (WFQ, Priority Scheduler).  Hardware assist for flow control (BAT, WRED).  Embedded Power PC for more complex tasks. =&gt; On-the-fly active code execution at line speed is feasible.</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Example Applications</p>
    <p>Sender</p>
    <p>Receiver GGSN</p>
    <p>SGSN</p>
    <p>BSS</p>
    <p>Diffserv Network with Active Nodes</p>
    <p>Intserv/RSVP Domain</p>
    <p>Pure Active Network Domain Mobile Network using a GPRS Backbone</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Conclusion</p>
    <p>Efficient QoS translation using Active Networks can lead to improved E2E service guarantees.</p>
    <p>Security risks are bounded to the level of traditional IP forwarding, control, and management.</p>
    <p>The Active Networking framework benefits from the presence of network processors with specialized hardware assists. Lower safety levels have been implemented on an IBM PowerNP 4GS3.</p>
    <p>Future work: Dynamic off-loading of forwarding and control functionalities directly onto a network processor.</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Questions</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Additional Slides</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>AN Requirements for Network Processors</p>
    <p>Array register initialized with the first part of the packet content (i.e., packet header).</p>
    <p>Array registers (scratch memory) that is large enough to hold the memory section of an active packet as well as additional temporary values.</p>
    <p>A mechanism to read more data from the packet (access to all data in the packet) and an array register to store this information.</p>
    <p>A mechanism to update the packet being forwarded.</p>
    <p>Load and store operations to move data between registers.</p>
    <p>Standard arithmetic and logical operations on scalar registers.</p>
    <p>Support for standard comparison and control flow operations (e.g. (un)conditional branching, subroutine calls).</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>E2E Service using Active Networks</p>
    <p>Domain A Domain B Domain C</p>
    <p>- full support of RSVP in the domain. - no active routers present (active packets are forwarded as regular IP packets) - metropolitan area</p>
    <p>- limited RSVP support using active routers. - active packets from outside the domain are not executed in this domain (preemption) - router services installed by administrator - corresponds to a core ISP</p>
    <p>- No RSVP support. - entering active packets are allowed to execute active code up to safety level 1. - ISP at the edge of the network</p>
    <p>RSVP (controlled load and fixed filter)</p>
    <p>Sender Receiver</p>
  </div>
</Presentation>
