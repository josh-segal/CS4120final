<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>All Your Clicks Belong to Me: Investigating Click</p>
    <p>Interception on the Web Mingxue Zhang, Wei Meng, Sangho Lee, Byoungyoung Lee*, Xinyu Xing</p>
    <p>Chinese University of Hong Kong Microsoft Research</p>
    <p>*Seoul National University Pennsylvania State University</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Click-interception attackers usually force a user to visit a URL</p>
  </div>
  <div class="page">
    <p>Click Interception 101</p>
    <p>https://www.bbc.com/http://www.evil.com/</p>
    <p>#1: Hyperlinks, i.e., &lt;a&gt; elements  Modifying existing hyperlinks</p>
    <p>&lt;a id=&quot;head-1&quot; href=&quot;https://www.bbc.com/news/uk-politics-47373996&quot;&gt; &lt;h2&gt;May offers MPs Brexit delay vote&lt;/h2&gt; &lt;/a&gt;</p>
    <p>JavaScript</p>
    <p>var a = document.getElementById(&quot;head-1&quot;); var url = &quot;http://www.evil.com/&quot;; a.href = url;</p>
    <p>&lt;a id=&quot;head-1&quot; href=&quot;http://www.evil.com/&quot;&gt; &lt;h2&gt;May offers MPs Brexit delay vote&lt;/h2&gt; &lt;/a&gt;</p>
    <p>May offers MPs Brexit delay vote</p>
  </div>
  <div class="page">
    <p>Click Interception 101</p>
    <p>https://www.bbc.com/</p>
    <p>#1: Hyperlinks, i.e., &lt;a&gt; elements  Modifying existing hyperlinks  Creating huge hyperlinks</p>
    <p>&lt;a href=&quot;http://www.evil.com/&quot;&gt;</p>
    <p>&lt;/a&gt;</p>
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempor dolor vel feugiat imperdiet. Vivamus maximus lectus ut pharetra consectetur. Duis in massa a lacus fringilla ullamcorper. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin aliquam lacinia nulla, a porttitor augue porta eu. Vivamus id vehicula quam. Phasellus tempor nibh ex, vitae fringilla elit maximus in. Vestibulum lacinia lobortis sem. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nulla congue pulvinar ligula nec varius.</p>
    <p>Vivamus eleifend felis nulla, in scelerisque orci vestibulum ut. Aenean augue sem, posuere sed finibus sit amet, accumsan quis elit. Nunc elementum tincidunt ante. Integer maximus nunc eget dolor pulvinar commodo. Vestibulum tincidunt libero sapien, vel egestas libero gravida et. Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras tempor eget ipsum non ullamcorper. Aliquam euismod lacus at elementum volutpat. Curabitur in fringilla quam, fermentum volutpat risus. Aenean eu sapien quam. Nulla sit amet sem pharetra, vestibulum nibh eu, dignissim diam. Vivamus condimentum in ipsum gravida feugiat.JavaScript</p>
    <p>var a = document.createElement(&quot;a&quot;); var url = &quot;http://www.evil.com/&quot;; a.href = url; a.innerText = &quot;Lorem ipsum ...&quot;; document.body.appendChild(a);</p>
  </div>
  <div class="page">
    <p>Click Interception 101</p>
    <p>https://www.bbc.com/</p>
    <p>#2: EventListeners</p>
    <p>&lt;div class=&quot;container&quot;&gt; &lt;h2 id=&quot;head-1&quot;&gt;May offers MPs Brexit delay vote&lt;/h2&gt; &lt;/div&gt;</p>
    <p>May offers MPs Brexit delay vote</p>
    <p>JavaScript var h = document.getElementById(&quot;head-1&quot;); var url = &quot;http://www.evil.com/&quot;; h.addEventListener(&quot;click&quot;, function() { window.location.href = url; });</p>
    <p>http://www.evil.com/</p>
  </div>
  <div class="page">
    <p>Click Interception 101</p>
    <p>https://www.bbc.com/</p>
    <p>#3: Visual Deception  Mimicry</p>
    <p>Some Caption</p>
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempor dolor vel feugiat imperdiet. Vivamus maximus lectus ut pharetra consectetur. Duis in massa a lacus fringilla ullamcorper. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin aliquam lacinia nulla, a porttitor augue porta eu. Vivamus id vehicula quam. Phasellus tempor nibh ex, vitae fringilla elit maximus in. Vestibulum lacinia lobortis sem. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nulla congue pulvinar ligula nec varius.</p>
    <p>Vivamus eleifend felis nulla, in scelerisque orci vestibulum ut. Aenean augue sem, posuere sed finibus sit amet, accumsan quis elit. Nunc elementum tincidunt ante. Integer maximus nunc eget dolor pulvinar commodo. Vestibulum tincidunt libero sapien, vel egestas libero gravida et. Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras tempor eget ipsum non ullamcorper. Aliquam euismod lacus at elementum volutpat. Curabitur in fringilla quam, fermentum volutpat risus. Aenean eu sapien quam. Nulla sit amet sem pharetra, vestibulum nibh eu, dignissim diam. Vivamus condimentum in ipsum gravida feugiat.</p>
    <p>Some Caption</p>
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempor dolor vel feugiat imperdiet. Vivamus maximus lectus ut pharetra consectetur. Duis in massa a lacus fringilla ullamcorper. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin aliquam lacinia nulla, a porttitor augue porta eu. Vivamus id vehicula quam. Phasellus tempor nibh ex, vitae fringilla elit maximus in. Vestibulum lacinia lobortis sem. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nulla congue pulvinar ligula nec varius.</p>
  </div>
  <div class="page">
    <p>Click Interception 101</p>
    <p>https://www.bbc.com/</p>
    <p>Some Caption</p>
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempor dolor vel feugiat imperdiet. Vivamus maximus lectus ut pharetra consectetur. Duis in massa a lacus fringilla ullamcorper. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin aliquam lacinia nulla, a porttitor augue porta eu. Vivamus id vehicula quam. Phasellus tempor nibh ex, vitae fringilla elit maximus in. Vestibulum lacinia lobortis sem. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nulla congue pulvinar ligula nec varius.</p>
    <p>Vivamus eleifend felis nulla, in scelerisque orci vestibulum ut. Aenean augue sem, posuere sed finibus sit amet, accumsan quis elit. Nunc elementum tincidunt ante. Integer maximus nunc eget dolor pulvinar commodo. Vestibulum tincidunt libero sapien, vel egestas libero gravida et. Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras tempor eget ipsum non ullamcorper. Aliquam euismod lacus at elementum volutpat. Curabitur in fringilla quam, fermentum volutpat risus. Aenean eu sapien quam. Nulla sit amet sem pharetra, vestibulum nibh eu, dignissim diam. Vivamus condimentum in ipsum gravida feugiat.</p>
    <p>Click me to visit http://www.evil.com/</p>
    <p>Opacity: 50% 10% 1%</p>
    <p>http://www.evil.com/</p>
    <p>#3: Visual Deception  Mimicry  Transparent overlay</p>
  </div>
  <div class="page">
    <p>Threat Model</p>
    <p>http://www.a.com/</p>
    <p>Third-party Scripts &lt;script src=https://doubleclick.net/ad.js&gt; &lt;script src=https://lib.com/lib.js&gt; &lt;script src=https://fb.com/like.js&gt;</p>
    <p>First-party Scripts &lt;script src=assets/a.js&gt; &lt;script src=http://static.a.com/b.js&gt; &lt;script&gt;alert();&lt;/script&gt;</p>
    <p>A third-party script has the same privilege as a first-party script</p>
    <p>First-party scripts are trustworthy (arguable)  A third-party script may intercept click on any element  Intercepting clicks on a scripts own elements is allowed</p>
    <p>First-party elements Statically generated</p>
    <p>Third-party elements Dynamically generated</p>
    <p>Dynamically generated</p>
    <p>Dynamically generated</p>
    <p>We focus on detecting third-party script click interception</p>
  </div>
  <div class="page">
    <p>Challenges of Detecting Click Interception</p>
    <p>JavaScript code analysis  JavaScript is a dynamic programming language</p>
    <p>Static program analysis is difficult  A script can insert an inline script, e.g., &lt;script&gt; ... &lt;/script&gt;</p>
    <p>Inline scripts do NOT have a src attribute  Determining the class of inline scripts is difficult</p>
    <p>Element creation and mutation detection  JavaScript is unable to determine the initiating script of an element  A MutationObserver can observe mutation of attributes, childList, and</p>
    <p>subtree of a specific element  You have to create a MutationObserver for each element  It still does NOT know which script caused the change</p>
    <p>No, browser extension is developed using JavaScript</p>
    <p>Would a browser extension help?</p>
  </div>
  <div class="page">
    <p>Our Solution - Observer</p>
    <p>Rendering Engine</p>
    <p>DOM Layer</p>
    <p>JS Binding Layer</p>
    <p>JavaScript Engine</p>
    <p>JS Binding Layer Observer Monitoring Code</p>
    <p>DOM Layer Observer Monitoring Code</p>
    <p>A browser based analysis framework  Detecting changes to hyperlinks  Detecting dynamic hyperlink creations  Detecting dynamic script insertions  Detecting EventListener registrations</p>
  </div>
  <div class="page">
    <p>Detecting Changes to Hyperlinks</p>
    <p>static void HrefAttributeSetter(v8::Local&lt;v8::Value&gt; v8_value, const v8::FunctionCallbackInfo&lt;v8::Value&gt;&amp; info) { HTMLAnchorElement* impl = V8HTMLAnchorElement::ToImpl(info.Holder() ); USVStringOrTrustedURL cpp_value; V8USVStringOrTrustedURL::ToImpl(, v8_value, cpp_value, );</p>
    <p>JavaScript var a = document.getElementById(&quot;head-1&quot;); a.href = &quot;http://www.evil.com/&quot;;</p>
    <p>JavaScript Engine - V8</p>
    <p>Rendering Engine</p>
    <p>void HTMLAnchorElement::setHref(const USVStringOrTrustedURL&amp; stringOrTrustedURL, ExceptionState&amp; exception_state) { setAttribute(kHrefAttr, stringOrTrustedURL, exception_state); }</p>
    <p>DOM</p>
    <p>V8 Binding impl-&gt;setHref(cpp_value, ); }</p>
    <p>void HTMLAnchorElement::logChange(int scriptID) { this-&gt;changeLog-&gt;appendLog(scriptID, getAttribute(kHrefAttr)); }</p>
    <p>impl-&gt;logChange(v8::GetBottomScriptID());</p>
    <p>/* returns the scriptID of the bottom JS frame */ static int GetBottomScriptID();</p>
    <p>Observer Code</p>
    <p>The O bserve</p>
    <p>r code is not</p>
    <p>expos ed to</p>
    <p>JS</p>
  </div>
  <div class="page">
    <p>Detecting Mimicry</p>
    <p>https://www.bbc.com/</p>
    <p>Some Caption</p>
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempor dolor vel feugiat imperdiet. Vivamus maximus lectus ut pharetra consectetur. Duis in massa a lacus fringilla ullamcorper. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin aliquam lacinia nulla, a porttitor augue porta eu. Vivamus id vehicula quam. Phasellus tempor nibh ex, vitae fringilla elit maximus in. Vestibulum lacinia lobortis sem. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nulla congue pulvinar ligula nec varius.</p>
    <p>Some Caption</p>
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempor dolor vel feugiat imperdiet. Vivamus maximus lectus ut pharetra consectetur. Duis in massa a lacus fringilla ullamcorper. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin aliquam lacinia nulla, a porttitor augue porta eu. Vivamus id vehicula quam. Phasellus tempor nibh ex, vitae fringilla elit maximus in. Vestibulum lacinia lobortis sem. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nulla congue pulvinar ligula nec varius.</p>
    <p>CSS class: para-medium, column-2 # &lt;img&gt;: 1 size(container): 72K; ratio(&lt;img&gt;): 15%</p>
    <p>CSS class: para-medium, column-2, xxx # &lt;img&gt;: 1 size(container): 70K; ratio(&lt;img&gt;): 16%</p>
    <p>Sibling element groups</p>
  </div>
  <div class="page">
    <p>Detecting Transparent Overlay</p>
    <p>https://www.bbc.com/</p>
    <p>Some Caption</p>
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempor dolor vel feugiat imperdiet. Vivamus maximus lectus ut pharetra consectetur. Duis in massa a lacus fringilla ullamcorper. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin aliquam lacinia nulla, a porttitor augue porta eu. Vivamus id vehicula quam. Phasellus tempor nibh ex, vitae fringilla elit maximus in. Vestibulum lacinia lobortis sem. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nulla congue pulvinar ligula nec varius.</p>
    <p>Click me to visit http://www.evil.com/ Overlap: 10% 20% 100% Opacity:</p>
    <p>&gt; threshold 5% &lt; threshold</p>
  </div>
  <div class="page">
    <p>Implementation &amp; Experiments</p>
    <p>Alexa top 250K websites  Valid data from 228K websites (91.45%)  2M distinct third-party scripts</p>
    <p>1.2M distinct domains  2M unique third-party navigation URLs</p>
    <p>428K unique domains</p>
    <p>Chromium 64.0.3282.186  ~1K lines of C++ code</p>
    <p>Browser automation using Selenium  Auto-clicking all elements</p>
    <p>Disabled page navigation in experiments to only log URLs</p>
  </div>
  <div class="page">
    <p>Results</p>
    <p>Technique # Cases # Websites % Cases # Daily Visits</p>
    <p>Hyperlinks 4,178 221 89.52 12,686,591</p>
    <p>Modifying 1st-party links 4,027 100 86.29 2,496,620</p>
    <p>Modifying other 3rd-party links 31 2 0.66 638,247</p>
    <p>Inserting huge 3rd-party links 120 119 2.57 9,551,724</p>
    <p>Event Listeners 203 172 4.35 5,455,821</p>
    <p>On 1st-party nodes 189 161 4.05 4,636,145</p>
    <p>On other 3rd-party nodes 14 12 0.30 819,676</p>
    <p>Visual Deceptions 286 231 6.13 25,269,314</p>
    <p>Mimicry 140 87 3.00 16,604,258</p>
    <p>Transparent Overlay 146 144 3.13 8,665,056</p>
  </div>
  <div class="page">
    <p>Case Study - Hyperlinks</p>
    <p>magazinweb.net</p>
    <p>https://cdn.adf.ly/js/link-converter.js modified almost all hyperlinks  adf.ly provides a URL-shortening service  The websites include its script to intercept clicks for ad payment</p>
  </div>
  <div class="page">
    <p>Case Study - EventHandlers</p>
    <p>magazinweb.net</p>
    <p>The adf.ly script also used EventListeners to intercept clicks  It took a user to an ad landing page  It used a pop-up window to re-open the previous page</p>
  </div>
  <div class="page">
    <p>Case Study - Mimicry</p>
    <p>bintang.com</p>
    <p>https://securepubads.g.doubleclick.net/gpt/pubads_impl_207.js</p>
  </div>
  <div class="page">
    <p>Case Study - Transparent Overlay</p>
    <p>jgsdf.ucoz.com</p>
    <p>http://pl14318198.puserving.com/a2/49/14/a2491467a19ffc3f9fe0dbe66e54bae0.js</p>
  </div>
  <div class="page">
    <p>A click-interception victim user can be exposed to malicious content!</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>A new class of privilege abuse by third-party JavaScript code  Observer, a browser-based analysis framework</p>
    <p>Hyperlinks, EventHandlers, Visual Deception  437 click-interception third-party scripts on 613 websites  Click interception has become a new ad click fraud method  Click interception can lead victim users to malicious contents  Observer can be extended to stop click interception</p>
  </div>
  <div class="page">
    <p>Thank you!</p>
    <p>Q &amp; A</p>
  </div>
</Presentation>
