<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>A Polynomial-Time Dynamic Programming Algorithm for Phrase-Based Decoding with a</p>
    <p>Fixed Distortion Limit</p>
    <p>Yin-Wen Chang 1</p>
    <p>(Joint work with Michael Collins 1,2)</p>
    <p>July 31, 2017</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Background:</p>
    <p>I Phrase-based decoding without further constraints is NP-hard</p>
    <p>I Proof: reduction from the travelling salesman problem (TSP)[Knight(1999)]</p>
    <p>I Hard distortion limit is commonly imposed in PBMT systems</p>
    <p>Question:</p>
    <p>I Is phrase-based decoding with a fixed distortion limit NP-hard or not?</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>A related problem: bandwidth-limited TSP</p>
    <p>j</p>
    <p>|i  j|  d</p>
    <p>This work: a new decoding algorithm</p>
    <p>I Process the source word from left-to-right</p>
    <p>I Maintain multiple tapes in the target side</p>
    <p>I Run time: O(nd!lhd+1) n: source sentence length</p>
    <p>d: distortion limit</p>
  </div>
  <div class="page">
    <p>Overview of the proposed decoding algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>1</p>
    <p>1 =</p>
    <p>2 =</p>
    <p>(1, 2, this must)(5, 5, also)(6, 6, be)(3, 4, our concern)</p>
    <p>(3, 4, our concern)</p>
    <p>I Process the source word from left-to-right</p>
    <p>I Maintain multiple tapes in the target side</p>
  </div>
  <div class="page">
    <p>Overview of the proposed decoding algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>1  1  (1, 2, this must)</p>
    <p>1 =</p>
    <p>2 =</p>
    <p>(1, 2, this must)(5, 5, also)(6, 6, be)(3, 4, our concern)</p>
    <p>(3, 4, our concern)</p>
    <p>I Process the source word from left-to-right</p>
    <p>I Maintain multiple tapes in the target side</p>
  </div>
  <div class="page">
    <p>Overview of the proposed decoding algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>2  2  (3, 4, our concern)</p>
    <p>1 =</p>
    <p>2 =</p>
    <p>(1, 2, this must)(5, 5, also)(6, 6, be)(3, 4, our concern)</p>
    <p>(3, 4, our concern)</p>
    <p>I Process the source word from left-to-right</p>
    <p>I Maintain multiple tapes in the target side</p>
  </div>
  <div class="page">
    <p>Overview of the proposed decoding algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>1  1  (5, 5, also)</p>
    <p>1 =</p>
    <p>2 =</p>
    <p>(1, 2, this must)(5, 5, also)(6, 6, be)(3, 4, our concern)</p>
    <p>(3, 4, our concern)</p>
    <p>I Process the source word from left-to-right</p>
    <p>I Maintain multiple tapes in the target side</p>
  </div>
  <div class="page">
    <p>Overview of the proposed decoding algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>1  1  (6, 6, be) 2 1 =</p>
    <p>2 =</p>
    <p>(1, 2, this must)(5, 5, also)(6, 6, be)(3, 4, our concern)</p>
    <p>(3, 4, our concern)</p>
    <p>I Process the source word from left-to-right</p>
    <p>I Maintain multiple tapes in the target side</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction of the phrase-based decoding problem</p>
    <p>Target-side left-to-right: the usual decoding algorithm</p>
    <p>Source-side left-to-right: the proposed algorithm</p>
    <p>Time complexity of the proposed algorithm</p>
    <p>Conclusion and future work</p>
  </div>
  <div class="page">
    <p>Phrase-based decoding problem</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this must our concern also be</p>
    <p>I Segment the German sentence into non-overlapping phrases</p>
    <p>I Find an English translation for each German phrase</p>
    <p>I Reorder the English phrases to get a better English sentence</p>
    <p>Derivation: complete translation with phrase mappings Sub-derivation: partial translation</p>
  </div>
  <div class="page">
    <p>Phrase-based decoding problem</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this must our concern also be</p>
    <p>I Segment the German sentence into non-overlapping phrases</p>
    <p>I Find an English translation for each German phrase</p>
    <p>I Reorder the English phrases to get a better English sentence</p>
    <p>Derivation: complete translation with phrase mappings Sub-derivation: partial translation</p>
  </div>
  <div class="page">
    <p>Phrase-based decoding problem</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this must our concern also bethis must our concern also be</p>
    <p>I Segment the German sentence into non-overlapping phrases</p>
    <p>I Find an English translation for each German phrase</p>
    <p>I Reorder the English phrases to get a better English sentence</p>
    <p>Derivation: complete translation with phrase mappings Sub-derivation: partial translation</p>
  </div>
  <div class="page">
    <p>Phrase-based decoding problem</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this must our concern also bethis must also be our concern</p>
    <p>I Segment the German sentence into non-overlapping phrases</p>
    <p>I Find an English translation for each German phrase</p>
    <p>I Reorder the English phrases to get a better English sentence</p>
    <p>Derivation: complete translation with phrase mappings Sub-derivation: partial translation</p>
  </div>
  <div class="page">
    <p>Phrase-based decoding problem</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this must our concern also bethis must also be our concern</p>
    <p>I Segment the German sentence into non-overlapping phrases</p>
    <p>I Find an English translation for each German phrase</p>
    <p>I Reorder the English phrases to get a better English sentence</p>
    <p>Derivation: complete translation with phrase mappings Sub-derivation: partial translation</p>
  </div>
  <div class="page">
    <p>Score a derivation</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this must also be our concern</p>
    <p>I Phrase translation score: score(das muss, this must) +    I Language model score:</p>
    <p>score(&lt;s&gt; this must also be our concern &lt;/s&gt;)</p>
    <p>=score(this|&lt;s&gt;) + score(must|this) +</p>
    <p>I Reordering score:   |2 + 1  5|</p>
  </div>
  <div class="page">
    <p>Score a derivation</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this must also be our concern</p>
    <p>I Phrase translation score: score(das muss, this must) +</p>
    <p>I Language model score:</p>
    <p>score(&lt;s&gt; this must also be our concern &lt;/s&gt;)</p>
    <p>=score(this|&lt;s&gt;) + score(must|this) +</p>
    <p>I Reordering score:   |2 + 1  5|</p>
  </div>
  <div class="page">
    <p>Score a derivation</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this must also be our concern</p>
    <p>I Phrase translation score: score(das muss, this must) +    I Language model score:</p>
    <p>score(&lt;s&gt; this must also be our concern &lt;/s&gt;)</p>
    <p>=score(this|&lt;s&gt;) + score(must|this) +</p>
    <p>I Reordering score:   |2 + 1  5|</p>
  </div>
  <div class="page">
    <p>Score a derivation</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this must also be our concern</p>
    <p>I Phrase translation score: score(das muss, this must) +    I Language model score:</p>
    <p>score(&lt;s&gt; this must also be our concern &lt;/s&gt;)</p>
    <p>=score(this|&lt;s&gt;) + score(must|this) +</p>
    <p>I Reordering score:   |2 + 1  5|</p>
  </div>
  <div class="page">
    <p>Fixed distortion limit: distortion distance  d</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this must also be our concern</p>
    <p>I Distortion distance: |2 + 1  5| = 2</p>
    <p>I Distortion distance: |5 + 1  6| = 0 I Distortion distance: |6 + 1  3| = 4</p>
  </div>
  <div class="page">
    <p>Target-side left-to-right: the usual decoding algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this must</p>
  </div>
  <div class="page">
    <p>Target-side left-to-right: the usual decoding algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must</p>
  </div>
  <div class="page">
    <p>Target-side left-to-right: the usual decoding algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also</p>
  </div>
  <div class="page">
    <p>Target-side left-to-right: the usual decoding algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also be</p>
  </div>
  <div class="page">
    <p>Target-side left-to-right: the usual decoding algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also be our concern</p>
  </div>
  <div class="page">
    <p>Target-side left-to-right: dynamic programming algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this must</p>
    <p>Sub-derivation:</p>
    <p>(1, 2, this must)(5, 5, also)(6, 6, be)(3, 4, our concern)</p>
    <p>DP state:</p>
  </div>
  <div class="page">
    <p>Target-side left-to-right: dynamic programming algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must</p>
    <p>Sub-derivation:Sub-derivation:</p>
    <p>(1, 2, this must)(5, 5, also)(6, 6, be)(3, 4, our concern)</p>
    <p>DP state:DP state: (must, 2, 110000)</p>
  </div>
  <div class="page">
    <p>Target-side left-to-right: dynamic programming algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also</p>
    <p>Sub-derivation:Sub-derivation:</p>
    <p>(1, 2, this must)(5, 5, also)(6, 6, be)(3, 4, our concern)</p>
    <p>DP state:DP state: (also, 5, 110010)</p>
  </div>
  <div class="page">
    <p>Target-side left-to-right: dynamic programming algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also be</p>
    <p>Sub-derivation:Sub-derivation:</p>
    <p>(1, 2, this must)(5, 5, also)(6, 6, be)(3, 4, our concern)</p>
    <p>DP state:DP state: (be, 6, 110011)</p>
  </div>
  <div class="page">
    <p>Target-side left-to-right: dynamic programming algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also be our concern</p>
    <p>Sub-derivation:Sub-derivation:</p>
    <p>(1, 2, this must)(5, 5, also)(6, 6, be)(3, 4, our concern)</p>
    <p>DP state:DP state: (concern, 4, 111111)</p>
  </div>
  <div class="page">
    <p>Source-side left-to-right: the proposed algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this must</p>
  </div>
  <div class="page">
    <p>Source-side left-to-right: the proposed algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must</p>
  </div>
  <div class="page">
    <p>Source-side left-to-right: the proposed algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must our concern</p>
  </div>
  <div class="page">
    <p>Source-side left-to-right: the proposed algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also our concern</p>
  </div>
  <div class="page">
    <p>Source-side left-to-right: the proposed algorithm</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also be our concern</p>
  </div>
  <div class="page">
    <p>Source-side left-to-right: dynamic programming state</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this must</p>
    <p>Sub-derivation:</p>
    <p>(1, 2, this must)(5, 5, also)(6, 6, be)(3, 4, our concern)</p>
    <p>2 =(3, 4, our concern)</p>
    <p>DP state: j = 4,</p>
    <p>1 = 1, this, 2, must, 2 = 3, our, 4, concern</p>
  </div>
  <div class="page">
    <p>Source-side left-to-right: dynamic programming state</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must</p>
    <p>Sub-derivation:Sub-derivation:</p>
    <p>(1, 2, this must)(5, 5, also)(6, 6, be)(3, 4, our concern)1 =</p>
    <p>2 =(3, 4, our concern)</p>
    <p>DP state: j = 4,</p>
    <p>1 = 1, this, 2, must, 2 = 3, our, 4, concern</p>
    <p>DP state: j = 2,</p>
    <p>1 = 1, this, 2, must</p>
  </div>
  <div class="page">
    <p>Source-side left-to-right: dynamic programming state</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must</p>
    <p>Sub-derivation:Sub-derivation:</p>
    <p>(1, 2, this must)(5, 5, also)(6, 6, be)(3, 4, our concern)1 =</p>
    <p>2 =(3, 4, our concern)</p>
    <p>DP state: j = 4,</p>
    <p>1 = 1, this, 2, must, 2 = 3, our, 4, concern</p>
    <p>DP state: j = 2,</p>
    <p>1 = 1, this, 2, must</p>
  </div>
  <div class="page">
    <p>Source-side left-to-right: dynamic programming state</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must our concern</p>
    <p>Sub-derivation:Sub-derivation:</p>
    <p>(1, 2, this must)(5, 5, also)(6, 6, be)(3, 4, our concern)1 =</p>
    <p>2 =(3, 4, our concern)</p>
    <p>DP state: j = 4,</p>
    <p>1 = 1, this, 2, must, 2 = 3, our, 4, concern</p>
    <p>DP state: j = 4,</p>
    <p>1 = 1, this, 2, must, 2 = 3, our, 4, concern</p>
  </div>
  <div class="page">
    <p>Source-side left-to-right: dynamic programming state</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also our concern</p>
    <p>Sub-derivation:Sub-derivation:</p>
    <p>(1, 2, this must)(5, 5, also)(6, 6, be)(3, 4, our concern)1 =</p>
    <p>2 =(3, 4, our concern)</p>
    <p>DP state: j = 4,</p>
    <p>1 = 1, this, 2, must, 2 = 3, our, 4, concern</p>
    <p>DP state: j = 5,</p>
    <p>1 = 1, this, 5, also, 2 = 3, our, 4, concern</p>
  </div>
  <div class="page">
    <p>Source-side left-to-right: dynamic programming state</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also be our concern</p>
    <p>Sub-derivation:Sub-derivation:</p>
    <p>(1, 2, this must)(5, 5, also)(6, 6, be)(3, 4, our concern)1 =</p>
    <p>2 =(3, 4, our concern)</p>
    <p>DP state: j = 4,</p>
    <p>1 = 1, this, 2, must, 2 = 3, our, 4, concern</p>
    <p>DP state: j = 6,</p>
    <p>1 = 1, this, 4, concern</p>
  </div>
  <div class="page">
    <p>The number of DP states (fixed distortion limit d) State:</p>
    <p>( j,{1,2 . . .r}</p>
    <p>) r: number of tapes</p>
    <p>I j {1, . . . ,n} n: source sentence length  O(n)</p>
    <p>I  = (s,ws,t,wt ) Ex:  = (1, this, 5, also)</p>
    <p>= (s(),ws (),t(),wt ())  O(g(d) hd+1) I s,t: source word indices</p>
    <p>I ws,wt : translated target words</p>
    <p>X</p>
    <p>Translated source words Next phrase starts at</p>
    <p>s,t can only occurs here</p>
    <p>I s(1) = 1</p>
    <p>I s(i ) {j d + 2 . . . j} i {2 . . .r} I t(i ) {j d . . . j} i {1 . . .r} I r is bounded by d + 1.</p>
    <p>Number of states: O(n g(d) hd+1)</p>
  </div>
  <div class="page">
    <p>The number of DP states (fixed distortion limit d) State:</p>
    <p>( j,{1,2 . . .r}</p>
    <p>) r: number of tapes</p>
    <p>I j {1, . . . ,n} n: source sentence length  O(n)</p>
    <p>I  = (s,ws,t,wt ) Ex:  = (1, this, 5, also)</p>
    <p>= (s(),ws (),t(),wt ())  O(g(d) hd+1) I s,t: source word indices</p>
    <p>I ws,wt : translated target words</p>
    <p>X</p>
    <p>Translated source words Next phrase starts at</p>
    <p>s,t can only occurs here</p>
    <p>I s(1) = 1</p>
    <p>I s(i ) {j d + 2 . . . j} i {2 . . .r} I t(i ) {j d . . . j} i {1 . . .r} I r is bounded by d + 1.</p>
    <p>Number of states: O(n g(d) hd+1)</p>
  </div>
  <div class="page">
    <p>The number of DP states (fixed distortion limit d) State:</p>
    <p>( j,{1,2 . . .r}</p>
    <p>) r: number of tapes</p>
    <p>I j {1, . . . ,n} n: source sentence length  O(n) I  = (s,ws,t,wt ) Ex:  = (1, this, 5, also)</p>
    <p>= (s(),ws (),t(),wt ())  O(g(d) hd+1)</p>
    <p>I s,t: source word indices</p>
    <p>I ws,wt : translated target words</p>
    <p>X</p>
    <p>Translated source words Next phrase starts at</p>
    <p>s,t can only occurs here</p>
    <p>I s(1) = 1</p>
    <p>I s(i ) {j d + 2 . . . j} i {2 . . .r} I t(i ) {j d . . . j} i {1 . . .r} I r is bounded by d + 1.</p>
    <p>Number of states: O(n g(d) hd+1)</p>
  </div>
  <div class="page">
    <p>The number of DP states (fixed distortion limit d) State:</p>
    <p>( j,{1,2 . . .r}</p>
    <p>) r: number of tapes</p>
    <p>I j {1, . . . ,n} n: source sentence length  O(n) I  = (s,ws,t,wt ) Ex:  = (1, this, 5, also)</p>
    <p>= (s(),ws (),t(),wt ())  O(g(d) hd+1) I s,t: source word indices</p>
    <p>I ws,wt : translated target words</p>
    <p>X</p>
    <p>Translated source words Next phrase starts at</p>
    <p>s,t can only occurs here</p>
    <p>I s(1) = 1</p>
    <p>I s(i ) {j d + 2 . . . j} i {2 . . .r} I t(i ) {j d . . . j} i {1 . . .r} I r is bounded by d + 1.</p>
    <p>Number of states: O(n g(d) hd+1)</p>
  </div>
  <div class="page">
    <p>The number of DP states (fixed distortion limit d) State:</p>
    <p>( j,{1,2 . . .r}</p>
    <p>) r: number of tapes</p>
    <p>I j {1, . . . ,n} n: source sentence length  O(n) I  = (s,ws,t,wt ) Ex:  = (1, this, 5, also)</p>
    <p>= (s(),ws (),t(),wt ())  O(g(d) hd+1) I s,t: source word indices</p>
    <p>I ws,wt : translated target words</p>
    <p>X</p>
    <p>Translated source words Next phrase starts at</p>
    <p>s,t can only occurs here</p>
    <p>I s(1) = 1</p>
    <p>I s(i ) {j d + 2 . . . j} i {2 . . .r} I t(i ) {j d . . . j} i {1 . . .r} I r is bounded by d + 1.</p>
    <p>Number of states: O(n g(d) hd+1)</p>
  </div>
  <div class="page">
    <p>The number of DP states (fixed distortion limit d) State:</p>
    <p>( j,{1,2 . . .r}</p>
    <p>) r: number of tapes</p>
    <p>I j {1, . . . ,n} n: source sentence length  O(n) I  = (s,ws,t,wt ) Ex:  = (1, this, 5, also)</p>
    <p>= (s(),ws (),t(),wt ())  O(g(d) hd+1)</p>
    <p>I s,t: source word indices</p>
    <p>I ws,wt : translated target words</p>
    <p>X</p>
    <p>Translated source words Next phrase starts at</p>
    <p>s,t can only occurs here</p>
    <p>I s(1) = 1</p>
    <p>I s(i ) {j d + 2 . . . j} i {2 . . .r} I t(i ) {j d . . . j} i {1 . . .r} I r is bounded by d + 1.</p>
    <p>Number of states: O(n g(d) hd+1)</p>
  </div>
  <div class="page">
    <p>The number of DP states (fixed distortion limit d) State:</p>
    <p>( j,{1,2 . . .r}</p>
    <p>) r: number of tapes</p>
    <p>I j {1, . . . ,n} n: source sentence length  O(n) I  = (s,ws,t,wt ) Ex:  = (1, this, 5, also)</p>
    <p>= (s(),ws (),t(),wt ())  O(g(d) hd+1)</p>
    <p>I s,t: source word indices</p>
    <p>I ws,wt : translated target words</p>
    <p>X</p>
    <p>Translated source wordsTranslated source words Next phrase starts at</p>
    <p>s,t can only occurs here</p>
    <p>I s(1) = 1</p>
    <p>I s(i ) {j d + 2 . . . j} i {2 . . .r} I t(i ) {j d . . . j} i {1 . . .r} I r is bounded by d + 1.</p>
    <p>Number of states: O(n g(d) hd+1)</p>
  </div>
  <div class="page">
    <p>The number of DP states (fixed distortion limit d) State:</p>
    <p>( j,{1,2 . . .r}</p>
    <p>) r: number of tapes</p>
    <p>I j {1, . . . ,n} n: source sentence length  O(n) I  = (s,ws,t,wt ) Ex:  = (1, this, 5, also)</p>
    <p>= (s(),ws (),t(),wt ())  O(g(d) hd+1)</p>
    <p>I s,t: source word indices</p>
    <p>I ws,wt : translated target words</p>
    <p>X</p>
    <p>Translated source wordsTranslated source words Next phrase starts atNext phrase starts at</p>
    <p>s,t can only occurs here</p>
    <p>I s(1) = 1</p>
    <p>I s(i ) {j d + 2 . . . j} i {2 . . .r} I t(i ) {j d . . . j} i {1 . . .r} I r is bounded by d + 1.</p>
    <p>Number of states: O(n g(d) hd+1)</p>
  </div>
  <div class="page">
    <p>The number of DP states (fixed distortion limit d) State:</p>
    <p>( j,{1,2 . . .r}</p>
    <p>) r: number of tapes</p>
    <p>I j {1, . . . ,n} n: source sentence length  O(n) I  = (s,ws,t,wt ) Ex:  = (1, this, 5, also)</p>
    <p>= (s(),ws (),t(),wt ())  O(g(d) hd+1)</p>
    <p>I s,t: source word indices</p>
    <p>I ws,wt : translated target words</p>
    <p>X</p>
    <p>Translated source wordsTranslated source words Next phrase starts atNext phrase starts at</p>
    <p>s,t can only occurs heres,t can only occurs here</p>
    <p>I s(1) = 1</p>
    <p>I s(i ) {j d + 2 . . . j} i {2 . . .r} I t(i ) {j d . . . j} i {1 . . .r} I r is bounded by d + 1.</p>
    <p>Number of states: O(n g(d) hd+1)</p>
  </div>
  <div class="page">
    <p>The number of DP states (fixed distortion limit d) State:</p>
    <p>( j,{1,2 . . .r}</p>
    <p>) r: number of tapes</p>
    <p>I j {1, . . . ,n} n: source sentence length  O(n) I  = (s,ws,t,wt ) Ex:  = (1, this, 5, also)</p>
    <p>= (s(),ws (),t(),wt ())  O(g(d) hd+1)</p>
    <p>I s,t: source word indices</p>
    <p>I ws,wt : translated target words</p>
    <p>X</p>
    <p>Translated source words Next phrase starts at</p>
    <p>s,t can only occurs heres,t can only occurs here</p>
    <p>I s(1) = 1</p>
    <p>I s(i ) {j d + 2 . . . j} i {2 . . .r} I t(i ) {j d . . . j} i {1 . . .r} I r is bounded by d + 1.</p>
    <p>Number of states: O(n g(d) hd+1)</p>
  </div>
  <div class="page">
    <p>The number of DP states (fixed distortion limit d) State:</p>
    <p>( j,{1,2 . . .r}</p>
    <p>) r: number of tapes</p>
    <p>I j {1, . . . ,n} n: source sentence length  O(n) I  = (s,ws,t,wt ) Ex:  = (1, this, 5, also)</p>
    <p>= (s(),ws (),t(),wt ())  O(g(d) hd+1)</p>
    <p>I s,t: source word indices</p>
    <p>I ws,wt : translated target words</p>
    <p>X</p>
    <p>Translated source words Next phrase starts at</p>
    <p>s,t can only occurs heres,t can only occurs here</p>
    <p>X</p>
    <p>I s(1) = 1</p>
    <p>I s(i ) {j d + 2 . . . j} i {2 . . .r} I t(i ) {j d . . . j} i {1 . . .r} I r is bounded by d + 1.</p>
    <p>Number of states: O(n g(d) hd+1)</p>
  </div>
  <div class="page">
    <p>The number of DP states (fixed distortion limit d) State:</p>
    <p>( j,{1,2 . . .r}</p>
    <p>) r: number of tapes</p>
    <p>I j {1, . . . ,n} n: source sentence length  O(n) I  = (s,ws,t,wt ) Ex:  = (1, this, 5, also)</p>
    <p>= (s(),ws (),t(),wt ())  O(g(d) hd+1)</p>
    <p>I s,t: source word indices</p>
    <p>I ws,wt : translated target words</p>
    <p>X</p>
    <p>Translated source words Next phrase starts at</p>
    <p>s,t can only occurs heres,t can only occurs here</p>
    <p>I s(1) = 1</p>
    <p>I s(i ) {j d + 2 . . . j} i {2 . . .r} I t(i ) {j d . . . j} i {1 . . .r}</p>
    <p>I r is bounded by d + 1.</p>
    <p>Number of states: O(n g(d) hd+1)</p>
  </div>
  <div class="page">
    <p>The number of DP states (fixed distortion limit d) State:</p>
    <p>( j,{1,2 . . .r}</p>
    <p>) r: number of tapes</p>
    <p>I j {1, . . . ,n} n: source sentence length  O(n) I  = (s,ws,t,wt ) Ex:  = (1, this, 5, also)</p>
    <p>= (s(),ws (),t(),wt ())  O(g(d) hd+1)</p>
    <p>I s,t: source word indices</p>
    <p>I ws,wt : translated target words</p>
    <p>X</p>
    <p>Translated source words Next phrase starts at</p>
    <p>s,t can only occurs heres,t can only occurs here</p>
    <p>I s(1) = 1</p>
    <p>I s(i ) {j d + 2 . . . j} i {2 . . .r} I t(i ) {j d . . . j} i {1 . . .r} I r is bounded by d + 1.</p>
    <p>Number of states: O(n g(d) hd+1)</p>
  </div>
  <div class="page">
    <p>The number of DP states (fixed distortion limit d) State:</p>
    <p>( j,{1,2 . . .r}</p>
    <p>) r: number of tapes</p>
    <p>I j {1, . . . ,n} n: source sentence length  O(n) I  = (s,ws,t,wt ) Ex:  = (1, this, 5, also)</p>
    <p>= (s(),ws (),t(),wt ())  O(g(d) hd+1)</p>
    <p>I s,t: source word indices</p>
    <p>I ws,wt : translated target words</p>
    <p>X</p>
    <p>Translated source words Next phrase starts at</p>
    <p>s,t can only occurs heres,t can only occurs here</p>
    <p>I s(1) = 1</p>
    <p>I s(i ) {j d + 2 . . . j} i {2 . . .r} I t(i ) {j d . . . j} i {1 . . .r} I r is bounded by d + 1.</p>
    <p>Number of states: O(n g(d) hd+1)</p>
  </div>
  <div class="page">
    <p>The number of DP states (fixed distortion limit d) State:</p>
    <p>( j,{1,2 . . .r}</p>
    <p>) r: number of tapes</p>
    <p>I j {1, . . . ,n} n: source sentence length  O(n) I  = (s,ws,t,wt ) Ex:  = (1, this, 5, also)</p>
    <p>= (s(),ws (),t(),wt ())  O(g(d) hd+1)</p>
    <p>I s,t: source word indices</p>
    <p>I ws,wt : translated target words</p>
    <p>X</p>
    <p>Translated source words Next phrase starts at</p>
    <p>s,t can only occurs heres,t can only occurs here</p>
    <p>I s(1) = 1</p>
    <p>I s(i ) {j d + 2 . . . j} i {2 . . .r} I t(i ) {j d . . . j} i {1 . . .r} I r is bounded by d + 1.</p>
    <p>Number of states: O(n g(d) hd+1)</p>
  </div>
  <div class="page">
    <p>Extend a sub-derivation by four operations</p>
    <p>Current sub-derivation: j,1,2, . . .r Consider a new phrase starting at source position j + 1  O(l)</p>
    <p>I New segment r+1 = p I Append i = i,p I Prepend i = p,i I Concatenate i = i,p,i  O(r2) = O(d2)</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also be our concern also</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also)(5, 5, also)(3, 4, our concern) 2 = (5, 5, also)(3, 4, our concern) 3 = (5, 5, also)</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also) 2 = (3, 4, our concern)(5, 5, also) 3 = (5, 5, also)</p>
  </div>
  <div class="page">
    <p>Extend a sub-derivation by four operations</p>
    <p>Current sub-derivation: j,1,2, . . .r Consider a new phrase starting at source position j + 1  O(l)</p>
    <p>I New segment r+1 = p I Append i = i,p I Prepend i = p,i I Concatenate i = i,p,i  O(r2) = O(d2)</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also be our concern also</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also)(5, 5, also)(3, 4, our concern) 2 = (5, 5, also)(3, 4, our concern) 3 = (5, 5, also)</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also) 2 = (3, 4, our concern)(5, 5, also) 3 = (5, 5, also)</p>
  </div>
  <div class="page">
    <p>Extend a sub-derivation by four operations</p>
    <p>Current sub-derivation: j,1,2, . . .r Consider a new phrase starting at source position j + 1  O(l)</p>
    <p>I New segment r+1 = p I Append i = i,p I Prepend i = p,i I Concatenate i = i,p,i  O(r2) = O(d2)</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also be our concern also</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also)(5, 5, also)(3, 4, our concern) 2 = (5, 5, also)(3, 4, our concern) 3 = (5, 5, also)</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also) 2 = (3, 4, our concern)(5, 5, also) 3 = (5, 5, also)</p>
  </div>
  <div class="page">
    <p>Extend a sub-derivation by four operations</p>
    <p>Current sub-derivation: j,1,2, . . .r Consider a new phrase starting at source position j + 1  O(l)</p>
    <p>I New segment r+1 = p I Append i = i,p I Prepend i = p,i I Concatenate i = i,p,i  O(r2) = O(d2)</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also be our concern also</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also)(5, 5, also)(3, 4, our concern) 2 = (5, 5, also)(3, 4, our concern) 3 = (5, 5, also)</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also) 2 = (3, 4, our concern)(5, 5, also) 3 = (5, 5, also)</p>
  </div>
  <div class="page">
    <p>Extend a sub-derivation by four operations</p>
    <p>Current sub-derivation: j,1,2, . . .r Consider a new phrase starting at source position j + 1  O(l)</p>
    <p>I New segment r+1 = p I Append i = i,p I Prepend i = p,i I Concatenate i = i,p,i  O(r2) = O(d2)</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also be our concern alsoalso</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also)(5, 5, also)(3, 4, our concern) 2 = (5, 5, also)(3, 4, our concern) 3 = (5, 5, also)</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also) 2 = (3, 4, our concern)(5, 5, also) 3 = (5, 5, also)</p>
  </div>
  <div class="page">
    <p>Extend a sub-derivation by four operations</p>
    <p>Current sub-derivation: j,1,2, . . .r Consider a new phrase starting at source position j + 1  O(l)</p>
    <p>I New segment r+1 = p I Append i = i,p I Prepend i = p,i I Concatenate i = i,p,i  O(r2) = O(d2)</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must alsoalso be our concern also</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also)(5, 5, also)(3, 4, our concern) 2 = (5, 5, also)(3, 4, our concern) 3 = (5, 5, also)</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also) 2 = (3, 4, our concern)(5, 5, also) 3 = (5, 5, also)</p>
  </div>
  <div class="page">
    <p>Extend a sub-derivation by four operations</p>
    <p>Current sub-derivation: j,1,2, . . .r Consider a new phrase starting at source position j + 1  O(l)</p>
    <p>I New segment r+1 = p I Append i = i,p I Prepend i = p,i I Concatenate i = i,p,i  O(r2) = O(d2)</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also be our concern alsoalso</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also)(5, 5, also)(3, 4, our concern) 2 = (5, 5, also)(3, 4, our concern) 3 = (5, 5, also)</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also) 2 = (3, 4, our concern)(5, 5, also) 3 = (5, 5, also)</p>
  </div>
  <div class="page">
    <p>Extend a sub-derivation by four operations</p>
    <p>Current sub-derivation: j,1,2, . . .r Consider a new phrase starting at source position j + 1  O(l)</p>
    <p>I New segment r+1 = p I Append i = i,p I Prepend i = p,i I Concatenate i = i,p,i  O(r2) = O(d2)</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also be our concern alsoalso</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also)(5, 5, also)(3, 4, our concern) 2 = (5, 5, also)(3, 4, our concern) 3 = (5, 5, also)</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also) 2 = (3, 4, our concern)(5, 5, also)2 = (5, 5, also)(3, 4, our concern) 3 = (5, 5, also)</p>
  </div>
  <div class="page">
    <p>Extend a sub-derivation by four operations</p>
    <p>Current sub-derivation: j,1,2, . . .r Consider a new phrase starting at source position j + 1  O(l)</p>
    <p>I New segment r+1 = p I Append i = i,p I Prepend i = p,i I Concatenate i = i,p,i  O(r2) = O(d2)</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also be our concern alsoalso</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also)(5, 5, also)(3, 4, our concern) 2 = (5, 5, also)(3, 4, our concern) 3 = (5, 5, also)</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also)(5, 5, also)(3, 4, our concern) 2 = (3, 4, our concern)(5, 5, also) 3 = (5, 5, also)</p>
  </div>
  <div class="page">
    <p>Extend a sub-derivation by four operations</p>
    <p>Current sub-derivation: j,1,2, . . .r Consider a new phrase starting at source position j + 1  O(l)</p>
    <p>I New segment r+1 = p I Append i = i,p I Prepend i = p,i I Concatenate i = i,p,i  O(r2) = O(d2)</p>
    <p>das muss unsere sorge gleichermaen sein</p>
    <p>this mustthis must also be our concern alsoalsoalso</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also)(5, 5, also)(3, 4, our concern) 2 = (5, 5, also)(3, 4, our concern) 3 = (5, 5, also)</p>
    <p>Sub-derivation: 1 = (1, 2, this must)(5, 5, also)(5, 5, also)(3, 4, our concern) 2 = (3, 4, our concern)(5, 5, also) 3 = (5, 5, also)</p>
  </div>
  <div class="page">
    <p>Bound on running time O(nd!lhd+1)</p>
    <p># DP states: O(n g(d) hd+1) # transition: O(d2  l)</p>
    <p>I n: source sentence length</p>
    <p>I d: distortion limit</p>
    <p>I l: bound on the number of phrases starting at any position</p>
    <p>I h: bound on the maximum number of target translations for any source word</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Problem: Phrase-based decoding with a fixed distortion limit</p>
    <p>I A new decoding algorithm with O(nd!lhd+1) time</p>
    <p>I Operate from left to right on the source side</p>
    <p>I Maintain multiple tapes on the target side</p>
  </div>
  <div class="page">
    <p>Follow-up paper in EMNLP discussing experimental results</p>
    <p>To appear in EMNLP 2017: Source-side left-to-right or target-side left-to-right? An empirical comparison of two phrase-based decoding algorithms</p>
    <p>I Beam search with a trigram language model</p>
    <p>I Constraints on the number of tapes</p>
    <p>I Achieve similar efficiency and accuracy as Moses</p>
  </div>
  <div class="page">
    <p>Future work</p>
    <p>Finite state transducer (FST) formulation</p>
    <p>j = 4</p>
    <p>1 = 1,this,2,must 2 = 3,our,4,concern</p>
    <p>j = 5</p>
    <p>1 = 1,this,5,also 2 = 3,our,4,concern</p>
    <p>Neural machine translation</p>
    <p>I An NMT system using this kind of approach?</p>
    <p>I Replace the attention model by absolving source words strictly left-to-right?</p>
  </div>
</Presentation>
