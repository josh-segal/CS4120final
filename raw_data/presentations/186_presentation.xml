<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>F.F. Dragan F.F. Dragan (Kent State)(Kent State)</p>
    <p>A.B. Kahng A.B. Kahng (UCSD)(UCSD)</p>
    <p>I. Mandoiu I. Mandoiu (UCLA)(UCLA)</p>
    <p>S. Muddu S. Muddu (Sanera Systems)(Sanera Systems)</p>
    <p>A. Zelikovsky A. Zelikovsky (Georgia State)(Georgia State)</p>
    <p>Provably Good Global Buffering by Multiterminal Multicommodity Flow</p>
    <p>Approximation</p>
    <p>Provably Good Global Buffering by Multiterminal Multicommodity Flow</p>
    <p>Approximation</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Buffer-block methodology for global buffering</p>
    <p>Global routing via buffer-blocks problem</p>
    <p>Integer node-capacitated multiterminal multicommodity flow (MTMCF) formulation</p>
    <p>Provably good approximation of fractional MTMCF</p>
    <p>Provably good rounding of fractional MTMCF</p>
    <p>Key implementation choices</p>
    <p>Experimental results</p>
    <p>Extensions &amp; conclusions</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>VDSM  buffer / inverter insertion for all global nets  50nm technology  &gt;1,000,000 buffers</p>
    <p>Solution: insert buffers only in Buffer-Blocks (BBs)</p>
    <p>Simplified design: isolates buffer insertion from circuit block implementations</p>
    <p>Efficient utilization of routing/area resources (RAR) RAR(cap. 2k buffer-block) =   RAR(cap. k buffer-block)</p>
    <p>For high-end designs,   1.6</p>
  </div>
  <div class="page">
    <p>maximize the number of routable nets</p>
    <p>parity constraints</p>
    <p>Buffer-Block Methodology</p>
  </div>
  <div class="page">
    <p>Buffer-Block Methodology</p>
  </div>
  <div class="page">
    <p>Problem Formulation</p>
    <p>Global Buffering via Buffer-Blocks (GRBB) Problem Given:</p>
    <p>BB locations and capacities  list of multi-pin nets, each net has</p>
    <p>upper-bound + parity requirement on #buffers for each sourcesink path</p>
    <p>[non-negative weight (criticality coefficient)]  L/U bounds on wirelength b/w consecutive buffers/pins</p>
    <p>Find:</p>
    <p>buffered routing of a maximum [weighted] number of nets subject to the given constraints</p>
    <p>[Dragan+00]: 2-pin nets This paper: multi-pin nets</p>
  </div>
  <div class="page">
    <p>Our Contributions</p>
    <p>Integer node-capacitated MTMCF formulation</p>
    <p>Approximation algorithm for fractional MTMCF</p>
    <p>Extends [GargK98,Fleischer99,Albrecht00,Dragan+00] to nodecapacitated + multiterminal case</p>
    <p>Provably good fractional MTMCF rounding algorithms,</p>
    <p>Provably good algorithm for GRBB Problem</p>
    <p>Practical rounding heuristics based on random-walks</p>
    <p>Computational study comparing alternative implementations</p>
  </div>
  <div class="page">
    <p>Integer Program Formulation</p>
    <p>}],[:{</p>
    <p>BlocksBuffer pins :),(Graph</p>
    <p>ULdist(u,v)(u,v)E</p>
    <p>VEVG</p>
    <p>oncemost at routednet each</p>
    <p>vv</p>
    <p>{0,1,2})( through passes tree times# ),(</p>
    <p>every for },1,0{)(</p>
    <p>every for ),(cap)(),(..</p>
    <p>)(max</p>
    <p>vTvT</p>
    <p>TTf</p>
    <p>VvvTfvTts</p>
    <p>Tf</p>
    <p>T</p>
    <p>T</p>
  </div>
  <div class="page">
    <p>Relax+Round Approach</p>
    <p>Relaxation = node-capacitated multiterminal multicommodity flow</p>
    <p>Exact linear programming algorithms are impractical for large instances</p>
    <p>KEY IDEA: use approximation algorithm</p>
    <p>can approximate optimum within a factor of (1-) for any &gt;0</p>
    <p>allows continuous tradeoff between runtime and solution quality</p>
    <p>Provably good rounding using [RaghavanT87]</p>
    <p>Practical rounding using random-walks</p>
  </div>
  <div class="page">
    <p>The -MTMCF Algorithm</p>
    <p>w(v) = , f = 0 For i = 1 to N do For k = 1, , #nets do Find min weight valid routing tree T for net k While w(T) &lt; min{ 1, (1+2)^i } do f(T)= f(T) + 1 For every v  T do w(v)  ( 1 +  (T,v)/cap(v) ) * w(v) End For Find min weight valid routing tree T for net k End While End For End For Output f/N</p>
  </div>
  <div class="page">
    <p>Runtime of -MTMCF Algorithm</p>
    <p>Main step of -MTMCF algorithm: computing min node-weight valid routing tree for a net  min node-weight directed rooted Steiner tree (DRST) in a directed acyclic graph</p>
    <p>))nets(#( Runtime 2 MO</p>
    <p>DRSTweight -nodemin compute totime 1</p>
    <p>kkO</p>
    <p>M k</p>
  </div>
  <div class="page">
    <p>Implementation choices</p>
    <p>Decomposition Star, Minimum</p>
    <p>Spanning tree</p>
    <p>Matching, 3-restricted Steiner tree</p>
    <p>Not needed</p>
    <p>Min-weight DRST Shortest path (exact)</p>
    <p>Try all Steiner pts + shortest paths</p>
    <p>(exact)</p>
    <p>Very hard! heuristics</p>
    <p>Rounding Random-walk Backward random-walks</p>
    <p>[Dragan+00] This paper</p>
  </div>
  <div class="page">
    <p>Number of routed nets  (1- )OPT</p>
    <p>With high probability, no BB capacity is exceeded</p>
    <p>Problem: Impractical to store all non-zero flow trees</p>
    <p>Provably Good Rounding</p>
  </div>
  <div class="page">
    <p>Number of routed nets  (1- )OPT</p>
    <p>With high probability, no BB capacity is exceeded</p>
    <p>Random-Walk 2-TMCF Rounding</p>
    <p>use random walk from source to sink</p>
    <p>Practical: random walk requires storing only flows on edges</p>
  </div>
  <div class="page">
    <p>Random-Walk MTMCF Rounding</p>
    <p>S T1</p>
    <p>T2</p>
    <p>T3SourceSinks</p>
  </div>
  <div class="page">
    <p>Random-Walk MTMCF Rounding</p>
    <p>S T1</p>
    <p>T2</p>
    <p>T3SourceSinks</p>
  </div>
  <div class="page">
    <p>The MTMCF Rounding Heuristic</p>
    <p>random walks</p>
    <p>No scaling-down, approximate MTMCF &lt; OPT</p>
    <p>Few violations</p>
    <p>Further routing still possible</p>
  </div>
  <div class="page">
    <p>Implemented Heuristics</p>
    <p>Greedy buffered routing 1. For each net, route sinks sequentially along shortest</p>
    <p>path to source or node already connected to source</p>
    <p>MTMCF approximation + randomized rounding  2TMCF [Dragan+00]</p>
    <p>3TMCF (3-pin decomposition + -MTMCF + rounding)</p>
    <p>4TMCF (4-pin decomposition + -MTMCF + rounding)</p>
    <p>MTMCF (-MTMCF w/ approximate DRST + rounding)</p>
  </div>
  <div class="page">
    <p>Experimental Setup</p>
    <p>Test instances extracted from next-generation SGI microprocessor</p>
    <p>Up to 5,000 nets, ~6,000 sinks</p>
    <p>U=4,000 m, L=500-2,000 m</p>
    <p>50 buffer blocks</p>
    <p>200-400 buffers / BB</p>
  </div>
  <div class="page">
    <p>% Sinks Connected</p>
    <p>#sinks/ #nets</p>
    <p>Greed</p>
    <p>=.6=.6 44</p>
    <p>=.0=.0 44</p>
    <p>=.6=.6 44</p>
    <p>=.0=.0 44</p>
    <p>=.6=.6 44</p>
    <p>=.0=.0 44</p>
    <p>=.6=.6 44</p>
    <p>=.0=.0 44</p>
  </div>
  <div class="page">
    <p>Runtime (sec.)</p>
    <p>#sinks/ #nets</p>
    <p>Greed</p>
    <p>=.6=.6 44</p>
    <p>=.0=.0 44</p>
    <p>=.6=.6 44</p>
    <p>=.0=.0 44</p>
    <p>=.6=.6 44</p>
    <p>=.0=.0 44</p>
    <p>=.6=.6 44</p>
    <p>=.0=.0 44</p>
  </div>
  <div class="page">
    <p>% Routed Nets vs. Runtime</p>
    <p>CPU Seconds</p>
    <p>% r</p>
    <p>o u</p>
    <p>te d</p>
    <p>n e</p>
    <p>ts</p>
    <p>Greed</p>
    <p>MTMCF</p>
  </div>
  <div class="page">
    <p>Resource Usage</p>
    <p>Greed</p>
    <p>=.6=.6 44</p>
    <p>=.0=.0 44</p>
    <p>=.6=.6 44</p>
    <p>=.0=.0 44</p>
    <p>=.6=.6 44</p>
    <p>=.0=.0 44</p>
    <p>=.6=.6 44</p>
    <p>=.0=.0 44</p>
    <p># Conn. Sinks</p>
    <p>% Conn. Sinks</p>
    <p>Wirelength (meters)</p>
    <p>WL/sink (microns)</p>
    <p>#Buffers 9037 9,860 10,676 9,591 10,610 9,497 10,507 9,860 10,647</p>
    <p>#Buff/sink 1.60 1.72 1.83 1.66 1.80 1.63 1.77 1.70 1.81</p>
    <p>#nets = 4,764 #sinks = 6,038 400 buffers/BB</p>
  </div>
  <div class="page">
    <p>WL and #Buffers for 100% Completion</p>
    <p>#nets = 4,764 #sinks = 6,038 Flow-rounding wastes routing resources!</p>
    <p>BB Cap.</p>
    <p>Greed</p>
    <p>=.64=.64 =.04=.04 =.64=.64 =.04=.04 =.64=.64 =.04=.04 =.64=.64 =.04=.04</p>
    <p>50.07</p>
    <p>49.45</p>
    <p>49.54</p>
  </div>
  <div class="page">
    <p>Conclusions and Ongoing Work</p>
    <p>Provably good algorithms and practical heuristics based on node-capacitated MTMCF approximation  Higher completion rates than previous algorithms</p>
    <p>Extensions:  Combine global buffering with BB planning</p>
    <p>combine with compaction</p>
  </div>
  <div class="page">
    <p>Combining with compaction</p>
  </div>
  <div class="page">
    <p>Combining with compaction</p>
  </div>
  <div class="page">
    <p>Combining with compaction</p>
    <p>Sum-capacity constraints: cap(BB1) + cap(BB2)  const.</p>
  </div>
  <div class="page">
    <p>Conclusions and Ongoing Work</p>
    <p>Provably good algorithms and practical heuristics based on node-capacitated MTMCF approximation  Higher completion rates than previous algorithms</p>
    <p>Extensions:  Combine global buffering with BB planning</p>
    <p>combine with compaction</p>
    <p>Enforce channel capacity constraints  Improved resource usage</p>
    <p>smart release of resources</p>
  </div>
</Presentation>
