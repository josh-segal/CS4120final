<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>FastTrack: Foreground App-Aware I/O</p>
    <p>Management for Improving User Experience</p>
    <p>of Android Smartphones</p>
    <p>USENIX Annual Technical Conference, 2018</p>
    <p>Sangwook Shane Hahn*, Sungjin Lee,</p>
    <p>Inhyuk Yee#, Donguk Ryu and Jihong Kim*</p>
    <p>*Seoul National University DGIST</p>
    <p>#AIBrain Asia Samsung Electronics</p>
  </div>
  <div class="page">
    <p>User Experience in Android Smartphones</p>
    <p>App Launch App Runtime App Switch</p>
    <p>App response time</p>
    <p>is crucial to the user experience</p>
  </div>
  <div class="page">
    <p>Background Apps Degrade the Quality of User Experience</p>
    <p>Background apps increase</p>
    <p>foreground app launch time by up to 2.6 times</p>
    <p>Nexus 5 Nexus 6 Galaxy S6</p>
    <p>App launch time</p>
    <p>App launch time increases</p>
    <p>due to background apps</p>
    <p>Pixel</p>
    <p>BG</p>
    <p>BG</p>
    <p>BG BG</p>
    <p>App Update</p>
  </div>
  <div class="page">
    <p>Nexus 5 Nexus 6 Galaxy S6 Pixel</p>
    <p>Background Apps Degrade the Quality of User Experience</p>
    <p>Background apps increase</p>
    <p>foreground app switch time by up to 19.5 times</p>
    <p>App switch time</p>
    <p>App switch time increases</p>
    <p>due to background apps</p>
    <p>BG BG BG BG</p>
    <p>App Update</p>
  </div>
  <div class="page">
    <p>Main Cause of Performance Degradation</p>
    <p>Network?GPU?</p>
    <p>Storage?CPU?</p>
    <p>No</p>
    <p>rendering</p>
    <p>for BG apps</p>
    <p>Performance</p>
    <p>even in offline</p>
    <p>CPU Network</p>
    <p>iowait Storage iowait</p>
    <p>CPU Network</p>
    <p>iowait Storage iowait</p>
    <p>How background apps degrade</p>
    <p>the quality of user experience?</p>
    <p>Background</p>
    <p>(storage) I/Os</p>
    <p>BG</p>
  </div>
  <div class="page">
    <p>Background I/O Occurrence Frequency</p>
    <p>Q: Are background I/Os (BG I/Os)</p>
    <p>occur frequently ?</p>
    <p>Average days between releases</p>
    <p>Popular apps are</p>
    <p>updated in 1 to 2 weeks</p>
    <p>Frequent BG I/O occurrences have</p>
    <p>a critical impact on the user experience</p>
    <p>App Update</p>
    <p>BG</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Impact of Background I/O on User Experience</p>
    <p>Foreground-Background Interference Analysis</p>
    <p>FastTrack: Foreground App-Aware I/O Management</p>
    <p>Experimental Results</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Foreground-Background Interference Analysis</p>
    <p>Page Cache</p>
    <p>Block Layer</p>
    <p>Storage Device</p>
    <p>Page</p>
    <p>Cache</p>
    <p>Block I/O</p>
    <p>Layer</p>
    <p>Storage</p>
    <p>Device</p>
    <p>Android</p>
    <p>Platform</p>
    <p>File</p>
    <p>System Application</p>
    <p>Page cache and storage device are affected</p>
    <p>most by FG-BG interference</p>
    <p>Launch</p>
    <p>Switch</p>
    <p>Android Storage I/O Stack</p>
    <p>Runtime</p>
    <p>Update BG</p>
    <p>Update BG</p>
    <p>Update BG</p>
  </div>
  <div class="page">
    <p>Page Cache</p>
    <p>Storage Device</p>
    <p>Impact on Page Cache: Lock Contention</p>
    <p>Lock contentions in the page cache can significantly degrade the user experience by waiting the completion of BG I/Os frequently</p>
    <p>Clean Pages Dirty Pages</p>
    <p>FG</p>
    <p>App</p>
    <p>BG</p>
    <p>App</p>
    <p>BG</p>
    <p>App</p>
    <p>FG data BG data BG data</p>
    <p>Waiting</p>
    <p>FG data BG data BG data FG data BG data BG data</p>
  </div>
  <div class="page">
    <p>Page Cache</p>
    <p>Impact on Page Cache: High Miss Rate</p>
    <p>Existing page cache replacement policy can significantly degrade the user experience by evicting performance-critical hot FG pages</p>
    <p>Storage Device</p>
    <p>Clean Pages Dirty Pages</p>
    <p>FG</p>
    <p>App</p>
    <p>BG</p>
    <p>App</p>
    <p>BG</p>
    <p>App</p>
    <p>FG data FG data BG data BG data</p>
    <p>FG data FG data BG data BG data BG data BG dataBG data BG dataBG data BG data</p>
    <p>Long</p>
    <p>Latency</p>
    <p>Page</p>
    <p>Replacement</p>
    <p>Page Cache</p>
    <p>Miss</p>
  </div>
  <div class="page">
    <p>Impact on Storage Device: Internal Priority Inversion</p>
    <p>FG I/O</p>
    <p>(sec)</p>
    <p>Storage</p>
    <p>Throughput</p>
    <p>(MB/sec) Switch (write-dominant)</p>
    <p>FG I/O BG I/O</p>
    <p>(sec)</p>
    <p>Existing device I/O schedulers priority policy can significantly degrade the user experience by</p>
    <p>limiting the throughput of foreground I/Os</p>
    <p>NAND Flash Memory</p>
    <p>Write Request Write Request</p>
    <p>Write Request</p>
    <p>NAND Flash-based Storage Device</p>
    <p>Read Request Read Request</p>
    <p>Read RequestFIFO FIFO</p>
    <p>Storage Throughput</p>
    <p>BG Reads</p>
    <p>BG</p>
  </div>
  <div class="page">
    <p>Solution for Foreground-Background Interference</p>
    <p>Page</p>
    <p>Cache</p>
    <p>Block I/O</p>
    <p>Layer</p>
    <p>Storage</p>
    <p>Device</p>
    <p>Get FG App</p>
    <p>Information</p>
    <p>Keep FG Data</p>
    <p>Preempt BG I/O</p>
    <p>Dispatch FG I/O First</p>
    <p>Read/Write FG I/O First</p>
    <p>FastTrack</p>
    <p>BG I/OFG I/O</p>
    <p>&gt;&gt;&gt; FastTrack &gt;&gt;&gt; &gt;&gt;&gt; &gt;&gt;&gt;</p>
    <p>BG I/O Storage I/O Path</p>
    <p>FG I/O</p>
    <p>FG I/OBG I/O BG I/O</p>
    <p>Android</p>
    <p>Platform</p>
    <p>File</p>
    <p>System Application</p>
    <p>Android Storage I/O Stack</p>
    <p>FastTrack is effective in improving</p>
    <p>Android smartphone user experience</p>
    <p>Page</p>
    <p>Cache Block I/O</p>
    <p>Layer</p>
    <p>Storage</p>
    <p>Device</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Impact of Background I/O on User Experience</p>
    <p>Foreground-Background Interference Analysis</p>
    <p>FastTrack: Foreground App-Aware I/O Management</p>
    <p>Experimental Results</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Overview of FastTrack</p>
    <p>Improves foreground I/O performance &amp;</p>
    <p>Improves the quality of smartphone user experience</p>
    <p>Preempt</p>
    <p>BG I/Os</p>
    <p>Dispatching</p>
    <p>Detect</p>
    <p>FG I/Os</p>
    <p>using Tagging</p>
    <p>Storage</p>
    <p>Device</p>
    <p>Device I/O</p>
    <p>Scheduler</p>
    <p>Detect</p>
    <p>FG I/Os</p>
    <p>using UID</p>
    <p>Preempt</p>
    <p>I/O Operations</p>
    <p>for BG I/Os</p>
    <p>Prevent FG</p>
    <p>Data from</p>
    <p>Being Flushed</p>
    <p>Page</p>
    <p>Allocator</p>
    <p>Deliver FG I/Os</p>
    <p>to NAND flash</p>
    <p>chip instantly</p>
    <p>Page Cache</p>
    <p>Android Platform</p>
    <p>FG apps UID</p>
    <p>Deliver</p>
    <p>FG I/O</p>
    <p>Instantly</p>
    <p>App Status</p>
    <p>Detector</p>
    <p>Detect</p>
    <p>FG I/Os</p>
    <p>using UID</p>
    <p>Preempt</p>
    <p>I/O Operations</p>
    <p>for BG I/Os</p>
    <p>Prevent FG</p>
    <p>Data from</p>
    <p>Being Flushed</p>
    <p>I/O</p>
    <p>Dispatcher</p>
    <p>Page</p>
    <p>Reclaimer</p>
  </div>
  <div class="page">
    <p>App Status Detector &amp; Page Reclaimer</p>
    <p>Android Platform</p>
    <p>FG App</p>
    <p>(UID:</p>
    <p>= 10003 sysfs</p>
    <p>(10003)</p>
    <p>Page</p>
    <p>Cache</p>
    <p>Dirty PagesClean Pages</p>
    <p>FG data</p>
    <p>(UID</p>
    <p>FG data</p>
    <p>(UID</p>
    <p>BG data</p>
    <p>(UID</p>
    <p>BG data</p>
    <p>(UID</p>
    <p>Page</p>
    <p>Reclaimer</p>
    <p>FG data</p>
    <p>(UID</p>
    <p>FG data</p>
    <p>(UID</p>
    <p>BG data</p>
    <p>(UID</p>
    <p>BG data</p>
    <p>(UID</p>
    <p>App Status</p>
    <p>Detector Launch</p>
    <p>Activity C</p>
    <p>Last</p>
    <p>Running</p>
    <p>Activity B</p>
    <p>Activity A</p>
    <p>Running Activity</p>
    <p>Activity StackTrigger</p>
    <p>Detect</p>
    <p>Prevent FG Data</p>
  </div>
  <div class="page">
    <p>Page Allocator</p>
    <p>Write File B</p>
    <p>(UID 10001)</p>
    <p>FG App UID</p>
    <p>= 10003 Linux</p>
    <p>Kernel</p>
    <p>Page</p>
    <p>Allocator</p>
    <p>Page</p>
    <p>Cache</p>
    <p>Get_free_pages (4 pages) Get_free_pages (4 pages)</p>
    <p>Preempt</p>
    <p>Detect</p>
    <p>Resume</p>
    <p>Read File A</p>
    <p>(UID 10003)</p>
    <p>FG I/O Flag</p>
    <p>= false</p>
    <p>FG I/O Flag</p>
    <p>= true</p>
    <p>Page PagePage PagePage Page Page PagePage PagePage Page Page Page</p>
    <p>Page Page</p>
    <p>Checkpoint</p>
    <p>App Update</p>
    <p>BG</p>
  </div>
  <div class="page">
    <p>Experimental Settings for Android Smartphones</p>
    <p>Page</p>
    <p>Cache</p>
    <p>Block I/O</p>
    <p>Layer</p>
    <p>Storage</p>
    <p>Device</p>
    <p>Android</p>
    <p>Platform</p>
    <p>File</p>
    <p>System Application</p>
    <p>Android Storage I/O Stack</p>
    <p>FastTrack-</p>
    <p>FG App Usage Scenario</p>
    <p>BG App Usage Scenario</p>
    <p>Launch (Read-dominant) Update (Write-dominant)</p>
    <p>Switch (Write-dominant) Upload (Read-dominant)</p>
    <p>App Status</p>
    <p>Detector</p>
    <p>Page</p>
    <p>Allocator</p>
    <p>Page</p>
    <p>Reclaimer</p>
    <p>I/O</p>
    <p>Dispatcher</p>
    <p>BG</p>
    <p>BG</p>
  </div>
  <div class="page">
    <p>Result 1: App Launch Time Comparisons</p>
    <p>-87%</p>
    <p>FG Only</p>
    <p>FG + BG</p>
    <p>FastTrack-</p>
    <p>Launch</p>
    <p>Update</p>
    <p>(sec)</p>
    <p>BG</p>
  </div>
  <div class="page">
    <p>Result 2: App Switch Time Comparisons</p>
    <p>Internal priority inversion limits</p>
    <p>the effect of FastTrack-</p>
    <p>(FG write priority &lt; BG read priority in storage device)</p>
    <p>-61%</p>
    <p>(sec)</p>
    <p>FG Only</p>
    <p>FG + BG</p>
    <p>FastTrack-</p>
    <p>Switch</p>
    <p>UploadBG</p>
  </div>
  <div class="page">
    <p>Experimental Settings for Emulator</p>
    <p>Emulation at</p>
    <p>Host-level FTL</p>
    <p>+ Customized</p>
    <p>SSD</p>
    <p>Application</p>
    <p>Launch/</p>
    <p>Usage</p>
    <p>System</p>
    <p>Call Trace</p>
    <p>Trace</p>
    <p>Replayer</p>
    <p>Android</p>
    <p>Smartphone</p>
    <p>FastTrack</p>
    <p>I/O Dispatcher</p>
    <p>Page</p>
    <p>Allocator</p>
    <p>App Status</p>
    <p>Detector</p>
    <p>Device I/O</p>
    <p>Scheduler</p>
    <p>Page</p>
    <p>Reclaimer</p>
    <p>FastTrack-</p>
    <p>I/O Dispatcher</p>
    <p>Page</p>
    <p>Allocator</p>
    <p>App Status</p>
    <p>Detector</p>
    <p>Page</p>
    <p>Reclaimer</p>
  </div>
  <div class="page">
    <p>Result 3: Storage-Level Snapshot</p>
    <p>Device I/O scheduler can provide</p>
    <p>a much higher throughput to FG I/Os</p>
    <p>even when FG I/Os are write and BG I/Os are read</p>
    <p>FG I/O</p>
    <p>BG I/O</p>
    <p>(sec)</p>
    <p>Storage</p>
    <p>Throughput</p>
    <p>(MB/sec)</p>
    <p>FastTrack</p>
    <p>FastTrack-</p>
    <p>FG I/O BG I/O</p>
    <p>(sec)</p>
    <p>Storage ThroughputBG</p>
    <p>Camera Switch Time</p>
    <p>Switch Time</p>
  </div>
  <div class="page">
    <p>Normalized Camera App Switch Time</p>
    <p>Result 4: Effectiveness of FastTrack over Varying BG Apps</p>
    <p>FastTrack can provide the equivalent</p>
    <p>level of responsiveness to an FG app</p>
    <p>regardless of the number of BG apps</p>
    <p>FG-Only</p>
    <p>FG + BG</p>
    <p>FastTrack</p>
    <p>FastTrack</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>We have presented a foreground app-aware I/O management (FastTrack) for improving user experience</p>
    <p>FastTrack preempts BG I/Os in the page cache</p>
    <p>FastTrack prevents FG I/Os data from being flushed</p>
    <p>FastTrack immediately delivers FG I/O to the NAND flash memory</p>
    <p>with minimum interference from inflight BG I/Os</p>
    <p>FastTrack reduces the user-perceived response time delay by up to 95%</p>
    <p>Future work</p>
    <p>Multiple foreground app usage environment (split view, multiple windows)</p>
    <p>FastTrack for desktop/server computing system</p>
  </div>
  <div class="page"/>
</Presentation>
