<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Harry Kalodner, Malte Mser, Kevin Lee, Steven Goldfeder, Martin Plattner, Alishah Chator, Arvind Narayanan</p>
    <p>BlockSci Design and applications of a blockchain analysis platform</p>
  </div>
  <div class="page">
    <p>Why build a blockchain analysis tool?</p>
    <p>Blockchain data</p>
    <p>- Unprecedented research corpus of financial transactions</p>
    <p>- Interesting for scientific analyses and commercial applications</p>
    <p>Tools to analyze blockchain data</p>
    <p>- Commercial tools are often tailored towards specific use cases</p>
    <p>- Lack of general-purpose tools</p>
  </div>
  <div class="page">
    <p>Blockchain data is small</p>
    <p>Bitcoin blockchain</p>
    <p>EC2 instance &lt; $1000 per month</p>
    <p>Bitcoin transaction graph (efficient)50 GB</p>
  </div>
  <div class="page">
    <p>Goals for BlockSci</p>
    <p>fluent interface</p>
    <p>C++ / Python</p>
    <p>Usability</p>
    <p>analytic tools included</p>
    <p>supports different blockchains</p>
    <p>Performance Capabilities</p>
    <p>domain-specific optimizations</p>
    <p>in-memory database</p>
  </div>
  <div class="page">
    <p>Which blockchains should we support?</p>
    <p>Supported: design similar to Bitcoin (to varying degree)</p>
    <p>Unsupported: different design and/or interface</p>
  </div>
  <div class="page">
    <p>Building an efficient parser</p>
    <p>Raw blockchain</p>
    <p>data</p>
    <p>Parser</p>
    <p>P2P node JSON-RPC</p>
    <p>importer</p>
    <p>Custom</p>
    <p>importer</p>
    <p>Network</p>
    <p>- Incremental updates</p>
    <p>- Parallelized pipeline to resolve arbitrary transaction ordering in blocks</p>
    <p>- Optimized address lookups</p>
    <p>- Multi-chain mode</p>
  </div>
  <div class="page">
    <p>Data layout: tradeoff between memory efficiency and performance</p>
    <p>Parser</p>
    <p>Transaction graph</p>
    <p>Scripts &amp; additional data</p>
    <p>Indexes</p>
    <p>- Core transaction graph data optimized for sequential analyses</p>
    <p>- Additional data stored in hybrid format, loaded on-demand</p>
    <p>- Address data is deduplicated across different address types</p>
    <p>- Indexes for common lookups</p>
    <p>BlockSci Data</p>
  </div>
  <div class="page">
    <p>BlockSci is fast</p>
    <p>Iterating over 610,695 Bitcoin blocks on an r5.4xlarge EC2 instance (16 vCPUs, 2.5 GHz Intel Xeon Platinum 8175M, 128 GiB memory, 800 GiB EBS volume)</p>
    <p>Iterating over transaction inputs and outputs in C++</p>
    <p>single-threaded</p>
    <p>multithreaded (16 vCPUs)</p>
  </div>
  <div class="page">
    <p>Analysis library</p>
    <p>- Provides static view on data that can be updated on disk</p>
    <p>- Map-reduce abstractions</p>
    <p>- Forensic capabilities (clustering, change address heuristics)</p>
    <p>- Can collect P2P network timestamps</p>
    <p>Transaction graph</p>
    <p>Scripts &amp; additional data</p>
    <p>Indexes</p>
    <p>BlockSci Data</p>
    <p>Analysis library</p>
    <p>Notebook interface</p>
  </div>
  <div class="page">
    <p>Programmer interface</p>
    <p>Querying the blockchain in Python Analysis library</p>
    <p>Notebook interface</p>
    <p>[tx for block in chain for tx in block if tx.fee &gt; 10**7]</p>
    <p>chain.blocks.txes.where(lambda tx: tx.fee &gt; 10**7).to_list()</p>
    <p>Fluent interface: expressiveness &amp; speed</p>
    <p>- Queries are specified in Python, executed in C++</p>
    <p>- Many operators: select, filter, group_by, min/max,</p>
  </div>
  <div class="page">
    <p>Example application Unfortunate effects of multisignature use</p>
  </div>
  <div class="page">
    <p>Example: drawbacks of multisig Confidentiality</p>
    <p>- Transactions specify list of keys and threshold</p>
    <p>- Publicly exposes access control changes</p>
    <p>Privacy</p>
    <p>Security</p>
  </div>
  <div class="page">
    <p>Example: drawbacks of multisig Confidentiality</p>
    <p>Privacy</p>
    <p>- Different output type allows to distinguish multisig from single-key users</p>
    <p>- May identify change output in up to 122 million transactions</p>
    <p>Security</p>
  </div>
  <div class="page">
    <p>Example: drawbacks of multisig Confidentiality</p>
    <p>Privacy</p>
    <p>Security</p>
    <p>- Pattern: Multisig  Regular  Multisig</p>
    <p>- Temporary reduction in security</p>
  </div>
  <div class="page">
    <p>BlockSci has been widely used</p>
    <p>- At least 9 peer-reviewed articles and 6 preprints</p>
    <p>- Educational tool for workshops and lectures</p>
    <p>- Foundation for more specialized blockchain analysis tools</p>
    <p>- Active on GitHub</p>
    <p>Tracking Ransomware End-to-end Danny Yuxing Huang1, Maxwell Matthaios Aliapoulios2, Vector Guo Li3</p>
    <p>Luca Invernizzi4, Kylie McRoberts4, Elie Bursztein4, Jonathan Levin5 Kirill Levchenko3, Alex C. Snoeren3, Damon McCoy2</p>
    <p>AbstractRansomware is a type of malware that encrypts the files of infected hosts and demands payment, often in a cryptocurrency such as Bitcoin. In this paper, we create a measurement framework that we use to perform a large-scale, two-year, end-to-end measurement of ransomware payments, victims, and operators. By combining an array of data sources, including ransomware binaries, seed ransom payments, victim telemetry from infections, and a large database of Bitcoin addresses annotated with their owners, we sketch the outlines of this burgeoning ecosystem and associated third-party infrastructure. In particular, we trace the financial transactions, from the moment victims acquire bitcoins, to when ransomware operators cash them out. We find that many ransomware operators cashed out using BTC-e, a now-defunct Bitcoin exchange. In total we are able to track over $16 million in likely ransom payments made by 19,750 potential victims during a two-year period. While our study focuses on ransomware, our methods are potentially applicable to other cybercriminal operations that have similarly adopted Bitcoin as their payment channel.</p>
    <p>I. INTRODUCTION</p>
    <p>Ransomware is a type of malware that encrypts a victims documents and media, and then urges payment for their decryption. In its beginnings, ransoms were demanded via a collection of online cash-equivalent payment instruments, such as MoneyPak, Paysafecard, or UKash [1]. From the ransomware operators perspective, these instruments have undesirable properties: their limited geographic availability shrinks the paying-victim pool, and they are run by companies subject to the local law, which might compel them into reversing transactions or tracking the ransom recipients.</p>
    <p>To overcome these drawbacks, the operators of many major ransomware families have adopted Bitcoin. This cryptocurrency poses challenges to law enforcement, as it is decentralized, largely unregulated, and all parties in a transaction are hidden behind pseudo-anonymous identities. Moreover, all transactions are irreversible, and it is widely available for victims to purchase. Due to these properties, Bitcoin has also gained adoption as a payment method for other illicit activities, such as drug markets [2], online sex ads [3], and DDoS-forhire services [4].</p>
    <p>However, Bitcoin has a property that is undesirable to cybercriminals: all transactions are public by design. This enables researchers, through transaction clustering and tracing [5], [6], [7], to glean at the financial inner workings of entire cybercriminal operations. Before Bitcoin, these insights had to be only partial and infrequent, as they hinged on sporadic data leaks [8], [9], [10].</p>
    <p>In this paper, we perform a large-scale, two-year measurement study of ransomware payments, victims, and operators. While prior studies have estimated the revenue for a single ransomware operation [6] or reverse engineered the technical inner works of particular ransomware binaries [11], [12], our study is the first to perform an end-to-end analysis of a large portion of the ransomware ecosystem, including its revenue, affiliate schemes, and infrastructure.</p>
    <p>To do so, we combine multiple data sources, including labeled ransomware binaries, victims ransom payments, victim telemetry (collected through an IP sinkhole we deploy), and a large database of Bitcoin addresses annotated with their owners (provided by Chainalysis1). This wealth of data allows us to follow the money trail from the moment a victim acquires bitcoins, to when the ransomware operators cash them out. In total, we establish a lower-bound estimate on ransom payments volume of $16 million USD, made by 19,750 potential victims over two years.</p>
    <p>The bitcoin-trail allows us to determine the likely geographic locations of paying victims, which we corroborated with the collected telemetry of a large ransomware campaign. We find that South Koreans likely paid over $2.5 million USD in ransoms to the Cerber ransomware family, which is 34% of the total Cerbers revenue we tracked. Our measurements indicate that South Koreans were also likely disproportionately impacted by other ransomware campaigns. This calls for further studies on why this region is disproportionately impacted, and what can be done to better protect it.</p>
    <p>We also find that ransomware operators strongly preferred to cash out their bitcoins at BTC-e, a Russian Bitcoin exchange that converted bitcoins to fiat currencies. This exchange has now been seized.</p>
    <p>Finally, we describe some unique ethical issues that we faced during our study and limit possible interventions against ransomware campaigns. For example, any disruption of the payment infrastructure can result in both the victims inability to access their data and an increased financial burden, as ransom amounts increase with time in many families.</p>
    <p>In summary, our main contributions are as follows. (1) We develop a set of methodologies that enable an end-toend analysis of the ransomware ecosystem. (2) We conduct a two-year measurement study of the ecosystem, conservatively</p>
    <p>2018, Danny Yuxing Huang. Under license to IEEE. DOI 10.1109/SP.2018.00047</p>
    <p>Authorized licensed use limited to: IEEE Xplore. Downloaded on July 15,2020 at 22:38:10 UTC from IEEE Xplore. Restrictions apply.</p>
    <p>Safeguarding the Evidential Value of Forensic Cryptocurrency Investigations?,??</p>
    <p>Michael Frwisa,&lt;, Thilo Gottschalkb, Bernhard Haslhoferc, Christian Rckertd and Paulina Peschb</p>
    <p>aUniversity of Innsbruck, Technikerstr. 21a, 6020 Innsbruck, Austria bKarlsruhe Institute of Technology, Vincenz-Prienitz-Str. 3, 76131 Karlsruhe, Germany cAIT Austrian Institute of Technology, Giefinggasse 4, 1210 Vienna, Austria dFriedrich-Alexander University of Erlangen-Nuremberg, Schillerstrae 1, 91054 Erlangen, Germany</p>
    <p>A R T I C L E I N F O</p>
    <p>Keywords: digital forensics cryptocurrencies digital evidence safeguards legal</p>
    <p>A B S T R A C T</p>
    <p>Analyzing cryptocurrency payment flows has become a key forensic method in law enforcement and is nowadays used to investigate a wide spectrum of criminal activities. However, despite its widespread adoption, the evidential value of obtained findings in court is still largely unclear. In this paper, we focus on the key ingredients of modern cryptocurrency analytics techniques, which are clustering heuristics and attribution tags. We identify internationally accepted standards and rules for substantiating suspicions and providing evidence in court and project them onto current cryptocurrency forensics practices. By providing an empirical analysis of CoinJoin transactions, we illustrate possible sources of misinterpretation in algorithmic clustering heuristics. Eventually, we derive a set of legal key requirements and translate them into a technical data sharing framework that fosters compliance with existing legal and technical standards in the realm of cryptocurrency forensics. Integrating the proposed framework in modern cryptocurrency analytics tools could allow more ecient and eective investigations, while safeguarding the evidential value of the analysis and the fundamental rights of aected persons.</p>
    <p>Tracking and tracing payment-flows in cryptocurrencies by analyzing transactions in the underlying, publiclyavailable blockchain, has become a key forensic method in law enforcement. It is used to investigate a wide spectrum of criminal activities relying on the pseudo-anonymous nature of cryptocurrencies, ranging from the purchase of illicit goods and services on Darknet markets (Soska and Christin, 2015), over ransomware attacks (Huang, McCoy, Aliapoulios, Li, Invernizzi, Bursztein, McRoberts, Levin, Levchenko and Snoeren, 2018; Paquet-Clouston, Haslhofer and Dupont, 2018), to extortion and money laundering (FATF, 2015). A typical forensic investigation starts from one or more suspect addresses and traces monetary flows up to some known exit point, which is typically an exchange or a wallet provider service, where cryptocurrencies are converted back into fiat currencies.</p>
    <p>Cryptocurrency investigations are nowadays supported by a number of commercial (e.g. Chainalysis, Elliptic, etc.) and non-commercial analysis tools (e.g. BlockSci; Kalodner, Goldfeder, Chator, Mser and Narayanan (2017), GraphSense; Haslhofer, Karl and Filtz (2016)) that exploit the openness of the cryptocurrency transaction ledger also known as blockchain. They build on a long history of research that has shown that pseudonymous addresses do not provide sucient anonymity, neither in Bitcoin (Meiklejohn, Pomarole, Jordan, Levchenko, McCoy, Voelker and Savage, 2013; Androulaki, Karame, Roeschlin, Scherer and Capkun, 2013; Mser, 2013; Monaco, 2015) nor in post-Bitcoin currencies, with stronger privacy-enhancing techniques, such as ZCash (Quesnelle, 2018; Kappos, Yousaf, Maller and Meiklejohn, 2018) or Monero (Miller, Mser, Lee and Narayanan, 2017; Kumar, Fischer, Tople and Saxena, 2017), which has shown to be traceable until early 2017.</p>
    <p>? This work has received funding from the European Unions Horizon 2020 research and innovation programme under grant agreement No.</p>
    <p>Author names in alphabetical order. &lt;Corresponding author</p>
    <p>michael.froewis@uibk.ac.at (M. Frwis); thilo.gottschalk@kit.edu (T. Gottschalk); bernhard.haslhofer@ait.ac.at (B. Haslhofer); christian.rueckert@fau.de (C. Rckert); paulina.pesch@kit.edu (P. Pesch)</p>
    <p>ORCID(s):</p>
    <p>Frwis et al.: Preprint submitted to Elsevier Page 1 of 22</p>
    <p>ar X</p>
    <p>iv :1</p>
    <p>[c s.</p>
    <p>C Y</p>
    <p>] 7</p>
    <p>Ja n</p>
    <p>When the cookie meets the blockchain: Privacy risks of web payments via cryptocurrencies</p>
    <p>Steven Goldfeder, Harry Kalodner, Dillon Reisman, Arvind Narayanan Princeton University</p>
    <p>{stevenag, kalodner, arvindn}@cs.princeton.edu dillon@lonlon.io</p>
    <p>AbstractWe show how third-party web trackers can deanonymize users of cryptocurrencies. We present two distinct but complementary attacks. On most shopping websites, third party trackers receive information about user purchases for purposes of advertising and analytics. We show that, if the user pays using a cryptocurrency, trackers typically possess enough information about the purchase to uniquely identify the transaction on the blockchain, link it to the users cookie, and further to the users real identity. Our second attack shows that if the tracker is able to link two purchases of the same user to the blockchain in this manner, it can identify the users entire cluster of addresses and transactions on the blockchain, even if the user employs blockchain anonymity techniques such as CoinJoin. The attacks are passive and hence can be retroactively applied to past purchases. We discuss several mitigations, but none are perfect.</p>
    <p>I. INTRODUCTION Eight years after Bitcoins introduction, the ability to pay</p>
    <p>online using cryptocurrencies is common: prominent merchants such as Microsoft, Newegg, and Overstock support it. Cryptocurrency users tend to value financial privacy, and it is a major reason for choosing to pay with Bitcoin [1]. Yet, websites including shopping sites are known to be rife with third-party tracking [2]. In this paper, we study the impact of online tracking on the privacy of Bitcoin users.</p>
    <p>First, we show that online trackers are able to see sensitive details of payment flows, such as the identities and prices of items added to shopping carts. Crucially, in many cases they receive sufficient information about a purchase to link it uniquely to a transaction on the Bitcoin blockchain.1 This core linkage can be expanded in both directions: based on tracking cookies, the transaction can be linked to the users activities across the web. And based on well-known Bitcoin address clustering techniques [3], [4], it can be linked to their other Bitcoin transactions.</p>
    <p>This basic attack can be made worse in several ways. We find that many merchant sites send even more information to trackers, such as the transaction-specific Bitcoin address. This acts as a high-entropy identifier and makes linking to the blockchain trivial. We also show that many merchants additionally leak users PII (name, email address, etc.) to trackers, allowing trackers to link not only users web profiles but also blockchain transactions to their identities. Finally, malicious trackers may use JavaScript to extract Bitcoin addresses or PII</p>
    <p>from web pages even if it is not leaked to them by default. We show that this is possible on the vast majority of merchant sites.</p>
    <p>Of course, Bitcoin does not guarantee unlinkability of transactions. But while linking of a users Bitcoin addresses with each other is well known [3][6], our attack shows how to link addresses to external information, including identity.</p>
    <p>The main defense against linkage attacks is mixing [7], [8]. The best known mixing technique is CoinJoin, in which users send coins to each other in a way that hides the link between their old and new coins. Our second main contribution is showing the effectiveness of the cluster intersection attack, a previously known attack against mixing. Specifically, we show that a small amount of additional information, namely that two (or more) transactions were made by the same entity, is sufficient to undo the effect of mixing (see Figure 1). While such auxiliary information is available to many potential entities  merchants, other counterparties such as websites that accept donations, intermediaries such as payment processors, and potentially network eavesdroppers  web trackers are in the ideal position to carry out this attack.</p>
    <p>Based on the above two attacks, we present the following findings. We present a taxonomy of information leaks to trackers on e-commerce websites. We focus on leaks that allow linking a payment flow to a blockchain transaction. We compiled a list of 130 online merchants that accept Bitcoin, and analyzed their websites by extending the functionality of the open-source OpenWPM web privacy measurement tool [2]. We find that at least 53/130 of merchants leak payment information to a total of at least 40 third parties, most frequently from shopping cart pages. The vast majority of these represent intentional sharing of purchase data with third parties for advertising and analytics purposes. In addition, we find that many merchant websites have far more serious (and likely unintentional) information leaks that directly reveal the exact transaction on the blockchain to dozens of trackers.</p>
    <p>Turning to the Bitcoin blockchain, we use empirical measurement to estimate the uniqueness of transactions as a function of the adversarys uncertainty about the transactions timestamp and value (Section V). We find that unique linkage is possible in over 60% of cases for realistic values of these parameters, and that in the vast majority of cases, the anonymity set size is 5 or less. The attack degrades gracefully as the adversarys uncertainty increases. Note that in the case of the</p>
    <p>X iv</p>
    <p>:1 70</p>
    <p>s. C</p>
    <p>R ]</p>
    <p>ug 2</p>
    <p>'PSGOGLEMR)EXIREREP]WMIVIRQMX</p>
    <p>'PSGOGM</p>
    <p>HERZLICH WILLKOMMEN ZUM BLOCKSCI WORKSHOP</p>
    <p>MALTE MSER</p>
  </div>
  <div class="page">
    <p>More details in our paper! - Architecture and optimizations</p>
    <p>- Performance measurements and comparison</p>
    <p>- Multi-chain mode</p>
    <p>- Three more applications</p>
    <p>- Cross-chain privacy</p>
    <p>- Effectiveness of transaction fee estimation</p>
    <p>- Velocity of cryptocurrencies</p>
    <p>BlockSci: Design and applications of a blockchain</p>
    <p>analysis platform</p>
    <p>Harry Kalodner Princeton University</p>
    <p>Malte Mser Princeton University</p>
    <p>Kevin Lee Princeton University</p>
    <p>Steven Goldfeder Cornell Tech</p>
    <p>Martin Plattner University of Innsbruck</p>
    <p>Alishah Chator Johns Hopkins University</p>
    <p>Arvind Narayanan Princeton University</p>
    <p>Abstract</p>
    <p>Analysis of blockchain data is useful for both scientific research and commercial applications. We present BlockSci, an open-source software platform for blockchain analysis. BlockSci is versatile in its support for different blockchains and analysis tasks. It incorporates an in-memory, analytical (rather than transactional) database, making it orders of magnitudes faster than using general-purpose graph databases. We describe BlockScis design and present four analyses that illustrate its capabilities, shedding light on the security, privacy, and economics of cryptocurrencies.</p>
    <p>Public blockchains constitute an unprecedented research corpus of financial transactions. Bitcoins blockchain alone is 260 GB as of December 2019.1 This data holds the key to measuring the privacy of cryptocurrencies in practice, studying user behavior with regards to security and economics, or understanding the non-currency applications that use the blockchain as a database.</p>
    <p>We present BlockSci, a software platform that enables the science of blockchains. It addresses three pain points of existing tools: poor performance, limited capabilities, and a cumbersome programming interface. Compared to the use of general-purpose graph databases, BlockSci is hundreds of times faster for sequential queries and substantially faster for all queries, including graph traversal queries. It comes bundled with analytic modules such as address clustering, exposes different blockchains through a common interface, collects mempool state and imports exchange rate data, and gives the programmer a choice of interfaces: a Jupyter notebook for intuitive exploration and C++ for performance-critical tasks. In contrast to commercial tools, BlockSci is not tailored to specific use cases such as criminal investigations or insights</p>
    <p>These authors contributed equally to this work. 1All numbers in this paper are current as of December 2019, and analyses</p>
    <p>of the Bitcoin blockchain as of block height 610,695, unless stated otherwise.</p>
    <p>for cryptocurrency traders. Instead, by providing efficient and convenient programmatic access to the full blockchain data, it enables a wide range of reproducible, scientific analyses.</p>
    <p>BlockScis design starts with the observation that blockchains are append-only databases; further, the snapshots used for research are static. Thus, the ACID properties of transactional databases are unnecessary. This makes an inmemory analytical database the natural choice. On top of the obvious speed gains of memory, we apply a number of tricks such as converting hash pointers to actual pointers and deduplicating address data, which further greatly increase speed and decrease the size of the data. We plan to scale vertically as blockchains grow, and we expect that this will be straightforward for the foreseeable future, as commodity cloud instances currently offer up to a hundred times more memory than required for loading and analyzing Bitcoins blockchain. Avoiding distributed processing is further motivated by the fact that blockchain data is graph-structured, and thus hard to partition effectively. In fact, we conjecture that the use of a traditional, distributed transactional database for blockchain analysis has infinite COST (Configuration that Outperforms a Single Thread) [1], in the sense that no level of parallelism can outperform an optimized single-threaded implementation.</p>
    <p>BlockSci comes with batteries included. First, it is not limited to Bitcoin: a parsing step converts a variety of blockchains into a common, compact format. Currently supported blockchains include Bitcoin, Bitcoin Cash, Bitcoin SV, Litecoin, and Zcash (Section 2.1). A multi-chain mode optimizes for user-friendly and memory-efficient analyses of forked blockchains together with their parent chain. Smart contract platforms such as Ethereum are outside our scope.</p>
    <p>Second, BlockSci includes a library of useful analytic tools, such as identifying special transactions (e.g., CoinJoin) and linking addresses to each other based on well-known heuristics, including across forked chains (Section 2.4). Third, BlockSci can record the time of transaction broadcasts on the peer-to-peer network and expose them through the same interface. Similarly, we make (historical and current) data on</p>
  </div>
  <div class="page">
    <p>Thank you</p>
    <p>Code &amp; questions https://github.com/citp/BlockSci</p>
    <p>Documentation https://citp.github.io/BlockSci</p>
    <p>Contact blocksci@lists.cs.princeton.edu</p>
    <p>BlockSci Design and applications of a blockchain analysis platform Harry Kalodner, Malte Mser, Kevin Lee, Steven Goldfeder, Martin Plattner, Alishah Chator, Arvind Narayanan</p>
    <p>Technical &amp; how-to questions</p>
  </div>
</Presentation>
