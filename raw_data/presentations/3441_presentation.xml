<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Enter the Hydra: Toward Principled Bug Bounties and Exploit-Resistant Smart Contracts USENIX Security '18 17 August 2018</p>
    <p>Florian Tramr Stanford</p>
    <p>Phil Daian ,</p>
    <p>Cornell Tech, Jacobs, IC3</p>
    <p>Lorenz Breidenbach Cornell Tech, ETH, IC3</p>
    <p>Ari Juels</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>!</p>
  </div>
  <div class="page">
    <p>Crypto Tokens</p>
    <p>Sold in Initial Coin Offerings (ICOs); ERC20  a.k.a. Token Launch, Token</p>
    <p>Generation Events (TGEs), etc.</p>
    <p>Like unregulated VC</p>
    <p>Token like a share (kind of)</p>
    <p>Since mid-2017, ICO funding outstripping earlystage Internet VC (!)</p>
  </div>
  <div class="page">
    <p>Side effects of the token mania</p>
    <p>Token smart contracts are compact</p>
    <p>Lots of money per contract</p>
    <p>Astonishing value per line of code</p>
    <p>Which makes for juicy targets</p>
    <p>Token Lines of</p>
    <p>Code</p>
    <p>Value per</p>
    <p>line</p>
    <p>OmiseGo</p>
    <p>(OMG)</p>
    <p>Tether</p>
    <p>(USDT)</p>
    <p>EOS</p>
    <p>(EOS)</p>
    <p>Sources: coinmarketcap.com, 17 August 2018., and published contract</p>
    <p>source code</p>
  </div>
  <div class="page">
    <p>Some (in)famous smart contracts</p>
    <p>The DAO (June 2016)  Reentrancy bug  $50+ million stolen</p>
    <p>Parity multisig hack (July 2017)  Parity 1.5 clients multisig wallet contract</p>
    <p>Problem with library contract use  $30 million stolen from 3 ICO wallets (Edgeless Casino, Swarm City, and ternity)</p>
    <p>Parity multisig hackRedux! (Nov. 2017)  Problem with library contract  &gt;$150 million frozen</p>
    <p>much from ICO wallets (Polkadot, $98 million)</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>N-Version programming (Chen &amp; Avizienis 78, Knight-Leveson 86)</p>
    <p>Version 1</p>
    <p>Input X Version 2</p>
    <p>Version 3</p>
    <p>Majority</p>
    <p>Vote</p>
    <p>Agreed</p>
    <p>output</p>
    <p>N software versions / heads</p>
  </div>
  <div class="page">
    <p>If something goes wrong</p>
    <p>Version 1</p>
    <p>Version 2</p>
    <p>Version 3</p>
    <p>Majority</p>
    <p>Vote</p>
    <p>Agreed</p>
    <p>output</p>
    <p>N software versions / heads</p>
    <p>Input X</p>
  </div>
  <div class="page">
    <p>What is N-version programming doing?</p>
    <p>A program transformation T takes N  1 programs and creates new program f*:= T ( f1, f2, . . . , fN ).</p>
    <p>f* Version 1</p>
    <p>Input X Version 2</p>
    <p>Version 3</p>
    <p>Majority</p>
    <p>Vote</p>
    <p>output Y</p>
  </div>
  <div class="page">
    <p>Let be an ideal program specification  Conceptual! Doesnt actually exist (on paper or code)</p>
    <p>Let f be an implemented program</p>
    <p>An exploit is an input X such that (X)  f(X)</p>
    <p>Intuition: Any deviation from intended behavior is a potentially serious bug</p>
    <p>Exploit set E(f, ): set of exploits X for f and</p>
    <p>Some more definitions</p>
  </div>
  <div class="page">
    <p>Mind the gap</p>
    <p>Let D be a distribution over inputs X</p>
    <p>Definition of exploit gap:</p>
    <p>Affirmative gap (&gt; 1) means T reduces exploits</p>
    <p>Bigger gap  fewer relative bugs in f*</p>
    <p>gap captures dependencies among heads</p>
    <p>Exploits against f*</p>
    <p>Exploits against</p>
    <p>f1, f2, f3</p>
    <p>gap</p>
  </div>
  <div class="page">
    <p>Houston we have a gap</p>
    <p>Version 1</p>
    <p>Version 2</p>
    <p>Version 3</p>
    <p>Majority</p>
    <p>Vote</p>
    <p>Agreed</p>
    <p>output</p>
    <p>N software versions / heads</p>
    <p>Input X</p>
    <p>f* f1</p>
    <p>f2</p>
    <p>f3</p>
    <p>gap</p>
  </div>
  <div class="page">
    <p>N-version-programming criticism</p>
    <p>Strong gap requires independence among heads</p>
    <p>Correlations hurt!</p>
    <p>Knight-Leveson (1986):  We reject the null hypothesis of full</p>
    <p>independence at a p-level of 5%</p>
    <p>Eckhardt et al. (1991):  We tried it at NASA and it wasnt cost</p>
    <p>effective</p>
    <p>Worst case: 3 versions  4x fewer errors</p>
    <p>Version 1</p>
    <p>Input X Version 2</p>
    <p>Version 3</p>
    <p>Majority</p>
    <p>Vote Agreed</p>
    <p>output</p>
    <p>N software versions / heads</p>
  </div>
  <div class="page">
    <p>But not everything is a space shuttle</p>
    <p>Not all software needs to be available at all times!</p>
    <p>E.g., Smart contracts: How bad if its down for a while?</p>
    <p>In fact, often better no answer than the wrong one</p>
    <p>Bugs are often harmful</p>
    <p>N-of-N-Version Programming (NNVP)</p>
  </div>
  <div class="page">
    <p>NNVP a.k.a. Hydra Framework</p>
    <p>Version 1</p>
    <p>Input X Version 2</p>
    <p>Version 3 Fault</p>
    <p>manager</p>
    <p>Agreed</p>
    <p>output</p>
    <p>N software versions /</p>
    <p>heads</p>
    <p>Majority</p>
    <p>vote</p>
    <p>Idea: Strengthen majority vote of N-Version Programming</p>
  </div>
  <div class="page">
    <p>NNVP a.k.a. Hydra Framework</p>
    <p>Unless all versions agree, abort!</p>
    <p>Version 1</p>
    <p>Input X Version 2</p>
    <p>Version 3</p>
    <p>=? Fault</p>
    <p>manager</p>
    <p>Agreed</p>
    <p>output</p>
    <p>N software versions /</p>
    <p>heads</p>
  </div>
  <div class="page">
    <p>NNVP a.k.a. Hydra</p>
    <p>Aborting in NNVP:</p>
    <p>Correctness  Availability</p>
    <p>NASA numbers much better for NNVP</p>
    <p>Some availability loss, but</p>
    <p>gap = 4,409 for N = 3 heads</p>
    <p>gap = 34,546 for N = 4 heads</p>
    <p>Probably even better!</p>
    <p>Head 2 Head 3</p>
    <p>Head 1</p>
  </div>
  <div class="page">
    <p>Hydra creates a (strong) gap</p>
    <p>Program</p>
    <p>Head 1</p>
    <p>Input X Head 2</p>
    <p>Head 3</p>
    <p>=? Fault</p>
    <p>manager</p>
    <p>Agreed</p>
    <p>output</p>
    <p>Serious bug in one head now rarely fatal</p>
  </div>
  <div class="page">
    <p>Smart contracts are Hydra-friendly!</p>
    <p>Hydra could probably have addressed cases in green and yellow vulnerabilities</p>
  </div>
  <div class="page">
    <p>Application: Bug Bounties</p>
  </div>
  <div class="page">
    <p>Some problems with bug bounties:</p>
    <p>Zerodium: $1.5 million for certain iPhone jailbreaks</p>
  </div>
  <div class="page">
    <p>Some problems with bug bounties:</p>
    <p>Zerodium: $1.5 million for certain iPhone jailbreaks</p>
  </div>
  <div class="page">
    <p>The perfect bug bounty</p>
  </div>
  <div class="page">
    <p>Bug bounties: The Rational Attackers Game</p>
    <p>Program</p>
    <p>Value: $A</p>
  </div>
  <div class="page">
    <p>Bug bounties: The Rational Attackers Game</p>
    <p>Find Exploit</p>
    <p>Attack</p>
    <p>$A</p>
    <p>Disclose</p>
    <p>$B</p>
    <p>Classic bounty: $B</p>
  </div>
  <div class="page">
    <p>Bug bounties: The Rational Attackers Game</p>
    <p>Find Exploit</p>
    <p>DiscloseAttack</p>
    <p>$B$A</p>
    <p>Disclose if</p>
    <p>$B &gt; $A!</p>
    <p>Classic bounty: $B</p>
  </div>
  <div class="page">
    <p>The Hydra Framework for Bug Bounties</p>
    <p>Input X</p>
    <p>Head 1</p>
    <p>Head 2</p>
    <p>Head 3</p>
    <p>= ?</p>
    <p>Fault</p>
    <p>manager</p>
    <p>Abort</p>
    <p>Pay</p>
    <p>$bounty</p>
    <p>$bounty</p>
  </div>
  <div class="page">
    <p>The Hydra Hackers Dilemma</p>
    <p>Head 1</p>
    <p>Input X Head 2</p>
    <p>Head 3</p>
    <p>Claim bounty ($B) now?</p>
    <p>$$$ Head 1</p>
    <p>Input X Head 2</p>
    <p>Head 3</p>
    <p>Try to break all heads ($A)?</p>
  </div>
  <div class="page">
    <p>The Hydra Hackers Dilemma</p>
    <p>Head 1</p>
    <p>Input X Head 2</p>
    <p>Head 3</p>
    <p>Claim bounty ($B) now?</p>
    <p>$$$ Head 1</p>
    <p>Input X Head 2</p>
    <p>Head 3</p>
    <p>Try to break all heads ($A)?</p>
  </div>
  <div class="page">
    <p>Our goal: High leverage</p>
    <p>Find Exploit</p>
    <p>Attack</p>
    <p>$A /gap</p>
    <p>Disclose</p>
    <p>$B</p>
  </div>
  <div class="page">
    <p>Our goal: High leverage</p>
    <p>Find Exploit</p>
    <p>Attack</p>
    <p>$A /gap</p>
    <p>Disclose</p>
    <p>$B</p>
    <p>For gap  1</p>
  </div>
  <div class="page">
    <p>Our goal: High leverage Find</p>
    <p>Exploit</p>
    <p>DiscloseAttack</p>
    <p>$B$A/gap*</p>
    <p>Exploit</p>
    <p>gap</p>
    <p>Disclose if $B &gt; $A / gap!</p>
  </div>
  <div class="page">
    <p>Our goal: High leverage Find</p>
    <p>Exploit</p>
    <p>DiscloseAttack</p>
    <p>$B$A/gap*</p>
    <p>Exploit</p>
    <p>gap</p>
    <p>Disclose if $B &gt; $A / gap!(gap+1)</p>
  </div>
  <div class="page">
    <p>Wait a minute</p>
    <p>Program</p>
    <p>Value: $A</p>
    <p>Disclose, i.e.,</p>
    <p>dont attack</p>
    <p>even though</p>
    <p>$B &lt; $A ?!</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>Recall: NASA experiments imply: gap = 4,409 for N = 3 heads</p>
    <p>gap = 34,546 for N = 4 heads</p>
    <p>So Approx $1 billion contract (e.g., OmiseGo)</p>
    <p>N = 4</p>
    <p>$30k $bounty incentivizes adversary to disclose!</p>
  </div>
  <div class="page">
    <p>The perfect bug bounty</p>
  </div>
  <div class="page">
    <p>Implementation</p>
    <p>ERC20  Standard token-management contract  N = 3  $bounty = 3ETH ~= $1k  Deployed @ 0xf4ee935a3879ff07362514da69c64df80fa28622</p>
    <p>Generalized Monty-Hall game  Extension of Monty Hall game to K out of M doors  In progress</p>
  </div>
  <div class="page">
    <p>MC</p>
    <p>Metacontract:</p>
    <p>EVM/Solidity</p>
    <p>governor, fault manager</p>
    <p>Instrumenter: EVM -&gt; EVM transpiler</p>
    <p>Automatic Deployment</p>
    <p>Scripts</p>
    <p>Test Scripts</p>
    <p>Community</p>
    <p>contributions</p>
    <p>Canonical Vyper ERC20,</p>
    <p>First 100% coverage</p>
    <p>ERC20 test suite</p>
  </div>
  <div class="page">
    <p>Is it practical?</p>
    <p>Blocks 4690101 to 5049100</p>
    <p>(Dec-07-2017 -- Feb-07-2018)</p>
  </div>
  <div class="page">
    <p>Does it scale?</p>
  </div>
  <div class="page">
    <p>Is it fair? Submarine Commitments</p>
    <p>Prevent frontrunning  Adversary sits on exploit  Reveals when it detects</p>
    <p>pre-emption</p>
    <p>Security analysis involved:  New, strong adversarial</p>
    <p>model introduced for blockchains, see paper</p>
  </div>
  <div class="page">
    <p>Smart Contracts - Innovate, Don't Apply</p>
    <p>Rich, new adversarial setting for security</p>
    <p>Novel properties over classical system  Known program value - dynamic bounties</p>
    <p>Rigorous/programmatic/&quot;Cartesian&quot; security</p>
    <p>Can derive known, precise economic security level</p>
    <p>New challenges in underlying environment/modeling</p>
    <p>(find me offline! :))</p>
  </div>
  <div class="page">
    <p>www.thehydra.io</p>
  </div>
  <div class="page">
    <p>Initiative for CryptoCurrencies and Contracts (IC3)</p>
    <p>www.initc3.org</p>
  </div>
  <div class="page">
    <p>Thanks! We thank Paul Grubbs and Rahul Chatterjee for comments and feedback. This research was supported by NSF CNS-1330599, CNS-1514163, CNS-1564102, and CNS-1704615, ARL W911NF-16-1-0145, and IC3 Industry Partners. Philip Daian is supported by the National Science Foundation Graduate Research Fellowship DGE-1650441. Lorenz Breidenbach was supported by the ETH Studio New York scholarship.</p>
    <p>IC3 Industry Partners</p>
    <p>thehydra.io</p>
  </div>
</Presentation>
