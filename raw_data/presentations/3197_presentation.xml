<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>UT DALLASUT DALLAS Erik Jonsson School of Engineering &amp; Computer Science</p>
    <p>Preventing Cryptographic Key Leakage in Cloud Virtual</p>
    <p>Machines</p>
    <p>Erman Pattuk Murat Kantarcioglu</p>
    <p>Zhiqiang Lin Huseyin Ulusoy</p>
  </div>
  <div class="page">
    <p>Move to Cloud Computing</p>
  </div>
  <div class="page">
    <p>Move to Cloud Computing</p>
  </div>
  <div class="page">
    <p>Security Concerns</p>
    <p>To authenticate themselves to regular public  SSL/TLS protocols  Cryptographic keys</p>
    <p>Cloud service providers use Virtual Machine Monitors  To realize logical isolation</p>
    <p>A companys VM(s) are located on the same physical machines as other companies  Potential threat!!!</p>
  </div>
  <div class="page">
    <p>Side-channel Attacks</p>
    <p>Ristenpart et al. (2009) attacked a target cloud VM  Co-located his VMs with the defenders  Executed cross-VM side-channel attack  Captured crude data (e.g., aggregate cache</p>
    <p>usage)</p>
    <p>Zhang et al. (2010) used the same colocation technique  Extracted El-Gamal keys</p>
    <p>A wide-variety of side-channel attacks  May be applicable to cloud</p>
  </div>
  <div class="page">
    <p>Many ideas to protect against side-channel attacks</p>
    <p>HomeAlone (Zhang et al., 2011)  Co-residency check to understand where a victim</p>
    <p>VM is located  Aims physical isolation  May not be applicable to modern cloud infra</p>
    <p>HyperSafe (Wang et al., 2010)  Aims to preserve hypervisor integrity  We assume that is provided in cloud (e.g.,</p>
    <p>Amazon)</p>
    <p>Randomization based prevention techniques  Karlof et al. (2003), hidden markov model based</p>
    <p>attack to break down randomization</p>
  </div>
  <div class="page">
    <p>Potential other attacks ??</p>
    <p>Side channels may not be the only type of attacks.</p>
    <p>Software bugs may be used to disclose keys as well.  Hearthbleed bug?</p>
  </div>
  <div class="page">
    <p>Hermes  Key Idea</p>
    <p>Partition private keys into n shares  Threshold cryptography  Shamir secret sharing</p>
    <p>Create multiple VMs  Give one share to each VM  Collaborate to decrypt/sign with the private key</p>
    <p>Re-share the private key periodically  Some shares may be captured over time  Create new shares that are independent</p>
  </div>
  <div class="page">
    <p>Background</p>
    <p>Hermes runs in two modes  Distributed-RSA (D-RSA): Additive secret sharing  Threshold-RSA (T-RSA): Shamir secret sharing</p>
    <p>Given an RSA key pair e,d for modulus n:  Additive secret sharing:</p>
    <p>d = d_1 + d_2 +  + d_L mod (n)  Need all shares to exponentiate a message</p>
    <p>Shamir secret sharing (Shoup, 2000):  d is embedded into K-1 degree polynomial P  Each party id  {1, ..., L} is given P(id)  Need K shares to exponentiate a message</p>
  </div>
  <div class="page">
    <p>Hermes  SSL Enhancement C</p>
    <p>li en</p>
    <p>t Server</p>
    <p>(1) client_hello</p>
    <p>(2a) server_hello</p>
    <p>(2c) certificate_request</p>
    <p>(2d) hello_done</p>
    <p>(2b) server_key_exc</p>
    <p>(3a) certificate</p>
    <p>(3b) client_key_exc</p>
    <p>Regular SSL</p>
    <p>C li</p>
    <p>en t</p>
    <p>V M</p>
    <p>C o</p>
    <p>m b</p>
    <p>(1) client_hello</p>
    <p>(2a) server_hello</p>
    <p>(2c) certificate_request</p>
    <p>(2d) hello_done</p>
    <p>(2b) server_key_exc</p>
    <p>(3a) certificate</p>
    <p>(3b) client_key_exc</p>
    <p>(2aa) help_sign</p>
    <p>(2ab) sign_partial_result</p>
    <p>(3ba) help_decrypt</p>
    <p>(3bb) dec_partial_result</p>
    <p>V M</p>
    <p>A ux</p>
    <p>Enhanced SSL</p>
  </div>
  <div class="page">
    <p>Hermes - Initialization</p>
    <p>VM-1</p>
    <p>VM-2</p>
    <p>VM-L</p>
    <p>Cloud Defender</p>
    <p>1 2</p>
    <p>L</p>
  </div>
  <div class="page">
    <p>Hermes  Client Connection</p>
    <p>VM-1</p>
    <p>VM-2</p>
    <p>VM-L</p>
    <p>CloudClient</p>
  </div>
  <div class="page">
    <p>Hermes  Key Re-sharing</p>
    <p>Cloud Defender</p>
    <p>VM-1</p>
    <p>VM-2</p>
    <p>VM-L 1</p>
    <p>L</p>
  </div>
  <div class="page">
    <p>Experiment Setup</p>
    <p>Used Hermes in three applications:  Micro-benchmarking: Clients connect and die  Web-server: Clients retrieve a web page  Mail-server: Clients retrieve a mail box</p>
    <p>Initiated 10 VMs in Amazon EC2  1 m1.xlarge with 4 virtual CPU as combiner VM  9 m1.small with 1 virtual CPU as auxiliary VMs</p>
    <p>Clients:  Apache HTTP benchmarking tool and JMeter to connect  From an IBM x3500m3 server in our campus</p>
    <p>Implemented as a shared library in OpenSSL</p>
  </div>
  <div class="page">
    <p>Micro-Benchmarking Fixed Parties L=10</p>
    <p>Overheads could be significant due to network connection  (2-6 times) slower</p>
    <p>Can be impacted by Amazon workloads</p>
  </div>
  <div class="page">
    <p>Micro-Benchmarking Fixed Shares k=2</p>
  </div>
  <div class="page">
    <p>Mail Server Results</p>
    <p>A vg</p>
    <p>. L at</p>
    <p>en cy</p>
    <p>( m</p>
    <p>s)</p>
    <p>Number of VMs (L)</p>
  </div>
  <div class="page">
    <p>Optimization: Key Idea</p>
    <p>Although keys are distributed, adversary may capture some keys</p>
    <p>Choosing parameters is critical:  L: Number of VMs  K: Number of shares needed  : Re-sharing frequency</p>
    <p>Choose optimal values based on 3 aspects:  Security: How likely the adv. will succeed?  Cost: How much is to purchase L VMs  Performance: What should be K</p>
  </div>
  <div class="page">
    <p>Optimization: Security Aspect</p>
    <p>Probability of a successful attack on a VM  Exponentially distributed random variable  : Mean time to succeed</p>
    <p>Probability to succeed in a re-sharing period</p>
    <p>Capturing k shares in a period</p>
  </div>
  <div class="page">
    <p>Optimization: Other Aspects and Objective</p>
    <p>Cost increases linearly with number of VMs:  : Unit cost of a VM</p>
    <p>Performance aspect depends on:  The particular application (e.g., Web or mail server)  Performance metric (e.g., latency)</p>
    <p>Objective:</p>
  </div>
  <div class="page">
    <p>Optimization: Application to Micro-Benchmarking</p>
    <p>Applied optimization to Micro-Benchmarking  100 clients  Performance metric is latency  5 second re-sharing period</p>
    <p>Used experiment results up to L=10 VMs  Trained linear regression on latency results</p>
    <p>c_1 = -18, c_2 = 31, c_3 = 7</p>
    <p>Calculated optimal values for  Latency between 50-200 ms  Annual budget between $1820 - $14560 for L=[2,16]</p>
  </div>
  <div class="page">
    <p>Optimization: Application to Micro-Benchmarking</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Secret sharing can be used to protect public keys against cross VM attacks and more..</p>
    <p>Performance overhead can be very low for CPU bound applications</p>
    <p>Optimal parameters can be found using multiobjective optimization framework</p>
  </div>
  <div class="page">
    <p>Questions</p>
  </div>
</Presentation>
