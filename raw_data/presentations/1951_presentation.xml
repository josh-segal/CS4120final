<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Stratus: Clouds with Microarchitectural Resource Management</p>
    <p>Kaveh Razavi and Animesh Trivedi</p>
  </div>
  <div class="page">
    <p>Once Upon a Time in the Cloud</p>
    <p>Large: 4 cores, 16 GB</p>
    <p>Medium: 2 cores, 8 GB</p>
    <p>Small: 1 core, 4 GB</p>
  </div>
  <div class="page">
    <p>Once Upon a Time in the Cloud</p>
    <p>Large: 4 cores, 16 GB</p>
    <p>Medium: 2 cores, 8 GB</p>
    <p>Small: 1 core, 4 GB</p>
    <p>CPU</p>
    <p>DRAM</p>
    <p>al lo ca te (s ma ll )</p>
    <p>cloud provider</p>
    <p>tenant</p>
  </div>
  <div class="page">
    <p>Once Upon a Time in the Cloud</p>
    <p>Large: 4 cores, 16 GB</p>
    <p>Medium: 2 cores, 8 GB</p>
    <p>Small: 1 core, 4 GB</p>
    <p>CPU</p>
    <p>DRAM</p>
    <p>al lo ca te (s ma ll )</p>
    <p>tenant</p>
    <p>cloud provider</p>
  </div>
  <div class="page">
    <p>Once Upon a Time in the Cloud</p>
    <p>Large: 4 cores, 16 GB</p>
    <p>Medium: 2 cores, 8 GB</p>
    <p>Small: 1 core, 4 GB</p>
    <p>CPU</p>
    <p>DRAM</p>
    <p>al lo ca te (m ed iu m)</p>
    <p>al lo ca te (s ma ll )</p>
    <p>tenant</p>
    <p>tenant</p>
    <p>cloud provider</p>
  </div>
  <div class="page">
    <p>Once Upon a Time in the Cloud</p>
    <p>Large: 4 cores, 16 GB</p>
    <p>Medium: 2 cores, 8 GB</p>
    <p>Small: 1 core, 4 GB</p>
    <p>CPU</p>
    <p>Shared L3 Cache</p>
    <p>DRAM</p>
    <p>al lo ca te (s ma ll )</p>
    <p>al lo ca te (m ed iu m)</p>
    <p>What could possibly go wrong here when</p>
    <p>two tenant share the L3 cache?</p>
    <p>cloud provider</p>
  </div>
  <div class="page">
    <p>Problems with (Unsupervised) Sharing</p>
    <p>dCat (EuroSys18): 57.6% improvements</p>
    <p>for Redis with noisy neighbours</p>
    <p>Cong Xu, et al. DCat: dynamic cache management for efficient, performance-sensitive infrastructure-as-a-service. ACM EuroSys 2018.</p>
    <p>CPU</p>
    <p>Shared L3 Cache</p>
    <p>NetCAT (S&amp;P20): detect activity</p>
    <p>of another tenant over network</p>
    <p>(a) Performance (b) Security</p>
  </div>
  <div class="page">
    <p>Problems with (Unsupervised) Sharing</p>
    <p>dCat (EuroSys18): 57.6% improvements</p>
    <p>for Redis with noisy neighbours</p>
    <p>Cong Xu, et al. DCat: dynamic cache management for efficient, performance-sensitive infrastructure-as-a-service. ACM EuroSys 2018. NetCAT: Practical Cache Attacks from the Network. Kurth, M.; Gras, B.; Andriesse, D.; Giuffrida, C.; Bos, H.; and Razavi, K. In S&amp;P, 2020.</p>
    <p>CPU</p>
    <p>Shared L3 Cache</p>
    <p>NetCAT (S&amp;P20): detect activity</p>
    <p>of another tenant over network</p>
    <p>(a) Performance (b) Security</p>
  </div>
  <div class="page">
    <p>Problems with (Unsupervised) Sharing</p>
    <p>dCat (EuroSys18): 57.6% improvements</p>
    <p>for Redis with noisy neighbours</p>
    <p>Cong Xu, et al. DCat: dynamic cache management for efficient, performance-sensitive infrastructure-as-a-service. ACM EuroSys 2018. NetCAT: Practical Cache Attacks from the Network. Kurth, M.; Gras, B.; Andriesse, D.; Giuffrida, C.; Bos, H.; and Razavi, K. In S&amp;P, 2020.</p>
    <p>CPU</p>
    <p>Shared L3 Cache</p>
    <p>NetCAT (S&amp;P20): detect activity</p>
    <p>of another tenant over network</p>
    <p>(a) Performance (b) Security</p>
    <p>Are these two examples L3 Cache specific?</p>
  </div>
  <div class="page">
    <p>New Classes of Microarchitectural Resources</p>
    <p>Resource Microarchitectural Resource</p>
    <p>CPU Caches, TLBs, Hyperthreads, ALUs</p>
    <p>Smart NICs Caches (memory, requests, connection), TLBs, RMT pipelines, DMA engines</p>
    <p>NVM Storage Blocks, pages, internal r/w ports, programmable cores, SRAM</p>
    <p>GPUs Memories, caches, execution units</p>
    <p>In-Network Switches</p>
    <p>SRAM and TCAM memories, Match-action Unit processors, ALUs</p>
    <p>And more - TPUs, FPGAs, near-memory compute elements</p>
  </div>
  <div class="page">
    <p>Diverse microarchitectural resources are here to stay</p>
    <p>They have security and performance ramifications</p>
    <p>The root cause is unsupervised sharing (or lack of isolation)</p>
    <p>Key challenge</p>
    <p>How to manage microarchitectural resources in a principled manner?</p>
    <p>What is happening</p>
  </div>
  <div class="page">
    <p>Stratus: Clouds with Principled Microarchitectural Resource Management</p>
    <p>Key property : isolation</p>
  </div>
  <div class="page">
    <p>Stratus: Clouds with Principled Microarchitectural Resource Management</p>
    <p>A cloud resource allocation framework</p>
    <p>Security and performance requirements are the two sides of isolation</p>
    <p>Captures and reasons about microarchitectural resource isolation</p>
  </div>
  <div class="page">
    <p>Stratus: Clouds with Principled Microarchitectural Resource Management</p>
    <p>Q1: How to capture isolation?</p>
    <p>Q2: How to reason about isolation?</p>
    <p>Q3: How to charge for isolation?</p>
  </div>
  <div class="page">
    <p>Stratus: Clouds with Principled Microarchitectural Resource Management</p>
    <p>Q1: How to capture isolation?</p>
    <p>Q2: How to reason about isolation?</p>
    <p>Q3: How to charge for isolation?</p>
  </div>
  <div class="page">
    <p>Capturing Isolation: A Declarative Interface</p>
    <p>Isolation captured as constraints on resource allocations</p>
    <p>handle = ISOLATE (resource, scale, quantity);</p>
  </div>
  <div class="page">
    <p>Capturing Isolation: A Declarative Interface</p>
    <p>hard: discrete allocation</p>
    <p>LLC slots, ALUs, TLBs,</p>
    <p>soft: contented (in time)</p>
    <p>DRAM bandwidth</p>
    <p>Extent of isolation</p>
    <p>requested {0,1}</p>
    <p>Number of resources for</p>
    <p>which this constraint must</p>
    <p>be satisfied</p>
    <p>Isolation captured as constraints on resource allocations</p>
    <p>handle = ISOLATE (resource, scale, quantity);</p>
  </div>
  <div class="page">
    <p>Capturing Isolation: A Declarative Interface</p>
    <p>handle = ISOLATE (resource, scale, quantity);</p>
    <p>ATTACH (handle1, handle2, ...); Multiple constraints can be attached (AND) by their handles</p>
  </div>
  <div class="page">
    <p>Capturing Isolation: A Declarative Interface</p>
    <p>ATTACH (handle1, handle2, ...);</p>
    <p>Pass multiple microarchitectural constraints during cloud resource allocations (also labeled grouped constraints -- see the paper)</p>
    <p>ALLOCATE cloud_resource, .. where constraints</p>
    <p>handle = ISOLATE (resource, scale, quantity);</p>
  </div>
  <div class="page">
    <p>Capturing Isolation: A Declarative Interface</p>
    <p>ATTACH (handle1, handle2, ...);</p>
    <p>ALLOCATE cloud_resource, .. where constraints</p>
    <p>E.g., mitigating NetCAT:</p>
    <p>ALLOCATE small where</p>
    <p>h1 = ISOLATE (CPU.LLC, 1.0, 64), // the first 64 lines</p>
    <p>h2 = ISOLATE (NIC.*, *, ...), // all NIC-level uarch</p>
    <p>ATTACH (h1, h2); // both for small VM allocations</p>
    <p>handle = ISOLATE (resource, scale, quantity);</p>
  </div>
  <div class="page">
    <p>Q1: How to capture isolation?</p>
    <p>Q2: How to reason about isolation?</p>
    <p>Q3: How to charge for isolation?</p>
    <p>Stratus: Clouds with Principled Microarchitectural Resource Management</p>
  </div>
  <div class="page">
    <p>Building a Reasoning Framework</p>
    <p>CKB</p>
    <p>Resources - Topology, numbers, types - Datasheets information</p>
    <p>Online measurements - Utilization, spare - Occupancy</p>
    <p>Similar in the spirit as SKB in Barrelfish OS (SOSP09)</p>
    <p>Structured representation of knowledge in one place</p>
    <p>Can be queried</p>
    <p>Cloud Knowledge Base</p>
  </div>
  <div class="page">
    <p>Building a Reasoning Framework</p>
    <p>CKB</p>
    <p>Resources - Topology, numbers, types - Datasheets information</p>
    <p>Online measurements - Utilization, spare - Occupancy</p>
    <p>Cloud Knowledge Base</p>
    <p>Tenants constraints (CNF format)</p>
    <p>Allocation strategy</p>
  </div>
  <div class="page">
    <p>Stratus: Clouds with Principled Microarchitectural Resource Management</p>
    <p>Q1: How to capture isolation?</p>
    <p>Q2: How to reason about isolation?</p>
    <p>Q3: How to charge for isolation?</p>
  </div>
  <div class="page">
    <p>Charging for Isolation: Isolation Credits</p>
    <p>Low isolation + High utilization + Better efficiency - Low perf/security</p>
    <p>Isolation spectrum</p>
    <p>High isolation + Low interference + Better perf/security - Low utilization</p>
  </div>
  <div class="page">
    <p>Charging for Isolation: Isolation Credits</p>
    <p>Isolation spectrum</p>
    <p>Isolation credit: a currency to capture this tradeoff</p>
    <p>Encourages tenants to only specify relevant constraints</p>
    <p>Encourages providers to innovate in better isolation mechanisms</p>
    <p>Low isolation + High utilization + Better efficiency - Low perf/security</p>
    <p>High isolation + Low interference + Better perf/security - Low utilization</p>
  </div>
  <div class="page">
    <p>Charging for Isolation: Isolation Credits</p>
    <p>Isolation spectrum</p>
    <p>Stratus Cloud</p>
    <p>Tenant who knows</p>
    <p>co ns tr ai nt s</p>
    <p>Tenant with a budget</p>
    <p>credit budget = 42 constraints</p>
    <p>Low isolation + High utilization + Better efficiency - Low perf/security</p>
    <p>High isolation + Low interference + Better perf/security - Low utilization</p>
  </div>
  <div class="page">
    <p>Managing microarchitectural resources in a principled manner</p>
    <p>Three key ideas:</p>
    <p>Summary: Stratus</p>
  </div>
  <div class="page">
    <p>Challenges and Discussion Points</p>
    <p>Enforcing isolation  Mechanisms  Policies</p>
    <p>Right constraints  Profile guided  Security libraries</p>
    <p>Scalability  CKB  O(1-10ms)</p>
    <p>Is microarchitectural resource management really worth it?</p>
    <p>More efforts on mechanisms or better policies?</p>
    <p>Can we have better hardware support from vendors?</p>
    <p>What are we missing from a cloud-operation point of view?</p>
  </div>
</Presentation>
