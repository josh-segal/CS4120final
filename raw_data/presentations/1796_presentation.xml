<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Opening Up Black-Box Networks with</p>
    <p>CloudTalk</p>
    <p>Cos$n Raiciu, Mihail Ionescu and Dragos Niculescu University Politehnica Bucharest</p>
  </div>
  <div class="page">
    <p>Cloud providers keep customers in the dark w.r.t. network-topology</p>
    <p>Not disclosed for commercial and security reasons  Do the customers need to know anyways?</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Cloud Customers want performance</p>
    <p>A B C</p>
    <p>MAP? MAP?</p>
    <p>Fast Map Reduce!</p>
  </div>
  <div class="page">
    <p>Cloud Customers want performance</p>
    <p>A B C</p>
    <p>MAP? MAP?</p>
    <p>.</p>
    <p>StaDc OpDmizaDon: A is in the same rack as B, so Run map on A</p>
    <p>oversubscribed</p>
    <p>Fast Map Reduce!</p>
  </div>
  <div class="page">
    <p>Cloud Customers want performance</p>
    <p>A B C</p>
    <p>MAP? MAP?</p>
    <p>.</p>
    <p>Dynamic OpDmizaDon: As downlink is congested, so Run map on C</p>
    <p>oversubscribed</p>
    <p>Fast Map Reduce!</p>
  </div>
  <div class="page">
    <p>Are we stuck between a rock and a hard place?!</p>
    <p>Cloud providers MUST keep network informaDon</p>
    <p>private for business and security reasons</p>
    <p>Customers NEED network informaDon to help</p>
    <p>opDmize distributed applicaDons</p>
    <p>The Status Quo</p>
  </div>
  <div class="page">
    <p>Is network topology informaDon private in the first place?</p>
    <p>We did a brief study of the Amazon EC2 network topology (us-east-1d)</p>
    <p>Rented many VMs  Between all pairs we ran:  Traceroute  Record route (ping R)  Used aliasing techniques to group IPs on the same device</p>
  </div>
  <div class="page">
    <p>C</p>
    <p>D o m 0</p>
    <p>Top-of-Rack Switch (L2)</p>
    <p>EC2 Measurement results</p>
    <p>A B</p>
    <p>D o m 0</p>
    <p>Edge Router (IP)</p>
    <p>D</p>
    <p>D o m 0</p>
  </div>
  <div class="page">
    <p>Top-of-Rack Switch (L2)</p>
    <p>EC2 Measurement results</p>
    <p>Edge Router (IP)</p>
  </div>
  <div class="page">
    <p>EC2 Measurement results</p>
    <p>Top-of-Rack Switch</p>
    <p>Edge Router</p>
  </div>
  <div class="page">
    <p>EC2 Measurement results</p>
    <p>Top-of-Rack Switch</p>
    <p>Edge Router</p>
    <p>.</p>
    <p>Core Router</p>
    <p>INTERNET</p>
  </div>
  <div class="page">
    <p>Everyone loses !</p>
    <p>Cloud providers cant keep network informaDon private</p>
    <p>Customers infer network informaDon to help opDmize distributed applicaDons - inaccurate - high overhead</p>
    <p>The REAL Status Quo</p>
  </div>
  <div class="page">
    <p>Moving forward: strawman soluDons</p>
    <p>The cloud provider shares informaDon publicly.  The network blueprint  This is sensiDve informaDon!  Does not capture dynamic load</p>
    <p>Aggregate informaDon (IETF ALTO WG):  Not accurate enough to be useful  Does not capture dynamic informaDon, one-to-many traffic pa^erns</p>
  </div>
  <div class="page">
    <p>CloudTalk in a nutshell</p>
    <p>A B C</p>
    <p>MAP? MAP?</p>
  </div>
  <div class="page">
    <p>CloudTalk in a nutshell</p>
    <p>.</p>
    <p>How long would it take to transfer 64MB from B to A?</p>
  </div>
  <div class="page">
    <p>CloudTalk in a nutshell</p>
    <p>.</p>
  </div>
  <div class="page">
    <p>CloudTalk in a nutshell</p>
    <p>.</p>
    <p>How long would it take to transfer 64MB from B to C?</p>
  </div>
  <div class="page">
    <p>CloudTalk in a nutshell</p>
    <p>.</p>
  </div>
  <div class="page">
    <p>CloudTalk in a nutshell</p>
    <p>.</p>
    <p>RUN JOB ON A!</p>
  </div>
  <div class="page">
    <p>CloudTalk is a language that describes network tasks</p>
    <p>Each task consists of a set of flows  Each flow is specified by:  Flow ID - unique within a task  Start $me - relaDve to the start of the task or the finish Dme of another flow(s)</p>
    <p>Size - in Bytes  Other constraints (e.g. max bandwidth).</p>
    <p>A task is considered finished when the last of its flows finishes</p>
  </div>
  <div class="page">
    <p>ApplicaDons use CloudTalk tasks to describe alternaDve ways of doing their job</p>
    <p>Example the map-reduce scheduler creates two tasks</p>
    <p>Task 1 ID:0, B-&gt;A, START:0, SIZE:64MB</p>
    <p>Task 2 ID:0, B-&gt;C, START:0, SIZE:64MB</p>
    <p>A B C</p>
    <p>MAP? MAP?</p>
    <p>Network tasks are sent to servers of the cloud provider</p>
  </div>
  <div class="page">
    <p>The network servers esDmate finish Dmes for the tasks they receive:</p>
    <p>Using topology informaDon  Task 1 (B-&gt;A): 0.65s  Task 2 (B-&gt;C): 2.6s</p>
    <p>Using dynamic informaDon  Task 1 (B-&gt;A): 6.5s  Task 2 (B-&gt;C): 0.65s</p>
    <p>A B C MAP? MAP?</p>
    <p>Oversubscribed 4:1</p>
  </div>
  <div class="page">
    <p>CloudTalk for other apps</p>
    <p>Example: Search</p>
    <p>Task 1: aggregate at A ID:0,A-&gt;B,START:0,1KB ID:1,A-&gt;C,START:0,1KB ID:2,B-&gt;A,START:finish(0),10KB ID:3,C-&gt;A,START:finish(1),10KB</p>
    <p>Task 2: aggregate at B</p>
    <p>A</p>
    <p>B C</p>
  </div>
  <div class="page">
    <p>CloudTalk ProperDes Expressive captures one-to-one, many-to-one, many-to-many traffic pa^erns</p>
    <p>Allows independent evolu$on of applica$ons and the network the language is just an API used by applicaDons and implemented by the network</p>
    <p>Minimum informa$on leaked Network only reveals finish Dme esDmates ApplicaDons describe their equivalent traffic pa^erns (some of these are visible to the network).</p>
  </div>
  <div class="page">
    <p>Network-side problem to be solved: Input: network topology informa&gt;on dynamic flow informa&gt;on CloudTalk task(s)</p>
    <p>Output: es&gt;mated finish &gt;me</p>
    <p>Our prototype: packet-level simulaDon with htsim of 1200-node EC2-like network, no dynamic informaDon</p>
  </div>
  <div class="page">
    <p>Focus on a few framework applicaDons  MapReduce, Distributed File Systems, etc.</p>
    <p>Preliminary evaluaDon: syntheDc task descripDons  Web-search: scather-gather  Map-reduce: job placement</p>
  </div>
  <div class="page">
    <p>EvaluaDon results</p>
    <p>Map/reduce: where should a map task be placed?  Runs just before map task is started  64MB map input  Takes 1.2s to evaluate</p>
    <p>Web-search  see paper.</p>
  </div>
  <div class="page">
    <p>LimitaDons and Challenges</p>
    <p>CloudTalk is not useful for short transfers  Using dynamic informaDon is tricky  Need to find out whats going on (e.g. [Hedera]).  Expensive to give answers in this context</p>
    <p>OpDmizing in a changing network  How can we be sure that the esDmate is right?  What if a new flow arrives in the meanDme?</p>
    <p>Scaling network esDmaDon to large tasks:  Flow-level simulaDon?</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Cloud applicaDons need network informaDon</p>
    <p>for opDmizaDons.</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Cloud applicaDons need network informaDon</p>
    <p>for opDmizaDons.</p>
    <p>Cloud Networks are black-boxes for</p>
    <p>commercial and security reasons.</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Cloud applicaDons need network informaDon</p>
    <p>for opDmizaDons.</p>
    <p>Cloud Networks arent black-boxes because</p>
    <p>topology inference is possible.</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Cloud applicaDons need network informaDon</p>
    <p>for opDmizaDons.</p>
    <p>Cloud Networks arent black-boxes because</p>
    <p>topology inference is possible.</p>
    <p>The applicaDons and network should break the silence for mutual benefits</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>CloudTalk is a simple language that allows the network and the applicaDons to communicate.  Expressive enough to capture common applicaDons  Reveals li^le informaDon beyond what is known or can be inferred</p>
    <p>IniDal prototype proves feasibility, but there are</p>
    <p>many interesDng challenges to solve.</p>
  </div>
  <div class="page">
    <p>Backup</p>
  </div>
  <div class="page">
    <p>OpDmizing on EC2  We ran web search on 100 machines (2TB dataset)  Need to use aggregators to reduce incast effects</p>
    <p>Where should aggregators be placed? Placing aggregators to be as close to servers as possible reduces delay by a factor of three</p>
    <p>!&quot;#$&quot;#%</p>
    <p>&amp;''#&quot;'()*#</p>
    <p>+#*,)&quot;,</p>
    <p>!&quot;#$&quot;#%</p>
    <p>&amp;''#&quot;'()*#</p>
  </div>
  <div class="page">
    <p>EvaluaDon results: web search</p>
    <p>Pre-deployment analysis of aggregator placement  Each tasks describes one query running in an idle network with different placement of aggregators:  Server processing Dme is assumed constant  Message size is constant</p>
    <p>QualitaDvely similar results, correct ranking  EvaluaDon speed: 1.5s for each task (10 runs, to capture ECMP rouDng)</p>
  </div>
  <div class="page">
    <p>Analyzing possible network implementaDons</p>
    <p>Packet-level simulaDon + Is very accurate</p>
    <p>Time scales linearly with #packets  Flow-level simulaDon  Less accurate (no incast) + Time scales with the number of flows</p>
    <p>We probably need a hybrid soluDon</p>
  </div>
</Presentation>
