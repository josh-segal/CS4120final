<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Understanding Manycore Scalability</p>
    <p>of File Systems</p>
    <p>Changwoo Min, Sanidhya Kashyap, Steffen Maass Woonhak Kang, and Taesoo Kim</p>
  </div>
  <div class="page">
    <p>Application must parallelize I/O operations</p>
    <p>Death of single core CPU scaling  CPU clock frequency: 3 ~ 3.8 GHz  # of physical cores: up to 24 (Xeon E7 v4)</p>
    <p>From mechanical HDD to flash SSD  IOPS of a commodity SSD: 900K  Non-volatile memory (e.g., 3D XPoint): 1,000x</p>
    <p>But file systems become a scalability bottleneck</p>
  </div>
  <div class="page">
    <p>Problem: Lack of understanding in internal scalability behavior</p>
    <p>m es</p>
    <p>sa ge</p>
    <p>s/ se</p>
    <p>c</p>
    <p>#core</p>
    <p>Exim mail server on RAMDISK</p>
    <p>btrfs ext4</p>
    <p>F2FS XFS</p>
    <p>Embarrassingly parallel application!</p>
    <p>Intel 80-core machine: 8-socket, 10-core Xeon E7-8870  RAM: 512GB, 1TB SSD, 7200 RPM HDD</p>
  </div>
  <div class="page">
    <p>Even in slower storage medium file system becomes a bottleneck</p>
    <p>btrfs ext4 F2FS XFS</p>
    <p>m es</p>
    <p>sa ge</p>
    <p>s/ se</p>
    <p>c</p>
    <p>Exim email server at 80 cores</p>
    <p>RAMDISK SSD</p>
    <p>HDD</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background  FxMark design</p>
    <p>A file system benchmark suite for manycore scalability</p>
    <p>Analysis of five Linux file systems  Pilot solution  Related work  Summary</p>
  </div>
  <div class="page">
    <p>Research questions</p>
    <p>What file system operations are not scalable?</p>
    <p>Why they are not scalable?</p>
    <p>Is it the problem of implementation or design?</p>
  </div>
  <div class="page">
    <p>Technical challenges</p>
    <p>Applications are usually stuck with a few bottlenecks</p>
    <p>cannot see the next level of bottlenecks before resolving them</p>
    <p>difficult to understand overall scalability behavior</p>
    <p>How to systematically stress file systems to understand scalability behavior</p>
  </div>
  <div class="page">
    <p>FxMark: evaluate &amp; analyze manycore scalability of file systems</p>
    <p>FxMark:</p>
    <p>File systems:</p>
    <p>Storage medium:</p>
    <p>tmpfs</p>
    <p>Memory FS</p>
    <p>ext4 J/NJ</p>
    <p>XFS</p>
    <p>Journaling FS</p>
    <p>btrfs</p>
    <p>CoW FS</p>
    <p>F2FS</p>
    <p>Log FS</p>
    <p># core: 1, 2, 4, 10, 20, 30, 40, 50, 60, 70, 80</p>
    <p>SSD</p>
  </div>
  <div class="page">
    <p>FxMark: evaluate &amp; analyze manycore scalability of file systems</p>
    <p>FxMark:</p>
    <p>File systems:</p>
    <p>Storage medium:</p>
    <p>tmpfs</p>
    <p>Memory FS</p>
    <p>ext4 J/NJ</p>
    <p>XFS</p>
    <p>Journaling FS</p>
    <p>btrfs</p>
    <p>CoW FS</p>
    <p>F2FS</p>
    <p>Log FS</p>
    <p># core: 1, 2, 4, 10, 20, 30, 40, 50, 60, 70, 80</p>
    <p>SSD</p>
    <p>&gt;4,700</p>
  </div>
  <div class="page">
    <p>Low Medium High</p>
    <p>Microbenchmark: unveil hidden scalability bottlenecks  Data block read</p>
    <p>Sh ar</p>
    <p>in g</p>
    <p>Le ve</p>
    <p>l</p>
    <p>File Block Process</p>
    <p>R Operation</p>
    <p>Legend:</p>
    <p>R R R R R R</p>
  </div>
  <div class="page">
    <p>Stress different components with various sharing levels</p>
  </div>
  <div class="page">
    <p>Legend</p>
    <p>btrfs ext4</p>
    <p>ext4NJ F2FS</p>
    <p>tmpfs XFS</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>Evaluation</p>
    <p>Data block read</p>
    <p>Low:</p>
    <p>R R</p>
    <p>File systems:</p>
    <p>Storage medium:</p>
    <p>Linear scalability</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background  FxMark design  Analysis of five Linux file systems</p>
    <p>What are scalability bottlenecks?</p>
    <p>Pilot solution  Related work  Summary</p>
  </div>
  <div class="page">
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBL</p>
    <p>Summary of results: file systems are not scalable</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBM</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c #core</p>
    <p>DRBH</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWAL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWTL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWSL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MRPL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MRPM</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c #core</p>
    <p>MRPH</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MRDL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MRDM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWCL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWCM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWUL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWUM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWRL</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c #core</p>
    <p>MWRM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBL:O_DIRECT</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBM:O_DIRECT</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOL:O_DIRECT</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOM:O_DIRECT</p>
    <p>m es</p>
    <p>sa ge</p>
    <p>s/ se</p>
    <p>c</p>
    <p>#core</p>
    <p>Exim</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c</p>
    <p>#core</p>
    <p>RocksDB</p>
    <p>G B</p>
    <p>/s ec</p>
    <p>#core</p>
    <p>DBENCH Legend</p>
    <p>btrfs ext4</p>
    <p>ext4NJ F2FS</p>
    <p>tmpfs XFS</p>
  </div>
  <div class="page">
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBL</p>
    <p>Summary of results: file systems are not scalable</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBM</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c #core</p>
    <p>DRBH</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWAL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWTL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWSL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MRPL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MRPM</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c #core</p>
    <p>MRPH</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MRDL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MRDM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWCL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWCM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWUL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWUM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWRL</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c #core</p>
    <p>MWRM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBL:O_DIRECT</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBM:O_DIRECT</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOL:O_DIRECT</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOM:O_DIRECT</p>
    <p>m es</p>
    <p>sa ge</p>
    <p>s/ se</p>
    <p>c</p>
    <p>#core</p>
    <p>Exim</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c</p>
    <p>#core</p>
    <p>RocksDB</p>
    <p>G B</p>
    <p>/s ec</p>
    <p>#core</p>
    <p>DBENCH Legend</p>
    <p>btrfs ext4</p>
    <p>ext4NJ F2FS</p>
    <p>tmpfs XFS</p>
  </div>
  <div class="page">
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBL</p>
    <p>Summary of results: file systems are not scalable</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBM</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c #core</p>
    <p>DRBH</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWAL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWTL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWSL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MRPL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MRPM</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c #core</p>
    <p>MRPH</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MRDL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MRDM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWCL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWCM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWUL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWUM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWRL</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c #core</p>
    <p>MWRM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBL:O_DIRECT</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBM:O_DIRECT</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOL:O_DIRECT</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOM:O_DIRECT</p>
    <p>m es</p>
    <p>sa ge</p>
    <p>s/ se</p>
    <p>c</p>
    <p>#core</p>
    <p>Exim</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c</p>
    <p>#core</p>
    <p>RocksDB</p>
    <p>G B</p>
    <p>/s ec</p>
    <p>#core</p>
    <p>DBENCH Legend</p>
    <p>btrfs ext4</p>
    <p>ext4NJ F2FS</p>
    <p>tmpfs XFS</p>
  </div>
  <div class="page">
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBL</p>
    <p>Summary of results: file systems are not scalable</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBM</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c #core</p>
    <p>DRBH</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWAL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWTL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWSL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MRPL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MRPM</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c #core</p>
    <p>MRPH</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MRDL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MRDM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWCL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWCM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWUL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWUM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>MWRL</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c #core</p>
    <p>MWRM</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBL:O_DIRECT</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBM:O_DIRECT</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOL:O_DIRECT</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOM:O_DIRECT</p>
    <p>m es</p>
    <p>sa ge</p>
    <p>s/ se</p>
    <p>c</p>
    <p>#core</p>
    <p>Exim</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c</p>
    <p>#core</p>
    <p>RocksDB</p>
    <p>G B</p>
    <p>/s ec</p>
    <p>#core</p>
    <p>DBENCH Legend</p>
    <p>btrfs ext4</p>
    <p>ext4NJ F2FS</p>
    <p>tmpfs XFS</p>
  </div>
  <div class="page">
    <p>Data block read</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c #core</p>
    <p>DRBL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBH</p>
    <p>Low:</p>
    <p>Medium:</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBM</p>
    <p>All file systems linearly scale</p>
    <p>All file systems show performance collapse</p>
    <p>XFS shows performance collapse</p>
    <p>XFS</p>
    <p>R R</p>
    <p>R R</p>
    <p>High: R R</p>
  </div>
  <div class="page">
    <p>Disk</p>
    <p>Page cache is maintained for efficient access of file data</p>
    <p>R</p>
    <p>Page cache</p>
    <p>OS Kernel</p>
  </div>
  <div class="page">
    <p>Disk</p>
    <p>Page cache hit</p>
    <p>R 1. read a file block</p>
    <p>Page cache</p>
    <p>OS Kernel</p>
  </div>
  <div class="page">
    <p>Disk</p>
    <p>Page cache can be evicted to secure free memory</p>
    <p>Page cache</p>
    <p>OS Kernel</p>
  </div>
  <div class="page">
    <p>Disk</p>
    <p>only when not being accessed</p>
    <p>R 1. read a file block</p>
    <p>Page cache</p>
    <p>OS Kernel</p>
    <p>access_a_page(...) { atomic_inc(&amp;page-&gt;_count); ... atomic_dec(&amp;page-&gt;_count); }</p>
    <p>Reference counting is used to track # of accessing tasks</p>
  </div>
  <div class="page">
    <p>Reference counting becomes a scalability bottleneck</p>
    <p>access_a_page(...) { atomic_inc(&amp;page-&gt;_count); ... atomic_dec(&amp;page-&gt;_count); } 0</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBH</p>
    <p>access_a_page(...) { atomic_inc(&amp;page-&gt;_count); ... atomic_dec(&amp;page-&gt;_count); }</p>
    <p>R R R R R R</p>
    <p>... 100 CPI</p>
    <p>(cycles-per-instruction)</p>
  </div>
  <div class="page">
    <p>Reference counting becomes a scalability bottleneck</p>
    <p>access_a_page(...) { atomic_inc(&amp;page-&gt;_count); ... atomic_dec(&amp;page-&gt;_count); } 0</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DRBH</p>
    <p>access_a_page(...) { atomic_inc(&amp;page-&gt;_count); ... atomic_dec(&amp;page-&gt;_count); }</p>
    <p>R R R R R R</p>
    <p>...</p>
    <p>High contention on a page reference counter  Huge memory stall</p>
    <p>Many more: directory entry cache, XFS inode, etc</p>
  </div>
  <div class="page">
    <p>Lessons learned</p>
    <p>High locality can cause performance collapse</p>
    <p>Cache hit should be scalable  When the cache hit is dominant,</p>
    <p>the scalability of cache hit does matter.</p>
  </div>
  <div class="page">
    <p>Data block overwrite</p>
    <p>Low:</p>
    <p>Medium:</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOM</p>
    <p>All file systems degrade gradually</p>
    <p>Ext4, F2FS, and btrfs show performance collapse</p>
    <p>ext4 F2FS btrfs</p>
    <p>W W</p>
    <p>W W</p>
  </div>
  <div class="page">
    <p>Btrfs is a copy-on-write (CoW) file system</p>
    <p>Directs a write to a block to a new copy of the block</p>
    <p>Never overwrites the block in place</p>
    <p>Maintain multiple versions of a file system image W</p>
    <p>Time T Time T Time T+1</p>
  </div>
  <div class="page">
    <p>CoW triggers disk block allocation for every write</p>
    <p>W</p>
    <p>Time T Time T+1</p>
    <p>Block Allocation</p>
    <p>Block Allocation</p>
    <p>Disk block allocation becomes a bottleneck</p>
    <p>Ext4 journaling, F2FS checkpointing</p>
  </div>
  <div class="page">
    <p>Lessons learned</p>
    <p>Overwriting could be as expensive as appending  Critical at log-structured FS (F2FS) and CoW FS (btrfs)</p>
    <p>Consistency guarantee mechanisms should be scalable</p>
    <p>Scalable journaling  Scalable CoW index structure  Parallel log-structured writing</p>
  </div>
  <div class="page">
    <p>Data block overwrite</p>
    <p>Low:</p>
    <p>Medium:</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOL</p>
    <p>M o</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>DWOM</p>
    <p>All file systems degrade gradually</p>
    <p>Ext4, F2FS, and btrfs show performance collapse</p>
    <p>ext4 F2FS btrfs</p>
    <p>W W</p>
    <p>W W</p>
  </div>
  <div class="page">
    <p>Entire file is locked regardless of update range</p>
    <p>All tested file systems hold an inode mutex for write operations  Range-based locking is not implemented</p>
    <p>***_file_write_iter(...) { mutex_lock(&amp;inode-&gt;i_mutex); ... mutex_unlock(&amp;inode-&gt;i_mutex); }</p>
  </div>
  <div class="page">
    <p>Lessons learned</p>
    <p>A file cannot be concurrently updated  Critical for VM and DBMS, which manage large files</p>
    <p>Need to consider techniques used in parallel file systems</p>
    <p>E.g., range-based locking</p>
  </div>
  <div class="page">
    <p>Summary of findings</p>
    <p>High locality can cause performance collapse  Overwriting could be as expensive as appending  A file cannot be concurrently updated  All directory operations are sequential  Renaming is system-wide sequential  Metadata changes are not scalable  Non-scalability often means wasting CPU cycles  Scalability is not portable</p>
    <p>See ou r pape</p>
    <p>r</p>
  </div>
  <div class="page">
    <p>Summary of findings</p>
    <p>High locality can cause performance collapse  Overwriting could be as expensive as appending  A file cannot be concurrently updated  All directory operations are sequential  Renaming is system-wide sequential  Metadata changes are not scalable  Non-scalability often means wasting CPU cycles  Scalability is not portable</p>
    <p>See ou r pape</p>
    <p>r</p>
    <p>Many of them are unexpected and counter-intuitive  Contention at file system level to maintain data dependencies</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background  FxMark design  Analysis of five Linux file systems  Pilot solution</p>
    <p>If we remove contentions in a file system,</p>
    <p>is such file system scalable?</p>
    <p>Related work  Summary</p>
  </div>
  <div class="page">
    <p>RocksDB on a 60-partitioned RAMDISK scales better</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c</p>
    <p>#core</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>btrfs ext4 F2FS</p>
    <p>tmpfs XFS</p>
    <p>tmpfs</p>
    <p>A single-partitioned RAMDISK</p>
    <p>A 60-partitioned RAMDISK</p>
    <p>** Tested workload: DB_BENCH overwrite **</p>
  </div>
  <div class="page">
    <p>RocksDB on a 60-partitioned RAMDISK scales better</p>
    <p>o p</p>
    <p>s/ se</p>
    <p>c</p>
    <p>#core</p>
    <p>p s/</p>
    <p>se c</p>
    <p>#core</p>
    <p>btrfs ext4 F2FS</p>
    <p>tmpfs XFS</p>
    <p>tmpfs</p>
    <p>A single-partitioned RAMDISK</p>
    <p>A 60-partitioned RAMDISK</p>
    <p>** Tested workload: DB_BENCH overwrite **</p>
    <p>Reduced contention on file systems helps improving performance and scalability</p>
  </div>
  <div class="page">
    <p>o p</p>
    <p>s/ se</p>
    <p>c</p>
    <p>#core</p>
    <p>But partitioning makes performance worse on HDD</p>
    <p>A single-partitioned HDD</p>
    <p>A 60-partitioned HDD</p>
    <p>btrfs ext4 F2FS XFS</p>
    <p>F2FS</p>
    <p>** Tested workload: DB_BENCH overwrite **</p>
  </div>
  <div class="page">
    <p>o p</p>
    <p>s/ se</p>
    <p>c</p>
    <p>#core</p>
    <p>But partitioning makes performance worse on HDD</p>
    <p>A single-partitioned HDD</p>
    <p>A 60-partitioned HDD</p>
    <p>btrfs ext4 F2FS XFS</p>
    <p>F2FS</p>
    <p>** Tested workload: DB_BENCH overwrite **</p>
    <p>But reduced spatial locality degrades performance  Medium-specific characteristics (e.g., spatial locality)</p>
    <p>should be considered</p>
  </div>
  <div class="page">
    <p>Related work</p>
    <p>Scaling operating systems  Mostly use memory file system to opt out the effect of I/O</p>
    <p>operations</p>
    <p>Scaling file systems  Scalable file system journaling</p>
    <p>ScaleFS [MIT:MSThesis'14]  SpanFS [ATC'15]</p>
    <p>Parallel log-structured writing on NVRAM  NOVA [FAST'16]</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Comprehensive analysis of manycore scalability of five widely-used file systems using FxMark</p>
    <p>Manycore scalability should be of utmost importance in file system design</p>
    <p>New challenges in scalable file system design  Minimizing contention, scalable consistency guarantee, spatial</p>
    <p>locality, etc.</p>
    <p>FxMark is open source  https://github.com/sslab-gatech/fxmark</p>
  </div>
</Presentation>
