<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Internet Path-Quality Monitoring inInternet Path-Quality Monitoring in the Presence of Adversaries</p>
    <p>Sharon Goldberg D id Xi E T B B k J if R f d</p>
    <p>Princeton UniversityPrinceton University Penn State University CS SeminarNovember 29, 2007</p>
    <p>David Xiao, Eran Tromer, Boaz Barak, Jennifer Rexford</p>
  </div>
  <div class="page">
    <p>Applications of path-quality monitoring</p>
    <p>Alice Bob</p>
    <p>Applications:pp Traffic Engineering,</p>
    <p>Load balancing, Security</p>
    <p>node = router or Autonomous</p>
    <p>Flexible Routing Routers need tools to detect unacceptably high packet loss rates for</p>
    <p>System (AS)</p>
    <p>Flexible Routing  Source routing: (Alice chooses nodes on path to Bob)  Intelligent route control: (Switch paths based on performance)</p>
    <p>O l ti Overlay routing</p>
    <p>SLA compliance monitoring  Necessary to drive innovation! [LC06]</p>
  </div>
  <div class="page">
    <p>To help protect y our priv acy , PowerPoint prev ented this external picture from being automatically downloaded. To download and display this picture, click Options in the Message Bar, and then click Enable external content.</p>
    <p>Does packet loss rate exceed 1%?</p>
    <p>The presence of adversaries Does packet loss rate exceed 1%?</p>
    <p>Alice Bob</p>
    <p>E ping</p>
    <p>ack ping</p>
    <p>ack</p>
    <p>Eve</p>
    <p>Knows monitoring protocol</p>
    <p>Covers active attack:  Corrupted router  BotnetKnows monitoring protocol</p>
    <p>Wants to hide packet loss from Alice  Greedy ISP And all benign failures.</p>
    <p>Today, we use approaches that are not robust to active attack or</p>
    <p>Can we have both?</p>
    <p>abnormal failures (e.g. ping, traceroute, trajectory sampling).</p>
    <p>Strong threat model --- Eve can add/drop/delay/modify packets Efficient protocols for high-speed routers 3/19</p>
  </div>
  <div class="page">
    <p>Design Goals</p>
    <p>S ( Q )Secure path quality monitoring (PQM)  Alice alarms if end-end packet loss rate exceeds ,</p>
    <p>regardless of Eves behavior  Alice will not alarm if packet loss rate is less than</p>
    <p>Strong threat model Eve occupies node(s) on the path</p>
    <p>Alice will not alarm if packet loss rate is less than</p>
    <p>Eve occupies node(s) on the path  Knows the measurement protocol  Can add, drop, delay, modify packets  Can treat measurement packets preferentially</p>
    <p>Only detect loss, not prevent loss!</p>
    <p>Can treat measurement packets preferentially  Can collude with other nodes</p>
    <p>Efficient protocols for high speed routersEfficient protocols for high-speed routers  Limited storage, computation, communication overhead  Avoid marking or encrypting regular traffic</p>
    <p>(Yes) Can we have both?</p>
  </div>
  <div class="page">
    <p>This talk</p>
    <p>1. Overview</p>
  </div>
  <div class="page">
    <p>Background: Secure Path Quality Monitoring (PQM)</p>
    <p>BobAlice d</p>
    <p>d d</p>
    <p>d ackMonitors all</p>
    <p>traffic from interface</p>
    <p>Trivial PQM: Bob acks each packet.</p>
    <p>Alice stores each packet. 100% communication overhead. Not practical for network layer!</p>
    <p>Alice detects loss if a packet is not ackd</p>
    <p>Unforgability: Eve cant forge ack to a dropped packet</p>
  </div>
  <div class="page">
    <p>Secure Sketch PQM: Overview</p>
    <p>BobAlice d</p>
    <p>d d</p>
    <p>d</p>
    <p>Applies techniques from L2-norm estimation: [AMS96] [Ach01] [CCF2004] [TZ2004]</p>
    <p>Sketch PQM: Alice and Bob keep short sketch</p>
    <p>Applies techniques from L2 norm estimation: [AMS96] [Ach01] [CCF2004] [TZ2004]</p>
    <p>Each maps info for T data packets to sketch Bob sends Alice his sketch in a report Alice compares sketches, decides if loss rate &gt;</p>
    <p>Unforgability: Eve cant forge report</p>
    <p>Alice compares sketches, decides if loss rate &gt;</p>
    <p>Unpredictable Mapping: Eve cant mask packet drops with packet adds Coordinated Mapping: Alice and Bob identically map packets to sketch</p>
  </div>
  <div class="page">
    <p>Secure Sketch PQM: Security (1) Use keyed cryptographic hash function fk : packet [N] x {+1,-1}</p>
    <p>d d</p>
    <p>Use eyed c yptog ap c as u ct o k pac et [ ] { , }</p>
    <p>fk(d) = (3,+1) fk(d) = (3,+1)</p>
    <p>BobAlice d</p>
    <p>d d</p>
    <p>d +1 +1</p>
    <p>Repeat for T packets 7 9 -1 4 -12 1 14 -62 9 -9 4 -12 5 14 -6</p>
    <p>report We can assume that the T packets Alice sends are unique.</p>
    <p>Unforgability: Eve cant forge reportUnforgability: Reports are cryptographically authenticated</p>
    <p>are unique.</p>
    <p>Unpredictable Mapping: Eve cant mask packet drops with packet adds Coordinated Mapping: Alice and Bob identically map packets to sketch</p>
    <p>Unpredictable Mapping: Eve cannot predict output of hash without the key Coordinated Mapping: Alice and Bob have the same hash function + key</p>
  </div>
  <div class="page">
    <p>Secure Sketch PQM: Security (2) What happens if a packet is dropped and replaced with a new packet?</p>
    <p>d d</p>
    <p>fk(d) = (3,+1) fk(d) = (7,-1)</p>
    <p>at appe s a pac et s d opped a d ep aced t a e pac et</p>
    <p>BobAlice</p>
    <p>d d</p>
    <p>d +1 -1d'</p>
    <p>d</p>
    <p>C t hi h h th t h d t iti i k t h</p>
    <p>A B</p>
    <p>Cryptographic hash ensures that w.h.p d maps to new position in sketch, regardless of what Eve does</p>
    <p>Use the difference sketch X = A-B to detect packet drops + packet adds</p>
    <p>Unforgability: Reports are cryptographically authenticated</p>
    <p>Unpredictable Mapping: Eve cannot predict output of hash without the key Coordinated Mapping: Alice and Bob have the same hash function + key</p>
  </div>
  <div class="page">
    <p>S ( Q )</p>
    <p>Secure Sketch PQM: Decision Rule</p>
    <p>To decide between packet loss rate &lt;  and &gt; :Secure path quality monitoring (PQM)  Alice alarms if end-end packet loss rate exceeds ,</p>
    <p>regardless of Eves behavior  Alice will not alarm if packet loss rate is less than</p>
    <p>To decide between packet loss rate &lt;  and &gt; :  Take the difference sketch X = A-B  Compute the estimator Xi2</p>
    <p>R i l iff X 2 2  / ( ) Alice will not alarm if packet loss rate is less than  Raise an alarm iff Xi2 &gt; 2 / ( + )</p>
    <p>We can show that E [ Xi2 ]  nd+ na # dropped pktsEquality when</p>
    <p>adds and drops i kt</p>
    <p>Histogram of Estimator. =1%, =0.5%, T=106 packets, N=300 bins in sketch . # added pktsare unique pkts</p>
    <p>Decision threshold</p>
    <p>2    %%% % % %</p>
    <p>Normalized Estimator Xi2/T</p>
  </div>
  <div class="page">
    <p>Secure Sketch PQM: Sample Parameters (1) Our result uses the facts thatOur result uses the facts that 1. Alice sends unique packets during interval. 2. The mapping function uses hash that is</p>
    <p>indistinguishable from a random function.</p>
    <p>Thm (Simplified): Alice can use a secure sketch PQM protocol to decide between cases where packet loss rate is &lt;  and &gt; ,</p>
    <p>ith 99% b bilit if th k t h hwith 99% success probability if the sketch has N &gt; 25.5 (1/25 - (-)/(+) )-2 bins</p>
    <p>andand</p>
    <p>T &gt; 867 N (ln N + 9.21) /  packets</p>
    <p>are monitored per interval.p</p>
    <p>If  = 0.5%, =1% then for T=109 we need N=300 bins.,</p>
  </div>
  <div class="page">
    <p>Secure Sketch PQM: Sample Parameters (2) From the Thm if  = 0 5% =1% then for T=109 we need N=300 binsFrom the Thm, if  = 0.5%, =1% then for T=109 we need N=300 bins.</p>
    <p>Numerical experiments suggest that for T=106 or less, N=150 bins is enough.</p>
    <p>N, number of bins. T=106 ,  =1%, =0.5%</p>
    <p>T Sketch Size 106 170 bytes 107 200 bytes</p>
    <p>If N=150 10 200 bytes 108 235 bytes 109 270 bytes 12/19</p>
  </div>
  <div class="page">
    <p>Secure Sketch PQM Summary 1. Low storage overhead</p>
    <p>T Sketch Size 2. Low communication overhead</p>
    <p>1 report packet / T regular packets  Report contains sketch and authenticator</p>
    <p>T Sketch Size 106 170 bytes 107 200 bytes</p>
    <p>Protocol is backward compatible.  Can be implemented in a monitor off the routers critical path</p>
    <p>Latency doesnt matter Parallelizable Latency doesnt matter, Parallelizable</p>
    <p>Thm [GXTBR08]: Any secure PQM protocol robust to adversarial nodes on the path that can add/drop packets, needs a key infrastructure and crypto.</p>
  </div>
  <div class="page">
    <p>This talk</p>
    <p>1. Overview</p>
  </div>
  <div class="page">
    <p>Fault Localization (FL) Alice Bob</p>
    <p>We assume: 1. Alice knows identity of nodes on path. 2. Paths are symmetric. 3 Eve occupies node(s) on the path and can add drop modify packets3. Eve occupies node(s) on the path, and can add, drop, modify packets. 4. Alice doesnt know where Eve is.</p>
    <p>Secure fault localization (FL): If the packet loss rate on a link exceeds , Alice outputs that link</p>
    <p>(or a link adjacent to Eve) regardless of Eves behavior Alice will not alarm if packet loss rate on the path is less than</p>
    <p>Thm [BGX08]: Any secure FL protocol robust to adversarial nodes on the path that can add and drop packets, requires keys and crypto at each node.</p>
  </div>
  <div class="page">
    <p>Composition of Sketch PQM to FL (1) k1, k2, k3, k4, kB k1 k2 k3 k4 kB</p>
    <p>Alice Bob</p>
    <p>Secure fault localization (FL): If the packet loss rate on a link exceeds , Alice outputs that link</p>
    <p>(or a link adjacent to Eve) regardless of Eves behavior Alice will not alarm if packet loss rate on the path is less than</p>
    <p>Composition Overview</p>
    <p>authenticated with an onion message authentication code. 16/19</p>
  </div>
  <div class="page">
    <p>Composition of Sketch PQM to FL (2) k1, k2, k3, k4, kB k1 k2 k3 k4 kB</p>
    <p>Alice Bob</p>
    <p>[ d k t h ][send sketches]Alice</p>
    <p>B=[ sketchB ]B 4=[ sketch4, B ]4</p>
    <p>3=[ sketch3, 4 ]3 [ k h ]2=[ sketch2, 3 ]2</p>
    <p>1=[ sketch1, 2 ]1</p>
    <p>Onionizing the reports prevents Eve selectively dropping reports for an innocent node. 17/19</p>
  </div>
  <div class="page">
    <p>Summary of Contributions [G., Xiao., Tromer, Barak, Rexford, Path-Quality Monitoring in the Presence of Adversaries, SIGMETRICS 2008.]</p>
    <p>[Barak, G., Xiao., Protocols and Lower Bounds for Fault Localization in the Internet, EUROCRYPT 2008.]</p>
    <p>New bound on parameters. Uses uniqueness of traffic.</p>
    <p>b) Secure sampling protocol for symmetric + client server settingsb) Secure sampling protocol for symmetric + client-server settings  Measure delay as well as loss</p>
  </div>
  <div class="page">
    <p>Conclusions What security primitives can we have in future networks ?What security primitives can we have in future networks ?</p>
    <p>What is the right balance between strength of threat model g g and efficiency of scheme ?</p>
    <p>We showed here that: 1. Efficient PQM is possible for very strong threat model 2. Secure FL requires keys and crypto at each node, q y yp ,</p>
    <p>Hard to get full participation in Internet May be better for highly-secure networks / special traffic</p>
    <p>And that</p>
    <p>We can use theoretical cryptography to inform what we do in practice!</p>
  </div>
  <div class="page">
    <p>Thanks!</p>
    <p>[G., Xiao., Tromer, Barak, Rexford, Path-Quality Monitoring in the Presence of Adversaries, in submission.]</p>
    <p>G  f[Barak, G., Xiao., Protocols and Lower Bounds for Fault Localization in the Internet, in submission.]</p>
    <p>Princeton University</p>
    <p>www.princeton.edu/~goldbe</p>
  </div>
  <div class="page">
    <p>Secure PQM needs keys Our protocol requires a key infrastructure between Alice and Bob.</p>
    <p>Thm: Any secure PQM protocol that is robust adversaries on the path that can add and drop packets requires a key infrastructure.</p>
    <p>Ou p otoco equ es a ey ast uctu e bet ee ce a d ob</p>
    <p>path that can add and drop packets requires a key infrastructure.</p>
    <p>BobAlice</p>
    <p>Proof: (In the contrapositive) Assume Alice and Bob do not have a shared key</p>
    <p>Not necessarily pairwise keys!</p>
    <p>Assume Alice and Bob do not have a shared key  All the packets that Alice sends to Bob pass thru Eve  Then Eve knows everything Bob knows</p>
    <p>E d ll k t Eve drops all packets  Eve impersonates Bobs reverse path messages (e.g. report)  Alice wont detect packet loss, so Eve breaks security. 21/22</p>
  </div>
  <div class="page">
    <p>Secure PQM needs crypto (1) Our protocol requires a key infrastructure between Alice and Bob.</p>
    <p>Thm: Any secure PQM protocol that is robust adversaries on the path that can add/drop packets must invoke cryptographic operations.</p>
    <p>Ou p otoco equ es a ey ast uctu e bet ee ce a d ob</p>
    <p>Proof: (By reduction to keyed identification schemes (KIS) )</p>
    <p>that can add/drop packets must invoke cryptographic operations.</p>
    <p>kk Challenge</p>
    <p>B bAlice Response: Im really Bob</p>
    <p>BobAlice p y</p>
    <p>No alarm</p>
  </div>
  <div class="page">
    <p>Secure PQM needs crypto (2) Our protocol requires a key infrastructure between Alice and Bob.</p>
    <p>Thm: Any secure PQM protocol that is robust adversaries on the path that can add/drop packets must invoke cryptographic operations.</p>
    <p>Ou p otoco equ es a ey ast uctu e bet ee ce a d ob</p>
    <p>Proof: (By reduction to keyed identification schemes (KIS) )</p>
    <p>that can add/drop packets must invoke cryptographic operations.</p>
    <p>kk Challenge</p>
    <p>B bAlice Response: Trust me, Im Bob EveBobAlice</p>
    <p>alarm</p>
    <p>Eve</p>
  </div>
  <div class="page">
    <p>Secure PQM needs crypto (3) Our protocol requires a key infrastructure between Alice and Bob.</p>
    <p>Thm: Any secure PQM protocol that is robust adversaries on the path that can add/drop packets must invoke cryptographic operations.</p>
    <p>Ou p otoco equ es a ey ast uctu e bet ee ce a d ob</p>
    <p>Proof: (By reduction to keyed identification schemes (KIS) )</p>
    <p>that can add/drop packets must invoke cryptographic operations.</p>
    <p>kk</p>
    <p>B bAlice BobAlice</p>
    <p>Challenge: Traffic that Alice sends on the forward path Response: Reverse path messages i e report</p>
    <p>BobAlice</p>
    <p>KIS are at least as computationally complex asResponse: Reverse path messages, i.e. report. Alarm if report is invalid.</p>
    <p>KIS are at least as computationally complex as symmetric cryptographic primitives (e.g. encryption, MAC)</p>
    <p>Secure PQM needs crypto 24/22</p>
  </div>
  <div class="page">
    <p>To help protect y our priv acy , PowerPoint prev ented this external picture from being automatically downloaded. To download and display this picture, click Options in the Message Bar, and then click Enable external content.</p>
    <p>Theorem: Each node needs a shared secret with Alice</p>
    <p>Fault Localization needs keys at each node Theorem: Each node needs a shared secret with Alice</p>
    <p>Proof: Suppose node i does not a share secret with any upstream node:</p>
    <p>Alice BobKeyless</p>
    <p>Case (a): Node i+1 is unreachable</p>
    <p>Case (a) and case (b) are indistinguishable to Alice</p>
    <p>Case (b): Eve drops packets and impersonates keyless node i</p>
    <p>( ) ( ) g</p>
    <p>In case (b) Eve drops packets while making innocent link (i, i+1) look guilty.</p>
    <p>The FL protocol cannot be secure. 25/22</p>
  </div>
  <div class="page">
    <p>To help protect y our priv acy , PowerPoint prev ented this external picture from being automatically downloaded. To download and display this picture, click Options in the Message Bar, and then click Enable external content.</p>
    <p>Theorem: Each node i needs to perform cryptographic operations</p>
    <p>Fault localization needs crypto at each node Theorem: Each node i needs to perform cryptographic operations</p>
    <p>Proof: Suppose node i has a shares key ki with Alice but does not do crypto.</p>
    <p>Eve impersonates node i . he needs to learn ki !</p>
    <p>Case (b): Eve drops packets and impersonates crypto-less node i</p>
    <p>Since i doesnt do crypto, Eve can learn ki by observing case (a), which happens with constant probability due to congestionhappens with constant probability due to congestion</p>
    <p>Then Eve can impersonate node i in case (b) and FL protocol is not secure!</p>
    <p>Case (a): Node i+1 is unreachable due to congestion</p>
  </div>
</Presentation>
