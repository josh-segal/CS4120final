<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Topology Switching for Data Center Networks</p>
    <p>Kevin Webb, Alex Snoeren, Ken Yocum UC San Diego Computer Science</p>
    <p>March 29, 2011 Hot-ICE 2011</p>
  </div>
  <div class="page">
    <p>Data Center Networks  Hosting myriad of applications:</p>
    <p>Big data: MapReduce  Web services  HPC: MPI  DB, Storage  Many others!</p>
    <p>Core</p>
    <p>Aggregation</p>
    <p>Edge</p>
  </div>
  <div class="page">
    <p>Data Center Networks  DC engineers adding links</p>
    <p>Applications need other important characteristics!</p>
    <p>Core</p>
    <p>Aggregation</p>
    <p>Edge</p>
  </div>
  <div class="page">
    <p>Inter-application Interference</p>
    <p>Experiment  All to all MPI and Hadoop data processing  Openflow ECMP network  Interference &gt; 20% latency increase</p>
  </div>
  <div class="page">
    <p>Topology Switching Overview  Applications request specific characteristics</p>
    <p>Bandwidth, Redundancy, Latency, Isolation, others</p>
    <p>Idea: Create routes based on applications needs  Per application instance  Per application phase: Hadoop shuffle vs. HDFS writes</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>Aggregation</p>
    <p>Edge</p>
    <p>Switch Host</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>Aggregation</p>
    <p>Edge</p>
    <p>M M M S S S S M</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>Core</p>
    <p>Aggregation</p>
    <p>Edge</p>
    <p>M M M M S S S S</p>
    <p>Map Reduce Task (Needs throughput)</p>
    <p>Scientific Task (MPI - Needs isolation for consistency)</p>
    <p>M</p>
    <p>S</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>M M M M S S S S</p>
    <p>M M M M S S S S</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>Scientific Network Exclusive Free from interference</p>
    <p>Map Reduce Network Multiple paths - high capacity</p>
  </div>
  <div class="page">
    <p>Challenges  Reconfigurable network infrastructure</p>
    <p>Frequent allocations  Flexible routing rules  Openflow</p>
    <p>Allocation algorithms  Throughput, Reliability, Isolation, etc.  Evaluation metrics</p>
    <p>Cooperative online allocation of network resources  Limit conflict between allocations  Cant take too long</p>
  </div>
  <div class="page">
    <p>Abstraction  Applications submit routing tasks:</p>
    <p>Set of communicating end hosts  Logical topology: mesh, ring, tree, custom</p>
    <p>A</p>
    <p>B C</p>
    <p>D E</p>
  </div>
  <div class="page">
    <p>Abstraction  Routing tasks utilize an allocator:</p>
    <p>Quantifiable metric  Guides allocation, indicates success</p>
    <p>Allocation algorithm  Chooses physical paths</p>
    <p>Graph annotation &amp; filtering  Record allocation results to reduce conflict</p>
    <p>A</p>
    <p>B C</p>
    <p>D E</p>
    <p># Tasks # Routes</p>
  </div>
  <div class="page">
    <p>Architecture</p>
    <p>Allocator</p>
    <p>Topology Server</p>
    <p>Data Center Network</p>
    <p>Task hosts: A, B, C, D Logical topology: Mesh</p>
    <p>(Filtered) network view</p>
    <p>Logical to physical path mapping</p>
    <p>Global network view</p>
    <p>Install task routes &amp; rules</p>
    <p>A</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>B C D</p>
  </div>
  <div class="page">
    <p>Three Allocators  Bandwidth</p>
    <p>Finds least loaded paths to maximize capacity</p>
    <p>Resiliency  Allocates N disjoint paths between every host pair</p>
    <p>K-Isolation  Chooses paths with at most k other tasks  Reduces inter-task interference, more consistent</p>
  </div>
  <div class="page">
    <p>K-Isolation  Goal: Dont share links with more than K other tasks</p>
    <p>Core</p>
    <p>Aggregation</p>
    <p>Edge</p>
  </div>
  <div class="page">
    <p>K-Isolation  Goal: Dont share links with any other tasks</p>
    <p>Core</p>
    <p>Aggregation</p>
    <p>Edge</p>
    <p>? ?</p>
    <p>?</p>
    <p>? ?</p>
    <p>? ? ? ?</p>
    <p>?</p>
    <p>Install routing rules! Filter from future allocations!</p>
  </div>
  <div class="page">
    <p>Resiliency  Goal: Find N disjoint routes between end host pairs</p>
    <p>Core</p>
    <p>Aggregation</p>
    <p>Edge</p>
  </div>
  <div class="page">
    <p>Resiliency  Goal: Find 2 disjoint routes between end host pairs</p>
    <p>Core</p>
    <p>Aggregation</p>
    <p>Edge</p>
    <p>S D</p>
    <p>Record host pair routes Update remaining capacity</p>
  </div>
  <div class="page">
    <p>Resiliency  Repeat for remaining source/destination pairs</p>
    <p>Core</p>
    <p>Aggregation</p>
    <p>Edge</p>
    <p>S D</p>
  </div>
  <div class="page">
    <p>Bandwidth  Goal: Maximize bisection bandwidth between hosts</p>
    <p>Core</p>
    <p>Aggregation</p>
    <p>Edge</p>
  </div>
  <div class="page">
    <p>Bandwidth  Build max spanning tree over remaining capacity</p>
    <p>Core</p>
    <p>Aggregation</p>
    <p>Edge</p>
    <p>Install routes! Update remaining capacity</p>
  </div>
  <div class="page">
    <p>Simulations  Does it work?</p>
    <p>Comparison against state of the art:  Optimal equal-cost paths for Resiliency/Bandwidth tasks  Spanning tree VLAN for isolation tasks</p>
    <p>Two distinct workloads:  Balanced - 6 tasks: 2 isolation, 2 resilience, 2 bandwidth  Stressed - 16 tasks: 7 isolation, 5 resilience, 4 bandwidth</p>
  </div>
  <div class="page">
    <p>r2b</p>
    <p>Results</p>
    <p>Average bisection bandwidth for all host pairs. Resiliency</p>
    <p>Number of disjoint paths between hosts.</p>
    <p>Isolation metric: [0, 1]</p>
    <p>Value indicates average path isolation.</p>
  </div>
  <div class="page">
    <p>Results 2i</p>
    <p>-2 r</p>
    <p>r4b</p>
  </div>
  <div class="page">
    <p>Current Status  Simulations promising!</p>
    <p>Ongoing work:  Quantifying interference  Refining allocation strategies</p>
    <p>Building architecture  Openflow-enabled switches  Routing rule instantiation</p>
    <p>Limited TCAM size / speed</p>
  </div>
  <div class="page">
    <p>Thanks!  Questions?</p>
  </div>
</Presentation>
