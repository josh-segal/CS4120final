<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Benjamin Davis Hao Chen</p>
    <p>University of California, Davis</p>
  </div>
  <div class="page">
    <p>Web services are highly attractive targets  Over 60% of attacks target Web applications  Over 80% of vulnerabilities found are in Web</p>
    <p>applications</p>
    <p>(From SANS 2009 Top Cyber Security Risks)</p>
  </div>
  <div class="page">
    <p>&lt;h1&gt;Latest Comment&lt;/h1&gt; &lt;p&gt;</p>
    <p>&lt;/p&gt;</p>
    <p>{User Content}</p>
  </div>
  <div class="page">
    <p>&lt;h1&gt;Latest Comment&lt;/h1&gt; &lt;p&gt;</p>
    <p>This is &lt;b&gt;great!&lt;/b&gt; &lt;/p&gt;</p>
  </div>
  <div class="page">
    <p>&lt;h1&gt;Latest Comment&lt;/h1&gt; &lt;p&gt;</p>
    <p>&lt;script&gt; steal(document.cookie);</p>
    <p>&lt;/script&gt; &lt;/p&gt;</p>
  </div>
  <div class="page">
    <p>Application</p>
    <p>?</p>
    <p>?</p>
    <p>?</p>
    <p>? ?</p>
  </div>
  <div class="page">
    <p>Information Flow Tracking System</p>
    <p>Application</p>
    <p>Input !!</p>
  </div>
  <div class="page">
    <p>Information Flow Tracking System</p>
    <p>Application</p>
    <p>!!</p>
  </div>
  <div class="page">
    <p>Information Flow Tracking System</p>
    <p>Application</p>
    <p>!!</p>
    <p>!!</p>
  </div>
  <div class="page">
    <p>Information Flow Tracking System</p>
    <p>Application</p>
    <p>!! Output !!</p>
  </div>
  <div class="page">
    <p>Information Flow Tracking System</p>
    <p>Application</p>
    <p>!! !!</p>
    <p>Output X</p>
  </div>
  <div class="page">
    <p>Language-based taint mode  Perl  Ruby</p>
    <p>Adding support to language structures  Java [Chin, Wagner 09]  PHP [Venema]</p>
  </div>
  <div class="page">
    <p>Information Flow Tracking System</p>
    <p>Web Application</p>
    <p>Output</p>
    <p>Input</p>
    <p>Database Interface</p>
    <p>Database</p>
  </div>
  <div class="page">
    <p>Information Flow Tracking System</p>
    <p>Web Application</p>
    <p>Output</p>
    <p>Input</p>
    <p>Database Interface</p>
    <p>Database</p>
    <p>!!</p>
  </div>
  <div class="page">
    <p>Information Flow Tracking System</p>
    <p>Web Application</p>
    <p>Output</p>
    <p>Input</p>
    <p>Database Interface</p>
    <p>Database</p>
    <p>!!</p>
  </div>
  <div class="page">
    <p>Information Flow Tracking System</p>
    <p>Web Application</p>
    <p>Output</p>
    <p>Input</p>
    <p>Database Interface</p>
    <p>Database</p>
    <p>!!</p>
  </div>
  <div class="page">
    <p>Information Flow Tracking System</p>
    <p>Web Application</p>
    <p>Output</p>
    <p>Input</p>
    <p>Database Interface</p>
    <p>Database</p>
    <p>!!</p>
  </div>
  <div class="page">
    <p>Information Flow Tracking System</p>
    <p>Web Application</p>
    <p>Output</p>
    <p>Input</p>
    <p>Database Interface</p>
    <p>Database</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>Information Flow Tracking System</p>
    <p>Web Application</p>
    <p>Output</p>
    <p>Input</p>
    <p>Database Interface</p>
    <p>Database</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>Information Flow Tracking System</p>
    <p>Web Application</p>
    <p>Output</p>
    <p>Input</p>
    <p>Database Interface</p>
    <p>Database</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>What if you have multiple applications?  How to treat data from the database?  All tainted -&gt; false positives  All untainted -&gt; false negatives  Require manual annotation?  Application-specific decisions?</p>
  </div>
  <div class="page">
    <p>Taint tracking through the entire system  [Asbestos, 05]  [HiStar, 06]</p>
    <p>Implemented in  Hardware  OS  VMM/emulator</p>
  </div>
  <div class="page">
    <p>Web Application</p>
    <p>Output</p>
    <p>Input</p>
    <p>Database Interface</p>
    <p>Database</p>
    <p>!!</p>
  </div>
  <div class="page">
    <p>Web Application</p>
    <p>Output</p>
    <p>Input</p>
    <p>Database Interface</p>
    <p>Database</p>
  </div>
  <div class="page">
    <p>Web Application</p>
    <p>Output</p>
    <p>Input</p>
    <p>Database Interface</p>
    <p>Database</p>
    <p>!!</p>
  </div>
  <div class="page">
    <p>Web Application</p>
    <p>Output</p>
    <p>Input</p>
    <p>Database Interface</p>
    <p>Database</p>
  </div>
  <div class="page">
    <p>Low level/fine granularity  Hardware mechanism [Suh, Lee, Devadas 04]  Minos [Crandall, Chong, 04]</p>
    <p>Lacks high-level database semantics  Aggregate functions  Comparisons, SELECT DISTINCT</p>
  </div>
  <div class="page">
    <p>End-to-end taint tracking  Across Web applications and databases</p>
    <p>Leverage existing single-application information flow tracking engines</p>
    <p>Compatible with existing Web services  Require no changes to Web applications</p>
    <p>Taint propagation through database functions</p>
  </div>
  <div class="page">
    <p>DB Interface</p>
    <p>Web Application</p>
    <p>Database Engine</p>
    <p>SQL</p>
  </div>
  <div class="page">
    <p>DB Interface</p>
    <p>Web Application</p>
    <p>Database Engine</p>
    <p>SQL</p>
    <p>Single-application information flow</p>
    <p>DBTaint</p>
  </div>
  <div class="page">
    <p>Store taint data in database composite types  Tuple of form: (&lt;value&gt;, &lt;taint_value&gt;)</p>
    <p>Store/retrieve taint values via SQL  No additional mechanisms needed in the database  No change to underlying database data structures</p>
    <p>Id Status</p>
    <p>(19, 0) (closed, 1)</p>
    <p>(27, 0) (open, 1)</p>
    <p>(32, 0) (pending, 1)</p>
    <p>Id Status</p>
    <p>Before DBTaint With DBTaint</p>
  </div>
  <div class="page">
    <p>Create functions that operate on composite types  Comparison operators (=, !=, &lt;, )  Arithmetic operations (+, -, )  Text operations (upper, lower, )  Aggregate functions (MAX, MIN, SUM, )</p>
    <p>Functions implemented in SQL  CREATE FUNCTION  CREATE OPERATOR  CREATE AGGREGATE</p>
  </div>
  <div class="page">
    <p>Arithmetic operations</p>
    <p>(4, 0) + (5, 1) = (9, ?)</p>
  </div>
  <div class="page">
    <p>Arithmetic operations</p>
    <p>(4, 0) + (5, 1) = (9, ?)</p>
    <p>untainted tainted</p>
  </div>
  <div class="page">
    <p>Arithmetic operations</p>
    <p>(4, 0) + (5, 1) = (9, 1)</p>
    <p>untainted tainted tainted</p>
  </div>
  <div class="page">
    <p>MAX</p>
    <p>{(2, 0), (3, 1), (5, 0)} = (5, ?)</p>
  </div>
  <div class="page">
    <p>MAX</p>
    <p>{(2, 0), (3, 1), (5, 0)} = (5, ?)</p>
    <p>untainted tainted untainted</p>
  </div>
  <div class="page">
    <p>Untainted: trusted source  Web application defaults  Values generated entirely by the Web application</p>
    <p>Tainted: from untrusted source, or unknown  User input</p>
    <p>Explicit information flow  Database returns untainted value only if</p>
    <p>database has received that value untainted</p>
  </div>
  <div class="page">
    <p>MAX</p>
    <p>{(2, 0), (3, 1), (5, 0)} = (5, ?)</p>
    <p>untainted tainted untainted</p>
  </div>
  <div class="page">
    <p>MAX</p>
    <p>{(2, 0), (3, 1), (5, 0)} = (5, 0)</p>
    <p>untainted tainted untainted untainted</p>
  </div>
  <div class="page">
    <p>Equality</p>
    <p>(3, 0) = (3, 1)</p>
    <p>untainted tainted</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>Equality</p>
  </div>
  <div class="page">
    <p>Equality</p>
    <p>(3, 0) == (3, 1)</p>
    <p>Adopt notion of backwards-compatibility [Chin, Wagner 09]</p>
    <p>untainted tainted</p>
  </div>
  <div class="page">
    <p>MAX</p>
    <p>{(5, 1), (5, 0)} = (5, ?)</p>
    <p>untainted tainted</p>
  </div>
  <div class="page">
    <p>MAX</p>
    <p>{5, 5} = 5</p>
  </div>
  <div class="page">
    <p>MAX</p>
    <p>{5, 5} = 5</p>
    <p>OR</p>
  </div>
  <div class="page">
    <p>MAX</p>
    <p>{(5, 1), (5, 0)} = (5, ?)</p>
    <p>OR</p>
  </div>
  <div class="page">
    <p>MAX</p>
    <p>{(5, 1), (5, 0)} = (5, 0)</p>
    <p>When possible, prefer to return untainted values</p>
    <p>untainted tainted untainted</p>
  </div>
  <div class="page">
    <p>WebApp</p>
    <p>DB Interface Database Table</p>
    <p>Id Status</p>
  </div>
  <div class="page">
    <p>WebApp</p>
    <p>DB Interface Database Table</p>
    <p>x = DB.get(id=27) Id Status</p>
  </div>
  <div class="page">
    <p>WebApp</p>
    <p>DB Interface Database Table</p>
    <p>x = DB.get(id=27) Id Status</p>
  </div>
  <div class="page">
    <p>WebApp</p>
    <p>DB Interface Database Table</p>
    <p>x = DB.get(id=27) Id Status</p>
  </div>
  <div class="page">
    <p>WebApp</p>
    <p>DB Interface Database Table</p>
    <p>x = open Id Status</p>
  </div>
  <div class="page">
    <p>WebApp</p>
    <p>DB Interface Database Table</p>
    <p>Id Status</p>
    <p>(19, 0) (closed, 1)</p>
    <p>(27, 0) (open, 1)</p>
    <p>(32, 0) (pending, 1)</p>
    <p>DBTaint</p>
  </div>
  <div class="page">
    <p>WebApp</p>
    <p>Database Table</p>
    <p>Id Status</p>
    <p>(19, 0) (closed, 1)</p>
    <p>(27, 0) (open, 1)</p>
    <p>(32, 0) (pending, 1)</p>
    <p>x = DB.get(id=27)</p>
    <p>DB Interface</p>
    <p>DBTaint</p>
  </div>
  <div class="page">
    <p>WebApp</p>
    <p>Database Table</p>
    <p>Rewritten query Id Status</p>
    <p>(19, 0) (closed, 1)</p>
    <p>(27, 0) (open, 1)</p>
    <p>(32, 0) (pending, 1)</p>
    <p>DB Interface</p>
    <p>DBTaint</p>
  </div>
  <div class="page">
    <p>WebApp</p>
    <p>Database Table</p>
    <p>Result tuples Id Status</p>
    <p>(19, 0) (closed, 1)</p>
    <p>(27, 0) (open, 1)</p>
    <p>(32, 0) (pending, 1)</p>
    <p>DB Interface</p>
    <p>DBTaint</p>
  </div>
  <div class="page">
    <p>WebApp</p>
    <p>Database Table</p>
    <p>Id Status</p>
    <p>(19, 0) (closed, 1)</p>
    <p>(27, 0) (open, 1)</p>
    <p>(32, 0) (pending, 1)</p>
    <p>DB Interface</p>
    <p>DBTaint</p>
    <p>Collapse tuples and taint appropriately</p>
  </div>
  <div class="page">
    <p>WebApp</p>
    <p>Database Table</p>
    <p>x = open // x is tainted</p>
    <p>Id Status</p>
    <p>(19, 0) (closed, 1)</p>
    <p>(27, 0) (open, 1)</p>
    <p>(32, 0) (pending, 1)</p>
    <p>DB Interface</p>
    <p>DBTaint</p>
  </div>
  <div class="page">
    <p>Account for composite types in SQL queries  Collapse and taint result tuples as needed  These changes are:  Transparent to web application  High-level, portable</p>
    <p>unchanged</p>
    <p>DB DB Interface</p>
    <p>DBTaint</p>
  </div>
  <div class="page">
    <p>Parameterized queries  Prepare:  INSERT  (id, status) VALUES (?, ?)</p>
    <p>Execute  (27, open)</p>
  </div>
  <div class="page">
    <p>Parameterized queries  Prepare:  INSERT  (id, status) VALUES (?, ?)  // with DBTaint:  INSERT  (id, status) VALUES (ROW(?, ?), ROW(?, ?))</p>
  </div>
  <div class="page">
    <p>Parameterized queries  Prepare:  INSERT  (id, status) VALUES (?, ?)  // with DBTaint:  INSERT  (id, status) VALUES (ROW(?, ?), ROW(?, ?))</p>
    <p>Execute  (27, open) // 27 is untainted, open is tainted  // with DBTaint:  (27, 0, open, 1)</p>
  </div>
  <div class="page">
    <p>Prepare phase:  Queries are passed with placeholders for data</p>
    <p>Execute phase:  Data values are passed separately, independently</p>
    <p>Taint tracking engine requirement:  Only need to track taint values per variable</p>
    <p>We handle non-parameterized queries too  See paper for details</p>
  </div>
  <div class="page">
    <p>Leverage existing single-application information flow tracking systems</p>
    <p>No changes to Web application</p>
    <p>DB Interface</p>
    <p>Web Application</p>
    <p>Single-application information flow</p>
    <p>DBTaint</p>
  </div>
  <div class="page">
    <p>Languages  Perl  Java</p>
    <p>Database Interfaces  Perl DataBase Interface (DBI)  Java Database Connectivity (JDBC)</p>
    <p>Database  PostgreSQL</p>
  </div>
  <div class="page">
    <p>RT: Request Tracker (ticket tracking system)  60,000+ lines of Perl  Perl DBI (DataBase Interface) API  Perl taint mode</p>
    <p>JForum (discussion board system)  30,000+ lines of Java  Java Database Connectivity (JDBC) API  Character-level taint engine [Chin, Wagner 09]</p>
  </div>
  <div class="page">
    <p>JForum</p>
    <p>RT</p>
    <p>requests/second</p>
    <p>Original</p>
    <p>DBTaint</p>
  </div>
  <div class="page">
    <p>Cross-application information flow tracking  Persistent taint tracking  Multiple Web applications, multiple Databases</p>
  </div>
  <div class="page">
    <p>End-to-end information flow through Web services</p>
    <p>Compatible with existing Web services  Requires no changes to Web applications</p>
    <p>Taint propagation through database functions</p>
  </div>
</Presentation>
