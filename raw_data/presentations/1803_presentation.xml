<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Web Projections Learning from Contextual</p>
    <p>Subgraphs of the Web</p>
    <p>Jure Leskovec, CMU Susan Dumais, MSR Eric Horvitz, MSR</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Information retrieval traditionally considered documents as independent</p>
    <p>Web retrieval incorporates global hyperlink relationships to enhance ranking (e.g., PageRank, HITS)  Operates on the entire graph  Uses just one feature (principal eigenvector) of the</p>
    <p>graph  Our work on Web projections focuses on</p>
    <p>contextual subsets of the web graph; in-between the independent and global consideration of the documents</p>
    <p>a rich set of graph theoretic properties</p>
  </div>
  <div class="page">
    <p>Web projections</p>
    <p>Web projections: How they work?  Project a set of web pages of interest onto the</p>
    <p>web graph</p>
    <p>This creates a subgraph of the web called projection graph</p>
    <p>Use the graph-theoretic properties of the subgraph for tasks of interest</p>
    <p>Query projections  Query results give the context (set of web pages)</p>
    <p>Use characteristics of the resulting graphs for predictions about search quality and user behavior</p>
  </div>
  <div class="page">
    <p>Q</p>
    <p>Query Results Projection on the web graph</p>
    <p>Query projection graph</p>
    <p>Generate graphical features</p>
    <p>Query connection graph</p>
    <p>-- -- --- --- --- ---</p>
    <p>------ -- ----- --- - ------ ----</p>
    <p>------ ----</p>
    <p>Construct case library</p>
    <p>Predictions</p>
    <p>Query projections</p>
  </div>
  <div class="page">
    <p>Questions we explore</p>
    <p>How do query search results project onto the underlying web graph?</p>
    <p>Can we predict the quality of search results from the projection on the web graph?</p>
    <p>Can we predict users behaviors with issuing and reformulating queries?</p>
  </div>
  <div class="page">
    <p>Is this a good set of search results?</p>
  </div>
  <div class="page">
    <p>Will the user reformulate the query?</p>
  </div>
  <div class="page">
    <p>Resources and concepts  Web as a graph</p>
    <p>URL graph:  Nodes are web pages, edges are hyper-links  Data from March 2006  Graph: 22 million nodes, 355 million edges</p>
    <p>Domain graph:  Nodes are domains (cmu.edu, bbc.co.uk). Directed edge</p>
    <p>(u,v) if there exists a webpage at domain u pointing to v  Data from February 2006  Graph: 40 million nodes, 720 million edges</p>
    <p>Contextual subgraphs for queries  Projection graph  Connection graph</p>
    <p>Compute graph-theoretic features</p>
  </div>
  <div class="page">
    <p>Projection graph</p>
    <p>Example query: Subaru</p>
    <p>Project top 20 results by the search engine</p>
    <p>Number in the node denotes the search engine rank</p>
    <p>Color indicates relevancy as assigned by human:  Perfect  Excellent  Good  Fair  Poor  Irrelevant</p>
  </div>
  <div class="page">
    <p>Connection graph</p>
    <p>Projection graph is generally disconnected</p>
    <p>Find connector nodes</p>
    <p>Connector nodes are existing nodes that are not part of the original result set</p>
    <p>Ideally, we would like to introduce fewest possible nodes to make projection graph connected Connector</p>
    <p>nodesProjection nodes</p>
  </div>
  <div class="page">
    <p>Finding connector nodes  Find connector nodes is a Steiner tree problem which</p>
    <p>is NP hard  Our heuristic:</p>
    <p>Connect 2nd largest connected component via shortest path to the largest</p>
    <p>This makes a new largest component  Repeat until the graph is connected</p>
    <p>Largest component</p>
  </div>
  <div class="page">
    <p>Extracting graph features</p>
    <p>The idea  Find features that describe the</p>
    <p>structure of the graph</p>
    <p>Then use the features for machine learning</p>
    <p>Want features that describe  Connectivity of the graph</p>
    <p>Centrality of projection and connector nodes</p>
    <p>Clustering and density of the core of the graph</p>
    <p>vs.</p>
  </div>
  <div class="page">
    <p>Examples of graph features  Projection graph</p>
    <p>Number of nodes/edges  Number of connected components  Size and density of the largest</p>
    <p>connected component  Number of triads in the graph</p>
    <p>Connection graph  Number of connector nodes  Maximal connector node degree  Mean path length between</p>
    <p>projection/connector nodes  Triads on connector nodes</p>
    <p>We consider 55 features total</p>
    <p>vs.</p>
  </div>
  <div class="page">
    <p>Q</p>
    <p>Query Results Projection on the web graph</p>
    <p>Query projection graph</p>
    <p>Generate graphical features</p>
    <p>Query connection graph</p>
    <p>-- -- --- --- --- ---</p>
    <p>------ -- ----- --- - ------ ----</p>
    <p>------ ----</p>
    <p>Construct case library</p>
    <p>Predictions</p>
    <p>Experimental setup</p>
  </div>
  <div class="page">
    <p>Constructing case library for machine learning</p>
    <p>Given a task of interest</p>
    <p>Generate contextual subgraph and extract features</p>
    <p>Each graph is labeled by target outcome</p>
    <p>Learn statistical model that relates the features with the outcome</p>
    <p>Make prediction on unseen graphs</p>
  </div>
  <div class="page">
    <p>Experiments overview</p>
    <p>Given a set of search results generate projection and connection graphs and their features</p>
    <p>Predict quality of a search result set  Discriminate top20 vs. top40to60 results  Predict rating of highest rated document in the set</p>
    <p>Predict user behavior  Predict queries with high vs. low reformulation</p>
    <p>probability  Predict query transition (generalization vs.</p>
    <p>specialization)  Predict direction of the transition</p>
  </div>
  <div class="page">
    <p>Experimental details</p>
    <p>Features  55 graphical features  Note we use only graph features, no content</p>
    <p>Learning  We use probabilistic decision trees (DNet)</p>
    <p>Report classification accuracy using 10-fold cross validation</p>
    <p>Compare against 2 baselines  Marginals: Predict most common class  RankNet: use 350 traditional features (document,</p>
    <p>anchor text, and basic hyperlink features)</p>
  </div>
  <div class="page">
    <p>Search results quality</p>
    <p>Dataset:  30,000 queries  Top 20 results for each</p>
    <p>Each result is labeled by a human judge using a 6-point scale from &quot;Perfect&quot; to &quot;Bad&quot;</p>
    <p>Task:  Predict the highest rating in the set of</p>
    <p>results  6-class problem  2-class problem: Good (top 3 ratings) vs.</p>
    <p>Poor (bottom 3 ratings)</p>
  </div>
  <div class="page">
    <p>Search quality: the task</p>
    <p>Predict the rating of the top result in the set</p>
    <p>Predict Good Predict Poor</p>
  </div>
  <div class="page">
    <p>Search quality: results</p>
    <p>Predict top human rating in the set  Binary classification: Good</p>
    <p>vs. Poor</p>
    <p>10-fold cross validation classification accuracy</p>
    <p>Observations:  Web Projections outperform</p>
    <p>both baseline methods  Just projection graph already</p>
    <p>performs quite well  Projections on the URL graph</p>
    <p>perform better</p>
    <p>Attributes URL</p>
    <p>Graph Domain Graph</p>
    <p>Marginals 0.55 0.55</p>
    <p>RankNet 0.63 0.60</p>
    <p>Projection 0.80 0.64</p>
    <p>Connection 0.79 0.66</p>
    <p>Projection + Connection</p>
    <p>All 0.83 0.71</p>
  </div>
  <div class="page">
    <p>Search quality: the model</p>
    <p>The learned model shows graph properties of good result sets</p>
    <p>Good result sets have:  Search result nodes are</p>
    <p>hub nodes in the graph (have large degrees)</p>
    <p>Small connector node degrees</p>
    <p>Big connected component</p>
    <p>Few isolated nodes in projection graph</p>
    <p>Few connector nodes</p>
  </div>
  <div class="page">
    <p>Predict user behavior</p>
    <p>Dataset  Query logs for 6 weeks  35 million unique queries, 80 million total query</p>
    <p>reformulations  We only take queries that occur at least 10</p>
    <p>times  This gives us 50,000 queries and 120,000</p>
    <p>query reformulations</p>
    <p>Task  Predict whether the query is going to be</p>
    <p>reformulated</p>
  </div>
  <div class="page">
    <p>Query reformulation: the task</p>
    <p>Given a query and corresponding projection and connection graphs</p>
    <p>Predict whether query is likely to be reformulated</p>
    <p>Query not likely to be reformulated Query likely to be reformulated</p>
  </div>
  <div class="page">
    <p>Query reformulation: results</p>
    <p>Observations:  Gradual improvement</p>
    <p>as using more features  Using Connection</p>
    <p>graph features helps  URL graph gives better</p>
    <p>performance</p>
    <p>We can also predict type of reformulation (specialization vs. generalization) with 0.80 accuracy</p>
    <p>Attributes URL</p>
    <p>Graph Domain Graph</p>
    <p>Marginals 0.54 0.54</p>
    <p>Projection 0.59 0.58</p>
    <p>Connection 0.63 0.59</p>
    <p>Projection + Connection</p>
    <p>All 0.71 0.67</p>
  </div>
  <div class="page">
    <p>Query reformulation: the model</p>
    <p>Queries likely to be reformulated have:  Search result nodes</p>
    <p>have low degree</p>
    <p>Connector nodes are hubs</p>
    <p>Many connector nodes</p>
    <p>Results came from many different domains</p>
    <p>Results are sparsely knit</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>We introduced Web projections  A general approach of using context-sensitive sets</p>
    <p>of web pages to focus attention on relevant subset of the web graph</p>
    <p>And then using rich graph-theoretic features of the subgraph as input to statistical models to learn predictive models</p>
    <p>We demonstrated Web projections using search result graphs for  Predicting result set quality  Predicting user behavior when reformulating</p>
    <p>queries</p>
  </div>
  <div class="page">
    <p>Future directions</p>
    <p>Combine with content and usage features  Explore other ways to define the context</p>
    <p>E.g., web pages that user recently visited  Explore the role of connector nodes</p>
    <p>Should they be included in the result set?  Move beyond set level prediction</p>
    <p>Characterize individual nodes position in the graph  Use to enhance ranking, identify page properties</p>
    <p>Characterize web and query dynamics  Understand users search paths  Model the evolution of communities and topics</p>
  </div>
  <div class="page">
    <p>Additional material</p>
  </div>
  <div class="page">
    <p>Projection on URL &amp; Domain graph</p>
    <p>Query: encyclopedia</p>
    <p>URL graph Domain graph</p>
    <p>Domain graph projections are denser (better connected)</p>
  </div>
  <div class="page">
    <p>Projection and connection graphs</p>
    <p>Query: Yahoo</p>
    <p>Projection graph Connection graph</p>
  </div>
  <div class="page">
    <p>Good vs. Poor result set</p>
    <p>Good (top20) vs. Poor (top 40 to 60)  Query medline  Domain graph projection</p>
    <p>Good result set (top 20)</p>
    <p>Poor result set (top 40 to 60)</p>
  </div>
  <div class="page">
    <p>Good vs. Poor: the task</p>
    <p>Good (top20) vs. Poor (top 40 to 60)  Query Wisconsin  URL graph projection</p>
    <p>Good result set Poor result set</p>
  </div>
  <div class="page">
    <p>Good vs. Poor: performance</p>
    <p>Project top20 and top4060 results (ordered by human rating)</p>
    <p>Predict whether a given graph is composed from top or bottom search results</p>
    <p>Results:  Gradual increase in</p>
    <p>performance  Projections on the domain</p>
    <p>graph perform better</p>
    <p>vs.</p>
    <p>Attributes URL</p>
    <p>Graph Domain Graph</p>
    <p>Marginals 0.50 0.50</p>
    <p>RankNet 0.74 0.74</p>
    <p>Projection 0.62 0.82</p>
    <p>Connection 0.60 0.86</p>
    <p>Projection + Connection</p>
    <p>All 0.88 0.88</p>
  </div>
  <div class="page">
    <p>Good vs. Poor: the model</p>
    <p>Good result sets have:  Few isolated and</p>
    <p>dangling nodes</p>
    <p>Results are from fewer domains</p>
    <p>Poor result sets are the opposite:  Disconnected tree-like</p>
    <p>graphs with many connector nodes</p>
  </div>
  <div class="page">
    <p>Specialization vs. Generalization</p>
    <p>Given a query transition predict whether it is:  Specialization (words were added)</p>
    <p>Generalization (words were removed)</p>
    <p>Q: free house plans Q: house plans</p>
    <p>Query transition</p>
  </div>
  <div class="page">
    <p>Predict type of query transition</p>
    <p>Given graphs before and after transition predict the transition type</p>
    <p>Query transition</p>
    <p>Is transition specialization or generalization?</p>
    <p>Q: strawberry shortcake Q: strawberry shortcake pictures</p>
  </div>
  <div class="page">
    <p>Type of transition: task</p>
    <p>Predict whether given transition was specialization or generalization</p>
    <p>Gradual increase in performance as using richer attributes</p>
    <p>Attributes URL</p>
    <p>Graph Domain Graph</p>
    <p>Marginals 0.50 0.50</p>
    <p>Projection 0.71 0.84</p>
    <p>Connection 0.69 0.83</p>
    <p>Projection + Connection</p>
    <p>All 0.80 0.87</p>
  </div>
  <div class="page">
    <p>Type of transition: the model</p>
    <p>Specializations:  Decrease in number</p>
    <p>of connected components</p>
    <p>Decrease in number of isolated nodes</p>
    <p>Largest component increases</p>
    <p>Number of connector nodes decreases</p>
  </div>
  <div class="page">
    <p>Guess query reformulation</p>
    <p>Given a query predict whether it is likely to get specialized or generalized.</p>
    <p>Results show</p>
    <p>Attributes URL</p>
    <p>Graph Domain Graph</p>
    <p>Marginals 0.50 0.50</p>
    <p>Projection 0.71 0.68</p>
    <p>Connection 0.62 0.65</p>
    <p>Projection + Connection</p>
    <p>All 0.78 0.76</p>
  </div>
  <div class="page">
    <p>Impact and applications</p>
    <p>Identify queries search engine does poorly on</p>
    <p>Given query reformulation predictions we know whether the user will be happy or not</p>
    <p>Use predictions on query reformulation for  suggest alternative queries</p>
    <p>spot badly formulated queries</p>
  </div>
</Presentation>
