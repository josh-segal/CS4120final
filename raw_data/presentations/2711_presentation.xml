<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>FlexCore: Massively Parallel and Flexible Processing for Large MIMO Access Points</p>
    <p>Konstantinos Nikitopoulos+ Joint work with Christopher Husmann+, Georgios Georgis+,</p>
    <p>and Kyle Jamieson*,**</p>
    <p>+ * **</p>
  </div>
  <div class="page">
    <p>From Orthogonal Transmissions to Mutually Interfering Transmissions</p>
    <p>Orthogonal approaches like CSMA and TDMA do not scale</p>
    <p>to large number of users</p>
    <p>New Ques(on: How can we efficiently demulBplex the inten(onally interfering informaBon streams?</p>
    <p>Paradigm Shi9: Allow all users to transmit concurrently at the same</p>
    <p>frequency</p>
  </div>
  <div class="page">
    <p>From Orthogonal to Mutually Interfering Transmissions</p>
    <p>+</p>
    <p>=</p>
    <p>n n n</p>
    <p>x x x</p>
    <p>hhh hhh hhh</p>
    <p>y y y</p>
    <p>y H x noise  Linear Detectors (e.g., ZF, MMSE) offer low latency and complexity but can result in</p>
    <p>highly subop(mal throughput</p>
    <p>Maximum-Likelihood (ML) Detec(on maximizes throughput but is highly complex</p>
    <p>x = arg min possible x</p>
    <p>yHx 2 4.2x109 possibiliBes for a 16-QAM 8x8 (8 clients, 8 AP antennas)</p>
    <p>ML detecBon is a fundamental problem, with special cases solved (e.g., in channel decoding)</p>
    <p>=  +</p>
  </div>
  <div class="page">
    <p>A Sphere Decoder transforms the exhausBve search into a tree search:</p>
    <p>x = arg min possible x</p>
    <p>y 'Rx 2</p>
    <p>a b</p>
    <p>a a b b</p>
    <p>xi Each client i sends a b</p>
    <p>a b a a a b b b</p>
    <p>Sphere Decoding</p>
    <p>Complexity efficient tree search  sequenBal processing</p>
    <p>Sphere Decoding Goal: Find the distance-minimizing leaf</p>
  </div>
  <div class="page">
    <p>The Need for Parallelization</p>
    <p>Th ro ug hp</p>
    <p>ut (M</p>
    <p>bp s)</p>
    <p>MMSE Sphere Decoding [Geosphere, SIGCOMM '14]</p>
    <p>Co m pl ex ity</p>
    <p>(c om</p>
    <p>pl ex m</p>
    <p>ul t. /</p>
    <p>su bc ar ri er / s)</p>
    <p>Number of users sending (to a 12-antenna AP)</p>
    <p>Far beyond the capabiliBes of tradiBonal processors</p>
    <p>Cl oc k fr eq</p>
    <p>ue nc y</p>
    <p>(M H z)</p>
    <p>CPU speed has plateaued</p>
    <p>Ph ys ic al g at e le ng th</p>
    <p>(n an om</p>
    <p>et er s)</p>
    <p>Transistors to stop shrinking by 2021</p>
    <p>[Danowitz, ACM Queue 10] Sphere Decoding parallelizaBon is necessary</p>
    <p>Final InternaBonal Technology Roadmap for Semiconductors report</p>
  </div>
  <div class="page">
    <p>ut (M</p>
    <p>bp s)</p>
    <p>Number of users sending (to a 12 antenna AP)</p>
    <p>ExhausBve Distance CalculaBon FlexCore</p>
    <p>x = arg min possible x</p>
    <p>yHx 2</p>
    <p>N ec es sa ry P Es</p>
    <p>Number of users sending (to a 12 antenna AP)</p>
    <p>ExhausBve Distance CalculaBon FlexCore</p>
    <p>We could achieve minimum latency by performing the Euclidean distance calculaBons for each x on a separate PE in parallel.</p>
    <p>A Parallelization Attempt</p>
    <p>SimulaBon on channel traces at 21.5 dB; 20MHZ (256 subcarriers); 64-QAM</p>
  </div>
  <div class="page">
    <p>FlexCores New Approach</p>
    <p>possible minarg Hxyx</p>
    <p>x =</p>
    <p>Can we idenBfy the most likely data x the users sent: 1. Before we receive any signal y? 2. Only by looking at the channel matrix H?</p>
    <p>Lets revisit the maximum-likelihood detecBon problem:</p>
  </div>
  <div class="page">
    <p>Gaussian noise</p>
    <p>Primer: Detection and Probability</p>
    <p>a b</p>
    <p>a b</p>
    <p>Assume the transmiled symbol is a:</p>
    <p>Assume the transmiled symbol is b:</p>
    <p>stP1nd P2</p>
    <p>ndP2 stP1</p>
    <p>y=a+n</p>
    <p>a is most likely to be the first- closest symbol to the received signal.</p>
    <p>It is less likely for a be the second- closest symbol to the received signal.</p>
  </div>
  <div class="page">
    <p>From Absolute to Relative Probabilities</p>
    <p>a b</p>
    <p>a b</p>
    <p>Assume the transmitted symbol is a:</p>
    <p>Assume the transmitted symbol is b:</p>
    <p>stP1nd P2</p>
    <p>ndP2 stP1</p>
    <p>a b</p>
    <p>ndP2 stP1</p>
    <p>b a</p>
    <p>stP1nd P2</p>
    <p>The corresponding probabiliBes can be calculated before we receive any signal</p>
    <p>Any transmiled symbol is more likely to be the first closest to the received signal, and less likely to be the second closest</p>
  </div>
  <div class="page">
    <p>Introducing the Tree of Promise</p>
    <p>:1x 2nd closest</p>
    <p>dB 01 =SNR dB 52 =SNR</p>
    <p>A priori</p>
    <p>a b</p>
    <p>a b 1y</p>
    <p>When receiving data</p>
    <p>= 1x</p>
    <p>= 2x</p>
    <p>= 1x</p>
    <p>= 2x</p>
    <p>We focus processing on half the search space, while retaining the right answer with over 95% probability.</p>
    <p>b</p>
    <p>a</p>
    <p>a</p>
    <p>a</p>
  </div>
  <div class="page">
    <p>FlexCores Tree of Promise</p>
    <p>nth closest</p>
    <p>nth nth 1st 1st</p>
    <p>We extend to interfering streams</p>
    <p>We extend to QAM modulaBon</p>
    <p>We extend to any number of users :3x</p>
    <p>:1x</p>
    <p>How do we find the nth closest symbol?</p>
  </div>
  <div class="page">
    <p>New Challenge: How do we find the nth closest symbol ?</p>
    <p>Received signal</p>
    <p>Exhaus(ve Distance Calcula(on</p>
    <p>Do we have beler soluBons ?</p>
  </div>
  <div class="page">
    <p>New Challenge: How do we find the nth closest symbol ?</p>
    <p>Received signal</p>
    <p>2-D ZigZag [Geosphere, Sigcomm 14]</p>
    <p>Can we find it without exhausBve or sequenBal search?</p>
  </div>
  <div class="page">
    <p>FlexCores symbol selection</p>
  </div>
  <div class="page">
    <p>FlexCores symbol selection</p>
  </div>
  <div class="page">
    <p>FlexCores symbol selection</p>
  </div>
  <div class="page">
    <p>FlexCores symbol selection</p>
    <p>symmetry</p>
  </div>
  <div class="page">
    <p>Evaluation Questions</p>
    <p>the-art approaches [FCSD, TCOM 08] of similar latency? 3. Is FlexCore capable of supporBng real-Bme LTE detecBon on commodity GPUs? 4. Can FlexCore realize energy efficiency gains for a given throughput target?</p>
  </div>
  <div class="page">
    <p>Implemented FlexCore on FPGA [Verilog], GPU [CUDA/ C], CPU [OpenMP/C].</p>
    <p>Evaluate using over-the-air experiments and channel trace-driven simula(ons [Rice, WARPv3].</p>
    <p>Experiments are conducted in an indoor environment on the 5 GHz ISM band over a 20 MHz bandwidth.</p>
    <p>In blue: 8-antenna access points In green: 12-antenna access points</p>
    <p>In red: single-antenna users</p>
    <p>FlexCores Implementations and Evaluation Methodology</p>
  </div>
  <div class="page">
    <p>Th ro ug hp</p>
    <p>ut (M</p>
    <p>bp s)</p>
    <p>fo r SN</p>
    <p>R sa Bs fy in g PE R=</p>
    <p>Number of available Processing Elements 20</p>
    <p>Elasticity of Throughput</p>
    <p>MMSE Throughput  1.11010 real mulBplicaBons/sec.</p>
    <p>FlexCore  6.2109 real mulBplicaBons/sec./PE</p>
    <p>Requires 32 fewer PEs</p>
    <p>FCSD  6.2109 real mulBplicaBons/sec./PE</p>
    <p>Geosphere Throughput  8.61014 real mulBplicaBons/sec.</p>
    <p>~ ~ ~ ~</p>
    <p>~ ~</p>
  </div>
  <div class="page">
    <p>FlexCore supports real-Bme MIMO detecBon for 12x12 LTE systems, using commodity GPUs.</p>
    <p>Real Time GPU-based LTE detection</p>
    <p>Desktop GPU</p>
    <p>SN R lo ss (d</p>
    <p>B)</p>
    <p>re la Bv e to G eo</p>
    <p>sp he</p>
    <p>re</p>
  </div>
  <div class="page">
    <p>FlexCores Energy Efficiency</p>
    <p>Number of physical PEs implemented on a FPGA</p>
    <p>En er gy E ffi ci en</p>
    <p>cy (J ou</p>
    <p>le s/ Bi t)</p>
    <p>FlexCore FCSD</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Related systems: Argos [Shepard, MobiCom 12], BigStaBon [Yang, SIGCOMM 13] currently employ linear detecBon schemes</p>
    <p>Parallelism granularity</p>
    <p>Interac(on between parallel components</p>
    <p>Ability to focus processing</p>
    <p>Depth-first sphere decoders [Geosphere, SIGCOMM 14]</p>
    <p>[Burg, JSSC 05] Breath-first sphere decoders</p>
    <p>[Chen, VLSI 07], [Guo, JSAC 05]</p>
    <p>Fixed Complexity (FCSD) [FCSD, TCOM 08]</p>
    <p>FlexCore</p>
    <p>none</p>
    <p>none</p>
    <p>none</p>
    <p>limited</p>
    <p>limited</p>
    <p>limited</p>
    <p>Very high</p>
    <p>Very high</p>
    <p>Low</p>
    <p>strong high Low</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>FlexCore massively parallelizes the fundamental maximum likelihood detecBon problem.</p>
    <p>Focuses processing to scale network throughput, efficiently uBlizing any number of processing elements.</p>
    <p>FlexCore realizes substan(al power reduc(on compared to state-of-the-art.</p>
    <p>Funding Acknowledgments: 5G INNOVATION CENTRE</p>
  </div>
</Presentation>
