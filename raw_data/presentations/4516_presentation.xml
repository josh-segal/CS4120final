<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Interface Abstraction for Compositional Verification</p>
    <p>Dilian Gurov Royal Institute of Technology, Stockholm</p>
    <p>Marieke Huisman INRIA Sophia-Antipolis</p>
    <p>SEFM 05, Koblenz</p>
    <p>September 9, 2005</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 1</p>
  </div>
  <div class="page">
    <p>Smart Cards and Security</p>
    <p>Smart cards</p>
    <p>store privacysensitive data</p>
    <p>require strong guarantees of security: formal verification Multiple interacting applets (e.g. JavaCard applets)</p>
    <p>communication via method invocation over shared interfaces</p>
    <p>example: electronic purse applet and several loyalties Post-issuance loading</p>
    <p>ability to load new applets after the card has been issued to the user</p>
    <p>requires compositional verification SEFM 05, Koblenz (September 9, 2005) 2</p>
  </div>
  <div class="page">
    <p>Compositional Verification</p>
    <p>Compositional Verification Principle</p>
    <p>premises: local property of  and correctness of decomposition Scenarios for secure post-issuance loading</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 3</p>
  </div>
  <div class="page">
    <p>Maximal Models</p>
    <p>In certain setups:</p>
    <p>property preserving simulation preorder</p>
    <p>for any formula  , the set of models for  has a maximal element</p>
    <p>wrt. the preorder: maximal model</p>
    <p>simulation preorder preserved by composition  Maximal Model Principle [Grumberg &amp; Long 94]</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 4</p>
  </div>
  <div class="page">
    <p>Compositional Verification Principle</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 5</p>
  </div>
  <div class="page">
    <p>Previous Work</p>
    <p>Theory [Sprenger, Huisman, Gurov: MEMOCODE04]</p>
    <p>formal framework</p>
    <p>maximal model construction Case Study [Huisman, Gurov, Sprenger, Chugunov: FASE04]</p>
    <p>electronic purse with loyalty programmes</p>
    <p>by smart card provider Gemplus</p>
    <p>verified absence of illicit applet interactions</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 6</p>
  </div>
  <div class="page">
    <p>Models, Simulation and Logic</p>
    <p>Applets unified treatment of structure and behaviour, controlflow based</p>
    <p>Model Labelled transition system + Valuation</p>
    <p>Simulation Preorder  standard Simulation Logic modal logic with box modalities and gfp recursion:</p>
    <p>Maximal Models</p>
    <p>exist</p>
    <p>exponential construction, lazy</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 7</p>
  </div>
  <div class="page">
    <p>Applet Structure</p>
    <p>Applet</p>
    <p>controlflow graph represented as model</p>
    <p>applet composition</p>
    <p>structural simulation and properties Maximal Model for property  is not necessarily a legal applet structure!</p>
    <p>interface    &quot;!  of provided and required methods</p>
    <p>formula # axiomatizing applets with interface  Maximal Applet  #</p>
    <p>is the maximal model  #</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 8</p>
  </div>
  <div class="page">
    <p>m a b</p>
    <p>a b</p>
    <p>a a v0</p>
    <p>v1</p>
    <p>v2</p>
    <p>v7</p>
    <p>v5 v6</p>
    <p>v3</p>
    <p>v4</p>
    <p>m</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 8-1</p>
  </div>
  <div class="page">
    <p>Applet Behaviour</p>
    <p>Applet structure induces applet behaviour $</p>
    <p>- configurations: pairs &amp;% ('  of control point and call stack - labels: ) , * +,- . . * / , * /01 2 * + - transitions: standard, induced in a contextfree manner</p>
    <p>Behavioural simulation and properties - applet interaction properties</p>
    <p>Applet behaviour is not axiomatizable within the logic... ...but at least structural simulation implies behavioural simulation!</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 9</p>
  </div>
  <div class="page">
    <p>Operational Semantics</p>
    <p>(call)</p>
    <p>&amp;%  ('  5 9=&gt;? ? 5 67 7 7 7 7 7 8 &amp;%  %@:  A '</p>
    <p>(return)</p>
    <p>&amp;%  %  A '  5 6DC EF 5 97 7 7 7 7 7 8 &amp;%  ('</p>
    <p>(transfer)</p>
    <p>&amp;% (' G 78 &amp;%: ('</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 10</p>
  </div>
  <div class="page">
    <p>Verification Method</p>
    <p>Compositional Verification Principle  H ' IJ # K '  L  M</p>
    <p>L  M</p>
    <p>N</p>
    <p>b) model check RS T KU Q VXW Y Z\[ ] O</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 11</p>
  </div>
  <div class="page">
    <p>Main Shortcomings</p>
    <p>setting we can only assume knowledge of the names of the public methods</p>
    <p>applicability of the (exponential) maximal model construction</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 12</p>
  </div>
  <div class="page">
    <p>Present Paper</p>
    <p>Public and Private Methods a set of public methods</p>
    <p>Transformation transforms applet with interface    !  into a simulating applet _ `  with interface  ! 7  7</p>
    <p>Modified CVP</p>
    <p>_ `   H ' IJ # a bc K d '  L  M</p>
    <p>L  ` e#&amp; f gM</p>
    <p>simulation: w.r.t. public behaviour, or interface behaviour</p>
    <p>transformation: inlining of private methods</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 13</p>
  </div>
  <div class="page">
    <p>An abstraction on applet behaviour wrt. h   N</p>
    <p>keep configurations unchanged</p>
    <p>relabel configurations - current control is in the topmost public method of% A '</p>
    <p>relabel transitions accordingly - configurationdependent relabelling</p>
    <p>denoted $ `</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 14</p>
  </div>
  <div class="page">
    <p>Inlining replace method call by method body</p>
    <p>need to: guarantee termination, prove simulation Transformation For each (public) method 3 4</p>
    <p>execute 3 so that:</p>
    <p>i label local calls and returns by j</p>
    <p>i treat calls to public methods as local transfer, but keep label</p>
    <p>i replace recursion by iteration</p>
    <p>result denoted _ `</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 15</p>
  </div>
  <div class="page">
    <p>m a b</p>
    <p>a b</p>
    <p>a a v0</p>
    <p>v1</p>
    <p>v2</p>
    <p>v7</p>
    <p>v5 v6</p>
    <p>v3</p>
    <p>v4</p>
    <p>m</p>
    <p>m</p>
    <p>v7.v3.v1</p>
    <p>v4.v3.v1 v0 v2.v1</p>
    <p>v1 v3.v1</p>
    <p>v5.v3.v1 v6.v3.v1</p>
    <p>m</p>
    <p>_ `</p>
    <p>introduces more interface behaviour! SEFM 05, Koblenz (September 9, 2005) 15-1</p>
  </div>
  <div class="page">
    <p>Simulation Results</p>
    <p>Theorem Let   and h  . Then $ `   $ _ `    $ ` _ `   .</p>
    <p>Lastcall recursion call edges are followed by transfer edges only</p>
    <p>Theorem Let   be last-call recursive, and h   . Then $ ` k l $ _ `    $ ` _ `   .</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 16</p>
  </div>
  <div class="page">
    <p>Modified CVP m n oqp rsut ^Dv wx y T a bc K d ov r{z | sut ] }</p>
    <p>p z | sut n ~ T f g] }</p>
    <p>b) verify m n oqp r sut ^ v</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 17</p>
  </div>
  <div class="page">
    <p>Practical Impact of Inlining</p>
    <p>Knowledge of public interfaces suffices for applying the verification method</p>
    <p>Reconsider the case study from [Huisman, Gurov, Sprenger, Chugunov: FASE04]</p>
    <p>in [HGSC04]      in [HGSC04] #nodes 8 474 8 2786</p>
    <p>#edges 120 277 700 88 603 128</p>
    <p>constr. time 0.05 s. 25 min. 0.05 s. 13 hrs.</p>
    <p>Some natural structural properties are only expressible as properties of the inlined applet</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 18</p>
  </div>
  <div class="page">
    <p>We presented</p>
    <p>Notion of interface behaviour</p>
    <p>Inlining transformation which</p>
    <p>i reduces applet interfaces to public interfaces</p>
    <p>i extends/preserves interface behaviour</p>
    <p>i supports compositional verification Future work</p>
    <p>multithreaded applets</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 19</p>
  </div>
  <div class="page">
    <p>New Slide</p>
    <p>blah</p>
    <p>SEFM 05, Koblenz (September 9, 2005) 20</p>
  </div>
</Presentation>
