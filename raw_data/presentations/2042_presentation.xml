<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Virtual Switching Without a Hypervisor for a More Secure Cloud</p>
    <p>Xin Jin Princeton University</p>
    <p>Joint work with Eric Keller(UPenn) and Jennifer Rexford(Princeton)</p>
  </div>
  <div class="page">
    <p>Public Cloud Infrastructure</p>
    <p>Cloud providers offer computing resources on demand to multiple tenants</p>
    <p>Benefits:  Public (any one can use)  Economies of scale (lower cost)  Flexibility (pay-as-you-go)</p>
  </div>
  <div class="page">
    <p>Hardware</p>
    <p>Server Virtualization</p>
    <p>Multiple VMs run on the same server  Benefits</p>
    <p>Efficient use of server resources  Backward compatibility</p>
    <p>Examples  Xen  KVM  VMware</p>
    <p>VM VM VM</p>
    <p>Hypervisor</p>
  </div>
  <div class="page">
    <p>Network Virtualization</p>
    <p>Software switches  Run in the hypervisor or the control VM (Dom0)</p>
    <p>Benefits: Flexible control at the edge  Access control  Resource and name space isolation  Efficient communication between co-located VMs</p>
    <p>Examples  Open vSwitch  VMwares vSwitch  Ciscos Nexus 1000v Switch</p>
    <p>Hardware</p>
    <p>VM VM Software</p>
    <p>Switch</p>
    <p>Hypervisor</p>
  </div>
  <div class="page">
    <p>Security: a major impediment for moving to the cloud!</p>
    <p>Lets take a look at where the vulnerabilities are</p>
  </div>
  <div class="page">
    <p>Guest VM 2 Guest VM 3</p>
    <p>Hardware</p>
    <p>Hypervisor</p>
    <p>Guest VM 1</p>
    <p>Vulnerabilities in Server Virtualization</p>
    <p>The hypervisor is quite complex  Large amount of code &gt; Bugs (NISTs National</p>
    <p>Vulnerability Database) 6</p>
  </div>
  <div class="page">
    <p>Guest VM 2 Guest VM 3</p>
    <p>Hardware</p>
    <p>Hypervisor</p>
    <p>Guest VM 1</p>
    <p>Vulnerabilities in Server Virtualization</p>
    <p>The hypervisor is an attack surface (bugs, vulnerable) &gt; Malicious customers attack the hypervisor</p>
  </div>
  <div class="page">
    <p>Vulnerabilities in Network Virtualization</p>
    <p>Software switch in control VM (Dom0)  Hypervisor is involved in communication</p>
    <p>Hardware</p>
    <p>Hypervisor</p>
    <p>Dom0</p>
    <p>Software Switch</p>
    <p>Physical NIC</p>
    <p>Guest VM 2Guest VM 1</p>
    <p>Virtual Interface</p>
    <p>Virtual Interface</p>
  </div>
  <div class="page">
    <p>Hardware</p>
    <p>Hypervisor</p>
    <p>Dom0</p>
    <p>Software Switch</p>
    <p>Physical NIC</p>
    <p>Guest VM 2Guest VM 1</p>
    <p>Virtual Interface</p>
    <p>Virtual Interface</p>
    <p>Software switch is coupled with the control VM &gt; e.g., software switch crash can lead to a complete</p>
    <p>system crash</p>
    <p>Vulnerabilities in Network Virtualization</p>
  </div>
  <div class="page">
    <p>Dom0 Disaggregation [e.g., SOSP11]</p>
    <p>Disaggregate control VM (Dom0) into smaller, single-purpose and independent components</p>
    <p>Malicious customer can still attack hypervisor!</p>
    <p>Hardware</p>
    <p>Hypervisor</p>
    <p>Guest VM 1 Dom0 Guest VM 2</p>
    <p>Service VM</p>
    <p>Service VM</p>
    <p>Service VM</p>
    <p>Service VM</p>
  </div>
  <div class="page">
    <p>NoHype [ISCA10, CCS11]</p>
    <p>Eliminate the hypervisor attack surface  What if I want to use a software switch?</p>
    <p>Hypervisor</p>
    <p>Dom0</p>
    <p>Emulate, Manage</p>
    <p>Hardware Virtualized Physical NIC</p>
    <p>Physical Device Driver</p>
    <p>Physical Device Driver</p>
    <p>Pre-allocating memory and cores</p>
    <p>Using hardware virtualized I/O devices</p>
    <p>Hypervisor is only used to boot up and shut down guest VMs.</p>
    <p>Guest VM 1 Guest VM 2</p>
  </div>
  <div class="page">
    <p>Software Switching in NoHype</p>
    <p>Bouncing packets through the physical NIC  Consumes excessive bandwidth on PCI bus</p>
    <p>and the physical NIC!</p>
    <p>Guest VM 1 Guest VM 3</p>
    <p>Hypervisor</p>
    <p>Hardware Virtualized Physical NIC</p>
    <p>Physical Device Driver</p>
    <p>Physical Device Driver</p>
    <p>Guest VM 2</p>
    <p>Software Switch</p>
    <p>Dom0</p>
    <p>Emulate, Manage</p>
  </div>
  <div class="page">
    <p>Our Solution Overview</p>
    <p>Eliminate the hypervisor attack surface  Enable software switching in an efficient way</p>
    <p>Hardware</p>
    <p>Guest VM 1 DomS Guest VM 2</p>
    <p>Virtual Interface</p>
    <p>Software Switch</p>
    <p>Physical NIC</p>
    <p>Virtual Interface</p>
    <p>Hypervisor</p>
    <p>Dom0</p>
    <p>Emulate, Manage</p>
  </div>
  <div class="page">
    <p>Hypervisor</p>
    <p>Eliminate the Hypervisor-Guest Interaction</p>
    <p>Shared memory  Two FIFO buffers for communication</p>
    <p>Polling only  Do not use event channel; no hypervisor involvement</p>
    <p>FIFO</p>
    <p>FIFO</p>
    <p>Polling Guest VM 1</p>
    <p>Virtual Interface</p>
    <p>Dom0</p>
    <p>Software Switch</p>
  </div>
  <div class="page">
    <p>Limit Damage From a Compromised Switch</p>
    <p>Decouple software switch from Dom0  Introduce a Switch Domain (DomS)</p>
    <p>Decouple software switch from the hypervisor  Eliminate the hypervisor attack surface</p>
    <p>Hypervisor</p>
    <p>FIFO</p>
    <p>FIFO</p>
    <p>Polling Guest VM 1</p>
    <p>Virtual Interface</p>
    <p>DomS</p>
    <p>Software Switch</p>
    <p>Dom0</p>
    <p>FIFO</p>
    <p>FIFO</p>
    <p>Polling Guest VM 1</p>
    <p>Virtual Interface</p>
    <p>DomS</p>
    <p>Software Switch</p>
    <p>Dom0</p>
    <p>HypervisorHypervisor</p>
    <p>FIFO</p>
    <p>FIFO</p>
    <p>Polling Guest VM 1</p>
    <p>Virtual Interface</p>
    <p>Dom0</p>
    <p>Software Switch</p>
  </div>
  <div class="page">
    <p>Preliminary Prototype</p>
    <p>Prototype based on  Xen 4.1: used to boot up/shut down VMs  Linux 3.1: kernel module to implement polling/FIFO  Open vSwitch 1.3</p>
    <p>Hypervisor</p>
    <p>Dom0</p>
    <p>Software Switch</p>
    <p>Guest VM 1</p>
    <p>Virtual Interface</p>
    <p>Native Xen</p>
    <p>Hardware</p>
    <p>FIFO</p>
    <p>FIFO</p>
    <p>Polling Guest VM 1</p>
    <p>Virtual Interface</p>
    <p>DomS</p>
    <p>Software Switch</p>
    <p>Our Solution</p>
    <p>Hardware</p>
    <p>Hypervisor</p>
    <p>Dom0</p>
  </div>
  <div class="page">
    <p>Preliminary Evaluation</p>
    <p>Evaluate the throughput between DomS and a guest VM, compared with native Xen</p>
    <p>Traffic measurement: Netperf  Configuration: each VM has 1 core and 1GB of RAM</p>
    <p>Hypervisor</p>
    <p>Dom0</p>
    <p>Software Switch</p>
    <p>Guest VM 1</p>
    <p>Virtual Interface</p>
    <p>Native Xen</p>
    <p>Hardware</p>
    <p>FIFO</p>
    <p>FIFO</p>
    <p>Polling Guest VM 1</p>
    <p>Virtual Interface</p>
    <p>DomS</p>
    <p>Software Switch</p>
    <p>Our Solution</p>
    <p>Hardware</p>
    <p>Hypervisor</p>
    <p>Dom0</p>
  </div>
  <div class="page">
    <p>Evaluation on Throughput</p>
    <p>FIFO Size  Polling period is fixed to 1ms  Reach high throughput with</p>
    <p>just 256 FIFO pages (Only 1MB)</p>
    <p>Polling Period  Shorter polling</p>
    <p>period, higher throughput  CPU resource consumption?</p>
    <p>&gt; Future work</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut (M</p>
    <p>bp s)</p>
    <p>FIFO Pages (1 page = 4 KB)</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut (M</p>
    <p>bp s)</p>
    <p>Polling Period (ms)</p>
  </div>
  <div class="page">
    <p>Comparison with Native Xen</p>
    <p>Outperforms native Xen when message size is smaller than 8 KB.</p>
    <p>Future work: incorporate more optimization</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut (M</p>
    <p>bp s)</p>
    <p>Message Size(Bytes)</p>
    <p>Our Solution Native Xen</p>
  </div>
  <div class="page">
    <p>Conclusion and Future Work</p>
    <p>Trend towards software switching in the cloud  Security in hypervisor and Dom0 is a big concern  Improve security by enabling software switching</p>
    <p>without hypervisor involvement</p>
    <p>Future work  Detection and remediation of DomS compromise</p>
  </div>
  <div class="page">
    <p>Thanks!</p>
    <p>Q&amp;A</p>
  </div>
</Presentation>
