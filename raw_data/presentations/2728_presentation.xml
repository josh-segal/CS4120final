<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Let It Flow Resilient Asymmetric Load Balancing with Flowlet Switching Erico Vanini*, Rong Pan*, Mohammad Alizadeh, Parvin Taheri*, Tom Edsall*</p>
    <p>*</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Load Balancing in Data Centers</p>
    <p>Goal: Avoid congestion hotspots</p>
    <p>Active research area</p>
    <p>Solved for symmetric topologies</p>
    <p>Still open question in asymmetric scenarios</p>
    <p>Multi-rooted tree</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Asymmetry Is Common in Practice</p>
    <p>Link Failure</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Asymmetry Is Common in Practice</p>
    <p>L0####L1#####################L2####L3#####################L4####L5#</p>
    <p>S0#######################S1##S2#######################S3##S4######################S5#</p>
    <p>Imbalanced striping: # of ports indivisible by # of switches in other tier</p>
    <p>Zhou et al. WCMP: Weighted cost multipathing for improved fairness in data centers, CoNEXT 2014.</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Dealing with Asymmetry</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Dealing with Asymmetry</p>
    <p>(UDP)</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Dealing with Asymmetry</p>
    <p>(UDP)</p>
    <p>Scheme Thrput ECMP-WCMP</p>
    <p>(Local Stateless) 65G</p>
    <p>Congestion-Aware</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Dealing with Asymmetry</p>
    <p>(UDP)</p>
    <p>Scheme Thrput ECMP-WCMP</p>
    <p>(Local Stateless) 65G</p>
    <p>Congestion-Aware 70G</p>
    <p>Handling asymmetry needs path congestion information, which varies</p>
    <p>dynamically with traffic.</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Example: CONGA</p>
    <p>L0 L1 L2 Conges'on(To(Leaf</p>
    <p>Table-@L0</p>
    <p>D es t-L ea f</p>
    <p>Path0- 1- 2</p>
    <p>L1L2</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Existing Load Balancing Schemes Congestion-aware decisions: complex  Measure and feed back congestion in real time  CONGA, Hedera, HULA, MPTCP, FlowBender, Congestion-oblivious decisions: simple  Random, round robin, hashing decision process  ECMP, WCMP, Packet-Spray, Presto,</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Is there a simple load balancing scheme (with congestion-oblivious decisions)</p>
    <p>that can handle asymmetry?</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>LetFlow Simple: Randomly assign Flowlets to available paths Flowlets:</p>
    <p>Flowlets are bursts from same flow separated by at least  the main origin of flowlets is the burstiness of TCP at RTT and subRTT scales. Kandula et al, Dynamic load balancing without packet reordering, (2007)</p>
    <p>.   .. .</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Simple Asymmetric Scenario</p>
    <p>Link Failure</p>
    <p>Detect and randomly assign Flowlets to available paths</p>
    <p>Extremely simple! - No measurements - No feedback - No congestion state</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>FC T</p>
    <p>(m s)</p>
    <p>Traffic Load % (w/o link failure)</p>
    <p>ECMP CONGA LetFlow</p>
    <p>LetFlow</p>
    <p>be tte</p>
    <p>r</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Whats Going On?</p>
    <p>Link Failure</p>
    <p>Spine0 Spine1</p>
    <p>Force % of choices per path</p>
    <p>A B 15</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Flowlets are Robust Performance is not sensitive to load balancing decisions</p>
    <p>N or</p>
    <p>m . F</p>
    <p>C T</p>
    <p>(b es</p>
    <p>t)</p>
    <p>% of Choices Assigned to Green path</p>
    <p>flowlets flows packets (oracle)</p>
    <p>Traffic load: 90% 16</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Flowlet Length</p>
    <p>av g</p>
    <p>flo w</p>
    <p>le t l</p>
    <p>en gt</p>
    <p>h (p</p>
    <p>ac ke</p>
    <p>ts )</p>
    <p>% of Choices Assigned to Green path</p>
    <p>full capacity path half capacity path</p>
    <p>Ideal split</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Flowlets are Elastic  Flowlets change size based on congestion on the path - Uncongested path ! larger flowlets - Congested path ! smaller flowlets</p>
    <p>! Flowlet sizes implicitly encode path congestion information  this determines the amount of traffic on each path  not just load balancing decisions</p>
    <p>LetFlow is congestion-aware, despite simple random decisions</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Why Are Flowlets Elastic?  Because of congestion control (e.g., TCP)</p>
    <p>A flowlet gap occurs on - Window cuts (Loss/ECN) - Latency spikes (ACK clocking)</p>
    <p>t</p>
    <p>Window</p>
    <p>halved</p>
    <p>But, theres a more basic reason, applicable to any congestion control protocol</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>LetFlow Analysis</p>
    <p>C1</p>
    <p>C2</p>
    <p>n1 + n2 n1</p>
    <p>n2</p>
    <p>Assume flows transmit as Poisson processes</p>
    <p>1 = C1 / n1</p>
    <p>2 = C2 / n2</p>
    <p>Avg. rate of each flow:</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>LetFlow Analysis</p>
    <p>C1</p>
    <p>C2</p>
    <p>n1 + n2 n1</p>
    <p>n2</p>
    <p>State transition probability !&quot;#,&quot;% &amp;  ()%((+,(-) /</p>
    <p>... , ...... , ...</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>LetFlow Analysis</p>
    <p>C1</p>
    <p>C2</p>
    <p>n1 + n2 n1</p>
    <p>n2</p>
    <p>State transition probability !&quot;#,&quot;% &amp;  ()%((+,(-) /</p>
    <p>... , ...... , ...</p>
    <p>Takeaways</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Experiments Summary Different workloads: web search, data mining, enterprise</p>
    <p>Testbed experiments: ECMP, CONGA, LetFlow  2 leaves 2 spines, 64 servers: symmetric &amp; asymmetric topologies</p>
    <p>Simulations: ECMP, WCMP, Presto, CONGA, LetFlow  Large topology: 6 leaves 6 spines, 288 servers  Complex asymmetric topologies: speed mismatch, combined workloads,</p>
    <p>multitier  Different protocols: TCP, DCTCP, DCQCN</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Large Scale Simulations</p>
    <p>L0####L1#####################L2####L3#####################L4####L5#</p>
    <p>S0#######################S1##S2#######################S3##S4######################S5#</p>
    <p>FC T$ (m</p>
    <p>s) $</p>
    <p>Load$%$$</p>
    <p>CONGA&quot; LetFlow&quot; WCMP&quot; Presto&quot;</p>
    <p>topology from: WCMP, Zhou, Junlan, et al. 2014</p>
    <p>LetFlow within 2X of CONGA; Both are much better than other schemes</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>L0</p>
    <p>Traffic Load uniform to the 2 destinations</p>
    <p>b c</p>
    <p>L1 L2</p>
    <p>spine0 spine1</p>
    <p>Multi Destination Scenario</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>b c</p>
    <p>FCT is similar between Conga and LetFlow spine0 spine1</p>
    <p>L0 L1 L2</p>
    <p>Traffic Load uniform to the 2 destinations</p>
    <p>CONGA LetFlow 90%</p>
    <p>LetFlow 60%</p>
    <p>% o</p>
    <p>f d es</p>
    <p>tin at</p>
    <p>io on</p>
    <p>tr af</p>
    <p>fic</p>
    <p>Multi Destination Scenario</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Other Transport Protocols</p>
    <p>FC T</p>
    <p>(m s)</p>
    <p>Load % (w/o link failure)</p>
    <p>ECMP CONGA LetFlow</p>
    <p>FC T</p>
    <p>(m s)</p>
    <p>Load % (w/o link failure)</p>
    <p>ECMP CONGA LetFlow</p>
    <p>DCTCP DCQCN</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>Conclusion  Flowlet switching is a powerful technique for asymmetric</p>
    <p>load balancing</p>
    <p>LetFlow: a simple LB mechanism that handles asymmetry  Random decisions but implicitly congestion-aware  Suitable for standalone switches  does not need feedback</p>
    <p>Letflow is stochastic and reactive in nature  Cannot proactively prevent congestion / queue buildup like more</p>
    <p>sophisticated schemes 28</p>
  </div>
  <div class="page">
    <p>Erico Vanini  CISCO</p>
    <p>LET it FLOW !</p>
  </div>
</Presentation>
