<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Password Portfolios and the Finite-Effort User: Sustainably Managing Large Numbers of Accounts</p>
    <p>Dinei Florencio, Cormac Herley and Paul C. van Oorschot</p>
    <p>Microsoft Research and Carleton University</p>
  </div>
  <div class="page">
    <p>Choosing a password</p>
    <p>A1: Passwords should be random and strong</p>
    <p>A2: Passwords should not be re-used across accounts</p>
    <p>Everyone knows</p>
    <p>But no-one does.</p>
  </div>
  <div class="page">
    <p>Portfolio of N random, unique Passwords lg(S) each</p>
    <p>Work email</p>
    <p>fidelity.com</p>
    <p>wellsFargo.com</p>
    <p>amazon.com</p>
    <p>facebook.com</p>
    <p>twitter.com</p>
    <p>nytimes.com</p>
    <p>blogspot.com</p>
    <p>dot.wa.gov</p>
    <p>consumerreports.org</p>
    <p>Usenix.org</p>
    <p>Must remember:  N passwords = Nlg(S)</p>
    <p>NxN pwd-to-acct assignment = lg(N!)</p>
    <p>gh&amp;gja8Rtd</p>
    <p>HD%fshwdf</p>
    <p>AmLwMnTh</p>
    <p>dgHwer79</p>
    <p>w0Gq#44n</p>
    <p>Fgsh7%dd</p>
    <p>Fgj99sbsn</p>
    <p>kLdgw789*</p>
    <p>Nlg(S) lg(N!) +</p>
    <p>E(N) = Nlg(S) + lg(N!)</p>
  </div>
  <div class="page">
    <p>Remembering N random passwords</p>
    <p>E(N) = Nlg(S) + lg(N!)</p>
    <p>E.g. N=100 accts, lg(s)=40</p>
    <p>E(100) = 4000 + 524 = 4524 bits</p>
    <p>Depends how remember passwords</p>
    <p>Random bits</p>
  </div>
  <div class="page">
    <p>Reducing the burden Work email</p>
    <p>fidelity.com</p>
    <p>wellsFargo.com</p>
    <p>amazon.com</p>
    <p>facebook.com</p>
    <p>twitter.com</p>
    <p>nytimes.com</p>
    <p>blogspot.com</p>
    <p>dot.wa.gov</p>
    <p>consumerreports.org</p>
    <p>Usenix.org</p>
    <p>Coping strategy:  Weaker passwords: reduce lg(S)</p>
    <p>gh&amp;gja8Rtd</p>
    <p>HD%fshwdf</p>
    <p>AmLwMnTh</p>
    <p>dgHwer79</p>
    <p>w0Gq#44n</p>
    <p>Fgsh7%dd</p>
    <p>Fgj99sbsn</p>
    <p>kLdgw789*</p>
    <p>snoopy</p>
    <p>lucy29</p>
    <p>abcdefg</p>
    <p>double07</p>
    <p>gh&amp;gja8Rtd</p>
    <p>rootbeer7</p>
    <p>bodach</p>
    <p>wsxcde</p>
    <p>E(N) = 100 lg(S) + 524</p>
    <p>Way too high, even if lg(S)=0!!!</p>
  </div>
  <div class="page">
    <p>Reducing the burden Work email</p>
    <p>fidelity.com</p>
    <p>wellsFargo.com</p>
    <p>amazon.com</p>
    <p>facebook.com</p>
    <p>twitter.com</p>
    <p>nytimes.com</p>
    <p>blogspot.com</p>
    <p>dot.wa.gov</p>
    <p>consumerreports.org</p>
    <p>Usenix.org</p>
    <p>Group and re-use</p>
    <p>gh&amp;gja8Rtd</p>
    <p>HD%fshwdf</p>
    <p>AmLwMnTh</p>
    <p>dgHwer79</p>
    <p>w0Gq#44n</p>
    <p>Fgsh7%dd</p>
    <p>Fgj99sbsn</p>
    <p>kLdgw789*</p>
    <p>snoopy</p>
    <p>snoopy</p>
    <p>snoopy</p>
    <p>snoopy</p>
    <p>snoopy</p>
    <p>gh&amp;gja8Rtd</p>
    <p>rootbeer7</p>
    <p>rootbeer7</p>
    <p>rootbeer7</p>
  </div>
  <div class="page">
    <p>Effort for N accounts in G groups: EG(N)</p>
    <p>EG(N)  Glg(S) + Nlg(G)</p>
    <p>=&gt; lg(S)  (EG(N)  Nlg(G))</p>
    <p>Reciprocal reln: tradeoff between strength and avoiding re-use (i.e. lg(S) and G)</p>
    <p>N = #accts G = #unique pwds lg(S) = pwd strength</p>
  </div>
  <div class="page">
    <p>Many ways to organize portfolio lg(S)  (EG(N)  Nlg(S))/G</p>
    <p>Fixed effort:  lg(S)  1/G  Stronger pwd =&gt; more re</p>
    <p>use</p>
    <p>Doubling #pwds more than halves pwd strength.</p>
    <p>EG(N) = 700 bits EG(N) = 550 bits EG(N) = 400 bits</p>
  </div>
  <div class="page">
    <p>What was the question again?</p>
    <p>Q: Minimize portfolio expected loss?</p>
    <p>=</p>
    <p>=1</p>
    <p>()</p>
    <p>Set   = 0: (If all accts independent)</p>
    <p>=&gt;</p>
    <p>=0 for i=1,2,3,, N</p>
    <p>Effort</p>
    <p>( )Probability of</p>
    <p>harm decreases with effort.</p>
    <p>Solution: Effort</p>
    <p>Pi(E) = Pr. Compromise Li = i-th value</p>
  </div>
  <div class="page">
    <p>Users also care about effort!!!!!</p>
    <p>Q: Minimize expected loss + effort?</p>
    <p>+=</p>
    <p>=1</p>
    <p>( ()+)</p>
    <p>Optimality: set (+)  = 0 (If all accts independent)</p>
    <p>=&gt;</p>
    <p>= 1  for i=1,2,3,, N</p>
  </div>
  <div class="page">
    <p>Difference the objective function makes:</p>
    <p>Minimize: L (all passwords as strong as possible)</p>
    <p>Minimize: L + E (effort depends on dP/dE and L)</p>
    <p>Effort</p>
    <p>p (H</p>
    <p>a rm</p>
    <p>| E</p>
    <p>ff o</p>
    <p>rt )</p>
    <p>Optimum at infinity</p>
  </div>
  <div class="page">
    <p>Are we done? Not quite. Re-use Complicates things</p>
    <p>Risk is not: Independent across accounts Dependent only on strength</p>
    <p>Risk to i-th acct also depends on Effort for other accts that share the password Effort to protect from keyloggers, malware</p>
    <p>Without this simplification: set of N non-linear eqns</p>
  </div>
  <div class="page">
    <p>Segmentation: Attack Classes I, II, III</p>
    <p>Class I Class II Class III</p>
    <p>Full Group Single acct</p>
    <p>Attack Keyloggers Password guessing, phishing; server DB leaks</p>
    <p>Session-hijacking, XSS</p>
    <p>Effort addressing AV, updates, PC hygiene Strong passwords, avoid re-use, avoid phishing sites.</p>
  </div>
  <div class="page">
    <p>Realistic Model, Minimize L+E Expected Portfolio loss</p>
    <p>L+E minimized when:</p>
  </div>
  <div class="page">
    <p>Which gives.</p>
    <p>which is a set of linear equations</p>
  </div>
  <div class="page">
    <p>Criteria for optimality now give:</p>
    <p>Decision boundaries between groups J, K</p>
    <p>=</p>
    <p>Groups have similar weighted loss</p>
  </div>
  <div class="page">
    <p>Conclusion/Take-away points</p>
    <p>Random and unique passwords infeasible for large portfolios</p>
    <p>User interest is to minimize L+E, rather than L, over the portfolio.</p>
    <p>Realistic analysis must include attacks that cover:  I: all accts,</p>
    <p>II: password sharing groups,</p>
    <p>III: single accounts.</p>
  </div>
  <div class="page">
    <p>Conclusions cntd.</p>
    <p>A strategy that rules out re-use is sub-optimal</p>
    <p>A strategy that rules out weak passwords is suboptimal</p>
    <p>Group like with like: e.g.  High-value, low probability of compromise  Low-value, high probability of compromise</p>
  </div>
</Presentation>
