<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Deception Task Design</p>
    <p>in Developer Password Studies:</p>
    <p>Exploring a Student Sample</p>
    <p>Alena Naiakshina Anastasia Danilova</p>
    <p>Christian Tiefenau Matthew Smith</p>
    <p>Symposium on Usable Privacy and Security (SOUPS), Baltimore, MD, USA 2018</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Design of end-user studies  Ample experience</p>
    <p>Best-practice knowledge</p>
    <p>Lacking knowledge for developer studies</p>
    <p>Further insights into why developers</p>
    <p>struggle with end-user password storage</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Design of end-user studies  Ample experience</p>
    <p>Best-practice knowledge</p>
    <p>Lacking knowledge for developer studies  Meta-level</p>
    <p>Further insights into why developers</p>
    <p>struggle with end-user password storage</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Design of end-user studies  Ample experience</p>
    <p>Best-practice knowledge</p>
    <p>Lacking knowledge for developer studies  Meta-level</p>
    <p>Further insights into why developers</p>
    <p>struggle with end-user password storage  Primary study</p>
  </div>
  <div class="page">
    <p>Meta-level</p>
    <p>Qualitative vs. quantitative approach  Extended study:  Why Do Developers Get Password Storage Wrong? A Qualitative Usability Study (CCS17)</p>
    <p>Deception  Primed group: request to store end-user passwords securely  Fahl et al.1 found no significant difference within the priming conditions in an end-user</p>
    <p>password study.</p>
    <p>Task length</p>
  </div>
  <div class="page">
    <p>Qual vs. Quant Setup</p>
    <p>First 20 used for qualitative analysis  Analysis by researchers 2 &amp; 3  Published at CCS17</p>
    <p>All 40 used for quantitative study  Analysis by researchers 1-4</p>
  </div>
  <div class="page">
    <p>Demographics</p>
    <p>40 participants  6 female, 31 male, 3 prefer not to say</p>
    <p>Students  33 Computer Science, 6 Media Informatics, 1 other  12 BSc, 26 MSc Students, 2 other</p>
    <p>Age: mean 25</p>
  </div>
  <div class="page">
    <p>Results - Primary study</p>
  </div>
  <div class="page">
    <p>Framework  functionality</p>
    <p>H - Framework has an effect on</p>
    <p>the likelihood of achieving</p>
    <p>functional solutions.</p>
    <p>Not statistically significant</p>
    <p>We only had a power of 0.17, so this effect is worth looking at in follow-up studies</p>
  </div>
  <div class="page">
    <p>Framework  security</p>
    <p>H - Framework has an effect on the security score of participants attempting security.</p>
    <p>JSF Spring</p>
    <p>Min 2, Median 5.5, Mean 4.3, Max 6 Min, Median, Mean, Max 6</p>
  </div>
  <div class="page">
    <p>Framework  security</p>
    <p>H - Framework has an effect on the security score of participants attempting security.</p>
    <p>Statistically significant before multiple testing correction</p>
    <p>We think it is likely that a larger sample would confirm the trend that Spring participants earn higher scores than JSF participants.</p>
  </div>
  <div class="page">
    <p>Java experience</p>
    <p>Acar et al.1  programming language experience has an effect on the security of participants solutions</p>
    <p>H - Years of Java experience have an effect on the security scores.</p>
    <p>Not statistically significant in our study</p>
    <p>Our student sample had a much smaller range of programming experience</p>
    <p>Suggests that it might not be necessary to balance programming experience when working with students.</p>
  </div>
  <div class="page">
    <p>Copy and paste</p>
    <p>Previous work:</p>
    <p>Because Stack Overflow contains many insecure answers, Android developers who rely on this resource are likely to create less secure code. 1</p>
    <p>We show that 196,403 (15%) of the 1.3 million Android applications contain vulnerable code snippets that were very likely copied from Stack Overflow. 2</p>
  </div>
  <div class="page">
    <p>Copy and paste</p>
    <p>Our results:</p>
    <p>Significant positive effect of copy/paste events</p>
    <p>All secure solutions came from participants who copied and pasted security code</p>
    <p>0% of participants who did not copy/paste created a secure solution</p>
    <p>!</p>
  </div>
  <div class="page">
    <p>Results - Meta-level</p>
  </div>
  <div class="page">
    <p>Priming hypotheses</p>
    <p>H - Priming has an effect on the likelihood of participants attempting security.</p>
    <p>Statistically significant</p>
    <p>Primed group Non-Primed group</p>
  </div>
  <div class="page">
    <p>Priming hypotheses</p>
    <p>H - Priming does not have an effect on achieving a secure solution once the</p>
    <p>attempt is made.</p>
    <p>Statistically significant before multiple testing correction</p>
    <p>Primed group Non-Primed group</p>
  </div>
  <div class="page">
    <p>Task length</p>
    <p>Short tasks  Common in previous work, straight forward, feasible  No distraction tasks, i.e., clear focus on security</p>
    <p>One-day time frame  Allows distraction tasks  8 hours: longest time we could reasonably ask participants to remain in a lab setting  Full-screen capture, history of all code, copy/paste events, website history etc.</p>
    <p>Multi-day time frame  Trade-off between ecological validity and the ability to gather high-fidelity data</p>
  </div>
  <div class="page">
    <p>Task design</p>
    <p>Priming task</p>
    <p>14/20 interacted with security libraries/APIs</p>
    <p>6/20 did not attempt to add security  no interaction with security</p>
    <p>libraries/APIs</p>
    <p>Shorter, API usability focused study</p>
    <p>Discover usability problems of security APIs</p>
  </div>
  <div class="page">
    <p>Task design</p>
    <p>Deception task</p>
    <p>2/20 interacted with security libraries/APIs</p>
    <p>18/20 did not attempt to add security</p>
    <p>no interaction with security libraries/APIs</p>
    <p>Why do developers not add security without study countermeasures or being prompted.  More work needed to validate the ecological validity of deception in this</p>
    <p>context. 20</p>
  </div>
  <div class="page">
    <p>Deception task</p>
    <p>2 attempted but failed</p>
    <p>2 erroneously thought it was secure</p>
    <p>2 security not part of the task</p>
    <p>3 functionality more important</p>
    <p>8 were not aware</p>
    <p>3 no reason</p>
    <p>Realistic behavior   Real world</p>
    <p>Many password database compromises</p>
  </div>
  <div class="page">
    <p>Laboratory setting advantages</p>
    <p>You can monitor what participants google  20/38 used Google when answering the survey  6 framework-related topics  14 password storage-related topics</p>
    <p>4/16 non-primed participants without security attempts searched how to store user passwords securely while answering the survey</p>
    <p>7/12 primed participants with secure solutions searched for additional password storage security details to answer questions of the survey</p>
  </div>
  <div class="page">
    <p>Quantitative vs. Qualitative</p>
    <p>Compared two frameworks with A/B test.</p>
    <p>We are confident that deception changes the behavior of participants dramatically.</p>
    <p>Already...</p>
    <p>...highlighted many of the problems faced by developers.</p>
    <p>...delivered a good indication of priming effect.</p>
    <p>We did not find much to add to the conclusions of the</p>
    <p>qualitative study!</p>
  </div>
  <div class="page">
    <p>Study design</p>
    <p>Many valuable insights can be gained without the need for larger sample sizes.</p>
    <p>Recruitment of participants biggest challenge.</p>
    <p>The extra 20 participants did not add much in the way of insights.</p>
    <p>We recommend doing qualitative studies in order to</p>
    <p>investigate the usability of APIs! 24</p>
  </div>
  <div class="page">
    <p>Priming / Deception Allows us to study two completely different aspects:</p>
    <p>API usability vs. security awareness</p>
    <p>Google Our participants googled survey questions</p>
    <p>Beware of knowledge questions!</p>
    <p>Copy/Paste Positive effect on the security of our participants code</p>
    <p>Take-aways</p>
  </div>
  <div class="page">
    <p>Do more qualitative developer studies in lab!</p>
  </div>
</Presentation>
