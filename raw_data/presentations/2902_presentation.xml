<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>RIANN: Real-time Incremental Learning with Approximate Nearest Neighbor on Mobile Devices</p>
    <p>Jiawen Liu1, Zhen Xie1, Dimitrios Nikolopoulos2, Dong Li1</p>
    <p>USENIX Conference on Operational Machine Learning (OpML) 2020</p>
  </div>
  <div class="page">
    <p>Approximate Nearest Neighbor (ANN)</p>
    <p>Given:  a set P of n points in a d-dimensional space Rd  a query q</p>
    <p>Goal:  find approximate nearest neighbors p of q in P</p>
    <p>q p</p>
  </div>
  <div class="page">
    <p>Applications</p>
    <p>Pattern Recognition</p>
    <p>Statistical Classification</p>
    <p>Cluster Analysis</p>
    <p>Computational Geometry</p>
    <p>Data Compression</p>
    <p>Recommendation</p>
  </div>
  <div class="page">
    <p>Graph-based ANN Algorithms and HNSW</p>
    <p>Graph-based ANN algorithms:  A graph G = (P, E)  A query point p  P  Natural greedy traversal on G  Start at a starting point s  P  Traverse the graph to find points closest to p</p>
    <p>HNSW: Hierarchical Navigable Small World graphs  A state-of-the-art ANN algorithm  Build a hierarchical set of proximity layers</p>
    <p>Courtesy of 1. Malkov et al, Efficient and robust approximate nearest neighbor search using Hierarchical Navigable Small World graphs, TPAMI, 2018.</p>
  </div>
  <div class="page">
    <p>Challenge 1</p>
    <p>Difficulty to meet the real-time requirement:</p>
  </div>
  <div class="page">
    <p>Challenge 2</p>
    <p>There is no estimation of the followings during the indexing process: 1) indexing time 2) search time 3) recall</p>
    <p>Online estimation is critical to choose indexing hyperparameters to meet requirements on timing and recall  The online estimation must be lightweight</p>
  </div>
  <div class="page">
    <p>Overview of RIANN</p>
    <p>Model Training</p>
    <p>Generate Training Data</p>
    <p>Generate ANN Indexing Properties</p>
    <p>Train Statistical Prediction Model</p>
    <p>Online Prediction</p>
    <p>Statistical Prediction Model</p>
    <p>Analitical Performance Model</p>
    <p>User Requirement</p>
    <p>Indexing Time</p>
    <p>Query Time</p>
    <p>Recall</p>
    <p>Simulated Annealing</p>
    <p>Indexing ANN on Mobile Devices</p>
    <p>Unsatisfied</p>
    <p>Offline Stage Online Stage</p>
    <p>Trained Model</p>
    <p>Prediction Results</p>
    <p>User Requirement Satisfied</p>
    <p>New Batch</p>
    <p>N on</p>
    <p>-o pt</p>
    <p>im al</p>
    <p>Pr op</p>
    <p>er tie</p>
    <p>s Optimal Properties</p>
  </div>
  <div class="page">
    <p>Overview of RIANN</p>
    <p>Model Training</p>
    <p>Generate Training Data</p>
    <p>Generate ANN Indexing Properties</p>
    <p>Train Statistical Prediction Model</p>
    <p>Online Prediction</p>
    <p>Statistical Prediction Model</p>
    <p>Analitical Performance Model</p>
    <p>User Requirement</p>
    <p>Indexing Time</p>
    <p>Query Time</p>
    <p>Recall</p>
    <p>Simulated Annealing</p>
    <p>Indexing ANN on Mobile Devices</p>
    <p>Unsatisfied</p>
    <p>Offline Stage Online Stage</p>
    <p>Trained Model</p>
    <p>Prediction Results</p>
    <p>User Requirement Satisfied</p>
    <p>New Batch</p>
    <p>N on</p>
    <p>-o pt</p>
    <p>im al</p>
    <p>Pr op</p>
    <p>er tie</p>
    <p>s Optimal Properties</p>
  </div>
  <div class="page">
    <p>Overview of RIANN</p>
    <p>Model Training</p>
    <p>Generate Training Data</p>
    <p>Generate ANN Indexing Properties</p>
    <p>Train Statistical Prediction Model</p>
    <p>Online Prediction</p>
    <p>Statistical Prediction Model</p>
    <p>Analitical Performance Model</p>
    <p>User Requirement</p>
    <p>Indexing Time</p>
    <p>Query Time</p>
    <p>Recall</p>
    <p>Simulated Annealing</p>
    <p>Indexing ANN on Mobile Devices</p>
    <p>Unsatisfied</p>
    <p>Offline Stage Online Stage</p>
    <p>Trained Model</p>
    <p>Prediction Results</p>
    <p>User Requirement Satisfied</p>
    <p>New Batch</p>
    <p>N on</p>
    <p>-o pt</p>
    <p>im al</p>
    <p>Pr op</p>
    <p>er tie</p>
    <p>s Optimal Properties</p>
  </div>
  <div class="page">
    <p>Overview of RIANN</p>
    <p>Model Training</p>
    <p>Generate Training Data</p>
    <p>Generate ANN Indexing Properties</p>
    <p>Train Statistical Prediction Model</p>
    <p>Online Prediction</p>
    <p>Statistical Prediction Model</p>
    <p>Analitical Performance Model</p>
    <p>User Requirement</p>
    <p>Indexing Time</p>
    <p>Query Time</p>
    <p>Recall</p>
    <p>Simulated Annealing</p>
    <p>Indexing ANN on Mobile Devices</p>
    <p>Unsatisfied</p>
    <p>Offline Stage Online Stage</p>
    <p>Trained Model</p>
    <p>Prediction Results</p>
    <p>User Requirement Satisfied</p>
    <p>New Batch</p>
    <p>N on</p>
    <p>-o pt</p>
    <p>im al</p>
    <p>Pr op</p>
    <p>er tie</p>
    <p>s Optimal Properties</p>
  </div>
  <div class="page">
    <p>Dynamic ANN Graph Construction</p>
    <p>Current graph-based ANN construction algorithms do not support flexible ANN construction</p>
    <p>RIANN: a dynamic ANN construction algorithm based on HNSW:</p>
    <p>Enables dynamic out-degree for different data points with boundary constraints;</p>
    <p>Enables dynamic candidate list size for different data points with boundary constraints</p>
  </div>
  <div class="page">
    <p>Dynamic ANN Graph Construction</p>
    <p>Workflow of RIANN:</p>
  </div>
  <div class="page">
    <p>Bases on gradient boosted decision trees (GBDT) and uses the following features:</p>
    <p>Three hyperparameters H;</p>
    <p>Data size B;</p>
    <p>Corresponding recall R</p>
    <p>Statistical Prediction Model</p>
  </div>
  <div class="page">
    <p>Statistical Prediction Model</p>
    <p>Trained on a server offline</p>
    <p>Inference on a mobile device online</p>
    <p>Training: 1. Generate synthetic indexing data;</p>
  </div>
  <div class="page">
    <p>Why GBDT?</p>
    <p>Statistical Prediction Model</p>
  </div>
  <div class="page">
    <p>Analytical Performance Model</p>
    <p>Analytical performance models to predict indexing and query time online</p>
  </div>
  <div class="page">
    <p>Analytical Performance Model</p>
    <p>Analytical performance models to predict indexing and query time online</p>
  </div>
  <div class="page">
    <p>Experiments Configuration</p>
    <p>Datasets:  SIFT: 128 dimensions  DEEP: 96 dimensions  GIST: 960 dimensions</p>
    <p>Platform:  Samsung S9:  Snapdragon 845 SoC with Kryo 385 CPU  128GB storage  Android 10  4GB LPDDR4X RAM</p>
  </div>
  <div class="page">
    <p>Evaluation results</p>
    <p>Be tt</p>
    <p>er</p>
    <p>Batch Size</p>
    <p>(b) DEEP</p>
    <p>Batch Size</p>
    <p>(c) GIST</p>
    <p>Batch Size</p>
    <p>(a) SIFT</p>
    <p>In de</p>
    <p>xi ng</p>
    <p>T im</p>
    <p>e Sp</p>
    <p>ee du</p>
    <p>p</p>
    <p>Default HNSW Optimal HNSW RIANN</p>
    <p>RIANN achieves 2.6 times speedup compared to default HNSW;  RIANN 18% performance less compared to optimal HNSW;  RIANN maintains the same recall and query time compared to the optimal and default HNSW</p>
  </div>
  <div class="page">
    <p>Evaluation results</p>
    <p>Indexing Time Requirement (ms)</p>
    <p>(c) GIST</p>
    <p>Indexing Time Requirement (ms)</p>
    <p>(b) DEEP</p>
    <p>Indexing Time Requirement (ms)</p>
    <p>(a) SIFT</p>
    <p>Sa ti</p>
    <p>sf ie</p>
    <p>d Ba</p>
    <p>tc he</p>
    <p>s (%</p>
    <p>)</p>
    <p>Default HNSW Optimal HNSW RIANN</p>
    <p>Be tt</p>
    <p>er</p>
    <p>RIANN can satisfy 91.1% of batches with compromising 3.12% recall, while default HNSW only satisfy 43.7% of batches.</p>
  </div>
  <div class="page">
    <p>Thank You!</p>
    <p>USENIX Conference on Operational Machine Learning (OpML) 2020</p>
  </div>
</Presentation>
