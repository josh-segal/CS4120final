<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Tianyi Wu</p>
    <p>Dong Xin</p>
    <p>Qiaozhu Mei</p>
    <p>Jiawei Han</p>
    <p>Promotion Analysis in</p>
    <p>Multi-Dimensional Space</p>
    <p>(UIUC)</p>
    <p>(Microsoft Research)</p>
    <p>(University of Michigan)</p>
    <p>(UIUC)</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Query execution algorithms</p>
    <p>Spurious promotion</p>
    <p>Experiment</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Query execution algorithms</p>
    <p>Spurious promotion</p>
    <p>Experiment</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Promotion analysis: introduction  Formulate and study a useful function  Promotion analysis through ranking</p>
    <p>General goal: promote a given object by leveraging subspace ranking</p>
    <p>Motivating example</p>
    <p>A marketing manager of a book retailer</p>
    <p>Basic fact  Book sales: 30th out of 100 other retailers</p>
    <p>Not particularly interesting!</p>
    <p>After promotion analysis, he discovered:  Ranked 1st in the {college students, science and technology} area</p>
    <p>Further advertising and marketing decisions</p>
    <p>Another example: person promotion</p>
    <p>Lets promote our</p>
    <p>brand!</p>
  </div>
  <div class="page">
    <p>Promotion query</p>
    <p>THE PROMOTION QUERY PROBLEM</p>
    <p>Given: an object (e.g., product, person)</p>
    <p>Goal: discover the most interesting subspaces where the</p>
    <p>object is highly ranked</p>
    <p>Observation</p>
    <p>Global rank May not be interesting</p>
    <p>Full-space Compare to all other</p>
    <p>objects in all aspects</p>
    <p>Low cost Single SQL query</p>
    <p>Local rank Can be more interesting</p>
    <p>Subspaces Compare objects in</p>
    <p>certain areas</p>
    <p>High cost Many subspaces</p>
  </div>
  <div class="page">
    <p>Subspace rank: why interesting  Discover merit and competitive strengths</p>
    <p>E.g., a bestselling car model among hybrid cars</p>
    <p>Enhance image</p>
    <p>E.g., fortune 500 company</p>
    <p>Facilitate decision making</p>
    <p>E.g., marketing plan that focuses on college students</p>
    <p>Deliver specific information</p>
    <p>E.g., top-3 university in biomedical research vs. top-20 university</p>
    <p>Extensively practiced in marketing</p>
    <p>Market segmentation</p>
    <p>Customer targeting and product positioning</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Current systems</p>
    <p>Given a condition, find top-k objects</p>
    <p>Sophisticated early termination and pruning algorithms</p>
    <p>Promotion query: not well-supported</p>
    <p>User: manual search and navigation</p>
    <p>Trial-and-error</p>
    <p>Computationally expensive</p>
    <p>The rank measure: holistic</p>
    <p>A blow-up of subspaces</p>
    <p>It should be good at</p>
    <p>Let me try some queries</p>
  </div>
  <div class="page">
    <p>Promotion analysis</p>
    <p>Multidimensional data model</p>
    <p>Fact table</p>
    <p>Location Time Object Score</p>
    <p>Lyon July T 0.5</p>
    <p>Chicago July T 0.8</p>
    <p>Chicago August S 1.0</p>
    <p>Chicago July S 1.0</p>
    <p>Lyon August V 0.3</p>
    <p>Chicago August V 0.6</p>
    <p>Chicago July V 0.7</p>
    <p>Subspace dimensions Object dimension Score dimension</p>
  </div>
  <div class="page">
    <p>Location Time Object Score</p>
    <p>Lyon July T 0.5</p>
    <p>Chicago July T 0.8</p>
    <p>Chicago August S 1.0</p>
    <p>Chicago July S 1.0</p>
    <p>Lyon August V 0.3</p>
    <p>Chicago August V 0.6</p>
    <p>Chicago July V 0.7</p>
    <p>Subspaces</p>
    <p>Given a target object T</p>
    <p>{*}</p>
    <p>{Lyon} {Chicago} {July}</p>
    <p>{Lyon, July} {Chicago, July}</p>
    <p>Subspaces of T {*} is the special case: full-space</p>
    <p>Location Time Object Score</p>
    <p>Lyon July T 0.5</p>
    <p>Chicago July T 0.8</p>
    <p>Chicago August S 1.0</p>
    <p>Chicago July S 1.0</p>
    <p>Lyon August V 0.3</p>
    <p>Chicago August V 0.6</p>
    <p>Chicago July V 0.7 SUM(T)=1.3</p>
    <p>Rank(T)=3rd / 3</p>
    <p>SUM(T)=0.5</p>
    <p>Rank(T)=1st / 2</p>
    <p>SUM(T)=0.5</p>
    <p>Rank(T)=1st / 1</p>
    <p>SUM(T)=1.3</p>
    <p>Rank(T)=1st / 3</p>
    <p>SUM(T)=1.8</p>
    <p>Rank(T)=3rd / 3</p>
    <p>SUM(T)=0.8</p>
    <p>Rank(T)=2nd / 3</p>
    <p>Aggregate and compute the target</p>
    <p>objects rank in each subspace.</p>
  </div>
  <div class="page">
    <p>Query model  Given a target object T, find the top subspaces which are</p>
    <p>promotive</p>
    <p>Promotiveness : a class of measures to quantify how well a subspace S can promote T</p>
    <p>P(S, T) = f(Rank(S, T)) * g(Sig(S))  Higher rank ~ more promotive</p>
    <p>More significant subspace (e.g., more objects) ~ more promotive</p>
    <p>Example instantiations  Simple ranking: P(S, T) = Rank-1(S, T)</p>
    <p>Iceberg condition: P(S, T) = Rank-1(S, T) * I(ObjCount(S)&gt;MinSig)</p>
    <p>Percentile ranking: P(S, T) = ObjCount(S) / Rank(S, T)</p>
  </div>
  <div class="page">
    <p>Query model  Given a target object T, find the top subspaces which are</p>
    <p>promotive</p>
    <p>Promotiveness : a class of measures to quantify how well a subspace S can promote T</p>
    <p>P(S, T) = f(Rank(S, T)) * g(Sig(S))  Higher rank ~ more promotive</p>
    <p>More significant subspace (e.g., more objects) ~ more promotive</p>
    <p>Example instantiations  Simple ranking: P(S, T) = Rank-1(S, T)</p>
    <p>Iceberg condition: P(S, T) = Rank-1(S, T) * I(ObjCount(S)&gt;MinSig)</p>
    <p>Percentile ranking: P(S, T) = ObjCount(S) / Rank(S, T)</p>
    <p>THE PROMOTION QUERY PROBLEM</p>
    <p>Input: a target object T</p>
    <p>Output: top-R subspaces with the largest P(S, T) scores</p>
    <p>/* assume simple ranking */</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Query execution algorithms</p>
    <p>(1) PromoRank framework</p>
    <p>(a) Subspace pruning</p>
    <p>(b) Object pruning</p>
    <p>(2) Promotion cubes</p>
    <p>Spurious promotion</p>
    <p>Experiment</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>The PromoRank framework</p>
    <p>Idea: use a recursive process to partition and aggregate the data to compute the target objects rank in each subspace</p>
    <p>[Beyer99] The bottom-up method {A} {B} {C} {D}</p>
    <p>{*}</p>
    <p>{AB} {AC} {AD} {BC} {BD} {CD}</p>
    <p>{ABC}</p>
    <p>{ABCD}</p>
    <p>{ABD} {ACD} {BCD}</p>
    <p>Target objects subspace lattice</p>
  </div>
  <div class="page">
    <p>{A}</p>
    <p>PromoRank: recursive process</p>
    <p>{A} {B} {C} {D}</p>
    <p>{*}</p>
    <p>{AB} {AC} {AD} {BC} {BD} {CD}</p>
    <p>{ABC}</p>
    <p>{ABCD}</p>
    <p>{ABD} {ACD} {BCD}</p>
    <p>{AB}</p>
    <p>Recursively repeat</p>
    <p>Compute Ts rank in {*} Method: create a hash table:</p>
    <p>HashTable[object] = AggregateScore</p>
    <p>Partition the data based on A Method: sorting</p>
    <p>Compute Ts rank in {A}</p>
    <p>Top-R promotive</p>
    <p>subspaces: priority</p>
    <p>queue</p>
  </div>
  <div class="page">
    <p>(1.1) Subspace pruning</p>
    <p>Idea: reuse previous results</p>
    <p>Goal: prune out unseen subspaces</p>
    <p>by bounding their promotiveness</p>
    <p>scores</p>
    <p>Sig(S): bounded</p>
    <p>Rank(S, T) : bounded {A}{A} {B} {C} {D}</p>
    <p>{*}</p>
    <p>{AB} {AC} {AD} {BC} {BD} {CD}</p>
    <p>{ABC}</p>
    <p>{ABCD}</p>
    <p>{ABD} {ACD} {BCD}</p>
    <p>{AB}</p>
  </div>
  <div class="page">
    <p>Subspace pruning</p>
    <p>Keys:</p>
    <p>Compute Ts highest possible Rank:</p>
    <p>LBRank</p>
    <p>Use the monotonicity of the aggregate</p>
    <p>measure (e.g. SUM, MAX)</p>
    <p>{B}</p>
    <p>{AB} SUM(V) = 5.5</p>
    <p>SUM(S) = 2.2</p>
    <p>SUM(T) = 1.1</p>
    <p>Rank(T) = 3rd / 3</p>
    <p>SUM(T) = 1.9</p>
    <p>SUM(V) &gt; SUM(T)</p>
    <p>SUM(S) &gt; SUM(T)</p>
    <p>Given a seen (aggregated) subspace</p>
    <p>How to prune an unseen one? SUM(V) = 5.5</p>
    <p>SUM(S) = 2.2</p>
    <p>Thus, LBRank(T) = |{V, S}|+ 1 = 3rd</p>
    <p>Any unseen subspace with low</p>
    <p>LBRank(T) can be pruned</p>
  </div>
  <div class="page">
    <p>(1.2) Object pruning</p>
    <p>Idea: avoid computing objects which do not affect rank</p>
    <p>Goal: reduce the partitioning and aggregation cost</p>
    <p>{A}</p>
    <p>{AB} {AC}</p>
    <p>{ABC}</p>
    <p>SUM(S) = 6.5</p>
    <p>SUM(T) = 2.2</p>
    <p>SUM(U) = 1.5</p>
    <p>SUM(W) = 1.0</p>
    <p>SUM(Z) = 0.8</p>
    <p>SUM(T) = 1.9SUM(T) = 1.2</p>
    <p>SUM(T) = 1.1</p>
    <p>Seen (aggregated) subspace</p>
    <p>Unseen subtree of</p>
    <p>subspaces</p>
    <p>MinScore(T) = 1.1</p>
    <p>SUM(W)&lt;MinScore(T)</p>
    <p>SUM(Z)&lt;MinScore(T)</p>
    <p>W and Z can be pruned!</p>
    <p>Power-law distribution: objects</p>
    <p>at the long-tail can be pruned</p>
  </div>
  <div class="page">
    <p>(2) Promotion cubes</p>
    <p>Method: promotion cube</p>
    <p>Offline materialization</p>
    <p>Structure  For each subspace with Sig(S)&gt;MinSig</p>
    <p>parameter: MinSig</p>
    <p>Materialize a selected sample of top-k aggregate scores in each subspace</p>
    <p>Parameter(s): k and k</p>
    <p>Observation:</p>
    <p>(1) T: tends to be highly ranked in a top subspace;</p>
    <p>(2) A top subspace is likely to contain many objects</p>
  </div>
  <div class="page">
    <p>Promotion cell</p>
    <p>For each significant subspace S, create a promotion cell</p>
    <p>Subspace S</p>
    <p>Object (sorted)</p>
    <p>k=9, k=3</p>
    <p>PCell(S)</p>
    <p>Passing the MinSig</p>
    <p>threshold</p>
    <p>Object (sorted)</p>
    <p>Promotion cell:</p>
    <p>Store aggregate scores; no object IDs</p>
    <p>Parameters MinSig, k, and k: chosen to</p>
    <p>yield a space-time tradeoff; application</p>
    <p>dependent</p>
    <p>Does not restrict query processing</p>
  </div>
  <div class="page">
    <p>{D}{A} {B} {C}</p>
    <p>{*}</p>
    <p>{AB} {AC} {AD} {BC} {BD} {CD}</p>
    <p>{ABC}</p>
    <p>{ABCD}</p>
    <p>{ABD} {ACD} {BCD}</p>
    <p>{A} {B} {C} {D}</p>
    <p>{*}</p>
    <p>{AB} {AC} {AD} {BC} {BD} {CD}</p>
    <p>{ABC}</p>
    <p>{ABCD}</p>
    <p>{ABD} {ACD} {BCD}</p>
    <p>Query execution using promotion cube</p>
    <p>Step 1: Compute Ts aggregate scores</p>
    <p>Step 2: Compute LBRanks and UBRanks and do pruning</p>
    <p>Using the promotion cube</p>
    <p>Step 3: Call PromoRank SUM(T)=3.0</p>
    <p>SUM(T)=2.2 SUM(T)=2.2 SUM(T)=1.9</p>
    <p>SUM(T)=1.2 SUM(T)=1.9 SUM(T)=1.8 SUM(T)=1.9 SUM(T)=1.5 SUM(T)=0.9</p>
    <p>SUM(T)=1.6</p>
    <p>SUM(T)=1.1 SUM(T)=0.9 SUM(T)=0.5 SUM(T)=0.3</p>
    <p>SUM(T)=0.5</p>
  </div>
  <div class="page">
    <p>{D}{A} {B} {C}</p>
    <p>{*}</p>
    <p>{AB} {AC} {AD} {BC} {BD} {CD}</p>
    <p>{ABC}</p>
    <p>{ABCD}</p>
    <p>{ABD} {ACD} {BCD}</p>
    <p>{A} {B} {C} {D}</p>
    <p>{*}</p>
    <p>{AB} {AC} {AD} {BC} {BD} {CD}</p>
    <p>{ABC}</p>
    <p>{ABCD}</p>
    <p>{ABD} {ACD} {BCD}</p>
    <p>Query execution using promotion cube</p>
    <p>Step 1: Compute Ts aggregate scores</p>
    <p>Step 2: Compute LBRanks and UBRanks and do pruning</p>
    <p>Using the promotion cube</p>
    <p>Step 3: Call PromoRank [11, 19]</p>
    <p>[51, 59] [20, 20] [21, 29]</p>
    <p>[11, 19] [61,) [31, 39] [11, 19] [21, 29] [31, 39]</p>
    <p>[31, 39]</p>
    <p>[21, 29] [61, ) [11, 19] [50, 50]</p>
    <p>[51, 59]</p>
    <p>[LBRank, UBRank]</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Query execution algorithms</p>
    <p>Spurious promotion</p>
    <p>Experiment</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>The spurious promotion problem</p>
    <p>Spurious promotion</p>
    <p>The target object is highly ranked in a subspace due to random</p>
    <p>perturbation: not meaningful</p>
    <p>Example: Michael Jordan (NBA player)</p>
    <p>Rank Subspace</p>
    <p># 1 {Year = 1995}</p>
    <p># 1 {MonthOfBirth = February}</p>
    <p># 1 {Weather = Sunny}</p>
    <p>Spurious</p>
    <p>Due to random</p>
    <p>perturbation</p>
    <p>Spurious</p>
    <p>OK</p>
  </div>
  <div class="page">
    <p>Avoid spurious promotion</p>
    <p>How to avoid such meaningless subspaces?</p>
    <p>Observation</p>
    <p>Spuriously promotive dimension: mean aggregate scores tend to</p>
    <p>be similar across different dimension values</p>
    <p>A v</p>
    <p>e ra</p>
    <p>g e</p>
    <p>r e</p>
    <p>b o</p>
    <p>u n</p>
    <p>d s</p>
    <p>/ P</p>
    <p>la y</p>
    <p>e r</p>
    <p>NBA player's birth month</p>
    <p>Mean aggregate score vs. dimension &quot;BirthMonth&quot;</p>
    <p>Center Forward GuardA v</p>
    <p>e ra</p>
    <p>g e</p>
    <p>r e</p>
    <p>b o</p>
    <p>u n</p>
    <p>d s</p>
    <p>/ P</p>
    <p>la y</p>
    <p>e r</p>
    <p>NBA player's position</p>
    <p>Mean aggregate score vs. dimension &quot;position&quot;</p>
  </div>
  <div class="page">
    <p>Preprocessing to filter out spurious</p>
    <p>dimensions</p>
    <p>Method:</p>
    <p>ANOVA (analysis of variance) test</p>
    <p>Given a subspace dimension A |A| groups of scores</p>
    <p>Between-group sum of squared</p>
    <p>deviation</p>
    <p>Within-group sum of squared</p>
    <p>deviation</p>
    <p>F-ratio(A) = SSB/SSW F-ratio too small: H0 rejected;</p>
    <p>no correlation with score.</p>
    <p>ANOVA test</p>
    <p>For each subspace</p>
    <p>dimension</p>
    <p>Spurious? Remove</p>
    <p>Yes</p>
    <p>No</p>
    <p>Top-R non-spurious subspaces</p>
    <p>Query execution</p>
    <p>i</p>
    <p>i i</p>
    <p>i</p>
    <p>i B</p>
    <p>nsize SS</p>
    <p>i</p>
    <p>i</p>
    <p>j</p>
    <p>i</p>
    <p>jW sSS</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Query execution algorithms</p>
    <p>Spurious promotion</p>
    <p>Experiment</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Experiment  Evaluation  Effectiveness (case study)  Efficiency (space-time tradeoff)</p>
    <p>Data sets  NBA  DBLP  TPC-H</p>
    <p>Methods  PromoRank  PromoRank++ (with the pruning methods)  PromoCube</p>
    <p>Implementation  Pentium 3GHz CPU / 2G memory  WinXP / Microsoft Visual C# 2008 (in-memory)</p>
  </div>
  <div class="page">
    <p>DBLP data set</p>
    <p>Subspace dimensions  Conference (2,506)</p>
    <p>Year (50)</p>
    <p>Database (boolean)</p>
    <p>Data mining (boolean)</p>
    <p>Information retrieval (boolean)</p>
    <p>Machine learning (boolean)</p>
    <p>Object dimension: Author (450K)</p>
    <p>Score dimension: Paper count</p>
    <p>Base tuples (1.76M)</p>
    <p>From title</p>
  </div>
  <div class="page">
    <p>A case study on DBLP</p>
    <p>Query</p>
    <p>object</p>
    <p>Top-3</p>
    <p>subspaces Rank Authors Top-%</p>
    <p>David Dewitt</p>
    <p>{*} 376th 451,316 0.08%</p>
    <p>{Database} 16th 65,321 0.02%</p>
    <p>{1990} 2nd 13,170 0.02%</p>
    <p>{SIGMOD} 2nd 3,519 0.06%</p>
    <p>Yufei Tao</p>
    <p>{*} 3325th 451,316 0.74%</p>
    <p>{Database, 2003} 11th 6,707 0.16%</p>
    <p>{Database, 2004} 18th 8,877 0.20%</p>
    <p>{ICDE} 30th 4,822 0.62%</p>
    <p>Promotiveness measure decided by rank and a penalty for small subspace</p>
  </div>
  <div class="page">
    <p>Query execution time (DBLP)</p>
    <p>Q u</p>
    <p>e ry</p>
    <p>e x</p>
    <p>e cu</p>
    <p>ti o</p>
    <p>n t</p>
    <p>im e</p>
    <p>( se</p>
    <p>c. )</p>
    <p>Top-R</p>
    <p>Query execution time vs. top-R</p>
    <p>PromoRank</p>
    <p>PromoRank++</p>
    <p>PromoCube</p>
    <p>S u</p>
    <p>b sp</p>
    <p>a ce</p>
    <p>s a</p>
    <p>g g</p>
    <p>re g</p>
    <p>a te</p>
    <p>d</p>
    <p>Top-R</p>
    <p>Subspace aggregated vs. top-R</p>
    <p>PromoRank</p>
    <p>PromoRank++</p>
    <p>PromoCube 0</p>
    <p>je ct</p>
    <p>s a</p>
    <p>g g</p>
    <p>re g</p>
    <p>a te</p>
    <p>d</p>
    <p>top-R</p>
    <p>Objects aggregated vs. top-R</p>
    <p>PromoRank</p>
    <p>PromoRank++</p>
    <p>PromoCube</p>
    <p>Promotion cube = 310KB</p>
    <p>(most aggregate scores are small integers)</p>
  </div>
  <div class="page">
    <p>ANOVA test: effectiveness</p>
    <p>NBA data  3,460 players (objects)</p>
    <p>Rebounds (score)</p>
    <p>18,050 base tuples</p>
    <p>F-value</p>
    <p>Critical value</p>
  </div>
  <div class="page">
    <p>TPCH benchmark  6M tuples</p>
    <p>6 subspace dimensions</p>
    <p>10,000 objects</p>
    <p>Promotion cube</p>
    <p>k = 1000, k = 8</p>
    <p>Size &lt; 1MB 0</p>
    <p>e ry</p>
    <p>e x</p>
    <p>e cu</p>
    <p>ti o</p>
    <p>n t</p>
    <p>im e</p>
    <p>( se</p>
    <p>c. )</p>
    <p>Top-R</p>
    <p>Query execution time vs. top-R</p>
    <p>PromoRank</p>
    <p>PromoRank++</p>
    <p>PromoCube</p>
    <p>e ry</p>
    <p>e x</p>
    <p>e cu</p>
    <p>ti o</p>
    <p>n t</p>
    <p>im e</p>
    <p>( se</p>
    <p>c. )</p>
    <p>Number of objects</p>
    <p>Query execution time vs. # objects</p>
    <p>PromoRank</p>
    <p>PromoRank++</p>
    <p>PromoCube</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Query execution algorithms</p>
    <p>Spurious promotion</p>
    <p>Experiment</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Promotion analysis: a new direction</p>
    <p>Search-based advertising</p>
    <p>[Borgs WWW 07] Dynamics of bid optimization in online advertisement auctions</p>
    <p>Data mining for marketing</p>
    <p>[Kleinberg DMKD 98] A microeconomic view of data mining</p>
    <p>Finding top-k attributes</p>
    <p>[Das SIGMOD 06] Ordering the attributes of query results</p>
    <p>[Miah ICDE 08] Standing out in a crowd: Selecting attributes for maximum visibility</p>
    <p>Skyline queries</p>
    <p>Future  Application: social networks, recommender systems,</p>
    <p>Data model: links, textual data, numerical,</p>
  </div>
  <div class="page">
    <p>Thank you!</p>
    <p>Any questions?</p>
    <p>Promotion Analysis in Multi-Dimensional Space</p>
    <p>Presenter: Tianyi Wu</p>
    <p>University of Illinois at Urbana-Champaign</p>
  </div>
</Presentation>
