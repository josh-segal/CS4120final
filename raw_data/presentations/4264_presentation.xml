<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Jing Ma (CUHK) 2016/7/1 1</p>
    <p>Detect Rumors in Microblog Posts Using</p>
    <p>Propagation Structure via Kernel Learning</p>
    <p>Jing Ma1, Wei Gao2*, Kam-Fai Wong1,3</p>
    <p>July 31- August 2, 2017  ACL 2017 @ Vancouver, Canada</p>
    <p>*Work done when Wei Gao was in QCRI</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Introduction</p>
    <p>Related Work</p>
    <p>Tweets Propagation</p>
    <p>Kernel Modeling</p>
    <p>Evaluation</p>
    <p>Conclusion and Future Work</p>
    <p>Outline</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Introduction</p>
    <p>A story or statement whose truth value is</p>
    <p>unverified or deliberately false</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>The fake news went viral</p>
    <p>Introduction</p>
    <p>* indicates the level of influence.</p>
    <p>Start from a grass-roots users, promoted by some influential accounts, widely spread</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Motivation</p>
    <p>We generally are not good at distinguishing rumors</p>
    <p>It is crucial to track and debunk rumors early to minimize their harmful effects.</p>
    <p>Online fact-checking services have limited topical coverage and long delay.</p>
    <p>Existing models use feature engineering  over simplistic; or recently deep neural networks  ignore propagation structures.</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Contributions</p>
    <p>Represent information spread on Twitter with propagation tree, formed by harvesting users interactions, to capture high-order propagation patterns of rumors.</p>
    <p>Propose a kernel-based data-driven method to generate relevant features automatically for estimating the similarity between two propagation tees.</p>
    <p>Enhance the proposed model by considering propagation paths from source tweet to subtrees to capture the context of transmission.</p>
    <p>Release two real-world twitter datasets with finer-grained ground truth labels.</p>
  </div>
  <div class="page">
    <p>Jing Ma(CUHK)</p>
    <p>Outline</p>
    <p>Introduction</p>
    <p>Related Work</p>
    <p>Tweets Propagation</p>
    <p>Kernel Modeling</p>
    <p>Evaluation</p>
    <p>Conclusion and Future Work</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Related Work</p>
    <p>Systems based on common sense and investigative journalism, e.g.,  snopes.com  factcheck.org</p>
    <p>Learning-based models for rumor detection  Information credibility: Castillo et al. (2011), Yang et al. (2012)  Using handcrafted and temporal features: Liu et al. (2015), Ma</p>
    <p>et al. (2015), Kwon et al. (2013, 2017)  Using cue terms: Zhao et al. (2015)  Using recurrent neural networks: Ma et al. (2016)</p>
    <p>Kernel-based works  Tree kernel: syntactic parsing (Collins and Duffy, 2001)  Question-answering (Moschitti, 2006)  Semantic analysis (Moschitti, 2004)  Relation extraction (Zhang et al., 2008)  Machine translation (Sun et al., 2010)</p>
  </div>
  <div class="page">
    <p>Jing Ma(CUHK)</p>
    <p>Outline</p>
    <p>Introduction</p>
    <p>Related Work</p>
    <p>Tweets Propagation</p>
    <p>Kernel Modeling</p>
    <p>Evaluation</p>
    <p>Conclusion and Future Work</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Problem Statement</p>
    <p>Given a set of microblog posts R = {}, model each source tweet as a tree structure T  = &lt; ,  &gt;, where each node  = (, , ) provide the creator of the post, the text content and post time. And  is directed edges corresponding to response relation.</p>
    <p>Task 1  finer-grained classification for each source post</p>
    <p>false rumor, true rumor, non-rumor, unverified rumor</p>
    <p>Task 2  detect rumor as early as possible</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Propagation Structure</p>
    <p>Text Features Propagation &amp; Temporal</p>
    <p>Features</p>
    <p>User Features</p>
    <p>Propagatio</p>
    <p>n tree</p>
    <p>O: Walmart donates $10,000 to support Darren</p>
    <p>Wilson and the on going racist police murders</p>
    <p>U1: You don't honestly</p>
    <p>believe that, do you?</p>
    <p>U2: i honestly do</p>
    <p>U5: where is the</p>
    <p>credible link?</p>
    <p>U3: Sam Walton gave</p>
    <p>THINK.</p>
    <p>U4: Sam Walton was dead</p>
    <p>before #Obama was born.</p>
    <p>He have wired campaign</p>
    <p>donation from heavens.</p>
    <p>U6: Need proof of</p>
    <p>this-can't find any...</p>
    <p>U7: not sure....sorry I</p>
    <p>see a meme trending</p>
    <p>but no proof...perhaps</p>
    <p>if we had real journalists?</p>
    <p>U8: I'm pretty good at</p>
    <p>research-I think this is not</p>
    <p>true-plenty of other</p>
    <p>reasons to boycott WalMart. :)</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Observation &amp; Hypothesis</p>
    <p>Content-based signals (e.g., stance) (Zhao et al., 2015)</p>
    <p>Network-based signals (e.g., relative influence) and temporal traits (Kwon et al., 2017)</p>
    <p>Our hypothesis: high-order patterns needs to/could be captured using kernel method</p>
    <p>(a) In rumors (b) In non-rumors</p>
    <p>Doubt</p>
    <p>Support</p>
    <p>Neutral</p>
    <p>Influence/Popularity</p>
  </div>
  <div class="page">
    <p>Jing Ma(CUHK)</p>
    <p>Outline</p>
    <p>Introduction</p>
    <p>Related Work</p>
    <p>Tweets Propagation</p>
    <p>Kernel Modeling</p>
    <p>Evaluation</p>
    <p>Conclusion and Future Work</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Traditional Tree Kernel (TK)</p>
    <p>TK compute the syntactic similarity between two sentences by counting the common subtrees</p>
    <p>Kernel Function:1 2 (,)</p>
    <p>, : common subtrees rooted at  and</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Propagation Tree Kernel (PTK)</p>
    <p>Why PTK?  Existing tree kernel cannot apply here, since in our case (1) node</p>
    <p>is a vector of continuous numerical values; (2) similarity needs to be softly defined between two trees instead of hardly counting on identical nodes</p>
    <p>Similarity Definition  User Similarity: (,)=||  ||</p>
    <p>Content Similarity: (,)= |()()|</p>
    <p>|()()|</p>
    <p>Node Similarity:</p>
    <p>, =  ((,)+(1)(,) )</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Propagation Tree Kernel</p>
    <p>Given two trees 1 =&lt; 1,1 &gt; and 2 =&lt; 2,2 &gt; PTK compute similarity between them by enumerating all similar subtrees.</p>
    <p>Kernel Function: 1  ,  + 2</p>
    <p>,   and</p>
    <p>are similar node pairs from 1 and 2 respectively</p>
    <p>= arg max</p>
    <p>2</p>
    <p>(,)</p>
    <p>, : similarity of two subtrees rooted at  and</p>
    <p>Kernel algorithm</p>
    <p>, = (,);</p>
    <p>, = (,) = (  ,())</p>
    <p>( + ( , ,(,)));</p>
    <p>1</p>
    <p>2 .</p>
    <p>.</p>
    <p>4  5</p>
    <p>Sub-tree</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Context-Sensitive Extension of PTK</p>
    <p>Consider propagation paths from root node to the subtree</p>
    <p>Why cPTK?  PTK ignores the clues outside the subtrees and the route embed how the</p>
    <p>propagation happens.</p>
    <p>Similar intuition to context-sensitive tree kernel (Zhou et al., 2007)</p>
    <p>Kernel Function: 1 =0  11</p>
    <p>(, ) + 2 =0</p>
    <p>21</p>
    <p>( ,)</p>
    <p>: the length of propagation path from root  to .</p>
    <p>: the x-th ancestor of .</p>
    <p>(,  ): similarity of subtrees rooted at [] and   .</p>
    <p>Kernel Algorithm 1) if [] and [] are the x-th ancestor nodes of  and  ,then</p>
    <p>,   = ([],[]);</p>
    <p>,  =  , ;) i.e., PTK)</p>
    <p>.</p>
    <p>.</p>
    <p>4  5</p>
    <p>Context path</p>
    <p>Subtree root</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Rumor Detection via Kernel Learning</p>
    <p>Incorporate the proposed tree kernel functions (i.e., PTK or</p>
    <p>cPTK) into a supervised learning framework, for which we</p>
    <p>utilize a kernel-based SVM classifier.</p>
    <p>Avoid feature engineering  the kernel function can explore</p>
    <p>an implicit feature space when calculating the similarity</p>
    <p>between two objects.</p>
    <p>For multi-class task, perform One vs. all, i.e., building K (#</p>
    <p>of classes) basic binary classifiers so as to separate one class</p>
    <p>from all the others.</p>
  </div>
  <div class="page">
    <p>Jing Ma(CUHK)</p>
    <p>Outline</p>
    <p>Introduction</p>
    <p>Related Work</p>
    <p>Tweets Propagation</p>
    <p>Kernel Modeling</p>
    <p>Evaluation</p>
    <p>Conclusion and Future Work</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Data Collection</p>
    <p>Construct our propagation tree datasets based on two reference Twitter datasets:</p>
    <p>Twitter15 (Liu et al, 2015)</p>
    <p>Twitter16 (Ma et al, 2016)</p>
    <p>Extract popular</p>
    <p>source tweets</p>
    <p>Collect</p>
    <p>propagation</p>
    <p>threads</p>
    <p>revised labels</p>
    <p>( retweets: Twrench.com )</p>
    <p>( replies: Web crawler )</p>
    <p>Convert event label:</p>
    <p>binary -&gt; quarternary</p>
    <p>(Source tweet: highly retweeted or replied)</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Statistics of Data Collection</p>
    <p>URL of the datasets: https://www.dropbox.com/s/0jhsfwep3ywvpca/rumdetect2017.zip?dl=0</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Approaches to compare with</p>
    <p>DTR: Decision tree-based ranking model using enquiry phrases to identify trending rumors (Zhao et al., 2015)</p>
    <p>DTC and SVM-RBF: Twitter information credibility model using Decision Tree Classifier (Castillo et al., 2011); SVM-based model with RBF kernel (Yang et al., 2012)</p>
    <p>RFC: Random Forest Classifier using three parameters to fit the temporal tweets volume curve (Kwon et al., 2013)</p>
    <p>SVM-TS: Linear SVM classifier using time-series structures to model the variation of social context features. (Ma et al., 2015)</p>
    <p>GRU: The RNN-based rumor detection model. (Ma et al., 2016)</p>
    <p>BOW: linear SVM classifier using bag-of-words.</p>
    <p>Ours (PTK and cPTK): Our kernel based model</p>
    <p>PTK- and cPTK-: Our kernel based model with subset node features.</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Results on Twitter15</p>
    <p>Method Accu. NR FR TR UR</p>
    <p>F1 F1 F1 F1</p>
    <p>DTR 0.409 0.501 0.311 0.364 0.473</p>
    <p>SVM-RBF 0.318 0.455 0.037 0.218 0.225</p>
    <p>DTC 0.454 0.733 0.355 0.317 0.415</p>
    <p>SVM-TS 0.544 0.796 0.472 0.404 0.483</p>
    <p>RFC 0.565 0.810 0.422 0.401 0.543</p>
    <p>GRU 0.646 0.792 0.574 0.608 0.592</p>
    <p>BOW 0.548 0.564 0.524 0.582 0.512</p>
    <p>PTK- 0.657 0.734 0.624 0.673 0.612</p>
    <p>cPTK- 0.697 0.760 0.645 0.696 0.689</p>
    <p>PTK 0.710 0.825 0.685 0.688 0.647</p>
    <p>cPTK 0.750 0.804 0.698 0.765 0.733</p>
    <p>NR: Non-Rumor; FR: False Rumor;</p>
    <p>TR: True Rumor; UR: Unverified Rumor;</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Results on Twitter16</p>
    <p>Method Accu. NR FR TR UR</p>
    <p>F1 F1 F1 F1</p>
    <p>DTR 0.414 0.394 0.273 0.630 0.344</p>
    <p>SVM-RBF 0.321 0.423 0.085 0.419 0.037</p>
    <p>DTC 0.465 0.643 0.393 0.419 0.403</p>
    <p>SVM-TS 0.574 0.755 0.420 0.571 0.526</p>
    <p>RFC 0.585 0.752 0.415 0.547 0.563</p>
    <p>GRU 0.633 0.772 0.489 0.686 0.593</p>
    <p>BOW 0.585 0.553 0.556 0.655 0.578</p>
    <p>PTK- 0.653 0.673 0.640 0.722 0.567</p>
    <p>cPTK- 0.702 0.711 0.664 0.816 0.608</p>
    <p>PTK 0.722 0.784 0.690 0.786 0.644</p>
    <p>cPTK 0.732 0.740 0.709 0.836 0.686</p>
    <p>NR: Non-Rumor; FR: False Rumor;</p>
    <p>TR: True Rumor; UR: Unverified Rumor;</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Results on Early Detection</p>
    <p>In the first few hours, the accuracy of the kernel-based methods climbs more rapidly and stabilize more quickly</p>
    <p>cPTK can detect rumors with 72% accuracy for Twitter15 and 69.0% for Twitter16 within 12 hours, which is much earlier than the baselines and the mean official report times</p>
    <p>(a) Twitter15 DATASET (b) Twitter16 DATASET</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Early Detection Example</p>
    <p>Example subtree of a rumor captured by the algorithm at early stage of propagation</p>
    <p>Influential users boost its propagation, unpopular-to-popular information flow,</p>
    <p>Textual signals (underlined)</p>
  </div>
  <div class="page">
    <p>Jing Ma(CUHK)</p>
    <p>Outline</p>
    <p>Introduction</p>
    <p>Related Work</p>
    <p>Tweets Propagation</p>
    <p>Kernel Modeling</p>
    <p>Evaluation</p>
    <p>Conclusion and Future Work</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK)</p>
    <p>Conclusion and future work</p>
    <p>Apply kernel learning method for rumor debunking by utilizing the propagation tree structures.</p>
    <p>Propagation tree encodes the spread of a source tweet with complex structured patterns and flat information regarding content, user and time associated with the tree nodes.</p>
    <p>Our kernel are combined under supervised framework for identifying rumors of finer-grained levels by directly measuring the similarity among propagation trees.</p>
    <p>Future work:  Explore network representation method to improve the rumor</p>
    <p>detection task.  Develop unsupervised models due to massive unlabeled data</p>
    <p>from social media.</p>
  </div>
  <div class="page">
    <p>Jing Ma (CUHK) 2016/7/1 29</p>
    <p>Q &amp; A</p>
  </div>
</Presentation>
