<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Scale Internet Delay Measurements</p>
    <p>Turbo King: Framework for LargeTurbo King: Framework for Large-</p>
    <p>Scale Internet Delay MeasurementsScale Internet Delay Measurements</p>
    <p>Derek LeonardDerek Leonard</p>
    <p>Joint work with Dmitri LoguinovJoint work with Dmitri Loguinov</p>
    <p>Internet Research LabInternet Research Lab</p>
    <p>Department of Computer ScienceDepartment of Computer Science</p>
    <p>Texas A&amp;M University, College Station, TX 77843Texas A&amp;M University, College Station, TX 77843</p>
    <p>April 15, 2008April 15, 2008</p>
  </div>
  <div class="page">
    <p>AgendaAgendaAgenda</p>
    <p>Introduction</p>
    <p>Related Work</p>
    <p>Understanding King</p>
    <p>Turbo King</p>
    <p>Measurement Algorithm</p>
    <p>Discovering Nameservers</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Introduction IIntroduction IIntroduction I</p>
    <p>Distance estimation in the Internet has</p>
    <p>recently evolved into a large field</p>
    <p>The goal is to estimate or measure latency (delay)</p>
    <p>between hosts</p>
    <p>Can be used to provide better service to end</p>
    <p>users and construct more efficient networks</p>
    <p>Increasing responsiveness for online games</p>
    <p>Quickly locating the closest server in a CDN</p>
    <p>Creating topologically-aware P2P networks</p>
  </div>
  <div class="page">
    <p>Introduction IIIntroduction IIIntroduction II</p>
    <p>Focus of our work</p>
    <p>Create a method for distance estimation that</p>
    <p>requires no infrastructure to be deployed throughout the Internet</p>
    <p>Allow for the generation of a much larger Internet latency matrix than previous work</p>
    <p>Requirements</p>
    <p>Produce accurate latency estimates</p>
    <p>Minimize the impact of our measurements on the</p>
    <p>network</p>
  </div>
  <div class="page">
    <p>AgendaAgendaAgenda</p>
    <p>Introduction</p>
    <p>Related Work</p>
    <p>Understanding King</p>
    <p>Turbo King</p>
    <p>Measurement Algorithm</p>
    <p>Discovering Nameservers</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>King IKing IKing I</p>
    <p>King uses existing DNS infrastructure to</p>
    <p>estimate the latency between two arbitrary</p>
    <p>hosts in the Internet</p>
    <p>Assumes end-hosts are within close proximity to</p>
    <p>the authoritative nameserver responsible for their</p>
    <p>IP addresses</p>
  </div>
  <div class="page">
    <p>King IIKing IIKing II</p>
    <p>Original King (O-King)</p>
    <p>Main algorithm proposed by Gummadi et al.</p>
    <p>Uses queries for authoritative zone data to</p>
    <p>measure the latency between two remote DNS</p>
    <p>nameservers</p>
    <p>Direct King (D-King)</p>
    <p>Also proposed by Gummadi et al., but not fully</p>
    <p>implemented or evaluated in the literature</p>
    <p>Alternative to O-King that forces a nameserver to</p>
    <p>query an arbitrary target server</p>
  </div>
  <div class="page">
    <p>AgendaAgendaAgenda</p>
    <p>Introduction</p>
    <p>Related Work</p>
    <p>Understanding King</p>
    <p>Turbo King</p>
    <p>Measurement Algorithm</p>
    <p>Discovering Nameservers</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Understanding O-King IUnderstanding OUnderstanding O--King IKing I</p>
    <p>While O-Kings simplicity is attractive, it has</p>
    <p>certain drawbacks</p>
    <p>Zones with multiple</p>
    <p>authoritative nameservers</p>
    <p>Recommended by DNS RFC</p>
    <p>Suggested to be placed in</p>
    <p>different networks</p>
    <p>33% of zones have at least</p>
    <p>one server in a different</p>
    <p>network</p>
  </div>
  <div class="page">
    <p>Understanding O-King IIUnderstanding OUnderstanding O--King IIKing II</p>
    <p>DNS Forwarders</p>
    <p>Server that aggregates DNS queries initiated from</p>
    <p>within a network targeting external destinations</p>
    <p>Recursive nameservers receiving requests for</p>
    <p>zones not under their control often use forwarders to reduce their own load</p>
    <p>End-user not notified</p>
    <p>Unnoticed by O-King</p>
    <p>Potentially introduces</p>
    <p>non-trivial extra latency</p>
  </div>
  <div class="page">
    <p>Understanding O-King IIIUnderstanding OUnderstanding O--King IIIKing III</p>
    <p>Cache pollution: insertion of DNS zone data that has not been requested by a local user into the cache of a nameserver  The purpose of a DNS cache is to reduce latency</p>
    <p>mainly for local users</p>
    <p>Local users are those that rely principally on the nameserver to resolve queries</p>
    <p>O-King seed queries pollute the cache with two records for each target nameserver</p>
    <p>At large scale records inserted by O-King would dominate local caches  Would likely be viewed as intrusive by admins</p>
  </div>
  <div class="page">
    <p>Understanding D-King IUnderstanding DUnderstanding D--King IKing I</p>
    <p>Additional Complexity</p>
    <p>A domain name and extra infrastructure (DNS</p>
    <p>server with dedicated IP) are required</p>
    <p>O-King is so simple, is D-King worth it?</p>
    <p>Forwarders</p>
    <p>D-King does not detect or avoid forwarders</p>
    <p>Cache Pollution</p>
    <p>D-King only requires caching records for one server</p>
    <p>However, the cached records are completely</p>
    <p>useless to others</p>
  </div>
  <div class="page">
    <p>AgendaAgendaAgenda</p>
    <p>Introduction</p>
    <p>Related Work</p>
    <p>Understanding King</p>
    <p>Turbo King</p>
    <p>Measurement Algorithm</p>
    <p>Discovering Nameservers</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Turbo King ITurbo King ITurbo King I</p>
    <p>Turbo King (T-King) basics</p>
    <p>Stand-alone service</p>
    <p>Accepts as arguments the IP addresses of two end-hosts A and B</p>
    <p>Returns estimated latency from host A to B</p>
    <p>Two modes of operation</p>
    <p>Passive: waits for requests before generating</p>
    <p>latency estimates</p>
    <p>Active: preemptively make latency estimates to eventually obtain an entire N  N matrix</p>
  </div>
  <div class="page">
    <p>Turbo King IITurbo King IITurbo King II</p>
    <p>Server selection is a major difference between King and Turbo King</p>
    <p>Turbo King maintains a large list S of N nameservers  Currently both recursive nameservers and other</p>
    <p>authoritative nameservers</p>
    <p>Use BGP data to match servers from S to both A and B  Negates the assumption that the authoritative</p>
    <p>nameservers for end-host IP addresses are closest</p>
  </div>
  <div class="page">
    <p>AgendaAgendaAgenda</p>
    <p>Introduction</p>
    <p>Related Work</p>
    <p>Understanding King</p>
    <p>Turbo King</p>
    <p>Measurement Algorithm</p>
    <p>Discovering Nameservers</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Measurement Algorithm IMeasurement Algorithm IMeasurement Algorithm I</p>
    <p>Measurement algorithm</p>
    <p>Multi-threaded application with client and server</p>
    <p>operations communicating together</p>
    <p>Timestamps taken for every packet sent/received</p>
    <p>by T-King</p>
    <p>All answers returned by DNSServer have</p>
    <p>zero TTL</p>
    <p>Let dij be the delay between steps i and j</p>
  </div>
  <div class="page">
    <p>Measurement Algorithm IIMeasurement Algorithm IIMeasurement Algorithm II</p>
    <p>Local latency sample Li = d12</p>
    <p>Remote latency sample Ri = d36</p>
    <p>Latency estimate: min{Ri} - min{Li}</p>
    <p>Detection and avoidance of forwarders  Compares IP addresses used to contact T-King</p>
    <p>If different, exclude the original query IP and add the newly discovered one to S for later use</p>
  </div>
  <div class="page">
    <p>AgendaAgendaAgenda</p>
    <p>Introduction</p>
    <p>Related Work</p>
    <p>Understanding King</p>
    <p>Turbo King</p>
    <p>Measurement Algorithm</p>
    <p>Discovering Nameservers</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Discovering Nameservers IDiscovering Discovering NameserversNameservers II</p>
    <p>Discovering Nameservers</p>
    <p>T-King is most effective when its list S of</p>
    <p>nameservers is large</p>
    <p>Ideally S would contain a nameserver for each /24</p>
    <p>network in the Internet</p>
    <p>The current version builds S by exhaustively</p>
    <p>crawling the reverse DNS (IP to domain</p>
    <p>name) tree</p>
    <p>Only accepts authoritative responses</p>
    <p>Maximizes depth of the crawl and subsequently</p>
    <p>the number of discovered nameservers</p>
  </div>
  <div class="page">
    <p>Discovering Nameservers IIDiscovering Discovering NameserversNameservers IIII</p>
    <p>Results from the reverse DNS crawl</p>
    <p>Our crawler is approximately seven times faster than a previous effort and discovered 2.4 times more nameservers</p>
    <p>We found that 32% use a forwarder for queries</p>
  </div>
  <div class="page">
    <p>Discovering Nameservers IIIDiscovering Discovering NameserversNameservers IIIIII</p>
    <p>Coverage of Internet by discovered servers</p>
    <p>We found that 49% of Gnutella peers and 88% of web servers are in a BGP prefix that contains at least one nameserver in T-King</p>
    <p>For recursive servers, 37% of Gnutella and 73% of web servers are covered</p>
  </div>
  <div class="page">
    <p>AgendaAgendaAgenda</p>
    <p>Introduction</p>
    <p>Related Work</p>
    <p>Understanding King</p>
    <p>Turbo King</p>
    <p>Measurement Algorithm</p>
    <p>Discovering Nameservers</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Evaluation IEvaluation IEvaluation I</p>
    <p>We took 2,450 measurements for 50 nameservers using O</p>
    <p>King and T-King</p>
    <p>Ratio of O-King to T-King used</p>
    <p>to highlight the differences</p>
    <p>Four samples per estimate</p>
    <p>Conclusion: 15% of O-King estimates are more than 10%</p>
    <p>different from T-King and 8% of O-King estimates are more</p>
    <p>than 20% different</p>
  </div>
  <div class="page">
    <p>Evaluation IIEvaluation IIEvaluation II</p>
    <p>We next compare the convergence properties</p>
    <p>of T-King vs. O-King</p>
    <p>Consistent samples are the goal so that an</p>
    <p>accurate estimate requires fewer samples</p>
    <p>To do this, we repeated the previous 2,450</p>
    <p>latency estimates using sample sizes ranging</p>
    <p>from one to four</p>
    <p>We then calculated the ratio of O-King to O-King and T-King to T-King and plotted the CDF</p>
    <p>More consistent samples are centered at one on the x-axis</p>
  </div>
  <div class="page">
    <p>Evaluation IIIEvaluation IIIEvaluation III</p>
    <p>Conclusion: The original suggestion that O</p>
    <p>King use 4 samples is sound</p>
    <p>Conclusion: T-King converges to a consistent</p>
    <p>estimate in only 2 samples</p>
  </div>
  <div class="page">
    <p>Evaluation IVEvaluation IVEvaluation IV</p>
    <p>The overhead associated with each method</p>
    <p>is critical when considering a large-scale</p>
    <p>measurement</p>
    <p>Consider the generation of a hypothetical latency matrix of 100,000  100,000 hosts</p>
    <p>Requires 10 billion estimates to complete</p>
    <p>Consider 4 samples per estimate for O-King,</p>
    <p>Examine both total number of queries sent</p>
    <p>and total cache pollution entries</p>
  </div>
  <div class="page">
    <p>Evaluation VEvaluation VEvaluation V</p>
    <p>Network overhead to complete 10 billion</p>
    <p>estimates</p>
    <p>Turbo King: 70 billion queries</p>
    <p>D-King: 100 billion queries (1.43 times T-King)</p>
    <p>O-King: 150 billion queries (2.14 times T-King)</p>
    <p>Conclusion: The increased accuracy and</p>
    <p>lack of seeding required by T-King results in a</p>
    <p>significant reduction in bandwidth usage</p>
  </div>
  <div class="page">
    <p>Evaluation VIEvaluation VIEvaluation VI</p>
    <p>Cache pollution created for 10 billion estimates  Two entries for every nameserver entered into</p>
    <p>cache</p>
    <p>Total polluted entries in DNS caches  O-King: 48 billion entries (2.4 nameservers per zone</p>
    <p>measured from our reverse crawl)</p>
    <p>D-King: 20 billion entries</p>
    <p>T-King: 200,000 entries (0.0004% of O-King and 0.0001% of D-King)</p>
    <p>Conclusion: T-King is much more suitable for large-scale measurements in this regard</p>
  </div>
  <div class="page">
    <p>AgendaAgendaAgenda</p>
    <p>Introduction</p>
    <p>Related Work</p>
    <p>Understanding King</p>
    <p>Turbo King</p>
    <p>Measurement Algorithm</p>
    <p>Discovering Nameservers</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>ConclusionConclusionConclusion</p>
    <p>We proposed Turbo King as a framework to</p>
    <p>perform large-scale Internet latency</p>
    <p>measurements</p>
    <p>More accurate than both O-King and D-King</p>
    <p>Requires fewer samples than O-King</p>
    <p>Much more scalable in terms of both bandwidth</p>
    <p>usage and cache pollution</p>
    <p>Our next step is to generate an N  N latency</p>
    <p>matrix using T-King</p>
    <p>Please see the paper for more details</p>
  </div>
</Presentation>
