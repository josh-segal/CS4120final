<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Consistency Maintenance</p>
    <p>Based on the Mark &amp; Retrace</p>
    <p>Technique in Groupware</p>
    <p>Systems Ning Gu, Jiang-Ming Yang and Qi-Wei Zhang</p>
    <p>Fudan University</p>
    <p>Jiang-Ming Yang</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 2</p>
    <p>OUTLINE  Introduction &amp; Motivation</p>
    <p>Address Space Transformation</p>
    <p>Mark &amp; Retrace Technique</p>
    <p>Efficiency Analysis</p>
    <p>Undo Supported</p>
    <p>Related Works &amp; Conclusions</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 3</p>
    <p>OUTLINE  Introduction &amp; Motivation</p>
    <p>Address Space Transformation</p>
    <p>Mark &amp; Retrace Technique</p>
    <p>Efficiency Analysis</p>
    <p>Undo Supported</p>
    <p>Related Works &amp; Conclusions</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 4</p>
    <p>INTRODUCTION  Whats Group Editors?</p>
    <p>Most commonly used groupware applications.  Multiple users participation  User can edit and modify shared data objects,</p>
    <p>such as word, graphics, and media documents, using a computer network.</p>
    <p>Techniques for building group editors have been widely applied and practiced.</p>
    <p>A Powerful research vehicles in exploring solution to consistency problems.</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 5</p>
    <p>MOTIVATION &amp; CHALLENGE  In the past decade, OT method has been</p>
    <p>gradually improved.</p>
    <p>Control Algorithms  OT Functions</p>
    <p>An OT algorithm which can maintains the CCI model and solved TP2 puzzle and false-tie (ERV) puzzle will be very intricate.</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 6</p>
    <p>OUTLINE  Introduction &amp; Motivation</p>
    <p>Address Space Transformation</p>
    <p>Mark &amp; Retrace Technique</p>
    <p>Efficiency Analysis</p>
    <p>Undo Supported</p>
    <p>Related Works &amp; Conclusions</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 7</p>
    <p>ADDRESS SPACE TRANSFORMATION  Example 1:</p>
    <p>Initial document is abd.  O4 and O5 are two</p>
    <p>concurrent operations.</p>
    <p>In OT Technique, due to the existence of concurrent operation O4, O5 shall be transformed to Insert [c, 2] before execution on site U1.</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 8</p>
    <p>ADDRESS SPACE TRANSFORMATION</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 9</p>
    <p>OUTLINE  Introduction &amp; Motivation</p>
    <p>Address Space Transformation</p>
    <p>Mark &amp; Retrace Technique</p>
    <p>Efficiency Analysis</p>
    <p>Undo Supported</p>
    <p>Related Works &amp; Conclusions</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 10</p>
    <p>THE STRUCTURE OF MARK &amp; RETRACE  A document is a liner</p>
    <p>structure composed of characters.</p>
    <p>Each character may have several operations targeting itself while each operation targets only one character.</p>
    <p>Add the effective / ineffective mark information to every node in the liner structure.</p>
    <p>The address space can be expressed as the effective character nodes from left to right.</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 11</p>
    <p>THE RETRACING PROCEDURE  The goal of the Retracing procedure is to retrace</p>
    <p>the address space to the state at a given timestamp SV.</p>
    <p>Consider the following four situations.  if SVOins  SV , then this node is marked ineffective;  if SVOins  SV and there is no Delete targeting this</p>
    <p>character node, then this node is marked effective;  if SVOins  SV and SVOdel  SV , then this node is</p>
    <p>marked effective;  if SVOins  SV but SVOdel  SV , then this node is</p>
    <p>marked ineffective.</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 12</p>
    <p>THE CONTROL ALGORITHM  Control-Algorithm (DocS, O), execute O on</p>
    <p>DocS.</p>
    <p>Retracing(DocS, SVO)</p>
    <p>Execute the operation O, and attach the operation with its timestamp to the character node.</p>
    <p>SVS[R]  SVS[R] + 1</p>
    <p>Retracing(DocS, SVS)</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 13</p>
    <p>EXAMPLE 1:  Effective node &amp; ineffective</p>
    <p>node</p>
    <p>User U1 intends to execute operation Insert[c, 3] with timestamp &lt;1,1,2&gt;.</p>
    <p>Users view is ad.</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 14</p>
    <p>EXAMPLE 1:  First, retrace the</p>
    <p>document to the state at the time of timestamp &lt;1,1,2&gt;.</p>
    <p>Conceal the effect of operation Delete[b, 2].</p>
    <p>Character node b become Effective.</p>
    <p>Users view is abd.</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 15</p>
    <p>EXAMPLE 1:  The documents state at the time of timestamp</p>
    <p>&lt;1,1,2&gt; is the state at the time of operations ( Insert [c, 3] ) generation.</p>
    <p>Operation Insert [c, 3] can be executed directly in this new address space.</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 16</p>
    <p>EXAMPLE 1:  The State Vector of the local site has been adjusted to</p>
    <p>&lt;2,1,2&gt; after the execution is finished.</p>
    <p>And then it retraces to the view acd of new State Vector by restoring the effect of operation Delete[b, 2] and adding the execution effect of the new operation Insert[c, 3].</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 17</p>
    <p>OPERATION EXECUTION  The Delete operations execution is simple. The process is to find the</p>
    <p>corresponding character node, attach the operation on the character node and then perform the Retracing procedure to give this node a correct effective/ineffective mark.</p>
    <p>The Insert is to search for an Inserting position in the address space, which is corresponding to a range in document between two effective character nodes. There may exist some other ineffective character nodes in this range.</p>
    <p>A Range-Scan process to determine the right-and-left relation between the new Insert and these ineffective character nodes and then find an accurate position.</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 18</p>
    <p>OPERATION EXECUTION  To realize the comparability between two Insert</p>
    <p>operations, define a TOrder function:</p>
    <p>Given two character nodes CNa and CNb. The attached operations are generated at site a and site b, and are timestamped by SVa and SVb.</p>
    <p>TOrder(CNa) &lt; TOrder(CNb), iff</p>
    <p>sum(SVa) &lt; sum(SVb)</p>
    <p>a &lt; b, when sum(SVa) = sum(SVb)</p>
    <p>Where sum(SV) =</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 19</p>
    <p>OPERATION EXECUTION  INSERT RULES:</p>
    <p>1) The new character node should be inserted in the range.</p>
    <p>2) If there is a existed character node CN, the insert operation of CN is causally before CNnew, CNnew should be inserted on the left of CN.</p>
    <p>3) If there is a existed character node CN1, TOrder(CNnew)&lt;TOrder(CN1) and CN1 do not meets the rule 4, CNnew should be insert on the left of CN1.</p>
    <p>4) Otherwise, if there is two existed character node CN1 and CN2, CN2 is on the right of CN1, CNnew should be inserted on the right of CN2 when :</p>
    <p>TOrder(CNnew)&lt;TOrder(CN1)</p>
    <p>TOrder(CNnew)&gt;TOrder(CN2)</p>
    <p>CN2 is causally before CN1</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 20</p>
    <p>OPERATION EXECUTION  INSERT EXECUTION:</p>
    <p>Scan the range from left to right.  If there is a existed character node meets the rule 2,</p>
    <p>return this position immediately.  If there is a existed character node meets the rule 3,</p>
    <p>record this position into a variable P.  If the record meets the rule 4, clean the record.</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 21</p>
    <p>CAUSALITY PRESERVATION  To achieve causality preservation, we only</p>
    <p>need to ensure that every remote operation is causally-ready before its execution, which we call execution condition.</p>
    <p>It should be noted that even if causality is preserved, the execution order of the operations would still be different because of their different orders of arrival at different sites.</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 22</p>
    <p>CONVERGENCE</p>
    <p>The Proof</p>
    <p>2 operations</p>
    <p>Same Scan-Ranges  Different Scan-Ranges</p>
    <p>n operations</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 23</p>
    <p>INTENTION PRESERVATION  Since a Insert operation can find the correct scan</p>
    <p>range and a Delete operation can find its corresponding character node at any sites and they do not interfere with other operations, those satisfy operations definition.</p>
    <p>However, there are still some arguments about the proof of achieving intention preservation, we plan to present more about intentions formal definition and the complete proof in the next future.</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 24</p>
    <p>OUTLINE  Introduction &amp; Motivation</p>
    <p>Address Space Transformation</p>
    <p>Mark &amp; Retrace Technique</p>
    <p>Efficiency Analysis</p>
    <p>Undo Supported</p>
    <p>Related Works &amp; Conclusions</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 25</p>
    <p>OPERATION EXECUTION EFFICIENCY Reorganize the character nodes to a Red-Black Tree and</p>
    <p>ensure the result of pre-order traversal of the Black-Red tree is the original linear order.</p>
    <p>Every node of the tree saves two additional data the two numbers of the effective character nodes of left sub-tree and right sub-tree.</p>
    <p>The amortized costs of Insert and Delete are both O(logn).</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 26</p>
    <p>EFFICIENCY OPTIMIZATION OF RETRACING Use the Garbage Collection method to handle a</p>
    <p>operation list containing the operations which havent been executed at some sites.</p>
    <p>Suppose the length of operation list is h which means we need to check and change at most h character nodes effective/ineffective mark during Retracting process.</p>
    <p>In the second Retracing process, we restore the changed nodes instead of the Retracing process. After then, we only need to deal with the targeting character node of the new operation.</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 27</p>
    <p>OUTLINE  Introduction &amp; Motivation</p>
    <p>Address Space Transformation</p>
    <p>Mark &amp; Retrace Technique</p>
    <p>Efficiency Analysis</p>
    <p>Undo Supported</p>
    <p>Related Works &amp; Conclusions</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 28</p>
    <p>UNDO SUPPORTED  Given an Undo operation O2, Undo[O1], in which O1s</p>
    <p>target position is P1 and timestamped by SVO1. The execution process can be performed as follow.</p>
    <p>Retrace the address space to the state at the time SVO1;  count to the P1th effective character node and attach O2</p>
    <p>on it.  Then the second Retracing process takes this new Undo</p>
    <p>into consideration and gives this node the correct effective / ineffective mark.</p>
    <p>Append a Delete counter to every character node to realize the Multi-version / Single-display strategy.</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 29</p>
    <p>OUTLINE  Introduction &amp; Motivation</p>
    <p>Address Space Transformation</p>
    <p>Mark &amp; Retrace Technique</p>
    <p>Efficiency Analysis</p>
    <p>Undo Supported</p>
    <p>Related Works &amp; Conclusions</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 30</p>
    <p>RELATED WORKS  The initial concept of Mark &amp; Retrace was proposed early in</p>
    <p>Document Mark Technique but was not able to solve the dOPT puzzle.</p>
    <p>dOPT, adOPTed and GOTO cannot fully satisfy TP2.</p>
    <p>NICE and SOCT3/4 is not able to resolve the false-tie (ERV) puzzle.</p>
    <p>GOT fail in the case of complicated false-tie (ERV) scenarios.</p>
    <p>Imine et al. tried to support TP2 by expanding IT function but fails in solving dOPT puzzle.</p>
    <p>A solution of false-tie (ERV) has been realized in Co-Word system, it is still not published.</p>
    <p>Li et al. also reported a solution and gave the proof.</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 31</p>
    <p>CONCLUSIONS  In this paper we propose a strategy which can</p>
    <p>maintain CCI model and is different from OT. It does not ensure the operations execution correctness by modifying the operations address but by transforming the address space of the document.</p>
    <p>Since the Mark &amp; Retrace processes do not affect the relative position (left or right) between characters, it is easier to maintain operations order. It can not only achieve all the consistency criteria, but can support any Undo as well.</p>
  </div>
  <div class="page">
    <p>February 5, 2019 Fudan University, Cooperative Information and Systems Laboratory 32</p>
    <p>Thanks!</p>
  </div>
</Presentation>
