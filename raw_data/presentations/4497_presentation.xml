<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>MMCN09 1</p>
    <p>School of Computing Science Simon Fraser University</p>
    <p>Bounding Switching Delay in Mobile TV Broadcast Networks</p>
    <p>Cheng-Hsin Hsu Joint Work with Mohamed Hefeeda</p>
    <p>January 19, 2008</p>
  </div>
  <div class="page">
    <p>MMCN09 2</p>
    <p>Motivations: TV EvolutionMobile</p>
    <p>Battery powered  Mobile, wireless  Small screens, lower bit rates</p>
  </div>
  <div class="page">
    <p>MMCN09 3</p>
    <p>Most mobile devices (phones, PDAs, ...) are almost full-fledged computers</p>
    <p>Users like to access multimedia content anywhere, anytime</p>
    <p>Longer Prime Time viewing  More business opportunities for content providers</p>
    <p>Market research forecasts (by 2011) - 500 million subscribers, 20 billion Euros in revenue</p>
    <p>Already deployed (or trial) networks in 40+ countries [http://www.dvb-h.org]</p>
    <p>Mobile TV: Market Demand &amp; Potential</p>
  </div>
  <div class="page">
    <p>MMCN09 4</p>
    <p>Over (current, 3G) cellular networks - Third Generation Partnership Project (3GPP)  - Multimedia Broadcast/Multicast Service (MBMS)</p>
    <p>- Pros: leverage already deployed networks</p>
    <p>- Cons: Limited bandwidth (&lt;1.5 Mb/s)   very few TV channels, low quality, and</p>
    <p>higher energy consumption for mobile devices (they work mostly in continuous mode)</p>
    <p>Mobile TV: Multiple Technologies</p>
  </div>
  <div class="page">
    <p>MMCN09</p>
    <p>Mobile TV: Multiple Technologies</p>
    <p>Over Dedicated Broadcast Networks - T-DMB: Terrestrial Digital Media Broadcasting</p>
    <p>Started in South Korea</p>
    <p>Builds on the success of Digital Audio Broadcast (DAB)</p>
    <p>Limited bandwidth (&lt; 1.8 Mbps)</p>
    <p>- DVB-H: Digital Video BroadcastHandheld  Extends DVB-T to support mobile devices</p>
    <p>High bandwidth (&lt; 25 Mbps), energy saving, error protection, efficient handoff,</p>
    <p>Open standard</p>
    <p>- MediaFLO: Media Forward Link Only  Similar to DVB-H, but proprietary (Qualcomm)</p>
  </div>
  <div class="page">
    <p>MMCN09 6</p>
    <p>This is called Time Slicing - Supported (dictated) in DVB-H and MediaFLO</p>
    <p>Need to construct Feasible Time Slicing Schemes - No receiver buffer under/over flow instances</p>
    <p>- No overlap between bursts</p>
    <p>Energy Saving for Mobile TV Receivers</p>
    <p>Time</p>
    <p>Bit Rate</p>
    <p>R</p>
    <p>r</p>
    <p>Off</p>
    <p>Burst Overhead To</p>
  </div>
  <div class="page">
    <p>MMCN09 7</p>
    <p>Users usually flip through many channels  Long/variable delays are annoying  In fact, users have complained long channel</p>
    <p>switching delay on DVB-H phones - YouTube</p>
    <p>MWC 2008: Channel change comparison DVB-H vs. MediaFLO</p>
    <p>- Our experience with Nokia N92/N96 (&gt; 5 secs)</p>
    <p>Goal: bound maximum switching delay without sacrificing energy saving for mobile receivers</p>
    <p>Controlling Channel Switching Delay</p>
  </div>
  <div class="page">
    <p>MMCN09 8</p>
    <p>Switching delay has multiple components - Time slicing delay (our focus)</p>
    <p>- Frame refresh delay (till an I-frame arrives)  Add more/redundant I-frames [Vadakital 07]</p>
    <p>Move I-frames closer to start of burst [Rezaei 07, 08]</p>
    <p>- Processing and Decoding delays</p>
    <p>Controlling Channel Switching Delay</p>
    <p>Time</p>
    <p>R</p>
    <p>r1</p>
    <p>Off</p>
    <p>Burst</p>
    <p>Channel Switch</p>
    <p>Time Slicing Delay</p>
  </div>
  <div class="page">
    <p>MMCN09 9</p>
    <p>Reduce inter-burst periods  wastes energy  Reduce delay from 1.5 to 0.25 sec</p>
    <p>Controlling Delay: Current Approach #1</p>
    <p>energy saving drops from 90% to 55%</p>
  </div>
  <div class="page">
    <p>MMCN09 10</p>
    <p>DVB-H standard [EN 102377, May 2007] - Suggests bundling multiple channels in one group</p>
    <p>virtually zero switching delay within a group</p>
    <p>But, - Delay across groups can be large</p>
    <p>- Devices receive all data of the bundle  wastes energy - How do we group channels in the first place (manual)?</p>
    <p>Controlling Delay: Current Approach #2</p>
  </div>
  <div class="page">
    <p>MMCN09 11</p>
    <p>Use simulcast - Broadcast each TV channel over two burst trains</p>
    <p>- One optimized for delay (bootstrap)</p>
    <p>- The other optimized for energy saving (primary)</p>
    <p>- Devices tune to bootstrap bursts for fast playout, then tune to primary bursts for high energy saving</p>
    <p>Systematically construct optimal time slicing schemes</p>
    <p>Three variations - SIMU : traditional video systems (nonscalable codecs)</p>
    <p>- SIMU-S: scalable codecs</p>
    <p>- SIMU-S+: scalable codecs, bandwidth limited networks</p>
    <p>Controlling Delay: Our Approach</p>
  </div>
  <div class="page">
    <p>MMCN09 12</p>
    <p>Low quality not noticed during flipping</p>
    <p>Scalable codecs facilitate stream management</p>
    <p>SIMU-S+ less energy saving than SIMU-S , but better bw utilization</p>
    <p>Controlling Delay: Our Approach</p>
    <p>SIMU</p>
    <p>SIMU-S+</p>
    <p>SIMU-S</p>
  </div>
  <div class="page">
    <p>MMCN09</p>
    <p>Bounding Switching Delay</p>
    <p>Our Algorithms</p>
    <p>target switching delay dm</p>
    <p>full quality rate r</p>
    <p>reduced quality rate rl</p>
    <p>time slicing scheme</p>
    <p>{&lt;start_time, burst_size&gt;}</p>
    <p>Run at the base stations to multiplex TV channels into a traffic stream</p>
  </div>
  <div class="page">
    <p>MMCN09</p>
    <p>Time Slicing Scheme  SIMU/SIMU-S</p>
    <p>Primary bursts:</p>
    <p>Bootstrap bursts:</p>
    <p>(s  1)dm , Sdm r &gt;</p>
    <p>(k  1)dm + r</p>
    <p>r + rl dm + (s  1)</p>
    <p>rl r + rl</p>
    <p>dm S</p>
    <p>, dm r &gt;</p>
  </div>
  <div class="page">
    <p>MMCN09</p>
    <p>Correctness and Performance  SIMU/SIMU-S</p>
    <p>Prove the scheme is feasible</p>
    <p>Show the scheme maximizes energy saving - First, show our scheme outperforms any scheme</p>
    <p>that does not employ simulcast idea</p>
    <p>- Then, show our scheme is optimal among all simulcast schemes</p>
    <p>Analytically derive energy saving</p>
    <p>- for devices receiving bootstrap bursts</p>
    <p>- for devices receiving primary bursts</p>
    <p>b</p>
    <p>s</p>
  </div>
  <div class="page">
    <p>MMCN09</p>
    <p>Comparison on Energy Saving</p>
    <p>SIMU-S Primary: More than 95% energy saving</p>
  </div>
  <div class="page">
    <p>MMCN09</p>
    <p>Comparison on Network Utilization</p>
    <p>SIMU/SIMU-S incur (controllable) BW overhead</p>
    <p>SIMU+ is BW efficient, but results in lower energy saving than SIMU/SIMU-S</p>
  </div>
  <div class="page">
    <p>MMCN09 18</p>
    <p>Our algorithms are implemented in the IP Encapsulator</p>
    <p>Real Implementation</p>
  </div>
  <div class="page">
    <p>MMCN09 19</p>
    <p>Testbed for DVB-H networks</p>
  </div>
  <div class="page">
    <p>MMCN09</p>
    <p>Experimental Setup</p>
    <p>Implemented SIMU-S scheme in C++</p>
    <p>Broadcast 8 TV channels for 10 min</p>
    <p>Set the target delay to be 500 msec</p>
    <p>Collect detailed logs that contain - time and size of each burst</p>
  </div>
  <div class="page">
    <p>MMCN09</p>
    <p>Experimental Setup (cont.)</p>
    <p>Based on logs, wrote a utility to emulate a million of users</p>
    <p>Randomly switching channels - let average watch time for each channel be 100 sec</p>
    <p>Compute switching delay and weighted energy saving</p>
  </div>
  <div class="page">
    <p>MMCN09 22</p>
    <p>Theoretical and empirical data match  SIMU much better than Current</p>
    <p>Analytical and Empirical Energy Saving Curves</p>
  </div>
  <div class="page">
    <p>MMCN09 23</p>
    <p>SIMU-S achieves the target switching delay bound</p>
    <p>Channel Switching Delay</p>
  </div>
  <div class="page">
    <p>MMCN09 24</p>
    <p>SIMU-S increases energy saving from 74% to 93% in real testbed</p>
    <p>Energy Saving</p>
  </div>
  <div class="page">
    <p>MMCN09 25</p>
    <p>Studied the problem of controlling switching delay  Proposed and analyzed three optimal (in terms of</p>
    <p>energy saving) time slicing schemes  Implemented and evaluated SIMU-S in a real</p>
    <p>testbed - It met the delay bound while achieving 93% energy saving</p>
    <p>Demo</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>MMCN09 26</p>
    <p>Sample Video Shot from our Testbed</p>
    <p>Burst analysis for SIMU: 2 primary&amp; 2 bootstrap trains</p>
  </div>
</Presentation>
