<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Teaching System Administration</p>
    <p>Steve VanDevender University of Oregon</p>
  </div>
  <div class="page">
    <p>Why am I doing this?</p>
    <p>Educating people about system administration is important</p>
    <p>Relatively little course and curriculum material is available</p>
    <p>Provide examples and inspiration to potential educators</p>
  </div>
  <div class="page">
    <p>How did this happen to me?</p>
    <p>I didn't originally have an ambition to be a teacher</p>
    <p>Attended LISA '99 System Administration Education Workshop on a whim</p>
    <p>Started asking computer science department faculty about a system administration class  First answer: But that would be too practical!</p>
    <p>Second answer: That would be great! Will you teach it?</p>
  </div>
  <div class="page">
    <p>What had I gotten myself into?</p>
    <p>The LISA education workshop had a wide representation of people and not a lot of common agreement:  Educators and non-educators</p>
    <p>Academic and commercial organizations</p>
    <p>Education or training?</p>
    <p>Among educators, very different approaches to teaching</p>
    <p>The hard part is trying to nail down what system administration is all about</p>
  </div>
  <div class="page">
    <p>So I had to design a class . . .</p>
    <p>My constraints:  8-week summer session, so an introductory rather</p>
    <p>than a comprehensive class</p>
    <p>Couldn't assume students would have extensive UNIX knowledge</p>
    <p>Dedicated lab, but limited number of computers  No preinstalled OSes  30 students, 10 computers  Limited access hours</p>
    <p>No teaching assistant</p>
  </div>
  <div class="page">
    <p>My personal notions about teaching</p>
    <p>I always hated unclear, underspecified assignments</p>
    <p>Students should have more than one way to learn</p>
    <p>Lecture, textbook, personal interaction, independent study</p>
    <p>Principles along with practices  Include non-technical aspects of system</p>
    <p>administration (communication, documentation, service to user community)</p>
  </div>
  <div class="page">
    <p>Class structure</p>
    <p>Students work in groups  Emphasizes themes of collaboration and</p>
    <p>communication (but also cleverly handles limited lab space)</p>
    <p>Grade is primarily based on a series of projects to install and develop a system  Later added class discussions for points</p>
    <p>Mostly objective grading (did it work or not?)</p>
  </div>
  <div class="page">
    <p>Class website on-line</p>
    <p>http://www.cs.uoregon.edu/Classes/12U/cis399sysadmin</p>
    <p>Previous years are also available http://www.cs.uoregon.edu/Classes/index.php?course=cis399sysadmin</p>
    <p>http://www.cs.uoregon.edu/classes/index.php?course=cis410sysadmin</p>
  </div>
  <div class="page">
    <p>Week 1: Class setup</p>
    <p>Describe class structure and syllabus  Get students to form groups  Assign lab systems  Introductory material on UNIX OS concepts</p>
  </div>
  <div class="page">
    <p>Week 2: System Installation</p>
    <p>Assignment:  Install OS on lab computer and create</p>
    <p>installation document</p>
    <p>Each group member must do at least one install and use version control on document</p>
    <p>Goals:  Learn about creating a documented,</p>
    <p>reproducible process</p>
    <p>Introduction to version control software and concepts</p>
  </div>
  <div class="page">
    <p>Week 3: Security and Network Configuration</p>
    <p>Assignment:  Describe how processes were started on</p>
    <p>running system</p>
    <p>Turn off network services (except sshd)</p>
    <p>Join network</p>
    <p>Install OS patches</p>
    <p>Goals:  Ensure computers are safe on network</p>
    <p>Introduction to basic security concepts</p>
    <p>Learn about boot-time process creation</p>
  </div>
  <div class="page">
    <p>Week 4: Network Services</p>
    <p>Assignment:  Build and install Apache httpd, Sendmail from</p>
    <p>source</p>
    <p>Demonstrate ability to serve web pages, send and receive mail</p>
    <p>Goals:  Learn about software installation and</p>
    <p>configuration issues</p>
    <p>Understand HTTP and SMTP as network services</p>
  </div>
  <div class="page">
    <p>Week 5: Account management</p>
    <p>Assignment:  Create accounts on lab machines for all class</p>
    <p>members and me</p>
    <p>Write simple use policy for system</p>
    <p>Goals:  Understand basics of account management and</p>
    <p>user support</p>
    <p>Learn about policy issues</p>
  </div>
  <div class="page">
    <p>Week 6: Logging and monitoring</p>
    <p>Assignment:  Collect examples of specified events from</p>
    <p>system logs</p>
    <p>Implement basic access control</p>
    <p>Write script and cron job to extract and mail log data</p>
    <p>Goals:  Understand logging and access control</p>
    <p>Introduction to scripting and cron scheduling</p>
  </div>
  <div class="page">
    <p>Week 7-8: Final Project</p>
    <p>Assignment:  Students propose and implement system</p>
    <p>administration project of their choice</p>
    <p>Must consider concrete goals, user benefits, security, implementation and maintenance effort, documentation</p>
    <p>Goals:  Let students research a topic of their choice</p>
    <p>Introduction to basic self-directed project management</p>
  </div>
  <div class="page">
    <p>Dangerous choices that worked</p>
    <p>Working in groups  Fewer group issues than I anticipated</p>
    <p>Stole a good idea (from Evi Nemeth) about group work evaluation: students each provide private estimates about member contributions</p>
    <p>Gave students their choice of operating system (of a freely-available UNIX or Linux distribution)</p>
    <p>System emergency day!</p>
  </div>
  <div class="page">
    <p>Question time!</p>
  </div>
</Presentation>
