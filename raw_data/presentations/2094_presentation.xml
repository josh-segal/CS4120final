<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Distributed Execution of Smartphone Workloads on Loosely Coupled Processors</p>
    <p>Felix Xiaozhu Lin, Zhen Wang, and Lin Zhong</p>
    <p>Rice University</p>
  </div>
  <div class="page">
    <p>Goal: energy-proportionality</p>
    <p>Smartphones High performance for intensive workloads Conserve energy as workloads mitigate</p>
    <p>Tens of milli Watt A few Watt</p>
  </div>
  <div class="page">
    <p>Processor</p>
    <p>P ow</p>
    <p>er</p>
    <p>Performance</p>
    <p>DVFS</p>
    <p>Architectural support for energy-proportionality</p>
  </div>
  <div class="page">
    <p>Core</p>
    <p>P ow</p>
    <p>er</p>
    <p>Performance</p>
    <p>DVFS</p>
    <p>Heterogeneous Tight coupling</p>
    <p>Core</p>
    <p>E.g. ARM big.LITTLE, Nvidia Tegra3</p>
  </div>
  <div class="page">
    <p>Core</p>
    <p>Performance</p>
    <p>DVFS</p>
    <p>Heterogeneous Tight coupling</p>
    <p>Heterogeneous Loose coupling</p>
    <p>Core Processor</p>
    <p>E.g. TI OMAP4/5</p>
    <p>P ow</p>
    <p>er</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Exploit loosely-coupled processors for smartphone workloads</p>
    <p>Programmability  800K apps, by 1 million programmers  Numerous legacy code: 1 million lines in</p>
    <p>Android</p>
  </div>
  <div class="page">
    <p>Characterize smartphone workloads</p>
    <p>Temporal / spatial variations?</p>
    <p>App / OS split?</p>
    <p>All experiments done on Samsung Galaxy S2 + ICS 7</p>
  </div>
  <div class="page">
    <p>Home-idle</p>
    <p>Time / Sec</p>
    <p>C P</p>
    <p>U U</p>
    <p>sa ge</p>
  </div>
  <div class="page">
    <p>C P</p>
    <p>U U</p>
    <p>sa ge</p>
    <p>Time / Sec</p>
  </div>
  <div class="page">
    <p>Observation 1 Workloads are time-varying</p>
    <p>Clock Animation</p>
    <p>User Swiping</p>
    <p>C P</p>
    <p>U U</p>
    <p>sa ge</p>
    <p>Time / Sec</p>
  </div>
  <div class="page">
    <p>Observation 2 Same threads experience varying workloads</p>
    <p>Home-idle</p>
    <p>C P</p>
    <p>U U</p>
    <p>sa ge</p>
    <p>Time / Sec 0 %</p>
    <p>Rest of System UI Thread</p>
  </div>
  <div class="page">
    <p>Observation 2 Same threads experience varying workloads</p>
    <p>Home-idle</p>
    <p>C P</p>
    <p>U U</p>
    <p>sa ge</p>
    <p>Time / Sec 0 %</p>
    <p>Rest of System Thread:User Thread:Kernel</p>
  </div>
  <div class="page">
    <p>Use of OS Services</p>
    <p>VS Home-idle (light)</p>
    <p>Browser (heavy)</p>
  </div>
  <div class="page">
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le# of</p>
    <p>U ni</p>
    <p>qu e</p>
    <p>O S</p>
    <p>K er</p>
    <p>ne l F</p>
    <p>un ct</p>
    <p>io ns</p>
    <p>OS Kernel Subsystem kernel drivers fs net mm lib arch block security sound</p>
    <p>kernel drivers fs net mm lib arch block security sound</p>
    <p>OS Subsystems</p>
  </div>
  <div class="page">
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le# of</p>
    <p>U ni</p>
    <p>qu e</p>
    <p>O S</p>
    <p>K er</p>
    <p>ne l F</p>
    <p>un ct</p>
    <p>io ns</p>
    <p>OS Kernel Subsystem kernel drivers fs net mm lib arch block security sound</p>
    <p>By Browser Only By Home-idle Only By Both</p>
    <p>kernel drivers fs net mm lib arch block security sound</p>
    <p>OS Subsystems</p>
    <p>Browser : Heavy Home-idle: Light</p>
  </div>
  <div class="page">
    <p>Observation 3 Same OS functions experience varying workloads</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le# of</p>
    <p>U ni</p>
    <p>qu e</p>
    <p>O S</p>
    <p>K er</p>
    <p>ne l F</p>
    <p>un ct</p>
    <p>io ns</p>
    <p>OS Kernel Subsystem kernel drivers fs net mm lib arch block security sound</p>
    <p>By Browser Only By Home-idle Only By Both</p>
    <p>kernel drivers fs net mm lib arch block security sound</p>
    <p>OS Subsystems</p>
  </div>
  <div class="page">
    <p>Observation 4 Workloads invoke diverse OS functions</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le</p>
    <p>B ro</p>
    <p>w se</p>
    <p>r H</p>
    <p>om e</p>
    <p>id le# of</p>
    <p>U ni</p>
    <p>qu e</p>
    <p>O S</p>
    <p>K er</p>
    <p>ne l F</p>
    <p>un ct</p>
    <p>io ns</p>
    <p>OS Kernel Subsystem kernel drivers fs net mm lib arch block security sound</p>
    <p>By Browser Only By Home-idle Only By Both</p>
    <p>kernel drivers fs net mm lib arch block security sound</p>
    <p>OS Subsystems</p>
  </div>
  <div class="page">
    <p>Implications: for user threads</p>
    <p>Enable dynamic use of different processors  Retain existing program structure</p>
    <p>Ob1: Workloads are time-varying  Ob2: Same threads experience varying workloads</p>
  </div>
  <div class="page">
    <p>C P</p>
    <p>U U</p>
    <p>sa ge</p>
    <p>Time / Sec 0 %</p>
    <p>Rest of System UI Thread</p>
    <p>User Swiping Clock</p>
    <p>Animation</p>
    <p>Example: UI thread of Home</p>
  </div>
  <div class="page">
    <p>Example: UI thread of Home</p>
    <p>Home-idle</p>
    <p>C P</p>
    <p>U U</p>
    <p>sa ge</p>
    <p>Time / Sec 0 %</p>
    <p>Rest of System UI Thread</p>
    <p>User Swiping Clock</p>
    <p>Animation</p>
    <p>small big</p>
  </div>
  <div class="page">
    <p>Implications: for OS functions</p>
    <p>Execute same OS services on multiple processors Preserve a single system image</p>
    <p>Ob3: Same OS functions experience varying workloads  Ob4: Workloads invoke diverse OS functions</p>
  </div>
  <div class="page">
    <p>Example: Instant Messenger</p>
    <p>OS</p>
    <p>App</p>
    <p>Small Big</p>
    <p>s=socket()</p>
  </div>
  <div class="page">
    <p>Example: Instant Messenger</p>
    <p>OS</p>
    <p>App recv(s, )</p>
    <p>Small Big Z z z...</p>
  </div>
  <div class="page">
    <p>Our solution: Kage runtime lib + OS Ap</p>
    <p>ps</p>
    <p>Ka ge</p>
    <p>O S</p>
    <p>OS component</p>
    <p>Non-coherenet Shared Mem</p>
    <p>Kage Runtime</p>
    <p>OS component</p>
    <p>Small Big</p>
  </div>
  <div class="page">
    <p>Kage: runtime lib Ap</p>
    <p>ps</p>
    <p>Ka ge</p>
    <p>O S</p>
    <p>OS component</p>
    <p>Non-coherenet Shared Mem</p>
    <p>Kage Runtime</p>
    <p>OS component</p>
    <p>Replicated Thread Thread</p>
    <p>Small Big</p>
  </div>
  <div class="page">
    <p>Kage: runtime lib Ap</p>
    <p>ps</p>
    <p>Ka ge</p>
    <p>O S</p>
    <p>OS component</p>
    <p>Non-coherenet Shared Mem</p>
    <p>Kage Runtime</p>
    <p>OS component</p>
    <p>Replicated Thread Thread</p>
    <p>Small Big</p>
    <p>Legacy App Code</p>
  </div>
  <div class="page">
    <p>Kage: OS structure</p>
    <p>Local Kernel</p>
    <p>Ka ge</p>
    <p>O S</p>
    <p>Local Kernel</p>
    <p>Non-coherenet Shared Mem</p>
    <p>Sensor Net</p>
    <p>Display Replicated</p>
    <p>Sensor Net</p>
    <p>Display</p>
    <p>Ap ps</p>
    <p>Kage Runtime</p>
    <p>Replicated Thread Thread</p>
    <p>Small Big</p>
  </div>
  <div class="page">
    <p>Kage: OS structure</p>
    <p>Local Kernel</p>
    <p>Ka ge</p>
    <p>O S</p>
    <p>Local Kernel</p>
    <p>Non-coherenet Shared Mem</p>
    <p>Sensor Net</p>
    <p>Display Replicated</p>
    <p>Sensor Net</p>
    <p>Display</p>
    <p>Ap ps</p>
    <p>Kage Runtime</p>
    <p>Replicated Thread Thread</p>
    <p>Small Big</p>
    <p>Legacy OS Code</p>
  </div>
  <div class="page">
    <p>Open questions and plans</p>
    <p>State consistency  Limiting inter-processor concurrency</p>
    <p>Implementation: TI OMAP4 (two types of</p>
    <p>processors)  Two local kernels with separate memory</p>
    <p>allocators</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Heterogeneity with HW cache-coherence  big.LITTLE</p>
    <p>OS with partitioned functions</p>
    <p>Helios, Barrelfish (for scalability)</p>
    <p>OS with replicated functions  V, fos</p>
  </div>
  <div class="page">
    <p>Summary Goal: energy proportionality for smartphone workloads Observations:</p>
    <p>Architecture: loosely coupling, asymmetry  Workloads: high variations, in both app and OS</p>
    <p>Challenges:</p>
    <p>Exploiting the architecture for smartphone workloads  Maximizing reuse of legacy code</p>
    <p>Solution: Kage, a suite of runtime lib and OS</p>
    <p>Replicating user thread execution  Replicating OS functions</p>
  </div>
</Presentation>
