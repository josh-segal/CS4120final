<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Analysis of DTLS Implementations Using Protocol State Fuzzing</p>
    <p>Paul Fiterau-Brostean Uppsala University</p>
    <p>Bengt Jonsson Uppsala University</p>
    <p>Robert Merget Ruhr-University Bochum</p>
    <p>Joeri de Ruiter SIDN Labs</p>
    <p>Konstantinos Sagonas Uppsala University</p>
    <p>Juraj Somorovsky Paderborn University</p>
  </div>
  <div class="page">
    <p>DTLS (TLS over UDP)</p>
    <p>encrypted channel</p>
    <p>IoT</p>
    <p>testing not easy since protocol is complex</p>
    <p>encrypted channel</p>
    <p>WebRTC</p>
  </div>
  <div class="page">
    <p>Application Application</p>
    <p>DTLS Client</p>
    <p>DTLS Server</p>
    <p>DTLS (v. 1.2) Handshake Protocol</p>
  </div>
  <div class="page">
    <p>cookie exchange</p>
    <p>HelloVerifyRequest</p>
    <p>ClientHello</p>
    <p>DTLS Client</p>
    <p>DTLS Server</p>
    <p>ServerHello</p>
    <p>ClientHello</p>
    <p>DTLS (v. 1.2) Handshake Protocol</p>
    <p>parameter negotiation</p>
  </div>
  <div class="page">
    <p>DTLS Client</p>
    <p>DTLS Server</p>
    <p>ServerHello</p>
    <p>Certificate</p>
    <p>ServerHelloDone</p>
    <p>ClientKeyExchange</p>
    <p>DTLS (v. 1.2) Handshake Protocol</p>
    <p>premaster secret RSA key</p>
    <p>exchange</p>
    <p>CertificateRequest</p>
    <p>Certificate</p>
    <p>premaster secretCertificateVerify</p>
    <p>HelloVerifyRequest</p>
    <p>ClientHello</p>
    <p>ClientHello</p>
  </div>
  <div class="page">
    <p>DTLS Client</p>
    <p>DTLS Server</p>
    <p>ServerHello</p>
    <p>Certificate</p>
    <p>ServerHelloDone</p>
    <p>ClientKeyExchange</p>
    <p>DTLS (v. 1.2) Handshake Protocol</p>
    <p>CertificateRequest</p>
    <p>Certificate</p>
    <p>CertificateVerify</p>
    <p>HelloVerifyRequest</p>
    <p>ClientHello</p>
    <p>ClientHello</p>
  </div>
  <div class="page">
    <p>DTLS Client</p>
    <p>DTLS Server</p>
    <p>ServerHello</p>
    <p>Certificate</p>
    <p>ServerHelloDone</p>
    <p>ChangeCipherSpec</p>
    <p>Finished</p>
    <p>ChangeCipherSpec</p>
    <p>Finished</p>
    <p>ClientKeyExchange</p>
    <p>DTLS (v. 1.2) Handshake Protocol</p>
    <p>Application Application</p>
    <p>CertificateRequest</p>
    <p>Certificate</p>
    <p>CertificateVerify</p>
    <p>HelloVerifyRequest</p>
    <p>ClientHello</p>
    <p>ClientHello</p>
  </div>
  <div class="page">
    <p>DTLS Client</p>
    <p>DTLS Server</p>
    <p>DTLS (v. 1.2) Handshake Protocol</p>
    <p>ServerHello</p>
    <p>Certificate</p>
    <p>ServerHelloDone</p>
    <p>ChangeCipherSpec</p>
    <p>Finished</p>
    <p>ChangeCipherSpec</p>
    <p>Finished</p>
    <p>ClientKeyExchange</p>
    <p>Application Application</p>
    <p>CertificateRequest</p>
    <p>Certificate</p>
    <p>CertificateVerify</p>
    <p>Key Exchange Algorithm RSA</p>
    <p>Client Certificate Authentication required</p>
    <p>HelloVerifyRequest</p>
    <p>ClientHello</p>
    <p>ClientHello</p>
  </div>
  <div class="page">
    <p>DTLS Client</p>
    <p>DTLS Server</p>
    <p>DTLS (v. 1.2) Handshake Protocol</p>
    <p>Client Certificate Authentication disabled</p>
    <p>Handshake can vary! ServerHello</p>
    <p>Certificate</p>
    <p>ServerHelloDone</p>
    <p>ChangeCipherSpec</p>
    <p>Finished</p>
    <p>ChangeCipherSpec</p>
    <p>Finished</p>
    <p>ClientKeyExchange</p>
    <p>Application Application</p>
    <p>CertificateRequest</p>
    <p>Certificate</p>
    <p>CertificateVerify</p>
    <p>Key Exchange Algorithm RSA</p>
    <p>HelloVerifyRequest</p>
    <p>ClientHello</p>
    <p>ClientHello</p>
  </div>
  <div class="page">
    <p>DTLS Client</p>
    <p>DTLS Server</p>
    <p>DTLS (v. 1.2) Handshake Protocol</p>
    <p>Handshake can vary! ServerHello</p>
    <p>Certificate</p>
    <p>ServerHelloDone</p>
    <p>ChangeCipherSpec</p>
    <p>Finished</p>
    <p>ChangeCipherSpec</p>
    <p>Finished</p>
    <p>ClientKeyExchange</p>
    <p>Application Application</p>
    <p>CertificateRequest</p>
    <p>Certificate</p>
    <p>CertificateVerify</p>
    <p>Key Exchange Algorithm PSK</p>
    <p>Client Certificate Authentication disabled</p>
    <p>HelloVerifyRequest</p>
    <p>ClientHello</p>
    <p>ClientHello</p>
    <p>Certificate</p>
  </div>
  <div class="page">
    <p>DTLS Client</p>
    <p>DTLS Server</p>
    <p>DTLS (v. 1.2) Handshake Protocol</p>
    <p>Control Flow Bug: accept invalid sequence</p>
    <p>bypasses authentication</p>
    <p>Culprit: JSSE</p>
    <p>i.e. messages (1) in wrong order (2) missing</p>
    <p>ServerHello</p>
    <p>Certificate</p>
    <p>ServerHelloDone</p>
    <p>ChangeCipherSpec</p>
    <p>Finished</p>
    <p>ChangeCipherSpec</p>
    <p>Finished</p>
    <p>ClientKeyExchange</p>
    <p>Application Application</p>
    <p>CertificateRequest</p>
    <p>Certificate</p>
    <p>CertificateVerify</p>
    <p>Key Exchange Algorithm RSA</p>
    <p>Client Certificate Authentication required</p>
    <p>HelloVerifyRequest</p>
    <p>ClientHello</p>
    <p>ClientHello</p>
  </div>
  <div class="page">
    <p>ClientHello / HelloVerifyRequest</p>
    <p>captured</p>
    <p>DTLS Server State Machine</p>
    <p>HelloVerifyRequest</p>
    <p>ClientHello</p>
    <p>ServerHello</p>
    <p>ClientHello</p>
    <p>Certificate</p>
    <p>ServerHelloDone</p>
    <p>ChangeCipherSpec</p>
    <p>Finished</p>
    <p>ChangeCipherSpec</p>
    <p>Finished</p>
    <p>ClientKeyExchange</p>
    <p>CertificateRequest</p>
    <p>Certificate</p>
    <p>CertificateVerify</p>
    <p>infinitely-many sequences to test</p>
    <p>Finished /</p>
  </div>
  <div class="page">
    <p>generatesDTLS Server</p>
    <p>State Fuzzing infers state machine automatically</p>
    <p>DTLS Server State Machine</p>
    <p>ClientHello / HelloVerifyRequest</p>
    <p>Finished /</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>implementing the state fuzzing setup</p>
    <p>apply to many implementations + configurations</p>
    <p>inspect models for security issues</p>
  </div>
  <div class="page">
    <p>Contributions</p>
    <p>state fuzzing framework for testing DTLS servers</p>
    <p>analysis of 11 server implementations RSA, PSK, DH, ECDH disabled/enabled/required cl. cert. auth.</p>
    <p>&gt;10 bugs  fixes in 5 implementations</p>
  </div>
  <div class="page">
    <p>State Fuzzing</p>
    <p>Mealy machine</p>
    <p>black-box system</p>
    <p>Learner DTLS</p>
    <p>Server</p>
    <p>inputs</p>
    <p>outputs</p>
  </div>
  <div class="page">
    <p>DTLS Server</p>
    <p>Learner Mapper</p>
    <p>State Fuzzing</p>
    <p>ClientHello</p>
    <p>ServerHello</p>
    <p>ClientHello</p>
    <p>ServerHello</p>
  </div>
  <div class="page">
    <p>DTLS Server</p>
    <p>LearnLib</p>
    <p>Implementing Components</p>
    <p>In our setup:  learner - LearnLib  mapper - TLS-Attacker extended with DTLS support</p>
    <p>TLS</p>
    <p>Attacker</p>
    <p>DTLS extension</p>
    <p>ClientHello</p>
    <p>ServerHello</p>
    <p>ClientHello</p>
    <p>ServerHello</p>
  </div>
  <div class="page">
    <p>Devising I/O Alphabet</p>
    <p>ClientHello(kex) ClientKeyExchange(kex) Certificate EmptyCertificate CertificateVerify ChangeCipherSpec Finished Application Alert(type)</p>
    <p>kex  {RSA, DH, PSK, ECDH} HelloVerifyRequest ServerHello Certificate CertificateRequest ServerKeyExchange ServerHelloDone ChangeCipherSpec Finished Application Alert(type) UnknownMessage (i.e. unable to decrypt) - (no response)</p>
    <p>input alphabet</p>
    <p>output alphabet</p>
    <p>type  {CloseWait, UnexpectedMessage}</p>
    <p>type  {CloseWait,}</p>
  </div>
  <div class="page">
    <p>Generating Models</p>
    <p>eclipse TinyDTLS</p>
    <p>Scandium</p>
    <p>PionDTLS</p>
    <p>Contiki-NG</p>
    <p>TinyDTLS</p>
    <p>OpenSSL</p>
    <p>GnuTLS</p>
    <p>MbedTLS</p>
    <p>NSS</p>
    <p>WolfSSL</p>
    <p>JSSE</p>
    <p>IoT specific</p>
    <p>general purpose</p>
    <p>WebRTC</p>
    <p>for all main key exchange algorithms RSA, DH, ECDH, PSK</p>
    <p>and client cert. authentication settings NONE, REQ, OPT</p>
    <p>Learner</p>
  </div>
  <div class="page">
    <p>Analyzing Results</p>
    <p>found RFC violations (i.e. bug) in all models  prompted fixes ( )</p>
    <p>most severe: handshake bugs ( X )</p>
    <p>X</p>
    <p>X</p>
    <p>X</p>
    <p>eclipse TinyDTLS</p>
    <p>Scandium</p>
    <p>PionDTLS</p>
    <p>Contiki-NG</p>
    <p>TinyDTLS</p>
    <p>OpenSSL</p>
    <p>GnuTLS</p>
    <p>MbedTLS</p>
    <p>NSS</p>
    <p>WolfSSL</p>
    <p>JSSE</p>
    <p>IoT specific</p>
    <p>general purpose</p>
    <p>WebRTC</p>
    <p>handshake completed</p>
    <p>invalid path</p>
    <p>valid path</p>
    <p>initial state</p>
  </div>
  <div class="page">
    <p>JSSE 11</p>
    <p>This looks a bit</p>
    <p>messy</p>
  </div>
  <div class="page">
    <p>JSSE 11  server configured to require cert. authentication</p>
    <p>initial state</p>
    <p>handshake completed</p>
  </div>
  <div class="page">
    <p>JSSE 11  server configured to require cert. authentication 24</p>
    <p>Client AuthenticationDTLS Server</p>
  </div>
  <div class="page">
    <p>JSSE 11</p>
    <p>Authentication Bypass</p>
    <p>bypass authentication</p>
    <p>missing Cert and CertVer</p>
  </div>
  <div class="page">
    <p>JSSE 11</p>
    <p>No CertificateVerify</p>
    <p>authenticate with stolen Certificate  similar bugs in Scandium and PionDTLS</p>
    <p>missing CertVer</p>
    <p>DTLS Server</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>implemented a state fuzzing framework for DTLS</p>
    <p>extended TLS-Attacker with support for DTLS</p>
    <p>analyzed 11 implementations RSA, PSK, DH, ECDH</p>
    <p>disabled/enabled/required cl. cert. auth.</p>
    <p>found &gt;10 bugs  fixes in 5 implementations (so far)</p>
    <p>constructed a platform for future work on testing DTLS</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>implemented a state fuzzing framework for DTLS</p>
    <p>extended TLS-Attacker with support for DTLS</p>
    <p>analyzed 11 implementations for diff. key exchange/cl. cert. auth.</p>
    <p>found &gt;10 bugs  fixes in 5 implementations (so far)</p>
    <p>constructed a platform for future work on testing DTLS  automatic detection of bugs in models</p>
    <p>state fuzzing DTLS clients</p>
    <p>testing unexplored functionality (e.g. fragmentation) guided by the learned models</p>
    <p>State Fuzzing Framework: https://github.com/assist-project/dtls-fuzzer</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>implemented a state fuzzing framework for DTLS</p>
    <p>extended TLS-Attacker with support for DTLS</p>
    <p>analyzed 11 implementations for diff. key exchange/cl. cert. auth.</p>
    <p>found &gt;10 bugs  fixes in 5 implementations (so far)</p>
    <p>constructed a platform for future work on testing DTLS  automatic detection of bugs in models</p>
    <p>state fuzzing DTLS clients</p>
    <p>testing unexplored functionality (e.g. fragmentation)</p>
    <p>Thanks for your attention! State Fuzzing Framework: https://github.com/assist-project/dtls-fuzzer</p>
  </div>
</Presentation>
