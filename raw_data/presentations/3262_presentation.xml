<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Phasing: Private Set Intersection using Permutation-based Hashing</p>
    <p>Michael Zohner (TU Darmstadt)</p>
    <p>Joint work with Benny Pinkas (Bar Ilan University) Thomas Schneider (TU Darmstadt) Gil Segev (Hebrew University)</p>
  </div>
  <div class="page">
    <p>Private Set Intersection (PSI)</p>
    <p>? ?</p>
    <p>X Y</p>
    <p>X  Y</p>
  </div>
  <div class="page">
    <p>Application: Common Contacts</p>
    <p>...</p>
    <p>...</p>
  </div>
  <div class="page">
    <p>Application: Online Advertisement</p>
  </div>
  <div class="page">
    <p>Additional Applications</p>
    <p>Botnet detection</p>
    <p>Secure database join</p>
    <p>Cheater detection in online games</p>
    <p>Testing human genomes Relationship path discovery</p>
  </div>
  <div class="page">
    <p>A nave but insecure PSI protocol</p>
    <p>Pro: fast, little communication</p>
    <p>Con: insecure, can leak privacy of Bob's inputs</p>
    <p>Input: y1, , yn</p>
    <p>H(y1), , H(yn)</p>
    <p>Input: x1, , xn</p>
    <p>H(x1), , H(xn)</p>
    <p>?</p>
    <p>H(y1), , H(yn)</p>
    <p>H(xi) = H(yj), for 0 &lt; i , j &lt; n</p>
  </div>
  <div class="page">
    <p>PSI Classification [PSZ14]</p>
    <p>Public-key Cryptography</p>
    <p>Generic Secure Computation</p>
    <p>Oblivious Transfer</p>
    <p>b</p>
    <p>This talk: semi-honest (passive) adversaries</p>
  </div>
  <div class="page">
    <p>Public-key Cryptography</p>
    <p>Protocols have existed for three decades</p>
    <p>Encrypt elements using public-key crypto</p>
    <p>Protocols based on public-key cryptography  DH-based Protocol [M86], O(n) pk-crypto &amp; comm  Blind RSA Protocol [CT10], O(n) pk-crypto &amp; comm</p>
  </div>
  <div class="page">
    <p>Generic Secure Computation</p>
    <p>Generic Secure Computation techniques represent a function as Boolean circuit and operate on single bits</p>
    <p>Techniques are Yao's garbled circuits and GMW</p>
    <p>The sort-compare-shuffle circuit [HEK12] for PSI requires O(n log n) sym-crypto &amp; comm, for element bit-length  and set size n</p>
  </div>
  <div class="page">
    <p>Oblivious Transfer (OT)</p>
    <p>OT (s0, s1)</p>
    <p>sc</p>
    <p>c</p>
    <p>Input: Bob holds two strings (s0, s1), Alice holds a choice bit c</p>
    <p>Output: Alice only learns sc ; Bob learns nothing about c</p>
    <p>OT-based PSI protocols for sec. param.  ;  bit elements: Bloom-filter [DCW13], O(n) sym-crypto, O(n2) comm OT+Hashing [PSZ14], O(n) sym-crypto &amp; comm</p>
  </div>
  <div class="page">
    <p>Performance Classification [PSZ14]</p>
    <p>PSI on n = 218 elements of =32-bit length for 128-bit security on Gbit LAN</p>
    <p>Blind-RSA'10</p>
    <p>DH'86</p>
    <p>Yao'12</p>
    <p>GMW'12</p>
    <p>Nave</p>
    <p>GBF'13</p>
    <p>OT+Hash'14</p>
    <p>PK-Based: - high run-time for large security parameters + best communication</p>
    <p>Circuit-Based: - high run-time &amp; communication + easily extensible to arbitrary functions</p>
    <p>OT-Based: + good communication and run-time</p>
    <p>OT-Based: + good communication and run-time1 10 100 1,000</p>
    <p>Run-time (s)</p>
    <p>C o</p>
    <p>m m</p>
    <p>u n</p>
    <p>ic a ti</p>
    <p>o n</p>
    <p>( M</p>
    <p>B y te</p>
    <p>s )</p>
    <p>&gt;1 0x</p>
    <p>ga p</p>
  </div>
  <div class="page">
    <p>Our Contributions</p>
    <p>Goal: Make PSI protocols more practical</p>
    <p>Phasing: PSI using Permutation-based Hashing</p>
    <p>Circuit-Phasing: Improvements on Circuit-based PSI [HEK12]</p>
    <p>OT-Phasing: Improvements on OT+Hashing [PSZ14]</p>
  </div>
  <div class="page">
    <p>OT+Hashing PSI [PSZ14]</p>
    <p>Input: Alice has x, Bob has y. Output: x = y</p>
    <p>Example: x = 001, y = 011,  = 3, stat. sec. param.</p>
    <p>Bob sends -bit mask   to Alice</p>
    <p>OT ( , )0</p>
    <p>. . . . .</p>
    <p>. . . . .</p>
    <p>?</p>
    <p>x y</p>
  </div>
  <div class="page">
    <p>OT+Hashing PSI [PSZ14] (cont.)</p>
    <p>x y</p>
    <p>x Y</p>
    <p>X Y</p>
    <p>Private Equality Test:</p>
    <p>Private Set Inclusion:</p>
    <p>Private Set Intersection:</p>
    <p>O(n2) comparisons!</p>
  </div>
  <div class="page">
    <p>Hashing to Bins [PSZ14]</p>
    <p>Hash elements to bins to reduce comparisons</p>
    <p>Example: Alice holds X={x1, x2, x3}, Bob holds Y={y1, y2, y3}</p>
    <p>H(x1)</p>
    <p>H(x2)</p>
    <p>H(x3)</p>
    <p>Reduces comparisons from O(n2) to O(n log n / loglog n)</p>
    <p>O(n)</p>
    <p>x3</p>
    <p>x1</p>
    <p>x2</p>
    <p>y1 y3</p>
    <p>y2</p>
  </div>
  <div class="page">
    <p>Our Contributions (1)</p>
    <p>Phasing: PSI using Permutation-based Hashing</p>
  </div>
  <div class="page">
    <p>Permutation-based Hashing</p>
    <p>In [PSZ14] elements are compared bit-wise  Hence, smaller elements require less overhead</p>
    <p>Idea: hash elements to a smaller representation  To avoid collisions the birthday paradox states that the hash</p>
    <p>must be +2log(n) bit</p>
    <p>Instead: use a permutation to map elements to bins and store a shorter representation</p>
    <p>Used for smaller hash tables [ANS10]  Here: first use in crypto</p>
  </div>
  <div class="page">
    <p>Permutation-based Hashing (cont.)</p>
    <p>p(x)</p>
    <p>Split x=xL|xR with |xL|=O(log n) bit</p>
    <p>Let f: [1...2|xR| ] [1...2|xL| ] and p(x)= xL  f(xR)</p>
    <p>Hashing is done by storing xR in bin p(x)</p>
    <p>Securely compare xR which is only -|xL| bit long  Less complexity for comparison  Larger sets mean less complexity for comparison</p>
    <p>xR</p>
  </div>
  <div class="page">
    <p>Our Contributions (2)</p>
    <p>Circuit-Phasing</p>
  </div>
  <div class="page">
    <p>Circuit-Phasing</p>
    <p>Idea: Use permutation-based hashing to hash elements into bins and compare bins on elements with reduced length</p>
    <p>For each bin compare the element of Alice with each element in the same bin of Bob using bit-wise comparison circuit</p>
    <p>Advantages:  Communication rounds independent of set sizes  Same circuit evaluated multiple time allows SIMD</p>
  </div>
  <div class="page">
    <p>Circuit-Phasing (cont.)</p>
    <p>However, bins have to be padded to a to avoid information leakage</p>
    <p>In total O(n log n / loglog n) comparison circuits  Per comparison: O(-log n) sym-crypto &amp; comm  Total: O(n (-log n) log n / loglog n) sym-crypto &amp; comm  SCS circuit [HEK12]: 3n log n sym-crypto &amp; comm</p>
  </div>
  <div class="page">
    <p>Improvements Circuit-based PSI</p>
    <p>PSI on n = 65.000 elements of =32-bit length for 128-bit security on Gbit LAN</p>
    <p>Yao-SCS [HEK12]</p>
    <p>GMW-SCS [HEK12]</p>
    <p>Yao-PhasingGMW-Phasing</p>
  </div>
  <div class="page">
    <p>Our Contributions (3)</p>
    <p>OT-Phasing</p>
  </div>
  <div class="page">
    <p>OT-Phasing</p>
    <p>Use permutation hashing in OT+Hasing protocol [PSZ14]</p>
    <p>Further protocol optimizations:</p>
    <p>Use more hash functions for the hashing-to-bins routine  decreases number of bins by factor 2</p>
    <p>Generate only one random string per bin  decreases client's work for larger sets</p>
  </div>
  <div class="page">
    <p>Improvements OT-based PSI</p>
    <p>PSI on varying set sizes of different length for 128-bit security on Gbit LAN</p>
  </div>
  <div class="page">
    <p>Improvements OT-based PSI (cont.)</p>
    <p>PSI on n=16 mio elements of different length for 128-bit security on Gbit LAN</p>
    <p>OT-Phasing (=32)</p>
    <p>Nave</p>
    <p>DH-ECC [M86]</p>
    <p>OT-based [PSZ14] (=32)</p>
    <p>(=64)</p>
    <p>(=128)</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>More efficient PSI protocols with reduced overhead  Only factor 3 slower than currently used (insecure) solutions</p>
    <p>Permutation hashing to reduce bit-length of elements</p>
    <p>More efficient and scalable Circuit-based PSI</p>
    <p>Code is online on GitHub http://encrypto.de/PSI</p>
  </div>
  <div class="page">
    <p>Phasing: Private Set Intersection using Permutation-based Hashing</p>
    <p>Questions?</p>
  </div>
  <div class="page">
    <p>References</p>
    <p>[M86] C. Meadows: A more efficient cryptographic matchmaking protocol for use in the absence of a continuously available third party. In IEEE S&amp;P 86.</p>
    <p>[CT10] E. De Cristofaro, G. Tsudik: Practical private set intersection protocols with linear complexity. In FC'10.</p>
    <p>[HEK12] Y. Huang, D. Evans, J. Katz: Private set-intersection: Are garbled circuits better than custom protocols? In NDSS'12.</p>
    <p>[DCW13] C. Dong, L. Chen, Z. Wen: When private set intersection meets big data: An efficient and scalable protocol. In ACM CCS'13.</p>
    <p>[PSZ14] B. Pinkas, T. Schneider, M. Zohner: Faster PSI based on OT extension. In USENIX'14.</p>
    <p>[ANS10] Y. Arbitman, M. Naor, G. Segev: Backyard Cuckoo Hashing. In FOCS'10.</p>
  </div>
</Presentation>
