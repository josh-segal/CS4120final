<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>High-Speed Network Traffic Monitoring Using ntopng</p>
    <p>Luca Deri @lucaderi</p>
  </div>
  <div class="page">
    <p>Some History</p>
    <p>In 1998, the original ntop has been created.</p>
    <p>It was a C-based app embedding a web server able to capture traffic and analyse it.</p>
    <p>Contrary to many tools available at that time, ntop used a web GUI to report traffic activities.</p>
    <p>It is available for Unix and Windows under GPL.</p>
  </div>
  <div class="page">
    <p>ntop Architecture</p>
    <p>HTTP/HTTPS RRD Cisco NetFlow InMon sFlow</p>
  </div>
  <div class="page">
    <p>ntopng Architecture</p>
    <p>Three different and self-contained components, communicating with clean API calls.</p>
    <p>Users</p>
    <p>HTTP Lua-based Web Reports</p>
    <p>nDPI-based C++ Monitoring Engine</p>
    <p>PF_RING Kernel Module and Drivers</p>
    <p>Internet Traffic</p>
    <p>Lua API Calls</p>
    <p>PF_RING C API Calls(Linux) Kernel</p>
    <p>Data Cache</p>
  </div>
  <div class="page">
    <p>ntopng Monitoring Engine</p>
    <p>Coded in C++ and based the concept of flow (set of packets with the same 6-tuple).</p>
    <p>Flows are inspected with a home-grown DPIlibrary named nDPI aiming to discover the real application protocol (no ports are used).</p>
    <p>Information is clustered per: ! (Capture) Network Device ! Flow ! Host ! High-level Aggregations</p>
  </div>
  <div class="page">
    <p>Information Lifecycle</p>
    <p>ntopng keeps in memory live information such as flows and hosts statistics.</p>
    <p>As the memory cannot be infinite, periodically non-recent information is harvested.</p>
    <p>Users can specify preferences for data purge:</p>
  </div>
  <div class="page">
    <p>Packet Processing Journey</p>
  </div>
  <div class="page">
    <p>The need for DPI in Monitoring</p>
    <p>Limit traffic analysis at packet header level it is no longer enough (nor cool).</p>
    <p>Network administrators want to know the real protocol without relying on the port being used.</p>
    <p>Selected protocols can be precisely dissected (e.g. HTTP) in order to extract information, but on the rest of the traffic it is necessary to tell network administrators what is the protocol flowing in their network.</p>
  </div>
  <div class="page">
    <p>Say hello to nDPI  ntop has decided to develop its own GPL DPI toolkit in order to build an open DPI layer for ntop and third party applications.</p>
    <p>Supported protocols (&gt; 180) include: P2P (Skype, BitTorrent) Messaging (Viber, Whatsapp, MSN, The Facebook) Multimedia (YouTube, Last.gm, iTunes) Conferencing (Webex, CitrixOnLine) Streaming (Zattoo, Icecast, Shoutcast, Netflix) Business (VNC, RDP, Citrix, *SQL)</p>
  </div>
  <div class="page">
    <p>nDPI on ntopng</p>
    <p>In ntopng all flows are analysed through nDPI to associate an application protocol to them.</p>
    <p>L7 statistics are available per flow, host, and interface (from which monitoring data is received).</p>
    <p>For network interfaces and local hosts, nDPI statistics are saved persistently to disk (in RRD format).</p>
  </div>
  <div class="page">
    <p>nDPI on ntopng: Interface Report</p>
  </div>
  <div class="page">
    <p>ntopng as a NetFlow/sFlow Collector [1/2]</p>
    <p>The old ntop included a NetFlow/sFlow collector. Considered the effort required to support all the various NetFlow dialects (e.g. Cisco ASA flows are not really flows), in ntopng we have made a different design choice.</p>
  </div>
  <div class="page">
    <p>ntopng as a NetFlow/sFlow Collector [2/2]</p>
    <p>Flows are sent in the following format  {8:&quot;192.12.193.11&quot;,&quot;12&quot;:&quot;192.168.1.92&quot;,&quot;15&quot;:&quot;0.0.0.0&quot;,&quot;10&quot;:0,&quot;14&quot;:0,&quot;2&quot;:5,&quot;1&quot;:</p>
    <p>Where:  &lt;Element ID&gt;: &lt;value&gt; (example 8 = IPV4_SRC_ADDR)</p>
    <p>nProbe has been integrated with sysdig.org to report network+system information, so we can have visibility of network activities carried on by system processes.</p>
  </div>
  <div class="page">
    <p>Flow/Process Drill-down [1/2]</p>
  </div>
  <div class="page">
    <p>Flow/Process Drill-down [2/2]</p>
    <p>}</p>
    <p>}</p>
    <p>Dynamically Updated</p>
    <p>Dynamically Updated</p>
    <p>Flow-to-Process binding</p>
    <p>Flow-to-Process binding</p>
  </div>
  <div class="page">
    <p>ntopng on Docker</p>
    <p>Sniff on all containers</p>
    <p>Long-term Reports</p>
  </div>
  <div class="page">
    <p>ntopng on OpenStack</p>
  </div>
  <div class="page">
    <p>Building a Cheap ntopng Probe</p>
    <p>www.wawtechnologies.com</p>
    <p>Soon a Kickstarter campaign will be launched targeting the creation of cheap monitoring devices</p>
  </div>
  <div class="page">
    <p>Final Remarks</p>
    <p>We believe that open-source traffic network monitoring should be simple and cheap.</p>
    <p>Commodity hardware, with adequate software, can now match the performance and flexibility that markets require. With the freedom of open source.</p>
    <p>ntopng is available under GNU GPLv3 from http://www.ntop.org/.</p>
  </div>
</Presentation>
