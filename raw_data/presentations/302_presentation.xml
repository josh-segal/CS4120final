<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>UCL Crypto Group Microelectronics Laboratory Running mixnet-based elections with Helios - Aug. 2011 1</p>
    <p>Running mixnet-based elections with Helios</p>
    <p>Philippe Bulens  Damien Giry  Olivier Pereira</p>
    <p>EVT/WOTE11</p>
  </div>
  <div class="page">
    <p>UCL Crypto Group Microelectronics Laboratory Running mixnet-based elections with Helios - Aug. 2011 2</p>
    <p>Helios</p>
    <p>I Open-audit elections from your browser I ubiquitous but computationally limited voting client</p>
    <p>I Low-coercion elections I hard to separate voter from coercer in a remote setting I also true for mixnet-based tallying</p>
    <p>I More and more experiences: &gt; 40000 votes tallied among which  8400 through mixnets (the others using homomorphic tallying)</p>
  </div>
  <div class="page">
    <p>UCL Crypto Group Microelectronics Laboratory Running mixnet-based elections with Helios - Aug. 2011 3</p>
    <p>Homomorphic vs. mixnet tallying</p>
    <p>Homomorphic tallying</p>
    <p>I Public aggregation of ballots into election outcome ,</p>
    <p>I Trustees decrypt outcome only</p>
    <p>I little info. revealed , I little computation needed</p>
    <p>, I ZK proofs of ballot validity</p>
    <p>I lot of computation / I need changes depending</p>
    <p>on election rules / I validity can be checked at</p>
    <p>submission time ,</p>
    <p>Burden on voters and programmers</p>
    <p>Mixnet based tallying</p>
    <p>I Trustees anonymise ballots /</p>
    <p>I Trustees decrypt all shuffled ballots</p>
    <p>I more info. revealed / I computation grows with</p>
    <p>number of voters / I Validity checked after</p>
    <p>decryption I no validity proof needed , I universal ballot format , I invalid ballots hard to</p>
    <p>trace /</p>
    <p>Burden on trustees and election organizers</p>
  </div>
  <div class="page">
    <p>UCL Crypto Group Microelectronics Laboratory Running mixnet-based elections with Helios - Aug. 2011 4</p>
    <p>UCL Student elections</p>
    <p>AGL (the UCL student association), Sep. 2009:</p>
    <p>Could we have verifiable elections on the Internet?</p>
    <p>- Well, how do your elections work?</p>
    <p>- We typically have  250 candidates, organized in lists (parties), and voters can select as many candidates they like as long as they are from the same list</p>
    <p>That killed the homomorphic tallying approach for current JavaScript crypto implementation performance:</p>
    <p>I ZK proofs of ballot validity I lot of computation /</p>
  </div>
  <div class="page">
    <p>UCL Crypto Group Microelectronics Laboratory Running mixnet-based elections with Helios - Aug. 2011 5</p>
    <p>Running mixnet-based elections with Helios</p>
    <p>What do we need to change?</p>
    <p>I Make mixing trustees independent (reencryption mixnet) I Keep same key management</p>
    <p>I one ciphertext per question, no validity proof I ciphertexts need to be proven independent</p>
    <p>I Mixing is a new task I Decryption becomes a computationally intensive task I Decryption must be followed by validity verification and</p>
    <p>counting</p>
  </div>
  <div class="page">
    <p>UCL Crypto Group Microelectronics Laboratory Running mixnet-based elections with Helios - Aug. 2011 6</p>
    <p>Ballot preparation</p>
    <p>How to reconcile these goals?</p>
    <p>Wikstrom [06] proposed submission secure augmented cryptosystems: I Take a basic cryptosystem, randomizable in our case I Augment it into a non-malleable (CCA2) cryptosystem I Have a strip procedure that:</p>
    <p>I enables public verification of the CCA2 ciphertext correctness I allows extracting the embedded basic ciphertext</p>
    <p>Resulting procedure:</p>
  </div>
  <div class="page">
    <p>UCL Crypto Group Microelectronics Laboratory Running mixnet-based elections with Helios - Aug. 2011 7</p>
    <p>Selecting an SSA cryptosystem</p>
    <p>Choice criteria:</p>
    <p>I Efficient solution</p>
    <p>I Do not degrade Helios computational model (DDH, random oracle)</p>
    <p>Candidates:</p>
    <p>I ElGamal + Schnorr PoK of randomness</p>
    <p>gy, v hy gr, e, r + e y</p>
    <p>I Efficient: 3 modexp/ciphertext, vote independent I But not known to be CCA secure under DDH in RO model</p>
    <p>I Double ElGamal (Naor-Yung) + Proof of identical ciphertexts</p>
    <p>gy, v hy gz, v hz, gr, gs, hr hs, e, r  e y, s + e  z</p>
    <p>I Less efficient: 8 modexp/ciphertext, vote independent I Known to be CCA secure under DDH in RO model</p>
  </div>
  <div class="page">
    <p>UCL Crypto Group Microelectronics Laboratory Running mixnet-based elections with Helios - Aug. 2011 8</p>
    <p>Selecting an SSA cryptosystem</p>
    <p>Choice criteria: I Efficient solution I Do not degrade Helios computational model (DDH, random oracle)</p>
    <p>More Candidates: I Cramer-Shoup encryption (advocated by [Wik06])</p>
    <p>gy, v hy gy, cy dyH(g y ,vhy ,gy )</p>
    <p>I Fairly efficient: 5 modexp/ciphertext, 1 is vote dependent I CCA secure under DDH in the standard model! I needs to reveal secret values used to generate c and d to check</p>
    <p>ciphertext validity</p>
    <p>Used to tally 4488 votes in March 2010 (out of  26000 potential): I worked fine, but . . . annoying in practice I ballot independence can only be checked after election closing I handling c and d adds burden on the trustees</p>
  </div>
  <div class="page">
    <p>UCL Crypto Group Microelectronics Laboratory Running mixnet-based elections with Helios - Aug. 2011 9</p>
    <p>Selecting an SSA cryptosystem</p>
    <p>Choice criteria:</p>
    <p>I Efficient solution</p>
    <p>I Do not degrade Helios computational model (DDH, random oracle)</p>
    <p>More Candidates:</p>
    <p>I Variant of TDH2 scheme [SG97] with homomorphic basic scheme</p>
    <p>gy, v hy gy, gr, gr, e, r + e y</p>
    <p>I Fairly efficient: 5 modexp/ciphertext, vote independent I CCA secure under DDH in RO model</p>
    <p>Used to tally 3951 votes in April 2011 (out of  26000 potential): I Much more comfortable in practice</p>
  </div>
  <div class="page">
    <p>UCL Crypto Group Microelectronics Laboratory Running mixnet-based elections with Helios - Aug. 2011 10</p>
    <p>Mixing ballots</p>
    <p>Selection criteria:</p>
    <p>I Efficient solution Many available: Furukawa et al., Groth, Neff, Wikstrom, . . .</p>
    <p>I Simple concepts, use expected to not be restricted by patents: Terelius, Wikstrom 09,10</p>
    <p>Usage: I 3 shuffling trustees interacting through voting server:</p>
    <p>I collecting ballots I uploading shuffled ballots and proofs I verifying other peoples proofs</p>
    <p>I Using single-file python script based on standard libraries I performances good enough:  25 ballots shuffled/sec.</p>
    <p>I If you need something more complete and efficient: Verificatum!</p>
  </div>
  <div class="page">
    <p>UCL Crypto Group Microelectronics Laboratory Running mixnet-based elections with Helios - Aug. 2011 11</p>
    <p>Lessons learned</p>
  </div>
</Presentation>
