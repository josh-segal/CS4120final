<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Evaluating Non-deterministic Multi-threaded Commercial</p>
    <p>Workloads</p>
    <p>Computer Sciences Department</p>
    <p>University of WisconsinMadison</p>
    <p>http://www.cs.wisc.edu/multifacet</p>
    <p>Alaa R. Alameldeen, Carl J. Mauer, Min Xu, Pacia J. Harper, Milo M.K. Martin, Daniel J. Sorin,</p>
    <p>Mark D. Hill, and David A. Wood</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Short measurements on real machines require multiple runs  Uncontrolled factors</p>
    <p>Want to separate random from systematic effects</p>
    <p>Simulation measurements use a single run  Simulators are deterministic</p>
    <p>No uncontrolled factors</p>
    <p>Wrong!  Multi-threaded workloads can be unstable  Small changes in timing cause large changes in results</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Instability may affect conclusions  Comparing Direct Mapped to Set-Associative Caches</p>
    <p>C y c le</p>
    <p>s (</p>
    <p>T h</p>
    <p>o u</p>
    <p>s a n</p>
    <p>d s )</p>
    <p>C y c le</p>
    <p>s (</p>
    <p>T h</p>
    <p>o u</p>
    <p>s a n</p>
    <p>d s )</p>
    <p>C y c le</p>
    <p>s (</p>
    <p>T h</p>
    <p>o u</p>
    <p>s a n</p>
    <p>d s )</p>
    <p>DM Mean</p>
    <p>SA Mean</p>
    <p>Direct Mapped</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>Introduction</p>
    <p>Methods</p>
    <p>Workloads</p>
    <p>Result I: Process scheduling</p>
    <p>Result II: Workload Variability</p>
    <p>Conclusion</p>
    <p>Future Work</p>
  </div>
  <div class="page">
    <p>Methods</p>
    <p>Real machine  Setup, tune, validate on a 16-processor Sun E6000  8  16 X speed-up for each application</p>
    <p>Simulator  Simics, Full-system simulator running Solaris 8</p>
    <p>Ruby, Memory timing simulator</p>
    <p>Experiments  Start from a warm checkpoint</p>
    <p>Measure throughput (transactions completed / time)</p>
  </div>
  <div class="page">
    <p>Workloads</p>
    <p>OLTP  TPC-C-like benchmark using a 1 GB database</p>
    <p>SPECjbb  Server-side Java-based middleware workload</p>
    <p>Apache  Static web serving: Apache driven by SURGE</p>
    <p>Slashcode  Dynamic web serving message board, using code and data</p>
    <p>similar to slashdot.org</p>
  </div>
  <div class="page">
    <p>Why unstable?</p>
    <p>Different paths are executed</p>
    <p>Hypotheses  Process scheduling</p>
    <p>Order of lock acquisition</p>
  </div>
  <div class="page">
    <p>Result I: Process scheduling</p>
    <p>Deterministic simulation of OLTP on uniprocessor</p>
    <p>Artificially injected misses to I-cache  Run1: 0, 100, 200</p>
    <p>Run2: 50, 150, 250</p>
    <p>Measured equivalent to 3-5 seconds in real system</p>
    <p>Run time difference of 9%</p>
    <p>Is process scheduling a factor?</p>
  </div>
  <div class="page">
    <p>Result I: Process scheduling</p>
    <p>Traced process groups scheduled on CPU</p>
  </div>
  <div class="page">
    <p>Methods, part II</p>
    <p>Pseudo-random perturbations  Run multiple runs from same checkpoint  All runs have same average memory latency</p>
    <p>Misses to main memory perturbed by 0-4%</p>
    <p>Calculate mean, standard deviation</p>
  </div>
  <div class="page">
    <p>Result II: Variability</p>
    <p>Variability  16-processor system running 8,000 OLTP transactions  20 runs from same checkpoint</p>
    <p>12  20 seconds in real system</p>
    <p>1 / Throughput (cycles per transaction)</p>
  </div>
  <div class="page">
    <p>Result II: Variability</p>
    <p>Miss rate (misses per transaction)</p>
  </div>
  <div class="page">
    <p>Result II: Variability</p>
    <p>Instructions executed (per transaction)  Hypothesis</p>
    <p>Spin-waiting hypothesis</p>
    <p>Lock-acquisition, idle loop, device activity</p>
  </div>
  <div class="page">
    <p>Result II: Variability</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Multi-threaded commercial workloads can be unstable even on uniprocessors</p>
    <p>Instability can affect conclusions in short runs</p>
    <p>Pseudo-random methodology can help</p>
    <p>Even within one workload variations exist</p>
  </div>
  <div class="page">
    <p>Future Work</p>
    <p>Root cause(s)?</p>
    <p>Methodology improvements</p>
    <p>Quantify instability further</p>
  </div>
  <div class="page">
    <p>Questions</p>
  </div>
</Presentation>
