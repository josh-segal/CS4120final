<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Diamond: Automating Data Management and Storage</p>
    <p>for Wide-area, Reactive Applications</p>
    <p>Irene Zhang Niel Lebeck Pedro Fonseca Brandon Holt Raymond Cheng</p>
    <p>Ariadna Norberg Arvind Krishnamurthy Henry M. Levy</p>
  </div>
  <div class="page">
    <p>Diamond: Automating Data Management and Storage</p>
    <p>for Wide-area, Reactive Applications</p>
    <p>Irene Zhang Niel Lebeck Pedro Fonseca Brandon Holt Raymond Cheng</p>
    <p>Ariadna Norberg Arvind Krishnamurthy Henry M. Levy</p>
  </div>
  <div class="page">
    <p>Reactive applications automatically propagate updates across mobile devices and the cloud.</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>Pin The Advisor</p>
    <p>Reactive applications automatically propagate updates across mobile devices and the cloud.</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>Pin The Advisor</p>
    <p>You earned 5 pts!</p>
    <p>Reactive applications automatically propagate updates across mobile devices and the cloud.</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>Pin The Advisor</p>
    <p>Reactive applications automatically propagate updates across mobile devices and the cloud.</p>
    <p>Its your turn!</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>Pin The Advisor</p>
    <p>Reactive applications automatically propagate updates across mobile devices and the cloud.</p>
    <p>Availability 5</p>
    <p>Its your turn!</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>Pin The Advisor</p>
    <p>Reactive applications automatically propagate updates across mobile devices and the cloud.</p>
    <p>Fault-tolerance</p>
    <p>Availability 5</p>
    <p>Its your turn!</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>Pin The Advisor</p>
    <p>Reactive applications automatically propagate updates across mobile devices and the cloud.</p>
    <p>Fault-tolerance</p>
    <p>Availability Consistency 5</p>
    <p>Its your turn!</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>You earned 5 pts!</p>
    <p>Which poses a challenge for app programmers.</p>
    <p>Pin The Advisor</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>You earned 5 pts!</p>
    <p>player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>Which poses a challenge for app programmers.</p>
    <p>Pin The Advisor</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>You earned 5 pts!</p>
    <p>irene 0</p>
    <p>niel 0</p>
    <p>turn irene</p>
    <p>Storage</p>
    <p>player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>Which poses a challenge for app programmers.</p>
    <p>Pin The Advisor</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>You earned 5 pts!</p>
    <p>irene 0</p>
    <p>niel 0</p>
    <p>turn irene</p>
    <p>Storage</p>
    <p>player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>Which poses a challenge for app programmers.</p>
    <p>Pin The Advisor</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>You earned 5 pts!</p>
    <p>irene 0</p>
    <p>niel 0</p>
    <p>turn irene</p>
    <p>Storage</p>
    <p>player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>Which poses a challenge for app programmers.</p>
    <p>niel</p>
    <p>Pin The Advisor</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>You earned 5 pts!</p>
    <p>irene 0</p>
    <p>niel 0</p>
    <p>turn irene</p>
    <p>Storage</p>
    <p>player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>writ e</p>
    <p>Which poses a challenge for app programmers.</p>
    <p>niel</p>
    <p>niel</p>
    <p>Pin The Advisor</p>
  </div>
  <div class="page">
    <p>You earned 5 pts!</p>
    <p>irene 0</p>
    <p>niel 0</p>
    <p>turn irene</p>
    <p>Storage</p>
    <p>player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>writ e</p>
    <p>Which poses a challenge for app programmers.</p>
    <p>niel</p>
    <p>niel</p>
    <p>Pin The Advisor</p>
  </div>
  <div class="page">
    <p>You earned 5 pts!</p>
    <p>irene 0</p>
    <p>niel 0</p>
    <p>turn irene</p>
    <p>Storage</p>
    <p>player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>writ e</p>
    <p>Which poses a challenge for app programmers.</p>
    <p>niel</p>
    <p>niel</p>
    <p>Pin The Advisor</p>
    <p>Notification Service</p>
  </div>
  <div class="page">
    <p>You earned 5 pts!</p>
    <p>irene 0</p>
    <p>niel 0</p>
    <p>turn irene</p>
    <p>Storage</p>
    <p>player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>writ e</p>
    <p>notify</p>
    <p>Which poses a challenge for app programmers.</p>
    <p>niel</p>
    <p>niel</p>
    <p>Pin The Advisor</p>
    <p>not ify</p>
    <p>Notification Service</p>
  </div>
  <div class="page">
    <p>You earned 5 pts!</p>
    <p>read 4irene 0 niel 0</p>
    <p>turn irene</p>
    <p>Storage</p>
    <p>player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>writ e</p>
    <p>notify</p>
    <p>Which poses a challenge for app programmers.</p>
    <p>niel</p>
    <p>niel</p>
    <p>Pin The Advisor</p>
    <p>not ify</p>
    <p>niel 5</p>
    <p>Notification Service</p>
    <p>Its your turn!</p>
  </div>
  <div class="page">
    <p>niel 0</p>
    <p>turn irene</p>
    <p>Storage</p>
    <p>player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>writ e</p>
    <p>notify</p>
    <p>Which poses a challenge for app programmers.</p>
    <p>niel</p>
    <p>niel</p>
    <p>Pin The Advisor</p>
    <p>not ify</p>
    <p>niel 5</p>
    <p>Notification Service</p>
    <p>Its your turn!</p>
  </div>
  <div class="page">
    <p>turn irene</p>
    <p>Storage</p>
    <p>player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>writ e</p>
    <p>Which poses a challenge for app programmers.</p>
    <p>niel</p>
    <p>niel</p>
    <p>Pin The Advisor</p>
    <p>Notification Service</p>
  </div>
  <div class="page">
    <p>You earned 5 pts!</p>
    <p>turn irene</p>
    <p>Storage</p>
    <p>player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>writ e</p>
    <p>Which poses a challenge for app programmers.</p>
    <p>niel</p>
    <p>niel</p>
    <p>Pin The Advisor</p>
    <p>Notification Service</p>
  </div>
  <div class="page">
    <p>You earned 5 pts!</p>
    <p>turn irene</p>
    <p>Storage</p>
    <p>player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>writ e</p>
    <p>Which poses a challenge for app programmers.</p>
    <p>niel</p>
    <p>niel</p>
    <p>This is a complex, distributed data management problem!</p>
    <p>Pin The Advisor</p>
    <p>Notification Service</p>
  </div>
  <div class="page">
    <p>You earned 5 pts!</p>
    <p>turn irene</p>
    <p>Storage</p>
    <p>player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App player1 0</p>
    <p>player1 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>writ e</p>
    <p>Which poses a challenge for app programmers.</p>
    <p>niel</p>
    <p>niel</p>
    <p>This is a complex, distributed data management problem!</p>
    <p>Pin The Advisor</p>
    <p>Notification Service</p>
    <p>Conclusion: Reactive applications require end-to-end data management with strong guarantees.</p>
  </div>
  <div class="page">
    <p>Which poses a challenge for app programmers.</p>
    <p>Conclusion: Reactive applications require end-to-end data management with strong guarantees.</p>
  </div>
  <div class="page">
    <p>Which poses a challenge for app programmers.</p>
    <p>Conclusion: Reactive applications require end-to-end data management with strong guarantees.</p>
  </div>
  <div class="page">
    <p>Which poses a challenge for app programmers.</p>
    <p>Conclusion: Reactive applications require end-to-end data management with strong guarantees.</p>
  </div>
  <div class="page">
    <p>Which poses a challenge for app programmers.</p>
    <p>Conclusion: Reactive applications require end-to-end data management with strong guarantees.</p>
  </div>
  <div class="page">
    <p>Which poses a challenge for app programmers.</p>
    <p>Conclusion: Reactive applications require end-to-end data management with strong guarantees.</p>
  </div>
  <div class="page">
    <p>Which poses a challenge for app programmers.</p>
    <p>Conclusion: Reactive applications require end-to-end data management with strong guarantees.</p>
  </div>
  <div class="page">
    <p>Diamond</p>
    <p>Diamond is the first reactive data management service, which provides the following guarantees:</p>
    <p>Ensures updates to shared data are consistent and durable</p>
    <p>Coordinates and synchronizes updates reliably across mobile clients and cloud storage</p>
    <p>Automatically triggers application code in response to updates to shared data</p>
  </div>
  <div class="page">
    <p>Talk Outline Diamond System &amp; Programming Model What does Diamond provide for reactive apps?</p>
    <p>Diamond Guarantees &amp; Implementation What does Diamond guarantee for reactive apps?</p>
    <p>Evaluation How does Diamond impact app complexity and performance?</p>
  </div>
  <div class="page">
    <p>Distributed Key-Value Store</p>
    <p>Diamond System Model</p>
    <p>Front-end Servers</p>
    <p>Diamond Cloud</p>
    <p>App Process</p>
    <p>Client Devices</p>
    <p>libDiamond</p>
    <p>App Process</p>
    <p>libDiamond</p>
  </div>
  <div class="page">
    <p>Diamond Programming Model</p>
    <p>Diamond Cloud</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Store App</p>
    <p>libDiamond 8</p>
    <p>Reactive Transactions Read-only transactions that re-execute app code when the read set updates.</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>PinAdvisor.cc x - +</p>
    <p>Simple data structures including primitives (e.g., string, long), collections (e.g., list) and Conflict-free Data Types (e.g., counter, set)</p>
    <p>Data type semantics avoid false sharing and enable commutative operations</p>
    <p>Defined in libDiamond language bindings</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>PinAdvisor.cc x - +</p>
    <p>Simple data structures including primitives (e.g., string, long), collections (e.g., list) and Conflict-free Data Types (e.g., counter, set)</p>
    <p>Data type semantics avoid false sharing and enable commutative operations</p>
    <p>Defined in libDiamond language bindings</p>
    <p>DCounter player1;</p>
    <p>player1</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>PinAdvisor.cc x - +</p>
    <p>Simple data structures including primitives (e.g., string, long), collections (e.g., list) and Conflict-free Data Types (e.g., counter, set)</p>
    <p>Data type semantics avoid false sharing and enable commutative operations</p>
    <p>Defined in libDiamond language bindings</p>
    <p>DCounter player1; DCounter player2;</p>
    <p>player1</p>
    <p>player2</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>PinAdvisor.cc x - +</p>
    <p>Simple data structures including primitives (e.g., string, long), collections (e.g., list) and Conflict-free Data Types (e.g., counter, set)</p>
    <p>Data type semantics avoid false sharing and enable commutative operations</p>
    <p>Defined in libDiamond language bindings</p>
    <p>DCounter player1; DCounter player2; DString turn;</p>
    <p>player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
  </div>
  <div class="page">
    <p>Diamond Cloud</p>
    <p>player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Store player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Diamond Programming Model</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
  </div>
  <div class="page">
    <p>Diamond Cloud</p>
    <p>player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Store player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Diamond Programming Model</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
  </div>
  <div class="page">
    <p>Diamond Cloud player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Store</p>
    <p>PinAdvisor.cc x - +</p>
    <p>Key abstraction for providing flexible, shared memory</p>
    <p>Gives apps control over what app data is shared and how it is organized</p>
    <p>Enables Diamond to automatically provide availability, fault-tolerance and consistency to RDTs</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
  </div>
  <div class="page">
    <p>Diamond Cloud player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>irene</p>
    <p>Store</p>
    <p>PinAdvisor.cc x - +</p>
    <p>rmap(player1, irene);</p>
    <p>Key abstraction for providing flexible, shared memory</p>
    <p>Gives apps control over what app data is shared and how it is organized</p>
    <p>Enables Diamond to automatically provide availability, fault-tolerance and consistency to RDTs</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
  </div>
  <div class="page">
    <p>Diamond Cloud player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>irene</p>
    <p>niel</p>
    <p>Store</p>
    <p>PinAdvisor.cc x - +</p>
    <p>rmap(player1, irene); rmap(player2, niel);</p>
    <p>Key abstraction for providing flexible, shared memory</p>
    <p>Gives apps control over what app data is shared and how it is organized</p>
    <p>Enables Diamond to automatically provide availability, fault-tolerance and consistency to RDTs</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
  </div>
  <div class="page">
    <p>Diamond Cloud player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>irene</p>
    <p>niel</p>
    <p>turn</p>
    <p>Store</p>
    <p>PinAdvisor.cc x - +</p>
    <p>rmap(player1, irene); rmap(player2, niel); rmap(turn, turn);</p>
    <p>Key abstraction for providing flexible, shared memory</p>
    <p>Gives apps control over what app data is shared and how it is organized</p>
    <p>Enables Diamond to automatically provide availability, fault-tolerance and consistency to RDTs</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
  </div>
  <div class="page">
    <p>Diamond Cloud</p>
    <p>player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>irene</p>
    <p>niel</p>
    <p>turn</p>
    <p>Store player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Diamond Programming Model</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
  </div>
  <div class="page">
    <p>Diamond Cloud</p>
    <p>player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>irene</p>
    <p>niel</p>
    <p>turn</p>
    <p>Store player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Diamond Programming Model</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
  </div>
  <div class="page">
    <p>player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>Diamond Cloud</p>
    <p>irene</p>
    <p>niel</p>
    <p>turn</p>
    <p>Store</p>
    <p>libDiamond PinAdvisor.cc x - +</p>
    <p>Execute application code to update rmapped RDTs</p>
    <p>Gives application programmers control over when to synchronize shared data</p>
    <p>Ensures safe concurrent access to shared data</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
  </div>
  <div class="page">
    <p>player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>Diamond Cloud</p>
    <p>irene</p>
    <p>niel</p>
    <p>turn</p>
    <p>Store</p>
    <p>libDiamond</p>
    <p>begin(); PinAdvisor.cc x - +</p>
    <p>Execute application code to update rmapped RDTs</p>
    <p>Gives application programmers control over when to synchronize shared data</p>
    <p>Ensures safe concurrent access to shared data</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
  </div>
  <div class="page">
    <p>player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>Diamond Cloud</p>
    <p>irene</p>
    <p>niel</p>
    <p>turn</p>
    <p>Store</p>
    <p>libDiamond</p>
    <p>begin(); player1 = 0;</p>
    <p>PinAdvisor.cc x - +</p>
    <p>Execute application code to update rmapped RDTs</p>
    <p>Gives application programmers control over when to synchronize shared data</p>
    <p>Ensures safe concurrent access to shared data</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
  </div>
  <div class="page">
    <p>player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>Diamond Cloud</p>
    <p>irene</p>
    <p>niel</p>
    <p>turn</p>
    <p>Store</p>
    <p>libDiamond</p>
    <p>begin(); player1 = 0; player2 = 0;</p>
    <p>PinAdvisor.cc x - +</p>
    <p>Execute application code to update rmapped RDTs</p>
    <p>Gives application programmers control over when to synchronize shared data</p>
    <p>Ensures safe concurrent access to shared data</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
  </div>
  <div class="page">
    <p>player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>Diamond Cloud</p>
    <p>irene</p>
    <p>niel</p>
    <p>turn</p>
    <p>Store</p>
    <p>libDiamond</p>
    <p>begin(); player1 = 0; player2 = 0; turn = irene;</p>
    <p>irene</p>
    <p>PinAdvisor.cc x - +</p>
    <p>Execute application code to update rmapped RDTs</p>
    <p>Gives application programmers control over when to synchronize shared data</p>
    <p>Ensures safe concurrent access to shared data</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
  </div>
  <div class="page">
    <p>player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>Diamond Cloud</p>
    <p>irene</p>
    <p>niel</p>
    <p>turn</p>
    <p>Store</p>
    <p>libDiamond</p>
    <p>irene</p>
    <p>begin(); player1 = 0; player2 = 0; turn = irene; commit();</p>
    <p>irene</p>
    <p>PinAdvisor.cc x - +</p>
    <p>Execute application code to update rmapped RDTs</p>
    <p>Gives application programmers control over when to synchronize shared data</p>
    <p>Ensures safe concurrent access to shared data</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
  </div>
  <div class="page">
    <p>Diamond Cloud</p>
    <p>player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>irene</p>
    <p>niel</p>
    <p>turn</p>
    <p>Store player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
    <p>Diamond Programming Model</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
    <p>irene</p>
    <p>irene</p>
    <p>irene</p>
  </div>
  <div class="page">
    <p>Diamond Cloud</p>
    <p>player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>irene</p>
    <p>niel</p>
    <p>turn</p>
    <p>Store player1</p>
    <p>player2</p>
    <p>turn</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
    <p>Diamond Programming Model</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
    <p>Reactive Transactions Read-only transactions that re-execute app code when the read set updates.</p>
    <p>irene</p>
    <p>irene</p>
    <p>irene</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>Irene Niel</p>
    <p>player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond PinAdvisor.cc x - +</p>
    <p>Key abstraction for automatically propagating updates to local data</p>
    <p>Gives apps a consistent view of shared data and control over what to sync</p>
    <p>Automatically triggers app code in response to updates from readwrite transactions to shared RDTs</p>
    <p>Reactive Transactions Read-only transactions that re-execute app code when the read set updates.</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>Irene Niel</p>
    <p>player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond PinAdvisor.cc x - +</p>
    <p>Key abstraction for automatically propagating updates to local data</p>
    <p>Gives apps a consistent view of shared data and control over what to sync</p>
    <p>Automatically triggers app code in response to updates from readwrite transactions to shared RDTs</p>
    <p>registerReactiveTxn</p>
    <p>Reactive Transactions Read-only transactions that re-execute app code when the read set updates.</p>
  </div>
  <div class="page">
    <p>Pin The Advisor</p>
    <p>Irene Niel</p>
    <p>player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond 00</p>
    <p>irene</p>
    <p>PinAdvisor.cc x - +</p>
    <p>Key abstraction for automatically propagating updates to local data</p>
    <p>Gives apps a consistent view of shared data and control over what to sync</p>
    <p>Automatically triggers app code in response to updates from readwrite transactions to shared RDTs</p>
    <p>registerReactiveTxn (displayUI(player1,</p>
    <p>player2, turn));</p>
    <p>Its your turn!</p>
    <p>Reactive Transactions Read-only transactions that re-execute app code when the read set updates.</p>
  </div>
  <div class="page">
    <p>Diamond Cloud</p>
    <p>player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>irene 0</p>
    <p>niel 0</p>
    <p>turn irene</p>
    <p>Store player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Diamond Programming Model</p>
    <p>Pin The Advisor</p>
    <p>Pin The Advisor</p>
    <p>Reactive Transactions Read-only transactions that re-execute app code when the read set updates.</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
  </div>
  <div class="page">
    <p>Diamond Cloud</p>
    <p>player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>irene 0</p>
    <p>niel 0</p>
    <p>turn irene</p>
    <p>Store player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Diamond Programming Model</p>
    <p>Pin The Advisor</p>
    <p>Pin The Advisor</p>
    <p>You earned 5 pts!</p>
    <p>Reactive Transactions Read-only transactions that re-execute app code when the read set updates.</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
  </div>
  <div class="page">
    <p>Diamond Cloud</p>
    <p>player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>irene 0</p>
    <p>niel 0</p>
    <p>turn irene</p>
    <p>Store player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Diamond Programming Model</p>
    <p>Pin The Advisor</p>
    <p>Pin The Advisor</p>
    <p>You earned 5 pts!</p>
    <p>Reactive Transactions Read-only transactions that re-execute app code when the read set updates.</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
  </div>
  <div class="page">
    <p>Diamond Cloud</p>
    <p>player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>irene 0</p>
    <p>niel 0</p>
    <p>turn irene</p>
    <p>Store player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Diamond Programming Model</p>
    <p>Pin The Advisor</p>
    <p>Pin The Advisor</p>
    <p>niel</p>
    <p>You earned 5 pts!</p>
    <p>begin</p>
    <p>commit5</p>
    <p>Reactive Transactions Read-only transactions that re-execute app code when the read set updates.</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
  </div>
  <div class="page">
    <p>Diamond Cloud</p>
    <p>player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>irene 0</p>
    <p>niel 0</p>
    <p>turn irene</p>
    <p>Store player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Diamond Programming Model</p>
    <p>Pin The Advisor</p>
    <p>Pin The Advisor</p>
    <p>niel</p>
    <p>You earned 5 pts!</p>
    <p>begin</p>
    <p>commit5</p>
    <p>Reactive Transactions Read-only transactions that re-execute app code when the read set updates.</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
  </div>
  <div class="page">
    <p>Diamond Cloud</p>
    <p>player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>irene 0</p>
    <p>niel 0</p>
    <p>turn irene</p>
    <p>Store player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Diamond Programming Model</p>
    <p>Pin The Advisor</p>
    <p>Pin The Advisor</p>
    <p>niel</p>
    <p>niel</p>
    <p>niel</p>
    <p>You earned 5 pts!</p>
    <p>begin</p>
    <p>commit5</p>
    <p>Reactive Transactions Read-only transactions that re-execute app code when the read set updates.</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
  </div>
  <div class="page">
    <p>Diamond Cloud</p>
    <p>player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>irene 0</p>
    <p>niel 0</p>
    <p>turn irene</p>
    <p>Store player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Diamond Programming Model</p>
    <p>Pin The Advisor</p>
    <p>Pin The Advisor</p>
    <p>niel</p>
    <p>niel</p>
    <p>niel</p>
    <p>You earned 5 pts!</p>
    <p>begin</p>
    <p>commit5</p>
    <p>Reactive Transactions Read-only transactions that re-execute app code when the read set updates.</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
  </div>
  <div class="page">
    <p>Diamond Cloud</p>
    <p>player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>irene 0</p>
    <p>niel 0</p>
    <p>turn irene</p>
    <p>Store player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Diamond Programming Model</p>
    <p>Pin The Advisor</p>
    <p>Pin The Advisor</p>
    <p>niel</p>
    <p>niel</p>
    <p>niel</p>
    <p>You earned 5 pts!</p>
    <p>begin</p>
    <p>commit5 5</p>
    <p>Reactive Transactions Read-only transactions that re-execute app code when the read set updates.</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
    <p>Its your turn!</p>
  </div>
  <div class="page">
    <p>Diamond Cloud</p>
    <p>player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>irene 0</p>
    <p>niel 0</p>
    <p>turn irene</p>
    <p>Store player1 0</p>
    <p>player2 0</p>
    <p>turn irene</p>
    <p>App</p>
    <p>libDiamond</p>
    <p>Diamond Programming Model</p>
    <p>Pin The Advisor</p>
    <p>Pin The Advisor</p>
    <p>niel</p>
    <p>niel</p>
    <p>niel</p>
    <p>You earned 5 pts!</p>
    <p>begin</p>
    <p>commit5 5</p>
    <p>Reactive Transactions Read-only transactions that re-execute app code when the read set updates.</p>
    <p>Reactive Data Map (rmap) Binding between RDTs in the app and the Diamond store</p>
    <p>Read-write Transactions Read-write transactions to update shared RDTs.</p>
    <p>Reactive Data Types (RDTs) Shared, persistent data structures</p>
    <p>Its your turn!Automated end-to-end data management and storage with</p>
    <p>fault-tolerance, availability and consistency</p>
  </div>
  <div class="page">
    <p>Talk Outline</p>
    <p>Diamond System &amp; Programming Model What does Diamond provide for reactive apps?</p>
    <p>Diamond Guarantees &amp; Implementation What does Diamond guarantee for reactive apps?</p>
    <p>Evaluation How does Diamond impact app complexity and performance?</p>
    <p>Automated end-to-end data management and storage.</p>
  </div>
  <div class="page">
    <p>Diamond ACID+R Guarantees</p>
    <p>Atomicity - All or no updates to shared data in a read-write transaction complete.</p>
    <p>Consistency - All accesses in a transaction (read-write or reactive) reflect a single, point-in-time view of shared data.</p>
    <p>Isolation - All transactions reflect a serial execution order over shared data.</p>
    <p>Durability - All updates in committed transactions are never lost.</p>
    <p>Reactivity - All accesses in reactive transactions will eventually reflect the latest updates.</p>
  </div>
  <div class="page">
    <p>Diamond Isolation Levels</p>
    <p>Read-write Isolation Level Reactive Isolation Level</p>
    <p>Strict Serializability Serializable Snapshot</p>
    <p>Snapshot Isolation Serializable Snapshot</p>
    <p>Read Committed Read Committed</p>
    <p>Stronger Guarantees</p>
    <p>Better Performance</p>
  </div>
  <div class="page">
    <p>Diamond Implementation</p>
    <p>Data-type Optimistic Concurrency Control</p>
    <p>Multi-versioned caching  Data Push Notifications</p>
    <p>Alice libDiamond Front-end Back-end</p>
    <p>read(a)</p>
    <p>&lt;1,[11,13)&gt;</p>
    <p>gettimestamp</p>
    <p>Front-end libDiamond Bob</p>
    <p>write(b,1)</p>
    <p>commit prepare</p>
    <p>validation</p>
    <p>okok commit</p>
    <p>pub (b,1,16) notify</p>
    <p>(b,1,16) re-exec read(b)</p>
    <p>register</p>
    <p>read(b,14)</p>
    <p>&lt;0,[11,15)&gt; reg(14,[b])sub</p>
    <p>(b,14)</p>
    <p>e x</p>
    <p>e c</p>
    <p>u t e</p>
    <p>c o</p>
    <p>m m</p>
    <p>it</p>
    <p>callback</p>
    <p>Read-Write Transaction Reactive Transaction</p>
    <p>R e</p>
    <p>g is</p>
    <p>t e</p>
    <p>r N</p>
    <p>o t if</p>
    <p>y</p>
    <p>Diamond Transaction Protocol Wide-area Optimizations</p>
    <p>Take a look at the paper!</p>
  </div>
  <div class="page">
    <p>Talk Outline</p>
    <p>Diamond System &amp; Programming Model What does Diamond provide for reactive apps?</p>
    <p>Automated end-to-end data management and storage. Diamond Guarantees &amp; Implementation What does Diamond guarantee for reactive apps?</p>
    <p>Evaluation How does Diamond impact app complexity and performance?</p>
    <p>Strong ACID+R transactional guarantees</p>
  </div>
  <div class="page">
    <p>Evaluation Overview</p>
    <p>Does Diamond simplify reactive applications?</p>
    <p>How does Diamond perform compare to a hand coded implementation?</p>
    <p>Testbed: Google Compute Engine VMs (5 shards x 3 replicas)</p>
    <p>Workload: Retwis-based Twitter benchmark</p>
  </div>
  <div class="page">
    <p>Diamond reduces the complexity and improves the guarantees of reactive apps.</p>
    <p>Application Original LoC Diamond LoC % Saved</p>
    <p>Multi-player Game 46 34 26%</p>
    <p>Chat Room 335 225 33%</p>
    <p>Scrabble clone 8729 7603 13%</p>
    <p>Twitter clone 14,278 12,554 13%</p>
  </div>
  <div class="page">
    <p>Diamond reduces the complexity and improves the guarantees of reactive apps.</p>
    <p>Application Original LoC Diamond LoC % Saved</p>
    <p>Multi-player Game 46 34 26%</p>
    <p>Chat Room 335 225 33%</p>
    <p>Scrabble clone 8729 7603 13%</p>
    <p>Twitter clone 14,278 12,554 13%</p>
    <p>No UI. Mostly</p>
    <p>sync code.</p>
  </div>
  <div class="page">
    <p>Diamond reduces the complexity and improves the guarantees of reactive apps.</p>
    <p>Application Original LoC Diamond LoC % Saved</p>
    <p>Multi-player Game 46 34 26%</p>
    <p>Chat Room 335 225 33%</p>
    <p>Scrabble clone 8729 7603 13%</p>
    <p>Twitter clone 14,278 12,554 13%</p>
    <p>No UI. Mostly</p>
    <p>sync code.</p>
    <p>Full UI. Complex app logic.</p>
  </div>
  <div class="page">
    <p>Diamond reduces the complexity and improves the guarantees of reactive apps.</p>
    <p>Application Original LoC Diamond LoC % Saved</p>
    <p>Multi-player Game 46 34 26%</p>
    <p>Chat Room 335 225 33%</p>
    <p>Scrabble clone 8729 7603 13%</p>
    <p>Twitter clone 14,278 12,554 13%</p>
    <p>No UI. Mostly</p>
    <p>sync code.</p>
    <p>Full UI. Complex app logic.</p>
    <p>+durability</p>
    <p>+durability +consistency</p>
    <p>+durability</p>
    <p>+isolation</p>
    <p>+reactivity</p>
    <p>+reactivity</p>
  </div>
  <div class="page">
    <p>Diamonds data management has low overhead. Th</p>
    <p>ro ug</p>
    <p>hp ut</p>
    <p>(t</p>
    <p>xn /s</p>
    <p>ec )</p>
    <p>Redis Diamond Read</p>
    <p>Committed</p>
    <p>Diamond Strict</p>
    <p>Serializability24</p>
  </div>
  <div class="page">
    <p>Diamonds data management has low overhead. Th</p>
    <p>ro ug</p>
    <p>hp ut</p>
    <p>(t</p>
    <p>xn /s</p>
    <p>ec )</p>
    <p>Redis Diamond Read</p>
    <p>Committed</p>
    <p>Diamond Strict</p>
    <p>Serializability</p>
  </div>
  <div class="page">
    <p>Diamonds data management has low overhead. Th</p>
    <p>ro ug</p>
    <p>hp ut</p>
    <p>(t</p>
    <p>xn /s</p>
    <p>ec )</p>
    <p>Redis Diamond Read</p>
    <p>Committed</p>
    <p>Diamond Strict</p>
    <p>Serializability</p>
    <p>Strong Consistency</p>
  </div>
  <div class="page">
    <p>Diamonds data management has low overhead. Th</p>
    <p>ro ug</p>
    <p>hp ut</p>
    <p>(t</p>
    <p>xn /s</p>
    <p>ec )</p>
    <p>Redis Diamond Read</p>
    <p>Committed</p>
    <p>Diamond Strict</p>
    <p>Serializability</p>
    <p>Weak Consistency</p>
    <p>Strong Consistency Linearizable</p>
    <p>Transactions</p>
  </div>
  <div class="page">
    <p>What does Diamond provide for reactive apps?</p>
    <p>Automated end-to-end data management and storage. What does Diamond guarantee for reactive apps?</p>
    <p>Strong ACID+R transactional guarantees. How does Diamond impact app complexity and performance?</p>
    <p>Simplifies reactive apps with low overhead.</p>
    <p>Summary</p>
    <p>https://github.com/UWSysLab/diamond</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Distributed Programming Frameworks Meteor, Parse, Firebase, Mjolnir, Mapjax, RethinkDB</p>
    <p>Client-side Programming Frameworks React, Angular, Blaze, ReactiveX</p>
    <p>Distributed Storage Systems Redis, MongoDB, Dropbox</p>
    <p>Notification/Pub-Sub/Streaming Services Thialfi, Apache Kafka, Amazon Kinesis</p>
  </div>
</Presentation>
