<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>http://aqualab.cs.northwestern.edu</p>
    <p>David Choffnes</p>
    <p>Jordi Duch, Dean Malmgren, Roger Guimer,</p>
    <p>Fabin Bustamante, Lus A. Nunes Amaral</p>
    <p>Northwestern University</p>
  </div>
  <div class="page">
    <p>David Choffnes 2</p>
    <p>Privacy increasingly important, elusive goal</p>
    <p>As connectivity improves, privacy declines</p>
    <p>Affects Web browsing, social networks,</p>
    <p>P2P systems</p>
    <p>Existing attacks</p>
    <p>Snoop connections to reveal content</p>
    <p>Infiltrate system with rogue clients to pollute or spy</p>
    <p>Interfere with targeted connections</p>
  </div>
  <div class="page">
    <p>David Choffnes 3</p>
    <p>In P2P swarming, attacks can involve identifying</p>
    <p>Content that users download</p>
    <p>Content that users share</p>
    <p>Who they share it with</p>
    <p>Available countermeasures</p>
    <p>Encrypt connections</p>
    <p>Decentralize swarm membership identification</p>
    <p>Darknets, networks of trust</p>
    <p>Are the connections themselves a threat to privacy?</p>
  </div>
  <div class="page">
    <p>David Choffnes 4</p>
    <p>Goal for this work</p>
    <p>Determine how much information is revealed by</p>
    <p>connection patterns in swarming P2P system</p>
    <p>Simple enough in theory, but</p>
    <p>Connections require simultaneous, shared interest in</p>
    <p>content</p>
    <p>Intimately tied to user behavior, difficult to model</p>
    <p>Spread of P2P makes empirical connection data difficult</p>
    <p>to gather</p>
    <p>Ono dataset for connection traces</p>
    <p>Currently installed by nearly 1,000,000 BitTorrent users</p>
    <p>Gathers per-connection data (but no info for content)</p>
  </div>
  <div class="page">
    <p>David Choffnes 5</p>
    <p>Is there (global) structure to BT connections?</p>
    <p>Reasons for</p>
    <p>People share interest for a variety of content</p>
    <p>Regularity in time-of-day usage</p>
    <p>Reasons against</p>
    <p>Random connections in BitTorrent</p>
    <p>Difference in transfer rates</p>
    <p>Selfish behavior (download and depart)</p>
    <p>Geographic spread of users (time zones)</p>
    <p>Examine structure through graph representation</p>
    <p>BT hosts are nodes, connections are edges</p>
    <p>Popular approach: identifying communities in the graph</p>
  </div>
  <div class="page">
    <p>David Choffnes 6</p>
    <p>Graph representation</p>
    <p>Build weekly graphs (account for weekly patterns)</p>
    <p>Each edge assigned weight according to number of</p>
    <p>days connected during the week</p>
    <p>Dataset</p>
    <p>March 1-31, 2008</p>
    <p>Restricted to Ono</p>
    <p>users connections</p>
  </div>
  <div class="page">
    <p>David Choffnes 7</p>
    <p>Do these user connections reveal communities?</p>
    <p>Can be solved by maximizing modularity</p>
    <p>Given a connection between nodes i and j, how</p>
    <p>much of their total connection strength is it?</p>
  </div>
  <div class="page">
    <p>David Choffnes 8</p>
    <p>Do these user connections reveal communities?</p>
    <p>Can be solved by maximizing modularity</p>
    <p>Only count those in the same community</p>
  </div>
  <div class="page">
    <p>David Choffnes 9</p>
    <p>Do these user connections reveal communities?</p>
    <p>Can be solved by maximizing modularity</p>
    <p>Determines amount of connection weight within</p>
    <p>communities as opposed to between them</p>
    <p>Challenges</p>
    <p>NP-hard problem</p>
    <p>Many heuristic techniques</p>
    <p>Extremal optimization</p>
    <p>Good trade-off between speed and accuracy O(N2 ln N)</p>
    <p>Nearly identical to other randomized approaches</p>
  </div>
  <div class="page">
    <p>David Choffnes 10Communities in BitTorrent</p>
    <p>Connection strength</p>
    <p>is 5x to 25x stronger</p>
    <p>inside communities</p>
    <p>compared to between</p>
  </div>
  <div class="page">
    <p>David Choffnes 11Communities in BitTorrent</p>
    <p>Modularity of random: 0.168 ( 0.012)</p>
    <p>Real max modularity: 0.439</p>
    <p>Detected communities are significant!</p>
  </div>
  <div class="page">
    <p>David Choffnes 12</p>
    <p>General advantages to communities</p>
    <p>Allows optimizations based on structure</p>
    <p>Social networks: Suggest friends</p>
    <p>Web browsing: Target advertising</p>
    <p>P2P file-sharing systems: Infer content interest</p>
    <p>Risks of communities in P2P systems</p>
    <p>Copyright enforcement</p>
    <p>Censorship</p>
    <p>Guilt by association</p>
  </div>
  <div class="page">
    <p>David Choffnes 13</p>
    <p>Communities for guilt by association</p>
    <p>Small numbers of hosts predict behavior of entire group</p>
    <p>Not a legal definition, per se</p>
    <p>Facilitates surveillance, e.g.</p>
    <p>Real world example (McCarthy era)</p>
    <p>Alder v. Board of Education of New York (1952)</p>
    <p>US law was upheld, dissenting opinion:</p>
    <p>The present law proceeds on a principle repugnant to</p>
    <p>our society  guilt by association.[...] Teachers are</p>
    <p>under constant surveillance; their utterances are</p>
    <p>watched for clues to dangerous thoughts.</p>
    <p>- Justice William O. Douglas</p>
  </div>
  <div class="page">
    <p>David Choffnes 14</p>
    <p>Guilt by association in BitTorrent</p>
    <p>same without monitoring them directly</p>
    <p>Can this be used to efficiently monitor BT?</p>
  </div>
  <div class="page">
    <p>David Choffnes 15</p>
    <p>Approaches to building connection graph</p>
    <p>Trackers: The swarm is the community</p>
    <p>Difficult with trackerless torrents</p>
    <p>Limited to per-torrent view</p>
    <p>Does not reveal connection information</p>
    <p>Peer Exchange (PEX)</p>
    <p>Reveals peers connections to a third party</p>
    <p>Direct observation</p>
    <p>Evaluate the worst-case scenario for attacker</p>
    <p>Use only PEX and direct observation</p>
    <p>Vary number of monitoring hosts (rogue clients)</p>
    <p>Vary peers being monitored (random/most connected)</p>
  </div>
  <div class="page">
    <p>David Choffnes 16</p>
    <p>Randomly select peers to monitor</p>
    <p>monitored</p>
    <p>reveals 80% of</p>
    <p>the network</p>
    <p>(d2)Single monitor</p>
    <p>reveals 70% of</p>
    <p>the network</p>
    <p>(d3)</p>
  </div>
  <div class="page">
    <p>David Choffnes 17</p>
    <p>Select the most connected peers to monitor</p>
    <p>Single monitor reveals</p>
    <p>(d2)</p>
    <p>Single monitor</p>
    <p>reveals nearly the</p>
    <p>entire network (d3)</p>
  </div>
  <div class="page">
    <p>David Choffnes 18</p>
    <p>Monitoring reveals most (but not all) of the network</p>
    <p>What can be inferred from these partial views?</p>
    <p>How reliable are these inferences?</p>
    <p>Reliable community inferences</p>
    <p>Determine probability that node is classified in partial</p>
    <p>network given that it is in the full network</p>
    <p>Run extremal optimization R times</p>
    <p>How many times () do communities overlap?</p>
    <p>Results (partial)</p>
    <p>=8, 0.01% monitored, d  3: correct 85% of the time</p>
    <p>=8, 1% monitored, d  2: correct 86% of the time</p>
  </div>
  <div class="page">
    <p>David Choffnes 19</p>
    <p>Key assumptions for guilt by association</p>
    <p>Connections == shared interest</p>
    <p>Strong communities (relatively low noise in graph)</p>
    <p>To preserve privacy, attack the assumptions</p>
    <p>Add random connections</p>
    <p>Number proportional to real ones</p>
    <p>How well does this work?</p>
    <p>Undetectability: How well it hides communities</p>
    <p>Deniability: How many detected communities are wrong</p>
  </div>
  <div class="page">
    <p>David Choffnes 20</p>
    <p>Percent of time nodes not classified into</p>
    <p>communities</p>
    <p>edges hides</p>
    <p>communities more</p>
    <p>than half the time</p>
  </div>
  <div class="page">
    <p>David Choffnes 21</p>
    <p>Percent of time nodes incorrectly classified into</p>
    <p>communities</p>
    <p>Similar results with</p>
    <p>undetectability</p>
  </div>
  <div class="page">
    <p>David Choffnes 22</p>
    <p>Strong communities naturally form</p>
    <p>Can be exploited using guilt by association</p>
    <p>Permits lightweight monitoring of BitTorrent</p>
    <p>Disrupting community identification</p>
    <p>Proposed and evaluated potential solution</p>
    <p>Adding random edges effectively mitigates threat</p>
  </div>
  <div class="page">
    <p>David Choffnes 23</p>
    <p>Is this really practical?</p>
    <p>Where do you get random connections?</p>
    <p>How much overhead is this?</p>
    <p>SwarmScreen</p>
    <p>Use real torrents selected at random</p>
    <p>Cover traffic contributes to real BT swarms</p>
    <p>Users can control privacy/performance overhead</p>
    <p>Deployed for Vuze BitTorrent client</p>
    <p>Come see the demo after the talk</p>
  </div>
</Presentation>
