<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Salsify: Low-Latency Network Video Through Tighter Integration Between a Video Codec and a Transport Protocol</p>
    <p>Sadjad Fouladi, John Emmons, Emre Orbay, Catherine Wu+, Riad S. Wahby, Keith Winstein Stanford University, +Saratoga High School</p>
    <p>https://snr.stanford.edu/salsify</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Salsify's New Architecture</p>
    <p>Measurement Testbed</p>
    <p>Evaluation</p>
    <p>Conclusions</p>
    <p>2</p>
  </div>
  <div class="page">
    <p>NSDI18</p>
    <p>AT&amp;T-MOBILE</p>
    <p>Teleoperation of Robots and Vehicles</p>
    <p>Remote Surgery</p>
    <p>Cloud Video Gaming</p>
  </div>
  <div class="page">
    <p>Video Conferencing</p>
  </div>
  <div class="page">
    <p>Video Conferencing (reality)</p>
  </div>
  <div class="page">
    <p>WebRTC (Chrome 65)</p>
  </div>
  <div class="page">
    <p>Current systems do not react fast enough to network variations, end up congesting</p>
    <p>the network, causing stalls and glitches.</p>
  </div>
  <div class="page">
    <p>Enter Salsify</p>
    <p>8</p>
    <p>Salsify is a new architecture for real-time Internet video.</p>
    <p>Salsify tightly integrates a video-aware transport protocol, with a functional video codec, allowing it to respond quickly to changing network conditions.</p>
    <p>Salsify achieves 4.6 lower p95-delay and 2.1 dB SSIM higher visual quality on average when compared with FaceTime, Hangouts, Skype, and WebRTC.</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Salsifys New Architecture</p>
    <p>Measurement Testbed</p>
    <p>Evaluation</p>
    <p>Conclusions</p>
    <p>9</p>
  </div>
  <div class="page">
    <p>video codec</p>
    <p>transport protocol</p>
    <p>Today's systems combine two (loosely-coupled) components</p>
    <p>10</p>
  </div>
  <div class="page">
    <p>Two distinct modules, two separate control loops</p>
    <p>11</p>
    <p>target bit rate</p>
    <p>video codec</p>
    <p>transport protocol</p>
    <p>compressed frames</p>
  </div>
  <div class="page">
    <p>Shortcomings of the conventional design</p>
    <p>The codec can only achieve the bit rate on average.</p>
    <p>Individual frames can still congest the network.</p>
    <p>The resulting system is slow to react to network variations.</p>
    <p>12</p>
  </div>
  <div class="page">
    <p>Salsify explores a more tightly-integrated design</p>
    <p>13</p>
    <p>transport protocol &amp; video codec</p>
  </div>
  <div class="page">
    <p>Brand-new architecture based on components we know and love!</p>
    <p>Individual component of Salsify are not exactly new:</p>
    <p>The transport protocol is inspired by packet pair and Sprout-EWMA.</p>
    <p>The video format, VP8, was finalized in 2008.</p>
    <p>The functional video codec was described at NSDI17.</p>
    <p>Salsify is a new architecture for real-time video that integrates these components in a way that responds quickly to network variations.</p>
    <p>14</p>
  </div>
  <div class="page">
    <p>Salsifys architecture: Video-aware transport protocol</p>
    <p>15</p>
    <p>transport protocol &amp; video codec</p>
  </div>
  <div class="page">
    <p>Theres no notion of bit rate, only the next frame size!</p>
    <p>Transport uses packet inter-arrival time, reported by the receiver.</p>
    <p>Video-aware transport protocol</p>
    <p>16</p>
    <p>What should be the size of the next frame? * without causing excessive delay</p>
  </div>
  <div class="page">
    <p>Pauses between frames give the receiver a pessimistic view of the network.</p>
    <p>Receiver treats each frame of the video as a separate packet train.</p>
    <p>The sender does not transmit continuously</p>
    <p>17 Re</p>
    <p>ce iv er</p>
    <p>t t t t t grace period</p>
    <p>frame i frame i+1</p>
    <p>Se nd</p>
    <p>er</p>
  </div>
  <div class="page">
    <p>Salsifys architecture: Functional video codec</p>
    <p>18</p>
    <p>transport protocol &amp; video codec</p>
  </div>
  <div class="page">
    <p>Transport tells us how big the next frame should be, but...</p>
    <p>Its challenging for any codec to choose the appropriate quality settings upfront to meet a target sizethey tend to</p>
    <p>over-/undershoot the target.</p>
    <p>19</p>
  </div>
  <div class="page">
    <p>How to get an accurate frame out of an inaccurate codec</p>
    <p>Trial and error: Encode with different quality settings, pick the one that fits.</p>
    <p>Not possible with existing codecs.</p>
    <p>20</p>
  </div>
  <div class="page">
    <p>frame frame frame frame</p>
    <p>After encoding a frame, the encoder goes through a state transition that is impossible to undo</p>
    <p>21</p>
  </div>
  <div class="page">
    <p>Theres no way to undo an encoded frame in current codecs</p>
    <p>22</p>
    <p>encode(,,...)  frames...</p>
    <p>The state is internal to the encoderno way to save/restore the state.</p>
  </div>
  <div class="page">
    <p>Functional video codec to the rescue</p>
    <p>encode(state, )  state, frame</p>
    <p>23</p>
    <p>Salsifys functional video codec exposes the state that can be saved/restored.</p>
  </div>
  <div class="page">
    <p>Order two, pick the one that fits!</p>
    <p>Salsifys functional video codec can explore different execution paths without committing to them.</p>
    <p>For each frame, codec presents the transport with three options: A slightly-higher-quality version, A slightly-lower-quality version, Discarding the frame.</p>
    <p>24</p>
    <p>bet ter</p>
    <p>worse</p>
  </div>
  <div class="page">
    <p>Salsifys architecture: Unified control loop</p>
    <p>25</p>
    <p>transport protocol &amp; video codec</p>
  </div>
  <div class="page">
    <p>Codec  Transport Heres two versions of the current frame.</p>
    <p>26</p>
    <p>bet ter</p>
    <p>worse</p>
  </div>
  <div class="page">
    <p>Transport  Codec I picked option 2. Base the next frame on its exiting state.</p>
    <p>27</p>
  </div>
  <div class="page">
    <p>Codec  Transport Heres two versions of the latest frame.</p>
    <p>28</p>
    <p>bet ter</p>
    <p>worse</p>
  </div>
  <div class="page">
    <p>Transport  Codec I picked option 1. Base the next frame on its exiting state.</p>
    <p>29</p>
  </div>
  <div class="page">
    <p>Codec  Transport Heres two versions of the latest frame.</p>
    <p>30</p>
    <p>bet ter</p>
    <p>worse</p>
  </div>
  <div class="page">
    <p>Transport  Codec I cannot send any frames right now. Sorry, but discard them.</p>
    <p>31</p>
  </div>
  <div class="page">
    <p>Codec  Transport Fine. Heres two versions of the latest frame.</p>
    <p>32</p>
    <p>better</p>
    <p>worse</p>
  </div>
  <div class="page">
    <p>Transport  Codec I picked option 1. Base the next frame on its exiting state.</p>
    <p>33</p>
    <p>target frame size</p>
  </div>
  <div class="page">
    <p>Theres no notion of frame rate or bit rate in the system. Frames are sent when the network can accommodate them.</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Salsify's New Architecture</p>
    <p>Measurement Testbed</p>
    <p>Evaluation</p>
    <p>Conclusions</p>
    <p>35</p>
  </div>
  <div class="page">
    <p>Goals for the measurement testbed</p>
    <p>A system with reproducible input video and reproducible network traces that runs unmodified version of the system-under-test.</p>
    <p>Target QoE metrics: per-frame quality and delay.</p>
    <p>36</p>
  </div>
  <div class="page">
    <p>barcoded video</p>
    <p>video in/out (HDMI) HDMI to USB camera</p>
    <p>emulated network</p>
    <p>receiver HDMI output</p>
  </div>
  <div class="page">
    <p>Sent Image Timestamp: T+0.000s</p>
    <p>Received Image Timestamp: T+0.765s Quality: 9.76 dB SSIM</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Salsify's New Architecture</p>
    <p>Measurement Testbed</p>
    <p>Evaluation</p>
    <p>Conclusions</p>
    <p>39</p>
  </div>
  <div class="page">
    <p>Evaluation results: Verizon LTE Trace</p>
    <p>40</p>
    <p>V id</p>
    <p>eo Q</p>
    <p>ua lit</p>
    <p>y (S</p>
    <p>S IM</p>
    <p>d B</p>
    <p>)</p>
    <p>Video Delay (95th percentile ms)</p>
    <p>WebRTC (VP9-SVC)Skype</p>
    <p>FaceTime</p>
    <p>Hangouts</p>
    <p>WebRTC</p>
    <p>B e tt e r</p>
  </div>
  <div class="page">
    <p>Evaluation results: Verizon LTE Trace</p>
    <p>41</p>
    <p>V id</p>
    <p>eo Q</p>
    <p>ua lit</p>
    <p>y (S</p>
    <p>S IM</p>
    <p>d B</p>
    <p>)</p>
    <p>Video Delay (95th percentile ms)</p>
    <p>WebRTC (VP9-SVC)Skype</p>
    <p>FaceTime</p>
    <p>Hangouts</p>
    <p>WebRTC</p>
    <p>Status Quo</p>
    <p>(conventional transport</p>
    <p>and codec)</p>
  </div>
  <div class="page">
    <p>Evaluation results: Verizon LTE Trace</p>
    <p>42</p>
    <p>V id</p>
    <p>eo Q</p>
    <p>ua lit</p>
    <p>y (S</p>
    <p>S IM</p>
    <p>d B</p>
    <p>)</p>
    <p>Video Delay (95th percentile ms)</p>
    <p>WebRTC (VP9-SVC)Skype</p>
    <p>FaceTime</p>
    <p>Hangouts</p>
    <p>WebRTC</p>
    <p>Status Quo</p>
    <p>(conventional transport</p>
    <p>and codec)</p>
    <p>Salsify (conventional codec)</p>
  </div>
  <div class="page">
    <p>Evaluation results: Verizon LTE Trace</p>
    <p>43</p>
    <p>V id</p>
    <p>eo Q</p>
    <p>ua lit</p>
    <p>y (S</p>
    <p>S IM</p>
    <p>d B</p>
    <p>)</p>
    <p>Video Delay (95th percentile ms)</p>
    <p>Salsify</p>
    <p>WebRTC (VP9-SVC)Skype</p>
    <p>FaceTime</p>
    <p>Hangouts</p>
    <p>WebRTC</p>
    <p>Status Quo</p>
    <p>(conventional transport</p>
    <p>and codec)</p>
    <p>Salsify (conventional codec)</p>
  </div>
  <div class="page">
    <p>Evaluation results: AT&amp;T LTE Trace</p>
    <p>44</p>
    <p>V id</p>
    <p>eo Q</p>
    <p>ua lit</p>
    <p>y (S</p>
    <p>S IM</p>
    <p>d B</p>
    <p>)</p>
    <p>Video Delay (95th percentile ms)</p>
    <p>WebRTC (VP9-SVC)</p>
    <p>Skype</p>
    <p>FaceTime</p>
    <p>Hangouts</p>
    <p>Salsify</p>
    <p>WebRTC</p>
    <p>B e tt e r</p>
  </div>
  <div class="page">
    <p>Evaluation results: T-Mobile UMTS Trace</p>
    <p>45</p>
    <p>V id</p>
    <p>eo Q</p>
    <p>ua lit</p>
    <p>y (S</p>
    <p>S IM</p>
    <p>d B</p>
    <p>)</p>
    <p>Video Delay (95th percentile ms)</p>
    <p>WebRTC (VP9-SVC)</p>
    <p>Skype</p>
    <p>FaceTime</p>
    <p>Hangouts</p>
    <p>Salsify</p>
    <p>WebRTC</p>
    <p>B e tt e r</p>
  </div>
  <div class="page">
    <p>Evaluation results: Emulated Wi-Fi (no variations, only loss)</p>
    <p>46</p>
    <p>V id</p>
    <p>eo Q</p>
    <p>ua lit</p>
    <p>y (S</p>
    <p>S IM</p>
    <p>d B</p>
    <p>)</p>
    <p>Video Delay (95th percentile ms)</p>
    <p>WebRTC (VP9-SVC)</p>
    <p>Skype Hangouts</p>
    <p>Salsify</p>
    <p>FaceTime</p>
    <p>WebRTC</p>
    <p>B e tt e r</p>
  </div>
  <div class="page">
    <p>WebRTC (Google Chrome 65.0 dev) SalsifyCheck out the demo videos at https://snr.stanford.edu/salsify</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Salsify's New Architecture</p>
    <p>Measurement Testbed</p>
    <p>Evaluation</p>
    <p>Conclusions</p>
    <p>48</p>
  </div>
  <div class="page">
    <p>Codecs have been treated as black boxes in video systems for a long time.</p>
  </div>
  <div class="page">
    <p>50</p>
    <p>NSDI17: ExCamera</p>
    <p>Using the functional codec to do massively-parallel video compression on AWS Lambda.</p>
    <p>NSDI18: Salsify</p>
    <p>Using the functional codec to compress frames to the right size, at the right time.</p>
    <p>Same interface, two different applications.</p>
    <p>New systems have emerged from this functional interface</p>
  </div>
  <div class="page">
    <p>We encourage the codec designer and implementors to include save/restore state in the codecseven if its large or opaque.</p>
  </div>
  <div class="page">
    <p>Improvements to video codecs may have reached the point of diminishing returns, but changes to the architecture of video</p>
    <p>systems can still yield significant benefits.</p>
  </div>
  <div class="page">
    <p>Takeaways</p>
    <p>53</p>
    <p>Salsify is a new architecture for real-time Internet video.</p>
    <p>Salsify tightly integrates a video-aware transport protocol, with a functional video codec, allowing it to respond quickly to changing network conditions.</p>
    <p>Salsify achieves 4.6 lower p95-delay and 2.1 dB SSIM higher visual quality on average when compared with FaceTime, Hangouts, Skype, and WebRTC.</p>
    <p>The code is open-source, and the paper and raw data are open-access: https://snr.stanford.edu/salsify</p>
    <p>Thank you: NSF, DARPA, Google, Dropbox, VMware, Huawei, Facebook, Stanford Platform Lab.</p>
  </div>
</Presentation>
