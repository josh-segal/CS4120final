<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>What If You Could Actually Trust Your Kernel? Gernot Heiser, Leonid Ryzhyk, Michael von Tessin, Aleksander Budzynowski</p>
    <p>NICTA and University of New South Wales, Sydney</p>
  </div>
  <div class="page">
    <p>capDL Model (4,800)</p>
    <p>Abstract Model (4,900)</p>
    <p>Executable Model (13,000)</p>
    <p>C Code (8,700) HW</p>
    <p>Integrity (1,000)</p>
    <p>Haskell Prototype (5,700)</p>
    <p>Initial state</p>
    <p>Manual Spec (Isabelle/HOL)</p>
    <p>High Performance Implementation Hardware model</p>
    <p>Weve Got a New Toy!</p>
    <p>NICTA Copyright 2010</p>
    <p>seL4: microkernel with formal proof of functional correctness</p>
  </div>
  <div class="page">
    <p>What Games Can We Play? Obvious ones: Security  Eg. virtualization:</p>
    <p>NICTA Copyright 2010 3</p>
    <p>Critical Stuff</p>
    <p>Untrusted Stuff</p>
    <p>VMM (Xen, KVM, VMware) approx 1 Zillion LOC approx 25 milli-Zillion bugs</p>
    <p>Critical Stuff</p>
    <p>Untrusted Stuff</p>
    <p>seL4</p>
    <p>Virtualiz. support Virtualiz. Support</p>
  </div>
  <div class="page">
    <p>What Games Can We Play? Obvious ones: Security  Eg. web browsing:</p>
    <p>Strong isolation (like IBOS):  SOP enforcement  Minmal TCB</p>
    <p>but actual guarantees!</p>
    <p>More on this kind of stuff in next talk (Toby)</p>
    <p>NICTA Copyright 2010 4</p>
    <p>UI</p>
    <p>seL4 (verified)</p>
    <p>Security monitor (verified)</p>
    <p>Web Page</p>
    <p>NW Stack</p>
    <p>NIC Driver</p>
    <p>Storage</p>
    <p>Web Page</p>
    <p>NW Stack</p>
    <p>Web Page</p>
    <p>NW Stack</p>
  </div>
  <div class="page">
    <p>More Interesting: Make TPMs Useful Trusted Platform Module (TPM)  Provides (among others) remote attestation  Evidence of the software configuration of the machine  PCR register holds cumulative hashes (measurements) of software</p>
    <p>NICTA Copyright 2010 5</p>
    <p>PCR</p>
    <p>RAM</p>
    <p>Program</p>
    <p>Log</p>
    <p>Program</p>
    <p>load</p>
    <p>hash</p>
    <p>attest</p>
  </div>
  <div class="page">
    <p>Problems with TPM TPM asserts what has been loaded  No protection against buggy software</p>
    <p>Know what has been loaded, not that it is operating correctly!  Software could even be modified post-load</p>
    <p>Every piece of software loaded changes PCR  Server would need to keep hashes for every app user might load</p>
    <p>Actually every distributed version of every app  Write your own app  attestation fails!</p>
    <p>Assumes no forgotten measurements  Eg buggy software loads code without measuring</p>
    <p>NICTA Copyright 2010 6</p>
  </div>
  <div class="page">
    <p>Example: Home Banking  Bank provides secure banking app</p>
    <p>Uses remote attestation to confirm that this app is running  But:</p>
    <p>Unfeasible (and unhelpful) to allow for users arbitrary apps  Force user to boot into special banking configuration  User loses concurrent access to other machine features</p>
    <p>Spreadsheets, address book, printer,   Practically useless!</p>
    <p>NICTA Copyright 2010 7</p>
  </div>
  <div class="page">
    <p>Late Launch / DRTM? Dynamic root of trust, e.g. Intel TXT, AMD SVM:  Suspends normal machine operation  Loads specific kernel in clean environment</p>
    <p>Untainted by previously loaded software  Can remotely attest this state  But:</p>
    <p>No interrupts, DMA, multiprocessing!  Practically useless!</p>
    <p>NICTA Copyright 2010 8</p>
  </div>
  <div class="page">
    <p>Practical TPM-based Solution seL4 provides secure VM for banking app  Runs verified loader  Loads mini OS</p>
    <p>Keyboard, mouse, display driver  Crypto, SSL endpoint management  Secure screen sharing</p>
    <p>Banking app runs concurrently with standard app environment</p>
    <p>Chain of trust for banking app:  seL4 (verified, changes rarely)  Loader (verified, no changes)  Mini OS (trusted)  Banking app (trusted)</p>
    <p>Supports practicable and meaningful remote attestation  Minimal and stable TCB  manageable set of measurements NICTA Copyright 2010 9</p>
    <p>seL4 (verified)</p>
    <p>Banking app</p>
    <p>Loader (verified)</p>
    <p>Mini OS</p>
    <p>Standard Application Environment</p>
    <p>Standard OS NW Stack</p>
  </div>
  <div class="page">
    <p>Buying Performance with Reliability Databases require durability guarantees  In the presence of failures (OS crash, power)  Ensured typically by write-ahead logging  Flush log before continuing processing  Disk writes on critical path</p>
    <p>What if you knew that your OS doesnt crash?</p>
    <p>NICTA Copyright 2010 10</p>
    <p>DBMS</p>
    <p>OS Device Driver</p>
    <p>Log</p>
    <p>T h ro</p>
    <p>u g h p u t (t</p>
    <p>ra n s a c ti o n s / s</p>
    <p>)</p>
    <p>Number of clients</p>
    <p>TPC-C (Postgres)</p>
    <p>Disk cache, no sync() Disk cache, sync()</p>
    <p>No disk cache, sync()</p>
  </div>
  <div class="page">
    <p>DBMS with Crash-Proof OS?</p>
    <p>Could port DBMS to run directly on seL4</p>
    <p>Problem: costly, legacy issues, etc  not very attractive</p>
    <p>NICTA Copyright 2010 11</p>
    <p>DBMS</p>
    <p>Other OS</p>
    <p>Services</p>
    <p>seL4</p>
    <p>Device Driver</p>
    <p>Logging Service</p>
    <p>Buffer Log</p>
  </div>
  <div class="page">
    <p>Alternative: Use Virtualization</p>
    <p>No changes to DBMS or OS! NICTA Copyright 2010 12</p>
    <p>Virtual Machine</p>
    <p>DBMS</p>
    <p>Linux Device Driver</p>
    <p>Virtual Storage Device</p>
    <p>Device Driver</p>
    <p>Buffer</p>
    <p>seL4</p>
    <p>Log</p>
  </div>
  <div class="page">
    <p>T h ro</p>
    <p>u g h p u t (t</p>
    <p>ra n s a c ti o n s / s</p>
    <p>)</p>
    <p>Number of clients</p>
    <p>TPC-C (Postgres)</p>
    <p>Performance</p>
    <p>NICTA Copyright 2010 13</p>
    <p>Disk cache, no sync Disk cache, sync</p>
    <p>No disk cache, sync()</p>
    <p>Disk cache, sync virtualized</p>
    <p>No disk cache, No sync, virtualized</p>
  </div>
  <div class="page">
    <p>Thank You</p>
    <p>mailto:gernot@nicta.com.au Google: ertos</p>
    <p>NICTA Copyright 2010 14</p>
  </div>
</Presentation>
