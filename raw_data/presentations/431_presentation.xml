<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Dynamic provenance for SPARQL Updates using Named Graphs</p>
    <p>Harry Halpin (W3C) James Cheney* (UoE)</p>
    <p>* supported by Royal Society University Research Fellowship</p>
  </div>
  <div class="page">
    <p>Linked Data</p>
  </div>
  <div class="page">
    <p>Buzzword detox</p>
    <p>Linked Data = exporRng RDF using stable ids  = the part of the semanRc web that works</p>
    <p>RDF = &lt;subject, predicate, object&gt; triples (graphs)  Named graphs = RDF graphs with a (URI) name  duh</p>
    <p>SPARQL = query language for RDF  think conjuncRve queries with a few wrinkles</p>
    <p>SPARQL Updates = update language for RDF  Work in progress (part of SPARQL 1.1)</p>
  </div>
  <div class="page">
    <p>Dynamic provenance</p>
    <p>By this, I basically just mean version history  this would cover large fracRon of things people seem to want right off the bat</p>
    <p>Plus minimal ability to track sources of data copied from other places  i.e., copy-paste provenance for RDF</p>
    <p>Use of URIs makes this possible.  This paper: translate updates to self-maintain provenance.</p>
  </div>
  <div class="page">
    <p>a! b!</p>
    <p>c! d!</p>
    <p>r!</p>
    <p>u!</p>
    <p>t!s!</p>
    <p>g_v0! g_v1!</p>
    <p>a! b!</p>
    <p>d!</p>
    <p>r!</p>
    <p>t!</p>
    <p>g_v2!</p>
    <p>a! b!</p>
    <p>d!</p>
    <p>r!</p>
    <p>t!u!</p>
    <p>u1! u2!input! input!output! output !</p>
    <p>delete! insert!</p>
    <p>G_u1!</p>
    <p>a!</p>
    <p>c! d!</p>
    <p>s! u!</p>
    <p>m1!</p>
    <p>prov!</p>
    <p>James! DELETE WHERE {! g {?x s ?y . ! ?y t ?z }! }!</p>
    <p>G_u2!</p>
    <p>a!</p>
    <p>d!</p>
    <p>u! d a t a !</p>
    <p>meta!</p>
    <p>m2!</p>
    <p>Harry! INSERT {! g {?x u ?y }! } WHERE {! g {?x t ?y}! }!</p>
  </div>
  <div class="page">
    <p>Update language</p>
    <p>U ::= INSERT {C} WHERE P ! | DELETE {C} WHERE P ! | LOAD g INTO g | CLEAR g ! | CREATE g | DROP g!</p>
    <p>where C is a SPARQL graph expression (possibly with variables) and P is a SPARQL pa_ern that queries a graph and binds the variables to URIs or literals.</p>
  </div>
  <div class="page">
    <p>Graph crea;on (CREATE g):</p>
    <p>CREATE g;! CREATE gv0;! INSERT DATA {GRAPH prov {! g version gv0. g current gv0.! u1 type create. u1 output gv0.! u1 meta m1. ... (other metadata)! }! }!</p>
  </div>
  <div class="page">
    <p>Graph dele;on (DROP g):</p>
    <p>DROP g;! DELETE WHERE {! GRAPH prov { g current gvi } ! };! INSERT DATA {GRAPH prov {! ui type drop. ui input gvi.! ui meta mi. ... (other metadata)! }!</p>
  </div>
  <div class="page">
    <p>Graph load (LOAD g INTO g) LOAD h INTO g; ! DELETE WHERE {GRAPH prov {! g current gvi! }! }; ! INSERT DATA {GRAPH prov { ! g version gvi+1. g current gvi+1.! ui type load. ui input gvi.! ui output gvi+1. ui source hj.! ui meta mi. ... (other metadata) ! }!</p>
  </div>
  <div class="page">
    <p>Inser;on (INSERT {C} WHERE P)</p>
    <p>CREATE gui;! INSERT {GRAPH gui {C}} WHERE P;! INSERT {GRAPH g {C}} WHERE P;! CREATE gvi+1;! LOAD g INTO gvi+1;! DELETE DATA {GRAPH prov {&lt;g current gvi&gt;}};! INSERT DATA {GRAPH prov {! g version gvi+1. g current gvi+1.! ui input gvi. ui output gvi+1.! ui type insert. ui data gui.! ui source S1. ... ui source Sm.! ui meta mi. ... (other metadata)! }! }!</p>
  </div>
  <div class="page">
    <p>Also in paper</p>
    <p>Provenance querying via SPARQL  implicitly  SPARQL is not really enough: no recursion.  Not my problem.</p>
    <p>Strawman for provenance retrieval over HTTP</p>
  </div>
  <div class="page">
    <p>Next steps</p>
    <p>ImplementaRon   should be straigh`orward to implement slow version</p>
    <p>Mapping dynamic provenance from other data models / DBMSs  copy-paste DBs/DBWiki  export from Oracle with metadata??</p>
    <p>Reconcile with OPM / W3C PIL?</p>
  </div>
</Presentation>
