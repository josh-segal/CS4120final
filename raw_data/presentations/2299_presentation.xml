<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Exploiting Hardware Heterogeneity for Interactive</p>
    <p>Services</p>
    <p>Yuxiong He2</p>
    <p>Joint work with Shaolei Ren1, Sameh Elnikety2, Kathryn S McKinley2</p>
  </div>
  <div class="page">
    <p>Interactive Services</p>
    <p>Applications  Web search, web server, finance server</p>
    <p>Requirements  High quality, fast response  High throughput, low cost</p>
  </div>
  <div class="page">
    <p>Hardware for Interactive Services in Todays Data Center</p>
    <p>Homogeneous servers</p>
    <p>Few fast high-performance cores</p>
    <p>Many slow energy-efficient cores</p>
  </div>
  <div class="page">
    <p>p ro</p>
    <p>b a b</p>
    <p>il it</p>
    <p>y</p>
    <p>service demand (ms)</p>
    <p>Variance of Job Service Demand</p>
    <p>Homogeneous server with slow cores: cannot satisfy QoS of long requests</p>
    <p>Homogeneous server with fast cores: meet QoS but energy consuming and lower throughput</p>
    <p>Figure. Measured Bing search service demand distribution</p>
  </div>
  <div class="page">
    <p>p ro</p>
    <p>b a b</p>
    <p>il it</p>
    <p>y</p>
    <p>service demand (ms)</p>
    <p>Opportunity of Heterogeneity</p>
    <p>Figure. Measured Bing search service demand distribution</p>
    <p>Challenges: 1. Service demand</p>
    <p>is unknown. 2. Jobs compete for</p>
    <p>cores.</p>
    <p>Heterogeneous server: combine fast and slow cores</p>
    <p>Fast cores</p>
  </div>
  <div class="page">
    <p>Contributions  FOF scheduler for heterogeneous servers  Bing search server simulation</p>
    <p>Double throughput while meeting QoS</p>
    <p>FOF for servers with SMT (Simultaneous Multithreading)</p>
    <p>Finance server implementation  16% higher throughput than default OS</p>
    <p>scheduler</p>
  </div>
  <div class="page">
    <p>Scheduling Model  Inputs</p>
    <p>Queue of jobs  Job service demand unknown  Job deadline  Partial results</p>
  </div>
  <div class="page">
    <p>Scheduling Model  Inputs</p>
    <p>Queue of jobs  Job service demand unknown  Job deadline  Partial results</p>
    <p>Outputs  Assign jobs to fast/slow cores  Decide processing time of jobs</p>
    <p>Objective  Maximize total quality of all jobs</p>
  </div>
  <div class="page">
    <p>Challenge I. Unknown Service Demand  How can we assign long jobs to fast cores</p>
    <p>and short jobs to slow cores?</p>
    <p>Key insight: Slow to Fast  Migrate a job from slower to faster</p>
    <p>cores  Short jobs complete on slow cores  Leave fast cores for long jobs</p>
  </div>
  <div class="page">
    <p>Challenge II. Jobs Compete for Cores</p>
    <p>Which jobs should be processed by fast cores?</p>
    <p>Key insight: Fast Old  Assign fast cores to old jobs.</p>
  </div>
  <div class="page">
    <p>Fast Old insight</p>
    <p>Older job has closer deadline.  Older job has more work left.  Fast old improves response quality</p>
    <p>probability</p>
  </div>
  <div class="page">
    <p>FastMediumSlow</p>
    <p>FOF Scheduler: Fast Old &amp; First</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Simulation modeling Bing search workload</p>
    <p>Hardware: 4 servers configurations with same design time power budget</p>
    <p>A: 2 Big cores (Sandy Bridge) B: 10 Medium cores (Nehalem) C: 24 Small cores (AtomD) D: 1 B + 4 M + 2 S</p>
  </div>
  <div class="page">
    <p>Quality</p>
    <p>Arrival rate: Queries per Second</p>
    <p>Homogeneous Fast vs Slow Cores Homogeneous</p>
    <p>A. 2 Fast B. 10 Medium C. 24 Slow</p>
  </div>
  <div class="page">
    <p>Quality</p>
    <p>Arrival rate: Queries per Second</p>
    <p>Homogeneous Fast vs Slow Cores Homogeneous</p>
    <p>A. 2 Fast B. 10 Medium C. 24 Slow</p>
    <p>A</p>
  </div>
  <div class="page">
    <p>Quality</p>
    <p>Arrival rate: Queries per Second</p>
    <p>Homogeneous Fast vs Slow Cores Homogeneous</p>
    <p>A. 2 Fast B. 10 Medium C. 24 Slow</p>
    <p>A</p>
    <p>B</p>
  </div>
  <div class="page">
    <p>Quality</p>
    <p>QPS</p>
    <p>Quality</p>
    <p>QPS</p>
    <p>FOF on Heterogeneous D. 1 Fast</p>
    <p>+ 4 Medium + 2 Slow</p>
    <p>Heterogeneous vs. Homogeneous Homogeneous</p>
    <p>A. 2 Big B. 10 Medium C. 24 Small</p>
    <p>Double 0.998 throughput or buy 50% fewer servers</p>
    <p>A</p>
    <p>B</p>
    <p>D</p>
  </div>
  <div class="page">
    <p>Opportunities on Existing Data Center Hardware</p>
    <p>SMT (Simultaneous Multithreading) or Hyperthreading</p>
    <p>SMT creates asymmetry among cores  Fast core: a physical core only runs one</p>
    <p>job  Slow core: two logical cores belonging</p>
    <p>to the same physical core both run jobs</p>
  </div>
  <div class="page">
    <p>Insight SMT = dynamic heterogeneous core</p>
    <p>SMT off SMT on  SMT on 1 core all cores</p>
    <p>Simultaneous Multithreading (SMT)00</p>
  </div>
  <div class="page">
    <p>FOF Scheduler for SMT</p>
    <p>move X to free core</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Implementation on Finance application: Monte-Carlo computation for option price</p>
    <p>Hardware: 6 Core 2-way SMT 3.33 GHz Intel Xeon X5680  shared (slow) smt-core speed = 0.63 x</p>
    <p>unshared (fast) core speed</p>
    <p>FOF achieves  16% higher throughput than default</p>
    <p>OS scheduler while meeting QoS 21</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>FoF scheduler for interactive services  Exploit hardware heterogeneity  Achieve both high quality and high throughput</p>
    <p>Heterogeneous servers: Bing search simulation  Double throughput while meeting QoS</p>
    <p>SMT: Finance server implementation  16% higher throughput than default OS</p>
    <p>scheduler</p>
  </div>
  <div class="page">
    <p>Thank you &amp; Questions</p>
  </div>
</Presentation>
