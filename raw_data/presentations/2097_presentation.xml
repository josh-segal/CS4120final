<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Lucky&amp;scheduling&amp;for&amp;energy2efficient&amp; heterogeneous&amp;mul62core&amp;systems&amp;</p>
    <p>Vinicius'Petrucci'(UFF,'Brazil)&amp;</p>
    <p>Orlando(Loques((UFF,(Brazil)(</p>
    <p>Daniel(Mosse((PITT,(USA)(</p>
  </div>
  <div class="page">
    <p>Mul62core&amp;system&amp;evolu6on&amp;</p>
    <p>Big&amp;core&amp; Big&amp;core&amp;</p>
    <p>Big&amp;core&amp;Big&amp;core&amp;</p>
    <p>Tradi6onal&amp;homogenous&amp; mul62core&amp;system&amp;</p>
    <p>Big&amp;core&amp; Big&amp;core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Asymmetric/heterogeneous&amp; mul62core&amp;system&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
  </div>
  <div class="page">
    <p>Heterogeneous&amp;plaAorm&amp;</p>
    <p>Big&amp;core&amp; Big&amp;core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Thread&amp;</p>
    <p>Thread&amp;</p>
    <p>.&amp;.&amp;.&amp;</p>
    <p>Thread&amp;</p>
    <p>Single?ISA(high?performance(&quot;big(vs(</p>
    <p>low?power(&quot;small(types(of(cores(</p>
    <p>Thread&amp;</p>
    <p>Compute?intensive(vs(</p>
    <p>memory/IO?intensive(threads(</p>
  </div>
  <div class="page">
    <p>Some&amp;challenges&amp;</p>
    <p>CPU?bound(or(memory?bound?(Or(something(else(altogether?(</p>
    <p>Big&amp;</p>
    <p>core&amp;</p>
    <p>Big&amp;</p>
    <p>core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Small&amp; core&amp;</p>
    <p>Thread&amp;</p>
    <p>?</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>Determine+CPU+or+memory+intensity+(IPC+or+stalls/LLC+miss+ rate)+as+a+bias(to+guide+thread+scheduling+  highest((lowest)(bias+threads+scheduled+on+small((big)(cores+</p>
    <p>Some(issues:( 1. inherently+unfair+thread+scheduling+may+cause+severe+</p>
    <p>performance+loss+(big+core+monopoly)+</p>
    <p>State2of2the2art&amp;bias&amp;scheduling&amp;</p>
  </div>
  <div class="page">
    <p>Determine+CPU+or+memory+intensity+(IPC+or+stalls/LLC+miss+ rate)+as+a+bias(to+guide+thread+scheduling+  highest((lowest)(bias+threads+scheduled+on+small((big)(cores+</p>
    <p>Some(issues:( 1. inherently+unfair+thread+scheduling+may+cause+severe+</p>
    <p>performance+loss+(big+core+monopoly)+</p>
    <p>Our&amp;solu6on:&amp;schedule&amp;threads&amp;to&amp;big/small&amp;cores&amp;in&amp;a&amp; fair&amp;and&amp;energy2efficient&amp;way,&amp;taking&amp;into&amp;account&amp;both&amp; core&amp;execu6on&amp;and&amp;memory/stalls&amp;measures!&amp;</p>
    <p>State2of2the2art&amp;bias&amp;scheduling&amp;</p>
  </div>
  <div class="page">
    <p>Performance2asymmetric&amp;mul62core&amp;system&amp;</p>
    <p>Shared cache (L3)</p>
    <p>Big/fast core (3.2Ghz)</p>
    <p>Small core (800Mhz)</p>
    <p>Quad-core x86_64 processor</p>
    <p>Small core (800Mhz)</p>
    <p>Small core (800Mhz)</p>
    <p>Memory</p>
    <p>Estimation of power consumption (&quot;Web Search Using Mobile Cores&quot; ISCA10): Big core (Intel Xeon), Small core (Intel Atom)</p>
  </div>
  <div class="page">
    <p>Thread/core performance measurement</p>
    <p>Hardware performance counters o Linux perf measurement subsystem (kernel 2.6.34) o per-core/thread run-time monitoring over a fixed</p>
    <p>sampling interval (one thread per core)</p>
    <p>Instruction execution rate (MIPS) o counter for number of committed instructions</p>
    <p>Memory access rate (LLCMS) o counter for LLC (Last Level Cache) misses o each LLC miss represents a memory access</p>
  </div>
  <div class="page">
    <p>Issue  Lowest bias (LLCM) threads can monopolize the few big cores available, hindering progress of other compute-intensive threads</p>
    <p>Simple+policy+that+provides+ equally+fair+sharing+of+the+ big+core+among+all+threads+</p>
    <p>Workload speedup of 1.47x !</p>
  </div>
  <div class="page">
    <p>Some observations: (1) Both MIPS and LLCM can be increased, such as milc (64M LLCM, 2K MIPS) when compared to mcf (18M LLCM, 0.4K MIPS)</p>
    <p>(2) Very similar MIPS can lead to very different LLCM, such as lbm (48M LLCM, 2.4K MIPS) and cactusADM (8M LLCM, 2.3K MIPS)</p>
  </div>
  <div class="page">
    <p>bias (LLCM) ~= 13K bias (LLCM) ~= 14K</p>
    <p>OBSERVATION #1: Some threads with similar bias measures should run energy efficiently on different core types!</p>
  </div>
  <div class="page">
    <p>bias (LLCM) ~= 29K</p>
    <p>OBSERVATION #2: bwaves may run on a big core type for improved energy efficiency, despite being also memoryintensive (small core bias)!</p>
  </div>
  <div class="page">
    <p>Our scheduling solution</p>
    <p>Mapping of threads to the right core type  given threads' computational and memory demands  considering individual power consumption of core</p>
    <p>types  providing fairness via lottery-based scheduling</p>
    <p>Optimization of both energy and performance (EDP, energy-delay product) in the multi-core system</p>
  </div>
  <div class="page">
    <p>N = set of core types, each core of type i in N: o Ci = computational capacity (MIPS) o Bi = peak/busy, Ii = static/idle, power consumption</p>
    <p>(Watts)</p>
    <p>K = set of threads, each thread k in K running on a core of type i in N: o MIPSi,k = instruction execution rate o LLCMSi,k = memory access rate</p>
    <p>Heterogeneous&amp;mul62core&amp;model&amp;</p>
  </div>
  <div class="page">
    <p>Power/energy modeling (estimation)</p>
    <p>Heterogeneous&amp;mul62core&amp;model&amp;</p>
    <p>Given a scheduling interval S and assignment of thread k to core type i</p>
    <p>But'Wait'what'is'the'energy'efficiency'of'a'thread'currently'running' on'a'given'core'type'when'assigned'to'run'on'a'different'core'type?'</p>
    <p>allocated+core+type+i)+</p>
    <p>~(Energy?Delay(product'</p>
  </div>
  <div class="page">
    <p>Thread&amp;performance&amp;model&amp;</p>
    <p>Performance prediction approach: (instead of direct measurement on both core types, because of known</p>
    <p>overhead, load imbalance issues)</p>
    <p>Such a performance characterization needs to be done once at design stage.</p>
    <p>(very good correlation coefficient of ~ 98% )</p>
  </div>
  <div class="page">
    <p>LoUery&amp;scheduling&amp;</p>
    <p>Scheduling+approach+to+address+the+fairness+ problem++</p>
    <p>Tickets:+represent+the+share+of+a+resource+that+ a+thread/process+should+receive+</p>
    <p>On+each+scheduling+interval+(%me+slice)+  a+%cket+is+randomly+picked+  thread+with+winning+%cket+uses+the+resource+</p>
    <p>Obs.'#1:'The'probability'of'a'thread'winning'a'loJery'is'proporKonal'to'the' number'of'Kckets'it'holds'</p>
    <p>Obs.'#2:'The'allocated'number'of'Kckets'(share'of'a'thread)'can'be'adjusted' dynamically'to'meet'KmePvarying'workloads'</p>
  </div>
  <div class="page">
    <p>Lucky scheduling (1/2)</p>
  </div>
  <div class="page">
    <p>Lucky scheduling (2/2)</p>
  </div>
  <div class="page">
    <p>Implementa6on&amp;remarks&amp;</p>
    <p>Ini%al+thread+assignment+given+by+the+OS+(Linux)+</p>
    <p>Lucky+scheduling+binds+threads+to+set+of+cores+of+the+ same+type+(sched_setaffinity+system+call)+  underlying+OS+carries+out+thread&gt;to&gt;core+scheduling+  reassignment+interval+of+200ms+(load+balancing)+</p>
    <p>Swapping+threads+between+different+core+types+help+ preserve+load+balancing+</p>
    <p>LoRery&gt;based+scheduling+complexity+O(#threads)+  given+#coretypes+small+and+fixed+  heap/tree+implementa%on+can+reduce+to+O(log+#threads)+</p>
  </div>
  <div class="page">
    <p>Evalua6on:&amp;system&amp;workload&amp;</p>
    <p>Linux gettimeofday() measure workload execution time (wall clock)  Long-lived workload: threads are restarted until longest thread finishes</p>
  </div>
  <div class="page">
    <p>Preliminary&amp;results&amp;</p>
    <p>A simple big core fair policy provides EDP gains of 16% over bias scheduling</p>
    <p>Lucky scheduling outperforms big core fair policy in EDP by 12% (avg.) and 20% (max.).</p>
    <p>Lucky scheduling achieved better EDP when compared to bias scheduling over all workloads executions (avg. 39% and max. 51%).</p>
  </div>
  <div class="page">
    <p>Conclusions&amp;</p>
    <p>Lucky:+Propor%onal&gt;share+scheduling+strategy+ for+heterogeneous+mul%&gt;cores+  leverages+loRery/%cket+mechanisms+(fairness)+  op%mizes+for+combined+performance+and+energy+ savings+</p>
    <p>Preliminary+results+show+energy/performance+ improvements+over+state&gt;of&gt;the&gt;art+thread+ assignment+schemes+</p>
  </div>
  <div class="page">
    <p>Future&amp;direc6ons&amp;</p>
    <p>Incorporate+real&gt;%me+performance+guarantees+  latency&gt;sensi%ve+apps+(web+search,+media+streaming)+</p>
    <p>Thread/workload+consolida%on+(few+cores+as+ possible)+  Core+on/off:+energy+savings+vs.+performance+ degrada%on+(resource+conten%on,+data+movements)+</p>
    <p>Mul%threaded+/+HPC+apps+  explore+big+cores+to+speed&gt;up+parallel+execu%on+ boRlenecks+(cri%cal+path)+of+applica%ons+</p>
  </div>
  <div class="page">
    <p>Thank+you!+</p>
    <p>Ques%ons?+</p>
    <p>Special(thanks(to(Rami(Melhem((PITT),(Neven(Abou(</p>
    <p>Gazala(and(Sameh(Gobriel((Intel(Labs)(for(their(</p>
    <p>construcXve(feedback(on(the(early(stage(of((this(work((</p>
  </div>
  <div class="page">
    <p>Performance&amp;predic6on&amp;analysis&amp;</p>
    <p>Prediction error (normalized root mean square deviation) for different benchmarks</p>
    <p>Average prediction error of less than 3%</p>
    <p>Max. prediction error of 8% (astar, small-to-big) and 10% (bwaves, big-to-small)</p>
  </div>
  <div class="page">
    <p>Performance&amp;predic6on&amp;analysis&amp;</p>
    <p>astar SPEC benchmark! bwaves SPEC benchmark!</p>
    <p>Performance data collected from a small core to predict the performance on a big core</p>
  </div>
  <div class="page">
    <p>Energy&amp;efficiency&amp;in&amp;big&amp;vs&amp;small&amp;cores&amp;</p>
    <p>~ E</p>
    <p>ne rg</p>
    <p>yde</p>
    <p>la y</p>
  </div>
  <div class="page">
    <p>Energy&amp;efficiency&amp;in&amp;big&amp;vs&amp;small&amp;cores&amp;</p>
    <p>Switch to small core</p>
    <p>~ E</p>
    <p>ne rg</p>
    <p>yde</p>
    <p>la y</p>
  </div>
  <div class="page">
    <p>Energy&amp;efficiency&amp;in&amp;big&amp;vs&amp;small&amp;cores&amp;</p>
    <p>Switch to BIG core</p>
    <p>~ E</p>
    <p>ne rg</p>
    <p>yde</p>
    <p>la y</p>
  </div>
  <div class="page">
    <p>Energy&amp;efficiency&amp;in&amp;big&amp;vs&amp;small&amp;cores&amp;</p>
    <p>~ E</p>
    <p>ne rg</p>
    <p>yde</p>
    <p>la y</p>
    <p>Switch to small core</p>
  </div>
</Presentation>
