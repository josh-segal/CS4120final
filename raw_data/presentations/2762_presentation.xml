<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Semi-Oblivious Traffic Engineering: The Road Not Taken</p>
    <p>Praveen Kumar (Cornell) Yang Yuan (Cornell)</p>
    <p>Chris Yu (CMU) Nate Foster (Cornell)</p>
    <p>Robert Kleinberg (Cornell) Petr Lapukhov (Facebook) Chiun Lin Lim (Facebook) Robert Soule (USI Lugano)</p>
  </div>
  <div class="page">
    <p>WAN Traffic Engineering</p>
  </div>
  <div class="page">
    <p>WAN Traffic Engineering Objectives Challenges</p>
    <p>Gbps</p>
    <p>Performance Robustness</p>
    <p>Latency Operational simplicity</p>
  </div>
  <div class="page">
    <p>WAN Traffic Engineering Objectives Challenges</p>
    <p>Gbps</p>
    <p>Performance Robustness</p>
    <p>Latency Operational simplicity</p>
    <p>Unstructured topology</p>
    <p>Unexpected failures</p>
    <p>Misprediction &amp; Traffic Bursts</p>
    <p>Heterogeneous capacity</p>
    <p>Update overheads</p>
    <p>Device limitations</p>
  </div>
  <div class="page">
    <p>TE Approaches Traditional Distributed</p>
    <p>SDN-Based Centralized</p>
  </div>
  <div class="page">
    <p>TE Approaches Traditional Distributed</p>
    <p>SDN-Based Centralized</p>
  </div>
  <div class="page">
    <p>TE Approaches Traditional Distributed</p>
    <p>SDN-Based Centralized</p>
    <p>Optimal TE? (MCF)</p>
  </div>
  <div class="page">
    <p>Operational Cost of Optimality Solver Time</p>
  </div>
  <div class="page">
    <p>Operational Cost of Optimality Path Churn</p>
  </div>
  <div class="page">
    <p>Towards a Practical Model Topology</p>
    <p>(+ demands)</p>
    <p>Path Selection</p>
    <p>Rate Adaptation</p>
    <p>Paths</p>
    <p>Splitting Ratio</p>
    <p>Demands</p>
  </div>
  <div class="page">
    <p>Towards a Practical Model Topology</p>
    <p>(+ demands)</p>
    <p>Path Selection</p>
    <p>Rate Adaptation</p>
    <p>Paths</p>
    <p>Splitting Ratio</p>
    <p>Demands</p>
    <p>Computing and updating</p>
    <p>paths is typically expensive and</p>
    <p>slow.</p>
    <p>But updating splitting ratios is cheap and fast!</p>
  </div>
  <div class="page">
    <p>Towards a Practical Model Topology</p>
    <p>(+ demands)</p>
    <p>Path Selection</p>
    <p>Rate Adaptation</p>
    <p>Paths</p>
    <p>Splitting Ratio</p>
    <p>Demands</p>
    <p>Computing and updating</p>
    <p>paths is typically expensive and</p>
    <p>slow.</p>
    <p>But updating splitting ratios is cheap and fast!</p>
    <p>Sta tic</p>
    <p>Dy nam</p>
    <p>ic</p>
  </div>
  <div class="page">
    <p>Path Selection Challenges</p>
    <p>Selecting a good set of paths is tricky!</p>
    <p>Route the demands (ideally, with competitive latency)</p>
    <p>React to changes in demands (diurnal changes, traffic bursts, etc.)</p>
    <p>Be robust under mis-prediction of demands</p>
    <p>Have sufficient extra capacity to route demands in presence of failures</p>
  </div>
  <div class="page">
    <p>Approach A static set of cleverly-constructed paths can</p>
    <p>provide near-optimal performance and robustness!</p>
    <p>Desired path properties:</p>
    <p>Low stretch for minimizing latency</p>
    <p>High diversity for ensuring robustness</p>
    <p>Good load balancing for performance  Capacity aware</p>
    <p>Globally optimized{</p>
  </div>
  <div class="page">
    <p>Path Properties: Capacity Aware</p>
    <p>Traditional approaches to routing based on shortest paths (e.g., ECMP, KSP) are generally not capacity aware</p>
    <p>C</p>
    <p>B</p>
    <p>A</p>
    <p>G E</p>
    <p>F</p>
    <p>D</p>
  </div>
  <div class="page">
    <p>Path Properties: Capacity Aware</p>
    <p>Traditional approaches to routing based on shortest paths (e.g., ECMP, KSP) are generally not capacity aware</p>
    <p>C</p>
    <p>B</p>
    <p>A</p>
    <p>G E</p>
    <p>F</p>
    <p>DA</p>
    <p>C</p>
    <p>B</p>
  </div>
  <div class="page">
    <p>Path Properties: Globally Optimal Other approaches based on greedy algorithms are</p>
    <p>capacity aware, but are still not globally optimal</p>
    <p>C</p>
    <p>B</p>
    <p>A</p>
    <p>G E</p>
    <p>F</p>
    <p>D</p>
    <p>Globally optimalCSPF</p>
  </div>
  <div class="page">
    <p>Path Properties: Globally Optimal Other approaches based on greedy algorithms are</p>
    <p>capacity aware, but are still not globally optimal</p>
    <p>C</p>
    <p>B</p>
    <p>A</p>
    <p>G E</p>
    <p>F</p>
    <p>DA</p>
    <p>Globally optimalCSPF</p>
  </div>
  <div class="page">
    <p>Path Properties: Globally Optimal Other approaches based on greedy algorithms are</p>
    <p>capacity aware, but are still not globally optimal</p>
    <p>C</p>
    <p>B</p>
    <p>A</p>
    <p>G E</p>
    <p>F</p>
    <p>DA</p>
    <p>B</p>
    <p>Globally optimalCSPF</p>
  </div>
  <div class="page">
    <p>Path Properties: Globally Optimal Other approaches based on greedy algorithms are</p>
    <p>capacity aware, but are still not globally optimal</p>
    <p>C</p>
    <p>B</p>
    <p>A</p>
    <p>G E</p>
    <p>F</p>
    <p>DA</p>
    <p>C</p>
    <p>B</p>
    <p>Globally optimalCSPF</p>
  </div>
  <div class="page">
    <p>Path Properties: Globally Optimal Other approaches based on greedy algorithms are</p>
    <p>capacity aware, but are still not globally optimal</p>
    <p>C</p>
    <p>B</p>
    <p>A</p>
    <p>G E</p>
    <p>F</p>
    <p>DA</p>
    <p>C</p>
    <p>B</p>
    <p>C</p>
    <p>B</p>
    <p>A</p>
    <p>G E</p>
    <p>F</p>
    <p>DA</p>
    <p>C</p>
    <p>B</p>
    <p>Globally optimalCSPF</p>
  </div>
  <div class="page">
    <p>Path Selection</p>
    <p>Algorithm Load balanced</p>
    <p>Diverse Low-stretchCapacity aware</p>
    <p>Globally Optimized</p>
    <p>SPF / ECMP</p>
    <p>CSPF</p>
    <p>k-shortest paths   ?</p>
    <p>Edge-disjoint KSP</p>
    <p>MCF</p>
    <p>VLB</p>
    <p>B4    ?</p>
  </div>
  <div class="page">
    <p>Path Selection</p>
    <p>Algorithm Load balanced</p>
    <p>Diverse Low-stretchCapacity aware</p>
    <p>Globally Optimized</p>
    <p>SPF / ECMP</p>
    <p>CSPF</p>
    <p>k-shortest paths   ?</p>
    <p>Edge-disjoint KSP</p>
    <p>MCF</p>
    <p>VLB</p>
    <p>B4    ?</p>
  </div>
  <div class="page">
    <p>Path Selection</p>
    <p>Algorithm Load balanced</p>
    <p>Diverse Low-stretchCapacity aware</p>
    <p>Globally Optimized</p>
    <p>SPF / ECMP</p>
    <p>CSPF</p>
    <p>k-shortest paths   ?</p>
    <p>Edge-disjoint KSP</p>
    <p>MCF</p>
    <p>VLB</p>
    <p>B4    ?</p>
  </div>
  <div class="page">
    <p>Path Selection</p>
    <p>Algorithm Load balanced</p>
    <p>Diverse Low-stretchCapacity aware</p>
    <p>Globally Optimized</p>
    <p>SPF / ECMP</p>
    <p>CSPF</p>
    <p>k-shortest paths   ?</p>
    <p>Edge-disjoint KSP</p>
    <p>MCF</p>
    <p>VLB</p>
    <p>B4    ?</p>
  </div>
  <div class="page">
    <p>Oblivious Routing</p>
  </div>
  <div class="page">
    <p>VLB</p>
    <p>Route through random intermediate node</p>
    <p>Works well for mesh topologies</p>
    <p>WANs are not mesh-like</p>
    <p>Good resilience</p>
    <p>Poor performance &amp; latency</p>
    <p>Mesh</p>
    <p>N</p>
  </div>
  <div class="page">
    <p>VLB</p>
    <p>Route through random intermediate node</p>
    <p>Works well for mesh topologies</p>
    <p>WANs are not mesh-like</p>
    <p>Good resilience</p>
    <p>Poor performance &amp; latency</p>
    <p>Mesh</p>
    <p>N</p>
  </div>
  <div class="page">
    <p>Not Mesh</p>
    <p>VLB</p>
    <p>Route through random intermediate node</p>
    <p>Works well for mesh topologies</p>
    <p>WANs are not mesh-like</p>
    <p>Good resilience</p>
    <p>Poor performance &amp; latency</p>
  </div>
  <div class="page">
    <p>Not Mesh</p>
    <p>VLB</p>
    <p>Route through random intermediate node</p>
    <p>Works well for mesh topologies</p>
    <p>WANs are not mesh-like</p>
    <p>Good resilience</p>
    <p>Poor performance &amp; latency</p>
  </div>
  <div class="page">
    <p>Oblivious [Rcke 08]</p>
    <p>Generalizes VLB to non-mesh</p>
    <p>Distribution over routing trees</p>
    <p>Approximation algorithm for low-stretch trees [FRT 04]</p>
    <p>Penalize links based on usage</p>
    <p>O(log n) competitive</p>
    <p>Not Mesh</p>
    <p>Low-stretch routing trees</p>
  </div>
  <div class="page">
    <p>Oblivious [Rcke 08]</p>
    <p>Generalizes VLB to non-mesh</p>
    <p>Distribution over routing trees</p>
    <p>Approximation algorithm for low-stretch trees [FRT 04]</p>
    <p>Penalize links based on usage</p>
    <p>O(log n) competitive</p>
    <p>Not Mesh</p>
    <p>Low-stretch routing trees</p>
  </div>
  <div class="page">
    <p>Path Selection</p>
    <p>Algorithm Load balanced</p>
    <p>Diverse Low-stretchCapacity aware</p>
    <p>Globally Optimized</p>
    <p>SPF / ECMP</p>
    <p>CSPF</p>
    <p>k-shortest paths   ?</p>
    <p>Edge-disjoint KSP</p>
    <p>MCF</p>
    <p>VLB</p>
    <p>B4    ?</p>
    <p>SMORE / Oblivious</p>
  </div>
  <div class="page">
    <p>SMORE: Semi-Oblivious Routing</p>
    <p>Oblivious Routing computes a set of paths which are low-stretch, robust and have good load balancing properties</p>
    <p>LP Optimizer balances load by dynamically adjusting splitting ratios used to map incoming traffic flows to paths</p>
    <p>Path Selection</p>
    <p>Rate Adaptation</p>
  </div>
  <div class="page">
    <p>Semi-Oblivious Routing in Practice?</p>
    <p>Previous work [Hajiaghayi et al.] established a worst-case competitive ratio that is not much better than oblivious routing: (log(n)/log (log(n)))</p>
    <p>But the real-world does not typically exhibit worst-case scenarios</p>
    <p>e.g., there is an correlation between demands and link capacities as network designs evolve</p>
    <p>Question: How well does semi-oblivious routing perform in practice?</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Facebooks WAN  Overview</p>
    <p>Common network design for content providers</p>
    <p>Several large data centers (DCs) and points-of-presence (PoPs)</p>
    <p>Mix of latency-sensitive customer traffic + background elastic traffic</p>
    <p>Method</p>
    <p>Collected accurate snapshot of network state - topology, TMs, etc.</p>
    <p>Simulations to study performance characteristics</p>
  </div>
  <div class="page">
    <p>TE Systems - Comparison</p>
    <p>OSPF</p>
    <p>ECMP</p>
    <p>CSPF</p>
    <p>MCF</p>
    <p>Omniscient MCF (Optimal)</p>
    <p>Oblivious [STOC 08]</p>
    <p>VLB [INFOCOM 08]</p>
    <p>Robust MCF [SIGMETRICS 11]</p>
    <p>KSP + MCF [SIGCOMM 13]</p>
    <p>FFC* [SIGCOMM 15]</p>
    <p>Traditional Contemporary</p>
    <p>Open-source implementations at http://github.com/cornell-netlab/yates</p>
  </div>
  <div class="page">
    <p>Performance</p>
  </div>
  <div class="page">
    <p>Robustness</p>
    <p>Path budget = 4</p>
  </div>
  <div class="page">
    <p>Operational Constraints - Path Budget</p>
    <p>SMOREMCF KSP+MCFR-MCF</p>
  </div>
  <div class="page">
    <p>Large Scale Simulations</p>
    <p>Conducted larger set of simulations on Internet Topology Zoo</p>
    <p>30 topologies from ISPs and content providers</p>
    <p>Multiple traffic matrices (gravity model), failure models and operational conditions</p>
  </div>
  <div class="page">
    <p>Do these results generalize? Yes*</p>
    <p>Probability of achieving SLA</p>
    <p>Throughput</p>
  </div>
  <div class="page">
    <p>Takeaways  Path selection plays an outsized role in the performance of TE systems</p>
    <p>Semi-oblivious TE meets the competing objectives of performance and robustness in modern networks</p>
    <p>Oblivious routing for path selection + Dynamic load-balancing</p>
    <p>Ongoing and future-work:</p>
    <p>Apply to other networks (e.g. non-Clos DC topologies)</p>
    <p>SR-based implementations and deployments</p>
  </div>
  <div class="page">
    <p>Thank You!</p>
    <p>Bobby Kleinberg Cornell</p>
    <p>Robert Soule Lugano</p>
    <p>Nate Foster Cornell</p>
    <p>Petr Lapukhov Facebook</p>
    <p>Chiun Lin Lim Facebook</p>
    <p>Chris Yu CMU</p>
    <p>Yang Yuan Cornell</p>
    <p>https://github.com/cornell-netlab/yates</p>
    <p>SMORE: Oblivious routing + Dynamic rate adaptation</p>
  </div>
</Presentation>
