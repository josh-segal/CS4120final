<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>PerfIso: Performance Isolation for Commercial Latency-Sensitive Services</p>
    <p>Clin Iorgulescu Reza Azimi Youngjin Kwon EPFL Brown University University of Texas</p>
    <p>Sameh Elnikety Manoj Syamala Vivek Narasayya Herodotus Herodotou Microsoft Research Cyprus University of Technology</p>
    <p>Paulo Tomita Alex Chen Jack Zhang Junhua Wang Microsoft Bing</p>
  </div>
  <div class="page">
    <p>Interactive services must feel instantaneous</p>
  </div>
  <div class="page">
    <p>Interactive services must feel instantaneous</p>
  </div>
  <div class="page">
    <p>Interactive services must feel instantaneous</p>
    <p>0.1 s</p>
  </div>
  <div class="page">
    <p>A single query involves hundreds of machines!</p>
    <p>0.1 s</p>
    <p>Web Index</p>
  </div>
  <div class="page">
    <p>A single query involves hundreds of machines!</p>
    <p>0.1 s</p>
  </div>
  <div class="page">
    <p>A single query involves hundreds of machines!</p>
    <p>0.1 s</p>
    <p>Embarrassingly parallel search</p>
  </div>
  <div class="page">
    <p>A single query involves hundreds of machines!</p>
    <p>0.1 s</p>
    <p>Embarrassingly parallel search</p>
    <p>Slowest response must be &lt;&lt; 0.1 s</p>
  </div>
  <div class="page">
    <p>A single query involves hundreds of machines!</p>
    <p>0.1 s</p>
    <p>Embarrassingly parallel search</p>
    <p>Slowest response must be &lt;&lt; 0.1 s</p>
    <p>Multiple layers of aggregation! Just one service out of many!</p>
  </div>
  <div class="page">
    <p>Wednesday Thursday Friday Saturday Sunday Monday Tuesday</p>
    <p>Q u</p>
    <p>e ry</p>
    <p>A rr</p>
    <p>iv a</p>
    <p>l R a</p>
    <p>te</p>
    <p>Machines are provisioned for peak load</p>
    <p>Request-rate variation for a Microsoft Bing sub-cluster over 1 week in 2017 4 / 297/12/18</p>
  </div>
  <div class="page">
    <p>Wednesday Thursday Friday Saturday Sunday Monday Tuesday</p>
    <p>Q u</p>
    <p>e ry</p>
    <p>A rr</p>
    <p>iv a</p>
    <p>l R a</p>
    <p>te</p>
    <p>Machines are provisioned for peak load</p>
    <p>Request-rate variation for a Microsoft Bing sub-cluster over 1 week in 2017</p>
    <p>Average load</p>
  </div>
  <div class="page">
    <p>Wednesday Thursday Friday Saturday Sunday Monday Tuesday</p>
    <p>Q u</p>
    <p>e ry</p>
    <p>A rr</p>
    <p>iv a</p>
    <p>l R a</p>
    <p>te</p>
    <p>Machines are provisioned for peak load</p>
    <p>Request-rate variation for a Microsoft Bing sub-cluster over 1 week in 2017</p>
    <p>Average load Peak load</p>
  </div>
  <div class="page">
    <p>Wednesday Thursday Friday Saturday Sunday Monday Tuesday</p>
    <p>Q u</p>
    <p>e ry</p>
    <p>A rr</p>
    <p>iv a</p>
    <p>l R a</p>
    <p>te</p>
    <p>Machines are provisioned for peak load</p>
    <p>Request-rate variation for a Microsoft Bing sub-cluster over 1 week in 2017</p>
    <p>Average load Peak load</p>
    <p>&gt;&gt;</p>
  </div>
  <div class="page">
    <p>Wednesday Thursday Friday Saturday Sunday Monday Tuesday</p>
    <p>Q u</p>
    <p>e ry</p>
    <p>A rr</p>
    <p>iv a</p>
    <p>l R a</p>
    <p>te</p>
    <p>Machines are provisioned for peak load</p>
    <p>Request-rate variation for a Microsoft Bing sub-cluster over 1 week in 2017</p>
    <p>Average load Peak load</p>
    <p>Datacenters have spare resources</p>
    <p>How can we leverage this ?</p>
    <p>&gt;&gt;</p>
  </div>
  <div class="page">
    <p>Solution: colocate batch jobs with online services</p>
    <p>Get spare resources to do useful work</p>
    <p>Primary tenant  guaranteed performance  e.g., Bing IndexServe</p>
    <p>Secondary tenant  best-effort performance  e.g., Apache Spark</p>
    <p>Primary Idle Primary Batch Job</p>
    <p>Without colocation With colocation + PerfIso</p>
  </div>
  <div class="page">
    <p>PerfIso: performance isolation for online services</p>
  </div>
  <div class="page">
    <p>PerfIso: performance isolation for online services</p>
    <p>Maintains P99 of response-times (10s of ms) under colocation</p>
    <p>Provides performance isolation of Primary</p>
  </div>
  <div class="page">
    <p>PerfIso: performance isolation for online services</p>
    <p>Maintains P99 of response-times (10s of ms) under colocation</p>
    <p>Provides performance isolation of Primary</p>
    <p>45% of the CPU is used to do useful batch work</p>
    <p>Increases system efficiency</p>
  </div>
  <div class="page">
    <p>PerfIso: performance isolation for online services</p>
    <p>Maintains P99 of response-times (10s of ms) under colocation</p>
    <p>Provides performance isolation of Primary</p>
    <p>45% of the CPU is used to do useful batch work</p>
    <p>Increases system efficiency</p>
    <p>Many different interactive services and hardware setups</p>
    <p>Deployed on over 90,000 servers</p>
  </div>
  <div class="page">
    <p>Many papers published on performance isolation</p>
    <p>Quasar [ASPLOS 14] Heracles [ISCA 15] Elfen [USENIX ATC 16]</p>
  </div>
  <div class="page">
    <p>Many papers published on performance isolation</p>
    <p>Quasar [ASPLOS 14] Heracles [ISCA 15] Elfen [USENIX ATC 16]</p>
    <p>Existing solutions do not fit our requirements</p>
  </div>
  <div class="page">
    <p>PerfIso: Requirements</p>
  </div>
  <div class="page">
    <p>PerfIso: Requirements</p>
  </div>
  <div class="page">
    <p>PerfIso: Requirements</p>
  </div>
  <div class="page">
    <p>PerfIso: Requirements</p>
  </div>
  <div class="page">
    <p>Why is Performance Isolation hard?</p>
  </div>
  <div class="page">
    <p>Interactive services  highly sensitive to interference!</p>
    <p>Leaf-servers keep 99th percentile low</p>
    <p>Over 10 years of optimization work!  e.g., compression, adaptive parallelism, etc.</p>
    <p>How often does the 99th percentile occur?</p>
    <p>For 10,000 queries / s  100 times / s</p>
    <p>What happens in a 100-node fanout?</p>
    <p>Every query runs at the 99th percentile!</p>
  </div>
  <div class="page">
    <p>The Primary demands many resources quickly</p>
    <p>Bing IndexServe: multi-threaded web-index server</p>
    <p>Up to 15 threads wake up in 5s1</p>
  </div>
  <div class="page">
    <p>The Primary demands many resources quickly</p>
    <p>Bing IndexServe: multi-threaded web-index server</p>
    <p>Up to 15 threads wake up in 5s1</p>
    <p>Burstiness due to query-processing optimizations!  some queries will spawn many workers</p>
  </div>
  <div class="page">
    <p>The Primary demands many resources quickly</p>
    <p>Bing IndexServe: multi-threaded web-index server</p>
    <p>Up to 15 threads wake up in 5s1</p>
    <p>Burstiness due to query-processing optimizations!  some queries will spawn many workers</p>
    <p>Workload arrives in bursts  exacerbates problem</p>
  </div>
  <div class="page">
    <p>The Primary must behave as if it were standalone</p>
  </div>
  <div class="page">
    <p>The Primary must behave as if it were standalone</p>
    <p>Primarys resource demands must be fulfilled instantly.</p>
  </div>
  <div class="page">
    <p>The Primary must behave as if it were standalone</p>
    <p>Primarys resource demands must be fulfilled instantly.</p>
    <p>Any delays  performance penalties incurred</p>
  </div>
  <div class="page">
    <p>The Primary must behave as if it were standalone</p>
    <p>Primarys resource demands must be fulfilled instantly.</p>
    <p>Any delays  performance penalties incurred</p>
    <p>Any resource can become a performance bottleneck.</p>
  </div>
  <div class="page">
    <p>The Primary must behave as if it were standalone</p>
    <p>Primarys resource demands must be fulfilled instantly.</p>
    <p>Any delays  performance penalties incurred</p>
    <p>Any resource can become a performance bottleneck.</p>
    <p>If a query is delayed, it is already too late!</p>
  </div>
  <div class="page">
    <p>PerfIso</p>
  </div>
  <div class="page">
    <p>PerfIso: Implemented as a user-mode service</p>
    <p>OS</p>
    <p>Primary</p>
    <p>PerfIso</p>
    <p>Secondary</p>
    <p>Only keeps track of Secondarys PID</p>
  </div>
  <div class="page">
    <p>PerfIso: Managed resources</p>
    <p>OS</p>
    <p>CPU</p>
    <p>Primary</p>
    <p>PerfIso</p>
    <p>Secondary</p>
    <p>Blind Isolation</p>
  </div>
  <div class="page">
    <p>PerfIso: Managed resources</p>
    <p>OS</p>
    <p>DISK</p>
    <p>Primary</p>
    <p>PerfIso</p>
    <p>Secondary</p>
    <p>I/O throttling</p>
    <p>CPU</p>
  </div>
  <div class="page">
    <p>PerfIso: Managed resources</p>
    <p>OS</p>
    <p>MEMORY</p>
    <p>Primary</p>
    <p>PerfIso</p>
    <p>Secondary</p>
    <p>Restrict footprint</p>
    <p>DISKCPU</p>
  </div>
  <div class="page">
    <p>PerfIso: Managed resources</p>
    <p>OS</p>
    <p>NETWORK</p>
    <p>Primary</p>
    <p>PerfIso</p>
    <p>Secondary</p>
    <p>Throttle egress packets</p>
    <p>MEMORYDISKCPU</p>
  </div>
  <div class="page">
    <p>PerfIso: CPU is the most important resource</p>
    <p>OS</p>
    <p>CPU</p>
    <p>Primary</p>
    <p>PerfIso</p>
    <p>Secondary</p>
    <p>Blind Isolation</p>
  </div>
  <div class="page">
    <p>CPU sharing without PerfIso</p>
    <p>Primary and Secondary compete for cores.</p>
    <p>Secondary is aggressive: no idle cores exist.</p>
    <p>Machine with 12 cores</p>
    <p>Primary</p>
    <p>Secondary</p>
  </div>
  <div class="page">
    <p>CPU Blind Isolation: Keep a buffer of idle cores</p>
    <p>PerfIso only knows the Secondary.</p>
    <p>Restrict Secondary by changing core affinities.</p>
    <p>Primary</p>
    <p>Secondary</p>
    <p>Machine with 12 cores</p>
    <p>Restrict Secondary to create a buffer of idle cores.</p>
  </div>
  <div class="page">
    <p>CPU Blind Isolation: Keep a buffer of idle cores</p>
    <p>PerfIso only knows the Secondary.</p>
    <p>Restrict Secondary by changing core affinities. Primary</p>
    <p>Secondary</p>
    <p>Machine with 12 cores</p>
    <p>Idle</p>
    <p>Restricted Secondary</p>
    <p>Buffer of idle cores</p>
  </div>
  <div class="page">
    <p>CPU Blind Isolation: Keep a buffer of idle cores</p>
    <p>Primary is unrestricted. Secondary is restricted.</p>
    <p>Machine with 12 cores</p>
    <p>Primary can expand into the buffer!</p>
    <p>Restricted Secondary</p>
    <p>Buffer of idle cores</p>
    <p>Primary</p>
    <p>Secondary</p>
    <p>Idle</p>
  </div>
  <div class="page">
    <p>CPU Blind Isolation: Keep a buffer of idle cores</p>
    <p>Primary is unrestricted. Secondary is restricted.</p>
    <p>Machine with 12 cores</p>
    <p>Primary can expand into the buffer!</p>
    <p>Restricted Secondary</p>
    <p>Buffer of idle cores</p>
    <p>Primary</p>
    <p>Secondary</p>
    <p>Idle</p>
  </div>
  <div class="page">
    <p>CPU Blind Isolation: React to bursts from Primary</p>
    <p>Continuously read idle core status.</p>
    <p>Adjust Secondary slice to maintain buffer.</p>
    <p>Machine with 12 cores</p>
    <p>Restricted Secondary</p>
    <p>Buffer of idle cores</p>
    <p>Primary</p>
    <p>Secondary</p>
    <p>Idle</p>
  </div>
  <div class="page">
    <p>CPU Blind Isolation: React to bursts from Primary</p>
    <p>Continuously read idle core status.</p>
    <p>Adjust Secondary slice to maintain buffer.</p>
    <p>Machine with 12 cores</p>
    <p>Restricted Secondary</p>
    <p>Buffer of idle cores</p>
    <p>Primary</p>
    <p>Secondary</p>
    <p>Idle</p>
  </div>
  <div class="page">
    <p>CPU Blind Isolation: React to bursts from Primary</p>
    <p>Continuously read idle core status.</p>
    <p>Adjust Secondary slice to maintain buffer.</p>
    <p>Machine with 12 cores</p>
    <p>Restricted Secondary</p>
    <p>Buffer of idle cores</p>
    <p>Primary</p>
    <p>Secondary</p>
    <p>Idle</p>
  </div>
  <div class="page">
    <p>CPU Blind Isolation: Secondary gets spare cores</p>
    <p>Allow Secondary to use spare idle cores.</p>
    <p>Release spare cores incrementally.</p>
    <p>Machine with 12 cores</p>
    <p>Restricted Secondary</p>
    <p>Buffer of idle cores</p>
    <p>Idle</p>
    <p>Primary</p>
    <p>Secondary</p>
  </div>
  <div class="page">
    <p>CPU Blind Isolation: Secondary gets spare cores</p>
    <p>Allow Secondary to use spare idle cores.</p>
    <p>Release spare cores incrementally.</p>
    <p>Machine with 12 cores</p>
    <p>Restricted Secondary</p>
    <p>Buffer of idle cores</p>
    <p>Idle</p>
    <p>Primary</p>
    <p>Secondary</p>
  </div>
  <div class="page">
    <p>CPU Blind Isolation: Secondary gets spare cores</p>
    <p>Allow Secondary to use spare idle cores.</p>
    <p>Release spare cores incrementally.</p>
    <p>Machine with 12 cores</p>
    <p>Restricted Secondary</p>
    <p>Buffer of idle cores</p>
    <p>Idle</p>
    <p>Primary</p>
    <p>Secondary</p>
  </div>
  <div class="page">
    <p>CPU Blind Isolation: Secondary gets spare cores</p>
    <p>Allow Secondary to use spare idle cores.</p>
    <p>Release spare cores incrementally.</p>
    <p>Machine with 12 cores</p>
    <p>Restricted Secondary</p>
    <p>Buffer of idle cores</p>
    <p>Idle</p>
    <p>Primary</p>
    <p>Secondary</p>
  </div>
  <div class="page">
    <p>CPU Blind Isolation: Secondary gets spare cores</p>
    <p>Allow Secondary to use spare idle cores.</p>
    <p>Release spare cores incrementally.</p>
    <p>Machine with 12 cores</p>
    <p>Restricted Secondary</p>
    <p>Buffer of idle cores</p>
    <p>Idle</p>
    <p>Primary</p>
    <p>Secondary</p>
  </div>
  <div class="page">
    <p>CPU Blind Isolation: Secondary gets spare cores</p>
    <p>Allow Secondary to use spare idle cores.</p>
    <p>Release spare cores incrementally.</p>
    <p>Machine with 12 cores</p>
    <p>Restricted Secondary</p>
    <p>Buffer of idle cores</p>
    <p>Idle</p>
    <p>Primary</p>
    <p>Secondary</p>
  </div>
  <div class="page">
    <p>CPU Blind Isolation: We dedicate 1 core to PerfIso</p>
    <p>PerfIso does continuous polling  we affinitize it to 1 core.</p>
    <p>PerfIso</p>
    <p>Machine with 12 cores</p>
    <p>Restricted Secondary</p>
    <p>Buffer of idle cores</p>
    <p>Idle</p>
    <p>Primary</p>
    <p>Secondary</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Experiment testbed</p>
    <p>Hardware</p>
    <p>Intel Xeon E5  24 cores (48 w/ HT)</p>
    <p>128GB RAM</p>
    <p>Primary: Bing IndexServe</p>
    <p>569 GB index-slice</p>
    <p>Open-loop client</p>
    <p>500,000 queries @ 2,000 Q / s</p>
    <p>Secondary: CPU micro-benchmark</p>
  </div>
  <div class="page">
    <p>P 9</p>
    <p>a te</p>
    <p>n cy</p>
    <p>( m</p>
    <p>s)</p>
    <p>Standalone Colocated</p>
    <p>SLO</p>
    <p>No isolation</p>
    <p>Single server: PerfIso protects tail-latency Secondary: CPU-intensive micro-benchmark</p>
  </div>
  <div class="page">
    <p>P 9</p>
    <p>a te</p>
    <p>n cy</p>
    <p>( m</p>
    <p>s)</p>
    <p>Standalone Colocated</p>
    <p>SLO</p>
    <p>No isolation</p>
    <p>One order of magnitude worse !</p>
    <p>Single server: PerfIso protects tail-latency Secondary: CPU-intensive micro-benchmark</p>
  </div>
  <div class="page">
    <p>P 9</p>
    <p>a te</p>
    <p>n cy</p>
    <p>( m</p>
    <p>s)</p>
    <p>Standalone Colocated</p>
    <p>SLO 11.65 12.07</p>
    <p>Standalone Colocated</p>
    <p>No isolation PerfIso</p>
    <p>One order of magnitude worse !</p>
    <p>Single server: PerfIso protects tail-latency Secondary: CPU-intensive micro-benchmark</p>
  </div>
  <div class="page">
    <p>Single server: CPU utilization 3x higher! Secondary: CPU-intensive micro-benchmark</p>
    <p>C P</p>
    <p>U u</p>
    <p>ti li</p>
    <p>za ti</p>
    <p>o n</p>
    <p>%</p>
    <p>Primary Secondary</p>
    <p>No colocation PerfIso</p>
    <p>Standalone Colocated</p>
  </div>
  <div class="page">
    <p>Single server: CPU utilization 3x higher! Secondary: CPU-intensive micro-benchmark</p>
    <p>C P</p>
    <p>U u</p>
    <p>ti li</p>
    <p>za ti</p>
    <p>o n</p>
    <p>%</p>
    <p>Primary Secondary</p>
    <p>No colocation PerfIso</p>
    <p>Standalone Colocated</p>
  </div>
  <div class="page">
    <p>Restricting CPU cycles does not work Secondary: CPU-intensive micro-benchmark</p>
    <p>P 9</p>
    <p>a te</p>
    <p>n cy</p>
    <p>( m</p>
    <p>s)</p>
    <p>Standalone No isolation</p>
    <p>PerfIso Restrict cycles</p>
    <p>SLO</p>
    <p>Secondary  5% of CPU cycles</p>
    <p>P99 latency  3x higher than SLO!</p>
  </div>
  <div class="page">
    <p>Restricting CPU cores does not work Secondary: CPU-intensive micro-benchmark</p>
    <p>C P</p>
    <p>U u</p>
    <p>ti li</p>
    <p>za ti</p>
    <p>o n</p>
    <p>%</p>
    <p>Primary Secondary</p>
    <p>PerfIsoStandalone Restrict cores</p>
    <p>SLO 11.65</p>
    <p>P 9</p>
    <p>a te</p>
    <p>n cy</p>
    <p>( m</p>
    <p>s)</p>
    <p>Standalone No isolation</p>
    <p>PerfIso Restrict cores</p>
  </div>
  <div class="page">
    <p>Restricting CPU cores does not work Secondary: CPU-intensive micro-benchmark</p>
    <p>C P</p>
    <p>U u</p>
    <p>ti li</p>
    <p>za ti</p>
    <p>o n</p>
    <p>%</p>
    <p>Primary Secondary</p>
    <p>PerfIsoStandalone Restrict cores</p>
    <p>SLO 11.65</p>
    <p>P 9</p>
    <p>a te</p>
    <p>n cy</p>
    <p>( m</p>
    <p>s)</p>
    <p>Standalone No isolation</p>
    <p>PerfIso Restrict cores</p>
    <p>CPU utilization ~30% lower!</p>
  </div>
  <div class="page">
    <p>C P</p>
    <p>U u</p>
    <p>ti l.</p>
    <p>%</p>
    <p>Avg CPU Utilization %</p>
    <p>Q u</p>
    <p>e ri</p>
    <p>e s</p>
    <p>/ s</p>
    <p>La te</p>
    <p>n cy</p>
    <p>( m</p>
    <p>s)</p>
    <p>Time (minutes)</p>
    <p>Top-Level Aggregator P99 latency (ms) Queries / s</p>
  </div>
  <div class="page">
    <p>C P</p>
    <p>U u</p>
    <p>ti l.</p>
    <p>%</p>
    <p>Avg CPU Utilization %</p>
    <p>Q u</p>
    <p>e ri</p>
    <p>e s</p>
    <p>/ s</p>
    <p>La te</p>
    <p>n cy</p>
    <p>( m</p>
    <p>s)</p>
    <p>Time (minutes)</p>
    <p>Top-Level Aggregator P99 latency (ms) Queries / s</p>
    <p>Average CPU utilization is 50% - 80%!</p>
    <p>Secondary: Machine-Learning computation</p>
  </div>
  <div class="page">
    <p>Interesting details in the paper</p>
    <p>Effectiveness of static CPU isolation methods</p>
    <p>Restricting CPU cycles</p>
    <p>Restricting CPU cores</p>
    <p>Comparison of state-of-the-art techniques</p>
    <p>Managing disk, memory, and network</p>
  </div>
  <div class="page">
    <p>PerfIso: colocate batch jobs with online services</p>
  </div>
  <div class="page">
    <p>PerfIso: colocate batch jobs with online services</p>
    <p>Black-box: do not tailor to one specific service</p>
  </div>
  <div class="page">
    <p>PerfIso: colocate batch jobs with online services</p>
    <p>Black-box: do not tailor to one specific service</p>
    <p>Robustness: favor user-mode over kernel implementation</p>
  </div>
  <div class="page">
    <p>PerfIso: colocate batch jobs with online services</p>
    <p>Black-box: do not tailor to one specific service</p>
    <p>Robustness: favor user-mode over kernel implementation</p>
    <p>Headroom: some core-slack makes Primary behave like standalone</p>
  </div>
  <div class="page">
    <p>PerfIso: colocate batch jobs with online services</p>
    <p>Black-box: do not tailor to one specific service</p>
    <p>Robustness: favor user-mode over kernel implementation</p>
    <p>Headroom: some core-slack makes Primary behave like standalone</p>
    <p>CPU Blind Isolation  colocation without impacting service performance</p>
  </div>
</Presentation>
