<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>December 8th 2011</p>
    <p>LISA 2011 Practice and Experience Report</p>
    <p>Scaling on EC2 in a fast-paced environment Nicolas Brousse</p>
    <p>nicolas@tubemogul.com</p>
  </div>
  <div class="page">
    <p>Introduction - About the speaker</p>
    <p>My name is Nicolas Brousse  I previously worked for many industry leading company in France  From Web Hosting to Online Video services</p>
    <p>(Lycos, MultiMania, Kewego, MediaPlazza...)</p>
    <p>Heavy traffic environment and large user databases  I work as a Lead Operations Engineer at TubeMogul.com since 2008  I help TubeMogul to scale its infrastructure  From 20 servers to +500 servers  Using 4 Amazon EC2 Regions + 1 Colo  Monitoring with Nagios over 6,000 actives services and 1,000 passives services  Collecting over 80,000 metrics with Ganglia  Managing over 300 TB of data in Hadoop HDFS  Billions HTTP queries a day  Occasionally contribute to OpenSource projects  Ganglia (PHP and PERL module)  PHP Judy</p>
  </div>
  <div class="page">
    <p>Introduction - About TubeMogul</p>
    <p>Created in November 2006 by John Hughes and Brett Wilson  Formerly a video distribution and analytics platform  Acquire Illuminex - a flash analytics firm - in October 2008  New platform call PlayTime :  TubeMogul is a Video Marketing Company  Built for Branding  Integrate real-time media buying, ad serving, targeting, optimization and brand</p>
    <p>measurement</p>
    <p>TubeMogul simplifies the delivery of video ads and maximizes the impact of every dollar spent by brand marketers</p>
    <p>http://www.tubemogul.com/company/about_us</p>
  </div>
  <div class="page">
    <p>Amazon Clound Environment</p>
  </div>
  <div class="page">
    <p>Amazon Clound Environment</p>
    <p>We like it because....  We can quickly start new servers/clusters  We can quickly start new servers/clusters in many regions</p>
    <p>US East (Virginia)  US West (North California)  Europe (Dublin)  Asia Pacific (Tokyo &amp; Singapore)</p>
    <p>We can use different type of instances (RAM, CPU, Disks, etc.)  Its easy to automate with EC2 API  Its easy to plug to a configuration management tool</p>
    <p>But...  It can be hard to troubleshoot some failures or network problems  Occasionally being notified of hardware failures after the facts  No Multicast (Though, possible with Amazon VPC)  Bandwidth cost between regions can get expensive</p>
  </div>
  <div class="page">
    <p>Auto scale a cloud application</p>
    <p>Crawling partners API to aggregate Analytics data:</p>
    <p>instances 4. Open SSH tunnel to DB 5. Crawl Partners API and</p>
    <p>aggregate the data 6. Push the data to our DB thru</p>
    <p>SSH Tunnel 7. Shutdown EC2 instance</p>
  </div>
  <div class="page">
    <p>First approach to manage always on instances</p>
    <p>Instances provisioning with a home made script called Cerveza in Tcl/Tk  Used to configure instance profile at boot  Let us run commands on multiple instances at once</p>
    <p>Using LDAP and SQLite to track hostname and instance profiles  DNS Bind plugged to LDAP  SQLite store EBS volume, Instances id, keypair, AMI, etc.</p>
    <p>Instance configuration with shell scripts from NFS mount  EBS Raid setup  Software deployment  Configuration changes</p>
  </div>
  <div class="page">
    <p>First approach to manage always on instances</p>
    <p>Access Control  Security Group for each Cluster type (Hadoop, MySQL, etc.)  SSH Access limited by VPN  SSH and VPN plugged to LDAP</p>
    <p>Easy way to identify instances  DNS plugged to LDAP  Each instance configured with human readable hostname</p>
    <p>example: dev-mysql01, hadoop-namenode01, etc.</p>
    <p>Easy working process for devs  Users home directory using NFS auto-mount</p>
    <p>Automate Instances Monitoring  Trending with Ganglia, Alerting with Nagios  Using trending data for most Nagios checks  NSCA</p>
  </div>
  <div class="page">
    <p>Learning the hard way - the story</p>
    <p>SPOF in our infrastructure design lead us to a long outage  prevent us to login into servers for couple of days  couldnt start new instances</p>
  </div>
  <div class="page">
    <p>Learning the hard way - quick fixes</p>
  </div>
  <div class="page">
    <p>Going worldwide</p>
    <p>Need to handle multiple EC2 region for improved response time  use of gateway server in each Availability Zone  DNS Caching, LDAP Syncrepl, NFS with FS-Cache</p>
    <p>Cerveza rewrite in Python  Replace SQLite by SimpleDB  can be run from our laptop, need to run on a specific server  handle full provisioning (start/stop/reboot) instances  easily define instances profiles with YAML  use EC2 tags to identify instances and EBS volumes</p>
    <p>Stop building our own AMI  use of public ubuntu AMI server to reduce maintenance and support burden  use of cloud-init to easy start and preconfigure new instances  use of Puppet as our configuration management tool</p>
  </div>
  <div class="page">
    <p>Going worldwide</p>
  </div>
  <div class="page">
    <p>Lesson Learned</p>
    <p>Cloud environment doesnt mean you should by-pass basic infrastructure management rules</p>
    <p>Make sure the evolution of your infrastructure doesnt introduce SPOF</p>
    <p>Keep it simple, stupid</p>
    <p>Dont forget about backup and recovery process</p>
    <p>Use a configuration management tool early to prevent headache later</p>
  </div>
  <div class="page">
    <p>Thank You...</p>
    <p>@orieg@tubemogul</p>
    <p>Follow us on Twitter</p>
    <p>TubeMogul is Hiring !</p>
    <p>http://www.tubemogul.com/company/careers jobs@tubemogul.com</p>
  </div>
</Presentation>
