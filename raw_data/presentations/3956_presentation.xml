<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>LISA 09 Federated access control and workflow enforcement in systems configuration</p>
    <p>Bart Vanbrabant, Thomas Delaet and Wouter Joosen</p>
    <p>DistriNet, Dept. of Computer Science, K.U.Leuven, Belgium</p>
    <p>November 6, 2009</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Systems configuration Context Problems</p>
    <p>Our solution: ACHEL Access control and workflow Generating meaningful changes</p>
    <p>Prototype</p>
    <p>Evaluation Case 1 Case 2</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Systems configuration Context Problems</p>
    <p>Our solution: ACHEL Access control and workflow Generating meaningful changes</p>
    <p>Prototype</p>
    <p>Evaluation Case 1 Case 2</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>System configuration tools</p>
  </div>
  <div class="page">
    <p>System configuration tools</p>
  </div>
  <div class="page">
    <p>System configuration tools</p>
  </div>
  <div class="page">
    <p>System configuration tools</p>
  </div>
  <div class="page">
    <p>System configuration tools</p>
    <p>Malicious configuration</p>
  </div>
  <div class="page">
    <p>System configuration tools</p>
  </div>
  <div class="page">
    <p>State of practice in access control</p>
    <p>lib/ net/ dhcp.cf routing.cf web/ cluster.cf ... mail/ ... file/ ... hosts/ verdana.cs.kuleuven.be.cf clio.cs.kuleuven.be.cf ...</p>
    <p>Access control rules</p>
    <p>[@netadmins] lib = r hosts = r lib/net = rw</p>
    <p>[@senior] = rw</p>
    <p>[@mail] lib/mail = rw lib/file = rw</p>
    <p>[userA] hosts/verdana.cs.kuleuven.be.cf = rw</p>
  </div>
  <div class="page">
    <p>State of practice in access control</p>
    <p>UserA can not be trusted</p>
    <p>hosts/verdana.cs.kuleuven.be.cf</p>
    <p>Some global network configuration!</p>
  </div>
  <div class="page">
    <p>Workflow</p>
    <p>Dev repository</p>
    <p>Q&amp;A repository</p>
    <p>Production repository</p>
    <p>Updates approved by security officer</p>
  </div>
  <div class="page">
    <p>Federated infrastructures</p>
    <p>Central Repository</p>
    <p>Site 1 Repository</p>
    <p>Site 2 Repository</p>
    <p>Site 3 Repository</p>
    <p>Site 4 Repository</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Systems configuration Context Problems</p>
    <p>Our solution: ACHEL Access control and workflow Generating meaningful changes</p>
    <p>Prototype</p>
    <p>Evaluation Case 1 Case 2</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>What is ACHEL?</p>
    <p>ACHEL manages access to repositories of configuration specification by implementing access control and enforcing workflows</p>
    <p>fine-grained acccess control interpreting the semantics of changes</p>
    <p>access control is applied at the abstraction level of the configuration specification</p>
    <p>support for workflow in federated infrastructures  a (configuration) language agnostic solution</p>
  </div>
  <div class="page">
    <p>Update 1: an allowed change</p>
  </div>
  <div class="page">
    <p>Update 1: an allowed change</p>
    <p>Current specification for managing the motd file written by Bart:</p>
    <p>motd_file = File() motd_file.name = &quot;/etc/motd&quot; motd_file.content = &quot;Welcome to $hostname&quot; motd_file.owner = &quot;root&quot; motd_file.group = &quot;root&quot; motd_file.perm = &quot;0644&quot;</p>
  </div>
  <div class="page">
    <p>Update 1: an allowed change</p>
    <p>Thomas changes the content of the motd file:</p>
    <p>motd_file = File() motd_file.name = &quot;/etc/motd&quot; motd_file.content = template(&quot;motd.tmpl&quot;) motd_file.owner = &quot;root&quot; motd_file.group = &quot;root&quot; motd_file.perm = &quot;0644&quot;</p>
  </div>
  <div class="page">
    <p>Update 1: an allowed change</p>
    <p>Access control policy</p>
    <p># list of admins</p>
    <p>define admins as</p>
    <p>bart.vanbrabant@cs.kuleuven.be,</p>
    <p>wouter.joosen@cs.kuleuven.be</p>
    <p># allow admins to create the motd</p>
    <p>allow admins to:</p>
    <p>* assign File() to motd_file</p>
    <p>* assign &quot;/etc/motd&quot; to motd_file.name</p>
    <p># allow everyone to manage the motd</p>
    <p>allow to:</p>
    <p>* assign * to motd_file.content</p>
    <p># demand approval by an admin to change</p>
    <p># the permissions (all other attributes)</p>
    <p>allow to:</p>
    <p>/(add|modify)/ assign * to motd_file.*</p>
    <p>authorised by 1 admins</p>
    <p>update {</p>
    <p>action =&gt; modify</p>
    <p>operation =&gt; assign</p>
    <p>lhs =&gt; motd_file.content</p>
    <p>rhs =&gt; template(&quot;motd.tmpl&quot;)</p>
    <p>old_rhs =&gt; &quot;Welcome to $hostname&quot;</p>
    <p>owner =&gt; bart.vanbrabant@cs.kuleuven.be</p>
    <p>author =&gt; thomas.delaet@cs.kuleuven.be</p>
    <p>}</p>
  </div>
  <div class="page">
    <p>Update 1: an allowed change</p>
    <p>Output from our prototype for the motd example:</p>
    <p>Rev 1 has 6 changes and 0 signatures allowed bart.vanbrabant@cs.kuleuven.be to add assign &quot;/etc/motd&quot; to motd_file.name</p>
    <p>allowed bart.vanbrabant@cs.kuleuven.be to add assign &quot;Welcome at $hostname&quot;</p>
    <p>to motd_file.content</p>
    <p>allowed bart.vanbrabant@cs.kuleuven.be to add assign &quot;root&quot; to motd_file.group</p>
    <p>allowed bart.vanbrabant@cs.kuleuven.be to add assign File() to motd_file</p>
    <p>allowed bart.vanbrabant@cs.kuleuven.be to add assign &quot;root&quot; to motd_file.owner</p>
    <p>allowed bart.vanbrabant@cs.kuleuven.be to add assign &quot;0644&quot; to motd_file.perm</p>
    <p>Rev 2 has 1 changes and 0 signatures allowed thomas.delaet@cs.kuleuven.be to modify assign template(&quot;motd.tmpl&quot;)</p>
    <p>to motd_file.content</p>
  </div>
  <div class="page">
    <p>Update 1: an allowed change</p>
  </div>
  <div class="page">
    <p>Update 2: a change requiring authorisation</p>
  </div>
  <div class="page">
    <p>Update 2: a change requiring authorisation</p>
    <p>Thomas changes the permissions of the motd file:</p>
    <p>motd_file = File() motd_file.name = &quot;/etc/motd&quot; motd_file.content = template(&quot;motd.tmpl&quot;) motd_file.owner = &quot;root&quot; motd_file.group = &quot;wheel&quot; motd_file.perm = &quot;0644&quot;</p>
  </div>
  <div class="page">
    <p>Update 2: a change requiring authorisation</p>
    <p>Access control policy</p>
    <p># list of admins</p>
    <p>define admins as</p>
    <p>bart.vanbrabant@cs.kuleuven.be,</p>
    <p>wouter.joosen@cs.kuleuven.be</p>
    <p># allow admins to create the motd</p>
    <p>allow admins to:</p>
    <p>* assign File() to motd_file</p>
    <p>* assign &quot;/etc/motd&quot; to motd_file.name</p>
    <p># allow everyone to manage the motd</p>
    <p>allow to:</p>
    <p>* assign * to motd_file.content</p>
    <p># demand approval by an admin to change</p>
    <p># the permissions (all other attributes)</p>
    <p>allow to:</p>
    <p>/(add|modify)/ assign * to motd_file.*</p>
    <p>authorised by 1 admins</p>
    <p>update {</p>
    <p>action =&gt; modify</p>
    <p>operation =&gt; assign</p>
    <p>lhs =&gt; motd_file.group</p>
    <p>rhs =&gt; &quot;wheel&quot;</p>
    <p>old_rhs =&gt; &quot;root&quot;</p>
    <p>owner =&gt; bart.vanbrabant@cs.kuleuven.be</p>
    <p>author =&gt; thomas.delaet@cs.kuleuven.be</p>
    <p>}</p>
  </div>
  <div class="page">
    <p>Update 2: a change requiring authorisation</p>
    <p>Output from our prototype for the motd example:</p>
    <p>Rev 1 has 6 changes and 0 signatures</p>
    <p>allowed bart.vanbrabant@cs.kuleuven.be to add assign &quot;/etc/motd&quot; to motd_file.name</p>
    <p>allowed bart.vanbrabant@cs.kuleuven.be to add assign &quot;Welcome at $hostname&quot;</p>
    <p>to motd_file.content</p>
    <p>allowed bart.vanbrabant@cs.kuleuven.be to add assign &quot;root&quot; to motd_file.group</p>
    <p>allowed bart.vanbrabant@cs.kuleuven.be to add assign File() to motd_file</p>
    <p>allowed bart.vanbrabant@cs.kuleuven.be to add assign &quot;root&quot; to motd_file.owner</p>
    <p>allowed bart.vanbrabant@cs.kuleuven.be to add assign &quot;0644&quot; to motd_file.perm</p>
    <p>Rev 2 has 1 changes and 0 signatures</p>
    <p>allowed thomas.delaet@cs.kuleuven.be to modify assign template(&quot;motd.tmpl&quot;)</p>
    <p>to motd_file.content</p>
    <p>Rev 3 has 1 changes and 0 signatures</p>
    <p>authorisation (1) required for thomas.delaet@cs.kuleuven.be to modify assign</p>
    <p>&quot;wheel&quot; to motd_file.group owned by bart.vanbrabant@cs.kuleuven.be</p>
  </div>
  <div class="page">
    <p>Update 2: a change requiring authorisation</p>
  </div>
  <div class="page">
    <p>Generating meaningful changes</p>
  </div>
  <div class="page">
    <p>Generating meaningful changes</p>
    <p>added = { 24 } modified = { 13 -&gt; 22 } deleted = { 12, 15 }</p>
    <p>Version repository</p>
    <p>new Config file revision</p>
    <p>Abstract syntax tree</p>
    <p>Abstract syntax tree</p>
    <p>Config file</p>
    <p>Com pila tio n</p>
    <p>Tr ee m atc hin g</p>
    <p>Edit script generation</p>
    <p>Algorithm based on:</p>
    <p>Meaningful change detection in structured data. CHAWATHE AND GARCIA-MOLINE. 1997  Change Distilling: Tree Differencing for Fine-Grained Source Code Change Extraction. FLURI, WUERSCH,</p>
    <p>PINZGER AND GALL. 2007</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Systems configuration Context Problems</p>
    <p>Our solution: ACHEL Access control and workflow Generating meaningful changes</p>
    <p>Prototype</p>
    <p>Evaluation Case 1 Case 2</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Prototype</p>
    <p>Prototype in Python  built on Mercurial  simple configuration language and BCFG2 for deployment  PGP for signatures and authentication  access control language using regular expressions for pattern matching</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Systems configuration Context Problems</p>
    <p>Our solution: ACHEL Access control and workflow Generating meaningful changes</p>
    <p>Prototype</p>
    <p>Evaluation Case 1 Case 2</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Case 1: access control and simple workflow</p>
    <p>Small infrastructure  Team with junior and senior sysadmins  Enforce responsibilities  Enforce coding guidelines  Manage network configuration</p>
  </div>
  <div class="page">
    <p>Case 1: access rules</p>
    <p># enforce some conventions on everyone</p>
    <p>deny to:</p>
    <p>* assign File() to /^[^_]+_(?!file_)[\S]+$/</p>
    <p>* assign Package() to /^[^_]+_(?!pkg_)[\S]+$/</p>
    <p>* assign Service() to /^[^_]+_(?!service_)[\S]+$/</p>
    <p>* assign Directory() to /^[^_]+_(?!dir_)[\S]+$/</p>
    <p>* assign Symlink() to /^[^_]+_(?!ln_)[\S]+$/</p>
    <p>* assign Permissions() to /^[^_]+_(?!perm_)[\S]+$/</p>
    <p># senior admins can do anything else</p>
    <p>allow senioradmin to:</p>
    <p>* * *</p>
    <p># allow admins to do everything if a senior admins approves</p>
    <p>allow to:</p>
    <p>* * *</p>
    <p>authorised by 1 senioradmin</p>
    <p># network related configuration</p>
    <p>deny netadmins to:</p>
    <p># deny files other then those in /etc/network</p>
    <p>* assign /^(?!\/etc\/network\/)\S+/ to /^net_file_\w+\.name$/</p>
    <p># deny services other then dhcpd and network</p>
    <p>* assign /^(?!(dhcpd$|network$))\w+$/ to /^net_service_\w+\.name$/</p>
    <p>allow netadmins to:</p>
    <p>* import /^dhcp/</p>
    <p># allow adding a list of values to the net_dhcp_clients list</p>
    <p>* add /^\[[^\]]$/ to /^net_dhcp_clients$/</p>
    <p># allow only variables prefixed with net (ignore rhs)</p>
    <p>* assign * to /^(?!net_)\S+$/</p>
  </div>
  <div class="page">
    <p>Case 1: configuration</p>
    <p># configure network interfaces</p>
    <p>net_file_interfaces = File()</p>
    <p>net_file_interfaces.name =</p>
    <p>&quot;/etc/network/interfaces&quot;</p>
    <p>net_file_interfaces.owner = &quot;root&quot;</p>
    <p>net_file_interfaces.group = &quot;root&quot;</p>
    <p>net_file_interfaces.perms = &quot;0644&quot;</p>
    <p>net_file_interfaces.content = source(&quot;net/interfaces.$hostname&quot;)</p>
    <p># network service needs to be enabled</p>
    <p>net_service_network = Service()</p>
    <p>net_service_network.name = &quot;network&quot;</p>
    <p>net_service_network.status = &quot;on&quot;</p>
    <p># use template for /etc/hosts</p>
    <p>net_file_hosts = File()</p>
    <p>net_file_hosts.name = &quot;/etc/hosts&quot;</p>
    <p>net_file_hosts.owner = &quot;root&quot;</p>
    <p>net_file_hosts.group = &quot;root&quot;</p>
    <p>net_file_hosts.perms = &quot;0644&quot;</p>
    <p>net_file_hosts.content = template(&quot;net/hosts.tmpl&quot;)</p>
  </div>
  <div class="page">
    <p>Case 2: complex workflow in federated infrastructures</p>
    <p>Large federated grid infrastructure  Several administrative domains  Shared and site specific configuration  Based on the description of BeGrid in Devolved Management of Distributed Infrastructures With Quattor, LISA 08</p>
  </div>
  <div class="page">
    <p>Case 2: complex workflow in federated infrastructures</p>
    <p>Central Repository at Belnet</p>
    <p>KULeuven Repository</p>
    <p>UGent Repository</p>
    <p>UA Repository</p>
    <p>UCL Repository</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Systems configuration Context Problems</p>
    <p>Our solution: ACHEL Access control and workflow Generating meaningful changes</p>
    <p>Prototype</p>
    <p>Evaluation Case 1 Case 2</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Future work</p>
    <p>Validate ACHEL on a complex real-life configuration language. Key challenges:</p>
    <p>develop an access control language that integrates with the configuration language</p>
    <p>provide integration with the tools used with the configuration language</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>ACHELs contributions  fine-grained acccess control interpreting the semantics of changes</p>
    <p>access control is applied at the abstraction level of the configuration specification</p>
    <p>support for workflow in federated infrastructures  a language agnostic approach</p>
  </div>
  <div class="page">
    <p>Questions?</p>
  </div>
</Presentation>
