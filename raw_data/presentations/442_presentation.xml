<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Multicore OSes Looking Forward from 1991, er, 2011</p>
    <p>David A. Holland, Margo I. Seltzer</p>
    <p>{dholland, margo}@eecs.harvard.edu</p>
    <p>May 11, 2011</p>
  </div>
  <div class="page">
    <p>The Scenario</p>
    <p>Physical limits have been reached.</p>
    <p>Hardware isnt getting faster any more.</p>
    <p>To go faster were going to have to run in parallel.</p>
  </div>
  <div class="page">
    <p>The Scenario</p>
    <p>Physical limits have been reached.</p>
    <p>Hardware isnt getting faster any more.</p>
    <p>To go faster were going to have to run in parallel.</p>
    <p>Parallel code is hard!</p>
  </div>
  <div class="page">
    <p>The Scenario</p>
    <p>Physical limits have been reached.</p>
    <p>Hardware isnt getting faster any more.</p>
    <p>To go faster were going to have to run in parallel.</p>
    <p>Parallel code is hard!</p>
    <p>Scalable parallel code is harder!</p>
  </div>
  <div class="page">
    <p>The Scenario</p>
    <p>Physical limits have been reached.</p>
    <p>Hardware isnt getting faster any more.</p>
    <p>To go faster were going to have to run in parallel.</p>
    <p>Parallel code is hard!</p>
    <p>Scalable parallel code is harder!</p>
    <p>CRISIS!!!!!!</p>
  </div>
  <div class="page">
    <p>Meh.</p>
  </div>
  <div class="page">
    <p>Ok, its not quite 1991.</p>
    <p>From software, multiprocessor u multicore.</p>
    <p>Lessons from the past twenty years:  Shared-memory code with locks doesnt scale.</p>
    <p>Hardware will end up shared-nothing.</p>
    <p>Programming will involve message passing.</p>
  </div>
  <div class="page">
    <p>Ok, its not quite 1991.</p>
    <p>From software, multiprocessor u multicore.</p>
    <p>Lessons from the past twenty years:  Shared-memory code with locks doesnt scale.</p>
    <p>Hardware will end up shared-nothing.</p>
    <p>Programming will involve message passing.</p>
    <p>Lets skip the bankruptcy filings and go straight to messages.</p>
  </div>
  <div class="page">
    <p>Lightweight messages and channels</p>
    <p>Different programming paradigm.</p>
    <p>Has some chance of scaling.</p>
    <p>Not actually new:  Communicating Sequential Processes</p>
    <p>pi calculus</p>
    <p>Erlang</p>
    <p>goroutines</p>
  </div>
  <div class="page">
    <p>What It Looks Like (in C)</p>
    <p>chan &lt;- value; /* send on channel */</p>
    <p>value &lt;- chan; /* receive from channel */</p>
    <p>Comparable to procedure calls.</p>
    <p>choose {</p>
    <p>option x &lt;- c1: foo(x); break;</p>
    <p>option x &lt;- c2: bar(x); break;</p>
    <p>}</p>
    <p>Like select().</p>
    <p>start { baz(); }</p>
    <p>Makes a new thread. 5 HotOS / May 11, 2011</p>
  </div>
  <div class="page">
    <p>The Way Forward</p>
    <p>We need whole systems built this way:</p>
    <p>language...</p>
    <p>and kernel...</p>
    <p>and applications.</p>
    <p>Not just one research system, either.</p>
  </div>
  <div class="page">
    <p>The Way Forward</p>
    <p>We need whole systems built this way:</p>
    <p>language...</p>
    <p>and kernel...</p>
    <p>and applications.</p>
    <p>Not just one research system, either.</p>
    <p>Lets talk about kernels. (But dont worry; Im not advocating Erlang.)</p>
  </div>
  <div class="page">
    <p>Channel OS Architecture</p>
    <p>System calls will be messages.</p>
    <p>This enables new OS structures.</p>
    <p>Also need a whole new kernel based on channels...</p>
  </div>
  <div class="page">
    <p>Foreseeable Issues...</p>
    <p>Implementing choice.</p>
    <p>Waiting for channels to become ready.</p>
    <p>What does virtual memory look like?</p>
    <p>Too much parallelism?</p>
    <p>Partial failure.</p>
    <p>Scheduling.</p>
    <p>(and of course scaling is still hard)</p>
  </div>
  <div class="page">
    <p>Project State</p>
    <p>hot air vapourware slideware demoware</p>
    <p>software</p>
    <p>abandonware</p>
  </div>
  <div class="page">
    <p>Multicore OSes Looking Forward from 1991, er, 2011</p>
    <p>David A. Holland, Margo I. Seltzer</p>
    <p>{dholland, margo}@eecs.harvard.edu</p>
  </div>
</Presentation>
