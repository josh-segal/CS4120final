<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Tolera'ng FileSystem Mistakes with EnvyFS</p>
    <p>Lakshmi N. Bairavasundaram NetApp, Inc.</p>
    <p>Swaminathan Sundararaman</p>
    <p>Andrea C. ArpaciDusseau Remzi H. ArpaciDusseau</p>
    <p>University of Wisconsin Madison</p>
  </div>
  <div class="page">
    <p>File Systems in Todays World</p>
    <p>Modern file systems are complex  Tens of thousands of lines of code (e.g., XFS 45K LOC)</p>
    <p>Storage stack is also geVng deeper  Hypervisor, network, logical volume manager</p>
    <p>Need to handle a gamut of failures  Memory alloca'on, disk faults, bit flips, system crashes</p>
    <p>Preserve integrity of its metadata and user data</p>
  </div>
  <div class="page">
    <p>File System Bugs</p>
    <p>Bug reports for Linux 2.6 series from Bugzilla  ext3: 64, JFS: 17, ReiserFS: 38  Some are FS corrup'on causing permanent data loss</p>
    <p>FS bugs broadly classified into two categories  failstop: System immediately crashes</p>
    <p>Solu'ons: Nooks [Swi/ 04], CuriOS [David08]  failsilent: Accidentally corrupt ondisk state</p>
    <p>Many such bugs uncovered [Prabhakaran05, Gunawi08, Yang04, Yang06b]</p>
  </div>
  <div class="page">
    <p>Bugs are inevitable in file systems</p>
    <p>Challenge: how to cope with them?</p>
  </div>
  <div class="page">
    <p>Based on Nversion programming [Avizienis77]  NFS servers [Rodrigues01], databases [Vandiver07], security [Cox06]</p>
    <p>NVersion File Systems</p>
    <p>EnvyFS: Simple solware layer  Store data in N child file systems  Opera'ons performed on all children</p>
    <p>Rely on a simple so-ware layer  Challenge: reducing overheads while retaining reliability  SubSIST: Novel Single Instance Store</p>
    <p>EnvyFS layer</p>
    <p>C h ild 1</p>
    <p>C h ild 2</p>
    <p>C h ild N</p>
    <p>Disk driver</p>
    <p>Disk</p>
    <p>SIS layer</p>
    <p>Applica'on</p>
  </div>
  <div class="page">
    <p>Results  Robustness</p>
    <p>Tradi'onal file systems handle few corrup'ons (&lt; 4%)  EnvyFS3 tolerates 98.9% of single file system mistakes</p>
    <p>Performance  Desktop workloads: EnvyFS3 has comparable performance  I/O intensive workloads:</p>
    <p>Normal mode: EnvyFS3 + SubSIST acceptable performance  Under memory pressure: EnvyFS3 + SubSIST large overheads</p>
    <p>Poten'al as a debugging tool for FS developers  Pinpoint the source of failsilent bug in ext3</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduc'on  Building reliable file systems  Reducing overheads with SubSIST  Evalua'on  Conclusion</p>
  </div>
  <div class="page">
    <p>NVersion Systems</p>
    <p>Development process: 1. Producing the specifica'on of solware 2. Implemen'ng N versions of the solware 3. Crea'ng Nversion layer</p>
    <p>Executes different versions  Determines the consensus result</p>
  </div>
  <div class="page">
    <p>Imprac'cal: Requires wide scale changes to file systems  Specifica'ons take years to get accepted</p>
    <p>Can we leverage exis'ng specifica'on ?  Yes, can leverage VFS, but there are some issues</p>
    <p>VFS not precise for Nversioning purpose  Needs to handle cases where specifica'on is not precise  e.g., Ordering directory entries, inode number alloca'on</p>
  </div>
  <div class="page">
    <p>Imprecise VFS Specifica'on</p>
    <p>Ordering directory entries</p>
    <p>Issue:  No specified return order  Cant blindly compare entries</p>
    <p>Solu'on:  Read all entries from a directory</p>
    <p>(dir: test in our case) from all FSes</p>
    <p>Match entries from FSes  Return majority results</p>
    <p>FS X</p>
    <p>FS Y</p>
    <p>FS Z</p>
    <p>EnvyFS layer</p>
    <p>File 1 File 2 File 3</p>
    <p>Dir: test</p>
    <p>File 2 File 3 File 1</p>
    <p>Dir: test Dir: test</p>
    <p>File 1 File 2 File 3</p>
    <p>Readdir: test No Entries</p>
    <p>File 3 File 1 File 2</p>
    <p>File 1 File 2 File 3</p>
    <p>File 1 File 2 File 3</p>
    <p>Dir: test</p>
  </div>
  <div class="page">
    <p>Virt # FS 1 FS 3 FS 2</p>
    <p>??</p>
    <p>File 1 | 36</p>
    <p>Imprecise VFS Specifica'on (cont)  Inode number alloca'on</p>
    <p>Inode numbers returned through system calls  Each child file system issues different inode numbers  Possible solu'on: Force file systems to use same algorithm?  Our solu'on: Issue inode numbers at EnvyFS layer</p>
    <p>FS X</p>
    <p>FS Y</p>
    <p>FS Z</p>
    <p>EnvyFS layer</p>
    <p>Dir: test Dir: test Dir: test</p>
    <p>File 1 | 10 File 1 |65</p>
    <p>File 1 10 File 2 15 File 3 16</p>
    <p>File 2 04 File 3 44 File 1 36</p>
    <p>File 1 |</p>
    <p>Inode Mapping Table</p>
    <p>File 3 99 File 1 65 File 2 43</p>
    <p>Inode Numbers</p>
    <p>Inode Mapping Table not persistently stored</p>
  </div>
  <div class="page">
    <p>Painful process  High cost of development, long 'me delays</p>
    <p>Lucky! Hard work already done for us  30 different disk based file systems in Linux 2.6</p>
    <p>Which file systems to use?  ext3, JFS, ReiserFS in a threeversion FS  Others should work without modifica'ons</p>
  </div>
  <div class="page">
    <p>NVersion layer (EnvyFS)  Inserted beneath VFS  Simple design to avoid bugs</p>
    <p>Example: Reading a file  Allocate N data buffers  Read data block from the disk  Compare: data, return code, file posi'on  Return: data, return code</p>
    <p>Issues:  Allocate memory for each read opera'on  Extra copy from allocated buffer to applica'on  Comparison overheads</p>
    <p>Comparators Wrappers</p>
    <p>Inode Mapping Table</p>
    <p>Applica'on</p>
    <p>VFS layer</p>
    <p>ex t3</p>
    <p>JF S</p>
    <p>R ei se rF S</p>
    <p>EnvyFS Layer</p>
    <p>Read (file, 1 block)</p>
    <p>Read (file, 1 block)</p>
    <p>Read () Read () Read ()</p>
    <p>F F F pos: x pos: x pos: x</p>
    <p>D D D</p>
    <p>D D D</p>
    <p>err = err = err =</p>
    <p>Disk</p>
    <p>D err ,</p>
    <p>D err ,</p>
    <p>Tolera'ng FileSystem Mistakes with EnvyFS</p>
  </div>
  <div class="page">
    <p>Reading a File in EnvyFS</p>
    <p>Solu'on:  Same applica'on buffer for all FS  TCPlike checksums for data comparison  Compare: checksums, return code, file</p>
    <p>posi'on</p>
    <p>Read data un'l majority</p>
    <p>Comparators Wrappers</p>
    <p>Inode Mapping Table</p>
    <p>Applica'on</p>
    <p>VFS layer</p>
    <p>ex t3</p>
    <p>JF S</p>
    <p>R ei se rF S</p>
    <p>EnvyFS Layer</p>
    <p>Read (file, 1 block)</p>
    <p>Read (file, 1 block)</p>
    <p>Read () Read ()</p>
    <p>F F F pos: x pos: x</p>
    <p>D D</p>
    <p>D D D</p>
    <p>err = err = err =</p>
    <p>FS 1 # FS 2 # FS N #</p>
    <p>Checksums Disk</p>
    <p>D err ,</p>
    <p>D err ,</p>
    <p>Read () D</p>
    <p>pos: x</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduc'on  Building reliable file systems  Reducing overheads with SubSIST  Evalua'on  Conclusion</p>
  </div>
  <div class="page">
    <p>Part 1 Part 2 Part N   Disk 1 Disk 2 Disk N</p>
    <p>Disk</p>
    <p>Case for Single Instance Storage (SIS)</p>
    <p>Ideal: One disk per FS</p>
    <p>Prac'cal: One disk for all FS</p>
    <p>Overheads  Effec've storage space: 1/N  N 'mes more I/O (Read/write)</p>
    <p>Challenge: Maintain diversity while minimizing overheads</p>
    <p>EnvyFS layer</p>
    <p>FS 1</p>
    <p>FS 2</p>
    <p>FS N</p>
    <p>Applica'on</p>
    <p>VFS layer</p>
    <p>Disk Req. Queue</p>
  </div>
  <div class="page">
    <p>SubSIST: Single Instance Store</p>
    <p>Variant of an Single Instance Store  Selec'vely merges data blocks</p>
    <p>Block addressable SIS  Exports virtual disks to FSes  Manages mapping, free space info.  Not persistently stored on disk</p>
    <p>EnvyFS writes through N file systems  N data blocks merged to 1 data block  Content hashes not stored persistently  Metadata blocks not merged  Inter FS blocks and not intra FS</p>
    <p>EnvyFS layer</p>
    <p>FS 1</p>
    <p>FS 2</p>
    <p>FS N</p>
    <p>Applica'on</p>
    <p>VFS layer</p>
    <p>Vdisk 1</p>
    <p>Disk</p>
    <p>Vdisk 2 Vdisk N</p>
    <p>Read Cache CHash Layer</p>
    <p>Free Space Management</p>
    <p>Su b SI ST</p>
    <p>D D M M M D</p>
    <p>D D D</p>
    <p>D</p>
  </div>
  <div class="page">
    <p>FS 1</p>
    <p>D</p>
    <p>Disk</p>
    <p>Handling Data Block Corrup'ons?</p>
    <p>Corrup'on to data in a single FS  Due to bugs, bit flips, storage stack  Corrupt data blocks not merged  All other N1 data blocks merged  Corrupt data block fixed at next read</p>
    <p>Corrup'on to data block inside disk</p>
    <p>Single copy of data  Different code paths  Different ondisk structures</p>
    <p>EnvyFS layer</p>
    <p>FS 2</p>
    <p>FS N</p>
    <p>Applica'on</p>
    <p>VFS layer</p>
    <p>Vdisk 1 Vdisk 2 Vdisk N</p>
    <p>Read Cache CHash Layer</p>
    <p>Free Space Management</p>
    <p>Su b SI ST</p>
    <p>D D</p>
    <p>D D</p>
    <p>D D</p>
    <p>D D D D</p>
    <p>D</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduc'on  Building reliable file systems  Reducing overheads with SubSIST  EvaluaHon  Reliability  Performance</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Robustness of EnvyFS in recovering from a child file systems mistake?</p>
    <p>Disk B B</p>
    <p>B</p>
    <p>EnvyFS layer</p>
    <p>Block Driver</p>
    <p>B</p>
    <p>Reliability Evalua'on: Fault Injec'on</p>
    <p>Corrup'on: bugs in FS / storage stack  Types of disk blocks</p>
    <p>superblock, inode, block bitmap, file data,   Perform different file ops</p>
    <p>mount, stat, creat, unlink, read,   Report user visible results  All results are applicable with SubSIST</p>
    <p>except corrupHon to data blocks</p>
    <p>ex t 3</p>
    <p>JF S</p>
    <p>R ei se rF S</p>
    <p>Pseudo Device Driver</p>
    <p>VFS</p>
    <p>B B</p>
    <p>B</p>
    <p>B</p>
    <p>Typeaware fault injecHon [Prabhakaran05]</p>
  </div>
  <div class="page">
    <p>ext3</p>
    <p>p at h t ra ve rs al</p>
    <p>SE T 1 (s ta t,  )</p>
    <p>SE T 2 (c h m o d )</p>
    <p>re ad</p>
    <p>re ad</p>
    <p>lin k</p>
    <p>ge td ir en</p>
    <p>tr ie s</p>
    <p>cr ea t</p>
    <p>lin k</p>
    <p>m kd ir</p>
    <p>re n am</p>
    <p>e sy m lin</p>
    <p>k w ri te</p>
    <p>tr u n ca te</p>
    <p>rm d ir</p>
    <p>u n lin</p>
    <p>k m o u n t</p>
    <p>SE T 3 (f sy n c)</p>
    <p>u m o u n t</p>
    <p>INODE</p>
    <p>DIR</p>
    <p>BMAP</p>
    <p>IMAP</p>
    <p>INDIRECT</p>
    <p>DATA</p>
    <p>SUPER</p>
    <p>JSUPER</p>
    <p>GDESC</p>
    <p>Result Matrix</p>
    <p>Normal</p>
    <p>Data loss</p>
    <p>N/A</p>
    <p>Cannot mount</p>
    <p>Ops fail</p>
    <p>Data corrupt</p>
    <p>Crash</p>
    <p>Readonly</p>
    <p>e Depends</p>
    <p>E</p>
  </div>
  <div class="page">
    <p>ext3</p>
    <p>p at h t ra ve rs al</p>
    <p>SE T 1 (s ta t,  )</p>
    <p>SE T 2 (c h m o d )</p>
    <p>re ad</p>
    <p>re ad</p>
    <p>lin k</p>
    <p>ge td ir en</p>
    <p>tr ie s</p>
    <p>cr ea t</p>
    <p>lin k</p>
    <p>m kd ir</p>
    <p>re n am</p>
    <p>e sy m lin</p>
    <p>k w ri te</p>
    <p>tr u n ca te</p>
    <p>rm d ir</p>
    <p>u n lin</p>
    <p>k m o u n t</p>
    <p>SE T 3 (f sy n c)</p>
    <p>u m o u n t</p>
    <p>INODE</p>
    <p>DIR</p>
    <p>BMAP</p>
    <p>IMAP</p>
    <p>INDIRECT</p>
    <p>DATA</p>
    <p>SUPER</p>
    <p>JSUPER</p>
    <p>GDESC</p>
    <p>Data loss</p>
    <p>N/A</p>
    <p>Cannot mount</p>
    <p>Ext3 stores many superblock copies;</p>
    <p>but, does not handle superblock corrup'on</p>
    <p>E</p>
  </div>
  <div class="page">
    <p>ext3</p>
    <p>p at h t ra ve rs al</p>
    <p>SE T 1 (s ta t,  )</p>
    <p>SE T 2 (c h m o d )</p>
    <p>re ad</p>
    <p>re ad</p>
    <p>lin k</p>
    <p>ge td ir en</p>
    <p>tr ie s</p>
    <p>cr ea t</p>
    <p>lin k</p>
    <p>m kd ir</p>
    <p>re n am</p>
    <p>e sy m lin</p>
    <p>k w ri te</p>
    <p>tr u n ca te</p>
    <p>rm d ir</p>
    <p>u n lin</p>
    <p>k m o u n t</p>
    <p>SE T 3 (f sy n c)</p>
    <p>u m o u n t</p>
    <p>INODE</p>
    <p>DIR</p>
    <p>BMAP</p>
    <p>IMAP</p>
    <p>INDIRECT</p>
    <p>DATA</p>
    <p>SUPER</p>
    <p>JSUPER</p>
    <p>GDESC</p>
    <p>Data loss</p>
    <p>N/A</p>
    <p>Cannot mount</p>
    <p>Ops fail</p>
    <p>Crash</p>
    <p>In addi'on to opera'ons failing, inode corrup'on leads to data loss</p>
    <p>Unlink: system crash during unmount</p>
    <p>E</p>
  </div>
  <div class="page">
    <p>ext3</p>
    <p>p at h t ra ve rs al</p>
    <p>SE T 1 (s ta t,  )</p>
    <p>SE T 2 (c h m o d )</p>
    <p>re ad</p>
    <p>re ad</p>
    <p>lin k</p>
    <p>ge td ir en</p>
    <p>tr ie s</p>
    <p>cr ea t</p>
    <p>lin k</p>
    <p>m kd ir</p>
    <p>re n am</p>
    <p>e sy m lin</p>
    <p>k w ri te</p>
    <p>tr u n ca te</p>
    <p>rm d ir</p>
    <p>u n lin</p>
    <p>k m o u n t</p>
    <p>SE T 3 (f sy n c)</p>
    <p>u m o u n t</p>
    <p>INODE</p>
    <p>DIR</p>
    <p>BMAP</p>
    <p>IMAP</p>
    <p>INDIRECT</p>
    <p>DATA</p>
    <p>SUPER</p>
    <p>JSUPER</p>
    <p>GDESC</p>
    <p>Normal</p>
    <p>Data loss</p>
    <p>N/A</p>
    <p>Cannot mount</p>
    <p>Ops fail</p>
    <p>Data corrupt</p>
    <p>Crash</p>
    <p>Readonly</p>
    <p>e Depends</p>
    <p>E</p>
  </div>
  <div class="page">
    <p>Kernel panic in ext3</p>
    <p>p at h t ra ve rs al</p>
    <p>SE T 1 (s ta t,  )</p>
    <p>SE T 2 (c h m o d )</p>
    <p>re ad</p>
    <p>re ad</p>
    <p>lin k</p>
    <p>ge td ir en</p>
    <p>tr ie s</p>
    <p>cr ea t</p>
    <p>lin k</p>
    <p>m kd ir</p>
    <p>re n am</p>
    <p>e sy m lin</p>
    <p>k w ri te</p>
    <p>tr u n ca te</p>
    <p>rm d ir</p>
    <p>u n lin</p>
    <p>k m o u n t</p>
    <p>SE T 3 (f sy n c)</p>
    <p>u m o u n t</p>
    <p>Normal</p>
    <p>N/A</p>
    <p>INODE</p>
    <p>DIR</p>
    <p>BMAP</p>
    <p>IMAP</p>
    <p>INDIRECT</p>
    <p>DATA</p>
    <p>SUPER</p>
    <p>JSUPER</p>
    <p>GDESC</p>
    <p>EnvyFS3 works in every scenario 6/18/09 Tolera'ng FileSystem Mistakes with EnvyFS 25</p>
    <p>EnvyFS3</p>
    <p>E R J</p>
    <p>EnvyFS</p>
  </div>
  <div class="page">
    <p>Poten'al for Bug Isola'on ext3 EnvyFS3</p>
    <p>Ti m e</p>
    <p>Unlink on corrupt inode:  ext3_lookup (bug)  ext3_unlink</p>
    <p>Unmount (panic)</p>
    <p>Ti m e</p>
    <p>Unlink on corrupt inode:  ext3_lookup (bug)  ext3 inode does not match others</p>
    <p>Further ops not issued</p>
    <p>In typical use, a problem is no'ced only on panic</p>
    <p>In EnvyFS3, a problem is no'ced the first 'me child file system returns wrong results</p>
  </div>
  <div class="page">
    <p>JFS</p>
    <p>p at h t ra ve rs al</p>
    <p>SE T 1</p>
    <p>SE T 2</p>
    <p>re ad</p>
    <p>re ad</p>
    <p>lin k</p>
    <p>ge td ir en</p>
    <p>tr ie s</p>
    <p>cr ea t</p>
    <p>lin k</p>
    <p>m kd ir</p>
    <p>re n am</p>
    <p>e sy m lin</p>
    <p>k w ri te</p>
    <p>tr u n ca te</p>
    <p>rm d ir</p>
    <p>u n lin</p>
    <p>k m o u n t</p>
    <p>SE T 3</p>
    <p>u m o u n t</p>
    <p>INODE</p>
    <p>DIR</p>
    <p>BMAP</p>
    <p>IMAP</p>
    <p>INTERNAL</p>
    <p>DATA</p>
    <p>SUPER</p>
    <p>JSUPER</p>
    <p>JDATA</p>
    <p>AGGRINODE</p>
    <p>IMAPDESC</p>
    <p>IMAPCNTL</p>
    <p>Normal</p>
    <p>Data loss</p>
    <p>N/A</p>
    <p>Cannot mount</p>
    <p>Ops fail</p>
    <p>Data corrupt</p>
    <p>Crash</p>
    <p>Readonly</p>
    <p>a Depends</p>
    <p>J</p>
  </div>
  <div class="page">
    <p>EnvyFS3</p>
    <p>p at h t ra ve rs al</p>
    <p>SE T 1</p>
    <p>SE T 2</p>
    <p>re ad</p>
    <p>re ad</p>
    <p>lin k</p>
    <p>ge td ir en</p>
    <p>tr ie s</p>
    <p>cr ea t</p>
    <p>lin k</p>
    <p>m kd ir</p>
    <p>re n am</p>
    <p>e sy m lin</p>
    <p>k w ri te</p>
    <p>tr u n ca te</p>
    <p>rm d ir</p>
    <p>u n lin</p>
    <p>k m o u n t</p>
    <p>SE T 3</p>
    <p>u m o u n t</p>
    <p>INODE</p>
    <p>DIR</p>
    <p>BMAP</p>
    <p>IMAP</p>
    <p>INTERNAL</p>
    <p>DATA</p>
    <p>SUPER</p>
    <p>JSUPER</p>
    <p>JDATA</p>
    <p>AGGRINODE</p>
    <p>IMAPDESC</p>
    <p>IMAPCNTL</p>
    <p>Normal</p>
    <p>N/A</p>
    <p>Crash</p>
    <p>Kernel panic in EnvyFS3</p>
    <p>E R J</p>
    <p>EnvyFS</p>
  </div>
  <div class="page">
    <p>ext3 JFS ReiserFS EnvyFS EnvyFS+SIS</p>
    <p>Experimental setup  AMD Opteron 2.2 GHz Processor  2GB RAM  80 GB Hitachi Deskstar 7200rpm SATA disk  Linux 2.6.12  4GB disk par''on for each file system</p>
    <p>OpenSSH Benchmark Performance Evalua'on</p>
    <p>El ap se d T im</p>
    <p>e ( in S ec o n d s)</p>
    <p>File Systems</p>
    <p>CPU Intensive  OpenSSH 4.5  Copy, untar and</p>
    <p>make</p>
    <p>Performance of EnvyFS3 is comparable to a single file system</p>
  </div>
  <div class="page">
    <p>Postmark10K Postmark100K Postmark100K*</p>
    <p>ext3 JFS ReiserFS EnvyFS EnvyFS+SIS</p>
    <p>I/O Intensive  Mimics busy mail server workload  Transac'on: creates, deletes, reads, appends,</p>
    <p>Postmark Configura'on  2500 files  File size: 4Kb  40Kb  No. of transac'ons: 10K and 100K</p>
    <p>Postmark Benchmark</p>
    <p>El ap se d T im</p>
    <p>e ( in S ec o n d s)</p>
    <p>EnvyFS3: 8x + SubSIST: 4x</p>
    <p>EnvyFS3: 1.7x + SubSIST: 11.5%</p>
  </div>
  <div class="page">
    <p>Summary of Results</p>
    <p>Robustness  Tradi'onal file systems vulnerable to corrup'ons  EnvyFS3 tolerates almost all mistakes in one FS</p>
    <p>Performance  Desktop workloads: EnvyFS3 has comparable performance  I/O intensive workloads:</p>
    <p>Regular Opera'ons: EnvyFS3 + SubSIST acceptable performance  Memory pressure: EnvyFS3 + SubSIST has large overhead</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduc'on  Building reliable file systems  Reducing overheads with SubSIST  Evalua'on  Conclusion</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Bugs/mistakes are inevitable in any solware  Must cope, not just hope to avoid</p>
    <p>EnvyFS: Nversion approach to tolera'ng FS bugs  Built using exis'ng specifica'on and file systems</p>
    <p>SubSIST: single instance store  Decreases overheads while retaining reliability</p>
  </div>
  <div class="page">
    <p>Thank You!</p>
    <p>Advanced Systems Lab (ADSL) University of WisconsinMadison hXp://www.cs.wisc.edu/adsl</p>
  </div>
  <div class="page">
    <p>Future Work</p>
    <p>Debugging tool for developers  Run older and newer version of file systems  Compare results with older version</p>
    <p>File system repair  Simple repair: copy data from other file system  Complex repair: recreate en're file system tree  How to do micro repair ?</p>
  </div>
  <div class="page">
    <p>ext3</p>
    <p>p at h t ra ve rs al</p>
    <p>SE T 1 (s ta t,  )</p>
    <p>SE T 2 (c h m o d )</p>
    <p>re ad</p>
    <p>re ad</p>
    <p>lin k</p>
    <p>ge td ir en</p>
    <p>tr ie s</p>
    <p>cr ea t</p>
    <p>lin k</p>
    <p>m kd ir</p>
    <p>re n am</p>
    <p>e sy m lin</p>
    <p>k w ri te</p>
    <p>tr u n ca te</p>
    <p>rm d ir</p>
    <p>u n lin</p>
    <p>k m o u n t</p>
    <p>SE T 3 (f sy n c)</p>
    <p>u m o u n t</p>
    <p>INODE</p>
    <p>DIR</p>
    <p>BMAP</p>
    <p>IMAP</p>
    <p>INDIRECT</p>
    <p>DATA</p>
    <p>SUPER</p>
    <p>JSUPER</p>
    <p>GDESC</p>
    <p>Data loss</p>
    <p>N/A</p>
    <p>Readonly</p>
    <p>Ext3 detects corrup'on for rmdir, unlink  creat , mkdir, symlink cause ext3 to reuse an inode, resul'ng in data loss</p>
    <p>E</p>
  </div>
</Presentation>
