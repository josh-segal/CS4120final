<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Combining Static Analysis and Runtime Monitoring to Counter</p>
    <p>SQL-Injection Attacks</p>
    <p>William Halfond &amp; Alessandro Orso Georgia Institute of Technology</p>
    <p>This work was supported in part by NSF awards CCR-0306372, CCR-0205422, and CCR-0209322 to Georgia Tech.</p>
  </div>
  <div class="page">
    <p>William Halfond  WODA 2005</p>
    <p>Vulnerable Application</p>
    <p>String queryString = &quot;SELECT info FROM userTable WHERE &quot;; if ((! login.equals(&quot;&quot;)) &amp;&amp; (! password.equals(&quot;&quot;))) { queryString += &quot;login='&quot; + login + &quot;' AND pass='&quot; + password + &quot;'&quot;; } else { queryString+=&quot;login='guest'&quot;; } ResultSet tempSet = stmt.executeQuery(queryString);</p>
  </div>
  <div class="page">
    <p>William Halfond  WODA 2005</p>
    <p>Attack Scenario</p>
    <p>String queryString = &quot;SELECT info FROM userTable WHERE &quot;; if ((! login.equals(&quot;&quot;)) &amp;&amp; (! password.equals(&quot;&quot;))) { queryString += &quot;login='&quot; + login + &quot;' AND pass='&quot; + password + &quot;'&quot;; } else { queryString+=&quot;login='guest'&quot;; } ResultSet tempSet = stmt.executeQuery(queryString);</p>
    <p>Normal Usage User submits login doe and password xyz</p>
    <p>SELECT info FROM users WHERE login=doe AND pass=xyz</p>
  </div>
  <div class="page">
    <p>William Halfond  WODA 2005</p>
    <p>Malicious Usage Attacker submits  or 1=1 -- and password of</p>
    <p>SELECT info FROM users WHERE login= or 1=1 -- AND pass=</p>
    <p>Attack Scenario</p>
    <p>String queryString = &quot;SELECT info FROM userTable WHERE &quot;; if ((! login.equals(&quot;&quot;)) &amp;&amp; (! password.equals(&quot;&quot;))) { queryString += &quot;login='&quot; + login + &quot;' AND pass='&quot; + password + &quot;'&quot;; } else { queryString+=&quot;login='guest'&quot;; } ResultSet tempSet = stmt.executeQuery(queryString);</p>
  </div>
  <div class="page">
    <p>William Halfond  WODA 2005</p>
    <p>Presentation Outline</p>
    <p>Related Work  Our Solution  Implementation Details  Preliminary Results</p>
  </div>
  <div class="page">
    <p>William Halfond  WODA 2005</p>
    <p>Related Approaches</p>
    <p>Program Analysis  Information Flow Reasoning [Huang04]  Type Analysis [Gould04]  Check for Tautologies [Wasserman04]</p>
    <p>Defensive Coding [WSC03]  Proxy Filtering [Scott02]  Randomized Instruction Set [Kc03]  Penetration Testing [Huang03]</p>
  </div>
  <div class="page">
    <p>William Halfond  WODA 2005</p>
    <p>Our Solution</p>
    <p>Basic Insights 1. Code contains enough information to accurately</p>
    <p>predict and model all possible queries. 2. A SQL Injection Attack will not conform to the</p>
    <p>predicted model.</p>
    <p>Solution: Static analysis =&gt; build query models Runtime analysis =&gt; enforce models</p>
  </div>
  <div class="page">
    <p>William Halfond  WODA 2005</p>
    <p>Overview of Analysis</p>
    <p>hotspot. 3. Instrument hotspots. 4. Monitor application at runtime.</p>
  </div>
  <div class="page">
    <p>William Halfond  WODA 2005</p>
    <p>Scan application code to identify hotspots.</p>
    <p>String queryString = &quot;SELECT info FROM userTable WHERE &quot;; if ((! login.equals(&quot;&quot;)) &amp;&amp; (! password.equals(&quot;&quot;))) { queryString += &quot;login='&quot; + login + &quot;' AND pass='&quot; + password + &quot;'&quot;; } else { queryString+=&quot;login='guest'&quot;; } ResultSet tempSet = stmt.executeQuery(queryString);</p>
    <p>Hotspot</p>
  </div>
  <div class="page">
    <p>William Halfond  WODA 2005</p>
    <p>SELECT info FROM userTable WHERE</p>
    <p>login</p>
    <p>=  guest</p>
    <p>login</p>
    <p>=  VAR AND pass =  VAR</p>
  </div>
  <div class="page">
    <p>William Halfond  WODA 2005</p>
    <p>Wrap each hotspot with call to monitor.</p>
    <p>String queryString = &quot;SELECT info FROM userTable WHERE &quot;; if ((! login.equals(&quot;&quot;)) &amp;&amp; (! password.equals(&quot;&quot;))) { queryString += &quot;login='&quot; + login + &quot;' AND pass='&quot; + password + &quot;'&quot;; } else { queryString+=&quot;login='guest'&quot;; } if (monitor.accepts (hotspotID, queryString) { ResultSet tempSet = stmt.executeQuery(queryString); }</p>
    <p>Hotspot</p>
    <p>Call to Monitor</p>
  </div>
  <div class="page">
    <p>William Halfond  WODA 2005</p>
    <p>Normal Usage:</p>
    <p>SELECT info FROM userTable WHERE login =  doe AND pass =  xyz</p>
    <p>Check queries against SQL query model.</p>
    <p>SELECT info FROM userTable WHERE</p>
    <p>login</p>
    <p>=  guest</p>
    <p>login</p>
    <p>=  VAR AND pass =  VAR</p>
  </div>
  <div class="page">
    <p>William Halfond  WODA 2005</p>
    <p>Check queries against SQL query model.</p>
    <p>SELECT info FROM userTable WHERE</p>
    <p>login</p>
    <p>=  guest</p>
    <p>login</p>
    <p>=  VAR AND pass =  VAR</p>
    <p>Malicious Usage:</p>
    <p>SELECT info FROM userTable WHERE login =   AND pass =  OR 1 = 1 --</p>
  </div>
  <div class="page">
    <p>William Halfond  WODA 2005</p>
    <p>Implementation</p>
    <p>Analysis Module: (Steps 1 &amp; 2)  String Analysis: JSA</p>
    <p>[Christensen03]  SQL Tokenizing: Modified depth</p>
    <p>first traversal</p>
    <p>Instrumentation: (Step 3)  InsECT [Chawla04]</p>
    <p>Run-time Monitoring: (Step 4)  Monitoring Library: InsECT</p>
    <p>[Chawla04]  Runtime Checker: NDFA</p>
    <p>implementation</p>
  </div>
  <div class="page">
    <p>William Halfond  WODA 2005</p>
    <p>Preliminary Results</p>
    <p>Used two applications  Identified vulnerable hotspots  Crafted targeted attack queries and</p>
    <p>normal queries  Evaluated effectiveness of technique for</p>
    <p>protecting applications  No false positives or negatives.</p>
  </div>
  <div class="page">
    <p>William Halfond  WODA 2005</p>
    <p>Future Work</p>
    <p>More extensive and realistic evaluation  Identify limitations of analysis  Evaluate scalability of technique  Use of dynamic techniques to construct</p>
    <p>model where static analysis fails</p>
  </div>
  <div class="page">
    <p>William Halfond  WODA 2005</p>
    <p>Questions</p>
  </div>
</Presentation>
