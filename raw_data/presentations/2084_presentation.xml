<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>CAS AC DE</p>
    <p>Micah J Best | UBC Nicholas Vining | UBC</p>
    <p>Daniel Jacobsen | Gaslamp Games Alexandra Fedorova | SFU</p>
    <p>Collection-focused</p>
    <p>Parallel&quot;m</p>
  </div>
  <div class="page">
    <p>Clockwork Empires</p>
  </div>
  <div class="page">
    <p>Clockwork Empires</p>
  </div>
  <div class="page">
    <p>Experience</p>
    <p>Realization</p>
    <p>Sub-collections are a good candidate for the basic unit of parallelism</p>
    <p>Mental Models</p>
    <p>Argument</p>
  </div>
  <div class="page">
    <p>Experience</p>
    <p>Realization</p>
    <p>Sub-collections are a good candidate for the basic unit of parallelism</p>
    <p>Mental Models</p>
    <p>Argument</p>
  </div>
  <div class="page">
    <p>Experience</p>
    <p>Realization</p>
    <p>Sub-collections are a good candidate for the basic unit of parallelism</p>
    <p>Mental Models</p>
    <p>Argument</p>
  </div>
  <div class="page">
    <p>Experience</p>
    <p>Realization</p>
    <p>Sub-collections are a good candidate for the basic unit of parallelism</p>
    <p>Mental Models</p>
    <p>Argument</p>
  </div>
  <div class="page">
    <p>Experience</p>
    <p>Realization</p>
    <p>Sub-collections are a good candidate for the basic unit of parallelism</p>
    <p>Mental Models</p>
    <p>Argument</p>
  </div>
  <div class="page">
    <p>Experience</p>
    <p>Realization Sub-collections are a good candidate for</p>
    <p>the basic unit of parallelism</p>
    <p>Mental Models</p>
    <p>Argument</p>
  </div>
  <div class="page">
    <p>Mental Models</p>
  </div>
  <div class="page">
    <p>Mental Models</p>
    <p>How do we think about parallelism?</p>
  </div>
  <div class="page">
    <p>Mental Models</p>
    <p>How do we think about parallelism?</p>
  </div>
  <div class="page">
    <p>Mental Models</p>
    <p>The Undergrad Model</p>
  </div>
  <div class="page">
    <p>Mental Models</p>
    <p>The Undergrad Model</p>
    <p>Processor 1</p>
    <p>Processor 2</p>
    <p>Processor 3</p>
    <p>Processor 4</p>
    <p>int main(int argc,char **argv) {</p>
    <p>}</p>
    <p>foo(x)</p>
    <p>bar(y)</p>
    <p>baz(z)</p>
  </div>
  <div class="page">
    <p>Mental Models</p>
    <p>The Undergrad Model</p>
    <p>Processor 1</p>
    <p>Processor 2</p>
    <p>Processor 3</p>
    <p>Processor 4</p>
    <p>int main(int argc,char **argv) {</p>
    <p>}</p>
    <p>foo(x) bar(y) baz(z)</p>
  </div>
  <div class="page">
    <p>Mental Models</p>
    <p>The Undergrad Model</p>
    <p>Processor 1</p>
    <p>Processor 2</p>
    <p>Processor 3</p>
    <p>Processor 4</p>
    <p>int main(int argc,char **argv) {</p>
    <p>}</p>
    <p>foo(x) bar(y) baz(z)</p>
    <p>What is a ?work unit</p>
  </div>
  <div class="page">
    <p>Mental Models</p>
  </div>
  <div class="page">
    <p>Mental Models</p>
    <p>L1 Cache hit: ~1-3 cycles</p>
    <p>L2 Cache hit: 10s of cycles</p>
    <p>Main Memory Access: 100s of cycles</p>
  </div>
  <div class="page">
    <p>Mental Models</p>
    <p>L1 Cache hit: ~1-3 cycles</p>
    <p>L2 Cache hit: 10s of cycles</p>
    <p>Main Memory Access: 100s of cycles</p>
    <p>Cloud Access: Many many many many many cycles</p>
  </div>
  <div class="page">
    <p>Mental Models</p>
    <p>L1 Cache hit: ~1-3 cycles</p>
    <p>L2 Cache hit: 10s of cycles</p>
    <p>Main Memory Access: 100s of cycles</p>
    <p>Cloud Access: Many many many many many cycles</p>
    <p>deadlock</p>
    <p>livelock</p>
    <p>starvation state conflicts</p>
    <p>load balancing</p>
  </div>
  <div class="page">
    <p>Mental Models</p>
    <p>L1 Cache hit: ~1-3 cycles</p>
    <p>L2 Cache hit: 10s of cycles</p>
    <p>Main Memory Access: 100s of cycles</p>
    <p>Cloud Access: Many many many many many cycles</p>
    <p>deadlock</p>
    <p>livelock</p>
    <p>starvation state conflicts</p>
    <p>load balancing</p>
    <p>branch misprediction</p>
  </div>
  <div class="page">
    <p>Schedule Data, Not Code</p>
  </div>
  <div class="page">
    <p>Schedule Data, Not Code</p>
    <p>What if we pick up the other end of the stick?</p>
  </div>
  <div class="page">
    <p>Schedule Data, Not Code</p>
    <p>What if we pick up the other end of the stick?</p>
  </div>
  <div class="page">
    <p>Schedule Data, Not Code</p>
    <p>What if we pick up the other end of the stick?</p>
    <p>Processor 1</p>
    <p>Processor 2</p>
    <p>Processor 3</p>
    <p>Processor 4</p>
    <p>int main(int argc,char **argv) {</p>
    <p>}</p>
    <p>foo(x)</p>
    <p>bar(y)</p>
    <p>baz(z)</p>
  </div>
  <div class="page">
    <p>Schedule Data, Not Code</p>
    <p>Processor 1</p>
    <p>Processor 2</p>
    <p>Processor 3</p>
    <p>Processor 4</p>
    <p>int main(int argc,char **argv) {</p>
    <p>}</p>
    <p>Schedule Data, Not Code</p>
    <p>x y z</p>
  </div>
  <div class="page">
    <p>Data is in Collections</p>
    <p>Code is static</p>
    <p>Data is dynamic</p>
  </div>
  <div class="page">
    <p>Data is in Collections</p>
    <p>Code is static</p>
    <p>Data is dynamic</p>
    <p>But data never travels alone.</p>
  </div>
  <div class="page">
    <p>Data is in Collections</p>
    <p>Code is static</p>
    <p>Data is dynamic</p>
    <p>almost always generally</p>
    <p>But data never travels alone. rarely</p>
  </div>
  <div class="page">
    <p>Data is in Collections</p>
    <p>Code is static</p>
    <p>Data is dynamic</p>
    <p>almost always generally</p>
    <p>But data never travels alone. rarely</p>
    <p>It comes in collections.</p>
  </div>
  <div class="page">
    <p>Data is in Collections</p>
    <p>Code is static</p>
    <p>Data is dynamic</p>
    <p>almost always generally</p>
    <p>But data never travels alone. rarely</p>
    <p>It comes in collections. We rarely use a whole collection at once.</p>
  </div>
  <div class="page">
    <p>Collections</p>
  </div>
  <div class="page">
    <p>Collections</p>
    <p>What is a work unit?</p>
  </div>
  <div class="page">
    <p>Collections</p>
    <p>What is a work unit?</p>
    <p>The smallest set of subcollections needed for processing in making forward progress in the</p>
    <p>application.</p>
  </div>
  <div class="page">
    <p>Experience</p>
    <p>Realization</p>
    <p>Mental Models</p>
    <p>Argument</p>
  </div>
  <div class="page">
    <p>Experience</p>
    <p>Realization</p>
    <p>Mental Models</p>
    <p>Argument</p>
  </div>
  <div class="page">
    <p>Realization Problems</p>
  </div>
  <div class="page">
    <p>Realization Problems</p>
    <p>How do we efficiently deal with sub-collections?</p>
  </div>
  <div class="page">
    <p>Realization Problems</p>
    <p>How do we efficiently deal with sub-collections?</p>
    <p>How do we structure programs?</p>
  </div>
  <div class="page">
    <p>Realization Problems</p>
    <p>How do we efficiently deal with sub-collections?</p>
    <p>How do we structure programs?</p>
    <p>How do we derive schedules?</p>
  </div>
  <div class="page">
    <p>Synchronization via Scheduling (SvS)</p>
    <p>Basic Idea:</p>
    <p>Basic Method:</p>
  </div>
  <div class="page">
    <p>Synchronization via Scheduling (SvS)</p>
    <p>Basic Idea: Know what data a task is going to access before it executes and</p>
    <p>use this information to make scheduling decisions.</p>
    <p>Basic Method:</p>
  </div>
  <div class="page">
    <p>Synchronization via Scheduling (SvS)</p>
    <p>Basic Idea: Know what data a task is going to access before it executes and</p>
    <p>use this information to make scheduling decisions.</p>
    <p>Basic Method: Derive a compact representation (a single bit string) of the space</p>
    <p>of potential access for quick comparisons during scheduling.</p>
  </div>
  <div class="page">
    <p>Software Patterns (IMR)</p>
  </div>
  <div class="page">
    <p>Software Patterns (IMR)</p>
    <p>Isolate</p>
  </div>
  <div class="page">
    <p>Software Patterns (IMR)</p>
    <p>Isolate</p>
    <p>Modify</p>
  </div>
  <div class="page">
    <p>Software Patterns (IMR)</p>
    <p>Isolate</p>
    <p>Modify</p>
    <p>Release</p>
  </div>
  <div class="page">
    <p>Software Patterns (IMR)</p>
    <p>Isolate</p>
    <p>Modify</p>
    <p>Release</p>
  </div>
  <div class="page">
    <p>Software Patterns (IMR)</p>
    <p>Isolate</p>
    <p>Modify</p>
    <p>Release</p>
    <p>Stencil Patterns</p>
  </div>
  <div class="page">
    <p>Software Patterns (IMR)</p>
    <p>Isolate</p>
    <p>Modify</p>
    <p>Release</p>
    <p>Stencil Patterns</p>
    <p>List modification</p>
  </div>
  <div class="page">
    <p>Software Patterns (IMR)</p>
    <p>Isolate</p>
    <p>Modify</p>
    <p>Release</p>
    <p>Stencil Patterns</p>
    <p>List modification</p>
    <p>Tree Modification</p>
  </div>
  <div class="page">
    <p>Software Patterns (IMR)</p>
    <p>Isolate</p>
    <p>Modify</p>
    <p>Release</p>
    <p>Stencil Patterns</p>
    <p>List modification</p>
    <p>Tree Modification</p>
    <p>Graph Modification</p>
  </div>
  <div class="page">
    <p>Software Patterns (IMR)</p>
    <p>Isolate</p>
    <p>Modify</p>
    <p>Release</p>
    <p>Stencil Patterns</p>
    <p>List modification</p>
    <p>Tree Modification</p>
    <p>Graph Modification</p>
    <p>... more</p>
  </div>
  <div class="page">
    <p>Programming Support</p>
  </div>
  <div class="page">
    <p>Programming Support</p>
    <p>First class collections</p>
  </div>
  <div class="page">
    <p>Programming Support</p>
    <p>Actor Model</p>
    <p>First class collections</p>
  </div>
  <div class="page">
    <p>Programming Support</p>
    <p>Actor Model + Messages</p>
    <p>First class collections</p>
  </div>
  <div class="page">
    <p>Programming Support</p>
    <p>Actor Model + Messages + Queries</p>
    <p>First class collections</p>
  </div>
  <div class="page">
    <p>Experience</p>
    <p>Realization</p>
    <p>Mental Models</p>
    <p>Argument</p>
  </div>
  <div class="page">
    <p>Experience</p>
    <p>Realization</p>
    <p>Mental Models</p>
    <p>Argument</p>
  </div>
  <div class="page">
    <p>Experiments: spatialDictionary</p>
  </div>
  <div class="page">
    <p>Experiments: spatialDictionary</p>
  </div>
  <div class="page">
    <p>Experiments: spatialDictionary</p>
    <p>Global Lock Progressive Lock SvS SvS Cached</p>
  </div>
  <div class="page">
    <p>Experiments: spatialDictionary</p>
  </div>
  <div class="page">
    <p>Experiments: spatialDictionary</p>
  </div>
  <div class="page">
    <p>Experiments: spatialDictionary</p>
  </div>
  <div class="page">
    <p>Experiments: spatialDictionary</p>
  </div>
  <div class="page">
    <p>Experiments: spatialDictionary</p>
  </div>
  <div class="page">
    <p>Future Work</p>
  </div>
  <div class="page">
    <p>Future Work</p>
    <p>Optimized scheduling</p>
  </div>
  <div class="page">
    <p>Future Work</p>
    <p>Optimized scheduling</p>
    <p>Robust query support</p>
  </div>
  <div class="page">
    <p>Questions</p>
  </div>
  <div class="page">
    <p>Questions</p>
    <p>Thanks to</p>
    <p>Anonymous reviewers</p>
    <p>Gaslamp Games</p>
  </div>
  <div class="page">
    <p>SvS - Signatures</p>
  </div>
  <div class="page">
    <p>SvS - Signatures</p>
  </div>
  <div class="page">
    <p>SvS - Signatures</p>
  </div>
  <div class="page">
    <p>SvS - Signatures</p>
  </div>
  <div class="page">
    <p>SvS - Signatures</p>
    <p>composable</p>
  </div>
  <div class="page">
    <p>SvS - Signatures</p>
    <p>composable</p>
    <p>quick to compute and compare</p>
  </div>
  <div class="page">
    <p>SvS - Signatures</p>
    <p>composable</p>
    <p>quick to compute and compare</p>
    <p>only false positives for intersection</p>
  </div>
  <div class="page">
    <p>SvS - Signatures</p>
    <p>composable</p>
    <p>quick to compute and compare</p>
    <p>only false positives for intersection</p>
    <p>easy to make arbitrarily precise</p>
  </div>
  <div class="page">
    <p>SvS - Signatures</p>
    <p>composable</p>
    <p>quick to compute and compare</p>
    <p>separate evaluation of data items from synchronization</p>
    <p>only false positives for intersection</p>
    <p>easy to make arbitrarily precise</p>
  </div>
  <div class="page">
    <p>Preliminary Stuff</p>
  </div>
  <div class="page">
    <p>Preliminary Stuff</p>
    <p>inXspan( int x, int s ) : Cell I [ | I.x - x | &lt;= s ] inYspan( int y, int s ) : Cell I [ | I.y - y | &lt;= s ]</p>
    <p>inRadius( ivec2 C, int r ) : Cell I [ inXspan&lt;C&gt; ( C.x, r ) and inYspan&lt;C&gt;( C.y, r ) ]</p>
    <p>Super preliminary warning!</p>
  </div>
</Presentation>
