<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Metrics for runtime detection of allocators in binaries</p>
    <p>Franck de Gor - Roland Groz - Laurent Mounier</p>
    <p>August 14th, 2017</p>
    <p>Grenoble, FRANCE</p>
  </div>
  <div class="page">
    <p>BINARY</p>
    <p>HEAP</p>
    <p>allocation read/write deallocation</p>
    <p>SAFELY/SECURELY?</p>
  </div>
  <div class="page">
    <p>SAFELY/SECURELY?</p>
    <p>[memory leaks]</p>
    <p>&gt; every allocated block is freed</p>
    <p>[heap overflows]</p>
    <p>&gt; access within the bounds of allocated blocks</p>
    <p>[use-after-frees]</p>
    <p>&gt; no access after a block is freed</p>
  </div>
  <div class="page">
    <p>WHO ALLOCATES MEMORY?</p>
  </div>
  <div class="page">
    <p>STEP #1</p>
    <p>retrieve ALLOC and FREE</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 20176</p>
    <p>STEP #1 - retrieve ALLOC/FREE</p>
    <p>overview onlinerequirements offline</p>
    <p>binary ALLOC FREE</p>
    <p>ONLINE OFFLINE</p>
    <p>one instrumented execution</p>
    <p>function-grained analysis</p>
    <p>collect data</p>
    <p>heuristic-based approach</p>
    <p>retrieve ALLOC</p>
    <p>from alloc, retrieve FREE</p>
    <p>scat</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 20177</p>
    <p>STEP #1 - retrieve ALLOC/FREE</p>
    <p>overview onlinerequirements offline</p>
    <p>binary ALLOC FREE</p>
    <p>ONLINE OFFLINE</p>
    <p>one instrumented execution</p>
    <p>function-grained analysis</p>
    <p>collect data</p>
    <p>heuristic-based approach</p>
    <p>retrieve ALLOC</p>
    <p>from ALLOC, retrieve FREE</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 20178</p>
    <p>STEP #1 - retrieve ALLOC/FREE</p>
    <p>overview onlinerequirements offline</p>
    <p>REQUIREMENT PROVIDER</p>
    <p>function instrumentation PIN</p>
    <p>function parameters ABI</p>
    <p>function undertyped prototypes scat</p>
    <p>overview</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 20179</p>
    <p>STEP #1 - retrieve ALLOC/FREE</p>
    <p>overview onlinerequirements offlineoverview</p>
    <p>ADDR malloc(NUM);</p>
    <p>NUM free(ADDR);</p>
    <p>NUM add(NUM, NUM);</p>
    <p>NUM strnlen(ADDR, NUM);</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 201710</p>
    <p>STEP #1 - retrieve ALLOC/FREE</p>
    <p>overview onlinerequirements offline</p>
    <p>Instrument each call and return, and log:</p>
    <p>[*] concrete value of each parameter [*] identifier of the function being called or returning</p>
    <p>[*] identifier of the function that called fid</p>
    <p>overview online</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 201711</p>
    <p>STEP #1 - retrieve ALLOC/FREE</p>
    <p>overview onlinerequirements offlineoverview online</p>
    <p>UNDERTYPED PROTOTYPE INSTRUMENTATION? ADDR malloc(NUM); yes NUM free(ADDR); yes NUM add(NUM, NUM); no NUM strnlen(ADDR, NUM); yes</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 201712</p>
    <p>STEP #1 - retrieve ALLOC/FREE</p>
    <p>overview onlinerequirements offline</p>
    <p>[ALLOC]</p>
    <p>ALLOC produces a high number of new addresses</p>
    <p>[FREE]</p>
    <p>FREE takes, as a parameter, a high number of values that were output by a previous call to ALLOC</p>
    <p>overview offline</p>
    <p>MAIN HEURISTICS</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 201713</p>
    <p>STEP #1 - retrieve ALLOC/FREE</p>
    <p>overview onlinerequirements offline</p>
    <p>ALLOC</p>
    <p>[production] ALLOC produces a high number of new addresses</p>
    <p>[diversity] ALLOC is called by multiple functions</p>
    <p>FREE</p>
    <p>FREE takes, as a parameter, a high number of values that were output by a previous call to ALLOC</p>
    <p>[last accessor] FREE is the last function to access an allocated block</p>
    <p>[diversity] FREE is called by multiple functions</p>
    <p>offlineoverview</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 201714</p>
    <p>STEP #1 - retrieve ALLOC/FREE</p>
    <p>overview onlinerequirements offline</p>
    <p>HEURISTICSCOLLECTED DATA</p>
    <p>ALLOC_0, (FREE_00, FREE_01, ) ALLOC_1, (FREE_10, FREE_11, )</p>
    <p>ALLOC_N, (FREE_N0, FREE_N1, )</p>
    <p>+</p>
  </div>
  <div class="page">
    <p>STEP #2</p>
    <p>evaluate consistency</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 2017</p>
    <p>error rateoverview</p>
    <p>STEP #2 - evaluate consistency</p>
    <p>properties</p>
    <p>PROPERTIES(ALLOC, FREE)</p>
    <p>CONSISTENCY RATE (1 - ERROR RATE)</p>
    <p>+</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 2017</p>
    <p>error rateoverview</p>
    <p>STEP #2 - evaluate consistency</p>
    <p>[ALLOC]</p>
    <p>ALLOC should not output an allocated address</p>
    <p>[FREE]</p>
    <p>FREE should only occur on allocated addresses</p>
    <p>properties</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 2017</p>
    <p>error rateoverview</p>
    <p>STEP #2 - evaluate consistency</p>
    <p>ERRORS = ERROR(ALLOC) + ERROR(FREE)</p>
    <p>ERROR RATE = ERRORS / (CALLS(ALLOC) + CALLS(FREE))</p>
    <p>properties</p>
    <p>ERROR RATE &lt; 0.05 =&gt; likely an allocator</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 2017</p>
    <p>error rateoverview</p>
    <p>STEP #2 - evaluate consistency</p>
    <p>reallocation</p>
    <p>misimplementation (missing calls and returns)</p>
    <p>properties</p>
  </div>
  <div class="page">
    <p>PRELIMINARY RESULTS Its time to know if it really works</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 201721</p>
    <p>Preliminary results</p>
    <p>overview onlinerequirements offlineretrieve ALLOC/FREE consistency rate</p>
    <p>ALLOCATOR EXPERIMENTAL STATE</p>
    <p>standard libc (malloc, free) reasonnable</p>
    <p>LD_PRELOAD custom reasonnable</p>
    <p>embedded custom early stage</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 201722</p>
    <p>Preliminary results</p>
    <p>overview onlinerequirements offlineretrieve ALLOC/FREE consistency rate</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 201723</p>
    <p>Preliminary results</p>
    <p>overview onlinerequirements offlineretrieve ALLOC/FREE consistency rate</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 201724</p>
    <p>Preliminary results</p>
    <p>overview onlinerequirements offlineconsistency rate</p>
    <p>PROGRAM ALLOC/FREE jasper ok/ok</p>
    <p>openssl ok/ok</p>
    <p>jansson ok/ok</p>
    <p>git n.c./n.c.</p>
    <p>opusenc ok/ok</p>
    <p>retrieve ALLOC/FREE consistency rate</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 201725</p>
    <p>Preliminary results</p>
    <p>overview onlinerequirements offlineretrieve ALLOC/FREE consistency rate</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 201726</p>
    <p>Preliminary results</p>
    <p>overview onlinerequirements offlineconsistency rateconsistency rateretrieve ALLOC/FREE</p>
  </div>
  <div class="page">
    <p>LAST WORDS one or two more things</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 201728</p>
    <p>Last words</p>
    <p>[detection]</p>
    <p>&gt; a lightweight heuristic-based passive approach to</p>
    <p>retrieve ALLOC/FREE?</p>
    <p>[metrics]</p>
    <p>&gt; a consistency criterion to evaluate a potential</p>
    <p>allocator</p>
    <p>[open-source]</p>
    <p>&gt; both code and experimental sets are available on GH</p>
    <p>future workcontributions limitations</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 201729</p>
    <p>Last words</p>
    <p>[benchmark]</p>
    <p>&gt; more experiments are required</p>
    <p>PB: oracle/ground truth?</p>
    <p>[hypothesis]</p>
    <p>&gt; the main one: asumption on ALLOC &amp; FREE prototypes</p>
    <p>[multiple allocators]</p>
    <p>&gt; retrieve all/retrieve a hierarchy</p>
    <p>future workcontributions limitations</p>
  </div>
  <div class="page">
    <p>https://github.com/Frky/scat (08/14/17) CSET 201730</p>
    <p>Last words</p>
    <p>[validation]</p>
    <p>&gt; more experiments, especially custom allocators</p>
    <p>[large set of binaries]</p>
    <p>&gt; automated analysis of a large set of binaries</p>
    <p>[use cases]</p>
    <p>&gt; memory use/vulnerability detections/etc.</p>
    <p>future workcontributions limitations</p>
  </div>
  <div class="page">
    <p>Metrics for runtime detection of allocators in binaries</p>
    <p>Franck de Gor - Roland Groz - Laurent Mounier</p>
    <p>August 14th, 2017</p>
    <p>Grenoble, FRANCE</p>
  </div>
</Presentation>
