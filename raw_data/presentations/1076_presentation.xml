<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>AIQL: Enabling Efficient Attack Investigation from System Monitoring Data</p>
    <p>Peng Gao1, Xusheng Xiao2, Zhichun Li3, Kangkook Jee3, Fengyuan Xu4, Sanjeev R. Kulkarni1, Prateek Mittal1</p>
  </div>
  <div class="page">
    <p>Introduction</p>
  </div>
  <div class="page">
    <p>The Equifax Data Breach</p>
  </div>
  <div class="page">
    <p>Impact of Advanced Persistent Threat (APT) Attack</p>
    <p>Advanced: sophisticated techniques, e.g., exploiting multiple vulnerabilities  Persistent: adversaries are continuously monitoring and stealing data from the target  Threat: strong economical or political motives</p>
  </div>
  <div class="page">
    <p>Advanced Persistent Threat (APT)</p>
    <p>Com prom ise</p>
    <p>Infection</p>
    <p>P rivilege Escalation</p>
    <p>O btain database Credential</p>
    <p>D ata Exfiltration</p>
    <p>Gateway InternalMachine</p>
    <p>Domain ControllerDatabase</p>
  </div>
  <div class="page">
    <p>Challenges and Opportunities Sophisticated and stealthy</p>
    <p>Multiple steps  Individual step not</p>
    <p>suspicious enough  Stealthy for a certain time</p>
    <p>Com prom ise</p>
    <p>Infection</p>
    <p>P rivilege Escalation</p>
    <p>O btain database CredentialD ata Exfiltration</p>
  </div>
  <div class="page">
    <p>Ubiquitous System Monitoring  Recording system behaviors from kernel</p>
    <p>Unified structure of logs: not bound to applications</p>
    <p>System activities w.r.t. system resources System resources: processes, files, network connections System activities (system events): &lt;subject, operation, object&gt;,</p>
    <p>e.g., proc p1 read file f1</p>
    <p>Enabling attack investigation via querying the collected data Interactive query: recovering attack steps in multiple hosts</p>
    <p>Kernel</p>
  </div>
  <div class="page">
    <p>Multi-step attack: multiple system activities and their relationships  Dependency tracking: chaining constraints among system activities  Abnormal system behavior: sliding windows and statistical aggregation methods</p>
    <p>Challenge 1: Attack Behavior Specification</p>
  </div>
  <div class="page">
    <p>Collect and store system monitoring data for hosts in an organization (~50 GB for 100 hosts per day)  Data storage optimization</p>
    <p>Query data in a central server for attack investigation  Query execution optimization</p>
    <p>Challenge 2: Timely Big Data Security Analysis</p>
  </div>
  <div class="page">
    <p>AIQL System</p>
    <p>Novel query system for attack investigation  Built on top of existing mature tools</p>
    <p>System-level monitoring tools: auditd, ETW, DTrace  Relational databases: PostgreSQL, Greenplum</p>
    <p>Implementation: ~50,000 lines of Java code</p>
    <p>System Components &lt;- System Optimizations Data Collection and Storage &lt;- Data Model and Storage AIQL Language Parser &lt;- Domain-Specific Query Language Query Execution Engine &lt;- Relationship-based Scheduling</p>
  </div>
  <div class="page">
    <p>Data Collection and Storage</p>
  </div>
  <div class="page">
    <p>Data Collection  Data collection agent: system calls as a sequence of system events</p>
    <p>Windows: Event Tracing for Windows (ETW) Linux: Audit Framework (auditd) Mac: DTrace</p>
    <p>Collect critical attributes for security analysis</p>
  </div>
  <div class="page">
    <p>Data Storage  Store data in relational databases powered by PostgreSQL</p>
    <p>Challenges in handling high ingestion rate</p>
    <p>Data storage optimizations Data deduplication and in-memory indexes</p>
    <p>Entity tables: file, process, network connection  Event tables: file event, process event, network event</p>
    <p>Batch commit Time and space partitioning Hypertable</p>
  </div>
  <div class="page">
    <p>AIQL (Attack Investigation Query Language)</p>
  </div>
  <div class="page">
    <p>Multievent AIQL Query</p>
    <p>Multiple system events involved in the attack  Temporal order of events: e1-&gt;e2-&gt;e3-&gt;e4</p>
  </div>
  <div class="page">
    <p>Multievent AIQL Query</p>
    <p>Global constraints: e.g., agent ID, time window</p>
    <p>Event pattern: &lt;subject, operation, object&gt;</p>
    <p>Temporal relationship: e.g., enforce the event order</p>
    <p>Attribute relationship: e.g., two events linked by the same entity</p>
    <p>Syntax shortcuts: e.g., context-aware attribute inference</p>
    <p>p1.exe_name, p2.exe_name, p3.exe_name, f1.name, p4.exe_name, i1.dst_ip</p>
    <p>exe_name = %cmd.exe</p>
    <p>name = %backup1.dmp</p>
  </div>
  <div class="page">
    <p>Dependency AIQL Query</p>
    <p>Chain constraints among events  Dependency tracking for attack causality analysis</p>
  </div>
  <div class="page">
    <p>Dependency AIQL Query</p>
    <p>Dependency tracking direction: forward/backward, -&gt;/&lt; Cross host dependency tracking</p>
  </div>
  <div class="page">
    <p>Anomaly AIQL Query</p>
    <p>Frequency-based anomaly models</p>
  </div>
  <div class="page">
    <p>Anomaly AIQL Query</p>
    <p>Sliding windows  Access to history states  Frequency-based anomaly models: e.g., SMA</p>
  </div>
  <div class="page">
    <p>AIQL Query Execution Engine</p>
  </div>
  <div class="page">
    <p>Execution of Multievent Query</p>
    <p>Synthesize a SQL data query for every event pattern  Schedule the data queries using domain-specific optimizations</p>
  </div>
  <div class="page">
    <p>Data Query Scheduler  Leverage event relationships for optimizing search strategies</p>
    <p>Prioritize event search based on estimated pruning power Prune search space of related events</p>
    <p>Leverage domain-specific characteristics of system monitoring data for parallel search Time window partition</p>
  </div>
  <div class="page">
    <p>Time Window Partition</p>
    <p>Uniform time window partition # of sub queries depending on I/O capacity (concurrent read)</p>
    <p>Other potential partition: uniform workload</p>
    <p>Query time window: one day 4 sub queries</p>
    <p>Sub-query1 Sub-query2 Sub-query3 Sub-query4</p>
  </div>
  <div class="page">
    <p>Case Study and Evaluation</p>
  </div>
  <div class="page">
    <p>Case Study: APT Investigation</p>
    <p>c1 Initial Compromise: Attacker sends a crafted e-mail to the victim, which contains an Excel file with a malicious macro embedded</p>
    <p>c2 Malware Infection: Victim opens the file and runs the macro, which downloads and executes a malware to open a backdoor</p>
    <p>c3 Privilege Escalation: Attacker runs the database cracking tool to obtain database credentials</p>
    <p>c4 Penetration into Database Server: Attacker drops another malware to open another backdoor  c5 Data Exfiltration: Attacker dumps the database content and sends the dump back to his host</p>
  </div>
  <div class="page">
    <p>Investigation of Step c5  Deploy anomaly detectors on the database server to detect large amount of data transfer Identify a suspicious IP XXX.129</p>
    <p>Construct an anomaly AIQL query to find the processes that access XXX.129 sbblv.exe (p) writes to XXX.129</p>
  </div>
  <div class="page">
    <p>Investigation of Step c5  Find the files accessed by sbblv.exe</p>
    <p>sbblv.exe reads from backup1.dmp (f1)</p>
    <p>Creation processes of backup1.dmp sqlservr.exe (p1) writes to backup1.dmp</p>
  </div>
  <div class="page">
    <p>Investigation of Step c5  Further verification: cmd.exe starts osql.exe (OSQL utility)  Complete AIQL query for c5 (data exfiltration)</p>
  </div>
  <div class="page">
    <p>End-to-End Efficiency for Case Study</p>
    <p>27 queries, touching 119 GB of data (422 million system events)</p>
  </div>
  <div class="page">
    <p>Conciseness Evaluation  19 queries on four major types of attack behaviors, touching 738 GB of data (2.1</p>
    <p>billion events)  a1-a5: Multi-step attack behaviors  d1-d3: Dependency tracking behaviors  v1-v5: Real-world malware behaviors (from Virussign)  s1-s6: Abnormal system behaviors</p>
    <p>Other languages vs. AIQL: 2.4x more constraints, 3.1x more words, and 4.7x more characters</p>
  </div>
  <div class="page">
    <p>Scheduling Efficiency in Our Optimized Storage  Efficiency in PostgreSQL</p>
    <p>40x speedup</p>
    <p>Efficiency in Greenplum 16x speedup</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Conclusion  AIQL, a system for efficient attack investigation from system monitoring data</p>
    <p>Expressive and concise domain-specific query language Efficient query execution based on domain-specific data characteristics</p>
    <p>All queries, the investigation details, and a system demo video are available in project website https://sites.google.com/site/aiqlsystem/ https://youtu.be/5y3Tk6Y6YkQ</p>
    <p>Q &amp; A Thank you!</p>
  </div>
</Presentation>
