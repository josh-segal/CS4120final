<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Omer Shwartz (omershv@post.bgu.ac.il) Amir Cohen (amir3@post.bgu.ac.il) Dr. Asaf Shabtai (shabtaia@bgu.ac.il) Dr. Yossi Oren (yos@bgu.ac.il)</p>
    <p>Ben-Gurion University of the Negev, Israel</p>
  </div>
  <div class="page">
    <p>Overview  Motivation  Attack surface  Vulnerability discovery and demo  Discussion, conclusions and</p>
    <p>questions</p>
  </div>
  <div class="page">
    <p>Motivation</p>
  </div>
  <div class="page">
    <p>Motivation  Smartphone components often break.  Many replacements are counterfeit.  Street corner phone repair shops</p>
    <p>available everywhere.</p>
    <p>Image from: Wikimedia 4</p>
  </div>
  <div class="page">
    <p>Research Question</p>
    <p>What if a smartphone peripheral was malicious?</p>
    <p>Could it attack the stock driver?</p>
    <p>Would it affect the users privacy?</p>
  </div>
  <div class="page">
    <p>Attack model</p>
  </div>
  <div class="page">
    <p>Attack surface survey</p>
    <p>Shwartz, O., Shitrit, G., Shabtai, A., Oren, Y. (2017) From smashed screens to smashed stacks: Attacking mobile phones using malicious aftermarket parts, Workshop on Security for Embedded and Mobile Systems (SEMS 2017).</p>
  </div>
  <div class="page">
    <p>Attack surface survey</p>
    <p>We started by doing a semi-automated analysis of the source code of 26 android smartphones.</p>
    <p>Drivers were catalogued to vendor and version.</p>
    <p>89 different driver versions were evaluated.</p>
  </div>
  <div class="page">
    <p>Peripheral diversity</p>
  </div>
  <div class="page">
    <p>Attack surface survey results</p>
    <p>Only three drivers were used in two phone models.</p>
    <p>Only two drivers were used on three or more phone models.</p>
    <p>Most of the drivers were unique to their respective device.</p>
  </div>
  <div class="page">
    <p>Attack surface survey results</p>
    <p>Percentage of Driver related android CVEs is on the rise.</p>
  </div>
  <div class="page">
    <p>Attack surface survey insights</p>
    <p>A codebase that diverse is ought to contain bugs and vulnerabilities.</p>
    <p>Bugs are easy to find (more ahead)</p>
  </div>
  <div class="page">
    <p>Bug Hunting  We started looking for device driver bugs that may be exploited by the component.</p>
    <p>In less than two hours (!), we found exploitable buffer and heap overflows in a touchscreen module.</p>
    <p>Further analysis revealed dozens more potential issues in multiple drivers.</p>
    <p>The issues found were reported, acknowledged (CVE-2017-0650 ) and patched by Google.</p>
  </div>
  <div class="page">
    <p>Actual Exploitation</p>
  </div>
  <div class="page">
    <p>Demo</p>
  </div>
  <div class="page">
    <p>Workbench</p>
  </div>
  <div class="page">
    <p>CVE-2017-0650</p>
  </div>
  <div class="page">
    <p>CVE-2017-0650</p>
    <p>Get data from device... ....</p>
  </div>
  <div class="page">
    <p>ARM64 ROP Attack</p>
  </div>
  <div class="page">
    <p>ARM64 ROP Attack</p>
  </div>
  <div class="page">
    <p>Vulnerabilities  Vulnerabilities such as CVE-2017-0650 are easy to find!</p>
    <p>Another vulnerability was found in a different touchscreen driver by another manufacturer. This vulnerability was proved in a POC level. (Pending Responsible Disclosure)</p>
  </div>
  <div class="page">
    <p>Touch Logging &amp; Touch Injection</p>
    <p>In addition to exploiting the kernel, the touchscreen can abuse its known capabilities.</p>
    <p>The touchscreen or a component on the touchscreen bus can record user touches.</p>
    <p>Injection of touch events can also be done without any user interaction.</p>
  </div>
  <div class="page">
    <p>Proofs of Concept</p>
    <p>Malicious Software Installation https://youtu.be/83VMVrcEOCM</p>
    <p>Take Picture and Send Via Email https://youtu.be/WS4NChPjaaY</p>
    <p>Replace URL with Phishing URL https://youtu.be/XZujd42eYek</p>
    <p>Log and Exfiltrate Screen Unlock Pattern https://youtu.be/fY58zoadqMA</p>
    <p>Complete Phone Compromise https://youtu.be/sDfD5fJfiNc</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Discussion  In smartphones, device drivers are very diverse, leading to many potential vulnerabilities.</p>
    <p>The device drivers are trusted by the kernel, and the peripherals are trusted by the drivers.</p>
    <p>We showed how a peripheral may exploit that trust.</p>
    <p>Detection of attacks may be impossible with current tools and design.</p>
  </div>
  <div class="page">
    <p>Conclusions  Attacks of this sort are practical and may be highly effective.</p>
    <p>Consumers have no tools to help them detect such attacks.</p>
    <p>Countermeasures, such as a physical interface firewall may prove effective.</p>
    <p>There is much more left to explore in the field of malicious hardware components.</p>
  </div>
  <div class="page">
    <p>Omer Shwartz (omershv@post.bgu.ac.il)</p>
    <p>Amir Cohen (amir3@post.bgu.ac.il)</p>
    <p>Dr. Asaf Shabtai (shabtaia@bgu.ac.il)</p>
    <p>Dr. Yossi Oren (yos@bgu.ac.il)</p>
    <p>Thank you</p>
  </div>
</Presentation>
