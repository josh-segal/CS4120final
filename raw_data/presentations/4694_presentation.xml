<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Close Pair Queries in Moving Object Databases</p>
    <p>Panfeng Zhou, Donghui Zhang, Betty Salzberg, Gene</p>
    <p>Cooperman</p>
    <p>Northeastern University</p>
    <p>George Kollios</p>
    <p>Boston University</p>
  </div>
  <div class="page">
    <p>Talk Outline  Problem description  Motivation  Algorithm</p>
    <p>Overview structure  Retrieval component  Identification component</p>
    <p>Experimental results  Conclusions</p>
  </div>
  <div class="page">
    <p>Problem definition</p>
    <p>Example: Which airplanes were closer to each other than</p>
    <p>Formal definition: Given a trajectory dataset D, a spatial range R,</p>
    <p>a time interval I and a threshold , the ClosePair Query finds all pairs of object IDs (o1, o2) such that at some time t  I, o1 and o2 are both located inside R and d(o1, o2) &lt; .</p>
  </div>
  <div class="page">
    <p>Talk Outline  Problem description  Motivation  Algorithm</p>
    <p>Overview structure  Retrieval component  Identification component</p>
    <p>Experimental results  Conclusions</p>
  </div>
  <div class="page">
    <p>Motivations</p>
    <p>Close pair query can be used to find associations and correlations between objects (e.g., S. Shekhar and Y. Huang, Discovering Spatial Co-location Patterns: A Summary of Results, SSTD 2001).</p>
    <p>Close pair query itself can be used in many real applications.</p>
  </div>
  <div class="page">
    <p>Motivations (cont)</p>
    <p>INCIDENTS</p>
    <p>ACCIDENTS</p>
    <p>UNREPORTED OCCURRENCES</p>
    <p>Heinrich Pyramid</p>
  </div>
  <div class="page">
    <p>Talk Outline  Problem description  Motivation  Algorithm</p>
    <p>Overview structure  Retrieval component  Identification component</p>
    <p>Experimental results  Conclusions</p>
  </div>
  <div class="page">
    <p>Algorithm</p>
    <p>Overview Structure  Retrieval component  Identification component</p>
  </div>
  <div class="page">
    <p>Overview structure of algorithm</p>
    <p>Retrieval Component (MTSB-tree)</p>
    <p>Identification Component</p>
    <p>(Time-X Plane Sweep)</p>
    <p>Trajectories in increasing time order Close pairs</p>
  </div>
  <div class="page">
    <p>Talk Outline  Problem description  Motivation  Algorithm</p>
    <p>Overview structure  Retrieval component  Identification component</p>
    <p>Experimental results  Conclusions</p>
  </div>
  <div class="page">
    <p>Retrieval component</p>
    <p>Overview of the MTSB-tree  Challenges in the MTSB-tree  How to avoid sorting  How to avoid duplication</p>
  </div>
  <div class="page">
    <p>Overview of the MTSB-tree</p>
    <p>TSB-tree 1 TSB-tree 2 TSB-tree 3</p>
    <p>TSB-tree 4 TSB-tree 5 TSB-tree 6</p>
    <p>TSB-tree 7 TSB-tree 8 TSB-tree 9</p>
    <p>Note: 1. Trajectory covers</p>
    <p>multi- cells will be saved in all those cells.</p>
  </div>
  <div class="page">
    <p>Challenges in the MTSBtree</p>
    <p>Output the retrieval results in time increasing order.</p>
    <p>Avoid loading the same trajectory multiple times.</p>
  </div>
  <div class="page">
    <p>How to avoid sorting - 1</p>
    <p>T1, L11 T1, L12 T5, L13 T7, L14</p>
    <p>Page 1 Page 2</p>
    <p>T2, L21 T4, L22 T6, L23 T8, L24</p>
    <p>Page 1 Page 2</p>
    <p>Cell 1</p>
    <p>Cell 2</p>
    <p>Priority Queue</p>
    <p>Cell 1</p>
    <p>Cell 2</p>
  </div>
  <div class="page">
    <p>How to avoid sorting - 2</p>
    <p>T1, L11 T1, L12 T5, L13 T7, L14</p>
    <p>Page 1 Page 2</p>
    <p>T2, L21 T4, L22 T6, L23 T8, L24</p>
    <p>Page 1 Page 2</p>
    <p>Cell 1</p>
    <p>Cell 2</p>
    <p>Priority Queue</p>
    <p>Cell 1</p>
    <p>Cell 2</p>
    <p>T1, L11</p>
  </div>
  <div class="page">
    <p>How to avoid sorting - 3</p>
    <p>T1, L11 T1, L12 T5, L13 T7, L14</p>
    <p>Page 1 Page 2</p>
    <p>T2, L21 T4, L22 T6, L23 T8, L24</p>
    <p>Page 1 Page 2</p>
    <p>Cell 1</p>
    <p>Cell 2</p>
    <p>Priority Queue</p>
    <p>Cell 1</p>
    <p>Cell 2</p>
    <p>T1, L11</p>
    <p>T2, L21</p>
  </div>
  <div class="page">
    <p>How to avoid sorting - 4</p>
    <p>T1, L11 T1, L12 T5, L13 T7, L14</p>
    <p>Page 1 Page 2</p>
    <p>T2, L21 T4, L22 T6, L23 T8, L24</p>
    <p>Page 1 Page 2</p>
    <p>Cell 1</p>
    <p>Cell 2</p>
    <p>Priority Queue</p>
    <p>Cell 1</p>
    <p>Cell 2</p>
    <p>T1, L12</p>
    <p>T2, L21</p>
  </div>
  <div class="page">
    <p>How to avoid sorting - 5</p>
    <p>T1, L11 T1, L12 T5, L13 T7, L14</p>
    <p>Page 1 Page 2</p>
    <p>T2, L21 T4, L22 T6, L23 T8, L24</p>
    <p>Page 1 Page 2</p>
    <p>Cell 1</p>
    <p>Cell 2</p>
    <p>Priority Queue</p>
    <p>Cell 1</p>
    <p>Cell 2 T5, L13</p>
    <p>T2, L21</p>
  </div>
  <div class="page">
    <p>How to avoid sorting - 6</p>
    <p>T1, L11 T1, L12 T5, L13 T7, L14</p>
    <p>Page 1 Page 2</p>
    <p>T2, L21 T4, L22 T6, L23 T8, L24</p>
    <p>Page 1 Page 2</p>
    <p>Cell 1</p>
    <p>Cell 2</p>
    <p>Priority Queue</p>
    <p>Cell 1</p>
    <p>Cell 2</p>
    <p>T4, L22</p>
    <p>T5, L13</p>
  </div>
  <div class="page">
    <p>How to avoid duplication loading from different cells</p>
    <p>Time</p>
    <p>X</p>
    <p>Cell 2</p>
    <p>Cell 1</p>
    <p>Query time interval</p>
    <p>S p a ti</p>
    <p>a l q u e ry</p>
    <p>r a n g e</p>
    <p>QET</p>
  </div>
  <div class="page">
    <p>How to avoid duplication loading from the same cell</p>
    <p>Time</p>
    <p>X</p>
    <p>Query time interval</p>
    <p>S p a ti</p>
    <p>a l q u e ry</p>
    <p>r a n g e</p>
    <p>QET</p>
    <p>Page 1 Page 2</p>
  </div>
  <div class="page">
    <p>Talk Outline  Problem description  Motivation  Algorithm</p>
    <p>Overview structure  Retrieval component  Identification component</p>
    <p>Experimental results  Conclusions</p>
  </div>
  <div class="page">
    <p>Identification component</p>
    <p>Motivation for TIME-X sweep algorithm</p>
    <p>Observations  Algorithm</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Time</p>
    <p>X</p>
    <p>Time</p>
    <p>X</p>
  </div>
  <div class="page">
    <p>Observations</p>
    <p>If two trajectory segments do not intersect, they are closest at the start/end time of one of them</p>
    <p>If two trajectory segments do not intersect, their relative positions will never change</p>
    <p>If two trajectory segments distance at X-dimension is bigger than , their distance at X-Y plane is also bigger than</p>
    <p>Only need to detect close pairs at start times, end times and intersections</p>
    <p>Store trajectories relative positions in Xdimension at their start times and update the order at intersections, we can always keep the correct relative order  Plane sweep at TIME-X plane can filter out the unqualified close pair candidates in TIME-X-Y plane.</p>
  </div>
  <div class="page">
    <p>Algorithm - 1</p>
    <p>Time</p>
    <p>X</p>
    <p>t1:</p>
    <p>SL: L1</p>
    <p>EL: t8, L1 ends</p>
    <p>t1 t8</p>
    <p>L1</p>
  </div>
  <div class="page">
    <p>Algorithm - 2</p>
    <p>Time</p>
    <p>X</p>
    <p>t1 t8</p>
    <p>L1</p>
    <p>t3 t12</p>
    <p>L2</p>
    <p>SL: L2</p>
    <p>t3:</p>
    <p>EL: t8, L1 ends</p>
    <p>L1</p>
    <p>t12, L2 ends</p>
  </div>
  <div class="page">
    <p>Algorithm - 3</p>
    <p>Time</p>
    <p>X</p>
    <p>t1 t3 t8 t12</p>
    <p>L1</p>
    <p>L2</p>
    <p>t5 t11</p>
    <p>L3</p>
    <p>SL: L2</p>
    <p>t5:</p>
    <p>EL: t8, L1 ends</p>
    <p>t11, L3 ends</p>
    <p>L3</p>
    <p>L1</p>
    <p>t12, L2 ends</p>
  </div>
  <div class="page">
    <p>Algorithm - 4</p>
    <p>Time</p>
    <p>X</p>
    <p>t1 t3 t5 t8 t11 t12</p>
    <p>L1</p>
    <p>L2</p>
    <p>L3</p>
    <p>t7 t10</p>
    <p>L4</p>
    <p>SL: L2</p>
    <p>t7:</p>
    <p>EL: t8, L1 ends</p>
    <p>t11, L3 ends</p>
    <p>L3</p>
    <p>L1</p>
    <p>t12, L2 ends</p>
    <p>L4</p>
    <p>t10, L4 ends</p>
  </div>
  <div class="page">
    <p>Algorithm - 5</p>
    <p>Time</p>
    <p>X</p>
    <p>t3 t5 t7 t10t11 t12t1 t8</p>
    <p>L1</p>
    <p>L2</p>
    <p>L3</p>
    <p>L4</p>
    <p>SL: L2</p>
    <p>t8:</p>
    <p>EL:</p>
    <p>t11, L3 ends</p>
    <p>L3</p>
    <p>t12, L2 ends</p>
    <p>L4</p>
    <p>t10, L4 ends</p>
    <p>Close pair candidates:</p>
    <p>(L1,L3), (L1,L4)</p>
  </div>
  <div class="page">
    <p>Algorithm - 6</p>
    <p>Time</p>
    <p>X</p>
    <p>t3 t5 t11 t12</p>
    <p>L2</p>
    <p>L3</p>
    <p>t7 t10</p>
    <p>L4</p>
    <p>SL: L2</p>
    <p>t10:</p>
    <p>EL: t11, L3 ends</p>
    <p>L3</p>
    <p>t12, L2 ends</p>
    <p>Close pair candidates:</p>
    <p>(L1,L3), (L1,L4)</p>
  </div>
  <div class="page">
    <p>Algorithm - 7</p>
    <p>Time</p>
    <p>X</p>
    <p>t3 t12</p>
    <p>L2</p>
    <p>t5 t11</p>
    <p>L3</p>
    <p>SL: L2</p>
    <p>t11:</p>
    <p>EL: t12, L2 ends</p>
    <p>Close pair candidates:</p>
    <p>(L1,L3), (L1,L4)</p>
  </div>
  <div class="page">
    <p>Algorithm - 8</p>
    <p>Time</p>
    <p>X</p>
    <p>t3 t12</p>
    <p>L2 SL:</p>
    <p>t12:</p>
    <p>EL:</p>
    <p>Close pair candidates:</p>
    <p>(L1,L3), (L1,L4)</p>
  </div>
  <div class="page">
    <p>Talk Outline  Problem description  Motivation  Algorithm</p>
    <p>Overview structure  Retrieval component  Identification component</p>
    <p>Experimental results  Conclusions</p>
  </div>
  <div class="page">
    <p>Experimental results  Setup  Retrieval component  Identification component</p>
  </div>
  <div class="page">
    <p>Setup</p>
    <p>Simulated Air Traffic Control data set includes 200,000 3-D line segments and the whole space is a 10000x10000x10 space.</p>
    <p>4D R*-tree (i.e., 3D for spatial, 1D for temporal) uses the XXL library</p>
    <p>Page size: 16KB</p>
  </div>
  <div class="page">
    <p>Retrieval component - 1</p>
    <p>MTSB-tree</p>
    <p>Number of Line Segments Per Trajectory</p>
    <p># P</p>
    <p>a g</p>
    <p>e A</p>
    <p>c c e</p>
    <p>s s e</p>
    <p>s</p>
    <p>MTSB-tree</p>
    <p>Number of Trajectories</p>
    <p># P</p>
    <p>a g</p>
    <p>e A</p>
    <p>c c e</p>
    <p>s s e</p>
    <p>s</p>
  </div>
  <div class="page">
    <p>Retrieval component - 2</p>
    <p>Query Time Interval</p>
    <p># P</p>
    <p>a g e A</p>
    <p>c c e s s e s</p>
    <p>MTSB-tree</p>
    <p>Query Spatial Range</p>
    <p># P</p>
    <p>a g</p>
    <p>e A</p>
    <p>c c e</p>
    <p>ss e</p>
    <p>d</p>
  </div>
  <div class="page">
    <p>Identification component</p>
    <p>Number of Line Segments</p>
    <p>R a</p>
    <p>ti o</p>
    <p>Length of Line Segments</p>
    <p>R a</p>
    <p>ti o</p>
  </div>
  <div class="page">
    <p>Talk Outline  Problem description  Motivation  Algorithm</p>
    <p>Overview structure  Retrieval component  Identification component</p>
    <p>Experimental results  Conclusions</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>The MTSB-tree can efficiently return the retrieval results without sorting.</p>
    <p>The Time-X plane sweep algorithm can avoid the unnecessary comparisons.</p>
    <p>The efficiency of the methods are verified by extensive experimental results.</p>
  </div>
  <div class="page"/>
</Presentation>
