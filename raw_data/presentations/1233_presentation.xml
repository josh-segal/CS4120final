<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Computer Architecture and Memory systems Laboratory</p>
    <p>CAMELab</p>
    <p>Myoungsoo Jung</p>
    <p>ATC 2020</p>
    <p>Sponsored by</p>
    <p>Fully Hardware Automated Open Research Framework for Future Fast NVMe Device</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Emerging Non-Volatile Memory for SSDs La</p>
    <p>te nc</p>
    <p>y (r</p>
    <p>ea ds</p>
    <p>)</p>
    <p>Memory Types</p>
    <p>TLC MLC SLC New Flash PRAM MRAM DRAM</p>
    <p>Flash Technologies</p>
    <p>Storage Class Memory (SCM)</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>NVMe Internals and Interfaces</p>
    <p>CPU Fla sh</p>
    <p>Fl as</p>
    <p>h Fl</p>
    <p>as h</p>
    <p>Fl as</p>
    <p>h</p>
    <p>CT RL</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>NVMe Storage Stack</p>
    <p>CPU Fla sh</p>
    <p>Fl as</p>
    <p>h Fl</p>
    <p>as h</p>
    <p>Fl as</p>
    <p>h</p>
    <p>CT RL</p>
    <p>Applications (Processes)</p>
    <p>VFS /FS</p>
    <p>Block layer</p>
    <p>Page cache</p>
    <p>Block device driver</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>NVMe Storage Stack Redesign</p>
    <p>CPU Fla sh</p>
    <p>Fl as</p>
    <p>h Fl</p>
    <p>as h</p>
    <p>Fl as</p>
    <p>h</p>
    <p>CT RL</p>
    <p>Applications (Processes)</p>
    <p>VFS /FS</p>
    <p>Block layer</p>
    <p>Page cache</p>
    <p>Block device driver</p>
    <p>FlashShare: Punching Through Server Storage Stack from Kernel to Firmware for Ultra-Low Latency SSDs (OSDI18)</p>
    <p>De-indirection for Flash-Based SSDs with Nameless writes (FAST12)</p>
    <p>Towards SLO Complying SSDs Through OPS Isolation (FAST15)</p>
    <p>The case of FEMU: Cheap, Accurate, Scalable and Extensible Flash Emulator (FAST18)</p>
    <p>Therere more and more!</p>
    <p>Challenges #1: Most storage</p>
    <p>research relies on simulation/kernel</p>
    <p>level emulation</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>SCM-based NVMe Storage Card</p>
    <p>SC M</p>
    <p>SC M</p>
    <p>SC M</p>
    <p>SC M</p>
    <p>CT RL</p>
    <p>Applications (Processes)</p>
    <p>VFS /FS</p>
    <p>Block layer</p>
    <p>Page cache</p>
    <p>Block device driver</p>
    <p>CPU</p>
    <p>Challenges #2: SSDs CPU can be a performance</p>
    <p>bottleneck for SCMs</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>What Does SSDs CPU Do?</p>
    <p>Applications (Processes)</p>
    <p>VFS /FS</p>
    <p>Block layer</p>
    <p>Page cache</p>
    <p>Block device driver</p>
    <p>CPU SC M</p>
    <p>SC M</p>
    <p>SC M</p>
    <p>SC M</p>
    <p>CT RL</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>What Does SSDs CPU Do?</p>
    <p>CPU SC M</p>
    <p>CT RL</p>
    <p>Applications (Processes)</p>
    <p>VFS /FS</p>
    <p>Block layer</p>
    <p>Page cache</p>
    <p>Block device driver</p>
    <p>Address space</p>
    <p>Host memory</p>
    <p>Co m</p>
    <p>pl et</p>
    <p>io n</p>
    <p>qu eu</p>
    <p>e (C</p>
    <p>Q )</p>
    <p>Su bm</p>
    <p>is si</p>
    <p>on qu</p>
    <p>eu e</p>
    <p>(S Q</p>
    <p>)</p>
    <p>Device register SQ Doorbell</p>
    <p>CQ Doorbell</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>What Does SSDs CPU Do?</p>
    <p>CPU SC M</p>
    <p>CT RL</p>
    <p>Applications (Processes)</p>
    <p>VFS /FS</p>
    <p>Block layer</p>
    <p>Page cache</p>
    <p>Block device driver</p>
    <p>Address space</p>
    <p>Co m</p>
    <p>pl et</p>
    <p>io n</p>
    <p>qu eu</p>
    <p>e (C</p>
    <p>Q )</p>
    <p>Su bm</p>
    <p>is si</p>
    <p>on qu</p>
    <p>eu e</p>
    <p>(S Q</p>
    <p>) SQ Doorbell</p>
    <p>CQ Doorbell</p>
    <p>I/O submission</p>
    <p>Data (PRP)</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>What Does SSDs CPU Do?</p>
    <p>CPU SC M</p>
    <p>CT RL</p>
    <p>Applications (Processes)</p>
    <p>VFS /FS</p>
    <p>Block layer</p>
    <p>Page cache</p>
    <p>Block device driver</p>
    <p>Address space</p>
    <p>Co m</p>
    <p>pl et</p>
    <p>io n</p>
    <p>qu eu</p>
    <p>e (C</p>
    <p>Q )</p>
    <p>Su bm</p>
    <p>is si</p>
    <p>on qu</p>
    <p>eu e</p>
    <p>(S Q</p>
    <p>) SQ Doorbell</p>
    <p>CQ Doorbell</p>
    <p>Data (PRP)</p>
    <p>Ring SQ doorbell</p>
    <p>SQ Doorbell</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>What Does SSDs CPU Do?</p>
    <p>CPU SC M</p>
    <p>CT RL</p>
    <p>Applications (Processes)</p>
    <p>VFS /FS</p>
    <p>Block layer</p>
    <p>Page cache</p>
    <p>Block device driver</p>
    <p>Address space</p>
    <p>Co m</p>
    <p>pl et</p>
    <p>io n</p>
    <p>qu eu</p>
    <p>e (C</p>
    <p>Q )</p>
    <p>Su bm</p>
    <p>is si</p>
    <p>on qu</p>
    <p>eu e</p>
    <p>(S Q</p>
    <p>) SQ Doorbell</p>
    <p>CQ Doorbell</p>
    <p>Data (PRP)</p>
    <p>SQ Doorbell</p>
    <p>I/O fetch</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>What Does SSDs CPU Do?</p>
    <p>CPU SC M</p>
    <p>CT RL</p>
    <p>Applications (Processes)</p>
    <p>VFS /FS</p>
    <p>Block layer</p>
    <p>Page cache</p>
    <p>Block device driver</p>
    <p>Address space</p>
    <p>Co m</p>
    <p>pl et</p>
    <p>io n</p>
    <p>qu eu</p>
    <p>e (C</p>
    <p>Q )</p>
    <p>Su bm</p>
    <p>is si</p>
    <p>on qu</p>
    <p>eu e</p>
    <p>(S Q</p>
    <p>) SQ Doorbell</p>
    <p>CQ Doorbell</p>
    <p>Data transfer</p>
    <p>Data (PRP)</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>What Does SSDs CPU Do?</p>
    <p>CPU SC M</p>
    <p>CT RL</p>
    <p>Applications (Processes)</p>
    <p>VFS /FS</p>
    <p>Block layer</p>
    <p>Page cache</p>
    <p>Block device driver</p>
    <p>Address space</p>
    <p>Co m</p>
    <p>pl et</p>
    <p>io n</p>
    <p>qu eu</p>
    <p>e (C</p>
    <p>Q )</p>
    <p>Su bm</p>
    <p>is si</p>
    <p>on qu</p>
    <p>eu e</p>
    <p>(S Q</p>
    <p>) SQ Doorbell</p>
    <p>CQ Doorbell</p>
    <p>Data (PRP)</p>
    <p>I/O process</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>What Does SSDs CPU Do?</p>
    <p>CPU SC M</p>
    <p>CT RL</p>
    <p>Applications (Processes)</p>
    <p>VFS /FS</p>
    <p>Block layer</p>
    <p>Page cache</p>
    <p>Block device driver</p>
    <p>Address space</p>
    <p>Co m</p>
    <p>pl et</p>
    <p>io n</p>
    <p>qu eu</p>
    <p>e (C</p>
    <p>Q )</p>
    <p>Su bm</p>
    <p>is si</p>
    <p>on qu</p>
    <p>eu e</p>
    <p>(S Q</p>
    <p>) SQ Doorbell</p>
    <p>CQ Doorbell</p>
    <p>I/O completion</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>What Does SSDs CPU Do?</p>
    <p>CPU SC M</p>
    <p>CT RL</p>
    <p>Applications (Processes)</p>
    <p>VFS /FS</p>
    <p>Block layer</p>
    <p>Page cache</p>
    <p>Block device driver</p>
    <p>Address space</p>
    <p>Co m</p>
    <p>pl et</p>
    <p>io n</p>
    <p>qu eu</p>
    <p>e (C</p>
    <p>Q )</p>
    <p>Su bm</p>
    <p>is si</p>
    <p>on qu</p>
    <p>eu e</p>
    <p>(S Q</p>
    <p>) SQ Doorbell</p>
    <p>CQ Doorbell</p>
    <p>Interrupt (notification)</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>What Does SSDs CPU Do?</p>
    <p>CPU SC M</p>
    <p>CT RL</p>
    <p>Applications (Processes)</p>
    <p>VFS /FS</p>
    <p>Block layer</p>
    <p>Page cache</p>
    <p>Block device driver</p>
    <p>Address space</p>
    <p>Co m</p>
    <p>pl et</p>
    <p>io n</p>
    <p>qu eu</p>
    <p>e (C</p>
    <p>Q )</p>
    <p>Su bm</p>
    <p>is si</p>
    <p>on qu</p>
    <p>eu e</p>
    <p>(S Q</p>
    <p>) SQ Doorbell</p>
    <p>CQ Doorbell</p>
    <p>Process completion</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>What Does SSDs CPU Do?</p>
    <p>CPU SC M</p>
    <p>CT RL</p>
    <p>Applications (Processes)</p>
    <p>VFS /FS</p>
    <p>Block layer</p>
    <p>Page cache</p>
    <p>Block device driver</p>
    <p>Address space</p>
    <p>Co m</p>
    <p>pl et</p>
    <p>io n</p>
    <p>qu eu</p>
    <p>e (C</p>
    <p>Q )</p>
    <p>Su bm</p>
    <p>is si</p>
    <p>on qu</p>
    <p>eu e</p>
    <p>(S Q</p>
    <p>) SQ Doorbell</p>
    <p>CQ Doorbell</p>
    <p>Ring CQ doorbell</p>
    <p>CQ Doorbell</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>What Does SSDs CPU Do?</p>
    <p>CPU SC M</p>
    <p>CT RL</p>
    <p>Applications (Processes)</p>
    <p>VFS /FS</p>
    <p>Block layer</p>
    <p>Page cache</p>
    <p>Block device driver</p>
    <p>Address space</p>
    <p>Co m</p>
    <p>pl et</p>
    <p>io n</p>
    <p>qu eu</p>
    <p>e (C</p>
    <p>Q )</p>
    <p>Su bm</p>
    <p>is si</p>
    <p>on qu</p>
    <p>eu e</p>
    <p>(S Q</p>
    <p>) SQ Doorbell</p>
    <p>CQ DoorbellCQ Doorbell</p>
    <p>All these NVMe activities give a burden on the storage!</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Multi-core IP for High-Performance SSD Backend</p>
    <p>Ch an</p>
    <p>ne l C</p>
    <p>om pl</p>
    <p>ex</p>
    <p>CPU</p>
    <p>In bo</p>
    <p>un d</p>
    <p>NVMe driver</p>
    <p>SQ CQ Core0</p>
    <p>O ut</p>
    <p>bo un</p>
    <p>d PC</p>
    <p>Ie</p>
    <p>PC Ie</p>
    <p>C lie</p>
    <p>nt L</p>
    <p>og ic</p>
    <p>PC Ie</p>
    <p>I-R A</p>
    <p>M</p>
    <p>I-R A</p>
    <p>M</p>
    <p>I-R A</p>
    <p>M</p>
    <p>Interconnection Networks</p>
    <p>Memory Controller SRAM</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Component Latency Decomposition</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>Completion Translation PRP Queue/Doorbells Fetching NVM</p>
    <p>Completion Translation PRP Queue/Doorbells Fetching NVM</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Component Latency Decomposition</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>Completion Translation PRP Queue/Doorbells Fetching NVM</p>
    <p>Completion Translation PRP Queue/Doorbells Fetching NVM</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Component Latency Decomposition</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>Completion Translation PRP Queue/Doorbells Fetching NVM</p>
    <p>Completion Translation PRP Queue/Doorbells Fetching NVM</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Component Latency Decomposition</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>Completion Translation PRP Queue/Doorbells Fetching NVM</p>
    <p>Completion Translation PRP Queue/Doorbells Fetching NVM</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Component Latency Decomposition</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>Completion Translation PRP Queue/Doorbells Fetching NVM</p>
    <p>Completion Translation PRP Queue/Doorbells Fetching NVM</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Component Latency Decomposition</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>TLC MLC SLCZNA NDPRA</p>
    <p>M MRA</p>
    <p>M 0.0</p>
    <p>La te</p>
    <p>nc y</p>
    <p>br ea</p>
    <p>kd ow</p>
    <p>n</p>
    <p>Completion Translation PRP Queue/Doorbells Fetching NVM</p>
    <p>Completion Translation PRP Queue/Doorbells Fetching NVM</p>
    <p>CPU bursts can be overlapped with I/O</p>
    <p>bursts</p>
    <p>Firmware control become the critical</p>
    <p>performance bottleneck</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Overview</p>
    <p>A framework that fully automates NVMe control logic in hardware to make it possible to build customizable devices  OpenExpress is an NVMe host accelerator IP for the integration with an easy-to-access</p>
    <p>FPGA design.</p>
    <p>OpenExpress doesnt require any software intervention to process concurrent read and write NVMe requests  It supports scalable data submission, rich outstanding NVMe commands and submissio</p>
    <p>n/completion queue management.</p>
    <p>We prototype OpenExpress on a commercially available Xilinx FPGA board and optimize all the logic modules to operate a high frequency.</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Full Hardware Automation for Critical I/O Path Backend</p>
    <p>Ch an</p>
    <p>ne l C</p>
    <p>om pl</p>
    <p>ex</p>
    <p>CPU</p>
    <p>In bo</p>
    <p>un d</p>
    <p>NVMe driver</p>
    <p>SQ CQ Core0</p>
    <p>O ut</p>
    <p>bo un</p>
    <p>d PC</p>
    <p>Ie</p>
    <p>PC Ie</p>
    <p>C lie</p>
    <p>nt L</p>
    <p>og ic</p>
    <p>PC Ie</p>
    <p>I-R A</p>
    <p>M</p>
    <p>I-R A</p>
    <p>M</p>
    <p>I-R A</p>
    <p>M</p>
    <p>Interconnection Networks</p>
    <p>Memory Controller SRAM</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Full Hardware Automation for Critical I/O Path Backend</p>
    <p>Ch an</p>
    <p>ne l C</p>
    <p>om pl</p>
    <p>ex</p>
    <p>CPU</p>
    <p>In bo</p>
    <p>un d</p>
    <p>NVMe driver</p>
    <p>SQ CQ Core0</p>
    <p>O ut</p>
    <p>bo un</p>
    <p>d PC</p>
    <p>Ie</p>
    <p>PC Ie</p>
    <p>C lie</p>
    <p>nt L</p>
    <p>og ic</p>
    <p>PC Ie</p>
    <p>SoC Memory Bus</p>
    <p>Datapath</p>
    <p>Hardware Automation (OpenExpress)</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Queue Dispatching OpenExpress</p>
    <p>SQ 1 DB SQ 0 DB</p>
    <p>SQ Tail Doorbell Region</p>
    <p>A dd</p>
    <p>re ss</p>
    <p>(r ea</p>
    <p>ds /w</p>
    <p>ri te</p>
    <p>s)</p>
    <p>D at</p>
    <p>a (r</p>
    <p>ea ds</p>
    <p>/w ri</p>
    <p>te s)</p>
    <p>W ri</p>
    <p>te R</p>
    <p>es po</p>
    <p>ns e</p>
    <p>SQ Entry Fetch Manager (FET)</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Data Transferring OpenExpress</p>
    <p>SQ 1 DB SQ 0 DB</p>
    <p>SQ Tail Doorbell Region</p>
    <p>A dd</p>
    <p>re ss</p>
    <p>(r ea</p>
    <p>ds /w</p>
    <p>ri te</p>
    <p>s)</p>
    <p>D at</p>
    <p>a (r</p>
    <p>ea ds</p>
    <p>/w ri</p>
    <p>te s)</p>
    <p>W ri</p>
    <p>te R</p>
    <p>es po</p>
    <p>ns e</p>
    <p>SQ Entry Fetch Manager (FET)</p>
    <p>PRP Engine (HTRW)</p>
    <p>Backend DMA (DMA)</p>
    <p>PCIe EP Complex</p>
    <p>DIMM0</p>
    <p>DIMM1</p>
    <p>DIMM2</p>
    <p>DIMM3</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Completion Handling OpenExpress</p>
    <p>SQ 1 DB SQ 0 DB</p>
    <p>SQ Tail Doorbell Region</p>
    <p>PCIe EP Complex</p>
    <p>A dd</p>
    <p>re ss</p>
    <p>(r ea</p>
    <p>ds /w</p>
    <p>ri te</p>
    <p>s)</p>
    <p>D at</p>
    <p>a (r</p>
    <p>ea ds</p>
    <p>/w ri</p>
    <p>te s)</p>
    <p>W ri</p>
    <p>te R</p>
    <p>es po</p>
    <p>ns e</p>
    <p>SQ Entry Fetch Manager (FET)</p>
    <p>PRP Engine (HTRW)</p>
    <p>Backend DMA (DMA)</p>
    <p>Completion Handler (CMT)</p>
    <p>CQ 1 DB CQ 0 DB</p>
    <p>CQ Head Doorbell Region</p>
    <p>DIMM0</p>
    <p>DIMM1</p>
    <p>DIMM2</p>
    <p>DIMM3</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>NVMe Context Management OpenExpress</p>
    <p>SQ 1 DB SQ 0 DB</p>
    <p>SQ Tail Doorbell Region</p>
    <p>PCIe EP Complex</p>
    <p>A dd</p>
    <p>re ss</p>
    <p>(r ea</p>
    <p>ds /w</p>
    <p>ri te</p>
    <p>s)</p>
    <p>D at</p>
    <p>a (r</p>
    <p>ea ds</p>
    <p>/w ri</p>
    <p>te s)</p>
    <p>W ri</p>
    <p>te R</p>
    <p>es po</p>
    <p>ns e</p>
    <p>SQ Entry Fetch Manager (FET)</p>
    <p>PRP Engine (HTRW)</p>
    <p>Backend DMA (DMA)</p>
    <p>Completion Handler (CMT)</p>
    <p>CQ 1 DB CQ 0 DB</p>
    <p>CQ Head Doorbell Region</p>
    <p>DIMM0</p>
    <p>DIMM1</p>
    <p>DIMM2</p>
    <p>DIMM3</p>
    <p>NVMe Context Box (CTX)</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Operation Flow of OpenExpress OpenExpress</p>
    <p>SQ 1 DB SQ 0 DB</p>
    <p>SQ Tail Doorbell Region</p>
    <p>PCIe EP Complex</p>
    <p>A dd</p>
    <p>re ss</p>
    <p>(r ea</p>
    <p>ds /w</p>
    <p>ri te</p>
    <p>s)</p>
    <p>D at</p>
    <p>a (r</p>
    <p>ea ds</p>
    <p>/w ri</p>
    <p>te s)</p>
    <p>W ri</p>
    <p>te R</p>
    <p>es po</p>
    <p>ns e</p>
    <p>SQ Entry Fetch Manager (FET)</p>
    <p>PRP Engine (HTRW)</p>
    <p>Backend DMA (DMA)</p>
    <p>Completion Handler (CMT)</p>
    <p>CQ 1 DB CQ 0 DB</p>
    <p>CQ Head Doorbell Region</p>
    <p>DIMM0</p>
    <p>DIMM1</p>
    <p>DIMM2</p>
    <p>DIMM3</p>
    <p>Completion Queue 1</p>
    <p>Tail</p>
    <p>Head</p>
    <p>CQ 1 BAR</p>
    <p>Submission Queue 1</p>
    <p>Tail</p>
    <p>Head</p>
    <p>Issue a command 1</p>
    <p>Monitor the DB region and signal an event</p>
    <p>PRPDRAM</p>
    <p>Posting CQ entry7</p>
    <p>Create MSI and interrupt8</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Major IP Cores FET</p>
    <p>HTRW CMT</p>
    <p>CTX</p>
    <p>Frontend</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Major IP Cores FET</p>
    <p>HTRW CMT</p>
    <p>CTX</p>
    <p>Frontend</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Major IP Cores</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Synthesis and Implementation</p>
    <p>Four 64GB DDR4 x72 DIMM(256GB)</p>
    <p>Xilinx Virtex UltraScale 190</p>
    <p>PCIe Gen3 Descriptions</p>
    <p>CPU i5-9400 2.9GHz</p>
    <p>Design Suite Vivado 2017.3.1</p>
    <p>OS Ubuntu 18.04 LTS</p>
    <p>Building Time More than 7 hours</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Frequency Tuning (50MHz ~ 250 MHz)  Detect the long routing delay and</p>
    <p>place register slice IPs between hardware modules  It can increase the frequency while</p>
    <p>minimizing a negative slack  Gradual trial-and error to reduce the</p>
    <p>amount of route delay</p>
    <p>Memory Controller</p>
    <p>DDR interconnect</p>
    <p>AXI</p>
    <p>DMA</p>
    <p>PCIe EP</p>
    <p>CMT</p>
    <p>FET</p>
    <p>HTRW</p>
    <p>CTX</p>
    <p>Putting register slides between</p>
    <p>different IP cores</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Frequency Tuning (50MHz ~ 250 MHz)  Group hardware modules in the floor</p>
    <p>planning  After synthesis, create FPGA pblock (a part</p>
    <p>of grid cells), allocate hardware IPs to the pblock, and do PNR (place and route)</p>
    <p>Check the implementation report and do gradual trial-and-error again</p>
    <p>Memory Controller</p>
    <p>DDR interconnect</p>
    <p>AXI</p>
    <p>DMA</p>
    <p>PCIe EP</p>
    <p>CMT</p>
    <p>FET</p>
    <p>HTRW</p>
    <p>CTX</p>
    <p>Reducing route distances by</p>
    <p>grouping IP logic</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Perf. Improvement of Frequency Tuning  The performance improvement for</p>
    <p>reads and writes is as high as 20% and 60%, respectively</p>
    <p>Reads exhibit more benefits as its nature of data movement on PCIe packets (explained shortly)</p>
    <p>The large size block processing has more benefits because of automated PRP data processing</p>
    <p>ReadsWrites</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Perf. Improvement of Frequency Tuning</p>
    <p>ReadsWrites</p>
    <p>DRAM</p>
    <p>DRAMOu tb</p>
    <p>ou nd</p>
    <p>Emul</p>
    <p>Emul</p>
    <p>Emul</p>
    <p>Inbound</p>
    <p>PC Ie</p>
    <p>OpenExpress</p>
    <p>Host</p>
    <p>IO CQ Region</p>
    <p>Control Reg Set</p>
    <p>IO SQ Region IO Command</p>
    <p>PCIe BAR</p>
    <p>PRP List</p>
    <p>Pointer</p>
    <p>Pointer</p>
    <p>PRP parsing/traversing and data transfers</p>
    <p>are fully automated</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Evaluation  For all executions, a single I/O worker cannot extract full bandwidth (CPU</p>
    <p>bottleneck)  We execute 10 threads for both benchmark execution and real workload</p>
    <p>Descriptions</p>
    <p>CPU 8-core 3.3GHz Intel Skylake-X Server Microarchitecture</p>
    <p>DRAM 32GB DDR4 (2666)</p>
    <p>Benchmark FIO</p>
    <p>Real workload CAMELs Open Storage Trace (SNIA) https://trace.camelab.org/</p>
    <p>I/O Workers 10 threads</p>
    <p>Block Device Optane SSD P4800X</p>
    <p>Evaluations demonstrated in the paper are all performed with a queue-depth 8  The queue depth exhibiting the best bandwidth</p>
    <p>Note that we dont claim that OpenExpress can be faster than other fast NVMe devices.  Instead, the evaluation shows that an FPGA</p>
    <p>based design and implementation for NVMe IP cores can offer good performance to make it a viable candidate for use in storage research.</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Performance w/ Microbenchmarks</p>
    <p>Bandwidth (seq) Bandwidth (rand)</p>
    <p>Latency (seq) Latency (rand)</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Performance w/ Microbenchmarks  4KB-sized requests</p>
    <p>There is no much bandwidth/latency difference between reads and writes (3 GB/sec vs 2.8/sec)</p>
    <p>OpenExpress latency is 72~77 us at the queue-depth eight (vs. P4800X offers 120~150 us)</p>
    <p>It reaches the maximum bandwidth with 16KB-sized requests  4.7GB/sec for random writes (258 us)  7GB/sec for random reads (175 us)</p>
    <p>(vs. P4800X offers 532 us~600us)</p>
    <p>Bandwidth (seq)</p>
    <p>Latency (seq)</p>
    <p>Why are writes slower than reads?</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Performance w/ Microbenchmarks</p>
    <p>Bandwidth (seq)</p>
    <p>Latency (seq)</p>
    <p>Doorbell NVMe</p>
    <p>PRP Data Data</p>
    <p>Doorbell NVMe</p>
    <p>PRP Data Data</p>
    <p>Doorbell NVMe</p>
    <p>PRP Data Data</p>
    <p>Doorbell NVMe</p>
    <p>PRP</p>
    <p>Data Data</p>
    <p>Writes ReadsRXTX RXTX All payloads are</p>
    <p>serialized Data and NVMe payloads are served</p>
    <p>in parallel</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Real Workload Evaluation</p>
    <p>De vDi</p>
    <p>v Ser</p>
    <p>ver TP</p>
    <p>CE 0</p>
    <p>M ic</p>
    <p>ro se</p>
    <p>c</p>
    <p>De vDi</p>
    <p>v Ser</p>
    <p>ver TP</p>
    <p>CE 0.0</p>
    <p>M B</p>
    <p>/s</p>
    <p>OpenExpress  The performance of real workloads are different with microbenchmark results because of unaligned request offsets, sector length variations, etc.  Most storage cards cannot reach their</p>
    <p>best performance with real workload executions</p>
    <p>Read-intensive workloads (DevDiv and Server)  OpenExpress offers 4GB/sec ~ 4.5GB/sec</p>
    <p>(100~200 us)</p>
    <p>Write-intensive workloads (24HR, FIU and TPCE)  1.25GB/sec~2.1GB/sec (all under 100 us)</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Real Workload Evaluation</p>
    <p>De vDi</p>
    <p>v Ser</p>
    <p>ver TP</p>
    <p>CE 0</p>
    <p>M ic</p>
    <p>ro se</p>
    <p>c</p>
    <p>De vDi</p>
    <p>v Ser</p>
    <p>ver TP</p>
    <p>CE 0.0</p>
    <p>M B</p>
    <p>/s</p>
    <p>OpenExpress</p>
    <p>De vDi</p>
    <p>v Ser</p>
    <p>ver TP</p>
    <p>CE 0.0</p>
    <p>M B</p>
    <p>/s</p>
    <p>Optane SSD OpenExpress</p>
    <p>De vDi</p>
    <p>v Ser</p>
    <p>ver TP</p>
    <p>CE 0</p>
    <p>M ic</p>
    <p>ro se</p>
    <p>c</p>
    <p>Bandwidth  OpenExpress shows 76.3% better</p>
    <p>bandwidth than Optane SSD, on average</p>
    <p>Latency  It exhibits 68.6% shorter latency than</p>
    <p>those of OptaneSSD</p>
    <p>DevDiv  111.5% better performance compared to</p>
    <p>Optane SSD (2.1GB/sec)</p>
    <p>FPGA is yet much slower, but the FPGA design and implementation for NVMe IP cores are not on the critical path and can be used for systemlevel studies as a research vehicle</p>
  </div>
  <div class="page">
    <p>CAMELab</p>
    <p>Conclusion: Related Work and Download</p>
    <p>$ 35K</p>
    <p>$ 45K</p>
    <p>$ 40K</p>
    <p>Ip-m****</p>
    <p>Inte******</p>
    <p>Ep*****</p>
    <p>Per-month unitary prices for 3rd party NVMe IP Core</p>
    <p>The price of a single-use source code is around $ 100K For academic/non commercial purpose,</p>
    <p>OpenExpress will be freely downloadable:  Hardware automation IP cores (HTRW, FET, CMT, CTX..)  Firmware for MicroBlaze (to control administrator</p>
    <p>command management, device initialization, etc.)</p>
    <p>Download information  https://openexpress.camelab.org</p>
  </div>
  <div class="page">
    <p>Computer Architecture and Memory systems Laboratory</p>
    <p>CAMELab</p>
    <p>Myoungsoo Jung</p>
    <p>ATC 2020</p>
    <p>Sponsored by</p>
    <p>Fully Hardware Automated Open Research Framework for Future Fast NVMe Device</p>
  </div>
</Presentation>
