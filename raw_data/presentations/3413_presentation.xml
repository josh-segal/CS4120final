<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Telling Your Secrets Without Page Faults:</p>
    <p>Stealthy Page Table-Based Attacks on Enclaved Execution</p>
    <p>Jo Van Bulck 1 Nico Weichbrodt 2 Rudiger Kapitza 2</p>
    <p>Frank Piessens 1 Raoul Strackx 1</p>
    <p>August 18, 2017</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 1 / 14</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Road Map</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 1 / 14</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>thehackernews.com/2015/10/windows-patch-update.html</p>
    <p>thehackernews.com/2016/10/linux-kernel-exploit.html</p>
    <p>thehackernews.com/2017/06/cia-linux-hacking-tool-malware.html</p>
    <p>thehackernews.com/2015/04/rootpipe-mac-os-x-vulnerability.html</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 2 / 14</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Motivation: Application Attack Surface</p>
    <p>Mem HDD</p>
    <p>OS kernel</p>
    <p>AppApp</p>
    <p>Trusted Untrusted</p>
    <p>CPU</p>
    <p>AppApp</p>
    <p>TPM</p>
    <p>Hypervisor</p>
    <p>Layered architecture  large trusted computing base Jo Van Bulck et al. Telling Your Secrets Without Page Faults 3 / 14</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Motivation: Application Attack Surface</p>
    <p>Mem HDD</p>
    <p>OS kernel</p>
    <p>AppApp</p>
    <p>Trusted Untrusted</p>
    <p>CPU</p>
    <p>AppApp</p>
    <p>TPM</p>
    <p>Hypervisor</p>
    <p>Layered architecture  large trusted computing base Jo Van Bulck et al. Telling Your Secrets Without Page Faults 3 / 14</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Motivation: Application Attack Surface</p>
    <p>Mem HDD</p>
    <p>OS kernel</p>
    <p>AppApp</p>
    <p>Trusted Untrusted</p>
    <p>CPU</p>
    <p>AppApp</p>
    <p>TPM</p>
    <p>Hypervisor</p>
    <p>S G</p>
    <p>X e</p>
    <p>n c la</p>
    <p>v e s</p>
    <p>Intel SGX promise: hardware-level isolation and attestation</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 3 / 14</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Motivation: Application Attack Surface</p>
    <p>Mem HDD</p>
    <p>OS kernel</p>
    <p>AppApp</p>
    <p>Trusted Untrusted</p>
    <p>CPU</p>
    <p>AppApp</p>
    <p>TPM</p>
    <p>Hypervisor</p>
    <p>S G</p>
    <p>X e</p>
    <p>n c la</p>
    <p>v e s</p>
    <p>Untrusted OS  new class of powerful side-channels Jo Van Bulck et al. Telling Your Secrets Without Page Faults 3 / 14</p>
  </div>
  <div class="page">
    <p>Controlled-Channel Attacks and Defenses</p>
    <p>Road Map</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 3 / 14</p>
  </div>
  <div class="page">
    <p>Controlled-Channel Attacks and Defenses</p>
    <p>The Virtual Memory Abstraction</p>
    <p>Virtual Address</p>
    <p>Physical AddressMapping</p>
    <p>Page Tables</p>
    <p>Virtual Address Space</p>
    <p>Physical Address Space</p>
    <p>Address Translation</p>
    <p>Software DRAM</p>
    <p>System bus</p>
    <p>Costan et al. Intel SGX explained, IACR 2016 [CD16]</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 4 / 14</p>
  </div>
  <div class="page">
    <p>Controlled-Channel Attacks and Defenses</p>
    <p>How Enclave Accesses are Enforced</p>
    <p>Note: Untrusted OS controls virtual-to-physical mapping</p>
    <p>Costan et al. Intel SGX explained, IACR 2016 [CD16]</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 5 / 14</p>
  </div>
  <div class="page">
    <p>Controlled-Channel Attacks and Defenses</p>
    <p>How Enclave Accesses are Enforced</p>
    <p>Note: Untrusted OS controls virtual-to-physical mapping</p>
    <p>Costan et al. Intel SGX explained, IACR 2016 [CD16]</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 5 / 14</p>
  </div>
  <div class="page">
    <p>Controlled-Channel Attacks and Defenses</p>
    <p>How Enclave Accesses are Enforced</p>
    <p>Note: Additional checks after address translation</p>
    <p>Page walk?</p>
    <p>Enclave mode?</p>
    <p>padrs in PRM?</p>
    <p>Allow</p>
    <p>Page fault vadrs in enclave?</p>
    <p>Abort page</p>
    <p>padrs in EPC?</p>
    <p>EPCM checks?</p>
    <p>ok no</p>
    <p>yes</p>
    <p>no</p>
    <p>yesfail</p>
    <p>no</p>
    <p>yes</p>
    <p>fail yes ok</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 5 / 14</p>
  </div>
  <div class="page">
    <p>Controlled-Channel Attacks and Defenses</p>
    <p>How Enclave Accesses are Enforced</p>
    <p>Note: Additional checks after address translation</p>
    <p>Page walk?</p>
    <p>Enclave mode?</p>
    <p>padrs in PRM?</p>
    <p>Allow</p>
    <p>Page fault vadrs in enclave?</p>
    <p>Abort page</p>
    <p>padrs in EPC?</p>
    <p>EPCM checks?</p>
    <p>ok no</p>
    <p>yes</p>
    <p>no</p>
    <p>yesfail</p>
    <p>no</p>
    <p>yes</p>
    <p>fail yes ok</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 5 / 14</p>
  </div>
  <div class="page">
    <p>Controlled-Channel Attacks and Defenses</p>
    <p>Page Faults as a Side-Channel</p>
    <p>Xu et al.: Controlled-channel attacks: Deterministic side channels for untrusted operating systems, Oakland 2015 [XCP15]</p>
    <p>Page fault traces leak private control flow/data accesses</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 6 / 14</p>
  </div>
  <div class="page">
    <p>Controlled-Channel Attacks and Defenses</p>
    <p>Page Faults as a Side-Channel</p>
    <p>Xu et al.: Controlled-channel attacks: Deterministic side channels for untrusted operating systems, Oakland 2015 [XCP15]</p>
    <p>Low-noise, single-run exploitation of legacy applications</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 6 / 14</p>
  </div>
  <div class="page">
    <p>Controlled-Channel Attacks and Defenses</p>
    <p>Current Solutions: Hiding Enclave Page Faults</p>
    <p>Page walk?</p>
    <p>Enclave mode?</p>
    <p>padrs in PRM?</p>
    <p>Allow</p>
    <p>Page fault vadrs in enclave?</p>
    <p>Abort page</p>
    <p>padrs in EPC?</p>
    <p>EPCM checks?</p>
    <p>ok no</p>
    <p>yes</p>
    <p>no</p>
    <p>yesfail</p>
    <p>no</p>
    <p>yes</p>
    <p>fail yes ok</p>
    <p>Shih et al. T-SGX: Eradicating controlled-channel attacks against enclave programs, NDSS 2017 [SLKP17]</p>
    <p>Shinde et al. Preventing page faults from telling your secrets, AsiaCCS 2016 [SCNS16]</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 7 / 14</p>
  </div>
  <div class="page">
    <p>Controlled-Channel Attacks and Defenses</p>
    <p>Current Solutions: Hiding Enclave Page Faults</p>
    <p>Page walk?</p>
    <p>Enclave mode?</p>
    <p>padrs in PRM?</p>
    <p>Allow</p>
    <p>Page fault vadrs in enclave?</p>
    <p>Abort page</p>
    <p>padrs in EPC?</p>
    <p>EPCM checks?</p>
    <p>ok no</p>
    <p>yes</p>
    <p>no</p>
    <p>yesfail</p>
    <p>no</p>
    <p>yes</p>
    <p>fail yes ok</p>
    <p>Shih et al. T-SGX: Eradicating controlled-channel attacks against enclave programs, NDSS 2017 [SLKP17]</p>
    <p>Shinde et al. Preventing page faults from telling your secrets, AsiaCCS 2016 [SCNS16]</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 7 / 14</p>
  </div>
  <div class="page">
    <p>Controlled-Channel Attacks and Defenses</p>
    <p>Current Solutions: Hiding Enclave Page Faults</p>
    <p>Page walk?</p>
    <p>Enclave mode?</p>
    <p>padrs in PRM?</p>
    <p>Allow</p>
    <p>Page fault vadrs in enclave?</p>
    <p>Abort page</p>
    <p>padrs in EPC?</p>
    <p>EPCM checks?</p>
    <p>ok no</p>
    <p>yes</p>
    <p>no</p>
    <p>yesfail</p>
    <p>no</p>
    <p>yes</p>
    <p>fail yes ok</p>
    <p>Defenses do not hold when attacker learns page accesses without triggering faults!</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 7 / 14</p>
  </div>
  <div class="page">
    <p>Controlled-Channel Attacks and Defenses</p>
    <p>Current Solutions: Hiding Enclave Page Faults</p>
    <p>Directory Ptr</p>
    <p>PTE</p>
    <p>Linear Address</p>
    <p>Page Table</p>
    <p>PDPTE</p>
    <p>CR3</p>
    <p>Pointer Table</p>
    <p>Offset</p>
    <p>Physical Addr</p>
    <p>PDE with PS=0</p>
    <p>Table</p>
    <p>Directory</p>
    <p>Page-Directory</p>
    <p>Page-Directory</p>
    <p>PML4</p>
    <p>PML4E</p>
    <p>Defenses do not hold when attacker learns page accesses without triggering faults!</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 7 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>Road Map</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 7 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>SGX Side-Channel Leakage: Page Table Entries</p>
    <p>Also updated in enclave mode!</p>
    <p>Cached as regular data Accessed during address translation</p>
    <p>Flush+Reload cache timing attack!</p>
    <p>void inc_secret( void ) { if (secret) *a += 1; else *b += 1; }</p>
    <p>PTE a</p>
    <p>PTE b</p>
    <p>P a g</p>
    <p>e T</p>
    <p>a b</p>
    <p>le</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 8 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>SGX Side-Channel Leakage: Page Table Entries</p>
    <p>Also updated in enclave mode!</p>
    <p>Cached as regular data Accessed during address translation</p>
    <p>Flush+Reload cache timing attack!</p>
    <p>void inc_secret( void ) { if (secret) *a += 1; else *b += 1; }</p>
    <p>PTE a</p>
    <p>PTE b</p>
    <p>P a g</p>
    <p>e T</p>
    <p>a b</p>
    <p>le</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 8 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>SGX Side-Channel Leakage: Page Table Entries</p>
    <p>Also updated in enclave mode!</p>
    <p>Cached as regular data Accessed during address translation</p>
    <p>Flush+Reload cache timing attack!</p>
    <p>void inc_secret( void ) { if (secret) *a += 1; else *b += 1; }</p>
    <p>PTE a</p>
    <p>PTE b</p>
    <p>P a g</p>
    <p>e T</p>
    <p>a b</p>
    <p>le</p>
    <p>CLEAR</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 8 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>SGX Side-Channel Leakage: Page Table Entries</p>
    <p>Also updated in enclave mode!</p>
    <p>Cached as regular data Accessed during address translation</p>
    <p>Flush+Reload cache timing attack!</p>
    <p>void inc_secret( void ) { if (secret) *a += 1; else *b += 1; }</p>
    <p>PTE a</p>
    <p>PTE b</p>
    <p>P a g</p>
    <p>e T</p>
    <p>a b</p>
    <p>le</p>
    <p>EENTER</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 8 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>SGX Side-Channel Leakage: Page Table Entries</p>
    <p>Also updated in enclave mode!</p>
    <p>Cached as regular data Accessed during address translation</p>
    <p>Flush+Reload cache timing attack!</p>
    <p>void inc_secret( void ) { if (secret) *a += 1; else *b += 1; }</p>
    <p>PTE a</p>
    <p>PTE b</p>
    <p>P a g</p>
    <p>e T</p>
    <p>a b</p>
    <p>le</p>
    <p>Page Table</p>
    <p>Walk</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 8 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>SGX Side-Channel Leakage: Page Table Entries</p>
    <p>Also updated in enclave mode!</p>
    <p>Cached as regular data Accessed during address translation</p>
    <p>Flush+Reload cache timing attack!</p>
    <p>void inc_secret( void ) { if (secret) *a += 1; else *b += 1; }</p>
    <p>PTE a</p>
    <p>PTE b</p>
    <p>P a g</p>
    <p>e T</p>
    <p>a b</p>
    <p>le</p>
    <p>ACCESSED ?</p>
    <p>Page Table</p>
    <p>Walk</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 8 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>SGX Side-Channel Leakage: Page Table Entries</p>
    <p>Also updated in enclave mode!</p>
    <p>Cached as regular data Accessed during address translation</p>
    <p>Flush+Reload cache timing attack!</p>
    <p>void inc_secret( void ) { if (secret) *a += 1; else *b += 1; }</p>
    <p>PTE a</p>
    <p>PTE b</p>
    <p>P a g</p>
    <p>e T</p>
    <p>a b</p>
    <p>le</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 8 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>SGX Side-Channel Leakage: Page Table Entries</p>
    <p>Also updated in enclave mode!</p>
    <p>Cached as regular data Accessed during address translation</p>
    <p>Flush+Reload cache timing attack!</p>
    <p>void inc_secret( void ) { if (secret) *a += 1; else *b += 1; }</p>
    <p>PTE a</p>
    <p>PTE bC a c h</p>
    <p>e</p>
    <p>FLUSH</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 8 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>SGX Side-Channel Leakage: Page Table Entries</p>
    <p>Also updated in enclave mode!</p>
    <p>Cached as regular data Accessed during address translation</p>
    <p>Flush+Reload cache timing attack!</p>
    <p>void inc_secret( void ) { if (secret) *a += 1; else *b += 1; }</p>
    <p>PTE a</p>
    <p>PTE b</p>
    <p>EENTER</p>
    <p>C a c h</p>
    <p>e</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 8 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>SGX Side-Channel Leakage: Page Table Entries</p>
    <p>Also updated in enclave mode!</p>
    <p>Cached as regular data Accessed during address translation</p>
    <p>Flush+Reload cache timing attack!</p>
    <p>void inc_secret( void ) { if (secret) *a += 1; else *b += 1; }</p>
    <p>PTE a</p>
    <p>PTE bC a c h</p>
    <p>e</p>
    <p>Page Table</p>
    <p>Walk</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 8 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>SGX Side-Channel Leakage: Page Table Entries</p>
    <p>Also updated in enclave mode!</p>
    <p>Cached as regular data Accessed during address translation</p>
    <p>Flush+Reload cache timing attack!</p>
    <p>void inc_secret( void ) { if (secret) *a += 1; else *b += 1; }</p>
    <p>PTE a</p>
    <p>PTE b</p>
    <p>RELOAD</p>
    <p>C a c h</p>
    <p>e</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 8 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>#PF-Less Challenges: Monitoring Repeated Accesses</p>
    <p>Monitor PTEs from concurrent spy thread</p>
    <p>Directed Inter-Processor Interrupt</p>
    <p>Precise Flush+Flush technique</p>
    <p>void inc_secret( void ) { for (i=0; i &lt; len; i++) { if (secret[i]) *a += 1; else *b += 1; } }</p>
    <p>PTE a</p>
    <p>PTE b</p>
    <p>P a g</p>
    <p>e T</p>
    <p>a b</p>
    <p>le</p>
    <p>SECRET = 01010</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 9 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>#PF-Less Challenges: Monitoring Repeated Accesses</p>
    <p>Monitor PTEs from concurrent spy thread</p>
    <p>Directed Inter-Processor Interrupt</p>
    <p>Precise Flush+Flush technique</p>
    <p>void inc_secret( void ) { for (i=0; i &lt; len; i++) { if (secret[i]) *a += 1; else *b += 1; } }</p>
    <p>PTE a</p>
    <p>PTE b</p>
    <p>P a g</p>
    <p>e T</p>
    <p>a b</p>
    <p>le</p>
    <p>ACCESSED ?</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 9 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>#PF-Less Challenges: Monitoring Repeated Accesses</p>
    <p>Monitor PTEs from concurrent spy thread</p>
    <p>Directed Inter-Processor Interrupt</p>
    <p>Precise Flush+Flush technique</p>
    <p>void inc_secret( void ) { for (i=0; i &lt; len; i++) { if (secret[i]) *a += 1; else *b += 1; } }</p>
    <p>PTE a</p>
    <p>PTE b</p>
    <p>P a g</p>
    <p>e T</p>
    <p>a b</p>
    <p>le</p>
    <p>ACCESSED ?</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 9 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>#PF-Less Challenges: Monitoring Repeated Accesses</p>
    <p>Monitor PTEs from concurrent spy thread</p>
    <p>Directed Inter-Processor Interrupt</p>
    <p>Precise Flush+Flush technique</p>
    <p>void inc_secret( void ) { for (i=0; i &lt; len; i++) { if (secret[i]) *a += 1; else *b += 1; } }</p>
    <p>PTE a</p>
    <p>PTE b</p>
    <p>P a g</p>
    <p>e T</p>
    <p>a b</p>
    <p>le</p>
    <p>ACCESSED ?</p>
    <p>IRQ/AEX</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 9 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>#PF-Less Challenges: Monitoring Repeated Accesses</p>
    <p>Monitor PTEs from concurrent spy thread</p>
    <p>Directed Inter-Processor Interrupt</p>
    <p>Precise Flush+Flush technique</p>
    <p>void inc_secret( void ) { for (i=0; i &lt; len; i++) { if (secret[i]) *a += 1; else *b += 1; } }</p>
    <p>PTE a</p>
    <p>PTE b</p>
    <p>P a g</p>
    <p>e T</p>
    <p>a b</p>
    <p>le</p>
    <p>ACCESSED ?</p>
    <p>IRQ/AEX</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 9 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>#PF-Less Challenges: Monitoring Repeated Accesses</p>
    <p>Monitor PTEs from concurrent spy thread</p>
    <p>Directed Inter-Processor Interrupt</p>
    <p>Precise Flush+Flush technique</p>
    <p>void inc_secret( void ) { for (i=0; i &lt; len; i++) { if (secret[i]) *a += 1; else *b += 1; } }</p>
    <p>PTE a</p>
    <p>PTE b</p>
    <p>P a g</p>
    <p>e T</p>
    <p>a b</p>
    <p>le</p>
    <p>FLUSH</p>
    <p>IRQ/AEX</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 9 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>PTE Flush+Flush: A High-Resolution, Low-Latency Channel</p>
    <p>Resolution Challenge</p>
    <p>access detection latency  #PF-attacks</p>
    <p>Interrupt granularity:</p>
    <p>/ A/D monitoring:  430 nop /  175 add / Flush+Reload: might miss victim access (TLB!) , Flush+Flush: interrupt within trigger instruction (&gt; 99.8%)</p>
    <p>(a) Victim PTE access maccess</p>
    <p>(b) Flush+Reload hit</p>
    <p>(c) Flush+Reload miss reload</p>
    <p>(d) Flush+Flush hit flush</p>
    <p>time</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 10 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>PTE Flush+Flush: A High-Resolution, Low-Latency Channel</p>
    <p>Resolution Challenge</p>
    <p>access detection latency  #PF-attacks</p>
    <p>Interrupt granularity:</p>
    <p>/ A/D monitoring:  430 nop /  175 add</p>
    <p>/ Flush+Reload: might miss victim access (TLB!) , Flush+Flush: interrupt within trigger instruction (&gt; 99.8%)</p>
    <p>(a) Victim PTE access maccess</p>
    <p>(b) Flush+Reload hit</p>
    <p>(c) Flush+Reload miss reload</p>
    <p>(d) Flush+Flush hit flush</p>
    <p>time</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 10 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>PTE Flush+Flush: A High-Resolution, Low-Latency Channel</p>
    <p>Resolution Challenge</p>
    <p>access detection latency  #PF-attacks</p>
    <p>Interrupt granularity:</p>
    <p>/ A/D monitoring:  430 nop /  175 add / Flush+Reload: might miss victim access (TLB!)</p>
    <p>, Flush+Flush: interrupt within trigger instruction (&gt; 99.8%)</p>
    <p>(a) Victim PTE access maccess</p>
    <p>(b) Flush+Reload hit</p>
    <p>(c) Flush+Reload miss reload</p>
    <p>(d) Flush+Flush hit flush</p>
    <p>time</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 10 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>PTE Flush+Flush: A High-Resolution, Low-Latency Channel</p>
    <p>Resolution Challenge</p>
    <p>access detection latency  #PF-attacks</p>
    <p>Interrupt granularity:</p>
    <p>/ A/D monitoring:  430 nop /  175 add / Flush+Reload: might miss victim access (TLB!) , Flush+Flush: clflush completes earlier for uncached data</p>
    <p>Gruss et al. Flush+Flush: a fast and stealthy cache attack, DIMVA 2016 [GMWM16]</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 10 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>PTE Flush+Flush: A High-Resolution, Low-Latency Channel</p>
    <p>Resolution Challenge</p>
    <p>access detection latency  #PF-attacks</p>
    <p>Interrupt granularity:</p>
    <p>/ A/D monitoring:  430 nop /  175 add / Flush+Reload: might miss victim access (TLB!) , Flush+Flush: interrupt within trigger instruction (&gt; 99.8%)</p>
    <p>(a) Victim PTE access maccess</p>
    <p>(b) Flush+Reload hit</p>
    <p>(c) Flush+Reload miss reload</p>
    <p>(d) Flush+Flush hit flush</p>
    <p>time</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 10 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>Attacking Libgcrypt EdDSA</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 11 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>Attacking Libgcrypt EdDSA</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 11 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>Attacking Libgcrypt EdDSA</p>
    <p>EdDSA secret scalar not stored in &quot;secure memory&quot; !</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 11 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>Attacking Libgcrypt EdDSA</p>
    <p>Secret-dependent control flow</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 11 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>Attacking Libgcrypt EdDSA: A/D Channel</p>
    <p>gcry_free</p>
    <p>...</p>
    <p>mpi_test_bit</p>
    <p>mpi_ec_add_p</p>
    <p>mpi_ec_mul_p</p>
    <p>mpi_add</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>Memory layout</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 12 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>Attacking Libgcrypt EdDSA: A/D Channel</p>
    <p>gcry_free</p>
    <p>...</p>
    <p>mpi_test_bit</p>
    <p>mpi_ec_add_p</p>
    <p>mpi_ec_mul_p</p>
    <p>mpi_add</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>ACCESSED ?</p>
    <p>Memory layout</p>
    <p>Monitor trigger page</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 12 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>Attacking Libgcrypt EdDSA: A/D Channel</p>
    <p>gcry_free</p>
    <p>...</p>
    <p>mpi_test_bit</p>
    <p>mpi_ec_add_p</p>
    <p>mpi_ec_mul_p</p>
    <p>mpi_add</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>INTERRUPT</p>
    <p>Memory layout</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 12 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>Attacking Libgcrypt EdDSA: A/D Channel</p>
    <p>gcry_free</p>
    <p>...</p>
    <p>mpi_test_bit</p>
    <p>mpi_ec_add_p</p>
    <p>mpi_ec_mul_p</p>
    <p>mpi_add</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>ACCESSED ?</p>
    <p>ACCESSED ?</p>
    <p>Record page set 0011</p>
    <p>Memory layout</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 12 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>Attacking Libgcrypt EdDSA: A/D Channel</p>
    <p>gcry_free</p>
    <p>...</p>
    <p>mpi_test_bit</p>
    <p>mpi_ec_add_p</p>
    <p>mpi_ec_mul_p</p>
    <p>mpi_add</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>RESUME</p>
    <p>Full 512-bit key recovery, single run</p>
    <p>Memory layout</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 12 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>Attacking Libgcrypt EdDSA: Cache-Only Channel</p>
    <p>gcry_free</p>
    <p>...</p>
    <p>mpi_test_bit</p>
    <p>mpi_ec_add_p</p>
    <p>mpi_ec_mul_p</p>
    <p>mpi_add</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>Memory layout</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 13 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>Attacking Libgcrypt EdDSA: Cache-Only Channel</p>
    <p>gcry_free</p>
    <p>...</p>
    <p>mpi_test_bit</p>
    <p>mpi_ec_add_p</p>
    <p>mpi_ec_mul_p</p>
    <p>mpi_add</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>Only 11 distinct PTE cache lines</p>
    <p>Memory layout</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 13 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>Attacking Libgcrypt EdDSA: Cache-Only Channel</p>
    <p>errno_loc ...</p>
    <p>errno_plt</p>
    <p>mpi_test_bit</p>
    <p>mpi_ec_mul_p</p>
    <p>_gpgrt_lock</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>Memory layout</p>
    <p>int_free</p>
    <p>gpgrt_lock</p>
    <p>do_malloc ...</p>
    <p>...</p>
    <p>...</p>
    <p>FLUSH</p>
    <p>Monitor isolated trigger page</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 13 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>Attacking Libgcrypt EdDSA: Cache-Only Channel</p>
    <p>errno_loc ...</p>
    <p>errno_plt</p>
    <p>mpi_test_bit</p>
    <p>mpi_ec_mul_p</p>
    <p>_gpgrt_lock</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>Memory layout</p>
    <p>int_free</p>
    <p>gpgrt_lock</p>
    <p>do_malloc ...</p>
    <p>...</p>
    <p>...</p>
    <p>INTERRUPT</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 13 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>Attacking Libgcrypt EdDSA: Cache-Only Channel</p>
    <p>errno_loc ...</p>
    <p>errno_plt</p>
    <p>mpi_test_bit</p>
    <p>mpi_ec_mul_p</p>
    <p>_gpgrt_lock</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>Memory layout</p>
    <p>int_free</p>
    <p>gpgrt_lock</p>
    <p>do_malloc ...</p>
    <p>...</p>
    <p>...</p>
    <p>RELOAD</p>
    <p>Record bigger page set</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 13 / 14</p>
  </div>
  <div class="page">
    <p>Stealthy Page Table-Based Attacks</p>
    <p>Attacking Libgcrypt EdDSA: Cache-Only Channel</p>
    <p>errno_loc ...</p>
    <p>errno_plt</p>
    <p>mpi_test_bit</p>
    <p>mpi_ec_mul_p</p>
    <p>_gpgrt_lock</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>Memory layout</p>
    <p>int_free</p>
    <p>gpgrt_lock</p>
    <p>do_malloc ...</p>
    <p>...</p>
    <p>...</p>
    <p>Regex pattern match -&gt; 485/512-bit recovery, single-run</p>
    <p>RELOAD</p>
    <p>Record bigger page set</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 13 / 14</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Road Map</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 13 / 14</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Conclusion</p>
    <p>Take-Away Message</p>
    <p>Enclave memory accesses can be learned without triggering page faults.</p>
    <p>Do not focus on attack side-effects (faults, frequent enclave preemptions)</p>
    <p>Address root causes of information leakage:</p>
    <p>Unprotected page table memory (Sanctum [CLD16])</p>
    <p>Secret-dependent control flow/data access (Libgcrypt patch)</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 14 / 14</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Conclusion</p>
    <p>Take-Away Message</p>
    <p>Enclave memory accesses can be learned without triggering page faults.</p>
    <p>Do not focus on attack side-effects (faults, frequent enclave preemptions)</p>
    <p>Address root causes of information leakage:</p>
    <p>Unprotected page table memory (Sanctum [CLD16])</p>
    <p>Secret-dependent control flow/data access (Libgcrypt patch)</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 14 / 14</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Conclusion</p>
    <p>Take-Away Message</p>
    <p>Enclave memory accesses can be learned without triggering page faults.</p>
    <p>Do not focus on attack side-effects (faults, frequent enclave preemptions)</p>
    <p>Address root causes of information leakage:</p>
    <p>Unprotected page table memory (Sanctum [CLD16])</p>
    <p>Secret-dependent control flow/data access (Libgcrypt patch)</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 14 / 14</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Thank you! Questions? https://github.com/jovanbulck/sgx-pte</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 14 / 14</p>
  </div>
  <div class="page">
    <p>Appendix</p>
    <p>References I</p>
    <p>V. Costan and S. Devadas.</p>
    <p>Intel SGX explained. Technical report, Computer Science and Artificial Intelligence Laboratory MIT, 2016. https://eprint.iacr.org/2016/086.pdf.</p>
    <p>V. Costan, I. Lebedev, and S. Devadas.</p>
    <p>Sanctum: Minimal hardware extensions for strong software isolation. In 25th USENIX Security Symposium, pp. 857874. USENIX Association, 2016.</p>
    <p>D. Gruss, C. Maurice, K. Wagner, and S. Mangard.</p>
    <p>Flush+flush: A fast and stealthy cache attack. In Detection of Intrusions and Malware, and Vulnerability Assessment (DIMVA), 2016.</p>
    <p>S. Shinde, Z. L. Chua, V. Narayanan, and P. Saxena.</p>
    <p>Preventing page faults from telling your secrets. In Proceedings of the 11th ACM on Asia Conference on Computer and Communications Security (ASIA CCS), pp. 317328. ACM, 2016.</p>
    <p>M.-W. Shih, S. Lee, T. Kim, and M. Peinado.</p>
    <p>T-SGX: Eradicating Controlled-Channel Attacks Against Enclave Programs. In 24th Annual Network and Distributed System Security Symposium (NDSS), 2017.</p>
    <p>C.-C. Tsai, D. E. Porter, and M. Vij.</p>
    <p>Graphene-SGX: A practical library OS for unmodified applications on SGX. In 2017 USENIX Annual Technical Conference (USENIX ATC). USENIX Association, 2017.</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 15 / 14</p>
  </div>
  <div class="page">
    <p>Appendix</p>
    <p>References II</p>
    <p>Y. Xu, W. Cui, and M. Peinado.</p>
    <p>Controlled-channel attacks: Deterministic side channels for untrusted operating systems. In 2015 IEEE Symposium on Security and Privacy, pp. 640656. IEEE, 2015.</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 16 / 14</p>
  </div>
  <div class="page">
    <p>Appendix</p>
    <p>IPI Latency Microbenchmarks</p>
    <p>Table: IPI latency in terms of the number of instructions executed by the victim after accessing the trigger page.</p>
    <p>Accessed Flush+Flush</p>
    <p>Experiment Mean  Mean  Zero %</p>
    <p>nop 431.70 34.11 0.65 17.65 99.84 add register 176.30 14.60 0.15 6.18 99.94 add memory 32.45 2.79 0.06 1.92 99.88 nop nocache 0.02 0.39</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 17 / 14</p>
  </div>
  <div class="page">
    <p>Appendix</p>
    <p>Putting it All Together: Inferring Page Access Patterns</p>
    <p>Re-usable attack framework: Graphene-SGX [TPV17]</p>
    <p>Explicitly monitor trigger page(s)</p>
    <p>Capture max info in page sets  #PF-sequences Offline analysis: extract access patterns</p>
    <p>overcome measurement noise/ latency/ granularity</p>
    <p>App Binarylibc</p>
    <p>Graphene TRTS</p>
    <p>Enclave</p>
    <p>Graphene URTSApp</p>
    <p>spy</p>
    <p>PTE Set</p>
    <p>Driver Page Table</p>
    <p>Kernel</p>
    <p>Hardware</p>
    <p>IPI E 6</p>
    <p>Jo Van Bulck et al. Telling Your Secrets Without Page Faults 18 / 14</p>
  </div>
</Presentation>
