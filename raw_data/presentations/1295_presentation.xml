<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Theophilus Benson (tbenson@cs.wisc.edu) Aditya Akella (akella@cs.wisc.edu) David A Maltz (dmaltz@microsoft.com)</p>
  </div>
  <div class="page">
    <p>Intricate logical and physical topologies  Diverse network devices</p>
    <p>Operating on different layers  Requiring different command sets</p>
    <p>Operators constantly tweak network configurations  Implementation of new admin policies  Quickfixes in response to crises</p>
    <p>Diverse goals  E.g. QOS, security, routing</p>
    <p>Complex configuration 2</p>
  </div>
  <div class="page">
    <p>Interface vlan901 ip address 10.1.1.2 255.0.0.0</p>
    <p>ip accessgroup 9 out ! Router ospf 1 routerid 10.1.2.23 network 10.0.0.0 0.255.255.255 !</p>
    <p>accesslist 9 10.1.0.0 0.0.255.255</p>
    <p>Interface vlan901 ip address 10.1.1.5 255.0.0.0</p>
    <p>ip accessgroup 9 out ! Router ospf 1 routerid 10.1.2.23 network 10.0.0.0 0.255.255.255 !</p>
    <p>accesslist 9 10.1.0.0 0.0.255.255</p>
    <p>Adding a new department with hosts spread across 3 buildings</p>
    <p>Interface vlan901 ip address 10.1.1.8 255.0.0.0</p>
    <p>ip accessgroup 9 out ! Router ospf 1 routerid 10.1.2.23 network 10.0.0.0 0.255.255.255 !</p>
    <p>accesslist 9 10.1.0.0 0.0.255.255</p>
    <p>Department1 Department1 Department1 3</p>
  </div>
  <div class="page">
    <p>Complexity leads to misconfiguration  Cant measure complexity of network</p>
    <p>design  Other communities have benchmarks for</p>
    <p>complexity  No complexity metric  cant</p>
    <p>understand difficulty of future changes  Quick fix now may complicate future</p>
    <p>changes  Hard to select from alternate configs</p>
    <p>Ability to predict difficulty of future changes is essential  Reduce management cost, operator error</p>
  </div>
  <div class="page">
    <p>Our metrics:  Succinctly describe design complexity  Can be automatically calculated from config files  Align with operators mental models  Predict difficulty of future changes</p>
    <p>Empirical study of complexity of 7 networks  Validated metrics through operator interviews</p>
    <p>Questionnaire: tasks to quantify complexity  Network specific  Common to all operators</p>
    <p>Focus on layer 3</p>
    <p>Motivation</p>
  </div>
  <div class="page">
    <p>Networks Mean file size</p>
    <p>Number of routers</p>
    <p>Univ1 2535 12</p>
    <p>Univ2 560 19</p>
    <p>Univ3 3060 24</p>
    <p>Univ4 1526 24</p>
    <p>Enet1 278 10</p>
    <p>Enet2 200 83</p>
    <p>Enet3 600 19 6</p>
    <p>Complexity is unrelated to size or line count  Complex  Simple</p>
  </div>
  <div class="page">
    <p>Implementation complexity: difficulty of implementing policies  Referential dependence: the complexity behind configuring routers correctly</p>
    <p>Roles: the complexity behind identifying roles for routers in implementing a networks policy (See paper for details)</p>
    <p>Inherent complexity: complexity of the policies themselves  Uniformity: complexity due to special cases in policies  Lowerbounds implementation complexity</p>
  </div>
  <div class="page">
    <p>Referential complexity  Inherent complexity  Insights into complexity  Related work and conclusion</p>
  </div>
  <div class="page">
    <p>Referential graph for shown config  Intrafile links, e.g., passiveinterfaces, and accessgroup.</p>
    <p>Interfile links  Global network symbols, e.g., subnet, and VLANs.</p>
    <p>ospf1</p>
    <p>Vlan901</p>
    <p>Accesslist 9</p>
    <p>Accesslist 12</p>
    <p>Subnet 1</p>
    <p>ospf 1</p>
    <p>Vlan30</p>
    <p>Accesslist 11 Accesslist 10</p>
    <p>Routemap 12</p>
  </div>
  <div class="page">
    <p>Operators objective: short dependency chains in configuration  Few moving parts (few dependencies)</p>
    <p>Referential metric should capture:  Difficulty of setting up layer 3 functionality  Extent of dependencies</p>
    <p>ospf 1</p>
    <p>Vlan30</p>
    <p>Accesslist 11 Accesslist 10</p>
    <p>Routemap 12</p>
  </div>
  <div class="page">
    <p>Metric: # ref links  greater # links means higher complexity  Normalize by # devices  Holistic view of network</p>
    <p>Metric: # routing instances  Routing instance = partition of routing protocols into largest atomic domains of control</p>
    <p>Routing instance = adjacent routing process (same protocol)</p>
    <p>Difficulty of setting up routing 11</p>
  </div>
  <div class="page">
    <p>Network (#routers)</p>
    <p>Avg Ref links per router</p>
    <p>#Routing instances</p>
    <p>Univ1 (12) 42 14</p>
    <p>Univ2 (19) 8 3</p>
    <p>Univ3 (24) 4 1</p>
    <p>Univ4 (24) 75 2</p>
    <p>Enet1 (10) 2 1</p>
    <p>Enet2 (83) 8 10</p>
    <p>Enet3 (19) 22 8</p>
    <p>Complexity unrelated to network size  Complexity based on implementation details  Large network could be simple</p>
  </div>
  <div class="page">
    <p>Network Avg Ref links per router</p>
    <p>#Routing instances</p>
    <p>Univ1 (12) 42 14</p>
    <p>Univ3 (24) 4 1</p>
    <p>Enet1 (10) 2 1</p>
    <p>Num steps #changes to routing</p>
    <p>Task: Add a new subnet at a randomly chosen router</p>
    <p>Enet1, Univ3: simple routing design  redistribute entire IP space</p>
    <p>Univ1: complex routing design  modify specific routing instances  Multiple routing instances add complexity</p>
    <p>Metric not absolute but higher means more complex 13</p>
  </div>
  <div class="page">
    <p>Policies determine a networks design and configuration complexity  Identical or similar policies  Allopen or mostlyclosed networks  Easy to configure</p>
    <p>Subtle distinctions across groups of users:  Multiple roles, complex design, complex referential profile  Hard to configure: requires multiple special cases</p>
    <p>Challenges  Mining implemented policies  Quantifying similarities/consistency</p>
  </div>
  <div class="page">
    <p>Operators goal = connectivity matrix between hosts</p>
    <p>Reachability set (Xie et al.) = set of packets allowed between 2 routers  One reachability set for each pair of routers</p>
    <p>(total of N2 for a network with N routers)  Reachability sets &gt; connectivity matrix</p>
    <p>between routers  Affected by data/control plane mechanisms</p>
    <p>Router level matrix  More efficient for computing set operations  No loss of information</p>
    <p>Conducted an empirical study on the location and duration of micro-bursts (congestion) in over 30 data centers  Conducted an empirical study on the location and duration of micro-bursts (congestion) in over 30 data centers</p>
  </div>
  <div class="page">
    <p>Variability in reachability sets between pairs of routers</p>
    <p>Metric: Uniformity  Entropy of reachability sets.  Simplest: log(N)  all routers should have same reachability to a destination C</p>
    <p>Most complex: log(N2)  each router has a different reachability to a destination C</p>
    <p>A B</p>
    <p>C D</p>
    <p>E</p>
    <p>R(A,C)</p>
    <p>R(D,C)</p>
    <p>R(B,C)</p>
    <p>R(C,C)</p>
    <p>A B C D E</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>E</p>
    <p>A B C D E</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>E</p>
  </div>
  <div class="page">
    <p>Network Entropy (diff from ideal)</p>
    <p>Univ1 3.61 (0.03)</p>
    <p>Univ2 6.14 (1.62)</p>
    <p>Univ3 4.63 (0.05)</p>
    <p>Univ4 5.70 (1.12)</p>
    <p>Enet1 2.8 (0.0)</p>
    <p>Enet2 6.69 (0.22)</p>
    <p>Enet3 5.34 (1.09)</p>
    <p>Simple policies  Entropy close to ideal</p>
    <p>Univ3 &amp; Enet1: simple policy  Filtering at higher levels</p>
    <p>Univ1:  Router was not redistributing local subnet</p>
    <p>BUG!</p>
    <p>Network (#routers)</p>
    <p>Avg Ref links per router</p>
    <p>#Routing instances</p>
    <p>Univ1 (12) 42 14</p>
  </div>
  <div class="page">
    <p>Implementation vs. inherent complexity  A few networks have simple configurations, but most are complex</p>
    <p>Most of the networks studied have inherently simple policies</p>
    <p>Why is implementation complex?</p>
    <p>Networks (#routers)</p>
    <p>Ref links</p>
    <p>Entropy (diff from ideal)</p>
    <p>Univ1 (12)</p>
    <p>Univ2 (19)</p>
    <p>Univ3 (24)</p>
    <p>Univ4 (24)</p>
    <p>Enet1 (10)</p>
    <p>Enet2 (83)</p>
    <p>Enet3 (19)</p>
  </div>
  <div class="page">
    <p>Network evolution  Univ1: high referential link count due to dangling references (to interfaces)</p>
    <p>Univ2: caught in the midst of a major restructuring</p>
    <p>Optimizing for cost and scalability  Univ1: simple policy, complex config  Cheaper to use OSPF on core routers and RIP on edge routers  Only RIP is not scalable  Only OSPF is too expensive</p>
    <p>N/w (#rtrs)</p>
    <p>Ref links per</p>
    <p>router</p>
    <p>Entrop y</p>
    <p>(ideal)</p>
    <p>Univ1 (12)</p>
    <p>Univ2 (19)</p>
  </div>
  <div class="page">
    <p>Reachability sets  Many studies on mining objectives/policies [e.g. Xie et al.] to check inconsistencies</p>
    <p>Measuring complexity  Protocol complexity [Ratnasamy et. al, Candea et al.]  Glue logic [Le et al.]: complexity of route redistribution in networks</p>
    <p>Informs clean slate  Inherent support for manageability [e.g., Ethane, 4D]</p>
  </div>
  <div class="page">
    <p>Metrics that capture complexity of network design  Predict difficulty of making changes</p>
    <p>Empirical study of complexity  Evaluated commercial and public enterprises</p>
    <p>Results show:  Simple policies are often implemented in complex ways  Complexity introduced by nontechnical factors</p>
    <p>Future work:  Apply to ISP Networks  Absolute vs. relative complexity</p>
  </div>
</Presentation>
