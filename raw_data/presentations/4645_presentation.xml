<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>ICCAD 2009 ALCom Lab</p>
    <p>Interpolating Functions from Large Boolean Relations</p>
    <p>Jie-Hong Roland Jiang, Hsuan-Po Lin, and Wei-Lun Hung</p>
    <p>Grad. Inst. of Electronics Eng. / Dept of Electrical Eng.</p>
    <p>National Taiwan University</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Our Approach</p>
    <p>Experimental Results</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Relations vs. Functions</p>
    <p>Boolean relation R(X, Y)  Allow one-to-many</p>
    <p>mappings  Can describe non</p>
    <p>deterministic behavior</p>
    <p>More generic than functions</p>
    <p>Boolean function F(X)  Disallow one-to-many</p>
    <p>mappings  Can only describe</p>
    <p>deterministic behavior</p>
    <p>A special case of relation</p>
    <p>x1x2 y1y2</p>
    <p>x1x2 y1y2</p>
    <p>f1x1 x2 f2 x1 x2</p>
  </div>
  <div class="page">
    <p>Total Relations vs. Partial Relations</p>
    <p>Total relation  Every input element</p>
    <p>is mapped to at least one output element</p>
    <p>Partial relation  Some input element</p>
    <p>is not mapped to any output element</p>
    <p>x1x2 y</p>
    <p>x1x2 y</p>
  </div>
  <div class="page">
    <p>Totalization</p>
    <p>A partial relation can be totalized  Assume that the input element not</p>
    <p>mapped to any output element is a dont care</p>
    <p>x1x2 y</p>
    <p>x1x2 y Partial relation</p>
    <p>Totalize</p>
    <p>Total relation</p>
    <p>T(X, y) = R(X, y) y.  R(X, y)</p>
  </div>
  <div class="page">
    <p>Application of Boolean Relations  In high-level design, Boolean</p>
    <p>relations can be used to describe (nondeterministic) specifications</p>
    <p>In gate-level design, Boolean relations can be used to characterize the flexibility of sub-circuits  Boolean relations are more powerful than</p>
    <p>traditional dont-care representations</p>
    <p>x1x2 y1y2</p>
  </div>
  <div class="page">
    <p>Needs of Relation Determinization  For hardware implement of a system,</p>
    <p>we need functions rather than relations  Physical realization are deterministic by</p>
    <p>nature  One input stimulus results in one output</p>
    <p>response</p>
  </div>
  <div class="page">
    <p>Needs of Relation Determinization  To simplify implementation, we can</p>
    <p>explore the flexibilities described by a relation for optimization</p>
    <p>f1x1 x2 f2 x1 x2</p>
    <p>f1x2 f2 x1</p>
    <p>x1x2 y1y2</p>
    <p>z1z2</p>
    <p>z1</p>
    <p>z2</p>
    <p>z1</p>
    <p>z2</p>
    <p>y1</p>
    <p>y2</p>
    <p>y1</p>
    <p>y2</p>
    <p>x1 x2</p>
    <p>x1</p>
    <p>x2</p>
  </div>
  <div class="page">
    <p>Problem Statement</p>
    <p>Given a nondeterministic Boolean relation R(X, Y), how to determinize and extract functions from it?</p>
    <p>For a deterministic total relation, we can uniquely extract the corresponding functions</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Prior Work  BDD- or SOP-based representation</p>
    <p>Not scalable  Focused on function optimization</p>
    <p>Ours  AIG representation  Focus on scalability with reasonable</p>
    <p>optimization quality</p>
  </div>
  <div class="page">
    <p>Enabling Technique</p>
    <p>Craig Interpolation Theorem</p>
    <p>If A  B is UNSAT for propositional formulas A ,B,</p>
    <p>then there exists an interpolant I such that</p>
    <p>A  I</p>
    <p>I  B is UNSAT  I refers only to the common</p>
    <p>variables of A and B I BA</p>
  </div>
  <div class="page">
    <p>Single-Output Relations</p>
    <p>For a single-output total relation R(X, y), we derive a function f for variable y using interpolation</p>
    <p>x1x2 y I</p>
    <p>BA</p>
    <p>A R(X,0) Minimal care onset of f</p>
    <p>B R(X,1) Minimal care offset of f</p>
    <p>R(X,0)   R(X,1) is UNSAT</p>
  </div>
  <div class="page">
    <p>Nave derivation of f is by cofactoring  R(X,1) (largest onset of f) or   R(X,0) (smallest onset of f)</p>
    <p>Interpolantion vs. Cofactoring</p>
    <p>x1x2 y</p>
    <p>R(X,0) I R(X,1)</p>
    <p>B= R(X,1) Largest onset of f</p>
    <p>A= R(X,0) Smallest onset of f</p>
    <p>The function extracted from a single-output relation using cofactor is usually of similar size as the relation</p>
    <p>Interpolation may extract smaller functions and prevent AIG explosion</p>
    <p>I</p>
    <p>BA 00</p>
  </div>
  <div class="page">
    <p>Multiple-Output Relations</p>
    <p>Two-phase computation:  Phase 1 : Backward reduction</p>
    <p>Reduce to single-output case R(X, y1, , yn)  y2, , yn. R(x, y1, , yn)</p>
    <p>Existential quantification using expansion y. (x,y) = (x,1) + (x,0)</p>
    <p>Existential quantification using substitution [CAV 2009]  y. (x,y) = (x, f(x))</p>
    <p>Phase 2 : Forward substitution  Extract functions</p>
  </div>
  <div class="page">
    <p>Multiple-Output Relations</p>
    <p>Example (Xp)</p>
    <p>Phase1: (expansion reduction) y3.R(X, y1, y2 , y3)  R</p>
    <p>(3)(X, y1, y2) y2.R</p>
    <p>(3)(X, y1, y2)  R (2)(X, y1)</p>
    <p>y1 y2X y3</p>
    <p>f3</p>
    <p>X</p>
    <p>RR(3)R(2)</p>
    <p>Phase2: R(2)(X, y1)  y1 = f1</p>
    <p>(X) R(3)(X, y1, y2)  R</p>
    <p>(3)(X, f1(X), y2)  y2 = f2 (X)</p>
    <p>R(X, y1, y2 , y3)  R(X, f1(X), f2(X), y2)  y3 = f3 (X)</p>
    <p>f1</p>
    <p>X f2</p>
    <p>X</p>
  </div>
  <div class="page">
    <p>Multiple-Output Relations</p>
    <p>Example (St)</p>
    <p>Phase1: (substitution reduction) R(X, y1, y2 , y3)  y3 = f3(X , y1, y2 )  R</p>
    <p>&lt;3&gt;(X, y1, y2) R&lt;3&gt;(X, y1, y2)  y2 = f2(X , y1 )  R</p>
    <p>&lt;2&gt;(X, y1)</p>
    <p>y1 y2X y3</p>
    <p>f3</p>
    <p>X</p>
    <p>RR&lt;3&gt;R&lt;2&gt;</p>
    <p>Phase2: R&lt;2&gt;(X, y1)  y1 = f1</p>
    <p>(X) R&lt;3&gt;(X, y1, y2)  R</p>
    <p>&lt;3&gt;(X, f1(X), y2)  y2 = f2 (X)</p>
    <p>R(X, y1, y2 , y3)  R(X, f1(X), f2(X), y2)  y3 = f3 (X)y1X</p>
    <p>f3'</p>
    <p>y2 y1X</p>
    <p>f2'</p>
    <p>f2</p>
    <p>X</p>
    <p>f1</p>
    <p>X</p>
  </div>
  <div class="page">
    <p>Multiple-Output Relations</p>
    <p>Example (SD)</p>
    <p>Phase1: (substitution reduction) R(X, y1, y2 , y3)  y3 = f3(X , y1, y2 )  R</p>
    <p>&lt;3&gt;(X, y1, y2) R&lt;3&gt;(X, y1, y2)  y2 = f2(X , y1 )  R</p>
    <p>&lt;2&gt;(X, y1) R&lt;2&gt;(X, y1, y2)  y1 = f1(X)y1 y2X y3</p>
    <p>f3</p>
    <p>X</p>
    <p>RR&lt;3&gt;R&lt;2&gt;</p>
    <p>Phase2: (interpolation for deterministic rel.) D = R  i (yi  fi) fi</p>
    <p>(X) = Interpolant(Dyi, D yi)y1X</p>
    <p>f3'</p>
    <p>y2 y1X</p>
    <p>f2'</p>
    <p>f2</p>
    <p>X</p>
    <p>f1</p>
    <p>X</p>
    <p>X</p>
    <p>f1'</p>
  </div>
  <div class="page">
    <p>Experimental Setup</p>
    <p>Our methods were implemented in ABC using MiniSAT</p>
    <p>We prepare Boolean relations by computing the transition relations of ISCAS and ITC circuits  Insert dont cares to introduce</p>
    <p>nondeterminism  Represent transition relations using AIGs</p>
  </div>
  <div class="page">
    <p>Experimental Results  w/o DC</p>
    <p>Original BDD Xp</p>
    <p>Circuit (#pi, #po)</p>
    <p>#n #l #v #n #l #v time #n #l #v time</p>
    <p>s5378 (214, 179) 624 12 1570 783 10 1561 286.4 1412 25 1561 49.6</p>
    <p>s9234.1 (247, 211) 1337 25 3065 --- --- --- --- 7837 59 2764 158.6</p>
    <p>s13207 (700, 669) 1979 23 3836 --- --- --- --- 5772 140 3554 769.3</p>
    <p>s15850 (611, 597) 2648 36 15788 --- --- --- --- 42622 188 13348 2700</p>
    <p>s35932 (1763, 1728) 8820 12 7099 --- --- --- --- 7280 10 6843 4178.5</p>
    <p>s38584 (1464, 1452) 9664 26 19239 --- --- --- --- 22589 277 17678 5772.8</p>
    <p>b10 (28, 17) 167 11 159 200 10 152 0.1 197 8 152 0.9</p>
    <p>b11 (38, 31) 482 21 416 1301 18 394 0.9 1504 57 394 5.1</p>
    <p>b12 (126, 121) 953 16 1639 1663 14 1574 56.7 2166 25 1574 24</p>
    <p>b13 (63, 53) 231 10 383 240 10 349 3.1 224 10 349 2.2</p>
    <p>Ratio 1 1 1 1 3.40 4.16 0.91</p>
    <p>Ratio 2 1 1 1 1.70 0.89 0.97 2.24 1.79 0.97</p>
    <p>Ratio 3 1 1 1 1.31 2.02 1</p>
    <p>--- : BDD nodes are over 500K during computation</p>
  </div>
  <div class="page">
    <p>Experimental Results  w/ DC</p>
    <p>Original BDD Xp</p>
    <p>Circuit (#pi, #po)</p>
    <p>#n #l #v #n #l #v time #n #l #v time</p>
    <p>s5378 (214, 179) 624 12 1570 769 11 1561 200.2 1332 25 1561 49.1</p>
    <p>s9234.1 (247, 211) 1337 25 3065 --- --- --- --- 7696 55 2765 166.7</p>
    <p>s13207 (700, 669) 1979 23 3836 --- --- --- --- 5818 202 3554 897.9</p>
    <p>s15850 (611, 597) 2648 36 15788 --- --- --- --- 40078 136 13309 2596.9</p>
    <p>s35932 (1763, 1728) 8820 12 7099 --- --- --- --- 7360 25 6843 4811.1</p>
    <p>s38584 (1464, 1452) 9664 26 19239 --- --- --- --- 23726 331 17676 5476.7</p>
    <p>b10 (28, 17) 167 11 159 199 9 152 0.1 193 8 152 1.0</p>
    <p>b11 (38, 31) 482 21 416 1221 20 394 0.9 1562 52 394 5.5</p>
    <p>b12 (126, 121) 953 16 1639 1619 15 1574 452.5 2261 23 1574 27.0</p>
    <p>b13 (63, 53) 231 10 383 243 11 349 1.6 229 12 349 2.5</p>
    <p>Ratio 1 1 1 1 3.35 4.53 0.91</p>
    <p>Ratio 2 1 1 1 1.65 0.94 0.97 2.27 1.71 0.97</p>
    <p>Ratio 3 1 1 1 1.38 1.82 1</p>
    <p>--- : BDD nodes are over 500K during computation</p>
  </div>
  <div class="page">
    <p>Experimental Results (contd)</p>
    <p>Further synthesis by ABC commands collapse and dc2</p>
    <p>Original Xp</p>
    <p>Circuit #n #l #v #n_c #l_C #v_C #n #l #v #n_c #l_C #v_C time_c</p>
    <p>s5378 624 12 1570 772 11 1561 1412 25 1561 760 11 1561 0.4</p>
    <p>s9234.1 1337 25 3065 2791 25 2764 7837 59 2764 2751 22 2764 6.4</p>
    <p>s13207 1979 23 3836 2700 20 3554 5772 140 3554 2709 20 3554 5.2</p>
    <p>S15850* 2648 36 15788 --- --- --- 42622 188 13348 --- --- --- --</p>
    <p>s35932 8820 12 7099 7825 9 6843 7280 10 6843 7857 9 6843 39.9</p>
    <p>s38584 9664 26 19239 12071 23 17676 22589 277 17678 12132 21 17676 36.5</p>
    <p>b10 167 11 159 195 10 152 197 8 152 195 10 152 0</p>
    <p>b11 482 21 416 1187 21 394 1504 57 394 1226 21 394 0.2</p>
    <p>b12 953 16 1639 1556 17 1574 2166 25 1574 1645 16 1574 0.4</p>
    <p>b13 231 10 383 237 9 349 224 10 349 237 9 349 0.1</p>
    <p>Ratio 1 1 1 1 1.21 0.93 0.93 2.02 3.92 0.93 1.22 0.89 0.93</p>
    <p>Ratio 2 1 1 1 1.01 0.96 1</p>
  </div>
  <div class="page">
    <p>Experimental Results (contd)</p>
    <p>Interpolant vs. cofactor</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Scalable function extraction from Boolean relations  Interpolation plays an essential role  Relations with up to thousands of</p>
    <p>variables can be determinized inexpensively</p>
    <p>Extracted functions are of reasonable sizes</p>
    <p>Future work  Determinization scheduling  Simple function extraction</p>
  </div>
</Presentation>
