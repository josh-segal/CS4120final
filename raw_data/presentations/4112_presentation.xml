<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Bitter Harvest: Systematically Fingerprinting Low- and Medium</p>
    <p>interaction Honeypots at Internet Scale</p>
    <p>Alexander Vetterl and Richard Clayton University of Cambridge</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Honeypots: A resource whose value is being attacked or compromised</p>
    <p>Honeypots have been focused for years on the monitoring of human activity</p>
    <p>Adversaries attempt to distinguish honeypots by executing commands</p>
    <p>Honeypots continuously fix commands to be more like bash</p>
    <p>Cowrie  commands implemented</p>
  </div>
  <div class="page">
    <p>How we currently build (SSH) honeypots</p>
    <p>Problem: There are lot of subtle differences between TwistedConch and OpenSSH!</p>
    <p>RFCs OpenSSH TwistedConch</p>
    <p>Cowrie sshd</p>
    <p>bash</p>
  </div>
  <div class="page">
    <p>Honeypots in this study</p>
  </div>
  <div class="page">
    <p>Methodology  Overview</p>
    <p>We send probes to 40 different implementations</p>
    <p>9 Honeypots  OpenSSH, TwistedConch  Busybox, Ubuntu/FreeBSD telnetd  Apache, nginx</p>
    <p>We find probes that result in distinctive responses</p>
    <p>We find the probe that results in the most distinctive response across all implementations and perform Internet wide scans</p>
    <p>Triggered 158 million responses</p>
  </div>
  <div class="page">
    <p>Methodology  Cosine similarity</p>
    <p>We represent our responses as a vector of features appropriate to the network protocol</p>
    <p>The higher the cosine similarity coefficient, the more similar the two items under comparison</p>
    <p>x1</p>
    <p>x2</p>
    <p>Item 1</p>
    <p>Item 2</p>
    <p>Cosine distance</p>
  </div>
  <div class="page">
    <p>Probe generation  Telnet and HTTP</p>
    <p>IAC escape character</p>
    <p>IAC WILL BINARY IAC WILL LOGOUT</p>
    <p>GET /. HTTP/0.0.\r\n\r\n</p>
  </div>
  <div class="page">
    <p>Probe generation  SSH</p>
    <p>Packet Length</p>
    <p>Padding Length Payload</p>
    <p>Random Padding MAC</p>
    <p>Three variants of (malformed) packets</p>
  </div>
  <div class="page">
    <p>Results  Similarity across implementations</p>
    <p>SSH n=157 925 376</p>
    <p>Telnet n=356 160</p>
    <p>HTTP n=571 212</p>
  </div>
  <div class="page">
    <p>Results  Reasons for distinctive responses</p>
    <p>Packet Length</p>
    <p>Padding Length Payload</p>
    <p>Random Padding MAC</p>
    <p>(Random) padding of SSH packets</p>
    <p>Servers close the connection as a result of bad packets  Not supported or ignored HTTP methods  Not supported or ignored Telnet negotiation options  Different error messages returned  and more</p>
  </div>
  <div class="page">
    <p>Results Telnet  Internet wide scans (1/3)</p>
    <p>First study to give an estimate of Telnet implementations</p>
    <p>Most implementations are similar to Busybox 1.6-2.4</p>
    <p>Not many servers respond in the same way as honeypots</p>
  </div>
  <div class="page">
    <p>Results SSH/HTTP  Internet wide scans (2/3)</p>
    <p>Most implementations are similar to OpenSSH 6.6 and OpenSSH 7.2</p>
    <p>Most implementations are similar to nginx 1.12.1, Apache 2.2.34 and Apache 2.4.27</p>
  </div>
  <div class="page">
    <p>Results Honeypots  Internet wide scans (3/3)</p>
  </div>
  <div class="page">
    <p>Random padding of packets does not allow for exact matches</p>
    <p>Validation and Accuracy (1/2)</p>
    <p>Use second-best distinguishing probeRemoving the random parts</p>
  </div>
  <div class="page">
    <p>Validation and Accuracy (2/2)</p>
    <p>Equal Error Rate (ERR) of 0.0183</p>
    <p>We falsely accept and at the same time fail to identify 51 honeypots</p>
    <p>2,779 honeypots as ground truth</p>
  </div>
  <div class="page">
    <p>Results  Mass Deployment</p>
    <p>724 IPs run both an SSH and Web honeypot  Many honeypots are hosted at well-known cloud providers</p>
  </div>
  <div class="page">
    <p>Results (SSH)  Configuration</p>
    <p>Only 79% of SSH honeypots have an unique host key  SSH Honeypot operators rarely update their honeypots</p>
  </div>
  <div class="page">
    <p>Impact and Countermeasures</p>
    <p>We can detect your honeypots without even trying to send any credentials  It is hard to tell from the logging that you've been detected!  It is easy to add scripts using these techniques into tools such as Metasploit!</p>
    <p>Closely monitor and update your honeypots  Honeypot operators are as bad as anyone with patching</p>
    <p>Patching against the specific distinguishers we report in the paper is not a solution as there are thousands more</p>
    <p>We developed a modified version of the OpenSSH daemon (sshd) which can front-end a Cowrie instance so that the protocol layer distinguishers will no longer work</p>
  </div>
  <div class="page">
    <p>Ethical Considerations</p>
    <p>We followed our institutions ethical research policy  with appropriate authorisation at every stage</p>
    <p>We used the exclusion list maintained by DNS-OARC</p>
    <p>We notified all local CERTs of our scans</p>
    <p>We respected requests to be excluded from further scanning</p>
    <p>We notified the relevant honeypot and library developers of our findings</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Presented a generic approach for fingerprinting honeypots (class break)  With a TCP handshake and usually one further packet we identify if you are</p>
    <p>running Kippo, Cowrie, Glastopf or various other (we believe all) low- and medium-interaction honeypots</p>
    <p>Performed Internet wide scans for 9 different honeypots  Found 7,605 honeypots residing on 6,125 IPv4 addresses</p>
    <p>Majority are hosted at well known cloud providers</p>
    <p>Only 39% of SSH honeypots were updated within the previous 7 months</p>
    <p>We need a new architecture for low- and medium-interaction honeypots  The bad guys can easily reproduce and implement our techniques</p>
  </div>
  <div class="page">
    <p>Q &amp; A Alexander Vetterl</p>
    <p>alexander.vetterl@cl.cam.ac.uk https://github.com/amv42/sshd-honeypot</p>
  </div>
</Presentation>
