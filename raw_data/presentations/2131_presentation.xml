<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Accelerating External Sorting via On-the-fly Data Merge in Active SSDs</p>
    <p>Young-Sik Lee, Seungryoul Maeng KAIST</p>
    <p>Luis Cavazos Quero, Youngjae Lee, Jin-Soo Kim Sungkyunkwan University</p>
    <p>HotStorage 14 June 18, 2014</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Data-intensive computing</p>
    <p>Processing large volumes of data  vast I/O</p>
    <p>Web, SNS, e-commerce, scientific analysis,</p>
    <p>Google MapReduce, Apache Hadoop</p>
    <p>Solid-state drives (SSDs)</p>
    <p>Fast I/O, low power consumption, small form factor, light weight, and shock resistance</p>
  </div>
  <div class="page">
    <p>In-Storage Processing</p>
    <p>SSD</p>
    <p>SSD</p>
    <p>Data</p>
    <p>Host-side processing</p>
    <p>In-storage processing</p>
    <p>Data Results</p>
    <p>Results</p>
    <p>(a) Traditional</p>
    <p>(b) SSD with in-storage processing</p>
    <p>Next processing</p>
    <p>Next processing</p>
    <p>Offload data-processing functions  Reduce data transfer  Improve performance and save energy</p>
    <p>Request</p>
    <p>Request</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Fast scan (ADMS11)</p>
    <p>Intelligent SSD (CIKM13, ICS13)</p>
    <p>Active flash (FAST13)</p>
    <p>Smart SSD (MSST13)</p>
    <p>Large data  small result</p>
    <p>Aggregate functions: SCAN, SUM, MIN, MAX, COUNT,</p>
  </div>
  <div class="page">
    <p>Our Approach: Active SSDs</p>
    <p>Make results on-the-fly</p>
    <p>Do in-storage processing when requested</p>
    <p>Show results, but no writing</p>
    <p>Eliminate extra data transfer</p>
    <p>Increase the lifetime of SSDs</p>
    <p>Active SSD</p>
    <p>On-the fly processing</p>
    <p>Data Result Next</p>
    <p>processing</p>
    <p>Pretending to exist  Making on-the-fly  No writing</p>
    <p>Request</p>
  </div>
  <div class="page">
    <p>External Sorting</p>
    <p>Sorting algorithm for large-scale data</p>
    <p>Ex. Hadoop</p>
    <p>Input</p>
    <p>Input</p>
    <p>Input</p>
    <p>Map</p>
    <p>Map</p>
    <p>Map</p>
    <p>Reduce</p>
    <p>Reduce</p>
    <p>Output</p>
    <p>Output</p>
    <p>Map phase Reduce phase</p>
    <p>External sorting</p>
    <p>Intermediate data</p>
  </div>
  <div class="page">
    <p>External Sorting</p>
    <p>Data transfer in external sorting</p>
    <p>SSD</p>
    <p>Input Data</p>
    <p>Sorted Data</p>
    <p>Sort</p>
    <p>Sorted Data</p>
    <p>Merge</p>
    <p>Next Processing</p>
    <p>Sort Sort Sort</p>
  </div>
  <div class="page">
    <p>Active SSD</p>
    <p>ActiveSort</p>
    <p>On-the-fly data merge</p>
    <p>Input Data Next</p>
    <p>Processing</p>
    <p>Sort Sort Sort Sort</p>
    <p>Merge</p>
  </div>
  <div class="page">
    <p>Implementation</p>
    <p>Host  3.4GHz Intel i5 CPU,</p>
    <p>OpenSSD platform  87.5MHz ARM CPU, 64MB DRAM,</p>
    <p>Simple page mapping + ActiveSort</p>
    <p>Parameter passing  Fix the location of files</p>
    <p>Partially sorted chunks, final output, key&amp;record conf.</p>
  </div>
  <div class="page">
    <p>Inside of Active SSDs</p>
    <p>Implementation of on-the-fly data merge</p>
    <p>Partially sorted chunks (on Flash)</p>
    <p>Buffer Output buffer</p>
    <p>READ (by flash memory controller)</p>
    <p>Compare &amp; Copy (by embedded CPU)</p>
    <p>To host</p>
  </div>
  <div class="page">
    <p>Base Performance</p>
    <p>Sequential read/write</p>
    <p>WRITE READ READ w/ merge</p>
    <p>(sorted)</p>
    <p>READ w/ merge</p>
    <p>(random)</p>
    <p>B a</p>
    <p>n d</p>
    <p>w id</p>
    <p>th (</p>
    <p>M B</p>
    <p>/s )</p>
    <p>Interleaving overhead</p>
    <p>Compare &amp; Copy overhead</p>
  </div>
  <div class="page">
    <p>Sort Benchmark</p>
    <p>Elapsed times of SORT and READ for 2GB data</p>
    <p>E la</p>
    <p>p se</p>
    <p>d t</p>
    <p>im e</p>
    <p>( se</p>
    <p>c)</p>
    <p>Reading</p>
    <p>Sorting</p>
    <p>Reduce I/O</p>
    <p>High swap traffic</p>
  </div>
  <div class="page">
    <p>Sort Benchmark</p>
    <p>Amount of I/O  1GB memory size</p>
    <p>READ WRITE</p>
    <p>T h</p>
    <p>e a</p>
    <p>m o</p>
    <p>u n</p>
    <p>t o</p>
    <p>f I/</p>
    <p>O (</p>
    <p>M B</p>
    <p>)</p>
    <p>ActiveSort</p>
    <p>NSORT</p>
  </div>
  <div class="page">
    <p>Discussion</p>
    <p>Optimize on-the-fly merge</p>
    <p>More cores, more RAM, higher internal bandwidth</p>
    <p>Specialized hardware support</p>
    <p>Offload entire sorting</p>
    <p>Scale out by multiple active SSDs</p>
    <p>Provide API for parameter passing</p>
    <p>Object-based interface</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Active SSDs: in-storage, on-the-fly processing  ActiveSort: external sorting via on-the-fly data merge</p>
    <p>Eliminate extra data transfer</p>
    <p>Improve the performance and the lifetime of SSDs</p>
    <p>Future work  Integrate into Hadoop framework</p>
    <p>Find another examples for active SSDs</p>
    <p>Active SSD</p>
    <p>On-the fly processing</p>
    <p>Data Result Next</p>
    <p>processing</p>
  </div>
  <div class="page">
    <p>Thank you Q &amp; A</p>
    <p>yslee@calab.kaist.ac.kr</p>
  </div>
</Presentation>
