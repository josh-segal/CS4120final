<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Enhancing Security and Privacy of Tors Ecosystem by using Trusted Execution Environments</p>
    <p>Seongmin Kim, Juhyeng Han, Jaehyeong Ha,</p>
    <p>Taesoo Kim *, Dongsu Han</p>
    <p>*</p>
  </div>
  <div class="page">
    <p>Tor anonymity network</p>
    <p>Tor: the most popular anonymity network for Internet users</p>
    <p>Helps users to defend against traffic analysis and keep users privacy</p>
    <p>(e.g., what sites you visit, IP address) [from Tor project, www.torproject.org]</p>
    <p>Freely available as an open source</p>
    <p>1.8 million users on a daily basis</p>
    <p>* from Onionview, https://onionview.codeplex.com/</p>
    <p>The geographic location of Tor relays *</p>
  </div>
  <div class="page">
    <p>Tor anonymity network</p>
    <p>Tor: the most popular anonymity network for Internet users</p>
    <p>Helps users to defend against traffic analysis and keep users privacy</p>
    <p>(e.g., what sites you visit, IP address) [from Tor project, www.torproject.org]</p>
    <p>Freely available as an open source</p>
    <p>1.8 million users on a daily basis</p>
    <p>* from Onionview, https://onionview.codeplex.com/</p>
    <p>The geographic location of Tor relays *</p>
  </div>
  <div class="page">
    <p>Tor anonymity network</p>
    <p>Tor: the most popular anonymity network for Internet users</p>
    <p>Helps users to defend against traffic analysis and keep users privacy</p>
    <p>(e.g., what sites you visit, IP address) [from Tor project, www.torproject.org]</p>
    <p>Freely available as an open source</p>
    <p>1.8 million users on a daily basis</p>
    <p>* from Onionview, https://onionview.codeplex.com/</p>
    <p>The geographic location of Tor relays *</p>
  </div>
  <div class="page">
    <p>Tor anonymity network</p>
    <p>Tor: the most popular anonymity network for Internet users</p>
    <p>Helps users to defend against traffic analysis and keep users privacy</p>
    <p>(e.g., what sites you visit, IP address) [from Tor project, www.torproject.org]</p>
    <p>Freely available as an open source</p>
    <p>1.8 million users on a daily basis</p>
    <p>* from Onionview, https://onionview.codeplex.com/</p>
    <p>The geographic location of Tor relays *</p>
  </div>
  <div class="page">
    <p>Tor network: Threat model</p>
    <p>Entry Middle ExitTor client Destination</p>
    <p>Plain-text</p>
    <p>TLS channel TLS channel</p>
    <p>TLS channel</p>
    <p>3-hop onion routing: a single Tor entity cannot know both client and server</p>
    <p>Processing Unit : Cell (512 Bytes)</p>
  </div>
  <div class="page">
    <p>Tor network: Threat model</p>
    <p>Tors Threat model</p>
    <p>Tor is a volunteer-based network: Tor relays are not trusted</p>
    <p>Can run a Tor relays of his own</p>
    <p>Can compromise some fraction of Tor relays</p>
    <p>Entry Middle ExitTor client Destination</p>
    <p>Plain-text</p>
    <p>TLS channel TLS channel</p>
    <p>TLS channel</p>
    <p>3-hop onion routing: a single Tor entity cannot know both client and server</p>
    <p>Processing Unit : Cell (512 Bytes)</p>
  </div>
  <div class="page">
    <p>Tor network: Threat model</p>
    <p>Tors Threat model</p>
    <p>Tor is a volunteer-based network: Tor relays are not trusted</p>
    <p>Can observe some fraction of network traffic</p>
    <p>Can run a Tor relays of his own</p>
    <p>Can compromise some fraction of Tor relays</p>
    <p>Entry Middle ExitTor client Destination</p>
    <p>Plain-text</p>
    <p>TLS channel TLS channel</p>
    <p>TLS channel</p>
    <p>3-hop onion routing: a single Tor entity cannot know both client and server</p>
    <p>Processing Unit : Cell (512 Bytes)</p>
  </div>
  <div class="page">
    <p>Tor network: Threat model (Cont.)</p>
    <p>Directory authorities</p>
    <p>Careful admission  Behavior monitoring</p>
    <p>Tor client Destination</p>
  </div>
  <div class="page">
    <p>Tor network: Threat model (Cont.)</p>
    <p>Directory authorities</p>
    <p>Careful admission  Behavior monitoring</p>
    <p>Tor client Destination Anonymity</p>
    <p>Broken!</p>
  </div>
  <div class="page">
    <p>Tor network: Threat model (Cont.)</p>
    <p>Directory authorities</p>
    <p>Careful admission  Behavior monitoring</p>
    <p>Tor client Destination Anonymity</p>
    <p>Broken!</p>
    <p>Having a large</p>
    <p>number of relays</p>
    <p>Out-of-scope: network-level adversary (controls a large fraction of network)</p>
  </div>
  <div class="page">
    <p>Tor network: Threat model (Cont.)</p>
    <p>Directory authorities</p>
    <p>Careful admission  behavior monitoring</p>
    <p>Tor client Destination Anonymity</p>
    <p>Broken!</p>
    <p>Having a large</p>
    <p>number of relays</p>
    <p>Out-of-scope : network-level adversary who can controls a large fraction of Tor network</p>
    <p>However, Tor is still vulnerable to many types of attacks under</p>
    <p>its traditional threat model</p>
  </div>
  <div class="page">
    <p>Limitations of Tor</p>
    <p>Problem 1. Tor relays are semi-trusted</p>
    <p>Authorities cannot fully verify the behaviors of them</p>
    <p>Problem 2. Even attackers control a few Tor relays, they can</p>
    <p>Access internal information (circuit identifier, cell header, )</p>
    <p>Modify the behavior of relays (DDoS, packet tampering, )</p>
    <p>Modifying the behavior Accessing internal information</p>
    <p>Malicious circuit creation [Security09, CCS11]</p>
    <p>Sniper attack [NDSS15]  Bad apple attack</p>
    <p>[LEET11]</p>
    <p>Harvesting hidden service descriptors [S&amp;P13]</p>
    <p>Circuit demultiplexing [S&amp;P06]  Website fingerprinting</p>
    <p>[Security15]</p>
    <p>Both</p>
    <p>&lt;Low-resource attacks&gt;</p>
    <p>tagging attack [ICC08, TON12, CCS12, S&amp;P13]</p>
    <p>Bandwidth inflation [PETS07, S&amp;P13]</p>
    <p>Controlling HSDir [S&amp;P13]</p>
  </div>
  <div class="page">
    <p>Limitations of Tor (Cont.)</p>
    <p>Entry Middle Exit Tor clients</p>
    <p>Destination</p>
    <p>Plain-text</p>
    <p>TLS channel TLS channel</p>
    <p>TLS channel</p>
    <p>Attackers can modify the behavior</p>
    <p>Give false information to others</p>
    <p>Modify or inject the cell</p>
    <p>Bandwidth 20MB/s</p>
    <p>Processing Unit: Cell (512 Bytes)</p>
    <p>Information visible to attackers</p>
    <p>Cell:</p>
    <p>header</p>
    <p>Demultiplex and identify a circuit</p>
    <p>Cell</p>
    <p>Cell</p>
  </div>
  <div class="page">
    <p>Limitations of Tor (Cont.)</p>
    <p>Entry Middle ExitTor client Destination</p>
    <p>Plain-text</p>
    <p>TLS channel TLS channel</p>
    <p>TLS channel</p>
    <p>To address the problems on Tor,</p>
    <p>are required</p>
  </div>
  <div class="page">
    <p>Trend: Commoditization of TEE</p>
    <p>Trusted Execution Environment (TEE): Hardware technology for trusted computing</p>
    <p>OS (untrusted)</p>
    <p>Application (untrusted)</p>
    <p>Secure container Integrity checking  Prevents behavior</p>
    <p>modification</p>
    <p>Modified</p>
    <p>Tor code</p>
    <p>Intel SGX: a promising TEE technology for generic applications</p>
    <p>Native performance in the secure mode</p>
    <p>Available on Intel Skylake and Kaby lake CPU</p>
    <p>Cannot access data, flow control X  Protects the secrecy of the program</p>
    <p>edit</p>
    <p>Original</p>
  </div>
  <div class="page">
    <p>SGX-Tor: Leveraging Intel SGX on Tor</p>
    <p>Intel SGX</p>
    <p>Improved trust model</p>
    <p>Operational privacy</p>
    <p>PracticalityTor network</p>
    <p>Middle</p>
    <p>Improved trust model Operational privacy Practicality</p>
    <p>Spells out what users trust in practice</p>
    <p>Provides ultimate privacy</p>
    <p>Protects sensitive data and Tor operations</p>
    <p>Prevents modifications on Tor relays</p>
    <p>The chance of having more hardware resources donated</p>
    <p>Incrementally deployable  Compatibility</p>
    <p>SGX-Tor</p>
  </div>
  <div class="page">
    <p>SGX-Tor: Leveraging Intel SGX on Tor</p>
    <p>Intel SGX</p>
    <p>Improved trust model</p>
    <p>Operational privacy</p>
    <p>PracticalityTor network</p>
    <p>Middle</p>
    <p>Improved trust model Operational privacy Practicality</p>
    <p>Explicitly spells out what users trust in practice</p>
    <p>Provides ultimate privacy due to the mix-in model</p>
    <p>Protects sensitive data and Tor operations</p>
    <p>Denies modifications on Tor relays</p>
    <p>Increasing the chance of having more hardware resources donated</p>
    <p>Incrementally deployable  Compatibility</p>
    <p>SGX-Tor</p>
    <p>Reduces the power of an attacker who currently gets the sensitive information by running Tor relays</p>
    <p>Raises the bar for Tor adversary to a traditional networklevel adversary (only passively see the TLS bytestream)</p>
  </div>
  <div class="page">
    <p>Intel SGX 101: Isolated Execution</p>
    <p>Address Space</p>
    <p>Enclave</p>
    <p>Access from OS/VMM</p>
    <p>Physical Memory</p>
    <p>CPU Package</p>
    <p>Memory Encryption Engine (MEE) Snooping</p>
    <p>Processor Key</p>
    <p>Protects apps secret from untrusted privilege software</p>
    <p>Application keeps its data/code inside the Enclave</p>
    <p>Trusted Computing Base (TCB) = Enclave + CPU package</p>
    <p>EPC (Enclave Page</p>
    <p>Cache)</p>
    <p>Encrypted</p>
    <p>Cell</p>
  </div>
  <div class="page">
    <p>Intel SGX 101: Remote attestation</p>
    <p>Application Enclave</p>
    <p>Quoting Enclave</p>
    <p>Remote platformUser platform</p>
    <p>Application Challenger</p>
    <p>Enclave</p>
    <p>Attestation Verification</p>
    <p>EPID key</p>
    <p>Ephemeral</p>
    <p>Attest an application on remote platform</p>
    <p>Checks the integrity of enclave (hash of code/data pages)</p>
    <p>Verifies whether enclave is running on real SGX CPU</p>
    <p>Can establish a secure channel between enclaves</p>
  </div>
  <div class="page">
    <p>SGX-Tor: Threat Model</p>
    <p>Only trusts the underlying SGX hardware &amp; Tor code itself</p>
    <p>Do not address network-level adversaries : who can perform large-scale traffic analysis</p>
    <p>Out of scope :Vulnerabilities in Tor codes, SGX side channel attacks</p>
    <p>Mitigated by recent SGX research: Moat [CCS16], SGX-Shield [NDSS17], T-SGX [NDSS17]</p>
    <p>OS (untrusted)</p>
    <p>Application (untrusted)</p>
    <p>Enclave</p>
    <p>CPU</p>
    <p>A powerful network-level adversary : out-of-scopeTCB : Enclave + CPU package</p>
    <p>&lt;SGX Threat model&gt; &lt;Tor Threat model&gt;</p>
  </div>
  <div class="page">
    <p>User process (Tor application)</p>
    <p>SGX-Tor: Design and Implementation</p>
    <p>Enclave memory</p>
    <p>SSL Library</p>
    <p>Attestation Module</p>
    <p>Sealing Module</p>
    <p>Seals/unseals private data</p>
    <p>Integrity check with remote host</p>
    <p>Tor code/data (Core) - Circuit Establishment - Hidden service - Voting - Encryption/Decryption - Cell/Consensus creation</p>
    <p>Crypto/TLS operations Securely obtains the entropy and time value</p>
    <p>Encrypts and stores the sensitive data outside the enclave</p>
    <p>Validates the enclave hash of the Tor program</p>
  </div>
  <div class="page">
    <p>System Call</p>
    <p>SGX-Tor: Design and Implementation</p>
    <p>User process (Tor application)</p>
    <p>Enclave Creation</p>
    <p>SSL Library</p>
    <p>Attestation Module</p>
    <p>Sealing Module</p>
    <p>Seals/unseals private data</p>
    <p>Integrity check with remote host</p>
    <p>Tor code/data (Core) - Circuit Establishment - Hidden service - Voting - Encryption/Decryption - Cell/Consensus creation</p>
    <p>Crypto/TLS operations</p>
    <p>Enclave memory</p>
    <p>Trusted Untrusted</p>
    <p>Enclave initialization</p>
    <p>OCALL/ECALL Wrapper</p>
    <p>Standard Library (glibc)</p>
    <p>Tor code/data (Untrusted)</p>
    <p>SGX Runtime Library</p>
    <p>Application memory</p>
    <p>ECALL</p>
    <p>OCALL Request system services</p>
  </div>
  <div class="page">
    <p>System Call</p>
    <p>SGX-Tor: Design and Implementation</p>
    <p>User process (Tor application)</p>
    <p>Enclave Creation</p>
    <p>SSL Library</p>
    <p>Attestation Module</p>
    <p>Sealing Module</p>
    <p>Seals/unseals private data</p>
    <p>Integrity check with remote host</p>
    <p>Tor code/data (Core) - Circuit Establishment - Hidden service - Voting - Encryption/Decryption - Cell/Consensus creation</p>
    <p>Crypto/TLS operations</p>
    <p>Enclave memory</p>
    <p>Trusted Untrusted</p>
    <p>Enclave initialization</p>
    <p>OCALL/ECALL Wrapper</p>
    <p>Standard Library (glibc)</p>
    <p>Tor code/data (Untrusted)</p>
    <p>SGX Runtime Library</p>
    <p>Application memory</p>
    <p>Narrow interface</p>
    <p>ECALL</p>
    <p>OCALL Request system services</p>
    <p>Sanity checking 1. Argument length 2. Address range</p>
  </div>
  <div class="page">
    <p>Attacks defeated by using SGX-Tor</p>
    <p>Entry Middle ExitTor client Destination</p>
    <p>Plain-text</p>
    <p>TLS channel TLS channel</p>
    <p>TLS channel</p>
    <p>Replay</p>
    <p>Cell counting</p>
    <p>Directory authorities</p>
    <p>Malicious relay (modified Tor)</p>
    <p>consensus document</p>
    <p>Advertised BW Inflated!</p>
  </div>
  <div class="page">
    <p>Attacks defeated by using SGX-Tor</p>
    <p>Entry Middle ExitTor client Destination</p>
    <p>Plain-text</p>
    <p>TLS channel TLS channel</p>
    <p>TLS channel</p>
    <p>Directory authorities</p>
    <p>Malicious relay (modified Tor)</p>
    <p>consensus document</p>
    <p>Advertised BW Inflated!</p>
    <p>Attract more clients!</p>
    <p>Replay</p>
    <p>Cell counting</p>
  </div>
  <div class="page">
    <p>Attacks defeated by using SGX-Tor (Cont.)</p>
    <p>Entry Middle ExitTor client Destination</p>
    <p>Plain-text</p>
    <p>Enclave</p>
    <p>Circuit establishment</p>
    <p>Cell creation</p>
    <p>Encryption/Decryption</p>
    <p>Onion/SSL key creation</p>
    <p>Enclave EnclaveEnclave</p>
    <p>Cell</p>
    <p>Circuit descriptor</p>
    <p>Private keys</p>
    <p>TLS channel TLS channel</p>
    <p>TLS channel</p>
    <p>access 1. Circuit identifier 2. Cell header 3. Private keys</p>
    <p>modify the code 1. To modify/inject cells 2. To inflate bandwidth</p>
    <p>Attackers cannot</p>
    <p>Attacks defeated/mitigated by SGX-Tor</p>
    <p>Circuit demultiplexing [S&amp;P06]  Bandwidth inflation [PETS07, S&amp;P13]  Harvesting/Controlling HSDir [S&amp;P13]  Tagging attack [ICC08, TON12, CCS12, S&amp;P13]</p>
  </div>
  <div class="page">
    <p>New functionality: Automatic admission</p>
    <p>Integrity verification of relays (Directory authority  Onion Router)</p>
    <p>Automatically admits unmodified and SGX-enabled relays</p>
    <p>Improved trust model: current implicit trust model turns into the explicit trust model</p>
    <p>Directory authority</p>
    <p>Tor relays</p>
    <p>Expected hash Admit (match success)</p>
    <p>Attestation fail (not SGX-enabled)</p>
    <p>Attestation fail (bad hash)</p>
    <p>Enclave</p>
    <p>Enclave</p>
    <p>Remote Attestation</p>
    <p>Enclave</p>
    <p>Nickname: OR1</p>
    <p>Nickname: OR2</p>
    <p>Nickname: OR3</p>
    <p>Consensus document</p>
    <p>(modified)</p>
    <p>name: OR1 BW: 20MB/s fingerprint: .</p>
    <p>NOTE: Tor uses the same binary for directory authorities, Tor relays, and client proxies</p>
  </div>
  <div class="page">
    <p>Incremental deployability</p>
    <p>SGX-Tors basic assumption: All relays and authorities are SGX-enabled</p>
    <p>SGX-Tor supports interoperability</p>
    <p>Allows admission of non-SGX relays without remote attestation</p>
    <p>SGX-enabled clients can get the list of SGX-Tor relays from SGX-enabled authorities</p>
    <p>Entry Middle ExitTor client Destination</p>
    <p>Enclave Enclave Enclave</p>
    <p>Enclave  Enclave Enclave</p>
    <p>Directory authorities</p>
    <p>Remote Attestation</p>
    <p>Enclave</p>
    <p>Enclave</p>
  </div>
  <div class="page">
    <p>Implementation detail</p>
    <p>Engineering efforts</p>
    <p>Support for Windows/Linux (based on Intel SGX SDK)</p>
    <p>SGX-ported libraries: OpenSSL, libevent, zlibc</p>
    <p>SGX-Tor is an open source: Available at https://github.com/KAIST-INA/SGX-Tor</p>
    <p>Trusted Computing Base (TCB) size</p>
    <p>TCB size of Haven: More than 200MB (maximum enclave size : 128MB in Windows)</p>
    <p>3.8x smaller (320K LoC vs 1,228K LoC) than Graphene (open source library OS for SGX)</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>current Tor network?</p>
    <p>Environmental setup  SGX CPUs: Intel Core i7-6700 (3.4GHz) and Intel Xeon CPU E3-1240 (3.5GHz)</p>
    <p>Configuration: 128MB Enclave Page Cache (EPC)</p>
    <p>Running Tor in Windows, Firefox as a Tor browser (in the client proxy)</p>
    <p>Establish a private Tor network using chutney</p>
  </div>
  <div class="page">
    <p>What is protected by SGX-Tor?</p>
    <p>Current Tor Network-level</p>
    <p>adversary SGX-Tor</p>
    <p>TCP/IP header Visible Visible Visible</p>
    <p>TLS-encrypted bytestream Visible Visible Visible</p>
    <p>Cell Visible Not visible Not visible</p>
    <p>Circuit ID Visible Not visible Not visible</p>
    <p>Voting result Visible Not visible Not visible</p>
    <p>Consensus document Visible Not visible Not visible</p>
    <p>Hidden service descriptor Visible Not visible Not visible</p>
    <p>List of relays Visible Not visible Not visible</p>
    <p>Private keys Visible Not visible Not visible</p>
  </div>
  <div class="page">
    <p>Performance evaluation</p>
    <p>SGX-Tor performance : WAN setting</p>
    <p>Establish a private Tor network</p>
    <p>For the realistic scenario, we consider</p>
    <p>the locality of relays (Asia, EU, U.S. West, U.S. East)</p>
    <p>C u</p>
    <p>m m</p>
    <p>u la</p>
    <p>ti ve</p>
    <p>P ro</p>
    <p>b . Time-to-first-byte (ms)</p>
    <p>M B</p>
    <p>B</p>
    <p>HTTPS</p>
    <p>HTTP</p>
    <p>HTTPS</p>
    <p>HTTP</p>
    <p>Throughput (Mbps)</p>
    <p>F il</p>
    <p>e S</p>
    <p>iz e</p>
    <p>( M</p>
    <p>B )</p>
    <p>client</p>
    <p>server</p>
    <p>Entry (KAIST)</p>
    <p>Middle (Cloud) 1. EU 2.U.S. West 3. U.S. East</p>
    <p>Exit (Gatech)</p>
    <p>&lt;Evaluation environment&gt;</p>
    <p>: SGX-Tor : Original Tor</p>
    <p>Enclave Enclave</p>
  </div>
  <div class="page">
    <p>C u</p>
    <p>m m</p>
    <p>u la</p>
    <p>ti ve</p>
    <p>P ro</p>
    <p>b .</p>
    <p>Hidden Service Throughput (Mbps)</p>
    <p>Performance evaluation (Cont.)</p>
    <p>End-to-end client performance of SGX-Tor (using Tor browser)</p>
    <p>Web latency: Visiting Alexa Top 50 websites</p>
    <p>Hidden service: HTTP file server (downloading 10MB)</p>
    <p>C u</p>
    <p>m m</p>
    <p>u la</p>
    <p>ti ve</p>
    <p>P ro</p>
    <p>b .</p>
    <p>Webpage Loading Time (s)</p>
    <p>: SGX-Tor : Original Tor</p>
    <p>SGX-Tor : 13.2s Original : 12.2s</p>
    <p>SGX-Tor : 1.30Mbps Original : 1.35Mbps</p>
  </div>
  <div class="page">
    <p>Compatibility with vanilla Tor</p>
    <p>Long-running: Admit SGX-Tor relays in the vanilla Tor</p>
    <p>Collected results for two weeks</p>
    <p>Advertised bandwidth *Middle selection ProbabilityNetwork I/O bandwidth per second</p>
    <p>: SGX-Tor : Original Tor</p>
    <p>Fast Stable</p>
    <p>* From https://collector.torproject.org/</p>
    <p>Serves Tor traffic well Actually selected by multiple Tor users</p>
    <p>Listed in the consensus document</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>We design and implement SGX-Tor by leveraging commodity TEE and demonstrate its viability</p>
    <p>Gives moderate performance overhead</p>
    <p>Shows its compatibility and possibility of incremental deployment</p>
    <p>SGX-Tor enhances the security and privacy of Tor by</p>
    <p>Defending against existing attacks on Tor</p>
    <p>Bringing changes to the trust model of Tor</p>
    <p>Providing new properties : automatic admission</p>
    <p>Available at github! (https://github.com/KAIST-INA/SGX-Tor)</p>
  </div>
</Presentation>
