<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>OneOS: IoT Platform based on POSIX and Actors</p>
    <p>Kumseok Jung, UBC Julien Gascon-Samson, TS Montral Karthik Pattabiraman, UBC</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Near-future IoT Project</p>
    <p>City of Vancouver</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Near-future IoT Project</p>
    <p>City of Vancouver</p>
    <p>Public Infrastructure 3</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Near-future IoT Project</p>
    <p>City of Vancouver</p>
    <p>Public Infrastructure 4</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Near-future IoT Project</p>
    <p>City of Vancouver</p>
    <p>Public Infrastructure 5</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Near-future IoT Project</p>
    <p>City of Vancouver</p>
    <p>Public Infrastructure 6</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Alice Engineer</p>
    <p>City of Vancouver</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Alice Engineer</p>
    <p>City of Vancouver</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Alice Engineer</p>
    <p>City of Vancouver</p>
    <p>Magic</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Alice Engineer</p>
    <p>City of Vancouver</p>
    <p>Magic</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Alice Engineer</p>
    <p>City of Vancouver</p>
    <p>Magic</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Alice Engineer</p>
    <p>City of Vancouver</p>
    <p>Magic</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Alice Engineer</p>
    <p>Magic</p>
    <p>Example Problem:</p>
    <p>Collect GPS data from the 2 subsystems (Bus &amp; Bike), compute an optimal scheduling policy for another subsystem (Subway)</p>
  </div>
  <div class="page">
    <p>Challenges: Heterogeneity</p>
    <p>Company A</p>
    <p>Company B</p>
  </div>
  <div class="page">
    <p>Challenges: Heterogeneity</p>
    <p>Company A</p>
    <p>Company B</p>
    <p>Windows 64bit</p>
    <p>Linux 32bit</p>
    <p>Heterogeneity in Hardware and Operating Systems</p>
  </div>
  <div class="page">
    <p>Challenges: Heterogeneity</p>
    <p>Company A</p>
    <p>Company B</p>
    <p>Windows 64bit</p>
    <p>Linux 32bit</p>
    <p>Azure IoT Edge Runtime</p>
    <p>AWS IoT Greengrass</p>
    <p>Heterogeneity in Languages and Frameworks</p>
  </div>
  <div class="page">
    <p>Challenges: Heterogeneity</p>
    <p>Company A</p>
    <p>Company B</p>
    <p>Windows 64bit</p>
    <p>Linux 32bit</p>
    <p>Azure IoT Edge Runtime</p>
    <p>AWS IoT Greengrass</p>
    <p>Solution</p>
    <p>Software within a specific framework is not portable across different frameworks</p>
  </div>
  <div class="page">
    <p>Challenges: Heterogeneity</p>
    <p>Company A</p>
    <p>Company B</p>
    <p>Windows 64bit</p>
    <p>Linux 32bit</p>
    <p>Azure IoT Edge Runtime</p>
    <p>AWS IoT Greengrass</p>
    <p>Solution</p>
    <p>Solution</p>
    <p>Software within a specific framework is not portable across different frameworks</p>
  </div>
  <div class="page">
    <p>Challenges: Heterogeneity</p>
    <p>Company A</p>
    <p>Company B</p>
    <p>Windows 64bit</p>
    <p>Linux 32bit</p>
    <p>Azure IoT Edge Runtime</p>
    <p>AWS IoT Greengrass</p>
    <p>Solution</p>
    <p>Solution_1</p>
    <p>Need to rewrite the same application logic for different frameworks</p>
  </div>
  <div class="page">
    <p>Challenges: Heterogeneity</p>
    <p>Company A</p>
    <p>Company B</p>
    <p>Windows 64bit</p>
    <p>Linux 32bit</p>
    <p>Azure IoT Edge Runtime</p>
    <p>AWS IoT Greengrass</p>
    <p>Solution</p>
    <p>Solution_1</p>
    <p>Difference in application semantics resolved by more glue software</p>
  </div>
  <div class="page">
    <p>Challenges: Heterogeneity</p>
    <p>Company A</p>
    <p>Company B</p>
    <p>Windows 64bit</p>
    <p>Linux 32bit</p>
    <p>Azure IoT Edge Runtime</p>
    <p>AWS IoT Greengrass</p>
    <p>Solution</p>
    <p>Solution_1</p>
    <p>We end up with: Heterogeneity in Application Software</p>
  </div>
  <div class="page">
    <p>Challenges: Scale &amp; Dynamicity</p>
    <p>Company A</p>
    <p>Company B</p>
  </div>
  <div class="page">
    <p>Challenges: Scale &amp; Dynamicity</p>
    <p>Company A</p>
    <p>Company B</p>
  </div>
  <div class="page">
    <p>Challenges: Scale &amp; Dynamicity</p>
    <p>Company A</p>
    <p>Company B</p>
  </div>
  <div class="page">
    <p>Challenges: Scale &amp; Dynamicity</p>
    <p>Company A</p>
    <p>Company B</p>
  </div>
  <div class="page">
    <p>Challenges: Scale &amp; Dynamicity</p>
    <p>Company A</p>
    <p>Company B</p>
  </div>
  <div class="page">
    <p>Challenges: Scale &amp; Dynamicity</p>
    <p>Company A</p>
    <p>Company B</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Distributed Computing Platforms</p>
    <p>Device Independence</p>
    <p>A pp</p>
    <p>lic at</p>
    <p>io n</p>
    <p>P or</p>
    <p>ta bi</p>
    <p>lit y</p>
    <p>IoT Platform AWS Greengrass Azure IoT Edge</p>
    <p>Google Cloud IoT</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Distributed Computing Platforms</p>
    <p>Device Independence</p>
    <p>A pp</p>
    <p>lic at</p>
    <p>io n</p>
    <p>P or</p>
    <p>ta bi</p>
    <p>lit y</p>
    <p>IoT Platform AWS Greengrass Azure IoT Edge</p>
    <p>Google Cloud IoT</p>
    <p>Device Independence Interface Transparency</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Distributed Computing Platforms</p>
    <p>Device Independence</p>
    <p>A pp</p>
    <p>lic at</p>
    <p>io n</p>
    <p>P or</p>
    <p>ta bi</p>
    <p>lit y</p>
    <p>IoT Platform AWS Greengrass Azure IoT Edge</p>
    <p>Google Cloud IoT</p>
    <p>Cluster Platform Mesosphere DC/OS</p>
    <p>Kubernetes Docker Swarm</p>
    <p>OpenHPC</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Distributed Computing Platforms</p>
    <p>Device Independence</p>
    <p>A pp</p>
    <p>lic at</p>
    <p>io n</p>
    <p>P or</p>
    <p>ta bi</p>
    <p>lit y</p>
    <p>IoT Platform AWS Greengrass Azure IoT Edge</p>
    <p>Google Cloud IoT</p>
    <p>Cluster Platform Mesosphere DC/OS</p>
    <p>Kubernetes Docker Swarm</p>
    <p>OpenHPC</p>
    <p>Interface Transparency Topology Independence</p>
    <p>Failure Tolerance</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Distributed Computing Platforms</p>
    <p>Device Independence</p>
    <p>A pp</p>
    <p>lic at</p>
    <p>io n</p>
    <p>P or</p>
    <p>ta bi</p>
    <p>lit y</p>
    <p>IoT Platform AWS Greengrass Azure IoT Edge</p>
    <p>Google Cloud IoT</p>
    <p>Distributed OS Amoeba</p>
    <p>Sprite Plan 9 Inferno</p>
    <p>Barrelfish</p>
    <p>Cluster Platform Mesosphere DC/OS</p>
    <p>Kubernetes Docker Swarm</p>
    <p>OpenHPC</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Distributed Computing Platforms</p>
    <p>Device Independence</p>
    <p>A pp</p>
    <p>lic at</p>
    <p>io n</p>
    <p>P or</p>
    <p>ta bi</p>
    <p>lit y</p>
    <p>IoT Platform AWS Greengrass Azure IoT Edge</p>
    <p>Google Cloud IoT</p>
    <p>Distributed OS Amoeba</p>
    <p>Sprite Plan 9 Inferno</p>
    <p>Barrelfish</p>
    <p>Cluster Platform Mesosphere DC/OS</p>
    <p>Kubernetes Docker Swarm</p>
    <p>OpenHPC</p>
    <p>Interface Transparency Application Portability Topology Independence</p>
    <p>Failure Tolerance</p>
  </div>
  <div class="page">
    <p>Our Goal: OneOS</p>
    <p>Distributed Computing Platforms</p>
    <p>Device Independence</p>
    <p>A pp</p>
    <p>lic at</p>
    <p>io n</p>
    <p>P or</p>
    <p>ta bi</p>
    <p>lit y</p>
    <p>OneOS</p>
    <p>IoT Platform AWS Greengrass Azure IoT Edge</p>
    <p>Google Cloud IoT</p>
    <p>Distributed OS Amoeba</p>
    <p>Sprite Plan 9 Inferno</p>
    <p>Barrelfish</p>
    <p>Cluster Platform Mesosphere DC/OS</p>
    <p>Kubernetes Docker Swarm</p>
    <p>OpenHPC</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Framework</p>
    <p>User App</p>
    <p>API</p>
    <p>Runtime</p>
    <p>API/ABI (system call)</p>
    <p>Language</p>
    <p>Chain of Programming Interfaces</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Framework</p>
    <p>User App</p>
    <p>API</p>
    <p>Runtime</p>
    <p>API/ABI (system call)</p>
    <p>Language Low-Level</p>
    <p>High-Level</p>
    <p>Application Programming</p>
    <p>Systems Programming</p>
    <p>Chain of Programming Interfaces</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Framework</p>
    <p>User App</p>
    <p>API</p>
    <p>Runtime</p>
    <p>API/ABI (system call)</p>
    <p>Language</p>
    <p>Low-Level</p>
    <p>High-Level</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Framework</p>
    <p>User App</p>
    <p>API</p>
    <p>Runtime</p>
    <p>API/ABI (system call)</p>
    <p>Language</p>
    <p>armv7</p>
    <p>Linux</p>
    <p>Runtime</p>
    <p>x64</p>
    <p>Windows</p>
    <p>Runtime</p>
    <p>High-Level</p>
    <p>Low-Level</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Framework</p>
    <p>User App</p>
    <p>API</p>
    <p>Runtime</p>
    <p>API/ABI (system call)</p>
    <p>Language</p>
    <p>armv7</p>
    <p>Linux</p>
    <p>Runtime</p>
    <p>x64</p>
    <p>Windows</p>
    <p>Runtime</p>
    <p>Platform-Independence by using High-level Language</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Framework</p>
    <p>User App</p>
    <p>API</p>
    <p>Runtime</p>
    <p>API/ABI (system call)</p>
    <p>Language</p>
    <p>armv7</p>
    <p>Linux</p>
    <p>Runtime</p>
    <p>x64</p>
    <p>Windows</p>
    <p>Runtime</p>
    <p>Platform-Independence by using High-level Language, not by using Framework API</p>
    <p>Framework Framework</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Framework</p>
    <p>User App</p>
    <p>API</p>
    <p>Runtime</p>
    <p>API/ABI (system call)</p>
    <p>Language</p>
    <p>armv7</p>
    <p>Linux</p>
    <p>Runtime</p>
    <p>x64</p>
    <p>Windows</p>
    <p>Runtime</p>
    <p>Platform-Independence by using High-level Language, not by using Framework API</p>
    <p>Platform</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Framework</p>
    <p>User App</p>
    <p>API</p>
    <p>Runtime</p>
    <p>API/ABI (system call)</p>
    <p>Language</p>
    <p>Platform</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>API/ABI (system call)</p>
    <p>Framework A</p>
    <p>yourApp</p>
    <p>API A</p>
    <p>Framework C</p>
    <p>herApp</p>
    <p>API C</p>
    <p>Framework B</p>
    <p>User App</p>
    <p>API B</p>
    <p>Runtime</p>
    <p>Language</p>
    <p>PlatformHeterogeneity in Software unresolved by frameworks</p>
  </div>
  <div class="page">
    <p>Framework A</p>
    <p>yourApp</p>
    <p>API A</p>
    <p>Framework C</p>
    <p>herApp</p>
    <p>API C</p>
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Framework B</p>
    <p>User App</p>
    <p>API B</p>
    <p>Runtime</p>
    <p>API/ABI (system call)</p>
    <p>Language</p>
    <p>PlatformHeterogeneity in Software unresolved by frameworks</p>
    <p>Application Portability worsens with more frameworks</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Adding Abstraction Layers on top</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Adding Abstraction Layers on top leads to API hell</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Adding Abstraction Layers on top leads to API hell</p>
  </div>
  <div class="page">
    <p>Our approach: Not a high-level framework</p>
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Framework</p>
    <p>User App</p>
    <p>API</p>
    <p>Runtime</p>
    <p>API/ABI (system call)</p>
    <p>Language</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Runtime</p>
    <p>API/ABI (system call)</p>
    <p>Language</p>
    <p>User App</p>
    <p>Our approach: Not a high-level framework</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Runtime</p>
    <p>API/ABI (system call)</p>
    <p>Language</p>
    <p>Node.js CPython</p>
    <p>PythonJavaScript</p>
    <p>User App herAppyourApp</p>
    <p>Embrace heterogeneity in software allow existing technology to work together</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Runtime</p>
    <p>POSIX API</p>
    <p>Language</p>
    <p>Node.js CPython</p>
    <p>PythonJavaScript</p>
    <p>User App herAppyourApp</p>
    <p>High-level Language VMs share a common interface to the underlying abstract machine</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Runtime</p>
    <p>POSIX API</p>
    <p>Language</p>
    <p>Node.js CPython</p>
    <p>PythonJavaScript</p>
    <p>User App herAppyourApp</p>
    <p>High-level Applications are agnostic about the underlying abstract machine</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Runtime</p>
    <p>Language</p>
    <p>Node.js CPython</p>
    <p>PythonJavaScript</p>
    <p>User App herAppyourApp</p>
    <p>High-level Applications are agnostic about the underlying abstract machine System call modeled as message between Actors</p>
    <p>POSIX API</p>
    <p>Actor.js Actor.py</p>
    <p>Actor (kernel)</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Runtime</p>
    <p>POSIX API</p>
    <p>Language</p>
    <p>Node.js CPython</p>
    <p>PythonJavaScript</p>
    <p>User App herAppyourApp</p>
    <p>Applications make system calls to interact with other agents</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Runtime</p>
    <p>POSIX API</p>
    <p>Language</p>
    <p>Node.js CPython</p>
    <p>PythonJavaScript</p>
    <p>User App herAppyourApp</p>
    <p>Hijack low-level Abstraction Layer alter the operational semantics of high-level software</p>
    <p>OneOS Middleware</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Hardware</p>
    <p>OS</p>
    <p>Runtime</p>
    <p>POSIX API</p>
    <p>Language</p>
    <p>Node.js CPython</p>
    <p>PythonJavaScript</p>
    <p>User App herAppyourApp</p>
    <p>Hijack low-level Abstraction Layer alter the operational semantics of high-level software</p>
    <p>Intercept system calls redirect to various distributed services</p>
    <p>OneOS Middleware</p>
  </div>
  <div class="page">
    <p>OneOS: Approach</p>
    <p>Runtime</p>
    <p>POSIX API</p>
    <p>Language</p>
    <p>Node.js CPython</p>
    <p>PythonJavaScript</p>
    <p>User App herAppyourApp</p>
    <p>File System Network Interfaces</p>
    <p>I/O Streams</p>
    <p>IPC ServiceFile System Service Scheduler</p>
    <p>Service</p>
    <p>OneOS Middleware</p>
  </div>
  <div class="page">
    <p>OneOS: Design</p>
    <p>x64 armv7x86</p>
    <p>Windows MacOS Linux</p>
    <p>OneOS</p>
    <p>App 1 App 2 App 3</p>
    <p>Network</p>
    <p>OneOS Middleware</p>
    <p>OneOS Middleware</p>
    <p>OneOS Middleware</p>
    <p>IPC FileSystem Scheduler Storage Session</p>
  </div>
  <div class="page">
    <p>OneOS: Design</p>
    <p>x64 armv7x86</p>
    <p>Windows MacOS Linux</p>
    <p>App 1 App 2 App 3</p>
    <p>Network</p>
    <p>OneOS</p>
    <p>OneOS Middleware</p>
    <p>OneOS Middleware</p>
    <p>OneOS Middleware</p>
    <p>IPC FileSystem Scheduler Storage Session</p>
    <p>fs.writeFile</p>
  </div>
  <div class="page">
    <p>OneOS: Design</p>
    <p>x64 armv7x86</p>
    <p>Windows MacOS Linux</p>
    <p>OneOS</p>
    <p>App 1 App 2 App 3</p>
    <p>Network</p>
    <p>OneOS Middleware</p>
    <p>OneOS Middleware</p>
    <p>OneOS Middleware</p>
    <p>IPC FileSystem Scheduler Storage Session</p>
    <p>fs.writeFile</p>
  </div>
  <div class="page">
    <p>OneOS: Design</p>
    <p>x64 armv7x86</p>
    <p>Windows MacOS Linux</p>
    <p>OneOS</p>
    <p>App 1 App 2 App 3</p>
    <p>Network</p>
    <p>OneOS Middleware</p>
    <p>OneOS Middleware</p>
    <p>OneOS Middleware</p>
    <p>IPC FileSystem Scheduler Storage Session</p>
    <p>process.stdout.write</p>
  </div>
  <div class="page">
    <p>OneOS: Design</p>
    <p>x64 armv7x86</p>
    <p>Windows MacOS Linux</p>
    <p>OneOS</p>
    <p>App 1 App 2 App 3</p>
    <p>Network</p>
    <p>OneOS Middleware</p>
    <p>OneOS Middleware</p>
    <p>OneOS Middleware</p>
    <p>IPC FileSystem Scheduler Storage Session</p>
    <p>POSIX Machine</p>
  </div>
  <div class="page">
    <p>OneOS: Proof-of-Concept Demo</p>
    <p>DependableSystemsLab/OneOS 63</p>
  </div>
  <div class="page">
    <p>OneOS: Discussion</p>
    <p>Feedback Wanted:  Evaluation strategies  Practicality of Actor-based micro-kernel  Suitability of high-level language for</p>
    <p>systems programming</p>
    <p>Controversial Points:  Single system image appropriate for a</p>
    <p>geographically distributed grid?  Mapping POSIX interface over an</p>
    <p>inherently distributed and concurrent architecture?</p>
    <p>Limiting application space to high-level languages?</p>
    <p>Open Issues &amp; Future Work:  Security and Privacy model  Failure handling  Semantics of cyber-physical resources</p>
    <p>Potential Drawbacks:  Fundamental tension between</p>
    <p>cyber-physical resources and their abstract representations</p>
    <p>Reasoning about security concerns within high-level programming space</p>
    <p>Inability to make low-level optimizations</p>
    <p>DependableSystemsLab/OneOSkumseok@ece.ubc.ca 64</p>
  </div>
</Presentation>
