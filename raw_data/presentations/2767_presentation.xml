<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Stateless Datacenter Load Balancing with Beamer</p>
    <p>Vladimir Olteanu, Alexandru Agache,</p>
    <p>Andrei Voinescu, Costin Raiciu</p>
    <p>University Politehnica of Bucharest</p>
    <p>Thanks to</p>
  </div>
  <div class="page">
    <p>Datacenter load balancing</p>
  </div>
  <div class="page">
    <p>Datacenter load balancing today</p>
    <p>MUX MUX</p>
    <p>Server Server Server</p>
    <p>Border router</p>
    <p>ECMP VIP VIP</p>
    <p>DIP1 DIP2 DIP3</p>
    <p>srcIP dstIP payload</p>
  </div>
  <div class="page">
    <p>Strawman approach</p>
    <p>MUX</p>
    <p>Server1 HASH</p>
    <p>FUNCTION</p>
  </div>
  <div class="page">
    <p>Strawman approach</p>
    <p>MUX</p>
    <p>Server1</p>
    <p>Server2</p>
    <p>HASH FUNCTION</p>
    <p>Adding/removing servers breaks connection affinity</p>
    <p>X</p>
    <p>X</p>
  </div>
  <div class="page">
    <p>Load balancers use state to ensure connection affinity</p>
    <p>MUX</p>
    <p>Flow DIP</p>
    <p>1</p>
    <p>1</p>
    <p>1</p>
    <p>Server1</p>
    <p>Server2</p>
  </div>
  <div class="page">
    <p>Load balancers use state to ensure connection affinity</p>
    <p>MUX</p>
    <p>Flow DIP</p>
    <p>1</p>
    <p>1</p>
    <p>1</p>
    <p>2</p>
    <p>Server1</p>
    <p>Server2</p>
    <p>Only new connections are hashed</p>
  </div>
  <div class="page">
    <p>Load balancers use state to ensure connection affinity</p>
    <p>MUX 1</p>
    <p>Server1</p>
    <p>Server2</p>
    <p>MUX 2</p>
    <p>Flow DIP</p>
    <p>Flow DIP</p>
    <p>1</p>
    <p>1</p>
    <p>1</p>
    <p>2</p>
  </div>
  <div class="page">
    <p>Load balancers use state to ensure connection affinity</p>
    <p>MUX 1</p>
    <p>Flow DIP</p>
    <p>1</p>
    <p>1</p>
    <p>1</p>
    <p>2</p>
    <p>Server1</p>
    <p>Server2</p>
    <p>Scaling mux pool may reset some connections</p>
    <p>MUX 2</p>
    <p>Flow DIP</p>
    <p>2</p>
    <p>2</p>
    <p>X</p>
  </div>
  <div class="page">
    <p>Load balancers use state to ensure connection affinity</p>
    <p>MUX</p>
    <p>Flow DIP</p>
    <p>1</p>
    <p>1</p>
    <p>1</p>
    <p>2</p>
    <p>Server1</p>
    <p>Server2</p>
  </div>
  <div class="page">
    <p>SYN floods use up state memory</p>
    <p>MUX</p>
    <p>Flow DIP</p>
    <p>1</p>
    <p>1</p>
    <p>1</p>
    <p>2</p>
    <p>Server1</p>
    <p>Server2</p>
    <p>N</p>
  </div>
  <div class="page">
    <p>SYN floods use up state memory</p>
    <p>MUX</p>
    <p>Flow DIP</p>
    <p>N</p>
    <p>N</p>
    <p>N</p>
    <p>N</p>
    <p>N</p>
    <p>Server1</p>
    <p>Server2</p>
    <p>N</p>
  </div>
  <div class="page">
    <p>SYN floods use up state memory</p>
    <p>MUX</p>
    <p>Flow DIP</p>
    <p>N</p>
    <p>N</p>
    <p>N</p>
    <p>N</p>
    <p>N</p>
    <p>Server1</p>
    <p>Server2</p>
    <p>Back to the straw man approach</p>
    <p>HASH FUNCTION</p>
    <p>N</p>
    <p>X</p>
  </div>
  <div class="page">
    <p>Stateful designs dont guarantee connection affinity</p>
  </div>
  <div class="page">
    <p>Beamer: stateless load balancing</p>
    <p>Beamer muxes do not keep per-connection state;</p>
    <p>each packet is forwarded independently.</p>
    <p>When the target server changes, connections may break.</p>
    <p>Beamer uses state stored in servers to</p>
    <p>redirect stray packets.</p>
  </div>
  <div class="page">
    <p>Beamer daisy chaining</p>
    <p>MUX</p>
    <p>Server1</p>
    <p>Server2</p>
    <p>MUX DATAPLANE</p>
    <p>Used when reassigning traffic</p>
    <p>Want to POWER OFF</p>
  </div>
  <div class="page">
    <p>Beamer daisy chaining</p>
    <p>MUX</p>
    <p>Server1</p>
    <p>Server2</p>
    <p>MUX DATAPLANE</p>
    <p>Used when reassigning traffic</p>
    <p>Want to POWER OFF</p>
  </div>
  <div class="page">
    <p>Beamer daisy chaining</p>
    <p>MUX</p>
    <p>Server1</p>
    <p>Server2</p>
    <p>Daisy-chained connections die off in time</p>
    <p>MUX DATAPLANE</p>
    <p>Want to POWER OFF</p>
  </div>
  <div class="page">
    <p>Balancing packets in Beamer Which hashing algorithm is best?</p>
    <p>Low churn Good load balancing</p>
    <p>Few rules in dataplane</p>
    <p>ECMP</p>
    <p>Consistent Hashing</p>
    <p>Maglev Hashing</p>
  </div>
  <div class="page">
    <p>Beamer hashing</p>
    <p>Indirection layer Pick number of buckets B &gt; N, number of servers</p>
    <p>Mux dataplane:  Assign each bucket to one server  Bucket-to-server mappings known by all muxes  Maintained by a centralized controller</p>
    <p>Mux algorithm:  Hash each packet modulo B  Send to corresponding server</p>
  </div>
  <div class="page">
    <p>Beamer at work</p>
    <p>MUX</p>
    <p>Server1</p>
    <p>Bkt DIP PDIP TS</p>
    <p>Server2</p>
  </div>
  <div class="page">
    <p>Beamer at work</p>
    <p>MUX</p>
    <p>Server1</p>
    <p>Server2</p>
    <p>Packets contain previous server and time of reassignment</p>
    <p>IP DIP1 t</p>
    <p>IP Option</p>
    <p>IP TCP</p>
    <p>Bkt DIP PDIP TS</p>
  </div>
  <div class="page">
    <p>Beamer at work</p>
    <p>MUX</p>
    <p>Server1</p>
    <p>Server2</p>
    <p>New connections are handled locally</p>
    <p>Bkt DIP PDIP TS</p>
  </div>
  <div class="page">
    <p>Beamer at work</p>
    <p>Server1</p>
    <p>Server2</p>
    <p>Daisy chained connections die off in time</p>
    <p>MUX</p>
    <p>Bkt DIP PDIP TS</p>
  </div>
  <div class="page">
    <p>Benefits of Beamer muxes</p>
    <p>Less memory usage and cache thrashing</p>
    <p>Implementable in hardware: P4</p>
    <p>Interchangeable</p>
    <p>Resilient to SYN flood attacks</p>
    <p>Cost: 16B encapsulation overhead per packet</p>
  </div>
  <div class="page">
    <p>Beamer mux performance</p>
    <p>Software implementation on top of netmap</p>
    <p>Machine: Xeon E5-2697 v2 @ 2.70GHz, Intel 82599 NIC</p>
    <p>Compared against:</p>
    <p>Stateful  similar performance to Googles Maglev [NSDI16]</p>
  </div>
  <div class="page">
    <p>Single mux performance</p>
  </div>
  <div class="page">
    <p>Realistic traffic</p>
    <p>HTTP traffic from recent MAWI trace</p>
    <p>Packets replayed back-to-back</p>
    <p>15 times more downstream traffic: 540Gbps</p>
    <p>Rough estimate: 50-500 servers/mux</p>
    <p>Assuming servers source 1-10Gbps of traffic</p>
  </div>
  <div class="page">
    <p>Testbed evaluation</p>
    <p>20 machines</p>
    <p>10Gbps NICs</p>
    <p>IBM RackSwitch 8264 as border router</p>
    <p>Software muxes</p>
    <p>P4 reference implementation also used</p>
  </div>
  <div class="page">
    <p>Adding and removing muxes</p>
    <p>Mux failures and churn are handled smoothly</p>
  </div>
  <div class="page">
    <p>Adding servers</p>
    <p>Beamer spreads traffic evenly across servers</p>
  </div>
  <div class="page">
    <p>Connection affinity under SYN flood attacks</p>
    <p>DIPs Drained 0 1 2 4</p>
    <p>Stateful 0 872 1488 35121</p>
    <p>Beamer 0 0 0 0</p>
    <p>Drain servers during SYN flood</p>
  </div>
  <div class="page">
    <p>Control plane</p>
    <p>A centralized fault-tolerant controller manages the dataplane</p>
    <p>MUX MUX MUX MUX Controller</p>
    <p>ZooKeeper Cluster</p>
  </div>
  <div class="page">
    <p>Control plane</p>
    <p>MUX MUX MUX MUX Controller</p>
    <p>ZooKeeper Cluster</p>
    <p>v1</p>
    <p>DIP PDIP TS</p>
    <p>D1 D3 TS1</p>
    <p>D2 D4 TS2</p>
    <p>v1 v1 v1 v1</p>
  </div>
  <div class="page">
    <p>Control plane</p>
    <p>MUX MUX MUX MUX Controller</p>
    <p>ZooKeeper Cluster</p>
    <p>v2v1 v1 v1 v1</p>
    <p>DIP PDIP TS</p>
    <p>D4 D1 NOW</p>
    <p>D2 D4 TS2</p>
  </div>
  <div class="page">
    <p>Control plane</p>
    <p>Muxes download update</p>
    <p>Daisy chaining allows for temporarily stale muxes</p>
    <p>MUX MUX MUX MUX Controller</p>
    <p>ZooKeeper Cluster</p>
    <p>v2v2 v1 v2 v1</p>
  </div>
  <div class="page">
    <p>Control plane experiments</p>
    <p>Tested on Amazon EC2</p>
    <p>3 ZooKeeper daemons, 100 muxes</p>
    <p>Large simulated service: 64K servers, 6.4M buckets</p>
    <p>Stress-tested controller</p>
  </div>
  <div class="page">
    <p>Control plane experiments</p>
    <p>When adding 32.000 servers:</p>
    <p>Controller takes 1-10s to update ZooKeeper</p>
    <p>Muxes take 0.5-6s to get new dataplane information</p>
    <p>Total control traffic: 1GB (10MB/mux)</p>
  </div>
  <div class="page">
    <p>Please see paper for:</p>
    <p>MPTCP support in Beamer</p>
    <p>Minimizing # of rules required in muxes</p>
    <p>1 rule / server, rather than 1 rule / bucket</p>
    <p>Avoiding reset connections in corner cases</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Stateless load balancing using daisy chaining</p>
    <p>36Gbps of HTTP traffic on 7 cores  540Gbps of downlink traffic</p>
    <p>Scalable, fault tolerant control plane</p>
    <p>Beamer is open-source: https://github.com/Beamer-LB</p>
  </div>
</Presentation>
