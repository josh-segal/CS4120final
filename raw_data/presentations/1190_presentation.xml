<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Soyeon Park, Sangho Lee, Wen Xu, Hyungon Moon and Taesoo Kim</p>
    <p>LIBMPK: SOFTWARE ABSTRACTION FOR INTEL MEMORY PROTECTION KEYS (INTEL MPK)</p>
  </div>
  <div class="page">
    <p>INTEL MPK EXPLAINED</p>
    <p>INTEL MEMORY PROTECTION KEYS</p>
    <p>2</p>
    <p>Available from Intel Skylake-sp processor  Support fast permission change for page groups with single instruction  Execute-only memory</p>
    <p>page# pkey perm. 120 8 r/w 232 1 r/o 456 8 r/o</p>
    <p>DTLB</p>
    <p>page# perm. 232 x</p>
    <p>ITLB</p>
    <p>page# effectiveperm. effective</p>
    <p>perm.</p>
    <p>... 0 1 8 15</p>
    <p>PKRU (corea)</p>
    <p>r/w n/a r/w n/a...</p>
    <p>page#</p>
    <p>... 0 1 8 15</p>
    <p>r/w r/w r/o n/a...</p>
    <p>WRPKRU RDPKRU</p>
    <p>...</p>
    <p>... (per-process,</p>
    <p>PKRU (coreb)</p>
    <p>(per-core, asynchronous)</p>
    <p>x r</p>
    <p>r/x r</p>
    <p>OS-managed Userspace process</p>
    <p>perm: pkey:</p>
    <p>(corea) (coreb)</p>
    <p>red synchronized) blue</p>
    <p>: pkey = 1 : pkey = 8</p>
    <p>Protection key field</p>
    <p>Protection key right unit register</p>
  </div>
  <div class="page">
    <p>CHALLENGES : UTILIZING MPK</p>
    <p>CHALLENGES AND LIBMPK</p>
    <p>3</p>
    <p>Potential Security Hazard : key-use-after-free  pkey_free does not perfectly free the protection key</p>
    <p>Non-scalable Hardware Resources  32-bit PKRU register, supporting only 16 keys</p>
    <p>Asynchronous permission change  Permission change with MPK is thread-local intrinsically</p>
    <p>Key virtualization can solve both by decoupling physical keys from user interface and supporting key indirection.</p>
    <p>libmpk provides permission synchronization API to resolve this challenge</p>
  </div>
  <div class="page">
    <p>EVALUATION : LIBMPK</p>
    <p>CONCLUSION</p>
    <p>4</p>
    <p>Application Protected target Performance OpenSSL Private key 0.53% slowdown</p>
    <p>Memcached slab 0.01% slowdown</p>
    <p>Chakracore JIT cache 4.39% improvement</p>
    <p>V8 JIT cache 0.81% slowdown</p>
    <p>libmpk is a secure, scalable, and synchronizable abstraction of MPK for supporting fast memory protection and isolation with little effort.</p>
    <p>July 10th 16:10 Track II Security #1: Kernel</p>
  </div>
</Presentation>
