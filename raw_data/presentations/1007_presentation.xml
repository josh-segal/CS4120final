<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Optimizing the Design and Implementation of the Linux</p>
    <p>ARM Hypervisor</p>
    <p>Christoffer Dall, Shih-Wei Li, Jason Nieh</p>
    <p>Computer Science Department</p>
  </div>
  <div class="page">
    <p>Virtualization</p>
    <p>Essential technology for servers and cloud computing</p>
    <p>Support running multiple virtual machines on a piece of hardware</p>
    <p>Efficient partitioning and utilization of hardware resources</p>
  </div>
  <div class="page">
    <p>ARM Servers Virtualization Extensions</p>
    <p>Virtualization on ARM</p>
  </div>
  <div class="page">
    <p>Virtualization</p>
  </div>
  <div class="page">
    <p>Virtualization</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>Hypervisor Design</p>
  </div>
  <div class="page">
    <p>Hypervisor Design</p>
  </div>
  <div class="page">
    <p>Hypervisor Design</p>
    <p>Xen KVM</p>
    <p>Dom0</p>
  </div>
  <div class="page">
    <p>Hypervisor OS Kernel</p>
    <p>A full OS to support hypervisor functionality</p>
    <p>Xen KVM</p>
    <p>Dom0</p>
    <p>Hypervisor OS Kernel</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>Cost in transitions from the VM to the Hypervisor OS Kernel is critical</p>
    <p>to virtualization performance</p>
    <p>Optimize the design and performance of KVM/ARM</p>
    <p>Take advantage of unique features in ARM Virtualization support</p>
    <p>Reduce the cost of running Hypervisor OS Kernel</p>
  </div>
  <div class="page">
    <p>Hardware virtualization support</p>
    <p>Modern hypervisors leverage hardware virtualization support in their</p>
    <p>design</p>
    <p>Different hardware features provided by the architectures</p>
    <p>Different approach to run Hypervisor OS Kernel</p>
  </div>
  <div class="page">
    <p>x86 Virtualization Support (Intel VMX)</p>
    <p>Root (Hypervisor) Non-Root (VM)</p>
  </div>
  <div class="page">
    <p>KVM x86</p>
  </div>
  <div class="page">
    <p>ARM Virtualization Extensions</p>
  </div>
  <div class="page">
    <p>KVM/ARM</p>
  </div>
  <div class="page">
    <p>Sharing kernel mode state</p>
    <p>Multiplexing kernel mode is expensive!</p>
    <p>Multiplexing the shared kernel mode in software is more expensive</p>
    <p>than hardware</p>
  </div>
  <div class="page">
    <p>Separate mode for Hypervisor OS kernel</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>EL2 :</p>
    <p>Separate CPU mode</p>
    <p>Different page table formats</p>
    <p>Limited capabilities compared to</p>
    <p>EL1</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>EL2 :</p>
    <p>Separate CPU mode</p>
    <p>Different page table formats</p>
    <p>Limited capabilities compared to</p>
    <p>EL1</p>
    <p>Cannot run unmodified OS in EL2!</p>
  </div>
  <div class="page">
    <p>Running Linux and KVM in EL2</p>
    <p>Hardware: VHE (Virtualization Host Extensions)</p>
    <p>Hardware is not available yet!</p>
  </div>
  <div class="page">
    <p>Running Linux and KVM in EL2</p>
    <p>Hardware: VHE (Virtualization Host Extensions)</p>
    <p>Hardware is not available yet!</p>
    <p>Software: Change Linux to run in EL2</p>
  </div>
  <div class="page">
    <p>KVM/ARM Redesign</p>
    <p>Avoid multiplexing kernel mode states</p>
    <p>Avoid operating across different CPU modes</p>
    <p>Allow the Hypervisor OS kernel to program the EL2 hardware</p>
    <p>Reduce code complexity</p>
  </div>
  <div class="page">
    <p>Experimental Setup</p>
    <p>ARM Hardware</p>
    <p>AMD Seattle Rev B0</p>
    <p>2 GHz AMD A1100 CPU</p>
    <p>8-way SMP</p>
    <p>16 GB RAM</p>
    <p>10 GB Ethernet</p>
    <p>x86 Hardware</p>
    <p>Dell PowerEdge r320</p>
    <p>2.1 GHz Intel Xeon E5-2450</p>
    <p>8-way SMP</p>
    <p>16 GB RAM</p>
    <p>10 GB Ethernet</p>
    <p>VM</p>
    <p>4-way SMP</p>
    <p>12GB RAM</p>
    <p>Passthrough NIC</p>
  </div>
  <div class="page">
    <p>Hypercall benchmark</p>
    <p>No-op Hypercall: VM traps to the hypervisor and returns immediately</p>
    <p>Base cost for hypervisor to serve the virtual machines</p>
    <p>Include the cost of transitioning between the VM and the hypervisor</p>
    <p>OS kernel in KVM</p>
  </div>
  <div class="page">
    <p>Hypercall benchmark</p>
    <p>CPU cycles ARM ARM EL2 OPT x86</p>
    <p>Hypercall 6,413 752 1,437</p>
  </div>
  <div class="page">
    <p>Application Workloads</p>
    <p>Applications Description</p>
    <p>Kernbench Kernel compile</p>
    <p>Hackbench Scheduler stress</p>
    <p>Netperf (TCP_RR) Network performance</p>
    <p>Apache Web server stress</p>
    <p>Memcached Key-Value store</p>
  </div>
  <div class="page">
    <p>Application Results</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Optimized the design and performance of KVM/ARM</p>
    <p>Improved its performance by roughly an order of magnitude</p>
    <p>Accomplished faster performance than KVM on x86</p>
    <p>Benefit from future ARM hardware with VHE support</p>
    <p>Many of the proposed changes have been merged to mainline Linux</p>
  </div>
  <div class="page">
    <p>Q&amp;A</p>
  </div>
</Presentation>
