<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>gScale: Scaling up GPU Virtualization with Dynamic Sharing of Graphics</p>
    <p>Memory Space</p>
    <p>Intel Corporation</p>
    <p>Shanghai Jiao Tong UniversityMochi Xue</p>
  </div>
  <div class="page">
    <p>GPU in Cloud</p>
    <p>GPUvm</p>
    <p>USENIX ATC14</p>
    <p>gVirt</p>
    <p>USENIX ATC14</p>
    <p>GPU Cloud is introduced to meet the high demand of GPU resource.</p>
    <p>As a key enabling technology of GPU Cloud, GPU virtualization is intended to provide flexible and scalable GPU resources for multiple instances.</p>
    <p>Some GPU virtualization solutions spring out recently:</p>
  </div>
  <div class="page">
    <p>gVirt (iGVT-g) A full GPU virtualization solution with mediated pass-through</p>
    <p>for Intel GPU.</p>
    <p>However, gVirt suffers from its limited scalability.</p>
    <p>Full Features  High Performance  Open Source</p>
  </div>
  <div class="page">
    <p>Scalability Issue</p>
    <p>Scalability is an indispensable feature which ensures high resource utilization by hosting dense VM instances on cloud servers.</p>
    <p>For GPU embedded in Intel HASWELL CPU, gVirt is only able to host 3 guest VM instances maximally on one physical server.</p>
    <p>Limited Scalability Resource Underutilization</p>
  </div>
  <div class="page">
    <p>Background</p>
    <p>System Memory Space</p>
    <p>Global Graphics Memory Space</p>
    <p>GTT</p>
    <p>Graphics Translation Table (GTT)  Also known as global graphics translation table  A memory-resident page table  Global Graphics Memory Address -&gt; System Memory Address.</p>
  </div>
  <div class="page">
    <p>Background</p>
    <p>System Memory Space</p>
    <p>Global Graphics Memory Space</p>
    <p>GTT</p>
    <p>GPU CPU</p>
    <p>Aperture</p>
  </div>
  <div class="page">
    <p>Background</p>
    <p>System Memory Space</p>
    <p>Low GM</p>
    <p>GTT</p>
    <p>GPU CPU</p>
    <p>Aperture</p>
    <p>High GM</p>
  </div>
  <div class="page">
    <p>Static Partition</p>
    <p>host hostVM1 VM2 VM3 VM1 VM2 VM3</p>
    <p>Low GM High GM</p>
    <p>low highVM1</p>
    <p>For Intel GPU (HASWELL CPU): 2MB GTT -&gt; 2GB Graphics Memory Space 512KB Aperture -&gt; 512MB low GM + 1536 MB high GM</p>
    <p>Recommended VM settings: 128 MB low GM (512 / 128 = 4) 384 MB high GM (1536 / 384 = 4) 4  1 = 3 (guest VMs)</p>
  </div>
  <div class="page">
    <p>Shared Shadow GTT</p>
    <p>Shared Shadow GTT VM1 view</p>
    <p>Shared Shadow GTT VM2 view</p>
    <p>Physical GTT</p>
    <p>Shared Shadow GTT  A copy of physical GTT shared by all the guest VMs.  It exposes different parts of GTT to each guest VM.</p>
  </div>
  <div class="page">
    <p>Shared Shadow GTT</p>
    <p>Shared Shadow GTT  VM can only access its assigned part of Graphics Memory</p>
    <p>Space.  Graphics driver marks the rest part of Graphics Memory</p>
    <p>Space as inaccessible.</p>
    <p>host hostVM1 VM2 VM3 VM1 VM2 VM3Host</p>
    <p>VM1 VM1VM1</p>
    <p>VM2 VM2VM2</p>
    <p>Low GM High GM</p>
  </div>
  <div class="page">
    <p>gScale A scalable GPU virtualization solution with dynamic sharing of</p>
    <p>graphics memory space based on gVirt.</p>
    <p>Up to 5x scalability of gVirt with slight runtime overhead.</p>
    <p>Private Shadow GTT Ladder Mapping Slot Sharing</p>
  </div>
  <div class="page">
    <p>Private Shadow GTT GPU Scheduling Pattern  VMs take turns to submit workloads to physical GPU.  Each VM occupy the GPU for a time slice.</p>
    <p>GPU</p>
    <p>VM1 VM2 VM3</p>
    <p>At the same time, only one VM is served by physical GPU.</p>
    <p>Render owner</p>
  </div>
  <div class="page">
    <p>Private Shadow GTT</p>
    <p>Private Shadow GTT  A specific copy of physical GTT for each guest VM.  It could expose same part of GTT to guest VMs.</p>
    <p>Private Shadow GTT of VM1</p>
    <p>Private Shadow GTT of VM2</p>
    <p>Physical GTT</p>
    <p>Shared Shadow GTT VM1 view</p>
    <p>Shared Shadow GTT VM2 view</p>
    <p>Physical GTT</p>
    <p>Shared Shadow GTT Private Shadow GTT</p>
  </div>
  <div class="page">
    <p>Private Shadow GTT</p>
    <p>Shared Shadow GTT  When context switch happens, gScale writes VMs private</p>
    <p>shadow GTT onto physical GTT.  Guest VMs could use the same range of Graphics Memory Space.  High GM space now is sharable among the guest VMs.</p>
    <p>host hostVM1 VM2 VM3 sharableHost</p>
    <p>VM1</p>
    <p>VM2</p>
    <p>Low GM High GM</p>
    <p>VM3</p>
  </div>
  <div class="page">
    <p>Ladder Mapping</p>
    <p>High GM space is only accessible by GPU.  Low GM space is also accessible by CPU.  Multiple VMs could access the low GM simultaneously.</p>
    <p>Private shadow GTT doesnt work for low GM.</p>
  </div>
  <div class="page">
    <p>Ladder Mapping</p>
    <p>Guest Physical Address</p>
    <p>EPT</p>
    <p>Host MMIO Address</p>
    <p>Global GM Address</p>
    <p>Aperture</p>
    <p>Low GM</p>
    <p>Host Physical Address</p>
    <p>GTT</p>
  </div>
  <div class="page">
    <p>Ladder Mapping</p>
    <p>Force CPU access system memory space bypassing the low GM space. Low GM now is not accessible for CPU.</p>
    <p>We could enable dynamic sharing for the whole graphics memory space.</p>
    <p>host hostsharable sharableHost</p>
    <p>VM1</p>
    <p>VM2</p>
    <p>Low GM High GM</p>
    <p>VMn</p>
  </div>
  <div class="page">
    <p>Fence Memory Pool</p>
    <p>Guest Physical Address</p>
    <p>EPT</p>
    <p>MMIO address (Aperture)</p>
    <p>GTT</p>
    <p>fence</p>
    <p>Low GM Space</p>
    <p>Host Physical Address</p>
    <p>Fence Memory Pool</p>
  </div>
  <div class="page">
    <p>Low GM High GM</p>
    <p>Optimization: Partial Copying</p>
    <p>Private Shadow GTT of VM1</p>
    <p>Physical GTT</p>
    <p>fence sharable sharablehost host</p>
    <p>Private Shadow GTT of VM1</p>
    <p>Physical GTT</p>
    <p>gScale only copies sharable part of GTT</p>
  </div>
  <div class="page">
    <p>Low GM High GM</p>
    <p>Slot Sharing</p>
    <p>fence sharable sharablehost host</p>
    <p>More high GM space than standard configuration does not increase the performance of VM.</p>
    <p>Low GM High GM</p>
    <p>fence sharablehost host slot 1 slot 3slot 2</p>
    <p>gScale divides sharable high GM space into 3 slots.  Each slot could hold one VMs high GM.</p>
  </div>
  <div class="page">
    <p>Slot Sharing</p>
    <p>Optimized Scheduler: gScale does not switch GTT of idle VM.  Put idle VM with busy VM in one slot.</p>
    <p>host slot 1 slot 3slot 2</p>
    <p>VM1</p>
    <p>VM2</p>
    <p>VM3</p>
    <p>VM4</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Configuration</p>
    <p>CPU Intel E3-1285 v3 (4 cores, 3.6Ghz)</p>
    <p>RAM 32GB</p>
    <p>HDD SAMSUNG 850Pro 512GB * 3</p>
    <p>GPU Intel HD Graphics P4700</p>
    <p>Hardware</p>
    <p>Linux/Windows Guest VM</p>
    <p>vCPU 2</p>
    <p>Memory 1800/2048 MB</p>
    <p>Low GM 64/128 MB</p>
    <p>High GM 384 MB</p>
    <p>OS Ubuntu 14.04/Windows 7</p>
    <p>Benchmarks</p>
    <p>Phoronix Test Suit 3D Marks</p>
  </div>
  <div class="page">
    <p>Compare with gVirt</p>
    <p>LightsMark Nexuiz OpenArena Warsow GT1 GT2 HDR1 HDR2</p>
    <p>N o</p>
    <p>m a</p>
    <p>li ze</p>
    <p>d P</p>
    <p>e rf</p>
    <p>o rm</p>
    <p>a n</p>
    <p>ce (</p>
    <p>to g</p>
    <p>V ir</p>
    <p>t)</p>
    <p>The performance is up to 99% of gVirt, while the overhead is less than 5% of gVirts performance.</p>
  </div>
  <div class="page">
    <p>Scalability of Linux VM When VM is over 1, GTT copying causes the performance drop.</p>
    <p>LightsMark Nexuiz OpenArena Warsow</p>
    <p>N o</p>
    <p>rm a</p>
    <p>li ze</p>
    <p>d P</p>
    <p>e rf</p>
    <p>o rm</p>
    <p>a n</p>
    <p>ce (</p>
    <p>to 1</p>
    <p>V M</p>
    <p>)</p>
  </div>
  <div class="page">
    <p>Scalability of Windows VM When VM is over 1, GTT switch causes the performance drop.</p>
    <p>GT1 GT2 HDR1 HDR2</p>
    <p>N o</p>
    <p>rm a</p>
    <p>li ze</p>
    <p>d P</p>
    <p>e rf</p>
    <p>o rm</p>
    <p>a n</p>
    <p>ce (</p>
    <p>to 1</p>
    <p>V M</p>
    <p>)</p>
  </div>
  <div class="page">
    <p>N o</p>
    <p>rm a</p>
    <p>li ze</p>
    <p>d P</p>
    <p>e rf</p>
    <p>o rm</p>
    <p>a n</p>
    <p>ce (</p>
    <p>t o</p>
    <p>M )</p>
    <p>with-slot without-slot</p>
    <p>Performance with Slot Sharing</p>
    <p>Under a high density of VM, slot sharing could mitigate the performance drop caused by shadow GTT copying.</p>
  </div>
  <div class="page">
    <p>Overhead Impact of Slot Sharing</p>
    <p>For Linux VM, the slot sharing reduces the overhead of shadow GTT copying by 83%.</p>
    <p>For Windows VM, the slot sharing reduces the overhead of shadow GTT copying by 73%.</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Source code will soon be available https://01.org/igvt-g</p>
    <p>Up to 5x Scalability of gVirt.</p>
    <p>Private Shadow GTT</p>
    <p>Ladder Mapping</p>
    <p>A scalable GPU virtualization solution with dynamic sharing of graphics memory space based on gVirt.</p>
    <p>Slot Sharing</p>
  </div>
  <div class="page">
    <p>Q&amp;A</p>
    <p>gScale: Scaling up GPU Virtualization with Dynamic Sharing of GraphicsMemory Space</p>
  </div>
  <div class="page">
    <p>Q&amp;A</p>
  </div>
</Presentation>
