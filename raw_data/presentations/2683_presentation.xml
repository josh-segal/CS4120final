<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Minimizing Faulty Executions of Distributed Systems</p>
    <p>Colin Scott, Aurojit Panda, Vjekoslav Brajkovic, George Necula, Arvind Krishnamurthy, Scott Shenker</p>
  </div>
  <div class="page">
    <p>Software Developer</p>
  </div>
  <div class="page">
    <p>(GBs) Software Developer</p>
  </div>
  <div class="page">
    <p>Node1 ?</p>
    <p>Node2</p>
    <p>Node3</p>
    <p>Node4</p>
    <p>Node5</p>
    <p>Node6</p>
    <p>Node7</p>
    <p>Node8</p>
    <p>Node9</p>
    <p>Node10</p>
    <p>Node11</p>
    <p>Node12</p>
    <p>Software Developer</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Understanding How Bug Is Triggered</p>
    <p>Fixing Problematic Code</p>
  </div>
  <div class="page">
    <p>Our Goal</p>
    <p>Allow Developers To Focus on Fixing the Underlying Bug</p>
  </div>
  <div class="page">
    <p>Problem Statement</p>
    <p>Identify a minimal causal sequence of events that</p>
    <p>triggers the bug</p>
  </div>
  <div class="page">
    <p>Outline Introduction Background</p>
    <p>Minimization</p>
    <p>Evaluation Conclusion</p>
    <p>Randomized Testing with</p>
    <p>DEMi</p>
    <p>Node 1 Node N</p>
    <p>Test Coordinator</p>
    <p>QA Testbed</p>
    <p>Software Under Test</p>
  </div>
  <div class="page">
    <p>Outline Introduction Background</p>
    <p>Minimization</p>
    <p>Evaluation Conclusion</p>
    <p>Randomized Testing with</p>
    <p>DEMi</p>
    <p>Node 1 Node N</p>
    <p>Test Coordinator</p>
    <p>QA Testbed</p>
    <p>Software Under Test</p>
  </div>
  <div class="page">
    <p>Outline Introduction Background</p>
    <p>Minimization</p>
    <p>Evaluation Conclusion</p>
    <p>Randomized Testing with</p>
    <p>DEMi</p>
    <p>Node 1 Node N</p>
    <p>Test Coordinator</p>
    <p>QA Testbed</p>
    <p>Software Under Test</p>
  </div>
  <div class="page">
    <p>Outline Introduction Background</p>
    <p>Minimization</p>
    <p>Evaluation Conclusion</p>
    <p>Randomized Testing with</p>
    <p>DEMi</p>
    <p>Node 1 Node N</p>
    <p>Test Coordinator</p>
    <p>QA Testbed</p>
    <p>Software Under Test</p>
  </div>
  <div class="page">
    <p>Randomized Testing with DEMi App</p>
    <p>RPC lib</p>
    <p>OS</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS</p>
  </div>
  <div class="page">
    <p>Randomized Testing with DEMi App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
  </div>
  <div class="page">
    <p>Randomized Testing with DEMi App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>msg dst: b</p>
  </div>
  <div class="page">
    <p>Randomized Testing with DEMi App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>msg dst: b</p>
  </div>
  <div class="page">
    <p>Randomized Testing with DEMi App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>msg dst: b</p>
  </div>
  <div class="page">
    <p>Randomized Testing with DEMi App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>msg dst: b</p>
  </div>
  <div class="page">
    <p>Randomized Testing with DEMi App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>msg dst: b</p>
    <p>message delivery</p>
  </div>
  <div class="page">
    <p>Randomized Testing with DEMi App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>msg dst: b</p>
    <p>message delivery</p>
  </div>
  <div class="page">
    <p>Randomized Testing with DEMi App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>timer dst: bmsg</p>
    <p>dst: a</p>
    <p>message delivery</p>
  </div>
  <div class="page">
    <p>Randomized Testing with DEMi App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>timer dst: b</p>
    <p>msg dst: a</p>
    <p>message delivery</p>
  </div>
  <div class="page">
    <p>Randomized Testing with DEMi App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>timer dst: b</p>
    <p>msg dst: a</p>
    <p>message delivery</p>
    <p>External events (events outside</p>
    <p>systems control): Crash-recovery Process creation External message</p>
  </div>
  <div class="page">
    <p>Randomized Testing with DEMi App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>timer dst: b</p>
    <p>msg dst: a</p>
    <p>message delivery</p>
    <p>crash recovery</p>
    <p>External events (events outside</p>
    <p>systems control): Crash-recovery Process creation External message</p>
  </div>
  <div class="page">
    <p>Randomized Testing with DEMi App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>timer dst: b</p>
    <p>msg dst: a</p>
    <p>message delivery</p>
    <p>crash recovery</p>
    <p>External events (events outside</p>
    <p>systems control): Crash-recovery Process creation External message</p>
  </div>
  <div class="page">
    <p>Randomized Testing with DEMi App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS AspectJ</p>
    <p>timer dst: b</p>
    <p>msg dst: a</p>
    <p>message delivery</p>
    <p>crash recovery</p>
  </div>
  <div class="page">
    <p>Invariant Checking</p>
    <p>An invariant is a predicate P over the state of all processes.</p>
    <p>a b c d e</p>
    <p>{</p>
  </div>
  <div class="page">
    <p>Invariant Checking</p>
    <p>An invariant is a predicate P over the state of all processes.</p>
    <p>a b c d e</p>
    <p>{</p>
    <p>A faulty execution is one that ends in an invariant violation.</p>
    <p>e1 i1 i2 i3 i4e2</p>
  </div>
  <div class="page">
    <p>Outline Introduction Background</p>
    <p>Node 1 Node N</p>
    <p>Test Coordinator</p>
    <p>QA Testbed</p>
    <p>Software Under Test</p>
    <p>Minimization</p>
    <p>Evaluation Conclusion</p>
    <p>Randomized Testing with</p>
    <p>DEMi</p>
  </div>
  <div class="page">
    <p>Formal Problem Statement</p>
    <p>Find: locally minimal reproducing sequence :  violates P, ||  ||</p>
    <p>contains a subsequence of the external events of</p>
    <p>if we remove any external event e from ,</p>
    <p>containing same external events - e, s.t.  violates P</p>
    <p>Given: schedule  that results in violation of P</p>
  </div>
  <div class="page">
    <p>Formal Problem Statement</p>
    <p>After finding , minimize internal events: remove extraneous message deliveries from</p>
  </div>
  <div class="page">
    <p>RequestVote</p>
    <p>RequestVote</p>
    <p>RequestVote</p>
    <p>RequestVote</p>
    <p>VoteGran ted</p>
    <p>VoteGran ted</p>
    <p>VoteGran ted</p>
    <p>VoteGran ted</p>
  </div>
  <div class="page">
    <p>Minimization</p>
    <p>: Given</p>
    <p>e1 i1 i2 i4e2 enim</p>
  </div>
  <div class="page">
    <p>Minimization</p>
    <p>: Given</p>
    <p>Straightforward approach: Enumerate all schedules ||  ||, Pick shortest sequence that reproduces</p>
    <p>Schedule Space</p>
    <p>e1 i1 i2 i4e2 enim</p>
  </div>
  <div class="page">
    <p>Minimization</p>
    <p>: Given</p>
    <p>Straightforward approach: Enumerate all schedules ||  ||, Pick shortest sequence that reproduces</p>
    <p>Schedule Space</p>
    <p>e1 i1 i2 i4e2 enim</p>
  </div>
  <div class="page">
    <p>O(n!)</p>
  </div>
  <div class="page">
    <p>Observation #1: many schedules are commutative</p>
    <p>Adopt DPOR: Dynamic Partial Order Reduction</p>
    <p>C. Flanagan, P. Godefroid, Dynamic Partial-Order Reduction for Model Checking Software, POPL 05</p>
  </div>
  <div class="page">
    <p>O( !)nk</p>
  </div>
  <div class="page">
    <p>Approach: prioritize schedule space exploration</p>
  </div>
  <div class="page">
    <p>Approach: prioritize schedule space exploration</p>
    <p>Assume: fixed time budget Objective: quickly find small failing schedules</p>
  </div>
  <div class="page">
    <p>e1 i1 i2 i4e2 enim</p>
    <p>Observation #2: selectively mask original events</p>
    <p>:</p>
  </div>
  <div class="page">
    <p>e1 i1 i2 i4e2 enim</p>
    <p>Observation #2: selectively mask original events</p>
    <p>:</p>
    <p>e1 e2 ene3 e4ext: e5</p>
  </div>
  <div class="page">
    <p>:</p>
    <p>ene3ext: e5e1 e2 e4</p>
    <p>e1 i1 i2 i4e2 enim</p>
    <p>Observation #2: selectively mask original events</p>
  </div>
  <div class="page">
    <p>x</p>
    <p>:</p>
    <p>ene3ext: e5e1 e2 e4</p>
    <p>e1 i1 i2 i4e2 enim</p>
    <p>Observation #2: selectively mask original events</p>
  </div>
  <div class="page">
    <p>x</p>
    <p>:</p>
    <p>ene3ext: e5e1 e2 e4</p>
    <p>e1 i1 i2 i4e2 enim (Apply Delta Debugging1)</p>
    <p>Observation #2: selectively mask original events</p>
  </div>
  <div class="page">
    <p>:</p>
    <p>ene3ext: e5</p>
    <p>sub1:</p>
    <p>e1 e2 e4</p>
    <p>e1 i1 i2 i4e2 enim</p>
    <p>e4 e5 en</p>
    <p>(Apply Delta Debugging1)</p>
    <p>Observation #2: selectively mask original events</p>
  </div>
  <div class="page">
    <p>:</p>
    <p>ext:</p>
    <p>sub1:</p>
    <p>e1 i1 i2 i4e2 enim ene5e4e1 e2 e3</p>
    <p>foreach i in : if i is pending: deliver i # ignore unexpected</p>
    <p>e5e4 en</p>
    <p>Observation #2: selectively mask original events</p>
  </div>
  <div class="page">
    <p>:</p>
    <p>ext:</p>
    <p>sub1:</p>
    <p>e1 i1 i2 i4e2 enim ene5e4e1 e2 e3</p>
    <p>foreach i in : if i is pending: deliver i # ignore unexpected</p>
    <p>i1  e5e4 en</p>
    <p>Observation #2: selectively mask original events</p>
  </div>
  <div class="page">
    <p>:</p>
    <p>ext:</p>
    <p>sub1:</p>
    <p>e1 i1 i2 i4e2 enim ene5e4e1 e2 e3</p>
    <p>foreach i in : if i is pending: deliver i # ignore unexpected</p>
    <p>i1  e5e4 en</p>
    <p>Observation #2: selectively mask original events</p>
  </div>
  <div class="page">
    <p>:</p>
    <p>ext:</p>
    <p>sub1:</p>
    <p>e1 i1 i2 i4e2 enim ene5e4e1 e2 e3</p>
    <p>foreach i in : if i is pending: deliver i # ignore unexpected</p>
    <p>i1 i4  e5e4 enim</p>
    <p>Observation #2: selectively mask original events</p>
  </div>
  <div class="page">
    <p>:</p>
    <p>ext:</p>
    <p>sub1:</p>
    <p>e1 i1 i2 i4e2 enim ene5e4e1 e2 e3</p>
    <p>foreach i in : if i is pending: deliver i # ignore unexpected</p>
    <p>i1 i4  e5e4 enim</p>
    <p>Observation #2: selectively mask original events</p>
  </div>
  <div class="page">
    <p>:</p>
    <p>ext:</p>
    <p>sub1:</p>
    <p>e1 i1 i2 i4e2 enim ene5e4e1 e2 e3</p>
    <p>foreach i in : if i is pending: deliver i # ignore unexpected</p>
    <p>i1 i4  e5e4 enim</p>
    <p>Observation #2: selectively mask original events</p>
  </div>
  <div class="page">
    <p>:</p>
    <p>ext:</p>
    <p>sub1:</p>
    <p>e1 i1 i2 i4e2 enim ene5e4e1 e2 e3</p>
    <p>foreach i in : if i is pending: deliver i # ignore unexpected</p>
    <p>i1 i4  e5e4 enim</p>
    <p>Observation #2: selectively mask original events</p>
  </div>
  <div class="page">
    <p>:</p>
    <p>ext:</p>
    <p>sub1:</p>
    <p>e1 i1 i2 i4e2 enim ene5e4</p>
    <p>i1 i4  e5e4 enim</p>
    <p>Observation #2: selectively mask original events</p>
  </div>
  <div class="page">
    <p>:</p>
    <p>ext:</p>
    <p>sub1:</p>
    <p>e1 i1 i2 i4e2 enim ene5e4</p>
    <p>i1 i4  e5e4 enim</p>
    <p>Observation #2: selectively mask original events</p>
  </div>
  <div class="page">
    <p>:</p>
    <p>ext:</p>
    <p>sub1:</p>
    <p>e1 i1 i2 i4e2 enim</p>
    <p>sub2:</p>
    <p>ene5e4</p>
    <p>i1 i4  e5e4 enim e5 en</p>
    <p>Observation #2: selectively mask original events</p>
  </div>
  <div class="page">
    <p>:</p>
    <p>ext:</p>
    <p>sub1:</p>
    <p>e1 i1 i2 i4e2 enim</p>
    <p>sub2: i1 i4</p>
    <p>ene5e4</p>
    <p>i1 i4  e5e4 enim e5 enim</p>
    <p>Observation #2: selectively mask original events</p>
  </div>
  <div class="page">
    <p>:</p>
    <p>ext:</p>
    <p>sub1:</p>
    <p>e1 i1 i2 i4e2 enim</p>
    <p>sub2: i1 i4</p>
    <p>ene5e4</p>
    <p>i1 i4  e5e4 enim e5 enim</p>
    <p>Observation #2: selectively mask original events</p>
  </div>
  <div class="page">
    <p>:</p>
    <p>ext:</p>
    <p>sub1:</p>
    <p>e1 i1 i2 i4e2 enim</p>
    <p>sub2:</p>
    <p>. . .</p>
    <p>i1 i4  Explore backtrack points until (i)  or (ii) time budget for sub2 expired</p>
    <p>ene5e4</p>
    <p>i1 i4  e5e4 enim e5 enim</p>
    <p>Observation #2: selectively mask original events</p>
  </div>
  <div class="page">
    <p>Observation #4: shrink external message contents</p>
    <p>Observation #1: many schedules are commutative</p>
    <p>Approach: prioritize schedule space exploration</p>
    <p>Goal: find minimal schedule that produces violation</p>
    <p>Minimize internal events after externals minimized</p>
    <p>Observation #2: selectively mask original events</p>
    <p>Observation #3: some contents should be masked</p>
  </div>
  <div class="page">
    <p>Outline Introduction Background</p>
    <p>Node 1 Node N</p>
    <p>Test Coordinator</p>
    <p>QA Testbed</p>
    <p>Software Under Test</p>
    <p>Minimization</p>
    <p>Evaluation Conclusion</p>
    <p>Randomized Testing with</p>
    <p>DEMi</p>
  </div>
  <div class="page">
    <p>Target Systems</p>
  </div>
  <div class="page">
    <p>How well does DEMi work? To</p>
    <p>ta l E</p>
    <p>ve nt</p>
    <p>s</p>
    <p>Case Study raft-45 raft-46 raft-56 raft-58a raft-58b raft-42 raft-66 spark-2294 spark-3150 spark-9256</p>
    <p>Initial Execution After Minimization</p>
  </div>
  <div class="page">
    <p>How well does DEMi work? To</p>
    <p>ta l E</p>
    <p>ve nt</p>
    <p>s</p>
    <p>Case Study raft-45 raft-46 raft-56 raft-58a raft-58b raft-42 raft-66 spark-2294 spark-3150 spark-9256</p>
    <p>Initial Execution After Minimization</p>
  </div>
  <div class="page">
    <p>How well does DEMi work? To</p>
    <p>ta l E</p>
    <p>ve nt</p>
    <p>s</p>
    <p>Case Study raft-45 raft-46 raft-56 raft-58a raft-58b raft-42 raft-66 spark-2294 spark-3150 spark-9256</p>
    <p>After Minimization Smallest Manual Trace</p>
  </div>
  <div class="page">
    <p>How well does DEMi work? To</p>
    <p>ta l E</p>
    <p>ve nt</p>
    <p>s</p>
    <p>Case Study raft-45 raft-46 raft-56 raft-58a raft-58b raft-42 raft-66 spark-2294 spark-3150 spark-9256</p>
    <p>After Minimization Smallest Manual Trace</p>
    <p>Factor of 1x - 5x from hand-crafted</p>
  </div>
  <div class="page">
    <p>How quickly does DEMi work? R</p>
    <p>un tim</p>
    <p>e in</p>
    <p>S ec</p>
    <p>on ds</p>
    <p>Case Study raft-45 raft-46 raft-56 raft-58a raft-58b raft-42 raft-66 spark-2294 spark-3150 spark-9256</p>
    <p>Overall Minimization (~12 hours) (~3 hours)</p>
    <p>(~35 minutes)</p>
  </div>
  <div class="page">
    <p>How quickly does DEMi work? R</p>
    <p>un tim</p>
    <p>e in</p>
    <p>S ec</p>
    <p>on ds</p>
    <p>Case Study raft-45 raft-46 raft-56 raft-58a raft-58b raft-42 raft-66 spark-2294 spark-3150 spark-9256</p>
    <p>Overall Minimization</p>
    <p>&lt;10 minutes except 3 cases</p>
    <p>(~12 hours) (~3 hours)</p>
    <p>(~35 minutes)</p>
  </div>
  <div class="page">
    <p>See the paper for How we handle non-determinism Handling multithreaded processes Supporting other RPC libraries Sketch for minimizing production traces More in-depth evaluation Related work</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Open source tool: github.com/NetSys/demi</p>
    <p>Read our paper! eecs.berkeley.edu/~rcs/research/nsdi16.pdf</p>
    <p>Optimistic that these techniques can be successfully applied more broadly</p>
    <p>Thanks for your time!Contact me! cs@cs.berkeley.edu</p>
  </div>
  <div class="page">
    <p>Attributions Inspiration for slide design: Jay Lorchs IronFleet slides</p>
    <p>Graphic Icons: thenounproject.org logfile: mantisshrimpdesign magnifying glass: Ricardo Moreira disk: Anton Outkine hook: Seb Cornelius bug report: Lemon Liu devil: Mourad Mokrane Putin: Remi Mercier</p>
  </div>
  <div class="page">
    <p>Production Traces Model: feed partially ordered log into</p>
    <p>single machine DEMi</p>
    <p>Require: - Partial ordering of all message deliveries - All crash-recoveries logged to disk</p>
  </div>
  <div class="page">
    <p>Instrumentation Complexity</p>
  </div>
  <div class="page">
    <p>Related Work Thread Schedule Minimization</p>
    <p>Isolating Failure-Inducing Thread Schedules. SIGSOFT 02. A Trace Simplification Technique for Effective Debugging of</p>
    <p>Concurrent Programs. FSE 10. Program Flow Analysis.</p>
    <p>Enabling Tracing of Long-Running Multithreaded Programs via Dynamic Execution Reduction. ISSTA 07.</p>
    <p>Toward Generating Reducible Replay Logs. PLDI 11. Best-Effort Replay of Field Failures</p>
    <p>A Technique for Enabling and Supporting Debugging of Field Failures. ICSE 07.</p>
    <p>Triage: Diagnosing Production Run Failures at the Users Site. SOSP 07.</p>
  </div>
  <div class="page">
    <p>DDmin in more detail</p>
  </div>
  <div class="page">
    <p>DDmin assumptions</p>
  </div>
  <div class="page">
    <p>Local vs. global minima</p>
  </div>
  <div class="page">
    <p>Minimization Pace</p>
  </div>
  <div class="page">
    <p>Dealing With Threads If youre lucky: threads are largely independent (Spark)</p>
    <p>If youre unlucky: key insight: A write to shared memory is equivalent to a message delivery</p>
    <p>Approach: interpose on virtual memory, thread scheduler pause a thread whenever it writes to shared memory / disk</p>
    <p>Cf. Enabling Tracing Of Long-Running Multithreaded Programs Via Dynamic Execution Reduction, ISSTA 07</p>
  </div>
  <div class="page">
    <p>Dealing With Non-Determinism Interpose on:</p>
    <p>- Timers - Random number generators - Unordered hash values - ID allocation</p>
    <p>Stop-gap: replay each schedule multiple times</p>
  </div>
  <div class="page">
    <p>Complete Results</p>
  </div>
  <div class="page">
    <p>Runtime Breakdown</p>
  </div>
  <div class="page">
    <p>Integrating with other RPC libs App</p>
    <p>RPC lib</p>
    <p>OS</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS</p>
    <p>App</p>
    <p>RPC lib</p>
    <p>OS</p>
    <p>DEMi JVM</p>
  </div>
</Presentation>
