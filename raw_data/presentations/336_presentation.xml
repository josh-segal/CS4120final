<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Putting BGP on the Right Path: A Case for Next-Hop</p>
    <p>Routing</p>
    <p>Michael Schapira</p>
    <p>Joint work with Yaping Zhu and Jennifer Rexford</p>
    <p>(Princeton University)</p>
  </div>
  <div class="page">
    <p>Once Upon a Time Internet Inter-Network Routing:</p>
    <p>Small network</p>
    <p>Single administrative entity  NSFNET</p>
    <p>Shortest-path routing  distance-vector routing</p>
    <p>Then....</p>
  </div>
  <div class="page">
    <p>Interdomain Routing</p>
    <p>Over 35,000 Autonomous Systems (ASes)</p>
    <p>Interdomain routing = routing between ASes  Border Gateway Protocol (BGP)</p>
    <p>AT&amp;T</p>
    <p>Qwest</p>
    <p>Comcast</p>
    <p>Sprint</p>
  </div>
  <div class="page">
    <p>Todays Path-Based Routing With BGP</p>
    <p>Complex!  configuration errors, software bugs,</p>
    <p>Bad convergence!  persistent route oscillations, slow convergence,</p>
    <p>Vulnerable to attacks!  malicious, economically-driven, inadvertent,</p>
    <p>and more, and more, and more   bad performance, clumsy traffic engineering,</p>
  </div>
  <div class="page">
    <p>How Can We Fix Interdomain Routing?</p>
    <p>One approach: add mechanisms to an already complex protocol  route flap damping, S-BGP,</p>
    <p>Another approach: redesign interdomain routing from scratch  HLP, NIRA, pathlet routing, consensus routing,</p>
    <p>Our approach: simplify BGP!</p>
  </div>
  <div class="page">
    <p>Background: Todays PathBased Routing With BGP</p>
    <p>AS is routing policy:  ranking of simple routes from i to each</p>
    <p>destination d  export policy</p>
    <p>BGP is a path-vector protocol</p>
    <p>Receive route updates</p>
    <p>from neighbors</p>
    <p>Choose single best route</p>
    <p>(ranking)</p>
    <p>Send route updates to neighbors</p>
    <p>(export policy)</p>
  </div>
  <div class="page">
    <p>Background: Todays PathBased Routing With BGP</p>
    <p>Dont export 2d</p>
    <p>to 3</p>
    <p>a stable state is reached</p>
  </div>
  <div class="page">
    <p>AS-PATH = the Route of All Evil</p>
    <p>AS-PATH: list of all ASes on path  originally meant for loop-detection</p>
    <p>The AS-PATH is to blame!  error-prone, software bugs  no/slow convergence  large attack surface  bad scalability, clumsy traffic engineering, bad</p>
    <p>performance,</p>
  </div>
  <div class="page">
    <p>Getting Off the AS-PATH</p>
    <p>No way back to shortest-path routing</p>
    <p>Our proposal: next-hop routing</p>
    <p>make routing decisions based solely on the next hop</p>
    <p>relegate the AS-PATH to its original role</p>
  </div>
  <div class="page">
    <p>Wish List  Loop freedom  Fast Convergence  Security  Incentive compatibility  Business policies  Good performance  Traffic engineering  Scalability  Simplicity</p>
  </div>
  <div class="page">
    <p>Expressiveness vs. Complexity</p>
    <p>complexity</p>
    <p>expressiveness not expressive</p>
    <p>enough sufficiently expressive</p>
    <p>extremely expressive</p>
    <p>simple</p>
    <p>too complex</p>
    <p>shortest-path routing</p>
    <p>next-hop routing</p>
    <p>BGPs path-based</p>
    <p>routing</p>
  </div>
  <div class="page">
    <p>Next-Hop Routing Rules!</p>
    <p>Rule 1: use next-hop rankings</p>
  </div>
  <div class="page">
    <p>Next-Hop Routing Rules!</p>
    <p>Rule 1: use next-hop rankings  Rule 2: prioritize current route</p>
    <p>to minimize path exploration [Godfrey-Caesar-Hagen-SingerShenker]</p>
    <p>d</p>
    <p>favor of lower AS number</p>
  </div>
  <div class="page">
    <p>Next-Hop Routing Rules!</p>
    <p>Rule 1: use next-hop rankings  Rule 2: prioritize current route  Rule 3: consistently export</p>
    <p>to avoid disconnecting upstream nodes [Feigenbaum-SRamachandran]</p>
    <p>to 4</p>
    <p>to 4</p>
  </div>
  <div class="page">
    <p>Next-Hop Routing Rules!</p>
    <p>Rule 1: use next-hop rankings  Rule 2: prioritize current route  Rule 3: consistently export</p>
    <p>Defn: Node i consistently exports w.r.t. neighbor j if there is some route R s.t. each route Q is exportable to j iff R i Q.</p>
    <p>Defn: Node i consistently exports if it consistently exports with respect to each neighboring node j.</p>
  </div>
  <div class="page">
    <p>Next-Hop Routing Rules!</p>
    <p>Rule 1: use next-hop rankings  Rule 2: prioritize current route  Rule 3: consistently export</p>
    <p>3 deployment schemes  Configure todays routers  Create new router configuration interface  Build new router software</p>
  </div>
  <div class="page">
    <p>Wish List Revisited</p>
  </div>
  <div class="page">
    <p>Wish List Revisited  Loop freedom  Fast convergence?  Security  Incentive compatibility [Feigenbaum-S-Ramachandran]  Business policies  Good performance  Traffic engineering  Scalability?  Simplicity</p>
  </div>
  <div class="page">
    <p>Existence of Stable State</p>
    <p>Existence of stable state not guaranteed even with next-hop rankings (Rule 1) [Feamster-Johari-Balakrishnan]</p>
    <p>Thm: If the next-hop routing rules hold, then a stable state exists in the network.</p>
    <p>What about (fast!) convergence?</p>
  </div>
  <div class="page">
    <p>BGP Oscillations</p>
    <p>BGP not guaranteed to converge even with next-hop routing! [Griffin-Shepherd-Wilfong]</p>
    <p>d</p>
  </div>
  <div class="page">
    <p>The Commercial Internet</p>
    <p>ASes sign long-term contracts.</p>
    <p>Neighboring pairs of ASes have:  a customer-provider relationship  a peering relationship</p>
    <p>peer providers</p>
    <p>customers</p>
    <p>peer</p>
  </div>
  <div class="page">
    <p>Gao-Rexford Framework</p>
    <p>3 simple conditions that are naturally induced by the AS-business-hierarchy.  Topology condition, Preference condition, Export condition</p>
    <p>If the Gao-Rexford conditions hold, then BGP is guaranteed to converge to a stable state. [Gao-Rexford]</p>
    <p>But, this might require exponentiallymany forwarding changes! [Syed-Rexford]</p>
  </div>
  <div class="page">
    <p>Fast BGP Convergence</p>
    <p>Thm: In the Gao-Rexford framework, next-hop routing convergence to a stable state involves at most O(L2) forwarding changes (L = # links).  all network topologies  all timings of AS activations and update</p>
    <p>message arrivals  all initial routing states  all initial beliefs  implications for routing changes and number of</p>
    <p>BGP updates</p>
  </div>
  <div class="page">
    <p>Simulations</p>
    <p>C-BGP simulator. Cyclops AS-level topology, Jan 1st 2010 (33,976 ASes, ~5000 non-stubs)</p>
    <p>Protocols: BGP, Prefer Recent Route (PRR), nexthop routing</p>
    <p>Metrics: # forwarding changes, # routing changes, # updates, AS-PATH length</p>
    <p>Events: prefix up, link failure, link recovery</p>
    <p>Methodology: 500 experiments, 10,000 vantage points (all non-stubs, 5000 stubs)</p>
  </div>
  <div class="page">
    <p>Simulation Results (# Forwarding Changes)</p>
    <p>maximum number of BGP</p>
    <p>forwarding changes &gt; 20</p>
    <p>maximum number of routing changes in next-hop routing</p>
    <p>= 3 maximum number of forwarding</p>
    <p>changes in PRR = 10</p>
  </div>
  <div class="page">
    <p>Simulation Results (# Routing Changes)</p>
    <p>maximum number of BGP routing changes</p>
    <p>&gt; 160</p>
    <p>maximum number of routing changes in next-hop routing</p>
    <p>&lt; 20</p>
    <p>maximum number of</p>
    <p>routing changes in PRR &gt; 40</p>
  </div>
  <div class="page">
    <p>Simulation Results (# BGP Updates, Non-Stub ASes)</p>
    <p>maximum number of BGP updates &gt; 6000</p>
    <p>maximum number of</p>
    <p>updates in nexthop routing &lt;</p>
    <p>maximum number of updates in PRR &gt;</p>
  </div>
  <div class="page">
    <p>Simulation Results (# Routing Changes, The 0.1%</p>
    <p>Position)</p>
  </div>
  <div class="page">
    <p>Incentive Compatible Routing Configurations</p>
    <p>d</p>
    <p>Each node is getting its best feasible next-hop</p>
  </div>
  <div class="page">
    <p>Next-Hop Routing is Incentive Compatible</p>
    <p>Thm [Feigenbaum-Ramachandran-S]: In the Gao-Rexford framework, next-hop routing is incentive compatible.</p>
    <p>(each node is guaranteed its best feasible next-hop)</p>
  </div>
  <div class="page">
    <p>Wish List Revisited  Loop freedom  Fast convergence  Security?  Incentive compatibility  Business policies  Good performance?  Traffic engineering?  Scalability  Simplicity</p>
  </div>
  <div class="page">
    <p>Limitations of Next-Hop Routing</p>
    <p>AS-PATH length</p>
    <p>AS-avoiding policies</p>
    <p>AS-name prepending</p>
    <p>AS-PATH-based traffic engineering</p>
  </div>
  <div class="page">
    <p>Security, Performance, Traffic Engineering</p>
    <p>Still open research questions.</p>
    <p>Handled mostly outside the routing protocol.</p>
    <p>We argue that next-hop routing makes things mostly better.</p>
  </div>
  <div class="page">
    <p>Performance  Faster/better convergence than BGP.</p>
    <p>much more scalable.</p>
    <p>Butpotential increase in path lengths.  b</p>
    <p>loosely correlated with performance (# routers, physical distance throughput).</p>
    <p>still, significant increase clearly undesirable!</p>
    <p>Simulation results: same path length for 97-99% of ASes; big increase only for ~0.1%.</p>
  </div>
  <div class="page">
    <p>Security  Reduces BGPs attack surface (AS-PATH length</p>
    <p>plays no role in routing decisions).</p>
    <p>More resilient to economically-driven attacks (incentive compatible).</p>
    <p>More resilient to misconfigurations (in progress)</p>
    <p>But AS-avoiding policies impossible.  come with no guarantees. e2e?</p>
  </div>
  <div class="page">
    <p>Traffic Engineering</p>
    <p>We discuss how traffic engineering can be done without relying on the AS-PATH.</p>
    <p>using different next-hop rankings for different (groups of) prefixes</p>
    <p>using the BGP communities attribute</p>
  </div>
  <div class="page">
    <p>Multipath Routing</p>
    <p>Performance, security and traffic engineering can greatly benefit from multipath routing.  multiple working paths</p>
    <p>immediate response to failures</p>
    <p>load balancing among multiple next-hops</p>
    <p>Next-hop routing lowers the barrier for making this a reality (work in progress).</p>
  </div>
  <div class="page">
    <p>Multipath Routing</p>
    <p>Exploiting path diversity to  realize the ASs own objectives  customize route selection for neighboring ASes</p>
    <p>But... multipath routing is not scalable!  disseminate and store multiple routes</p>
  </div>
  <div class="page">
    <p>Multipath Routing is Not Scalable!</p>
    <p>d</p>
    <p>P1</p>
    <p>P 2</p>
    <p>Q1</p>
    <p>Q2</p>
    <p>Im using P1 and P2</p>
    <p>Im using Q1 and Q2</p>
    <p>Im using P1, P2, Q1 and Q2</p>
  </div>
  <div class="page">
    <p>From AS-PATH to AS-SET</p>
    <p>Next-hop routing is more amenable to multipath  nodes dont care about entire paths   other than for loop detection</p>
    <p>Dont announce routes, announce sets!  set = union of ASes on all routes  BGP route aggregation</p>
  </div>
  <div class="page">
    <p>Neighbor-Specific Next-Hop Routing</p>
    <p>Customizing route selection for neighbors  operational motivation [Kushman-Kandula-Katabi-Maggs]  economic motivation [Wang-S-Rexford]</p>
    <p>C1</p>
    <p>zC2</p>
    <p>C3</p>
    <p>d</p>
    <p>? R1</p>
    <p>R2</p>
    <p>R3</p>
    <p>Secure!</p>
    <p>Short!</p>
    <p>Cheap!</p>
  </div>
  <div class="page">
    <p>Neighbor-Specific Next-Hop Routing</p>
    <p>Neighbor-Specific BGP [Wang-SRexford]</p>
    <p>implementable using existing tools</p>
    <p>Results for convergence and incentive compatibility extend to multipath!</p>
  </div>
  <div class="page">
    <p>Conclusions and Future Research</p>
    <p>BGP is far too complicated!</p>
    <p>New approach: simplify BGP  without compromising global and local goals!</p>
    <p>Directions for future research:  getting rid of the AS-PATH?  software / configuration complexity  more theoretical and experimental work</p>
  </div>
  <div class="page">
    <p>Thank YouThank You</p>
  </div>
</Presentation>
