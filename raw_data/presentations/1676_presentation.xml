<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>On Subliminal Channels in Encrypt-on-Cast Voting Systems</p>
    <p>Ariel J. Feldman Princeton University</p>
    <p>Josh Benaloh Microsoft Research</p>
    <p>Department of Computer Science Princeton University</p>
    <p>On Subliminal Channels in Encrypt-on-Cast Voting Systems 8/11/09</p>
  </div>
  <div class="page">
    <p>Ballot Secrecy</p>
    <p>Cryptographic voting has unique problems</p>
    <p>Essential  Potential coercion  Even possibility of disclosure</p>
    <p>might affect behavior</p>
    <p>Hard  Cell phone cameras  Leaks to poll workers  Distinguishing marks</p>
    <p>On Subliminal Channels in Encrypt-on-Cast Voting Systems 8/11/09</p>
  </div>
  <div class="page">
    <p>Encrypt-on-Cast (e.g. Benaloh, VoteBox)</p>
    <p>v</p>
    <p>v v v v</p>
    <p>v v v v</p>
    <p>v v v v</p>
    <p>v v v v</p>
  </div>
  <div class="page">
    <p>Voter-initiated Audits</p>
    <p>v v v v</p>
    <p>v v v v</p>
    <p>Vote cast</p>
    <p>Audit?</p>
    <p>Commits</p>
    <p>v</p>
    <p>No</p>
    <p>v Yes</p>
    <p>Verifiably decrypted  Vote doesnt count</p>
  </div>
  <div class="page">
    <p>Talk Outline</p>
    <p>Subliminal Channel Problem</p>
    <p>Good News</p>
    <p>Bad News</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Subliminal Channel Problem</p>
  </div>
  <div class="page">
    <p>Leaky Bulletin Board [KSW05]</p>
    <p>v</p>
    <p>v v v v</p>
    <p>v v v v = Epk(v, r)</p>
    <p>Want to leak: 011001</p>
    <p>Epk(v, r1) = 110101</p>
    <p>Epk(v, r2) = 111001</p>
    <p>Epk(v, rn) = 011001</p>
    <p>Leak t bits in expected O(2t)</p>
    <p>work</p>
  </div>
  <div class="page">
    <p>Only Need to Leak a Few Bits</p>
    <p>(e.g. 1000 voters)</p>
    <p>Reveal how 10% voted with 100 bits</p>
    <p>Single out a non-compliant voter with 10 bits</p>
    <p>Dont need to compromise every voters vote</p>
  </div>
  <div class="page">
    <p>Can Audits Solve This? [GGR09]</p>
    <p>Set of k trustees generate all randomness</p>
    <p>For each vote,  Trustees generate: 1,  , k  v = Epk(v, r) where r = f(1,  , k)</p>
    <p>If vote audited,  Machine reveals r and 1,  , k  Can verify 1,  , k with trustees public keys</p>
    <p>v</p>
    <p>Only for audited votes</p>
  </div>
  <div class="page">
    <p>Audits Arent Enough</p>
    <p>Cant assume a high audit rate  Auditing is cumbersome</p>
    <p>Audit?</p>
    <p>Leak 100 bits 10 bits/race with O(210) work, assuming 10 races</p>
    <p>Coercion requires corrupting fewer ballots</p>
    <p>Suppose 5% audit (95% chance of altering 1 ballot without detection)</p>
    <p>Steal 1 vote OR</p>
  </div>
  <div class="page">
    <p>Good News</p>
  </div>
  <div class="page">
    <p>Overview</p>
  </div>
  <div class="page">
    <p>El Gamal Encryption</p>
    <p>(generator g, public key y)</p>
    <p>To encrypt,  Choose random r  v = (,) = (gr, yr  v)</p>
  </div>
  <div class="page">
    <p>r0,2 r0,0</p>
    <p>rk,n</p>
    <p>r1,2</p>
    <p>rk,0</p>
    <p>r1,0</p>
    <p>r0,0 r0,2</p>
    <p>r1,0 r1,1</p>
    <p>rk,0 rk,n</p>
    <p>Before the Election</p>
    <p>For each voting machine,</p>
    <p>gr0,0 gr0,1 gr0,2 gr0,n  r0,1 r0,n</p>
    <p>gr1,0 gr1,1 gr1,2 gr1,n  r1,2 r1,n</p>
    <p>grk,0 grk,1 grk,2 grk,n</p>
    <p>rk,1 rk,2</p>
  </div>
  <div class="page">
    <p>During the Election</p>
    <p>To encrypt vote vi,  i = g</p>
    <p>r0,i  gr1,i    grk,i</p>
    <p>i = y r0,i+r1,i++rk,i  vi</p>
    <p>vi = (i,i)</p>
    <p>Combine trustees random values</p>
    <p>Must use the ith values</p>
  </div>
  <div class="page">
    <p>After the Election</p>
    <p>r0,i  gr1,i    grk,i</p>
    <p>v v v v</p>
    <p>v v v v</p>
  </div>
  <div class="page">
    <p>Why Does This Work?</p>
    <p>Corrupted encrypted vote (i,i) Then, i = y</p>
    <p>r0,i+r1,i++rk,i  vi</p>
    <p>If vi is invalid, coercer will be caught</p>
    <p>If vi is valid, its equivalent to vote-flipping</p>
  </div>
  <div class="page">
    <p>Bad News</p>
  </div>
  <div class="page">
    <p>Vote-flipping Can Leak</p>
    <p>v</p>
    <p>v v v v</p>
    <p>v v v v = Epk(v, r)</p>
    <p>Want to leak: 011001</p>
    <p>Epk(v1, r) = 110101</p>
    <p>Epk(v2, r) = 111001</p>
    <p>Epk(vn, r) = 011001</p>
    <p>George Washington</p>
    <p>Abraham Lincoln</p>
    <p>Adlai Stevenson</p>
  </div>
  <div class="page">
    <p>Vote-flipping Can Leak (cont.)</p>
    <p>Coercer can deal with this  Only leak bits in races with enough candidates  Use an error-correcting code</p>
    <p>Low bandwidth  can fail to leak desired bits</p>
    <p>Previous mitigation strategy wont work</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Subliminal channels are a particular threat to encrypt-oncast voting systems</p>
    <p>Coercion requires corrupting fewer ballots than vote-stealing (auditing may not catch it)</p>
    <p>Verifying the randomness used to encrypt every vote is a partial mitigation</p>
    <p>Vote-flipping itself is a subliminal channel</p>
  </div>
  <div class="page">
    <p>On Subliminal Channels in Encrypt-on-Cast Voting Systems</p>
    <p>Ariel J. Feldman Princeton University</p>
    <p>Josh Benaloh Microsoft Research</p>
    <p>Department of Computer Science Princeton University</p>
    <p>On Subliminal Channels in Encrypt-on-Cast Voting Systems 8/11/09</p>
  </div>
</Presentation>
