<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>University of Lisbon</p>
    <p>Dependable Virtual Appliances</p>
    <p>Nuno Santos In collaboration w/ Nuno Lopes</p>
    <p>October 5, 2014</p>
  </div>
  <div class="page">
    <p>Virtual Appliance: Clouds de facto executable</p>
    <p>Nuno Santos 2</p>
    <p>! Virtual Appliance: pre-configured virtual machine image ! Provides, e.g., LAMP web server, mail server, database server</p>
    <p>! Today,1000s of VAs available online, e.g., through Amazon EC2</p>
    <p>Creators endpoint Users endpoint</p>
    <p>Cloud</p>
    <p>Build VA (install SW)</p>
    <p>VA Image</p>
    <p>Virtual Machine</p>
    <p>Upload and process data</p>
  </div>
  <div class="page">
    <p>But beware of risks!</p>
    <p>Nuno Santos 3</p>
    <p>! Researchers looked at 100s of public VAs [Bugiel11,Huh13]</p>
    <p>! Lack defenses. How can we mitigate these risks?</p>
    <p>Passwords in files and logs</p>
    <p>Key material</p>
    <p>Private IP addresses</p>
    <p>Data from deleted files</p>
    <p>Malware</p>
    <p>Misconfigured SW</p>
    <p>Unpatched SW</p>
    <p>Unlicensed SW</p>
    <p>Risks for VA creators! Risks for VA users!</p>
  </div>
  <div class="page">
    <p>Our Vision: Dependable Virtual Appliances</p>
    <p>Nuno Santos 4</p>
    <p>! We call them depliances ! Creators / users can verify config properties before shipment / usage</p>
    <p>Creators endpoint Users endpoint</p>
    <p>Cloud</p>
    <p>Check Props</p>
    <p>Build VA</p>
    <p>VA Template</p>
    <p>Creators Required Properties</p>
    <p>VA</p>
    <p>VM</p>
    <p>Attest VA</p>
    <p>VA Template</p>
    <p>Check Props</p>
    <p>Users Required Properties</p>
  </div>
  <div class="page">
    <p>Key Techniques for Building Depliances</p>
    <p>Nuno Santos 5</p>
    <p>Creators endpoint Users endpoint</p>
    <p>Cloud</p>
    <p>Check Props</p>
    <p>Build VA</p>
    <p>VA Template</p>
    <p>Creators Required Properties</p>
    <p>VA</p>
    <p>VM</p>
    <p>Attest VA</p>
    <p>VA Template</p>
    <p>Check Props</p>
    <p>Users Required Properties</p>
    <p>Model Checking To verify properties of VA model</p>
    <p>Model Checker</p>
    <p>Model Checker</p>
    <p>Trusted Computing To build and attest VAs</p>
    <p>Trusted Builder</p>
    <p>Remote Attestation</p>
  </div>
  <div class="page">
    <p>Joomla&quot; PHP pkg&quot;</p>
    <p>PHP&quot; MySQL&quot;</p>
    <p>Apache&quot; HTTP Server&quot;</p>
    <p>Example: Joomla Depliance</p>
    <p>Nuno Santos 6</p>
    <p>! What is Joomla? ! Content management system ! Written in PHP ! For publishing web content</p>
    <p>! How to set it up? ! Configure the following SW</p>
    <p>Linux&quot;</p>
    <p>Virtual Machine&quot;</p>
  </div>
  <div class="page">
    <p>Step 1. VA Template Specification</p>
    <p>Nuno Santos 7</p>
    <p>! Specify modules and inter-dependencies ! E.g., Linux, MySQL</p>
    <p>! Specify config attributes ! E.g., Root Pass</p>
    <p>! Specify files ! E.g., /usr/mysql/my.cnf</p>
    <p>VIRTUAL HARDWARE&quot;</p>
    <p>LINUX&quot;</p>
    <p>MYSQL&quot;</p>
    <p>PHP&quot;</p>
    <p>JOOMLA&quot;</p>
    <p>/etc/mysql/my.cnf&quot;</p>
    <p>APACHE&quot; HTTP SERVER&quot;</p>
    <p>/boot/vmlinuz&quot; /sbin/init&quot; /etc/passwd&quot; &quot;</p>
    <p>/usr/bin/mysqld&quot;</p>
    <p>&quot;</p>
    <p>/usr/sbin/apache2&quot; /etc/httpd.conf&quot; &quot;</p>
    <p>/usr/lib/php5/&quot; &quot;</p>
    <p>bin/keychain.php&quot; cli/index.html&quot; &quot;</p>
    <p>Mem = 512MB&quot;</p>
    <p>VDisk = 100GB&quot;</p>
    <p>CPU Cores = 8&quot;</p>
    <p>Root Pass = x&quot;</p>
    <p>&quot;</p>
    <p>Root Pass = y&quot;</p>
    <p>&quot;</p>
    <p>Admin Pass = k&quot;</p>
    <p>Admin Mail = l&quot;</p>
    <p>&quot;</p>
    <p>&quot;</p>
    <p>Root Pass = y&quot;</p>
    <p>MaxClients = c&quot; &quot;</p>
    <p>Admin Pass = w&quot;</p>
    <p>nthreads = t&quot; &quot;</p>
    <p>Joomla VA Template</p>
  </div>
  <div class="page">
    <p>Step 2. Property Specification and Verification</p>
    <p>Nuno Santos 8</p>
    <p>! Describe modules behavior as state machines ! Config and file attributes as inputs</p>
    <p>! Specify properties as logic conditions ! Over config and file attributes</p>
    <p>! Model checker to verify properties ! E.g., PRISM, SPIN</p>
    <p>Examples of properties to verify  Efficiency:</p>
    <p>check number of concurrent threads for Apache and PHP based on memory and CPU cores</p>
    <p>Confidentiality:</p>
    <p>check passwords of Apache, MySQL, and PHP admin not default nor private identities</p>
    <p>Integrity:</p>
    <p>check versions of SW and missed patches</p>
  </div>
  <div class="page">
    <p>Step 3. VA Image Generation</p>
    <p>Nuno Santos 9</p>
    <p>! Through dedicated programs: trusted builders</p>
    <p>! Input: verified VA template</p>
    <p>! For each module:</p>
    <p>! Resolve dependencies</p>
    <p>! Run trusted builder to install and configure files of module</p>
    <p>! Output: VA image</p>
    <p>VA Joomla Template</p>
    <p>VA Joomla Image</p>
    <p>Trusted B uilders</p>
  </div>
  <div class="page">
    <p>Step 4. VA Instantiation and Attestation</p>
    <p>Nuno Santos 10</p>
    <p>! Remote attestation protocol yields original VA template</p>
    <p>User Host w/ TPM chip</p>
    <p>nonce</p>
    <p>sign({nonce, PCRs,template}, AIKpriv)</p>
    <p>sign({PCRs, SWHH}, CAkey)</p>
    <p>sign({AIKpub, TPMprovider}, CAkey)</p>
    <p>Certificates</p>
    <p>VM Instance of</p>
    <p>Joomla Depliance</p>
    <p>Hypervisor</p>
    <p>Certificate Authority</p>
  </div>
  <div class="page">
    <p>Usage Scenarios</p>
    <p>Nuno Santos 11</p>
    <p>! Condition: VA image must be built by trusted party</p>
    <p>Case 1</p>
    <p>VA built by creator Cloud only stores VA</p>
    <p>! Fits todays model &quot; Must trust the</p>
    <p>creator</p>
    <p>Case II</p>
    <p>VA built by cloud Creator shares VA</p>
    <p>template</p>
    <p>! No trust needed in creator</p>
    <p>&quot; Requires compute time in cloud</p>
    <p>Case III</p>
    <p>VA built by user Creator shares VA</p>
    <p>template</p>
    <p>! No trust needed in creator nor cloud &quot; Requires compute</p>
    <p>time locally</p>
  </div>
  <div class="page">
    <p>Open Challenges and Future Work</p>
    <p>Nuno Santos 12</p>
    <p>! Thousands of SW config attributes is overwhelming ! Idea: decouple DSL abstractions from SW config attributes</p>
    <p>! Different properties require different verification approaches ! Idea: study best encoding logic and verification tools</p>
    <p>! Enable (partial) offload of VA generation to untrusted party ! Idea: generate trustworthy log of untrusted party operations</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Nuno Santos 13</p>
    <p>! Virtual appliances popular, but creators and users incur risks ! Misconfigurations, security threats, privacy breaches, etc.</p>
    <p>! We propose depliance model to build dependable VAs ! Creators / users verify properties of VA before publication / usage</p>
    <p>! Depliance model enabled by two techniques:</p>
    <p>! Model checking and trusted computing</p>
    <p>! Many open challenges to be addressed in the future ! Find right level of DSL abstractions, efficient way of verifying properties</p>
  </div>
  <div class="page">
    <p>Nuno Santos 14</p>
    <p>Thanks! ! Questions?!</p>
    <p>http://www.gsd.inesc-id.pt/~nsantos/</p>
  </div>
</Presentation>
