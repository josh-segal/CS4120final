<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>qNVRAM: quasi Non-Volatile RAM for Low Overhead Persistency</p>
    <p>Enforcement in Smartphones</p>
    <p>Hao Luo, Lei Tian, Hong Jiang University of Nebraska, Lincoln</p>
  </div>
  <div class="page">
    <p>Living in a mobile era  We are in the mobile era!  The I/O performance dominates the overall</p>
    <p>application performance.!  persistency = atomicity + consistency +</p>
    <p>durability!  To ensure data persistency logging is</p>
    <p>employed by different components.</p>
  </div>
  <div class="page">
    <p>Outline  Introduction!  Overhead of Persistency!  Rethinking Memory Volatility in</p>
    <p>Smartphones!  Design of qNVRAM!  Case Study</p>
  </div>
  <div class="page">
    <p>Overhead of Persistency  Logging</p>
    <p>Memory</p>
    <p>Flash</p>
    <p>A</p>
    <p>A</p>
    <p>Real Data Log Area</p>
  </div>
  <div class="page">
    <p>Overhead of Persistency  Logging</p>
    <p>Memory</p>
    <p>Flash</p>
    <p>A</p>
    <p>A</p>
    <p>Real Data Log Area</p>
  </div>
  <div class="page">
    <p>Overhead of Persistency  Logging</p>
    <p>Memory</p>
    <p>Flash</p>
    <p>A</p>
    <p>A</p>
    <p>Real Data Log Area</p>
    <p>A</p>
  </div>
  <div class="page">
    <p>Overhead of Persistency  Logging</p>
    <p>Memory</p>
    <p>Flash</p>
    <p>A</p>
    <p>A</p>
    <p>Real Data Log Area</p>
    <p>A</p>
  </div>
  <div class="page">
    <p>Overhead of Persistency  Double Write!</p>
    <p>Some applications store data in raw files!  Applications overwrite the whole file</p>
    <p>when update it.</p>
    <p>App</p>
    <p>write(foo.tmp)</p>
  </div>
  <div class="page">
    <p>Overhead of Persistency  Double Write!</p>
    <p>Some applications store data in raw files!  Applications overwrite the whole file</p>
    <p>when update it.</p>
    <p>App</p>
    <p>rename(foo.tmp, foo)</p>
  </div>
  <div class="page">
    <p>Overhead of Persistency</p>
    <p>Real Data</p>
    <p>FS Journal</p>
    <p>DB Journal</p>
    <p>Double Write</p>
  </div>
  <div class="page">
    <p>Why do we need logging?!  Memory is volatile.</p>
  </div>
  <div class="page">
    <p>Why do we need logging?!  Memory is volatile.!</p>
    <p>Every smartphone has battery</p>
  </div>
  <div class="page">
    <p>Why do we need logging?!  Memory is volatile.!</p>
    <p>Every smartphone has battery!  DRAM + Battery = ?</p>
    <p>+ ==? 13</p>
  </div>
  <div class="page">
    <p>Outline  Introduction!  Overhead of Persistency!  Rethinking Memory Volatility in</p>
    <p>Smartphones!  Design of qNVRAM!  Case Study</p>
  </div>
  <div class="page">
    <p>Rethinking Memory Volatility in smartphones</p>
    <p>Four types of failures in smartphones!  Application crash!  Application hang!  Self-reboot!  System freeze</p>
  </div>
  <div class="page">
    <p>Application crash / Application hang</p>
    <p>Rethinking Memory Volatility in smartphones</p>
    <p>Physical MemoryApplication Memory Space</p>
    <p>Page x</p>
    <p>Memory Management</p>
  </div>
  <div class="page">
    <p>Application crash / Application hang</p>
    <p>Rethinking Memory Volatility in smartphones</p>
    <p>Physical MemoryApplication Memory Space</p>
    <p>Page x</p>
    <p>Memory Management</p>
  </div>
  <div class="page">
    <p>Application crash / Application hang</p>
    <p>Rethinking Memory Volatility in smartphones</p>
    <p>Physical MemoryApplication Memory Space</p>
    <p>Page x</p>
    <p>Memory Management</p>
    <p>Page x</p>
  </div>
  <div class="page">
    <p>Application crash / Application hang</p>
    <p>Rethinking Memory Volatility in smartphones</p>
    <p>Physical MemoryApplication Memory Space</p>
    <p>Page x</p>
    <p>Memory Management</p>
    <p>Page x</p>
    <p>What if the application can! retrieve data from OS?</p>
  </div>
  <div class="page">
    <p>Self-reboot</p>
    <p>Rethinking Memory Volatility in smartphones</p>
    <p>Physical MemoryApplication Memory Space</p>
    <p>Page x</p>
    <p>Memory Management</p>
  </div>
  <div class="page">
    <p>Self-reboot</p>
    <p>Rethinking Memory Volatility in smartphones</p>
    <p>Physical MemoryApplication Memory Space</p>
    <p>Page x</p>
    <p>Memory Management</p>
  </div>
  <div class="page">
    <p>Self-reboot</p>
    <p>Rethinking Memory Volatility in smartphones</p>
    <p>Physical MemoryApplication Memory Space</p>
    <p>Page x</p>
    <p>Memory Management</p>
  </div>
  <div class="page">
    <p>Self-reboot</p>
    <p>Rethinking Memory Volatility in smartphones</p>
    <p>Physical MemoryApplication Memory Space</p>
    <p>Page x</p>
    <p>Memory Management</p>
    <p>DRAM doesnt lose power! over reboot!!! But the OS! doesnt know.</p>
  </div>
  <div class="page">
    <p>Self-reboot</p>
    <p>Rethinking Memory Volatility in smartphones</p>
    <p>Physical MemoryApplication Memory Space</p>
    <p>Page x</p>
    <p>Memory Management</p>
    <p>What if the data is stored at! a fixed physical location?</p>
  </div>
  <div class="page">
    <p>System freeze</p>
    <p>Rethinking Memory Volatility in smartphones</p>
    <p>Physical MemoryApplication Memory Space</p>
    <p>Page x</p>
    <p>Memory Management</p>
  </div>
  <div class="page">
    <p>System freeze!  user perform hard reset</p>
    <p>Rethinking Memory Volatility in smartphones</p>
  </div>
  <div class="page">
    <p>System freeze</p>
    <p>Rethinking Memory Volatility in smartphones</p>
    <p>Physical MemoryApplication Memory Space Memory</p>
    <p>Management</p>
    <p>What if the OS flushes the! important data to flash! when user perform hard! reset?</p>
  </div>
  <div class="page">
    <p>Failure mode and DRAM data</p>
    <p>Rethinking Memory Volatility in smartphones</p>
    <p>Application space OS</p>
    <p>Physical memory</p>
    <p>Application Crash</p>
    <p>Application Hang</p>
    <p>Self-reboot    System Hang</p>
  </div>
  <div class="page">
    <p>Outline  Introduction!  Overhead of Persistency!  Rethinking Memory Volatility in</p>
    <p>Smartphones!  Design of qNVRAM!  Case Study</p>
  </div>
  <div class="page">
    <p>Design of qNVRAM  qNVRAM: quasi Non-Volatile RAM!</p>
    <p>user library!  kernel module</p>
    <p>App AppApp</p>
    <p>qNVRAM Library</p>
    <p>qNVRAM Kernel Module</p>
    <p>DRAM Flash</p>
  </div>
  <div class="page">
    <p>Design of qNVRAM  qNVRAM library provides easy-to-use APIs!</p>
    <p>alloc()!  free()!  retrieve()</p>
    <p>App AppApp</p>
    <p>qNVRAM Library</p>
    <p>qNVRAM Kernel Module</p>
    <p>DRAM Flash</p>
  </div>
  <div class="page">
    <p>Design of qNVRAM  Kernel module manages a small chunk of</p>
    <p>physical memory.!  reserved during boot up!  fixed physical address!  emergency flush</p>
    <p>App AppApp</p>
    <p>qNVRAM Library</p>
    <p>qNVRAM Kernel Module</p>
    <p>DRAM Flash</p>
  </div>
  <div class="page">
    <p>Outline  Introduction!  Overhead of Persistency!  Rethinking Memory Volatility in</p>
    <p>smartphones!  Design of qNVRAM!  Case Study</p>
  </div>
  <div class="page">
    <p>Case Study  Persistent Page Cache in SQLite!</p>
    <p>In-place update</p>
    <p>Persistent Page Cache</p>
    <p>File System</p>
    <p>A</p>
    <p>A B C</p>
  </div>
  <div class="page">
    <p>Case Study  Persistent Page Cache in SQLite!</p>
    <p>In place update</p>
    <p>Persistent Page Cache</p>
    <p>File System</p>
    <p>A</p>
    <p>A B C</p>
    <p>update()</p>
  </div>
  <div class="page">
    <p>Case Study  Persistent Page Cache in SQLite!</p>
    <p>In place update</p>
    <p>Persistent Page Cache</p>
    <p>File System</p>
    <p>A</p>
    <p>A B C</p>
    <p>commit() update()</p>
  </div>
  <div class="page">
    <p>Case Study  Persistent Page Cache in SQLite!</p>
    <p>In place update!  Recover from persistent page cache upon</p>
    <p>failure. Persistent Page Cache</p>
    <p>File System</p>
    <p>A</p>
    <p>A B C</p>
    <p>commit() update()</p>
  </div>
  <div class="page">
    <p>Case Study  Persistent Page Cache in SQLite!</p>
    <p>In place update!  Recover from persistent page cache upon</p>
    <p>failure. Persistent Page Cache</p>
    <p>File System</p>
    <p>A</p>
    <p>A B C</p>
    <p>commit() update()</p>
  </div>
  <div class="page">
    <p>Case Study  Lazy Flush!</p>
    <p>Dirty pages are flushed asynchronously.</p>
    <p>Persistent Page Cache</p>
    <p>File System</p>
    <p>A B</p>
    <p>A B C</p>
    <p>commit() update()</p>
    <p>update() commit()</p>
  </div>
  <div class="page">
    <p>Case Study  Performance evaluation!</p>
    <p>Samsung Galaxy S4 Google Edition!  4 core CPU!  2GB RAM!  16GB flash!</p>
    <p>SQLite 3.7.12!  Persistent page cache!  Lazy Flush</p>
  </div>
  <div class="page">
    <p>Case Study</p>
    <p>Insert Update Delete</p>
    <p>~16x</p>
    <p>Performance evaluation</p>
  </div>
  <div class="page">
    <p>Case Study  Performance evaluation</p>
    <p>WAL</p>
    <p>LazyFlush (5)</p>
  </div>
  <div class="page">
    <p>Conclusion  qNVRAM takes advantage of the battery</p>
    <p>backed characteristic of smartphones.!  qNVRAM can speed up SQLite by up to</p>
  </div>
  <div class="page">
    <p>Q. .A</p>
  </div>
</Presentation>
