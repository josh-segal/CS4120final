<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Understanding multimedia application Understanding multimedia application chacteristics for designing chacteristics for designing</p>
    <p>programmable media processorsprogrammable media processors</p>
    <p>Jason FrittsJason Fritts</p>
    <p>Jason Fritts, Wayne Wolf, and Bede LiuJason Fritts, Wayne Wolf, and Bede Liu</p>
    <p>SPIE Media Processors '99SPIE Media Processors '99 January 28, 1999January 28, 1999</p>
  </div>
  <div class="page">
    <p>Why programmable media processors?Why programmable media processors?</p>
    <p>Future of multimediaFuture of multimedia moving away from simple &quot;compression&quot; paradigmmoving away from simple &quot;compression&quot; paradigm moving towards more general media processingmoving towards more general media processing</p>
    <p>object-orientedobject-oriented less processing regularityless processing regularity</p>
    <p>Existing multimedia supportExisting multimedia support application-specific processorapplication-specific processor multimedia extensionsmultimedia extensions multimedia co-processors (programmable media processors)multimedia co-processors (programmable media processors)</p>
  </div>
  <div class="page">
    <p>Fundamentals of processor designFundamentals of processor design</p>
    <p>Complementary design methodologyComplementary design methodology balance between architecture and compilerbalance between architecture and compiler determine determine technology-driven hardware tradeoffstechnology-driven hardware tradeoffs examine application-driven architectural tradeoffsexamine application-driven architectural tradeoffs</p>
    <p>Architectural tradeoffsArchitectural tradeoffs use representative benchmark suiteuse representative benchmark suite thorough evaluation of application characteristicsthorough evaluation of application characteristics programmability requires compiler perspectiveprogrammability requires compiler perspective</p>
    <p>high-level language (HLL) programmabilityhigh-level language (HLL) programmability</p>
  </div>
  <div class="page">
    <p>Evaluation EnvironmentEvaluation Environment</p>
    <p>MediaBench multimedia benchmark suiteMediaBench multimedia benchmark suite developed at UCLA by Lee, Potkonjak, and Magione-Smithdeveloped at UCLA by Lee, Potkonjak, and Magione-Smith goals of MediaBenchgoals of MediaBench</p>
    <p>applications written in high-level language (HLL)applications written in high-level language (HLL)</p>
    <p>representative of emerging multimedia and communications systemsrepresentative of emerging multimedia and communications systems</p>
    <p>IMPACT compilerIMPACT compiler developed by Wen-mei Hwu's group at UIUCdeveloped by Wen-mei Hwu's group at UIUC necessary tools for architecture evaluationnecessary tools for architecture evaluation</p>
    <p>aggressive ILP optimizationsaggressive ILP optimizations performance analysis toolsperformance analysis tools retargetabilityretargetability</p>
  </div>
  <div class="page">
    <p>MediaBench Benchmark SuiteMediaBench Benchmark Suite</p>
    <p>Excellent combination of multimedia applicationsExcellent combination of multimedia applications</p>
    <p>Applications in suiteApplications in suite video:video: MPEG-2MPEG-2 audio:audio: ADPCM coderADPCM coder graphics:graphics: MesaMesa image:image: JPEG, EPIC, GhostscriptJPEG, EPIC, Ghostscript security:security: PGP, PegwitPGP, Pegwit speech:speech: GSM, G.721, RastaGSM, G.721, Rasta</p>
    <p>Still in initial stages of developmentStill in initial stages of development</p>
  </div>
  <div class="page">
    <p>MediaBench ShortcomingsMediaBench Shortcomings</p>
    <p>Less representative of future multimedia applicationsLess representative of future multimedia applications some applications are smallsome applications are small audio and video have less weight audio and video have less weight than other areasthan other areas</p>
    <p>Data setsData sets many small data setsmany small data sets some data sets unlike typical inputssome data sets unlike typical inputs some applications have small tracessome applications have small traces initially only one input data setinitially only one input data set</p>
    <p>recently added a secondrecently added a second</p>
    <p>Augmented for greater representation of future multimediaAugmented for greater representation of future multimedia MPEG-4 object-oriented videoMPEG-4 object-oriented video H.263 very-low bitrate videoH.263 very-low bitrate video</p>
  </div>
  <div class="page">
    <p>IMPACT CompilerIMPACT Compiler</p>
    <p>Aggressive ILP research compilerAggressive ILP research compiler superblocksuperblock hyperblockhyperblock loop unrollingloop unrolling modulo schedulingmodulo scheduling</p>
    <p>Architecture-independent evaluationArchitecture-independent evaluation large, generic instruction setlarge, generic instruction set</p>
    <p>Performance analysis toolsPerformance analysis tools</p>
    <p>Designed for general-purpose processingDesigned for general-purpose processing retargetability allows for universal architecture evaluationretargetability allows for universal architecture evaluation</p>
  </div>
  <div class="page">
    <p>Application CharacteristicsApplication Characteristics</p>
    <p>Evaluate intrinsic characteristics of applicationsEvaluate intrinsic characteristics of applications allow only classical optimizations which eliminate redundanciesallow only classical optimizations which eliminate redundancies</p>
    <p>Characteristics define architectural requirementsCharacteristics define architectural requirements</p>
    <p>operation frequencies functional unit</p>
    <p>integer data sizes datapath width</p>
    <p>branch statistics branch prediction</p>
    <p>working set size memory</p>
    <p>spatial locality memory</p>
    <p>parallelism functional unit</p>
    <p>characteristiccharacteristic architecturearchitecture</p>
  </div>
  <div class="page">
    <p>Operation FrequenciesOperation Frequencies</p>
    <p>Operation frequencies determine ratio of functional unitsOperation frequencies determine ratio of functional units parallelism statistics determine quantitiesparallelism statistics determine quantities</p>
    <p>Results similar to general-purpose codeResults similar to general-purpose code memory usage high in some applicationsmemory usage high in some applications less floating-point usageless floating-point usage 'compare' usage low because of 'compare and branch' operation'compare' usage low because of 'compare and branch' operation</p>
    <p>Resulting resource ratiosResulting resource ratios allow for large variation in ALU and memory operation usageallow for large variation in ALU and memory operation usage (ALU, mem, branch, shift, FP, mult) =&gt; (4, 2, 1, 1, 1, 1)(ALU, mem, branch, shift, FP, mult) =&gt; (4, 2, 1, 1, 1, 1)</p>
  </div>
  <div class="page">
    <p>Operation Frequency ResultsOperation Frequency Results lo</p>
    <p>a d</p>
    <p>s to</p>
    <p>re a ri</p>
    <p>th c m</p>
    <p>p lo</p>
    <p>g ic</p>
    <p>s h</p>
    <p>if t</p>
    <p>m o</p>
    <p>v m</p>
    <p>u lt</p>
    <p>d iv</p>
    <p>c b</p>
    <p>r ju</p>
    <p>m p</p>
    <p>c a ll</p>
    <p>re tu</p>
    <p>rn re</p>
    <p>g _ b</p>
    <p>r c b</p>
    <p>r_ fp</p>
    <p>lo a d</p>
    <p>_ fp</p>
    <p>s to</p>
    <p>re _ fp</p>
    <p>a ri</p>
    <p>th _ fp</p>
    <p>m u</p>
    <p>lt _ fp</p>
    <p>d iv</p>
    <p>_ fp</p>
    <p>c m</p>
    <p>p _ fp</p>
    <p>m o</p>
    <p>v _ fp</p>
    <p>c o</p>
    <p>n v _ fp</p>
    <p>operation type</p>
    <p>fr e q u e n cy</p>
  </div>
  <div class="page">
    <p>Load and Store Frequency ResultsLoad and Store Frequency Results d</p>
    <p>jp e</p>
    <p>g</p>
    <p>e p</p>
    <p>ic</p>
    <p>g 7</p>
    <p>d e</p>
    <p>c</p>
    <p>g s</p>
    <p>m e</p>
    <p>n c</p>
    <p>o d</p>
    <p>e</p>
    <p>h 2</p>
    <p>e n</p>
    <p>c</p>
    <p>m p</p>
    <p>e g</p>
    <p>e c</p>
    <p>m p</p>
    <p>e g</p>
    <p>n c</p>
    <p>m p</p>
    <p>e g</p>
    <p>e c</p>
    <p>m p</p>
    <p>e g</p>
    <p>n c</p>
    <p>p e</p>
    <p>g w</p>
    <p>it d</p>
    <p>e c</p>
    <p>p g</p>
    <p>p e</p>
    <p>n c</p>
    <p>o d</p>
    <p>e</p>
    <p>ra s</p>
    <p>ta</p>
    <p>ra w</p>
    <p>d a</p>
    <p>u d</p>
    <p>io</p>
    <p>te x</p>
    <p>g e</p>
    <p>n</p>
    <p>u n</p>
    <p>e p</p>
    <p>ic</p>
    <p>application</p>
    <p>fr e q u e n cy</p>
    <p>load store load_fp store_fp</p>
  </div>
  <div class="page">
    <p>Basic Block and Branch StatisticsBasic Block and Branch Statistics</p>
    <p>Basic block size provides good estimation of parallelismBasic block size provides good estimation of parallelism basic block defines window for local schedulingbasic block defines window for local scheduling speedup typically 25-35% of basic block sizespeedup typically 25-35% of basic block size</p>
    <p>Global scheduling needed to increase parallelismGlobal scheduling needed to increase parallelism increase basic block size through predication or speculationincrease basic block size through predication or speculation branch prediction necessarybranch prediction necessary</p>
    <p>Branch statisticsBranch statistics static branch prediction enables compile-time decisionsstatic branch prediction enables compile-time decisions evaluate static prediction vs. dynamic predictionevaluate static prediction vs. dynamic prediction</p>
  </div>
  <div class="page">
    <p>Average Basic Block SizesAverage Basic Block Sizes c</p>
    <p>jp e</p>
    <p>g</p>
    <p>d jp</p>
    <p>e g</p>
    <p>e p</p>
    <p>ic</p>
    <p>g 7</p>
    <p>d e</p>
    <p>c</p>
    <p>g 7</p>
    <p>e n</p>
    <p>c</p>
    <p>g s</p>
    <p>m d</p>
    <p>e c</p>
    <p>o d</p>
    <p>e</p>
    <p>g s</p>
    <p>m e</p>
    <p>n c</p>
    <p>o d</p>
    <p>e</p>
    <p>h 2</p>
    <p>d e</p>
    <p>c</p>
    <p>h 2</p>
    <p>e n</p>
    <p>c</p>
    <p>m ip</p>
    <p>m a</p>
    <p>p</p>
    <p>m p</p>
    <p>e g</p>
    <p>e c</p>
    <p>m p</p>
    <p>e g</p>
    <p>n c</p>
    <p>m p</p>
    <p>e g</p>
    <p>e c</p>
    <p>o s</p>
    <p>d e</p>
    <p>m o</p>
    <p>p e</p>
    <p>g w</p>
    <p>it d</p>
    <p>e c</p>
    <p>p e</p>
    <p>g w</p>
    <p>it e</p>
    <p>n c</p>
    <p>p g</p>
    <p>p d</p>
    <p>e c</p>
    <p>o d</p>
    <p>e</p>
    <p>p g</p>
    <p>p e</p>
    <p>n c</p>
    <p>o d</p>
    <p>e</p>
    <p>ra s</p>
    <p>ta</p>
    <p>ra w</p>
    <p>c a</p>
    <p>u d</p>
    <p>io</p>
    <p>ra w</p>
    <p>d a</p>
    <p>u d</p>
    <p>io</p>
    <p>te x</p>
    <p>g e</p>
    <p>n</p>
    <p>u n</p>
    <p>e p</p>
    <p>ic</p>
    <p>application</p>
    <p>o p e ra</p>
    <p>tio n s</p>
    <p>p e r</p>
    <p>b a si</p>
    <p>c b lo</p>
    <p>ck</p>
  </div>
  <div class="page">
    <p>Dynamic vs. Static Branch PredictionDynamic vs. Static Branch Prediction d</p>
    <p>jp e</p>
    <p>g</p>
    <p>e p</p>
    <p>ic</p>
    <p>g 7</p>
    <p>d e</p>
    <p>c</p>
    <p>g s</p>
    <p>m e</p>
    <p>n c</p>
    <p>o d</p>
    <p>e</p>
    <p>h 2</p>
    <p>d e</p>
    <p>c</p>
    <p>h 2</p>
    <p>e n</p>
    <p>c</p>
    <p>m ip</p>
    <p>m a</p>
    <p>p</p>
    <p>m p</p>
    <p>e g</p>
    <p>e c</p>
    <p>m p</p>
    <p>e g</p>
    <p>n c</p>
    <p>m p</p>
    <p>e g</p>
    <p>e c</p>
    <p>p e</p>
    <p>g w</p>
    <p>it d</p>
    <p>e c</p>
    <p>p g</p>
    <p>p e</p>
    <p>n c</p>
    <p>o d</p>
    <p>e</p>
    <p>ra s</p>
    <p>ta</p>
    <p>ra w</p>
    <p>d a</p>
    <p>u d</p>
    <p>io</p>
    <p>te x</p>
    <p>g e</p>
    <p>n</p>
    <p>u n</p>
    <p>e p</p>
    <p>ic</p>
    <p>application</p>
    <p>fr e q u e n cy</p>
    <p>static dynamic</p>
  </div>
  <div class="page">
    <p>Integer Data SizesInteger Data Sizes</p>
    <p>Multimedia integer data typically require only 8 or 16 bits Multimedia integer data typically require only 8 or 16 bits smaller data types may warrant narrower datapathsmaller data types may warrant narrower datapath longer data types primarily pointerslonger data types primarily pointers</p>
    <p>Evaluation of integer data sizesEvaluation of integer data sizes maximum absolute value of each operation defines its data sizemaximum absolute value of each operation defines its data size</p>
  </div>
  <div class="page">
    <p>Integer Data Size HistogramInteger Data Size Histogram</p>
    <p>bits per operation</p>
    <p>fr e q u e n cy</p>
  </div>
  <div class="page">
    <p>Memory StatisticsMemory Statistics</p>
    <p>Working set sizeWorking set size cache regression: cache sizes 1K, 2K, ..., 4MBcache regression: cache sizes 1K, 2K, ..., 4MB assumed line size of 64 bytesassumed line size of 64 bytes measured read and write miss ratiosmeasured read and write miss ratios</p>
    <p>Spatial localitySpatial locality cache regression: line sizes 8, 16, ..., 1024 bytescache regression: line sizes 8, 16, ..., 1024 bytes assumed cache size of 64 KBassumed cache size of 64 KB measured read and write miss ratiosmeasured read and write miss ratios</p>
    <p>Memory ResultsMemory Results data: data: 32 KB and 76.1% spatial locality32 KB and 76.1% spatial locality instruction:instruction: 8 KB and 86.8% spatial locality8 KB and 86.8% spatial locality</p>
  </div>
  <div class="page">
    <p>Data Working Set SizesData Working Set Sizes c</p>
    <p>jp e</p>
    <p>g</p>
    <p>d jp</p>
    <p>e g</p>
    <p>e p</p>
    <p>ic</p>
    <p>g 7</p>
    <p>d e</p>
    <p>c</p>
    <p>g 7</p>
    <p>e n</p>
    <p>c</p>
    <p>g s</p>
    <p>g s</p>
    <p>m d</p>
    <p>e c</p>
    <p>o d</p>
    <p>e</p>
    <p>g s</p>
    <p>m e</p>
    <p>n c</p>
    <p>o d</p>
    <p>e</p>
    <p>h 2</p>
    <p>d e</p>
    <p>c</p>
    <p>h 2</p>
    <p>e n</p>
    <p>c</p>
    <p>m ip</p>
    <p>m a</p>
    <p>p</p>
    <p>m p</p>
    <p>e g</p>
    <p>e c</p>
    <p>m p</p>
    <p>e g</p>
    <p>n c</p>
    <p>m p</p>
    <p>e g</p>
    <p>e c</p>
    <p>o s</p>
    <p>d e</p>
    <p>m o</p>
    <p>p e</p>
    <p>g w</p>
    <p>it d</p>
    <p>e c</p>
    <p>p e</p>
    <p>g w</p>
    <p>it e</p>
    <p>n c</p>
    <p>p g</p>
    <p>p d</p>
    <p>e c</p>
    <p>o d</p>
    <p>e</p>
    <p>p g</p>
    <p>p e</p>
    <p>n c</p>
    <p>o d</p>
    <p>e</p>
    <p>ra s</p>
    <p>ta</p>
    <p>ra w</p>
    <p>c a</p>
    <p>u d</p>
    <p>io</p>
    <p>ra w</p>
    <p>d a</p>
    <p>u d</p>
    <p>io</p>
    <p>te x</p>
    <p>g e</p>
    <p>n</p>
    <p>u n</p>
    <p>e p</p>
    <p>ic</p>
    <p>application</p>
    <p>w o rk</p>
    <p>in g s</p>
    <p>e t si</p>
    <p>ze (</p>
    <p>K B</p>
    <p>)</p>
  </div>
  <div class="page">
    <p>Instruction Cache Miss RatiosInstruction Cache Miss Ratios</p>
    <p>cache size (KB)</p>
    <p>m is</p>
    <p>s ra</p>
    <p>tio</p>
  </div>
  <div class="page">
    <p>Data Memory Spatial LocalityData Memory Spatial Locality c</p>
    <p>jp e</p>
    <p>g</p>
    <p>d jp</p>
    <p>e g</p>
    <p>e p</p>
    <p>ic</p>
    <p>g 7</p>
    <p>d e</p>
    <p>c</p>
    <p>g 7</p>
    <p>e n</p>
    <p>c</p>
    <p>g s</p>
    <p>g s</p>
    <p>m d</p>
    <p>e c</p>
    <p>o d</p>
    <p>e</p>
    <p>g s</p>
    <p>m e</p>
    <p>n c</p>
    <p>o d</p>
    <p>e</p>
    <p>h 2</p>
    <p>d e</p>
    <p>c</p>
    <p>h 2</p>
    <p>e n</p>
    <p>c</p>
    <p>m ip</p>
    <p>m a</p>
    <p>p</p>
    <p>m p</p>
    <p>e g</p>
    <p>e c</p>
    <p>m p</p>
    <p>e g</p>
    <p>n c</p>
    <p>m p</p>
    <p>e g</p>
    <p>e c</p>
    <p>o s</p>
    <p>d e</p>
    <p>m o</p>
    <p>p g</p>
    <p>p d</p>
    <p>e c</p>
    <p>o d</p>
    <p>e</p>
    <p>p g</p>
    <p>p e</p>
    <p>n c</p>
    <p>o d</p>
    <p>e</p>
    <p>ra s</p>
    <p>ta</p>
    <p>ra w</p>
    <p>c a</p>
    <p>u d</p>
    <p>io</p>
    <p>ra w</p>
    <p>d a</p>
    <p>u d</p>
    <p>io</p>
    <p>te x</p>
    <p>g e</p>
    <p>n</p>
    <p>u n</p>
    <p>e p</p>
    <p>ic</p>
    <p>application</p>
    <p>fr e q u e n cy</p>
  </div>
  <div class="page">
    <p>ParallelismParallelism</p>
    <p>Examine various compiler optimizationsExamine various compiler optimizations base model - single issuebase model - single issue</p>
    <p>classical optimizations onlyclassical optimizations only</p>
    <p>parallel model - eight issueparallel model - eight issue classical optimizations onlyclassical optimizations only classical optimizations with inliningclassical optimizations with inlining superblocksuperblock hyperblock w/ superblockhyperblock w/ superblock</p>
    <p>Explores only parallel scheduling performanceExplores only parallel scheduling performance assumes an ideal processor modelassumes an ideal processor model no performance penalties from branches, cache misses, etc.no performance penalties from branches, cache misses, etc.</p>
  </div>
  <div class="page">
    <p>Parallelism ResultsParallelism Results</p>
    <p>Speedup ResultsSpeedup Results classical only:classical only: 1.401.40 classical with inlining:classical with inlining: 1.441.44 superblock:superblock: 2.222.22 hyperblock w/ superblock:hyperblock w/ superblock: 2.032.03</p>
    <p>base model parallel model issue 1 8</p>
    <p>branches per cycle 1 1 ALU latency 1 1 load latency 2 2</p>
    <p>multiply latency 3 3 floating-point latency 3 3</p>
    <p>divide latency 10 10</p>
  </div>
  <div class="page">
    <p>Parallelism ResultsParallelism Results d</p>
    <p>jp e</p>
    <p>g</p>
    <p>e p</p>
    <p>ic</p>
    <p>g 7</p>
    <p>d e</p>
    <p>c</p>
    <p>g s</p>
    <p>m d</p>
    <p>e c</p>
    <p>o d</p>
    <p>e</p>
    <p>g s</p>
    <p>m e</p>
    <p>n c</p>
    <p>o d</p>
    <p>e</p>
    <p>h 2</p>
    <p>d e</p>
    <p>c</p>
    <p>h 2</p>
    <p>e n</p>
    <p>c</p>
    <p>m ip</p>
    <p>m a</p>
    <p>p</p>
    <p>m p</p>
    <p>e g</p>
    <p>e c</p>
    <p>m p</p>
    <p>e g</p>
    <p>e c</p>
    <p>o s</p>
    <p>d e</p>
    <p>m o</p>
    <p>p e</p>
    <p>g w</p>
    <p>it d</p>
    <p>e c</p>
    <p>p e</p>
    <p>g w</p>
    <p>it e</p>
    <p>n c</p>
    <p>p g</p>
    <p>p d</p>
    <p>e c</p>
    <p>o d</p>
    <p>e</p>
    <p>p g</p>
    <p>p e</p>
    <p>n c</p>
    <p>o d</p>
    <p>e</p>
    <p>ra w</p>
    <p>d a</p>
    <p>u d</p>
    <p>io</p>
    <p>te x</p>
    <p>g e</p>
    <p>n</p>
    <p>application</p>
    <p>sp e e d u p</p>
  </div>
  <div class="page">
    <p>Streaming DataStreaming Data</p>
    <p>From...From... large amounts of datalarge amounts of data small working set sizessmall working set sizes high frequecy of memory accesseshigh frequecy of memory accesses good spatial localitygood spatial locality</p>
    <p>Implies...streaming dataImplies...streaming data processor is constantly loading in small amounts of data,processor is constantly loading in small amounts of data, performing all necessary work on it,performing all necessary work on it, throwing data out,throwing data out, and never (or rarely) accessing it againand never (or rarely) accessing it again</p>
    <p>No experiments performed yetNo experiments performed yet performance gain likely from stream buffer or stride prediction tableperformance gain likely from stream buffer or stride prediction table</p>
  </div>
  <div class="page">
    <p>ConclusionsConclusions</p>
    <p>OverviewOverview resource ratios: resource ratios: (ALU, mem, branch, shft, FP, mult) =&gt; (4, 2, 1, 1, 1, 1)(ALU, mem, branch, shft, FP, mult) =&gt; (4, 2, 1, 1, 1, 1) excellent static branch prediction of 89.5%excellent static branch prediction of 89.5% datapath size of 16 bits may be feasibledatapath size of 16 bits may be feasible data memory:data memory: 32 KB and 76.1% locality32 KB and 76.1% locality instruction memory:instruction memory: 8 KB and 86.8% locality8 KB and 86.8% locality best parallelism best parallelism ~2.2 on average~2.2 on average</p>
    <p>marginally better for videomarginally better for video</p>
    <p>Compiler parallelism extraction is critical for successCompiler parallelism extraction is critical for success data parallelism not exploited by conventional compiler techniquesdata parallelism not exploited by conventional compiler techniques compiler must find and exploit data parallelismcompiler must find and exploit data parallelism general-purpose processors sufficient otherwisegeneral-purpose processors sufficient otherwise</p>
  </div>
  <div class="page">
    <p>Future WorkFuture Work</p>
    <p>Finer-grained workload evaluationFiner-grained workload evaluation Characteristics by type of applicationCharacteristics by type of application</p>
    <p>audio, video, computer graphics, etc.audio, video, computer graphics, etc. Function-level analysisFunction-level analysis</p>
    <p>identify types of code regionsidentify types of code regions best compiler techniques on those code sectionsbest compiler techniques on those code sections</p>
    <p>Architecture style analysisArchitecture style analysis Static vs. dynamic schedulingStatic vs. dynamic scheduling</p>
    <p>VLIW vs. superscalarVLIW vs. superscalar Lock-step Lock-step vs. decoupled issue-executevs. decoupled issue-execute</p>
    <p>Improving compiler parallelism extraction for multimediaImproving compiler parallelism extraction for multimedia</p>
  </div>
</Presentation>
