<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>A0 80 8 08 8 0 8 8 ,A</p>
    <p>A</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>q Background and Motivation q Rule Miner (ARE) q Design and Implementation q Evaluation q ARE-based Applications q Conclusion</p>
  </div>
  <div class="page">
    <p>) . - - - . 2</p>
    <p>- 5 ) ,  . - 5 . 5 .</p>
    <p>5 . 5, . ,  5 ) . - .  , ,</p>
    <p>( 2 2 ) . - . , - -2</p>
    <p>. - ,  5 5 5  5 - 0</p>
  </div>
  <div class="page">
    <p>Mirai botnet: IoT devices being compromised and exploited as parts of a botnet, attacking critical national infrastructures  October, 2016  attacking the Dyn Services  causing Internet service disruptions</p>
    <p>across Europe and the United States</p>
    <p>Hackers Turn IoT devices (DVRs) Into Worst Bitcoin Miners</p>
    <p>Map of areas most affected by Mirai attack</p>
  </div>
  <div class="page">
    <p>Mirai botnet: IoT devices being compromised and exploited as parts of a botnet, attacking critical national infrastructures  October, 2016  attacking the Dyn Services  causing Internet service disruptions</p>
    <p>across Europe and the United States</p>
    <p>Hackers turn compromised IoT devices (DVRs) into worst Bitcoin miners</p>
  </div>
  <div class="page">
    <p>There are two basic approaches to addressing security threats:  reactive defense  proactive prevention</p>
    <p>more efficient than the reactive defense against large-scale security incidents</p>
    <p>To protect IoT devices in a proactive manner  a prerequisite step: discovering, cataloging, and annotating</p>
    <p>IoT devices.</p>
  </div>
  <div class="page">
    <p>The device annotation contains:  IoT device type (e.g., routers/camera),  vendor (e.g., Sony, CISCO),  product model (e.g., TV-IP302P).</p>
    <p>Fingerprinting-based Discovery.  high demand for training data and a large</p>
    <p>number of device models</p>
    <p>Banner-grabbing Discovery  examples: Nmap and Ztag  a manual fashion with technical</p>
    <p>knowledge  impossible for large-scale annotations  hard to keep the discovery updated</p>
    <p>Regular expression used in Nmap</p>
    <p>Rules used in Ztag (Censys)</p>
  </div>
  <div class="page">
    <p>Manufacturers usually hardcode the correlated information into IoT devices to distinguish their brands.  TL-WR740/TL-WR741ND in HTML file</p>
    <p>There are many websites describing device products such as product reviews.  Amazon and NEWEGG websites provide</p>
    <p>the device annotation descriptions.</p>
    <p>Our work is rule-based.  the automatic rule generation is mainly</p>
    <p>based on the relationship between the application data of IoT devices and the corresponding description websites.</p>
    <p>Application layer data appears in IoT device.</p>
    <p>Relevant websites about this device in Google</p>
  </div>
  <div class="page">
    <p>Two major challenges:  the application data is hardcoded by its manufacturer.  there are massive device annotations in the market.</p>
    <p>Notably, manufacturers would release new products and abandon outdated products.  manually enumerating every description webpage is</p>
    <p>impossible.</p>
  </div>
  <div class="page">
    <p>Rule miner for automatic rule generation</p>
    <p>Transaction set  application-layer data and the relevant webpages</p>
    <p>Device entity recognition (DER)  contexter and local dependency</p>
    <p>Apriori algorithm  learn the relationship form Transactions</p>
  </div>
  <div class="page">
    <p>Transaction definition:  a transaction is a pair of textual units, consisting of the</p>
    <p>application-layer data of an IoT device and the corresponding description of the IoT device from a webpage.</p>
    <p>A rule is {A  B}.  the association between a few features (A) extracted from</p>
    <p>the application-layer data and the device annotation (B) extracted from relevant webpages</p>
  </div>
  <div class="page">
    <p>(</p>
    <p>DER is a combination of the corpus-based and rule-based.  corpus-based: device types and</p>
    <p>vendor names.  rule-based: use regular</p>
    <p>expressions to extract the product name entity. Context textual terms</p>
  </div>
  <div class="page">
    <p>(</p>
    <p>Poor performance :  high false positives in terms of device type and</p>
    <p>product name.</p>
    <p>an irrelevant webpage may include keyword of device type such as switch.</p>
    <p>a phrase that meets the requirement of regex for a product name.</p>
    <p>True IoT entities always have strong dependence upon one another.  (1) the vendor entity first appears, followed by the</p>
    <p>device-type entity, and finally the product entity;</p>
    <p>(2) the vendor entity first appears, and the product entity appears second without any other object between the vendor entity, and the device-type entity follows</p>
    <p>The local dependency of the device entity</p>
  </div>
  <div class="page">
    <p>Apriori algorithm</p>
    <p>A few example rules learned for IoT devices.</p>
    <p>Parameters  support is used to indicate the</p>
    <p>frequency of the variable (A) appearance</p>
    <p>confidence is the frequency of the rules (A  B) under the condition in which the A appears</p>
    <p>sup(A) = 0.1% and conf(A  B) = 50% work well.</p>
  </div>
  <div class="page">
    <p>Transaction collection  response data collection.  web crawler.</p>
    <p>Rule miner  Rule library</p>
    <p>store each rule {A  B}  Planner.</p>
    <p>update the rule library Acquisitional Rule-based Engine (ARE) architecture for learning device rules.</p>
  </div>
  <div class="page">
    <p>Data sets  First dataset:</p>
    <p>randomly choose 350 IoT devices from the Internet.  4 different device types (NVR, NVS, router, and IPcamera) 64 different</p>
    <p>vendors, and 314 different products  Second dataset:</p>
    <p>6.9 million IoT devices that our application collects on the Internet.  randomly sample 50 IoT devices iteratively for 20 times.  1,000 devices across 10 device types and 77 vendors.</p>
  </div>
  <div class="page">
    <p>Number of rules  generate 115,979 rules in one week.  in comparison with 6,514 from Nmap  92.8% of rules - (device type, vendor, product).  7.2% of rules just label device type and vendor.  about 30% of rules in Nmap with a fine-grained</p>
    <p>annotation.</p>
    <p>Precision of rules  first dataset: 95.7%  second dataset: 97.5%</p>
    <p>Coverage of rules  94.9% coverage  given the same number of response packets,</p>
    <p>ARE achieves a larger coverage than Nmap</p>
    <p>Precision and coverage of rules on the dataset.</p>
    <p>Rules generated by ARE.</p>
  </div>
  <div class="page">
    <p>Dynamic rule learning  the number of rules is</p>
    <p>increasing as ARE learns with the increase of network space.</p>
    <p>Overhead of ARE  Windows 10, 4vCPU, 16GB of</p>
    <p>memory, 64-bit OS  time cost of ARE for automatic</p>
    <p>rule generation is low in practice</p>
    <p>Average time cost of one ARE rule generation.</p>
    <p>Dynamic rule learning for ARE.</p>
  </div>
  <div class="page">
    <p>Internet-wide measurement for IoT devices.</p>
    <p>Detecting compromised IoT devices.</p>
    <p>Detecting underlying vulnerable IoT devices.</p>
  </div>
  <div class="page">
    <p>Three application-layer datasets from Censys  HTTP, FTP, and Telnet.</p>
    <p>Deploying our collection module on the Amazon EC2  RTSP application-layer data.</p>
    <p>Using ARE, found 6.9 million IoT devices  3.9M HTTP, 1.5M FTP, 1M Telnet, and 0.5 M</p>
    <p>RTSP.  Discovery:</p>
    <p>a large number of visible and reachable IoT devices on the Internet</p>
    <p>the long-tail distribution is common for IoT devices ( 31% in Top 10)</p>
    <p>many devices should not be visible or reachable from the external networks (camera/DVR).</p>
    <p>Geographic distribution.</p>
    <p>Automatic Internet-wide identification.</p>
  </div>
  <div class="page">
    <p>Deploy honeypots as vantage points for monitoring traffic on the Internet.</p>
    <p>Annotating the captured IP addresses  a normal IoT device should never access</p>
    <p>honeypots.  an IoT device accesses our honeypots due</p>
    <p>to misconfigured or compromised.  Honeypots</p>
    <p>4 countries, 7 cities  the duration is two months</p>
    <p>Discovery:  50 compromised IoT devices every day.  In total, 2,000 compromised IoT devices</p>
    <p>among (12,928 IP addresses)  Device type: DVR, NAS and router  Also, some smart TV boxes exhibit</p>
    <p>malicious behaviors. Device type and vendor for compromised devices.</p>
    <p>Compromised IoT device distribution.</p>
  </div>
  <div class="page">
    <p>Finding underlying vulnerable devices  cross match the exposed IoT</p>
    <p>devices with the vulnerability information from NVD</p>
    <p>Discovery:  a large number of underlying</p>
    <p>vulnerable devices in the cyberspace</p>
    <p>most vulnerabilities is about improper implementation</p>
    <p>Path Traversal, Credentials Management, and Improper Access Control</p>
    <p>Could be easily avoided if a developer pays more attention to security.</p>
    <p>Top 10 CWE of online IoT devices</p>
  </div>
  <div class="page">
    <p>We propose the framework of ARE  automatically generate rules for IoT device recognition without human effort and</p>
    <p>training data.</p>
    <p>We implement a prototype of ARE and evaluate its effectiveness.  ARE generates a much larger number of rules within one week and achieves much</p>
    <p>more fine-grained IoT device discovery than existing tools.</p>
    <p>We apply ARE for three different IoT device discovery scenarios. Our main findings include  (1) a large number of IoT devices are accessible on the Internet  (2) thousands of overlooked IoT devices are compromised  (3) hundreds of thousands of IoT devices have underlying security vulnerabilities and</p>
    <p>are exposed to the public.</p>
  </div>
  <div class="page">
    <p>! &amp;</p>
  </div>
</Presentation>
