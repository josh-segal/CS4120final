<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Tyler Denniston MIT CSAIL</p>
    <p>Yury Baskakov VMware</p>
    <p>Irene Zhang University of Washington</p>
    <p>Alex Garthwaite CloudPhysics</p>
    <p>Optimizing VM Checkpointing for Restore Performance in</p>
    <p>VMware ESXi Server</p>
  </div>
  <div class="page">
    <p>Virtual Machine Checkpointing</p>
    <p>Provides snapshot of a running virtual machine.</p>
    <p>Taking a checkpoint is fast, but restoring a checkpoint is slow.</p>
    <p>Traditionally used to support fault tolerance applications.</p>
  </div>
  <div class="page">
    <p>Dynamic VM allocation  Energy conservation  Virtual desktop infrastructure</p>
    <p>Existing VM checkpointing systems cannot support applications that require fast restore.</p>
  </div>
  <div class="page">
    <p>Halite</p>
    <p>New checkpointing system for VMware ESXi Server that reduces</p>
    <p>restore time to seconds.</p>
  </div>
  <div class="page">
    <p>VM Checkpoint Restore</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>VM Checkpoint Restore</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>VM Checkpoint Restore</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>VM Checkpoint Restore</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>VM Checkpoint Restore</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>VM Checkpoint Restore</p>
    <p>t VMVM</p>
    <p>Fast for small VMs less than 1GB, but does not</p>
    <p>scale to bigger VMs.</p>
  </div>
  <div class="page">
    <p>ESXi Checkpoint Restore</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>ESXi Checkpoint Restore</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>ESXi Checkpoint Restore</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>ESXi Checkpoint Restore</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>ESXi Checkpoint Restore</p>
    <p>t VMVM</p>
    <p>Starts the VM quickly, but the VM experiences too much performance degradation.</p>
  </div>
  <div class="page">
    <p>Faults to disk during checkpoint restore are inefficient.</p>
    <p>Checkpointed memory is organized in physical address order.</p>
    <p>Each fault is random 4KB disk read.  No spatial locality, so bigger reads do not</p>
    <p>help.</p>
  </div>
  <div class="page">
    <p>Working Set Restore [Zhang, et al., VEE 2011]</p>
    <p>Reduces faults to disk by prefetching pages the VM may access.</p>
    <p>Found some VM workloads are too complicated to predict.</p>
    <p>Many sources of divergence: timing variations, background processes and external/user inputs.</p>
  </div>
  <div class="page">
    <p>Halite predicts access locality.</p>
    <p>Predict pages that are likely to be accessed together and store them together.</p>
    <p>Sufficient to provide spatial locality in the checkpointing file, enabling bigger reads.</p>
    <p>Easier to predict and more resilient to divergence.</p>
  </div>
  <div class="page">
    <p>Locality Blocks</p>
    <p>Block of checkpointed VM memory pages likely to be accessed together.</p>
    <p>Locality Block</p>
  </div>
  <div class="page">
    <p>Halite Checkpoint Restore</p>
    <p>t VMVM</p>
    <p>Locality Block</p>
  </div>
  <div class="page">
    <p>Halite Checkpoint Restore</p>
    <p>t VMVM</p>
    <p>Locality Block</p>
  </div>
  <div class="page">
    <p>Halite Checkpoint Restore</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>Halite Checkpoint Restore</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>Halite Checkpoint Restore</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>Halite Checkpoint Restore</p>
    <p>t VMVM</p>
    <p>Locality blocks enable more efficient disk access during</p>
    <p>checkpoint restore.</p>
  </div>
  <div class="page">
    <p>Access Locality Prediction</p>
    <p>Two techniques: checkpoint save access tracking and virtual address locality.</p>
    <p>Done entirely during checkpoint save.  Directly used to save memory pages into</p>
    <p>locality blocks.</p>
  </div>
  <div class="page">
    <p>ESXi Checkpoint Save</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>ESXi Checkpoint Save</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>ESXi Checkpoint Save</p>
    <p>t VMVM</p>
    <p>C heckpo</p>
    <p>int</p>
  </div>
  <div class="page">
    <p>ESXi Checkpoint Save</p>
    <p>t VMVM</p>
    <p>C heckpo</p>
    <p>int</p>
  </div>
  <div class="page">
    <p>ESXi Checkpoint Save</p>
    <p>t VMVM</p>
    <p>C heckpo</p>
    <p>int</p>
  </div>
  <div class="page">
    <p>ESXi Checkpoint Save</p>
    <p>t VMVM</p>
    <p>C heckpo</p>
    <p>int</p>
  </div>
  <div class="page">
    <p>ESXi Checkpoint Save</p>
    <p>t VMVM</p>
    <p>C heckpo</p>
    <p>int</p>
  </div>
  <div class="page">
    <p>ESXi Checkpoint Save</p>
    <p>t VMVM</p>
    <p>C heckpo</p>
    <p>int</p>
    <p>Pages accessed together during checkpoint save are likely to be accessed together again during</p>
    <p>checkpoint restore.</p>
  </div>
  <div class="page">
    <p>Halite Checkpoint Save</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>Halite Checkpoint Save</p>
    <p>C heckpo</p>
    <p>int</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>Halite Checkpoint Save</p>
    <p>C heckpo</p>
    <p>int</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>Halite Checkpoint Save</p>
    <p>C heckpo</p>
    <p>int</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>Halite Checkpoint Save</p>
    <p>C heckpo</p>
    <p>int</p>
    <p>Locality Block</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>Halite Checkpoint Save</p>
    <p>C heckpo</p>
    <p>int</p>
    <p>Locality Block</p>
    <p>t VMVM</p>
  </div>
  <div class="page">
    <p>Virtual Address Space Locality</p>
    <p>Used for pages the VM does not touch during checkpoint save.</p>
    <p>Pages mapped together in the guest virtual address space are likely to be accessed together.</p>
    <p>Background thread saves pages into locality blocks in virtual address order.</p>
  </div>
  <div class="page">
    <p>Other optimizations</p>
    <p>Compression  Threading  Background thread throttling  Zero page optimization</p>
  </div>
  <div class="page">
    <p>Other optimizations</p>
    <p>Compression  Threading  Background thread throttling  Zero page optimization</p>
    <p>Please refer to the paper.</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Does Halite improve restore performance?  How much do locality blocks improve</p>
    <p>performance?</p>
    <p>Could we use blocks without access locality?</p>
    <p>Does Halite affect checkpoint save performance?</p>
  </div>
  <div class="page">
    <p>Hardware</p>
  </div>
  <div class="page">
    <p>Workloads</p>
    <p>Custom memory access simulatorsim</p>
    <p>Built-in PostgreSQL benchmarkpgbench</p>
    <p>Windows desktop benchmarkworldbench</p>
    <p>apache webserver HTTP get benchmark</p>
  </div>
  <div class="page">
    <p>Workloads</p>
    <p>Custom memory access simulatorsim</p>
    <p>Built-in PostgreSQL benchmarkpgbench</p>
    <p>Windows desktop benchmarkworldbench</p>
    <p>apache webserver HTTP get benchmark</p>
  </div>
  <div class="page">
    <p>VM Configuration</p>
    <p>OS</p>
    <p>sim 4 vCPU 2 GB</p>
    <p>pgbench 4 vCPU 2 GB</p>
    <p>worldbench 2 vCPU 1 GB</p>
    <p>apache webserver 2 vCPU 2 GB</p>
  </div>
  <div class="page">
    <p>Worldbench Test Setup</p>
    <p>Worldbench Test Run 816.2 seconds</p>
  </div>
  <div class="page">
    <p>Worldbench Test Setup</p>
    <p>Worldbench Test Run 816.2 seconds</p>
    <p>C heckpo</p>
    <p>int</p>
  </div>
  <div class="page">
    <p>Worldbench Test Setup</p>
    <p>Worldbench Test Run 816.2 seconds</p>
    <p>heckpo int</p>
  </div>
  <div class="page">
    <p>Worldbench Test Setup</p>
    <p>Worldbench Test Run 816.2 seconds</p>
    <p>Halite Checkpoint Restore 817.8</p>
    <p>heckpo int</p>
  </div>
  <div class="page">
    <p>Worldbench Test Setup</p>
    <p>Worldbench Test Run 816.2 seconds</p>
    <p>Halite Checkpoint Restore 817.8</p>
    <p>heckpo int</p>
    <p>B aseline</p>
  </div>
  <div class="page">
    <p>Halite reduces restore overhead from tens of seconds to seconds.</p>
    <p>ESXi</p>
    <p>Halite</p>
    <p>Restore Slowdown (seconds)</p>
  </div>
  <div class="page">
    <p>Locality blocks provide more than half of Halites performance improvement.</p>
    <p>ESXi</p>
    <p>Locality Blocks w/o Compression</p>
    <p>Halite</p>
    <p>Restore Slowdown (seconds)</p>
  </div>
  <div class="page">
    <p>Locality blocks provide more than half of Halites performance improvement.</p>
    <p>ESXi</p>
    <p>Locality Blocks w/o Compression</p>
    <p>Halite</p>
    <p>Restore Slowdown (seconds)</p>
  </div>
  <div class="page">
    <p>Locality blocks provide more than half of Halites performance improvement.</p>
    <p>ESXi</p>
    <p>Locality Blocks w/o Compression</p>
    <p>Halite</p>
    <p>Restore Slowdown (seconds)</p>
  </div>
  <div class="page">
    <p>Blocks with no locality hurt performance.</p>
    <p>ESXi</p>
    <p>Physical Blocks</p>
    <p>Locality Blocks</p>
    <p>Halite</p>
    <p>Restore Slowdown (seconds)</p>
  </div>
  <div class="page">
    <p>Blocks with no locality hurt performance.</p>
    <p>ESXi</p>
    <p>Physical Blocks</p>
    <p>Locality Blocks</p>
    <p>Halite</p>
    <p>Restore Slowdown (seconds)</p>
  </div>
  <div class="page">
    <p>Blocks with no locality hurt performance.</p>
    <p>ESXi</p>
    <p>Physical Blocks</p>
    <p>Locality Blocks</p>
    <p>Halite</p>
    <p>Restore Slowdown (seconds)</p>
  </div>
  <div class="page">
    <p>Worldbench Checkpoint Test Setup</p>
    <p>Worldbench Test Run 816.2 seconds</p>
  </div>
  <div class="page">
    <p>Worldbench Checkpoint Test Setup</p>
    <p>Worldbench Test Run 816.2 secondsCheckpo int</p>
    <p>ESXi Checkpoint Save 827.2</p>
  </div>
  <div class="page">
    <p>Worldbench Checkpoint Test Setup</p>
    <p>Worldbench Test Run 816.2 secondsCheckpo int</p>
    <p>ESXi Checkpoint Save 827.2 C</p>
    <p>heckpo int</p>
    <p>Halite Checkpoint Save 821.4</p>
  </div>
  <div class="page">
    <p>Worldbench Checkpoint Test Setup</p>
    <p>Worldbench Test Run 816.2 secondsCheckpo int</p>
    <p>ESXi Checkpoint Save 827.2 C</p>
    <p>heckpo int</p>
    <p>Halite Checkpoint Save 821.4</p>
    <p>B aseline</p>
  </div>
  <div class="page">
    <p>ESXi</p>
    <p>Halite</p>
    <p>Save Slowdown (seconds)</p>
    <p>For Worldbench, Halite improves checkpoint save performance.</p>
  </div>
  <div class="page">
    <p>Halite</p>
    <p>Fast checkpoint restore is important for a new class of applications.</p>
    <p>Predicting access locality is better than predicting accesses for complex VM workloads.</p>
    <p>Halite can restore a checkpointed Windows VM in 1.6 seconds.</p>
  </div>
</Presentation>
