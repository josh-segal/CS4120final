<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Rethinking Internet Traffic Management: From Multiple Decompositions to a Practical Protocol</p>
    <p>Jiayue He Princeton University</p>
    <p>Joint work with Martin Suchara, Maayan Bresler, Mung Chiang, Jennifer Rexford</p>
  </div>
  <div class="page">
    <p>Traffic Management Today</p>
    <p>User: Congestion Control</p>
    <p>Operator: Traffic Engineering</p>
    <p>Routers: Routing Protocols</p>
    <p>Evolved organically without conscious design</p>
  </div>
  <div class="page">
    <p>Rethinking Traffic Management  Shortcomings of todays traffic</p>
    <p>management:  Congestion control assumes routing is fixed,</p>
    <p>traffic engineering assumes traffic is inelastic  Link weight tuning problem is NP-hard  Link weights are tuned at the timescale of</p>
    <p>hours, slower than traffic shifts</p>
    <p>What if we redesign traffic management</p>
    <p>from scratch using optimization tools?</p>
  </div>
  <div class="page">
    <p>Top-down Redesign</p>
    <p>Problem Formulation</p>
    <p>Distributed Solutions</p>
    <p>TRUMP algorithm</p>
    <p>Optimization decomposition</p>
    <p>Compare using simulations</p>
    <p>TRUMP Protocol</p>
    <p>Translate into packet version</p>
  </div>
  <div class="page">
    <p>Congestion Control Implicitly Maximizes Aggregate User Utility</p>
    <p>max.i Ui(xi) s.t. i Rlixi  cl var. x</p>
    <p>aggregate utility</p>
    <p>Source rate xi</p>
    <p>User Utility Ui(xi)</p>
    <p>Source-destination pair indexed by i</p>
    <p>source rate</p>
    <p>Utility represents user satisfaction and elasticity of traffic</p>
    <p>routing matrix</p>
    <p>Fair rate allocation amongst greedy users</p>
  </div>
  <div class="page">
    <p>Traffic Engineering Explicitly Minimizes Network Congestion</p>
    <p>min. l f(ul) s.t. ul =i Rlixi/cl var. R</p>
    <p>Link Utilization ul</p>
    <p>Cos t f(ul)</p>
    <p>aggregate congestion costLinks are indexed by l</p>
    <p>ul =1</p>
    <p>Cost function represent penalty for approaching capacity</p>
    <p>Avoids bottlenecks in the network</p>
    <p>link utilization</p>
  </div>
  <div class="page">
    <p>A Balanced Objective</p>
    <p>max. iUi(xi) - wlf(ul)</p>
    <p>Happy users Maximize</p>
    <p>throughput Generate</p>
    <p>bottlenecks</p>
    <p>Happy operators Minimize delay</p>
    <p>Avoids bottlenecks</p>
    <p>Penalty weight</p>
  </div>
  <div class="page">
    <p>Top-down Redesign</p>
    <p>Problem Formulation</p>
    <p>Distributed Solutions</p>
    <p>TRUMP algorithm</p>
    <p>Optimization decomposition</p>
    <p>Compare using simulations</p>
    <p>TRUMP Protocol</p>
    <p>Translate into packet version</p>
    <p>Optimization decomposition requires convexity</p>
  </div>
  <div class="page">
    <p>i source-destination pair, j path number</p>
    <p>How to make it convex?</p>
    <p>max. i Ui(j zj i)  wl f(ul)</p>
    <p>s.t. link load  cl var. path rates z</p>
    <p>z1 1</p>
    <p>z2 1</p>
    <p>z3 1</p>
    <p>Single path routing is non convex  Multipath routing + flexible splitting is convex</p>
    <p>Path rate captures source rates and routing</p>
  </div>
  <div class="page">
    <p>Overview of Distributed Solutions</p>
    <p>Edge node: Update path rates z Rate limit incoming traffic</p>
    <p>Operator: Tune w, U, f Other parameters</p>
    <p>Routers: Set up multiple paths Measure link load Update link prices s</p>
    <p>s s</p>
    <p>s</p>
  </div>
  <div class="page">
    <p>Four Decompositions Differences</p>
    <p>Algorithms Features Paramete</p>
    <p>rs</p>
    <p>Partial-dual Effective capacity</p>
    <p>Primal-dual Effective capacity</p>
    <p>Full-dual Effective capacity, Allow packet loss</p>
    <p>Primal-driven Direct s update 1</p>
    <p>Iterative updates contain parameters: They affect the dynamics of the distributed algorithms</p>
    <p>Differ in how link &amp; source variables are updated</p>
  </div>
  <div class="page">
    <p>Top-down Redesign</p>
    <p>Problem Formulation</p>
    <p>Distributed Solutions</p>
    <p>TRUMP algorithm</p>
    <p>Optimization decomposition</p>
    <p>Compare using simulations</p>
    <p>Final Protocol</p>
    <p>Optimization doesnt answer all the questions</p>
    <p>Translate into packet version</p>
  </div>
  <div class="page">
    <p>Theoretical results and limitations:  All proven to converge to global optimum for</p>
    <p>well-chosen parameters  No guidance for choosing parameters  Only loose bounds for rate of convergence</p>
    <p>Sweep large parameter space in MATLAB  Effect of w on convergence  Compare rate of convergence  Compare sensitivity of parameters</p>
    <p>Evaluating Four Decompositions</p>
  </div>
  <div class="page">
    <p>Convergence Properties (MATLAB)</p>
    <p>Algorithms Convergence Properties</p>
    <p>All Converges slower for small w</p>
    <p>Partial-dual vs. Primal-dual</p>
    <p>Extra parameters do not improve convergence</p>
    <p>Partial-dual vs. Full-dual</p>
    <p>Allow some packet loss may improve convergence</p>
    <p>Partial-dual vs. Primal-driven</p>
    <p>Direct updates converges faster than iterative updates</p>
    <p>Parameter sensitivity correlated to rate of convergence</p>
  </div>
  <div class="page">
    <p>Insights from simulations:  Have as few tunable parameters as possible  Use direct update when possible  Allow some packet loss</p>
    <p>Cherry-pick different parts of previous algorithms to construct TRUMP</p>
    <p>TRUMP trumps previous distributed solutions (MATLAB)  Faster rate of convergence  One easy to tune parameter</p>
    <p>TRUMP: TRaffic-management Using Multipath Protocol</p>
  </div>
  <div class="page">
    <p>TRUMP Algorithm</p>
    <p>Source i: Path rate zj</p>
    <p>i(t+1) = max. Ui(kzk i)  zj</p>
    <p>i *path price</p>
    <p>Link l: loss pl(t+1) = [pl(t)  stepsize(cl  link load)]+</p>
    <p>queuing delay ql(t+1) = wf(ul)</p>
    <p>Price for path j =  l on path j (pl+ql)</p>
  </div>
  <div class="page">
    <p>Top-down Redesign</p>
    <p>Problem Formulation</p>
    <p>Distributed Solutions</p>
    <p>TRUMP algorithm</p>
    <p>Optimization decomposition</p>
    <p>Compare using simulations</p>
    <p>TRUMP Protocol</p>
    <p>So far, assume fluid model, constant feedback delay</p>
    <p>Translate into packet version</p>
  </div>
  <div class="page">
    <p>TRUMP: Packet-Based Version</p>
    <p>Link l: link load = (bytes in period T) / T Update link prices every T</p>
    <p>Source i: Update path rates at maxj {RTTj</p>
    <p>i}</p>
    <p>Arrival and departure of flows are notified implicitly through price changes</p>
  </div>
  <div class="page">
    <p>Set-up:  Realistic topologies and delays of large ISPs  Selected flows and paths  Realistic ON-OFF traffic model</p>
    <p>Questions:  Do MATLAB results still hold?  Does TRUMP react quickly to link dynamics?  Can TRUMP handle ON-OFF flows?</p>
    <p>Packet-level Experiments (NS-2)</p>
  </div>
  <div class="page">
    <p>TRUMP Link Dynamics</p>
    <p>Link failure or recovery</p>
    <p>Time (s)</p>
    <p>T h</p>
    <p>ro u</p>
    <p>g h</p>
    <p>p u</p>
    <p>t (b its/ s</p>
    <p>)</p>
    <p>TRUMP reacts quickly to link dynamics Same observation for ON-OFF flows</p>
  </div>
  <div class="page">
    <p>Summary of TRUMP Properties Property TRUMP</p>
    <p>Tuning Parameters</p>
    <p>One easy to tune parameter Only need to be tuned for small w</p>
    <p>Robustness to link dynamics</p>
    <p>Reacts quickly to link failures and recoveries</p>
    <p>Robustness to flow dynamics</p>
    <p>Independent of variance of file sizes, more efficient for larger files</p>
    <p>General Trumps other algorithms</p>
    <p>Feedback Possible with implicit feedback</p>
  </div>
  <div class="page">
    <p>Contributions:  Design with multiple decompositions  Introduce practical traffic management</p>
    <p>protocol</p>
    <p>Math leaves architectural choices  Feedback: implicit versus explicit  Edge nodes: end hosts versus edge router  Computations: centralized versus</p>
    <p>distributed</p>
    <p>Concluding Remarks</p>
  </div>
  <div class="page">
    <p>The End</p>
    <p>Thank you!</p>
    <p>www.princeton.edu/~jhe/research/conext07.pdf</p>
  </div>
</Presentation>
