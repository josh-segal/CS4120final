<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>MrLazy: Lazy Runtime Label Propagation for MapReduce</p>
    <p>Sherif Akoush, Lucian Carata, Ripduman Sohan, and Andy Hopper</p>
    <p>HotCloud 2014</p>
    <p>June 2014</p>
  </div>
  <div class="page">
    <p>Motivation</p>
  </div>
  <div class="page">
    <p>ITV News</p>
  </div>
  <div class="page">
    <p>Information Flow Control (IFC)</p>
    <p>IFC*  Propagate Record + Sensitivity Metadata</p>
    <p>Control Information Flow by Checking Metadata against Policies</p>
    <p>But  Many In-House Computations</p>
    <p>No Need for Active Checking</p>
    <p>Only When Publishing Some Results</p>
    <p>Lazy IFC  Track and Use Lineage</p>
    <p>Evaluate Output Labels When Needed</p>
    <p>*J. Bacon, D. Eyers, T. Pasquier, J. Singh, I. Papagiannis, and P. Pietzuch, Information Flow Control for Secure Cloud Computing, Network and Service Management, IEEE Transactions on, 2014.</p>
  </div>
  <div class="page">
    <p>Labels (Metadata)</p>
    <p>More than one Label per Record  Different Country Regulations, Data Quality</p>
    <p>Field-Level</p>
    <p>Dynamic Properties  Users Opting In/Out</p>
    <p>Sensitivity of Data Expires in 2 Years</p>
    <p>New Policies</p>
  </div>
  <div class="page">
    <p>MapReduce Paradigm S</p>
    <p>p li</p>
    <p>t 1</p>
    <p>S p</p>
    <p>li t</p>
    <p>p li</p>
    <p>t N</p>
    <p>(KIN,VIN)</p>
    <p>Map</p>
    <p>(KMED,VMED)</p>
    <p>Reduce</p>
    <p>Map</p>
    <p>Map</p>
    <p>Reduce</p>
    <p>F il</p>
    <p>e 1</p>
    <p>F il</p>
    <p>e 2</p>
    <p>Shuffle</p>
    <p>(KMED,List (VMED)) (KOUT,VOUT)</p>
    <p>DFS DFS</p>
    <p>M B</p>
    <p>M B</p>
    <p>M B</p>
  </div>
  <div class="page">
    <p>IFC and MapReduce S</p>
    <p>p li</p>
    <p>t 1</p>
    <p>S p</p>
    <p>li t</p>
    <p>p li</p>
    <p>t N</p>
    <p>(KIN,VIN)</p>
    <p>Map</p>
    <p>(KMED,VMED)</p>
    <p>Reduce</p>
    <p>Map</p>
    <p>Map</p>
    <p>Reduce</p>
    <p>F il</p>
    <p>e 1</p>
    <p>F il</p>
    <p>e 2</p>
    <p>Shuffle</p>
    <p>(KMED,List (VMED)) (KOUT,VOUT)</p>
    <p>DFS DFS</p>
    <p>a 2</p>
    <p>b 3</p>
    <p>b</p>
    <p>b</p>
    <p>b</p>
    <p>a</p>
    <p>a</p>
    <p>l1</p>
    <p>l2</p>
    <p>l3</p>
    <p>l4</p>
    <p>l5</p>
    <p>l6</p>
    <p>l7</p>
  </div>
  <div class="page">
    <p>Record-Level Lineage for MapReduce S</p>
    <p>p li</p>
    <p>t 1</p>
    <p>S p</p>
    <p>li t</p>
    <p>p li</p>
    <p>t N</p>
    <p>(KIN,VIN)</p>
    <p>Map</p>
    <p>(KMED,VMED)</p>
    <p>Reduce</p>
    <p>Map</p>
    <p>Map</p>
    <p>Reduce</p>
    <p>F il</p>
    <p>e 1</p>
    <p>F il</p>
    <p>e 2</p>
    <p>Shuffle</p>
    <p>(KMED,List (VMED)) (KOUT,VOUT)</p>
    <p>DFS DFS</p>
    <p>a 2</p>
    <p>b 3</p>
    <p>b</p>
    <p>b</p>
    <p>b</p>
    <p>a</p>
    <p>a</p>
  </div>
  <div class="page">
    <p>Lazy IFC for MapReduce S</p>
    <p>p li</p>
    <p>t 1</p>
    <p>S p</p>
    <p>li t</p>
    <p>p li</p>
    <p>t N</p>
    <p>(KIN,VIN)</p>
    <p>Map</p>
    <p>(KMED,VMED)</p>
    <p>Reduce</p>
    <p>Map</p>
    <p>Map</p>
    <p>Reduce</p>
    <p>F il</p>
    <p>e 1</p>
    <p>F il</p>
    <p>e 2</p>
    <p>Shuffle</p>
    <p>(KMED,List (VMED)) (KOUT,VOUT)</p>
    <p>DFS DFS</p>
    <p>a 2</p>
    <p>b 3</p>
    <p>b</p>
    <p>b</p>
    <p>b</p>
    <p>a</p>
    <p>a</p>
    <p>l1</p>
    <p>l2</p>
    <p>l3</p>
    <p>l4</p>
    <p>l5</p>
    <p>(x)</p>
    <p>(x)</p>
    <p>q1</p>
    <p>q2</p>
    <p>q3</p>
    <p>q4</p>
    <p>q5</p>
    <p>qn</p>
    <p>qn</p>
    <p>qn</p>
    <p>qn</p>
    <p>qn</p>
  </div>
  <div class="page">
    <p>Lineage Capture in Hadoop MapReduce</p>
    <p>Record-Level Lineage</p>
    <p>No Changes to User Code</p>
    <p>Always-On Feature  Treat Lineage for Map and Reduce Tasks Separately</p>
    <p>Lineage Reconstruction</p>
  </div>
  <div class="page">
    <p>Field-Level Enforcement</p>
    <p>One Record Can Have Fields With Different Sensitivity  Player Name vs. Passport Number</p>
    <p>Field-Level (Conservative) Visibility By Static Analysis</p>
    <p>map(Text key, Text value) {</p>
    <p>String str[] = value.toString().split(,) Text name = new Text (str[0]) write(name, 1)</p>
    <p>}</p>
  </div>
  <div class="page">
    <p>Prototype Evaluation</p>
    <p>Implementation in Hadoop MapReduce</p>
    <p>7-node Cluster</p>
    <p>Dataset from BigDataBench: 120 GB</p>
    <p>Join and Filter Job</p>
  </div>
  <div class="page">
    <p>Overheads (Lineage Capture)</p>
    <p>Storage  50% of Output</p>
    <p>Delete When Not Needed</p>
    <p>Trading Space for Time</p>
    <p>Base With Lineage</p>
    <p>Runtime</p>
    <p>Lineage Reconstruction</p>
  </div>
  <div class="page">
    <p>Policy 1: Users Opt-out of Data Sharing</p>
    <p>5% of Users</p>
    <p>MrLazy</p>
  </div>
  <div class="page">
    <p>Policy 2: Sensitivity of Data Lasts 2 Years</p>
    <p>Dynamic Behaviour</p>
    <p>MrLazy</p>
  </div>
  <div class="page">
    <p>Other Challenges</p>
    <p>Dealing with State  In-lining Instructions to Expose State</p>
    <p>TopK</p>
    <p>Subtle Data Leakage  Differential Privacy</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Delay Output Label (Metadata) Computation</p>
    <p>Fine-Grained Lineage as Audit Mechanism</p>
    <p>Non-Prohibitive Overheads</p>
    <p>Future Work:  Reducing Overheads</p>
    <p>Large-Scale Evaluation</p>
    <p>Recomputation-Based Recovery from Failures</p>
  </div>
  <div class="page">
    <p>Thanks Sherif.Akoush@cl.cam.ac.uk</p>
    <p>http://www.cl.cam.ac.uk/~sa497/</p>
  </div>
</Presentation>
