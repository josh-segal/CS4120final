<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Aggressive Cloning of Jobs for Effective Straggler Mitigation</p>
    <p>Ganesh Ananthanarayanan, Ali Ghodsi, Scott Shenker, Ion Stoica</p>
  </div>
  <div class="page">
    <p>Small jobs increasingly important</p>
    <p>Most jobs are small  82% of jobs contain less than 10 tasks (Facebooks</p>
    <p>Hadoop cluster)</p>
    <p>Most small jobs are interactive and latencyconstrained  Data analyst testing query on small sample</p>
    <p>Small jobs particularly sensitive to stragglers</p>
  </div>
  <div class="page">
    <p>Straggler Mitigation</p>
    <p>Blacklisting:  Clusters periodically diagnose and eliminate</p>
    <p>machines with faulty hardware</p>
    <p>Speculation: Non-deterministic stragglers  Complete systemic modeling is intrinsically complex</p>
    <p>[e.g., Dean12 at Google]  LATE [OSDI08], Mantri [OSDI10]</p>
  </div>
  <div class="page">
    <p>Despite the mitigation techniques</p>
    <p>LATE: The slowest task runs 8 times slower than the median task</p>
    <p>Mantri: The slowest task runs 6 times slower than the median task</p>
    <p>(but they work well for large jobs)</p>
  </div>
  <div class="page">
    <p>State-of-the-Art Straggler Mitigation</p>
    <p>Speculative Execution: (in LATE, Mantri, MapReduce)</p>
  </div>
  <div class="page">
    <p>Why doesnt this work for small jobs?</p>
    <p>small jobs duration</p>
    <p>Wait &amp; Speculate is ill-suited to address stragglers in small jobs</p>
  </div>
  <div class="page">
    <p>Cloning Jobs</p>
    <p>Proactively launch clones of a job, just as they are submitted</p>
    <p>Pick the result from the earliest clone  Probabilistically mitigates stragglers</p>
    <p>Eschews waiting, speculation, causal analysis</p>
    <p>Is this really feasible??</p>
  </div>
  <div class="page">
    <p>Low Cluster Utilization</p>
    <p>Clusters have median utilization of under 20%  Provisioned for (short burst of) peak utilization</p>
    <p>Cluster energy-efficiency proposals  Not adopted in todays clusters!   Peak utilization decides half the energy bill  Hardware and software reliability issues</p>
  </div>
  <div class="page">
    <p>Power-law exponent = 1.9</p>
    <p>Tragedy of commons?</p>
    <p>Power-law:  90% of jobs use</p>
    <p>Can clone small jobs with few extra resources</p>
    <p>If every job utilizes the lowly utilized cluster  Instability and negative performance effects</p>
  </div>
  <div class="page">
    <p>Job</p>
    <p>Strawman</p>
    <p>Earliest</p>
    <p>Easy to implement  Directly extends to any framework</p>
    <p>M1M1</p>
    <p>M2M2</p>
    <p>M2M2</p>
    <p>R1R1</p>
    <p>R1R1 M1M1</p>
  </div>
  <div class="page">
    <p>Number of map clones</p>
    <p>Contention for input data by map task clones</p>
    <p>Storage crunch  Cannot increase replication</p>
    <p>&gt;&gt; 3 clones</p>
  </div>
  <div class="page">
    <p>Task-level Cloning</p>
    <p>Job</p>
    <p>Earliest</p>
    <p>M1M1</p>
    <p>M1M1</p>
    <p>M2M2</p>
    <p>R1R1</p>
    <p>R1R1 M2M2</p>
    <p>Earliest Earliest</p>
  </div>
  <div class="page">
    <p>3 clones suffices Strawman Task-level Cloning</p>
  </div>
  <div class="page">
    <p>Dolly: Cloning Jobs</p>
    <p>Task-level cloning of jobs  Works within a budget  Cap on the extra cluster resources for cloning</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Workload derived from Facebook traces  FB: 3500 node Hadoop cluster, 375K jobs, 1 month</p>
    <p>Trace-driven simulator</p>
    <p>Baselines: LATE and Mantri, + blacklisting  Cloning budget of 5%</p>
  </div>
  <div class="page">
    <p>Baseline: LATE Small jobs benefit significantly!</p>
    <p>Average completion time improves by 44%</p>
  </div>
  <div class="page">
    <p>Baseline: Mantri Small jobs benefit significantly!</p>
    <p>Average completion time improves by 42%</p>
  </div>
  <div class="page">
    <p>Intermediate Data Contention</p>
    <p>We would like every reduce clone to get its own copy of intermediate data (map output)</p>
    <p>Not replicated, to avoid overheads</p>
    <p>What if a map clone straggles?</p>
  </div>
  <div class="page">
    <p>Intermediate Data Contention</p>
    <p>M1M1</p>
    <p>M1M1</p>
    <p>M2M2</p>
    <p>M2M2</p>
    <p>R1R1</p>
    <p>R1R1</p>
    <p>M1M1</p>
    <p>M2M2</p>
    <p>Wait for exclusive copy or contend for the available copy?</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Stragglers in small jobs are not well-handled by traditional mitigation strategies  Guessing task to speculate very hard, waiting wastes</p>
    <p>significant computation time</p>
    <p>Dolly: Proactive Cloning of jobs  Power-law  Small cloning budget (5%) suffices  Jobs improve by at least 42% w.r.t. state-of-the-art</p>
    <p>straggler mitigation strategies</p>
    <p>Low utilization + Power-law + Cloning?</p>
  </div>
</Presentation>
