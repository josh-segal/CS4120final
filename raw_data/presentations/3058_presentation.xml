<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>The Emergence of Sparse Spanner</p>
    <p>and Greedy Well-Separated Pair</p>
    <p>DecompositionDecomposition</p>
    <p>Jie Gao, Dengpan Zhou</p>
    <p>Stony Brook University</p>
    <p>SWAT 2010</p>
  </div>
  <div class="page">
    <p>t-Spanner</p>
    <p>Definition</p>
    <p>A geometric graph G of a set of points P, the</p>
    <p>shortest path between any two points p,q in G</p>
    <p>has length at most t |pq|.has length at most t |pq|.</p>
    <p>p</p>
    <p>q</p>
  </div>
  <div class="page">
    <p>Good Spanners in Reality</p>
  </div>
  <div class="page">
    <p>Good Spanners in Reality</p>
  </div>
  <div class="page">
    <p>Good Spanners in Reality</p>
    <p>There are many good spanners in reality</p>
    <p>Road network</p>
    <p>Flight network</p>
    <p>Internet backbone. Internet backbone.</p>
    <p>They are</p>
    <p>Not build at the same time.</p>
    <p>Not owned by the same authority.</p>
    <p>Q: how does a good spanner emerge?</p>
  </div>
  <div class="page">
    <p>How does a sparse spanner emerge?</p>
    <p>A set of distributed agents in R2 want to build</p>
    <p>a sparse spanner graph.</p>
    <p>No global coordination.</p>
    <p>Edges are not necessarily built all at the same  Edges are not necessarily built all at the same</p>
    <p>time.</p>
    <p>A simple rule to tell whether an edge should</p>
    <p>be built or not?</p>
  </div>
  <div class="page">
    <p>Good Spanners in Reality</p>
    <p>If there is already an edge connecting LA</p>
    <p>and Washington DC, it is not economical</p>
    <p>to build an edge from SF to NY.</p>
  </div>
  <div class="page">
    <p>Emergence of Sparse Spanner</p>
    <p>A de-centralized algorithm:</p>
    <p>Each node p performs the following operation</p>
    <p>when considering build an edge to q:</p>
    <p>Check where there is already an edge pq such that p  Check where there is already an edge pq such that p</p>
    <p>and q are within distance |pq|/(2(s+1)) from p, q</p>
    <p>respectively.</p>
    <p>If so, p does not build the edge to q</p>
    <p>Otherwise, p will build the edge to q</p>
    <p>Continue until all pairs are checked.</p>
    <p>The orders of the edges checked do not matter.</p>
  </div>
  <div class="page">
    <p>An Example</p>
  </div>
  <div class="page">
    <p>An Example</p>
    <p>pp</p>
    <p>q</p>
  </div>
  <div class="page">
    <p>An Example</p>
    <p>pp</p>
    <p>q</p>
  </div>
  <div class="page">
    <p>An Example</p>
    <p>p</p>
    <p>P</p>
    <p>q</p>
    <p>p</p>
    <p>q</p>
  </div>
  <div class="page">
    <p>An Example</p>
    <p>p</p>
    <p>P</p>
    <p>q</p>
    <p>p</p>
    <p>q</p>
  </div>
  <div class="page">
    <p>An Example</p>
    <p>p</p>
    <p>P</p>
    <p>P</p>
    <p>q</p>
    <p>p</p>
    <p>q q</p>
  </div>
  <div class="page">
    <p>An Example</p>
    <p>p</p>
    <p>P</p>
    <p>P</p>
    <p>q</p>
    <p>p</p>
    <p>q q</p>
  </div>
  <div class="page">
    <p>Spanner Properties</p>
    <p>The graph constructed is a spanner</p>
    <p>Stretch factor (s+1)/(s-1)  1+</p>
    <p>Number of edges: O(nsd)  O(n/d)</p>
    <p>Maximal degree: O(lg sd),  is aspect ratio. Maximal degree: O(lg sd),  is aspect ratio.</p>
    <p>Average degree: O(sd)</p>
    <p>Total weight: O(lg |MST| sd+1)</p>
    <p># hops for p,q : 2|pq|1/(1+lg s)</p>
  </div>
  <div class="page">
    <p>Next: Proof Sketch</p>
    <p>Connection to a greedy algorithm for well</p>
    <p>separated pair decomposition (WSPD).</p>
    <p>Connection to the deformable spanner  Connection to the deformable spanner</p>
    <p>(GGN04 SoCG).</p>
  </div>
  <div class="page">
    <p>Well-separated pair decomposition</p>
    <p>Point sets A, B are s-well-separated if</p>
    <p>Diameter .</p>
    <p>Distance .</p>
    <p>))(),(max(),( BdiamAdiamsBAd</p>
    <p>),(max)( ,</p>
    <p>qpdAdiam Aqp</p>
    <p>=</p>
    <p>),(min),( ,</p>
    <p>qpdBAd BqAp</p>
    <p>= Distance .</p>
    <p>For a set S of points, a set of pairs , is s-well-separated pair decomposition(WSPD) of S if</p>
    <p>is s-well-separated.</p>
    <p>For any two points , there exists i such that .</p>
    <p>)},{( ii</p>
    <p>BAP =</p>
    <p>),( ii</p>
    <p>BA</p>
    <p>Sqp</p>
    <p>ii BqAp  ,</p>
    <p>, BqAp</p>
  </div>
  <div class="page">
    <p>Greedy Algorithm for WSPD</p>
    <p>Choose an arbitrary uncovered pair (p, q).</p>
    <p>Include the dumb-bell pair of point set Br(p) and</p>
    <p>Br(q), with r = |pq|/(2+2s)</p>
    <p>Repeat the above steps until every pair of points is</p>
    <p>covered.</p>
    <p>Note: # pairs = # spanner edges = O(n/d).</p>
    <p>Br(p) Br(q)</p>
    <p>p q</p>
  </div>
  <div class="page">
    <p>Next: Proof Sketch</p>
    <p>Connection to a greedy algorithm for well</p>
    <p>separated pair decomposition (WSPD).</p>
    <p>Connection to the deformable spanner  Connection to the deformable spanner</p>
    <p>(GGN04 SoCG)  proof of the linear spanner</p>
    <p>size.</p>
  </div>
  <div class="page">
    <p>Deformable spanner construction</p>
    <p>r-centers</p>
    <p>Coverage: Every node is within distance r of at least one center</p>
    <p>Separation: No two centers within distance r of each othereach other</p>
    <p>(1+ )-Spanner</p>
    <p>Build a hierarchical of centers</p>
    <p>Centers at level i have radius 2i.</p>
    <p>At each level, add edges with length  c 2i.</p>
    <p>c = 4+16/</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Parent-child relationship</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>Deformable Spanner</p>
    <p>A (1+)-spanner with O(n/d) edges</p>
    <p>Maximal degree O(lg),  is aspect ratio.</p>
    <p>Total weight O(lg |MST| /d)</p>
  </div>
  <div class="page">
    <p>Deformable spanner  WSPD</p>
    <p>In the deformable spanner, a pair of points</p>
    <p>(p,q) has level i ancestors (pi ,qi) connected</p>
    <p>with an edge, but level i-1 ancestors without</p>
    <p>an edge. an edge.</p>
  </div>
  <div class="page">
    <p>Deformable spanner  WSPD</p>
    <p>For each edge (pi ,qi), take the cousin pair:</p>
    <p>the pair of sets of descendants (D(pi-1),D(qi-1)).</p>
    <p>All such pairs form a WSPD.</p>
    <p>D(pi-1) D(qi-1)</p>
  </div>
  <div class="page">
    <p>Main Proof</p>
    <p>Our spanner: G, deformable spanner G.</p>
    <p>Both imply WSPD, W, and W.</p>
    <p>Main idea: A pair (Br(p), Br(q)) maps to the</p>
    <p>ancestor pair (D(pi-1),D(qi-1)).ancestor pair (D(pi-1),D(qi-1)).</p>
    <p>Argue only O(1) pairs of W map to one pair in</p>
    <p>W.</p>
    <p>D(pi-1) D(qi-1)</p>
  </div>
  <div class="page">
    <p>Main Proof</p>
    <p>Tool: packing argument.</p>
    <p>Consider two pairs (p1, q1) and (p2, q2) that</p>
    <p>map to the same pair in W.</p>
    <p>Case 1: p1 and p2 are close; then q1 and q2  Case 1: p1 and p2 are close; then q1 and q2</p>
    <p>must be far away.  there are only O(1)</p>
    <p>such qs.</p>
    <p>D(pi-1) D(qi-1)</p>
    <p>Br(p) Br(q)</p>
    <p>p1 q1</p>
    <p>q2 p2</p>
  </div>
  <div class="page">
    <p>Main Proof</p>
    <p>Tool: packing argument.</p>
    <p>Consider two pairs (p1, q1) and (p2, q2) that</p>
    <p>map to the same pair in W.</p>
    <p>Case 2: p1 and p2 are far away there are  Case 2: p1 and p2 are far away there are</p>
    <p>only O(1) such ps.</p>
    <p>D(pi-1) D(qi-1)</p>
    <p>Br(p) Br(q)</p>
    <p>p1 q1</p>
    <p>q2 p2</p>
  </div>
  <div class="page">
    <p>Application in P2P networks</p>
    <p>Proof only uses packing argument.</p>
    <p>Extension to metrics with constant doubling</p>
    <p>dimension</p>
    <p>De-centralized construction and maintenance  De-centralized construction and maintenance</p>
    <p>of a spanner graph by distributed users.</p>
    <p>Small message cost</p>
    <p>Allow dynamic user insertion and deletion</p>
    <p>Allow nearest neighbor query</p>
  </div>
  <div class="page">
    <p>Future work</p>
    <p>Constant degree?</p>
    <p>Quality-varying spanner: In P2P network,</p>
    <p>punish free-riders and award diligent users.</p>
    <p>A user get better stretch by constructing more  A user get better stretch by constructing more</p>
    <p>edges.</p>
  </div>
  <div class="page">
    <p>Thanks!Thanks!</p>
  </div>
</Presentation>
