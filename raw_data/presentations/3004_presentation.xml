<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Just Say NO to Paxos Overhead: Replacing Consensus with</p>
    <p>Network Ordering Jialin Li, Ellis Michael, Naveen Kr. Sharma, Adriana Szekeres,</p>
    <p>Dan R. K. Ports</p>
  </div>
  <div class="page">
    <p>Server failures are the common case in data centers</p>
  </div>
  <div class="page">
    <p>Server failures are the common case in data centers</p>
  </div>
  <div class="page">
    <p>Server failures are the common case in data centers</p>
  </div>
  <div class="page">
    <p>Server failures are the common case in data centers</p>
  </div>
  <div class="page">
    <p>State Machine Replication</p>
    <p>Operation A</p>
    <p>Operation B</p>
    <p>Operation C</p>
    <p>Operation A</p>
    <p>Operation B</p>
    <p>Operation C</p>
    <p>Operation A</p>
    <p>Operation B</p>
    <p>Operation C</p>
  </div>
  <div class="page">
    <p>State Machine Replication</p>
    <p>Operation A</p>
    <p>Operation B</p>
    <p>Operation C</p>
    <p>Operation A</p>
    <p>Operation B</p>
    <p>Operation C</p>
    <p>Operation A</p>
    <p>Operation B</p>
    <p>Operation C</p>
  </div>
  <div class="page">
    <p>State Machine Replication</p>
    <p>Operation A</p>
    <p>Operation B</p>
    <p>Operation C</p>
    <p>Operation A</p>
    <p>Operation B</p>
    <p>Operation C</p>
    <p>Operation A</p>
    <p>Operation B</p>
    <p>Operation C</p>
  </div>
  <div class="page">
    <p>Paxos for state machine replication</p>
    <p>Client</p>
    <p>Leader Replica</p>
    <p>Replica</p>
    <p>Replica</p>
    <p>prepare prepareokrequest reply</p>
  </div>
  <div class="page">
    <p>Paxos for state machine replication</p>
    <p>Client</p>
    <p>Leader Replica</p>
    <p>Replica</p>
    <p>Replica</p>
    <p>prepare prepareokrequest reply</p>
    <p>Throughput Bottleneck</p>
  </div>
  <div class="page">
    <p>Paxos for state machine replication</p>
    <p>Client</p>
    <p>Leader Replica</p>
    <p>Replica</p>
    <p>Replica</p>
    <p>prepare prepareokrequest reply</p>
    <p>Throughput Bottleneck</p>
    <p>Latency Penalty</p>
  </div>
  <div class="page">
    <p>Can we eliminate Paxos overhead? Performance overhead due to worst-case network assumptions</p>
    <p>valid assumptions for the Internet</p>
    <p>data center networks are different</p>
    <p>What properties should the network have to enable faster replication?</p>
  </div>
  <div class="page">
    <p>Network properties determine replication complexity</p>
    <p>Asynchronous Network</p>
    <p>Paxos protocol on every operation  High performance cost</p>
    <p>Messages may be:  dropped  reordered  delivered with</p>
    <p>arbitrary latency</p>
    <p>Paxos</p>
  </div>
  <div class="page">
    <p>Network properties determine replication complexity</p>
    <p>Asynchronous Network</p>
    <p>Paxos protocol on every operation  High performance cost</p>
    <p>All replicas:  receive the same set</p>
    <p>of messages  receive them in the</p>
    <p>same order</p>
    <p>Paxos</p>
    <p>Reliability</p>
    <p>Ordering</p>
  </div>
  <div class="page">
    <p>Network properties determine replication complexity</p>
    <p>Asynchronous Network</p>
    <p>Paxos protocol on every operation  High performance cost</p>
    <p>Replication is trivial</p>
    <p>All replicas:  receive the same set</p>
    <p>of messages  receive them in the</p>
    <p>same order</p>
    <p>Paxos</p>
    <p>Reliability</p>
    <p>Ordering</p>
  </div>
  <div class="page">
    <p>Network properties determine replication complexity</p>
    <p>Asynchronous Network</p>
    <p>Paxos protocol on every operation  High performance cost</p>
    <p>Replication is trivial  Network implementation</p>
    <p>has the same complexity as Paxos</p>
    <p>All replicas:  receive the same set</p>
    <p>of messages  receive them in the</p>
    <p>same order</p>
    <p>Paxos</p>
    <p>Reliability</p>
    <p>Ordering</p>
  </div>
  <div class="page">
    <p>Network Guarantee Weak Strong</p>
    <p>Asynchronous Network</p>
    <p>Paxos</p>
    <p>Ordering</p>
    <p>Reliability</p>
  </div>
  <div class="page">
    <p>Network Guarantee Weak Strong</p>
    <p>Asynchronous Network</p>
    <p>Paxos</p>
    <p>Ordering</p>
    <p>Reliability</p>
  </div>
  <div class="page">
    <p>Network Guarantee Weak Strong</p>
    <p>Can we build a network model that:</p>
    <p>provides performance benefits  can be implemented more efficiently</p>
    <p>Asynchronous Network</p>
    <p>Paxos</p>
    <p>Ordering</p>
    <p>Reliability</p>
  </div>
  <div class="page">
    <p>This Talk</p>
  </div>
  <div class="page">
    <p>This Talk A new network model with near-zero-cost implementation: Ordered Unreliable Multicast</p>
  </div>
  <div class="page">
    <p>This Talk A new network model with near-zero-cost implementation: Ordered Unreliable Multicast</p>
    <p>+</p>
  </div>
  <div class="page">
    <p>This Talk A new network model with near-zero-cost implementation: Ordered Unreliable Multicast</p>
    <p>+ A coordination-free replication protocol: Network-Ordered Paxos</p>
  </div>
  <div class="page">
    <p>This Talk A new network model with near-zero-cost implementation: Ordered Unreliable Multicast</p>
    <p>+ A coordination-free replication protocol: Network-Ordered Paxos</p>
    <p>=</p>
  </div>
  <div class="page">
    <p>This Talk A new network model with near-zero-cost implementation: Ordered Unreliable Multicast</p>
    <p>+ A coordination-free replication protocol: Network-Ordered Paxos</p>
    <p>= replication within 2% throughput overhead</p>
  </div>
  <div class="page">
    <p>Outline</p>
  </div>
  <div class="page">
    <p>Towards an ordered but unreliable network</p>
    <p>Key Idea: Separate ordering from reliable delivery in state machine replication</p>
    <p>Network provides ordering</p>
    <p>Replication protocol handles reliability</p>
  </div>
  <div class="page">
    <p>OUM Approach  Designate one sequencer in the network</p>
    <p>Sequencer maintains a counter for each OUM group</p>
  </div>
  <div class="page">
    <p>Ordered Unreliable Multicast</p>
    <p>Senders Receivers</p>
    <p>Counter: 0</p>
  </div>
  <div class="page">
    <p>Ordered Unreliable Multicast</p>
    <p>Senders Receivers</p>
    <p>Counter: 012</p>
  </div>
  <div class="page">
    <p>Ordered Unreliable Multicast</p>
    <p>Senders Receivers</p>
    <p>Counter: 01234</p>
  </div>
  <div class="page">
    <p>Ordered Unreliable Multicast</p>
    <p>Senders Receivers</p>
    <p>DROP Counter:</p>
  </div>
  <div class="page">
    <p>Ordered Unreliable Multicast</p>
    <p>Senders Receivers</p>
    <p>DROP Counter:</p>
  </div>
  <div class="page">
    <p>Ordered Unreliable Multicast</p>
    <p>Senders Receivers</p>
    <p>DROP Counter:</p>
    <p>Drop Detection: coordination only required when messages are dropped</p>
  </div>
  <div class="page">
    <p>Sequencer Implementations In-switch sequencing  next generation</p>
    <p>programmable switches</p>
    <p>implemented in P4</p>
    <p>nearly zero cost</p>
    <p>Middlebox prototype  Cavium Octeon</p>
    <p>network processor  connects to root</p>
    <p>switches  adds 8 us latency</p>
    <p>End-host sequencing  no specialized</p>
    <p>hardware required  incurs higher</p>
    <p>latency penalties  similar throughput</p>
    <p>benefits</p>
  </div>
  <div class="page">
    <p>Sequencer Implementations In-switch sequencing  next generation</p>
    <p>programmable switches</p>
    <p>implemented in P4</p>
    <p>nearly zero cost</p>
    <p>Middlebox prototype  Cavium Octeon</p>
    <p>network processor  connects to root</p>
    <p>switches  adds 8 us latency</p>
    <p>End-host sequencing  no specialized</p>
    <p>hardware required  incurs higher</p>
    <p>latency penalties  similar throughput</p>
    <p>benefits</p>
  </div>
  <div class="page">
    <p>Sequencer Implementations In-switch sequencing  next generation</p>
    <p>programmable switches</p>
    <p>implemented in P4</p>
    <p>nearly zero cost</p>
    <p>Middlebox prototype  Cavium Octeon</p>
    <p>network processor  connects to root</p>
    <p>switches  adds 8 us latency</p>
    <p>End-host sequencing  no specialized</p>
    <p>hardware required  incurs higher</p>
    <p>latency penalties  similar throughput</p>
    <p>benefits</p>
  </div>
  <div class="page">
    <p>Outline</p>
  </div>
  <div class="page">
    <p>NOPaxos Overview  Built on top of the guarantees of OUM</p>
    <p>Client requests are totally ordered but can be dropped</p>
    <p>No coordination in the common case</p>
    <p>Replicas run agreement on drop detection</p>
    <p>View change protocol for leader or sequencer failure</p>
  </div>
  <div class="page">
    <p>Normal Operation</p>
    <p>Client</p>
    <p>Replica (leader)</p>
    <p>Replica</p>
    <p>Replica</p>
  </div>
  <div class="page">
    <p>Normal Operation</p>
    <p>Client</p>
    <p>Replica (leader)</p>
    <p>Replica</p>
    <p>Replica</p>
    <p>OUM</p>
    <p>request</p>
  </div>
  <div class="page">
    <p>Normal Operation</p>
    <p>Client</p>
    <p>Replica (leader)</p>
    <p>Replica</p>
    <p>Replica</p>
    <p>OUM</p>
    <p>request reply</p>
    <p>Execute</p>
  </div>
  <div class="page">
    <p>Normal Operation</p>
    <p>Client</p>
    <p>Replica (leader)</p>
    <p>Replica</p>
    <p>Replica</p>
    <p>OUM</p>
    <p>request reply</p>
    <p>Execute</p>
    <p>waits for replies from</p>
    <p>majority including leaders</p>
  </div>
  <div class="page">
    <p>Normal Operation</p>
    <p>Client</p>
    <p>Replica (leader)</p>
    <p>Replica</p>
    <p>Replica</p>
    <p>OUM</p>
    <p>request reply</p>
    <p>Execute</p>
    <p>waits for replies from</p>
    <p>majority including leaders</p>
    <p>no coordination</p>
  </div>
  <div class="page">
    <p>Normal Operation</p>
    <p>Client</p>
    <p>Replica (leader)</p>
    <p>Replica</p>
    <p>Replica</p>
    <p>OUM</p>
    <p>request reply</p>
    <p>Execute</p>
    <p>waits for replies from</p>
    <p>majority including leaders</p>
    <p>no coordination</p>
  </div>
  <div class="page">
    <p>Gap Agreement</p>
    <p>Replicas detect message drops</p>
    <p>Non-leader replicas: recover the missing message from the leader</p>
    <p>Leader replica: coordinates to commit a NO-OP (Paxos)</p>
    <p>Efficient recovery from network anomalies</p>
  </div>
  <div class="page">
    <p>View Change</p>
    <p>Handles leader or sequencer failure</p>
    <p>Ensures that all replicas are in a consistent state</p>
    <p>Runs a view change protocol similar to VR</p>
    <p>view-number is a tuple of &lt;leader-number, session-number&gt;</p>
  </div>
  <div class="page">
    <p>Outline</p>
  </div>
  <div class="page">
    <p>Evaluation Setup</p>
    <p>3-level fat-tree network testbed</p>
    <p>5 replicas with 2.5 GHz Intel Xeon E5-2680</p>
    <p>Middle box sequencer Sequencer</p>
  </div>
  <div class="page">
    <p>NOPaxos achieves better throughput and latency</p>
    <p>Latency (us)</p>
    <p>Throughput (ops/sec) better</p>
    <p>better</p>
  </div>
  <div class="page">
    <p>NOPaxos achieves better throughput and latency</p>
    <p>Latency (us)</p>
    <p>Throughput (ops/sec) better</p>
    <p>better</p>
  </div>
  <div class="page">
    <p>NOPaxos achieves better throughput and latency</p>
    <p>Latency (us)</p>
    <p>Throughput (ops/sec)</p>
    <p>NOPaxosFast Paxos</p>
    <p>Paxos</p>
    <p>better</p>
    <p>better</p>
  </div>
  <div class="page">
    <p>NOPaxos achieves better throughput and latency</p>
    <p>Latency (us)</p>
    <p>Throughput (ops/sec)</p>
    <p>NOPaxosFast Paxos</p>
    <p>Paxos</p>
    <p>reduction in latency</p>
    <p>better</p>
    <p>better</p>
  </div>
  <div class="page">
    <p>NOPaxos achieves better throughput and latency</p>
    <p>Latency (us)</p>
    <p>Throughput (ops/sec)</p>
    <p>NOPaxosFast Paxos</p>
    <p>Paxos</p>
    <p>Paxos + Batching</p>
    <p>reduction in latency</p>
    <p>better</p>
    <p>better</p>
  </div>
  <div class="page">
    <p>NOPaxos achieves better throughput and latency</p>
    <p>Latency (us)</p>
    <p>Throughput (ops/sec)</p>
    <p>NOPaxosFast Paxos</p>
    <p>Paxos</p>
    <p>Paxos + Batching</p>
    <p>reduction in latency</p>
    <p>better</p>
    <p>better</p>
  </div>
  <div class="page">
    <p>NOPaxos is resilient to network anomalies</p>
    <p>NOPaxos Paxos SpecPaxos</p>
    <p>Throughput (ops/sec)</p>
    <p>Packet Drop Rate</p>
  </div>
  <div class="page">
    <p>NOPaxos is resilient to network anomalies</p>
    <p>NOPaxos Paxos SpecPaxos</p>
    <p>Throughput (ops/sec)</p>
    <p>Packet Drop Rate</p>
    <p>NOPaxos</p>
    <p>Speculative Paxos</p>
    <p>Paxos</p>
  </div>
  <div class="page">
    <p>NOPaxos is resilient to network anomalies</p>
    <p>NOPaxos Paxos SpecPaxos</p>
    <p>Throughput (ops/sec)</p>
    <p>Packet Drop Rate</p>
    <p>drops to 24% of maximum</p>
    <p>throughput</p>
    <p>NOPaxos</p>
    <p>Speculative Paxos</p>
    <p>Paxos</p>
  </div>
  <div class="page">
    <p>NOPaxos attains throughput within 2% of an unreplicated system</p>
  </div>
  <div class="page">
    <p>NOPaxos attains throughput within 2% of an unreplicated system</p>
    <p>Latency (us)</p>
    <p>Throughput (ops/sec) better</p>
    <p>better</p>
  </div>
  <div class="page">
    <p>NOPaxos attains throughput within 2% of an unreplicated system</p>
    <p>NOPaxos</p>
    <p>Unreplicated</p>
    <p>PaxosLatency (us)</p>
    <p>Throughput (ops/sec) better</p>
    <p>better</p>
  </div>
  <div class="page">
    <p>NOPaxos attains throughput within 2% of an unreplicated system</p>
    <p>NOPaxos</p>
    <p>Unreplicated</p>
    <p>Paxos</p>
    <p>within 2% throughput and 16us latency of an unreplicated system</p>
    <p>Latency (us)</p>
    <p>Throughput (ops/sec) better</p>
    <p>better</p>
  </div>
  <div class="page">
    <p>NOPaxos attains throughput within 2% of an unreplicated system</p>
    <p>NOPaxos</p>
    <p>Unreplicated</p>
    <p>NOPaxos using end-host sequencer</p>
    <p>Paxos</p>
    <p>within 2% throughput and 16us latency of an unreplicated system</p>
    <p>Latency (us)</p>
    <p>Throughput (ops/sec) better</p>
    <p>better</p>
  </div>
  <div class="page">
    <p>NOPaxos attains throughput within 2% of an unreplicated system</p>
    <p>NOPaxos</p>
    <p>Unreplicated</p>
    <p>NOPaxos using end-host sequencer</p>
    <p>Paxos</p>
    <p>within 2% throughput and 16us latency of an unreplicated system</p>
    <p>similar throughput but 36% higher latencyLatency (us)</p>
    <p>Throughput (ops/sec) better</p>
    <p>better</p>
  </div>
  <div class="page">
    <p>Related Work Group communication systems  Virtual Synchrony [Birman, et al.], CATOCS [Cheriton, et al.],</p>
    <p>Amoeba [Kaashoek, et al.]</p>
    <p>Consensus protocols  Fast Paxos [Lamport], Optimistic Atomic Broadcast [Pedone, et</p>
    <p>al.], Speculative Paxos [Ports, et al.]</p>
    <p>Egalitarian Paxos [Moraru, et al.], Tapir [Zhang, et al.]</p>
    <p>Network and Hardware support for distributed systems  SwitchKV [Li, et al.], NetPaxos [Dang, et al.], FaRM [Dragojevic, et</p>
    <p>al.], Consensus in a Box [Istvan, et al.]</p>
  </div>
  <div class="page">
    <p>Summary  Separate ordering from reliable delivery in state</p>
    <p>machine replication</p>
    <p>A new network model OUM that provides ordered but unreliable message delivery</p>
    <p>A more efficient replication protocol NOPaxos that ensures reliable delivery</p>
    <p>The combined system achieves performance equivalent to an unreplicated system</p>
  </div>
</Presentation>
