<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Morpheus: Towards Automated SLOs for Enterprise Clusters</p>
    <p>Sangeetha Abdu Jyothi* Carlo Curino Ishai Menache Shravan Matthur Narayanamurthy Alexey Tumanov^</p>
    <p>Jonathan Yaniv** Ruslan Mavlyutov^^ igo Goiri Subru Krishnan Janardhan Kulkarni Sriram Rao</p>
    <p>* University of Illinois, Urbana-Champaign ^ University of California, Berkeley</p>
    <p>** Technion - Israel Institute of Technology ^^ University of Fribourg</p>
  </div>
  <div class="page">
    <p>Operator/User tensions</p>
    <p>Operator User</p>
    <p>R es</p>
    <p>o ur</p>
    <p>ce s</p>
    <p>TimeTime</p>
    <p>R es</p>
    <p>o ur</p>
    <p>ce s</p>
    <p>Container</p>
    <p>Run as many jobs as possible  Fair-sharing</p>
    <p>Our focus is on batch jobs in big data enterprise clusters</p>
    <p>Periodic jobs should run predictably  output available by deadline</p>
    <p>T T</p>
  </div>
  <div class="page">
    <p>R e so</p>
    <p>u rc</p>
    <p>e s</p>
    <p>Time</p>
    <p>Roadblock: Unpredictability</p>
    <p>Sharing-induced resource-sharing, queueing etc</p>
    <p>Inherent stragglers, failures, skew, hardware changes</p>
    <p>Q1 Q3 Q4 Q6 Q12</p>
    <p>Re la</p>
    <p>tiv e</p>
    <p>ru nt</p>
    <p>im e</p>
    <p>deadline</p>
  </div>
  <div class="page">
    <p>Current solution: Over-provisioning</p>
    <p>Prov./ average</p>
    <p>Prov./ peak</p>
    <p>Users over-provision &gt; 75% jobs</p>
  </div>
  <div class="page">
    <p>Utilization vs. Predictability</p>
  </div>
  <div class="page">
    <p>Towards automated SLOs</p>
    <p>System focuses on periodic jobs</p>
    <p>Empirically &gt;60% are periodic</p>
    <p>Our results:</p>
    <p>Reduce cluster size by 14-28%</p>
  </div>
  <div class="page">
    <p>Morpheus Overview</p>
    <p>Respond to unpredictabilities</p>
    <p>Quantify user requirements</p>
    <p>Pack jobs efficiently</p>
    <p>User sign-off</p>
    <p>Monitoring</p>
    <p>Logs</p>
    <p>SLO resource estimate</p>
    <p>Automatic Inference Module</p>
    <p>Reservation Mechanism</p>
    <p>Dynamic Reprovisioning</p>
  </div>
  <div class="page">
    <p>Automatic Inference Module</p>
    <p>Reservation Mechanism</p>
    <p>Dynamic Reprovisioning</p>
    <p>Automatic Inference Module</p>
    <p>Deadlines</p>
    <p>Resource Estimate</p>
    <p>Logs</p>
    <p>Quantify user requirements</p>
    <p>Derive deadline SLOs</p>
    <p>Estimate job resource demands</p>
    <p>User sign-off</p>
  </div>
  <div class="page">
    <p>Deadline SLOs</p>
    <p>A B</p>
    <p>Y</p>
    <p>ZX</p>
    <p>Y</p>
    <p>ZX</p>
    <p>Job completion time of A Output consumption time of B</p>
    <p>deadline 9</p>
  </div>
  <div class="page">
    <p>Deadline SLO validation</p>
    <p>P B#$%&amp; A)%**+,&gt; 4  P B#$%&amp; A)112+,-)</p>
    <p>CD F ov er jo bs</p>
    <p>~70% of jobs have high scheduling flexibility Valid estimate</p>
    <p>A B</p>
    <p>arrival deadline</p>
  </div>
  <div class="page">
    <p>Job Resource Demand</p>
    <p>Usage patterns (container skylines) of multiple instances of the same job</p>
    <p>Generate the best fitting model using Linear Program</p>
    <p>Fitting controlled by a parameter,  (higher   less resources)</p>
    <p>Other alternatives  Jockey [Eurosys12], PerfOrator [SoCC16] 11</p>
  </div>
  <div class="page">
    <p>Automatic Inference Module</p>
    <p>Reservation Mechanism</p>
    <p>Dynamic Reprovisioning</p>
    <p>Reservation Mechanism</p>
    <p>LCM</p>
    <p>LowCost SLO</p>
    <p>resource estimate</p>
    <p>Pack jobs efficiently</p>
    <p>Compact storage of jobs based on Least Common Multiple (LCM) of periods</p>
    <p>LowCost Packing Algorithm 12</p>
    <p>User sign-off</p>
  </div>
  <div class="page">
    <p>LCM Representation</p>
    <p>Job A</p>
    <p>Job C</p>
    <p>Entire plan</p>
    <p>LCM</p>
    <p>Job B</p>
    <p>Smallest repeating unit stored  Least Common Multiple (LCM) of periods</p>
    <p>Efficient storage</p>
    <p>Predictable allocation for users</p>
    <p>p o</p>
    <p>rt io</p>
    <p>n o</p>
    <p>f to</p>
    <p>ta l (</p>
    <p>% )</p>
    <p>periodicity</p>
    <p>periodic jobs</p>
    <p>instances</p>
  </div>
  <div class="page">
    <p>Other key techniques (in the paper)</p>
    <p>LowCost Packing Algorithm</p>
    <p>Heuristic for achieving a balanced allocation</p>
    <p>Load-aware online packing</p>
    <p>Dynamic reprovisioning</p>
    <p>Continuous monitoring of jobs</p>
    <p>Allocate more resources when progress is slow</p>
    <p>deadlinearrival</p>
    <p>new job</p>
    <p>Time</p>
    <p>R e so</p>
    <p>u rc</p>
    <p>e s</p>
  </div>
  <div class="page">
    <p>Experiments</p>
    <p>Implementation:</p>
    <p>Recurrent reservation mechanism, packing algorithm, and dynamic reprovisioning in Apache Hadoop/YARN</p>
    <p>Stand-alone inference subsystem</p>
    <p>Workload:</p>
    <p>Enterprise-trace: Three-month trace from 50k-node COSMOS cluster</p>
    <p>Hadoop-trace: One-month trace from 4k-node Hadoop cluster</p>
    <p>TPC-H: Standard TPC-H benchmark</p>
  </div>
  <div class="page">
    <p>Evaluation  Scalability test</p>
    <p>Morpheus can handle load in production clusters</p>
    <p>time(hours) 0 1 2 3 4 5 6 7 8</p>
    <p>time(hours) 0 1 2 3 4 5 6 7 8</p>
    <p>re se</p>
    <p>rv at</p>
    <p>io ns</p>
    <p>m em</p>
    <p>or y</p>
    <p>(T B</p>
    <p>)</p>
    <p>al lo</p>
    <p>ca te</p>
    <p>d m</p>
    <p>em o ry</p>
    <p>( T</p>
    <p>B )</p>
  </div>
  <div class="page">
    <p>Provisioned / used resources</p>
    <p>C D</p>
    <p>F</p>
    <p>Evaluation  Resource estimation</p>
    <p>Morpheus provides more accurate resource estimates</p>
    <p>Level of fitting controllable in the inference module of Morpheus</p>
    <p>Higher   Tighter fitting  Less over-provisioning</p>
  </div>
  <div class="page">
    <p>N o rm</p>
    <p>al iz</p>
    <p>ed SL</p>
    <p>O V</p>
    <p>io la</p>
    <p>ti o ns</p>
    <p>Baseline (user provisioned)</p>
    <p>Normalized Cluster Resources</p>
    <p>= 1%, dynamic</p>
    <p>= 1%, static</p>
    <p>= 5%, static</p>
    <p>= 5%, dynamic</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Conclusion  Predictable performance with lesser resources and higher utilization</p>
    <p>Three main ideas</p>
    <p>Automatic inference</p>
    <p>Recurrent reservations</p>
    <p>Dynamic reprovisioning</p>
    <p>5-13x reduction in SLO violations</p>
    <p>14-28% reduction in cluster size</p>
  </div>
  <div class="page">
    <p>THANK YOU!</p>
  </div>
</Presentation>
