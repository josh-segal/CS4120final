<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Ryoan: A Distributed Sandbox for Untrusted Computation on Secret Data</p>
    <p>Tyler Hunt, Zhiting Zhu, Yuanzhong Xu, Simon Peter, Emmett Witchel</p>
  </div>
  <div class="page">
    <p>Disease risk assessment: Trust issues</p>
    <p>Disease Risk</p>
  </div>
  <div class="page">
    <p>Disease risk assessment: Trust issues</p>
    <p>Disease Risk</p>
    <p>Classification Result</p>
  </div>
  <div class="page">
    <p>Disease risk assessment: Trust issues</p>
    <p>Disease Risk</p>
    <p>Classification Result</p>
  </div>
  <div class="page">
    <p>Disease risk assessment: Trust issues</p>
    <p>Disease Risk</p>
    <p>Classification Result</p>
  </div>
  <div class="page">
    <p>Disease risk assessment: Trust issues</p>
    <p>Disease Risk</p>
    <p>Classification Result</p>
  </div>
  <div class="page">
    <p>Disease risk assessment: Trust issues</p>
    <p>Disease Risk</p>
    <p>Classification Result</p>
  </div>
  <div class="page">
    <p>Talk outline</p>
    <p>Introduction Controlling untrusted modules Covert and side channels Evaluation</p>
  </div>
  <div class="page">
    <p>Ryoans goals</p>
    <p>Provide user data secrecy  Without trusting the application  Without trusting the platform (OS, Hypervisor)</p>
    <p>Support cooperation between service providers</p>
    <p>Userspace</p>
    <p>Platform ( )</p>
  </div>
  <div class="page">
    <p>Ryoan Sandbox</p>
    <p>Ryoans goals</p>
    <p>Provide user data secrecy  Without trusting the application  Without trusting the platform (OS, Hypervisor)</p>
    <p>Support cooperation between service providers</p>
    <p>Userspace</p>
    <p>Platform ( )</p>
  </div>
  <div class="page">
    <p>Ryan-ji</p>
  </div>
  <div class="page">
    <p>Threat model</p>
    <p>Users  Dont trust</p>
    <p>service providers for secrecy</p>
    <p>Dont trust platforms for secrecy</p>
    <p>Everyone  Trusts Ryoan  Trusts Intel SGX</p>
    <p>- User - User Data</p>
    <p>- Untrusted Code - Ryoan</p>
    <p>- SGX- Untrusted Platform</p>
    <p>Service Providers  Control platforms  Dont trust other</p>
    <p>service provides for secrecy</p>
  </div>
  <div class="page">
    <p>Threat model</p>
    <p>Users  Dont trust</p>
    <p>service providers for secrecy</p>
    <p>Dont trust platforms for secrecy</p>
    <p>Everyone  Trusts Ryoan  Trusts Intel SGX</p>
    <p>- User - User Data</p>
    <p>- Untrusted Code - Ryoan</p>
    <p>- SGX- Untrusted Platform</p>
    <p>Service Providers  Control platforms  Dont trust other</p>
    <p>service provides for secrecy</p>
  </div>
  <div class="page">
    <p>Threat model</p>
    <p>Users  Dont trust</p>
    <p>service providers for secrecy</p>
    <p>Dont trust platforms for secrecy</p>
    <p>Everyone  Trusts Ryoan  Trusts Intel SGX</p>
    <p>- User - User Data</p>
    <p>- Untrusted Code - Ryoan</p>
    <p>- SGX- Untrusted Platform</p>
    <p>Service Providers  Control platforms  Dont trust other</p>
    <p>service provides for secrecy</p>
  </div>
  <div class="page">
    <p>Threat model</p>
    <p>Users  Dont trust</p>
    <p>service providers for secrecy</p>
    <p>Dont trust platforms for secrecy</p>
    <p>Service Providers  Control platforms  Dont trust other</p>
    <p>service provides for secrecy</p>
    <p>Everyone  Trusts Ryoan  Trusts Intel SGX</p>
    <p>- User - User Data</p>
    <p>- Untrusted Code - Ryoan</p>
    <p>- SGX- Untrusted Platform</p>
  </div>
  <div class="page">
    <p>Sandboxes  Trusted code  Confine modules  Based on Googles</p>
    <p>Native Client (NaCl)</p>
    <p>Ryoans world</p>
    <p>Module</p>
    <p>Modules  NaCl x86 binaries</p>
    <p>from service providers</p>
    <p>Application logic</p>
    <p>Platforms  More service</p>
    <p>providers code  Host computation</p>
  </div>
  <div class="page">
    <p>Sandboxes  Trusted code  Confine modules  Based on Googles</p>
    <p>Native Client (NaCl)</p>
    <p>Ryoans world</p>
    <p>Module</p>
    <p>Modules  NaCl x86 binaries</p>
    <p>from service providers</p>
    <p>Application logic</p>
    <p>Platforms  More service</p>
    <p>providers code  Host computation</p>
  </div>
  <div class="page">
    <p>Sandboxes  Trusted code  Confine modules  Based on Googles</p>
    <p>Native Client (NaCl)</p>
    <p>Ryoans world</p>
    <p>Module</p>
    <p>Modules  NaCl x86 binaries</p>
    <p>from service providers</p>
    <p>Application logic</p>
    <p>Platforms  More service</p>
    <p>providers code  Host computation</p>
  </div>
  <div class="page">
    <p>Sandboxes  Trusted code  Confine modules  Based on Googles</p>
    <p>Native Client (NaCl)</p>
    <p>Ryoans world</p>
    <p>Module</p>
    <p>Modules  NaCl x86 binaries</p>
    <p>from service providers</p>
    <p>Application logic</p>
    <p>Platforms  More service</p>
    <p>providers code  Host computation</p>
  </div>
  <div class="page">
    <p>Ryoan applications</p>
    <p>Modules  Request oriented  Well defined unit of work</p>
    <p>One requestone result  e.g, 1 email, 1 photo</p>
    <p>Composable  Modules can be connected to build services</p>
    <p>Module</p>
  </div>
  <div class="page">
    <p>Talk outline</p>
    <p>Introduction Controlling untrusted modules Covert and side channels Evaluation</p>
  </div>
  <div class="page">
    <p>Intel SGX in 2 minutes (or less)</p>
    <p>Provides Enclaves  Regions of a process's virtual address</p>
    <p>space</p>
    <p>Enclaves  Can only be accessed by enclave code  Still have access to the rest of memory</p>
    <p>Attestations  Hardware signed hashes of initial code</p>
    <p>and data</p>
    <p>Enclave Codes View</p>
    <p>Other Codes View</p>
    <p>Ryoan Instance Module</p>
    <p>Enclave (Inaccessible)</p>
  </div>
  <div class="page">
    <p>SGX provides unforgeable attestation of the sandbox</p>
    <p>Statements Ryoan makes about the module can now be trusted</p>
    <p>Chain of trust</p>
    <p>RyoanAttests</p>
    <p>ModuleRyoan Attests</p>
  </div>
  <div class="page">
    <p>Ryoans view of SGX</p>
    <p>SGX gives you:  Trusted computation on secret data</p>
    <p>Ryoan uses SGX to give you:  Guarantees on Untrusted computation</p>
  </div>
  <div class="page">
    <p>Confining untrusted code</p>
    <p>Problem:  Platform can read secrets out</p>
    <p>of memory</p>
    <p>Solution:  Execute module inside of an</p>
    <p>enclave</p>
    <p>Module</p>
  </div>
  <div class="page">
    <p>Problem:  Platform can read secrets out</p>
    <p>of memory</p>
    <p>Solution:  Execute module inside of an</p>
    <p>enclave</p>
    <p>Enclave Module</p>
    <p>Confining untrusted code</p>
  </div>
  <div class="page">
    <p>Enclave</p>
    <p>Module</p>
    <p>Confining untrusted code</p>
    <p>Problem:  Module can copy secrets to</p>
    <p>non-enclave memory</p>
    <p>Solution:  Restrict accessible memory</p>
    <p>with a sandbox  Property of NaCl</p>
  </div>
  <div class="page">
    <p>Problem:  Module can copy secrets to</p>
    <p>non-enclave memory</p>
    <p>Solution:  Restrict accessible memory</p>
    <p>with a sandbox  Property of NaCl</p>
    <p>Sandbox Module</p>
    <p>Confining untrusted code</p>
  </div>
  <div class="page">
    <p>Problem:  Modules can use system calls</p>
    <p>to write out user data</p>
    <p>Solution:  NaCl modules call sandbox to</p>
    <p>access system calls  Enforce encryption</p>
    <p>Confining untrusted code</p>
    <p>Sandbox</p>
    <p>Module</p>
    <p>write( );</p>
  </div>
  <div class="page">
    <p>Confining untrusted code</p>
    <p>Sandbox</p>
    <p>Module</p>
    <p>write([CIPHERTEXT]);</p>
    <p>Problem:  Modules can use system calls</p>
    <p>to write out user data</p>
    <p>Solution:  NaCl modules call sandbox to</p>
    <p>access system calls  Enforce encryption</p>
  </div>
  <div class="page">
    <p>Confining untrusted code</p>
    <p>Problem:  Modules can collude with</p>
    <p>users to steal data</p>
    <p>Solution:  Dont let modules keep state</p>
    <p>between requests</p>
    <p>ModuleModule</p>
    <p>D isease R</p>
    <p>isk</p>
    <p>Later</p>
    <p>It s</p>
    <p>M E!</p>
  </div>
  <div class="page">
    <p>Confining untrusted code</p>
    <p>Problem:  Modules can collude with</p>
    <p>users to steal data</p>
    <p>Solution:  Dont let modules keep state</p>
    <p>between requests</p>
    <p>ModuleModule</p>
    <p>D isease R</p>
    <p>isk</p>
    <p>Later</p>
    <p>It s</p>
    <p>M E!</p>
  </div>
  <div class="page">
    <p>Modules cannot keep state</p>
    <p>Module life cycle imposed by Ryoan  Read, process, write, destroy</p>
    <p>Sandbox enforces one request per module execution  Represent a complete unit of work  Only contain content from one user</p>
    <p>Initialize Read Input</p>
    <p>Process Write</p>
    <p>Output Destroy</p>
  </div>
  <div class="page">
    <p>Talk outline</p>
    <p>Introduction Controlling untrusted modules Covert and side channels Evaluation</p>
  </div>
  <div class="page">
    <p>Covert and side channels</p>
    <p>Output, via some externally visible property of execution</p>
    <p>Ryoan: Software covert channels  System calls  Execution time</p>
    <p>Hardware covert channels:  Hardware vendors responsibility</p>
    <p>Module</p>
  </div>
  <div class="page">
    <p>System call covert channel</p>
    <p>Module</p>
    <p>write(8bytes); write(16bytes); write(8bytes); write(16bytes); write(16bytes); write(16bytes); write(8bytes);</p>
  </div>
  <div class="page">
    <p>Eliminating system call channel</p>
    <p>Remove modules ability to make system calls</p>
    <p>Ryoan performs all data input and output independent of the content</p>
    <p>Confined; Module cannot make system calls.</p>
    <p>Initialize Read Input Process Done</p>
    <p>Ryoan makes input</p>
    <p>available Ryoan flushes all output Destroy</p>
  </div>
  <div class="page">
    <p>Initialization is expensive</p>
    <p>Confined; Module cannot make system calls.</p>
    <p>Initialize Read Input</p>
    <p>Process Done</p>
    <p>Checkpoint</p>
    <p>Restore Checkpoint</p>
    <p>ClamAV (virus scanner): 25.0 seconds to initialize 0.1 seconds to process a request</p>
  </div>
  <div class="page">
    <p>Confined compatibility API</p>
    <p>In-memory file API  File system operations</p>
    <p>in memory  Examples:</p>
    <p>Temp files  Preexisting files</p>
    <p>Dynamic Memory  Modules can call</p>
    <p>mmap for new memory</p>
    <p>Return memory from a pre-allocated pool.</p>
    <p>Replaced system calls: mmap</p>
    <p>Replaced system calls: open, close, read, write, stat, lseek, unlink, mkdir, rmdir, getdents</p>
  </div>
  <div class="page">
    <p>Confined compatibility API</p>
    <p>In-memory file API  File system operations</p>
    <p>in memory  Examples:</p>
    <p>Temp files  Preexisting files</p>
    <p>Dynamic Memory  Modules can call</p>
    <p>mmap for new memory</p>
    <p>Return memory from a pre-allocated pool.</p>
    <p>Replaced system calls: mmap</p>
    <p>Replaced system calls: open, close, read, write, stat, lseek, unlink, mkdir, rmdir, getdents</p>
  </div>
  <div class="page">
    <p>Confined compatibility API</p>
    <p>In-memory file API  File system operations</p>
    <p>in memory  Examples:</p>
    <p>Temp files  Preexisting files</p>
    <p>Dynamic Memory  Modules can call</p>
    <p>mmap for new memory</p>
    <p>Return memory from a pre-allocated pool.</p>
    <p>Replaced system calls: mmap</p>
    <p>Replaced system calls: open, close, read, write, stat, lseek, unlink, mkdir, rmdir, getdents</p>
  </div>
  <div class="page">
    <p>Talk outline</p>
    <p>Introduction Controlling untrusted modules Covert channels Evaluation</p>
  </div>
  <div class="page">
    <p>Moses Classifier</p>
    <p>Return Results</p>
    <p>Parse Input</p>
    <p>Combine Distribute</p>
    <p>Health</p>
    <p>In: Genome/health data Out: Disease risk</p>
    <p>Translation</p>
    <p>In: French text Out: English text</p>
    <p>EmailImages</p>
    <p>In: Pictures Out: Array of objects</p>
    <p>In: Emails Out: Spam &amp; virus status</p>
    <p>Recognize NSFW</p>
    <p>Recognize Horse</p>
    <p>Recognize Face</p>
    <p>Combine Distribute</p>
  </div>
  <div class="page">
    <p>Moses Classifier</p>
    <p>Return Results</p>
    <p>Parse Input</p>
    <p>Combine Distribute</p>
    <p>Health</p>
    <p>In: Genome/health data Out: Disease risk</p>
    <p>Translation</p>
    <p>In: French text Out: English text</p>
    <p>EmailImages</p>
    <p>In: Pictures Out: Array of objects</p>
    <p>In: Emails Out: Spam &amp; virus status</p>
    <p>Recognize NSFW</p>
    <p>Recognize Horse</p>
    <p>Recognize Face</p>
    <p>Combine Distribute</p>
  </div>
  <div class="page">
    <p>Moses Classifier</p>
    <p>Return Results</p>
    <p>Parse Input</p>
    <p>Combine Distribute</p>
    <p>Health</p>
    <p>In: Genome/health data Out: Disease risk</p>
    <p>Translation</p>
    <p>In: French text Out: English text</p>
    <p>EmailImages</p>
    <p>In: Pictures Out: Array of objects</p>
    <p>In: Emails Out: Spam &amp; virus status</p>
    <p>Recognize NSFW</p>
    <p>Recognize Horse</p>
    <p>Recognize Face</p>
    <p>Combine Distribute</p>
  </div>
  <div class="page">
    <p>Moses Classifier</p>
    <p>Return Results</p>
    <p>Parse Input</p>
    <p>Combine Distribute</p>
    <p>Health</p>
    <p>In: Genome/health data Out: Disease risk</p>
    <p>Translation</p>
    <p>In: French text Out: English text</p>
    <p>EmailImages</p>
    <p>In: Pictures Out: Array of objects</p>
    <p>In: Emails Out: Spam &amp; virus status</p>
    <p>Recognize NSFW</p>
    <p>Recognize Horse</p>
    <p>Recognize Face</p>
    <p>Combine Distribute</p>
  </div>
  <div class="page">
    <p>Moses Classifier</p>
    <p>Return Results</p>
    <p>Parse Input</p>
    <p>Combine Distribute</p>
    <p>Health</p>
    <p>In: Genome/health data Out: Disease risk</p>
    <p>Translation</p>
    <p>In: French text Out: English text</p>
    <p>EmailImages</p>
    <p>In: Pictures Out: Array of objects</p>
    <p>In: Emails Out: Spam &amp; virus status</p>
    <p>Recognize NSFW</p>
    <p>Recognize Horse</p>
    <p>Recognize Face</p>
    <p>Combine Distribute</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Implementation requires SGX v2 instructions (spec: Fall 2014, coming soon)  Dynamic memory allocation/protection</p>
    <p>SGX performance model  Measured SGX v1 latencies on our hardware  Estimated SGX v2 latencies (sensitivity study in</p>
    <p>paper)  Flush TLB on all system calls, page faults, and</p>
    <p>interrupts</p>
  </div>
  <div class="page">
    <p>Health 20,000 1.4KB Boolean vectors from different users</p>
    <p>Translation 30 short paragraphs, sizes 25-300B, 4.1KB total</p>
    <p>Images 12 images, sizes 17KB-613KB</p>
    <p>Email 250 emails, 30% with 103KB-12MB attachment</p>
  </div>
  <div class="page">
    <p>Health 20,000 1.4KB Boolean vectors from different users</p>
    <p>Translation 30 short paragraphs, sizes 25-300B, 4.1KB total</p>
    <p>Images 12 images, sizes 17KB-613KB</p>
    <p>Email 250 emails, 30% with 103KB-12MB attachment</p>
  </div>
  <div class="page">
    <p>Health 20,000 1.4KB Boolean vectors from different users</p>
    <p>Translation 30 short paragraphs, sizes 25-300B, 4.1KB total</p>
    <p>Images 12 images, sizes 17KB-613KB</p>
    <p>Email 250 emails, 30% with 103KB-12MB attachment</p>
  </div>
  <div class="page">
    <p>Health 20,000 1.4KB Boolean vectors from different users</p>
    <p>Translation 30 short paragraphs, sizes 25-300B, 4.1KB total</p>
    <p>Images 12 images, sizes 17KB-613KB</p>
    <p>Email 250 emails, 30% with 103KB-12MB attachment</p>
  </div>
  <div class="page">
    <p>Health 20,000 1.4KB Boolean vectors from different users</p>
    <p>Translation 30 short paragraphs, sizes 25-300B, 4.1KB total</p>
    <p>Images 12 images, sizes 17KB-613KB</p>
    <p>Email 250 emails, 30% with 103KB-12MB attachment</p>
  </div>
  <div class="page">
    <p>Ryoan summary</p>
    <p>Allows untrusted code to operate on secret data on untrusted platforms</p>
    <p>Sandbox with SGX  Eliminates explicit channels</p>
    <p>Module cant call platform  Eliminates covert channels</p>
    <p>Mostly backwards compatible  Sandbox code implements system calls</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>(Backup Slides Follow)</p>
  </div>
  <div class="page">
    <p>Output Size is a (configurable) fixed function of input size.  Output is padded or truncated by Ryoan  Always predefined in the specification  Examples (n bytes of input)</p>
    <p>Virus Scanner output: n bytes + 1 bit  Machine Translation output: 2n bytes</p>
    <p>Output Size</p>
    <p>Module</p>
    <p>n bytes n bytes</p>
    <p>n bytes n/2 bytes</p>
  </div>
</Presentation>
