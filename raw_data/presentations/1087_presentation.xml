<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>+Parallel Data Laboratory Carnegie Mellon University</p>
    <p>Carnegie Mellon Parallel Data Laboratory</p>
    <p>, *Vector Institute</p>
    <p>Geriatrix</p>
    <p>Saurabh Kadekodi+, Vaishnavh Nagarajan+, Gregory R. Ganger+ and Garth A. Gibson+*</p>
    <p>Aging what you see, and what you dont see</p>
  </div>
  <div class="page">
    <p>In a nutshell  File system aging still matters</p>
    <p>Recreated published experiments w/ aging  Aging is even more important on SSDs</p>
    <p>Geriatrix  a file system aging suite  Induces adequate file &amp; free space fragmentation  Profile driven with 8 built-in aging profiles</p>
    <p>!2</p>
  </div>
  <div class="page">
    <p>FS performance can deteriorate with prolonged usage, mainly due to fragmentation</p>
    <p>Responsible FS benchmarking must include aging  Shown by Keith Smith &amp; Margo Seltzer in 1997</p>
    <p>Despite evidence, aging and its effects are largely ignored  13 of 20 file system papers fail to mention aging</p>
    <p>Why study file system aging?</p>
    <p>!3</p>
    <p>AgedFresh or Defragged</p>
  </div>
  <div class="page">
    <p>Fragmentation</p>
    <p>!4</p>
    <p>Aging produces two kinds of fragmentation:</p>
    <p>File fragmentation  File readback causes long seeks</p>
    <p>Free space fragmentation  Writing file causes long seeks  Leads to file fragmentation</p>
    <p>Current aging tools only focus on file fragmentation</p>
  </div>
  <div class="page">
    <p>File System aging still matters</p>
    <p>Part 1</p>
    <p>SSDs can perform worse than HDDs after aging</p>
  </div>
  <div class="page">
    <p>Recreated experiments  Recreated experiments from three publications:</p>
    <p>Btrfs ACM TOS 2013 (HDD and SSD)  HDD: 100GB aged image with 80% fullness  SSD: 60GB aged image with 70% fullness</p>
    <p>F2fs USENIX FAST 2015 (SSD)</p>
    <p>NOVA USENIX FAST 2016 (NVM)</p>
    <p>!6</p>
  </div>
  <div class="page">
    <p>Recreated experiments  Recreated experiments from three publications:</p>
    <p>Btrfs ACM TOS 2013 (HDD and SSD)  HDD: 100GB aged image with 80% fullness  SSD: 60GB aged image with 70% fullness</p>
    <p>F2fs USENIX FAST 2015 (SSD)</p>
    <p>NOVA USENIX FAST 2016 (NVM)</p>
    <p>!6</p>
  </div>
  <div class="page">
    <p>AgedFresh (Ext4, Btrfs, XFS,</p>
    <p>F2fs, NOVA)</p>
    <p>!7</p>
    <p>Geriatrix</p>
    <p>Aging profile (Agrawal, Meyer, Pramod, Dabre)</p>
    <p>Benchmarking with Geriatrix</p>
  </div>
  <div class="page">
    <p>AgedFresh (Ext4, Btrfs, XFS,</p>
    <p>F2fs, NOVA)</p>
    <p>!7</p>
    <p>Geriatrix</p>
    <p>Aging profile (Agrawal, Meyer, Pramod, Dabre)</p>
    <p>Benchmarking with Geriatrix</p>
    <p>controlled sequence of file creates / deletes</p>
  </div>
  <div class="page">
    <p>AgedFresh (Ext4, Btrfs, XFS,</p>
    <p>F2fs, NOVA)</p>
    <p>!7</p>
    <p>Geriatrix</p>
    <p>Aging profile (Agrawal, Meyer, Pramod, Dabre)</p>
    <p>Filebench</p>
    <p>Benchmarking with Geriatrix</p>
    <p>controlled sequence of file creates / deletes</p>
  </div>
  <div class="page">
    <p>All recreations are Filebench benchmark reruns</p>
    <p>Each benchmark run lasted 10 min</p>
    <p>Three runs of each benchmark for variance  Error bars not shown since RMSE &lt; 0.01%</p>
    <p>Throughput in ops / s as shown by Filebench</p>
    <p>All results are normalized to Ext4 performance</p>
    <p>!8</p>
    <p>Benchmarking configuration</p>
  </div>
  <div class="page">
    <p>&lt;w or</p>
    <p>kl oa</p>
    <p>d&gt;</p>
    <p>Evaluation Format</p>
    <p>!9</p>
    <p>The filebench workload used to benchmark the FS</p>
  </div>
  <div class="page">
    <p>&lt;w or</p>
    <p>kl oa</p>
    <p>d&gt;</p>
    <p>Published results normalized to Paper Ext4</p>
    <p>Evaluation Format</p>
    <p>!9</p>
    <p>The filebench workload used to benchmark the FS  Published results (with raw performance numbers on the bar)</p>
  </div>
  <div class="page">
    <p>&lt;w or</p>
    <p>kl oa</p>
    <p>d&gt;</p>
    <p>Published results normalized to Paper Ext4</p>
    <p>Evaluation Format</p>
    <p>!9</p>
    <p>The filebench workload used to benchmark the FS  Published results (with raw performance numbers on the bar)  Performance of unaged FS on our h/w using the publication config</p>
    <p>Our results normalized to Unaged Ext4</p>
  </div>
  <div class="page">
    <p>&lt;w or</p>
    <p>kl oa</p>
    <p>d&gt;</p>
    <p>Published results normalized to Paper Ext4</p>
    <p>Evaluation Format</p>
    <p>!9</p>
    <p>The filebench workload used to benchmark the FS  Published results (with raw performance numbers on the bar)  Performance of unaged FS on our h/w using the publication config  Performance of FS aged using indicated aging profile on our h/w</p>
    <p>Our results normalized to Unaged Ext4</p>
  </div>
  <div class="page">
    <p>&lt;w or</p>
    <p>kl oa</p>
    <p>d&gt;</p>
    <p>Published results normalized to Paper Ext4</p>
    <p>Evaluation Format</p>
    <p>!9</p>
    <p>The filebench workload used to benchmark the FS  Published results (with raw performance numbers on the bar)  Performance of unaged FS on our h/w using the publication config  Performance of FS aged using indicated aging profile on our h/w</p>
    <p>Our results normalized to Unaged Ext4</p>
    <p>Aging effect indicated by this difference</p>
  </div>
  <div class="page">
    <p>F ile</p>
    <p>se rv</p>
    <p>er Btrfs 2013 HDD Recreation</p>
    <p>!10</p>
    <p>16-22% difference before and after aging  Geriatrix also acts as stress tester  As Smith and Seltzer said  we must pay attention to FS aging</p>
  </div>
  <div class="page">
    <p>Btrfs 2013 SSD Recreation</p>
    <p>!11</p>
    <p>F ile</p>
    <p>se rv</p>
    <p>er</p>
    <p>Rank ordering completely different from publication  Different aging profiles result in different performance ranking  SSD ages along with file system  exaggerated by free space</p>
    <p>fragmentation</p>
  </div>
  <div class="page">
    <p>Other experiments (F2fs, NOVA)  F2fs USENIX FAST 2015 (SSD)</p>
    <p>Different SSDs  both across and within classes age very differently</p>
    <p>NOVA USENIX FAST 2016 (NVM)  Aged NOVA shows little throughput reduction (upto 6%)  Aged tail latencies are much more affected than throughput</p>
    <p>For very low-latency FSes, tail latency slowdown is commentary on FS design</p>
    <p>Both recreations show different rank ordering of FSes compared to publication</p>
    <p>!12</p>
  </div>
  <div class="page">
    <p>Geriatrix  The aging suite</p>
    <p>Part 2</p>
  </div>
  <div class="page">
    <p>Aging Profile</p>
    <p>Geriatrix aging process</p>
    <p>!14</p>
    <p>%</p>
    <p>Aging profiles easily measured by a simple FS tree walk</p>
  </div>
  <div class="page">
    <p>Aging Profile</p>
    <p>AgedFresh</p>
    <p>Geriatrix aging process</p>
    <p>!14</p>
    <p>Geriatrix</p>
  </div>
  <div class="page">
    <p>Aging Profile</p>
    <p>AgedFresh</p>
    <p>Geriatrix aging process</p>
    <p>!14</p>
    <p>Geriatrix</p>
    <p>controlled sequence of file creates / deletes</p>
  </div>
  <div class="page">
    <p>Aging Profile</p>
    <p>AgedFresh</p>
    <p>Geriatrix aging process</p>
    <p>!14</p>
    <p>Geriatrix</p>
    <p>Run Benchmark</p>
    <p>controlled sequence of file creates / deletes</p>
  </div>
  <div class="page">
    <p>Geriatrix aging methodology</p>
    <p>!15</p>
    <p>to maintain fullness %  Continuously maintaining size &amp; dir depth distrs.  Aim is to achieve relative age distribution</p>
  </div>
  <div class="page">
    <p>Is Geriatrix accurate?</p>
    <p>!16</p>
  </div>
  <div class="page">
    <p>Is Geriatrix accurate?</p>
    <p>!16</p>
    <p>Captured an aging profile from a colleagues HDD</p>
  </div>
  <div class="page">
    <p>Is Geriatrix accurate?</p>
    <p>!16</p>
    <p>Copying is similar to freshly fragmented  Impressions has only large free space extents  Geriatrix mimics original free space fragmentation</p>
    <p>Captured an aging profile from a colleagues HDD  Grundman aging profile included with Geriatrix</p>
    <p>Free space fragment distribution</p>
  </div>
  <div class="page">
    <p>How costly is Geriatrix?</p>
    <p>!17</p>
    <p>Aging profile Age (yrs) Workload (TB) Duration (hrs)</p>
    <p>Meyer 2 7.8 1.3</p>
    <p>Wang-LANL 11 1.4 2.4</p>
    <p>Agrawal 14 12 7.8</p>
    <p>Wang-OS 22 1.7 3.9</p>
    <p>50GB XFS image aged in memory w/ Geriatrix using 32 threads</p>
  </div>
  <div class="page">
    <p>How costly is Geriatrix?</p>
    <p>!17</p>
    <p>Aging profile Age (yrs) Workload (TB) Duration (hrs)</p>
    <p>Meyer 2 7.8 1.3</p>
    <p>Wang-LANL 11 1.4 2.4</p>
    <p>Agrawal 14 12 7.8</p>
    <p>Wang-OS 22 1.7 3.9</p>
    <p>In-memory aging done in hrs</p>
    <p>50GB XFS image aged in memory w/ Geriatrix using 32 threads</p>
  </div>
  <div class="page">
    <p>Geriatrix  The tool  Developed in C++  Has 8 built-in aging profiles to standardize aging</p>
    <p>3 regular usage laptop workloads,  2 desktop workloads,  1 deduplication workload,  1 OS archive (CMU datacenter)  1 HPC workload</p>
    <p>Multi-threaded for faster aging  Uses fallocate to avoid writing data</p>
    <p>!18</p>
  </div>
  <div class="page">
    <p>Conclusion  Responsible FS benchmarking must include aging</p>
    <p>FS aging exists and continues to be ignored  Aging effects sometimes more dramatic on SSDs</p>
    <p>Geriatrix - an efficient, profile driven and reproducible aging suite that simplifies FS aging  Induces adequate file and free space fragmentation</p>
    <p>!19</p>
    <p>saukad@cs.cmu.edu</p>
    <p>Contributions encouraged bit.ly/geriatrix-code</p>
  </div>
</Presentation>
