<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Optimal Pricing in a Free Market Wireless Network</p>
    <p>Michael J. Neely University of Southern California</p>
    <p>http://www-rcf.usc.edu/~mjneely *Sponsored in part by DARPA IT-MANET Program and NSF Grant OCE 0520324</p>
    <p>S2</p>
    <p>S3</p>
    <p>?</p>
    <p>current $:</p>
    <p>current $: S1</p>
    <p>S1 S3</p>
    <p>S2 5</p>
    <p>S4 6</p>
    <p>q2(t)</p>
    <p>q3(t)</p>
    <p>INFOCOM 2007</p>
  </div>
  <div class="page">
    <p>S1 S3</p>
    <p>S2 5</p>
    <p>S4 6</p>
    <p>S2</p>
    <p>S3</p>
    <p>?</p>
    <p>current $:</p>
    <p>current $: S1</p>
    <p>q2(t)</p>
    <p>q3(t)</p>
    <p>Time-slotted System: t {0, 1, 2, }</p>
    <p>Time-Varying Channels: (fading, mobility, etc.)</p>
    <p>Sn(t) = (Sn1(t), Sn2(t), , Snk(t))</p>
    <p>(channel states on outgoing links of node n)</p>
    <p>Transmission Rate Options (nodes use orthogonal channels):</p>
    <p>n(t) = (n1(t), n2(t), , nk(t)) n(Sn(t))</p>
  </div>
  <div class="page">
    <p>S1 S3</p>
    <p>S2 5</p>
    <p>S4 6</p>
    <p>S2</p>
    <p>S3</p>
    <p>?</p>
    <p>current $:</p>
    <p>current $: S1</p>
    <p>q2(t)</p>
    <p>q3(t)</p>
    <p>Transmission Costs: Cn tran(n(t), Sn(t))</p>
    <p>Example:</p>
    <p>Reception Costs: Cnb rec(nb(t))</p>
    <p>*Example: Cnb rec(nb(t)) = { b if nb(t) &gt; 0</p>
    <p>{ 0 if nb(t) = 0</p>
    <p>Cn tran()</p>
    <p>*this example is used in slides for simplicity</p>
  </div>
  <div class="page">
    <p>S1 S3</p>
    <p>S2 5</p>
    <p>S4 6</p>
    <p>S2</p>
    <p>S3</p>
    <p>?</p>
    <p>current $:</p>
    <p>current $: S1</p>
    <p>q2(t)</p>
    <p>q3(t)</p>
    <p>For simplicity of these slides: Assume single commodity (multisource, single sink) (multi-commodity case treated in the paper)</p>
    <p>Un(t) = Queue Backlog in node n at time t Rn(t) = *New data admitted to network at source n at time t</p>
    <p>U3(t)</p>
    <p>*Not all nodes are sources: Some simply act as profit-seeking relays</p>
    <p>Node 3 (a source)</p>
    <p>Transmit outNew source data R2(t)</p>
    <p>Endogenous arrivals</p>
  </div>
  <div class="page">
    <p>S1 S3</p>
    <p>S2 5</p>
    <p>S4 6</p>
    <p>S2</p>
    <p>S3</p>
    <p>?</p>
    <p>current $:</p>
    <p>current $: S1</p>
    <p>q2(t)</p>
    <p>q3(t)</p>
    <p>For simplicity of these slides: Assume single commodity (multisource, single sink) (multi-commodity case treated in the paper)</p>
    <p>Un(t) = Queue Backlog in node n at time t Rn(t) = *New data admitted to network at source n at time t</p>
    <p>U5(t)</p>
    <p>Node 5 (pure relay: not a source)</p>
    <p>Transmit out Endogenous arrivals</p>
    <p>*Not all nodes are sources: Some simply act as profit-seeking relays</p>
  </div>
  <div class="page">
    <p>Free Market Network Pricing:</p>
    <p>-Each node n sets its own per-unit price qn(t) for accepting endogenous data from others. (Seller Node Challenge: How to set the price?) -Node n advertises qn(t) and the reception cost. (fixed reception cost b used in slides for simplicity)</p>
    <p>current $: qn(t) rec. cost: n</p>
    <p>Advertisement Data that node n already needs to deliver</p>
    <p>Node n</p>
    <p>expenses</p>
    <p>revenue</p>
  </div>
  <div class="page">
    <p>Free Market Network Pricing:</p>
    <p>Buyer Nodes pay handling charge + reception fee:</p>
    <p>-Handling Charge: an(t) = an(t)qn(t)</p>
    <p>-Reception Fee: n</p>
    <p>Node n</p>
    <p>$ = qn(t) rec = n</p>
    <p>Advertisement</p>
    <p>? ?</p>
    <p>Seller Node n Perspective Node a</p>
    <p>$ = qn(t) rec = n</p>
    <p>Advertisement</p>
    <p>n b</p>
    <p>? ?</p>
    <p>Buyer Node a Perspective</p>
    <p>$ = qn(t) rec = n</p>
    <p>Advertisement</p>
  </div>
  <div class="page">
    <p>Free Market Network Pricing:</p>
    <p>Buyer Node Challenge: Where to send? How much to send? Is advertised price acceptable?</p>
    <p>(current transmission costs Cn tran(n(t), Sn(t)) play a role,</p>
    <p>as does the previous revenue earned for accepting data)</p>
    <p>Node n</p>
    <p>$ = qn(t) rec = n</p>
    <p>Advertisement</p>
    <p>? ?</p>
    <p>Seller Node n Perspective Node a</p>
    <p>$ = qn(t) rec = n</p>
    <p>Advertisement</p>
    <p>n b</p>
    <p>? ?</p>
    <p>Buyer Node a Perspective</p>
    <p>$ = qn(t) rec = n</p>
    <p>Advertisement</p>
  </div>
  <div class="page">
    <p>Free Market Network Pricing:</p>
    <p>The sources desire for communication is the driving economic force!</p>
    <p>Modeling the Source Demand Functions: -Elastic Sources -Utility gn(r) = Source n satisfaction (in dollars) for sending at rate r bits/slot.</p>
    <p>r</p>
    <p>gn(r) Assumed to be: 1. Convex 2. Non-Decreasing 3. Max slope</p>
  </div>
  <div class="page">
    <p>Node n profit (on slot t): n(t) = total income(t) - total cost(t) - payments(t)</p>
    <p>Source (at node n) profit (on slot t): n(t) = gn(Rn(t)) - qn(t)Rn(t)</p>
    <p>Rn(t) $ = qn(t)</p>
    <p>Source at n Node n</p>
    <p>Node n Payments Costs</p>
    <p>Income</p>
  </div>
  <div class="page">
    <p>Social Welfare Definition:</p>
    <p>[gn( rn ) - costn ] n</p>
    <p>Social Welfare =</p>
    <p>where:</p>
    <p>costn</p>
    <p>rn = time avg admit rate from source n</p>
    <p>= time avg external costs expended by node n (not payment oriented)</p>
    <p>Simple Lemma: Maximizing Social Welfare (i) is equivalent to maximizing sum profit (sum profit = network GDP) (ii)can (in principle) be achieved by a stationary randomized routing and scheduling policy</p>
  </div>
  <div class="page">
    <p>We will design 2 different pricing strategies:</p>
  </div>
  <div class="page">
    <p>Prior Work: Utility Maximization for Static Networks: [Kelly: Eur. Trans. Tel. 97] [Kelly, Maulloo, Tan: J. Oper. Res. 98] [Low, Lapsley: TON 1999] [Lee, Mazumdar, Shroff: INFOCOM 2002]</p>
    <p>Utility Maximization for Stochastic Networks: [Neely, Modiano, Li: INFOCOM 2005] [Andrews: INFOCOM 2005] [Georgiadis, Neely, Tassiulas: NOW F&amp;T 2006] [Chen, Low, Chiang, Doyle: INFOCOM 2006]</p>
    <p>Pricing plays only an indirect role in yielding max utility solution</p>
    <p>For the stochastic algorithms, dynamic prices do not necessarily yield the non-negative profit goal!</p>
  </div>
  <div class="page">
    <p>Prior Work: Revenue Maximization for Downlinks (non-convex): [Acemoglu, Ozdaglar: CDC 2004] [Marbach, Berry: INFOCOM 2002] [Basar, Srikant: INFOCOM 2002]</p>
    <p>Markov Decision Problems for single-network owner: [Paschalidis, Tsitsiklis TON 2000] [Lin, Shroff TON 2005]</p>
    <p>Market Mechanisms: [Buttyan, Hubaux: MONET 2003] [Crowcroft, Gibbens, Kelly, Ostring WiOpt 2003] [Shang, Dick, Jha: Trans. Mob. Comput. 2004] [Marbach, Qui: TON 2005]</p>
    <p>Profit is central to problem</p>
    <p>Need a stochastic theory for market-based network economics!</p>
  </div>
  <div class="page">
    <p>Stochastic Greedy Pricing Algorithm (SGP): (Similar to Cross-Layer-Control (CLC) Algorithm from [Neely 2003] [Neely, Modiano, Li INFOCOM 2005])</p>
    <p>For a given Control Parameter V&gt;0</p>
    <p>Pricing (SGP):</p>
    <p>Node n</p>
    <p>Queue Backlog Un(t)</p>
    <p>Admission Control (SGP):</p>
    <p>qn(t) = Un(t)/V</p>
    <p>Max: gn(Rn(t)) - qn(t) Rn(t)</p>
    <p>Subj. to: 0 &lt; Rn(t) &lt; Rmax</p>
    <p>paymentinstant utility</p>
    <p>Rn(t)</p>
  </div>
  <div class="page">
    <p>Stochastic Greedy Pricing Algorithm (SGP): (Similar to Cross-Layer-Control (CLC) Algorithm from [Neely 2003] [Neely, Modiano, Li INFOCOM 2005])</p>
    <p>For a given Control Parameter V&gt;0</p>
    <p>Resource Allocation &amp; Routing (SGP): Define the modified differential price Wnb(t):</p>
    <p>Wnb(t) = qn(t) - qb(t) - /V</p>
    <p>where  = max[max out, max in + Rmax] Maximize: Wnb(t)nb(t) - Cnb</p>
    <p>rec(n(t)) - Cn tran(n(t), Sn(t))</p>
    <p>Subj. to : n(t) n(Sn(t))</p>
    <p>b b</p>
    <p>qn(t) qb(t)</p>
  </div>
  <div class="page">
    <p>Theorem (SGP Performance): For arbitrary S(t) processes and for any fixed parameter V&gt;0:</p>
    <p>(a) Un(t) &lt; V +  for all n, for all time t</p>
    <p>(b) All nodes and sources receive non-negative profit at every instant of time t:</p>
    <p>n() &gt; 0 =0</p>
    <p>t 1 t</p>
    <p>gn( ) - Rn() =0</p>
    <p>t1 t qn(t) Rn()</p>
    <p>=0</p>
    <p>t1 t</p>
    <p>&gt; 0</p>
    <p>Nodes:</p>
    <p>Sources:</p>
    <p>(a)(b) hold for any node n using SGP, even if others dont use SGP!</p>
  </div>
  <div class="page">
    <p>Theorem (SGP Performance): For arbitrary S(t) processes and for any fixed parameter V&gt;0:</p>
    <p>(a) Un(t) &lt; V +  for all n, for all time t</p>
    <p>(b) All nodes and sources receive non-negative profit at every instant of time t:</p>
    <p>(c) If Channel States S(t) are i.i.d. over slots and if everyone uses SGP:</p>
    <p>Social Welfare &gt; g* - O(1/V) g* = maximum social welfare (sum profit) possible, optimized over all alternative algorithms for joint pricing, routing, resource allocation.</p>
  </div>
  <div class="page">
    <p>S1 S3</p>
    <p>S2 5</p>
    <p>S4 6</p>
    <p>Simulation of SGP:</p>
    <p>Parameters: V= 50 Dotted Links: ON/OFF Channels (Pr[ON] = 1/2) Transmission costs = 1 cent/packet, reception costs = .5 cent/packet Solid Links: Transmission costs = 1 cent/packet Utilities: g(r) = 10 log(1 + r)</p>
  </div>
  <div class="page">
    <p>Simulation of SGP:</p>
    <p>S1 S3</p>
    <p>S2 5</p>
    <p>S4 6</p>
    <p>SGP: V=50 C2 = C5 = C7 = 1 g(r) = 10 log(1+r)</p>
  </div>
  <div class="page">
    <p>Simulation of SGP (increase cost of C2, C5):</p>
    <p>S1 S3</p>
    <p>S2 5</p>
    <p>S4 6</p>
    <p>SGP: V=50 C7=1 C2 = C5 = 3 g(r) = 10 log(1+r)</p>
  </div>
  <div class="page">
    <p>Bang-Bang Pricing (BB) Algorithm:</p>
    <p>Objective is to Maximize:</p>
    <p>nn ) + n( n ) ] n</p>
    <p>Where n() and n() are concave profit metrics.</p>
    <p>Yields a more balanced (and fair) profit distribution.</p>
  </div>
  <div class="page">
    <p>Quick (incomplete) description of Bang-Bang Pricing (see paper for details):Uses General Utility Optimization technique from our previous work in [Georgiadis, Neely, Tassiulas NOW F &amp; T 2006]</p>
    <p>BB Algorithm: Define Virtual Queues Xn(t), Yn(t) And Auxiliary Variables n(t), n(t).</p>
    <p>Xn(t)</p>
    <p>Yn(t)</p>
    <p>expenses(t) + n(t) income(t)</p>
    <p>payment(t) + n(t) gn(Rn(t))</p>
    <p>Nodes n:</p>
    <p>Sources n:</p>
  </div>
  <div class="page">
    <p>Pricing (BB):</p>
    <p>qan(t) = { Qmax if Xa(t) &lt; Xn(t) { 0 else</p>
    <p>(Price depends on the incoming link) Distributed Auxiliary Variable Update: Each node n solves: Maximize: Vn() - Xn(t) Subject to: 0 &lt;  &lt; Qmax</p>
    <p>Resource Allocation Based on Mod. Diff. Backlog:</p>
    <p>Wnb(t) = Un(t) - Ub(t) -qnb(t)[Xn(t) - Xb(t)]</p>
  </div>
  <div class="page">
    <p>Theorem (BB Performance): If all nodes Use BB with parameter V&gt;0, then:</p>
    <p>nn ) + n( n ) ] n</p>
    <p>&gt; Optimal - O(1/V)</p>
  </div>
  <div class="page">
    <p>Simulation of BB:</p>
    <p>S1 S3</p>
    <p>S2 5</p>
    <p>S4 6</p>
    <p>SGP: V=50 C2 = C5 = C7 = 1 g(r) = 10 log(1+r)</p>
  </div>
  <div class="page">
    <p>Simulation of BB (increase cost of C2, C5):</p>
    <p>S1 S3</p>
    <p>S2 5</p>
    <p>S4 6</p>
    <p>SGP: V=50 C7=1 C2 = C5 = 3 g(r) = 10 log(1+r)</p>
  </div>
  <div class="page">
    <p>Conclusions:</p>
    <p>S1 S3</p>
    <p>S2 5 S4</p>
    <p>SGP: V=50 C7=1 C2 = C5 = 3 g(r) = 10 log(1+r)</p>
  </div>
</Presentation>
