<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Automatic OS Kernel TCB Reduction by Leveraging Compile-Time Configurability</p>
    <p>Reinhard Tartler, Anil Kurmus, Andreas Ruprecht, Bernhard Heinloth, Valentin Rothberg, Daniela Dorneanu, Rudiger Kapitza,</p>
    <p>Wolfgang Schroder-Preikschat, Daniel Lohmann</p>
    <p>System Software Group Friedrich-Alexander University Erlangen-Nuremberg IBM Research - Zurich</p>
    <p>TU Braunschweig</p>
    <p>October 7, 2012</p>
    <p>supported by and</p>
  </div>
  <div class="page">
    <p>System Software is Configurable</p>
    <p>Especially Linux is incredibly configurable</p>
    <p>Complexity increases considerably</p>
    <p>How to find the best configuration?</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 2  11</p>
  </div>
  <div class="page">
    <p>System Software is Configurable</p>
    <p>Especially Linux is incredibly configurable</p>
    <p>Complexity increases considerably</p>
    <p>How to find the best configuration?</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 2  11</p>
  </div>
  <div class="page">
    <p>System Software is Configurable</p>
    <p>Especially Linux is incredibly configurable</p>
    <p>Complexity increases considerably</p>
    <p>How to find the best configuration?</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 2  11</p>
  </div>
  <div class="page">
    <p>System Software is Configurable</p>
    <p>Especially Linux is incredibly configurable</p>
    <p>Complexity increases considerably</p>
    <p>How to find the best configuration?</p>
    <p>Linux v3.2 contains:</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 2  11</p>
  </div>
  <div class="page">
    <p>How much functionality does Linux come with?</p>
    <p>Configuring Linux is a hard task The Linux kernel contains ample functionality:</p>
    <p>Hard to see what your application exactly requires</p>
    <p>Configuration options, may appear or disappear with every new Linux kernel release</p>
    <p>Distribution kernels mostly do work</p>
    <p>Distros invest an enormous amount of manpower to keep up Make little assumptions on hardware and use case</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 3  11</p>
  </div>
  <div class="page">
    <p>How much functionality does Linux come with?</p>
    <p>Configuring Linux is a hard task The Linux kernel contains ample functionality:</p>
    <p>Hard to see what your application exactly requires</p>
    <p>Configuration options, may appear or disappear with every new Linux kernel release</p>
    <p>Distribution kernels mostly do work</p>
    <p>Distros invest an enormous amount of manpower to keep up Make little assumptions on hardware and use case</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 3  11</p>
  </div>
  <div class="page">
    <p>How much functionality does Linux come with?</p>
    <p>Configuring Linux is a hard task The Linux kernel contains ample functionality:</p>
    <p>Hard to see what your application exactly requires</p>
    <p>Configuration options, may appear or disappear with every new Linux kernel release</p>
    <p>Distribution kernels mostly do work</p>
    <p>Distros invest an enormous amount of manpower to keep up Make little assumptions on hardware and use case</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 3  11</p>
  </div>
  <div class="page">
    <p>A Closer Look at the State of the Art</p>
    <p>Configuration Implementation</p>
    <p>Single Configuration provided by the Distributor</p>
    <p>Kconfig</p>
    <p>Complex Implementation of Variability</p>
    <p>#ifdef-Hell Convoluted make files</p>
    <p>etc.</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 4  11</p>
  </div>
  <div class="page">
    <p>A Closer Look at the State of the Art</p>
    <p>Configuration Implementation</p>
    <p>Single Configuration provided by the Distributor</p>
    <p>Kconfig</p>
    <p>Complex Implementation of Variability</p>
    <p>#ifdef-Hell Convoluted make files</p>
    <p>etc.</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 4  11</p>
  </div>
  <div class="page">
    <p>The Problem</p>
    <p>Without a given use-case, the distribution kernel has to include all available functionality</p>
    <p>As side-effect, this maximizes the attack surface!</p>
    <p>Each use-case needs its specific, ideal configuration</p>
    <p>Automatically derive an ideal configuration for a given use case.</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 5  11</p>
  </div>
  <div class="page">
    <p>Idea: Automated Tailoring of the Linux Configuration</p>
    <p>Without a given use-case, the distribution kernel has to include all available functionality</p>
    <p>As side-effect, this maximizes the attack surface!</p>
    <p>Each use-case needs its specific, ideal configuration</p>
    <p>Automatically derive an ideal configuration for a given use case.</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 5  11</p>
  </div>
  <div class="page">
    <p>Approach at a glance</p>
    <p>Specific Scenario</p>
    <p>CONFIG X86=y CONFIG SCSI=n [ . . . ]</p>
    <p>Tailored Configuration</p>
    <p>Identify in Source Code</p>
    <p>automatically derive</p>
    <p>ftrace</p>
    <p>observe debug symbols</p>
    <p>Holistic</p>
    <p>Variability Model</p>
    <p>establish</p>
    <p>employ SAT checker</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 6  11</p>
  </div>
  <div class="page">
    <p>Approach at a glance</p>
    <p>Specific Scenario</p>
    <p>CONFIG X86=y CONFIG SCSI=n [ . . . ]</p>
    <p>Tailored Configuration</p>
    <p>Identify in Source Code</p>
    <p>automatically derive</p>
    <p>ftrace</p>
    <p>observe debug symbols</p>
    <p>Holistic</p>
    <p>Variability Model</p>
    <p>establish</p>
    <p>employ SAT checker</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 6  11</p>
  </div>
  <div class="page">
    <p>Approach at a glance</p>
    <p>Specific Scenario</p>
    <p>CONFIG X86=y CONFIG SCSI=n [ . . . ]</p>
    <p>Tailored Configuration</p>
    <p>Identify in Source Code</p>
    <p>automatically derive</p>
    <p>ftrace</p>
    <p>observe debug symbols</p>
    <p>Holistic</p>
    <p>Variability Model</p>
    <p>establish</p>
    <p>employ SAT checker</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 6  11</p>
  </div>
  <div class="page">
    <p>Approach at a glance</p>
    <p>Specific Scenario</p>
    <p>CONFIG X86=y CONFIG SCSI=n [ . . . ]</p>
    <p>Tailored Configuration</p>
    <p>Identify in Source Code</p>
    <p>automatically derive</p>
    <p>ftrace</p>
    <p>observe debug symbols</p>
    <p>Holistic</p>
    <p>Variability Model</p>
    <p>establish</p>
    <p>employ SAT checker</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 6  11</p>
  </div>
  <div class="page">
    <p>Approach at a glance</p>
    <p>Specific Scenario</p>
    <p>CONFIG X86=y CONFIG SCSI=n [ . . . ]</p>
    <p>Tailored Configuration</p>
    <p>Identify in Source Code</p>
    <p>automatically derive</p>
    <p>ftrace</p>
    <p>observe debug symbols</p>
    <p>Holistic</p>
    <p>Variability Model</p>
    <p>establish</p>
    <p>employ SAT checker</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 6  11</p>
  </div>
  <div class="page">
    <p>Approach at a glance</p>
    <p>Specific Scenario</p>
    <p>CONFIG X86=y CONFIG SCSI=n [ . . . ]</p>
    <p>Tailored Configuration</p>
    <p>Identify in Source Code</p>
    <p>automatically derive</p>
    <p>ftrace</p>
    <p>observe debug symbols</p>
    <p>Holistic</p>
    <p>Variability Model</p>
    <p>establish</p>
    <p>employ SAT checker</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 6  11</p>
  </div>
  <div class="page">
    <p>Approach at a glance</p>
    <p>Specific Scenario</p>
    <p>CONFIG X86=y CONFIG SCSI=n [ . . . ]</p>
    <p>Tailored Configuration</p>
    <p>Identify in Source Code</p>
    <p>automatically derive</p>
    <p>ftrace</p>
    <p>observe debug symbols</p>
    <p>Holistic</p>
    <p>Variability Model</p>
    <p>establish</p>
    <p>employ SAT checker</p>
    <p>Compiled Linux Kernel</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 6  11</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Trace the required functionality from the application</p>
    <p>Traces need to be sufficiently complete  Best results with fairly homogeneous services</p>
    <p>Kernel with ftrace and debugging information available</p>
    <p>We have improved our implementation by now</p>
    <p>The holistic variability model must include constraints from:</p>
    <p>Kconfig feature dependencies among each other make files ( what Kconfig feature compiles this file) complicated CPP expressions and nested #ifdef blocks</p>
    <p>solved in previous work by the undertaker tool</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 7  11</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Trace the required functionality from the application</p>
    <p>Traces need to be sufficiently complete  Best results with fairly homogeneous services</p>
    <p>Kernel with ftrace and debugging information available</p>
    <p>We have improved our implementation by now</p>
    <p>The holistic variability model must include constraints from:</p>
    <p>Kconfig feature dependencies among each other make files ( what Kconfig feature compiles this file) complicated CPP expressions and nested #ifdef blocks</p>
    <p>solved in previous work by the undertaker tool</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 7  11</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Trace the required functionality from the application</p>
    <p>Traces need to be sufficiently complete  Best results with fairly homogeneous services</p>
    <p>Kernel with ftrace and debugging information available</p>
    <p>We have improved our implementation by now</p>
    <p>The holistic variability model must include constraints from:</p>
    <p>Kconfig feature dependencies among each other make files ( what Kconfig feature compiles this file) complicated CPP expressions and nested #ifdef blocks</p>
    <p>solved in previous work by the undertaker tool</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 7  11</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Standard LAMP (Linux, MySQL, Apache, PHP) System</p>
    <p>Standard setup with Dokuwiki and phpbb3 Google Skipfish to systematically trigger all functionality</p>
    <p>Trace contains 5.377 unique kernel functions</p>
    <p>Transformation into a configuration takes 69 seconds</p>
    <p>No performance impact observable:</p>
    <p>Sheet1</p>
    <p>Page 1</p>
    <p>Debian tailored</p>
    <p>requests per second</p>
    <p>re p</p>
    <p>lie s</p>
    <p>p e</p>
    <p>r se</p>
    <p>co n</p>
    <p>d</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 8  11</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Standard LAMP (Linux, MySQL, Apache, PHP) System</p>
    <p>Standard setup with Dokuwiki and phpbb3 Google Skipfish to systematically trigger all functionality</p>
    <p>Trace contains 5.377 unique kernel functions</p>
    <p>Transformation into a configuration takes 69 seconds</p>
    <p>No performance impact observable:</p>
    <p>Sheet1</p>
    <p>Page 1</p>
    <p>Debian tailored</p>
    <p>requests per second</p>
    <p>re p</p>
    <p>lie s</p>
    <p>p e</p>
    <p>r se</p>
    <p>co n</p>
    <p>d</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 8  11</p>
  </div>
  <div class="page">
    <p>Reduction of enabled features</p>
    <p>Kernel Shipped by Debian Loaded Kernel Modules 29 Kconfig options set to y 1,093 Kconfig options set to m 2,299 Functions with CVE entries 179</p>
    <p>Intermediary kernel used for tracing Loaded Kernel Modules 0 Kconfig options set to y 3,298 Kconfig options set to m 0</p>
    <p>Resulting application-tailored kernel Loaded Kernel Modules 0 Kconfig options set to y 379 Kconfig options set to m 0 Functions with CVE entries 162</p>
    <p>10 percent less functions with known vulnerabilities (using a semi-automated process to scan published CVE issues)</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 9  11</p>
  </div>
  <div class="page">
    <p>Reduction of enabled features</p>
    <p>Kernel Shipped by Debian Loaded Kernel Modules 29 Kconfig options set to y 1,093 Kconfig options set to m 2,299 Functions with CVE entries 179</p>
    <p>Intermediary kernel used for tracing Loaded Kernel Modules 0 Kconfig options set to y 3,298 Kconfig options set to m 0</p>
    <p>Resulting application-tailored kernel Loaded Kernel Modules 0 Kconfig options set to y 379 Kconfig options set to m 0 Functions with CVE entries 162</p>
    <p>10 percent less functions with known vulnerabilities (using a semi-automated process to scan published CVE issues)</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 9  11</p>
  </div>
  <div class="page">
    <p>Code Reduction</p>
    <p>Kernel Shipped by Debian Loaded Code 5,465,602 Bytes Total Loadable Code 42,188,538 Bytes</p>
    <p>Intermediary kernel used for tracing Loaded Code 36,341,888 Bytes Total Loadable Code 36,341,888 Bytes</p>
    <p>Resulting application-tailored kernel Loaded Code 3,990,153 Bytes Total Loadable Code 3,990,153 Bytes</p>
    <p>&gt; 90% less executable code</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 10  11</p>
  </div>
  <div class="page">
    <p>Code Reduction</p>
    <p>Kernel Shipped by Debian Loaded Code 5,465,602 Bytes Total Loadable Code 42,188,538 Bytes</p>
    <p>Intermediary kernel used for tracing Loaded Code 36,341,888 Bytes Total Loadable Code 36,341,888 Bytes</p>
    <p>Resulting application-tailored kernel Loaded Code 3,990,153 Bytes Total Loadable Code 3,990,153 Bytes</p>
    <p>&gt; 90% less executable code</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 10  11</p>
  </div>
  <div class="page">
    <p>Results and Future Work</p>
    <p>TCB is significantly smaller</p>
    <p>Easy to use: process is fully automated after tracing</p>
    <p>If necessary, the tailoring can guided with whitelists and blacklists</p>
    <p>Going further:</p>
    <p>More use-cases, also on real hardware Necessity of dedicated kernel for tracing? What config option shall be configured as module and what statically? Better metrics for measuring the attack surface improvements</p>
    <p>Questions?</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 11  11</p>
  </div>
  <div class="page">
    <p>Results and Future Work</p>
    <p>TCB is significantly smaller</p>
    <p>Easy to use: process is fully automated after tracing</p>
    <p>If necessary, the tailoring can guided with whitelists and blacklists</p>
    <p>Going further:</p>
    <p>More use-cases, also on real hardware Necessity of dedicated kernel for tracing? What config option shall be configured as module and what statically? Better metrics for measuring the attack surface improvements</p>
    <p>Questions?</p>
    <p>R. Tartler Automatic OS Kernel TCB Reduction by Leveraging Configurability (HOTDEP12) 11  11</p>
  </div>
</Presentation>
