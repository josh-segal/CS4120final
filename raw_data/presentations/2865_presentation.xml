<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Learning in situ: a randomized experiment in video streaming https://puffer.stanford.edu</p>
    <p>Francis Y. Yan, Hudson Ayers, Chenzhi Zhu, Sadjad Fouladi, James Hong, Keyi Zhang, Philip Levis, Keith Winstein</p>
    <p>Stanford University, Tsinghua University</p>
    <p>February 26, 2020</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 1 / 25</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Video streaming dominates Internet traffic  Adaptive bitrate (ABR) is a key algorithm to optimize users quality of experience (QoE)</p>
    <p>- decides the quality level of each video chunk to send - primary goals: higher video quality, fewer stalls - prior work: BBA [SIGCOMM 14], MPC [SIGCOMM 15], CS2P [SIGCOMM 16], Pensieve</p>
    <p>[SIGCOMM 17], Oboe [SIGCOMM 18]</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 2 / 25</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Video streaming dominates Internet traffic  Adaptive bitrate (ABR) is a key algorithm to optimize users quality of experience (QoE)</p>
    <p>- decides the quality level of each video chunk to send - primary goals: higher video quality, fewer stalls - prior work: BBA [SIGCOMM 14], MPC [SIGCOMM 15], CS2P [SIGCOMM 16], Pensieve</p>
    <p>[SIGCOMM 17], Oboe [SIGCOMM 18]</p>
    <p>chunk 1 chunk 2 chunk 3 chunk 4 chunk 5</p>
    <p>Time Francis Y. Yan (Stanford) February 26, 2020 2 / 25</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Video streaming dominates Internet traffic  Adaptive bitrate (ABR) is a key algorithm to optimize users quality of experience (QoE)</p>
    <p>- decides the quality level of each video chunk to send - primary goals: higher video quality, fewer stalls - prior work: BBA [SIGCOMM 14], MPC [SIGCOMM 15], CS2P [SIGCOMM 16], Pensieve</p>
    <p>[SIGCOMM 17], Oboe [SIGCOMM 18] vi</p>
    <p>de o</p>
    <p>ve rs</p>
    <p>io ns</p>
    <p>Time Francis Y. Yan (Stanford) February 26, 2020 2 / 25</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Video streaming dominates Internet traffic  Adaptive bitrate (ABR) is a key algorithm to optimize users quality of experience (QoE)</p>
    <p>- decides the quality level of each video chunk to send - primary goals: higher video quality, fewer stalls - prior work: BBA [SIGCOMM 14], MPC [SIGCOMM 15], CS2P [SIGCOMM 16], Pensieve</p>
    <p>[SIGCOMM 17], Oboe [SIGCOMM 18] vi</p>
    <p>de o</p>
    <p>ve rs</p>
    <p>io ns</p>
    <p>Time Francis Y. Yan (Stanford) February 26, 2020 2 / 25</p>
  </div>
  <div class="page">
    <p>Our research study on ABR algorithms</p>
    <p>What does it take to create a learned ABR algorithm that robustly performs well over the wild Internet?</p>
    <p>Over the last year, we have streamed 38.6 years of video to 63,508 distinct users</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 3 / 25</p>
  </div>
  <div class="page">
    <p>Takeaways</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 4 / 25</p>
  </div>
  <div class="page">
    <p>Takeaways</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 5 / 25</p>
  </div>
  <div class="page">
    <p>Puffer: a live streaming platform running a randomized experiment</p>
    <p>Free live TV streaming website (puffer.stanford.edu)  Opened to public December 2018  More than 100,000 users today  User sessions are randomized to different algorithms</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 6 / 25</p>
  </div>
  <div class="page">
    <p>Google ad for tv streaming</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 7 / 25</p>
  </div>
  <div class="page">
    <p>Press articles</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 7 / 25</p>
  </div>
  <div class="page">
    <p>Puffer architecture</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 8 / 25</p>
  </div>
  <div class="page">
    <p>Confidence intervals in video streaming are bigger than expected</p>
    <p>Existing ABR algorithms found benefits like 10%20% based on experiments lasting hours or days between a few network nodes</p>
    <p>We found: 2 years of data per scheme are needed to measure 20% precision</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 9 / 25</p>
  </div>
  <div class="page">
    <p>Confidence intervals in video streaming are bigger than expected</p>
    <p>Results on the day of Jan. 26, 2019, with 17 days of video streamed to 600 users</p>
    <p>A ve</p>
    <p>ra ge</p>
    <p>S SI</p>
    <p>M (d</p>
    <p>B )</p>
    <p>Time spent stalled (%)</p>
    <p>BBA</p>
    <p>MPC-HM Pensieve</p>
    <p>Fugu</p>
    <p>RobustMPC-HM</p>
    <p>B et</p>
    <p>te r Q</p>
    <p>oE</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 10 / 25</p>
  </div>
  <div class="page">
    <p>Confidence intervals in video streaming are bigger than expected</p>
    <p>Results in the week starting from Jan. 26, 2019, streaming 42 days of video</p>
    <p>A ve</p>
    <p>ra ge</p>
    <p>S SI</p>
    <p>M (d</p>
    <p>B )</p>
    <p>Time spent stalled (%)</p>
    <p>BBA</p>
    <p>MPC-HM</p>
    <p>Pensieve</p>
    <p>Fugu</p>
    <p>RobustMPC-HM B et</p>
    <p>te r Q</p>
    <p>oE</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 11 / 25</p>
  </div>
  <div class="page">
    <p>Confidence intervals in video streaming are bigger than expected</p>
    <p>Results in the month starting from Jan. 26, 2019, streaming 169 days of video</p>
    <p>A ve</p>
    <p>ra ge</p>
    <p>S SI</p>
    <p>M (d</p>
    <p>B )</p>
    <p>Time spent stalled (%)</p>
    <p>BBA MPC-HM</p>
    <p>Pensieve</p>
    <p>Fugu</p>
    <p>RobustMPC-HM</p>
    <p>B et</p>
    <p>te r Q</p>
    <p>oE</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 12 / 25</p>
  </div>
  <div class="page">
    <p>Confidence intervals in video streaming are bigger than expected</p>
    <p>Results in an eight-month period after Jan. 26, 2019, streaming &gt; 13 years of video</p>
    <p>A ve</p>
    <p>ra ge</p>
    <p>S SI</p>
    <p>M (d</p>
    <p>B )</p>
    <p>Time spent stalled (%)</p>
    <p>BBA MPC-HM</p>
    <p>Pensieve</p>
    <p>Fugu</p>
    <p>RobustMPC-HM B et</p>
    <p>te r Q</p>
    <p>oE</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 13 / 25</p>
  </div>
  <div class="page">
    <p>Confidence intervals in video streaming are bigger than expected</p>
    <p>Need 2 years of video per scheme to reliably measure a 20% difference</p>
    <p>Reason: Internet is way more noisy and heavy-tailed than we thought</p>
    <p>- Only 4% of the 637,189 streams had any stalls - Distributions of throughputs and watch times</p>
    <p>are highly skewed</p>
    <p>A ve</p>
    <p>ra ge</p>
    <p>S SI</p>
    <p>M (d</p>
    <p>B )</p>
    <p>Time spent stalled (%)</p>
    <p>BBA</p>
    <p>MPC-HM</p>
    <p>Pensieve</p>
    <p>Fugu</p>
    <p>RobustMPC-HMBe tte</p>
    <p>r Q oE</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 14 / 25</p>
  </div>
  <div class="page">
    <p>Takeaways</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 15 / 25</p>
  </div>
  <div class="page">
    <p>Takeaways</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 15 / 25</p>
  </div>
  <div class="page">
    <p>BBA [SIGCOMM 14]</p>
    <p>BBA is a simple buffer-based ABR algorithm</p>
    <p>Playback buffer</p>
    <p>V id</p>
    <p>eo b</p>
    <p>itr at</p>
    <p>e</p>
    <p>BmaxBmin</p>
    <p>Rmin</p>
    <p>Rmax</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 16 / 25</p>
  </div>
  <div class="page">
    <p>MPC-HM [SIGCOMM 15]</p>
    <p>MPC-HM predicts throughput using the harmonic mean (HM) of past throughputs - assumes throughput can be modeled with HM - assumes transmission time = predicted throughput  chunk size</p>
    <p>Harmonic Mean Throughput Predictor MPC Controller</p>
    <p>Video Streaming Service</p>
    <p>bitrate selection</p>
    <p>predicted throughput</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 17 / 25</p>
  </div>
  <div class="page">
    <p>MPC-HM [SIGCOMM 15]</p>
    <p>MPC-HM predicts throughput using the harmonic mean (HM) of past throughputs - assumes throughput can be modeled with HM ? - assumes transmission time = predicted throughput  chunk size ?</p>
    <p>Harmonic Mean Throughput Predictor MPC Controller</p>
    <p>Video Streaming Service</p>
    <p>bitrate selection</p>
    <p>predicted throughput</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 17 / 25</p>
  </div>
  <div class="page">
    <p>Pensieve [SIGCOMM 17]</p>
    <p>Pensieve learns an end-to-end ABR control - requires network simulators as training environments - assumes training in simulation generalizes to wild Internet</p>
    <p>ABR Controller (Neural Net)</p>
    <p>Video Streaming Service</p>
    <p>bitrate selection</p>
    <p>Network Simulator update model</p>
    <p>offline training</p>
    <p>online control</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 18 / 25</p>
  </div>
  <div class="page">
    <p>Pensieve [SIGCOMM 17]</p>
    <p>Pensieve learns an end-to-end ABR control - requires network simulators as training environments - assumes training in simulation generalizes to wild Internet ?</p>
    <p>ABR Controller (Neural Net)</p>
    <p>Video Streaming Service</p>
    <p>bitrate selection</p>
    <p>Network Simulator update model</p>
    <p>offline training</p>
    <p>online control</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 18 / 25</p>
  </div>
  <div class="page">
    <p>SSIM vs stalls</p>
    <p>A ve</p>
    <p>ra ge</p>
    <p>S SI</p>
    <p>M (d</p>
    <p>B )</p>
    <p>Time spent stalled (%)</p>
    <p>BBA</p>
    <p>MPC-HM</p>
    <p>Pensieve</p>
    <p>RobustMPC-HMBe tte</p>
    <p>r Q oE</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 19 / 25</p>
  </div>
  <div class="page">
    <p>Takeaways</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 20 / 25</p>
  </div>
  <div class="page">
    <p>Takeaways</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 20 / 25</p>
  </div>
  <div class="page">
    <p>Fugu uses classical model predictive control</p>
    <p>Fugu replaces the throughput predictor in MPC-HM with a transmission time predictor</p>
    <p>Transmission Time Predictor (Neural Net) MPC Controller</p>
    <p>Video Streaming Service</p>
    <p>bitrate selectionpredicted</p>
    <p>transmission times</p>
    <p>chunk sizes</p>
    <p>training data</p>
    <p>offline training</p>
    <p>online control</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 21 / 25</p>
  </div>
  <div class="page">
    <p>Fugus transmission time predictor (TTP)</p>
    <p>Neural network predicts how long would each chunk take?  Input:</p>
    <p>- sizes and transmission times of past chunks - size of a chunk to be transmitted (not a throughput predictor) - low-level TCP statistics (min RTT, RTT, CWND, packets in flight, delivery rate)</p>
    <p>Output: - probability distribution over transmission time (not a point estimate)</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 22 / 25</p>
  </div>
  <div class="page">
    <p>Fugus transmission time predictor (TTP)</p>
    <p>Neural network predicts how long would each chunk take?  Input:</p>
    <p>- sizes and transmission times of past chunks - size of a chunk to be transmitted (not a throughput predictor) - low-level TCP statistics (min RTT, RTT, CWND, packets in flight, delivery rate)</p>
    <p>Output: - probability distribution over transmission time (not a point estimate)</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 22 / 25</p>
  </div>
  <div class="page">
    <p>Fugus transmission time predictor (TTP)</p>
    <p>Neural network predicts how long would each chunk take?  Input:</p>
    <p>- sizes and transmission times of past chunks - size of a chunk to be transmitted (not a throughput predictor) - low-level TCP statistics (min RTT, RTT, CWND, packets in flight, delivery rate)</p>
    <p>Output: - probability distribution over transmission time (not a point estimate)</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 22 / 25</p>
  </div>
  <div class="page">
    <p>Learning TTP in situ</p>
    <p>Training: supervised learning in situ (in place) on real data from deployment environment - chunk-by-chunk series of each individual video stream - chunk i: size, timestamp sent, timestamp acknowledged, TCP statistics right before sending</p>
    <p>Learning in situ does not replay throughput traces or require network simulators - we dont know how to faithfully simulate the Internet</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 23 / 25</p>
  </div>
  <div class="page">
    <p>SSIM vs stalls</p>
    <p>A ve</p>
    <p>ra ge</p>
    <p>S SI</p>
    <p>M (d</p>
    <p>B )</p>
    <p>Time spent stalled (%)</p>
    <p>BBA</p>
    <p>MPC-HM</p>
    <p>Pensieve</p>
    <p>RobustMPC-HMBe tte</p>
    <p>r Q oE</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 24 / 25</p>
  </div>
  <div class="page">
    <p>SSIM vs stalls</p>
    <p>A ve</p>
    <p>ra ge</p>
    <p>S SI</p>
    <p>M (d</p>
    <p>B )</p>
    <p>Time spent stalled (%)</p>
    <p>BBA</p>
    <p>MPC-HM</p>
    <p>Pensieve</p>
    <p>Fugu</p>
    <p>RobustMPC-HMBe tte</p>
    <p>r Q oE</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 24 / 25</p>
  </div>
  <div class="page">
    <p>What happens if Pensieve is retrained on Puffer traces?</p>
    <p>A ve</p>
    <p>ra ge</p>
    <p>S SI</p>
    <p>M (d</p>
    <p>B )</p>
    <p>Time spent stalled (%)</p>
    <p>BBA</p>
    <p>Pensieve Pensieve (Puffer traces)</p>
    <p>Fugu</p>
    <p>B et</p>
    <p>te r Q</p>
    <p>oE</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 24 / 25</p>
  </div>
  <div class="page">
    <p>Takeaways</p>
    <p>- we need 2 years of data per scheme to measure 20% precision</p>
    <p>- algorithms that make fewer assumptions are more general?</p>
    <p>- we dont know how to faithfully simulate the Internet</p>
    <p>Puffer (puffer.stanford.edu) is an open research platform for - ABR schemes, network and throughput prediction, congestion control</p>
    <p>Thank You: Emily Marx, Puffer participants, NSF, Google, Huawei, VMware, Dropbox, Facebook, Stanford Platform Lab</p>
    <p>Francis Y. Yan (Stanford) February 26, 2020 25 / 25</p>
  </div>
</Presentation>
