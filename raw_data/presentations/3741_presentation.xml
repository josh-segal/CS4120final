<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Cache Telepathy: Leveraging Shared Resource Attacks to Learn DNN Architectures</p>
    <p>Mengjia Yan*, Christopher W. Fletcher, Josep Torrellas</p>
    <p>University of Illinois at Urbana-Champaign</p>
    <p>*Massachusetts Institute of Technology</p>
    <p>USENIX Security, August 2020</p>
  </div>
  <div class="page">
    <p>Cache Telepathy Overview</p>
    <p>DNN Model Extraction attack = steal DNN architectures + re-train models</p>
    <p>What is the architecture of a DNN:  Number of layers, layer type  Number of neurons per layer, number of filters, filter size, etc.</p>
    <p>This paper: cache side channel attacks to recover DNN architecture</p>
    <p>Cache Telepathy - USENIX Security'202</p>
  </div>
  <div class="page">
    <p>Machine Leaning is Ubiquitous</p>
    <p>Deep Neural Networks (DNNs)  Widely used for image recognition, health care, recommendation, etc.</p>
    <p>Cache Telepathy - USENIX Security'203</p>
  </div>
  <div class="page">
    <p>Machine Leaning is Ubiquitous</p>
    <p>Deep Neural Networks (DNNs)  Widely used for image recognition, health care, recommendation, etc.</p>
    <p>MLaaS (Machine Learning as a Service)</p>
    <p>Cache Telepathy - USENIX Security'204</p>
  </div>
  <div class="page">
    <p>Machine Leaning is Ubiquitous</p>
    <p>Deep Neural Networks (DNNs)  Widely used for image recognition, health care, recommendation, etc.</p>
    <p>MLaaS (Machine Learning as a Service)</p>
    <p>Cache Telepathy - USENIX Security'205</p>
    <p>input</p>
    <p>output</p>
    <p>Untrusted Users</p>
  </div>
  <div class="page">
    <p>Security Problems of MLaaS  Model extraction attacks:  Obtain a substitute model that works the same as the black-box model</p>
    <p>Cache Telepathy - USENIX Security'20</p>
    <p>Black-box model</p>
    <p>input</p>
    <p>output</p>
    <p>Model Extraction Attack</p>
  </div>
  <div class="page">
    <p>Security Problems of MLaaS  Model extraction attacks:  Obtain a substitute model that works the same as the black-box model  The stepping stone for many other ML attacks</p>
    <p>Cache Telepathy - USENIX Security'20</p>
    <p>Black-box model</p>
    <p>input</p>
    <p>output</p>
    <p>Model Extraction Attack</p>
    <p>Membership inference attacks [S&amp;P17, Arxiv18];</p>
    <p>Training parameters stealing attacks [S&amp;P18]</p>
    <p>Adversarial attacks [ICLR15]</p>
  </div>
  <div class="page">
    <p>Security Problems of MLaaS  Model extraction attacks:  Obtain a substitute model that works the same as the black-box model  The stepping stone for many other ML attacks  Model extraction attack = steal DNN architectures + re-train models</p>
    <p>Cache Telepathy - USENIX Security'20</p>
    <p>Black-box model</p>
    <p>input</p>
    <p>output</p>
    <p>Model Extraction Attack</p>
    <p>Membership inference attacks [S&amp;P17, Arxiv18];</p>
    <p>Training parameters stealing attacks [S&amp;P18]</p>
    <p>Adversarial attacks [ICLR15]</p>
  </div>
  <div class="page">
    <p>DNN Architectures</p>
    <p>Number of layers  Layer types  Hyper-parameters for each layer</p>
    <p>Fully-connected layers: number of neurons  Convolutional layers: filter size, number of</p>
    <p>filters  Connections between layers ..</p>
    <p>Cache Telepathy - USENIX Security'209</p>
  </div>
  <div class="page">
    <p>DNN Architectures</p>
    <p>Number of layers  Layer types  Hyper-parameters for each layer</p>
    <p>Fully-connected layers: number of neurons  Convolutional layers: filter size, number of</p>
    <p>filters  Connections between layers ..</p>
    <p>Cache Telepathy - USENIX Security'2010</p>
    <p>VGG-16</p>
  </div>
  <div class="page">
    <p>DNN Architectures</p>
    <p>Number of layers  Layer types  Hyper-parameters for each layer</p>
    <p>Fully-connected layers: number of neurons  Convolutional layers: filter size, number of</p>
    <p>filters  Connections between layers ..</p>
    <p>Cache Telepathy - USENIX Security'2011</p>
    <p>VGG-16</p>
    <p>Example: 16 layers --&gt; 5 trillion architectures</p>
  </div>
  <div class="page">
    <p>DNN Architectures</p>
    <p>Number of layers  Layer types  Hyper-parameters for each layer</p>
    <p>Fully-connected layers: number of neurons  Convolutional layers: filter size, number of</p>
    <p>filters  Connections between layers ..</p>
    <p>Cache Telepathy - USENIX Security'2012</p>
    <p>VGG-16</p>
    <p>ResNet module</p>
    <p>Example: 16 layers --&gt; 5 trillion architectures</p>
  </div>
  <div class="page">
    <p>DNN Architectures</p>
    <p>Number of layers  Layer types  Hyper-parameters for each layer</p>
    <p>Fully-connected layers: number of neurons  Convolutional layers: filter size, number of</p>
    <p>filters  Connections between layers ..</p>
    <p>Cache Telepathy - USENIX Security'2013</p>
    <p>VGG-16</p>
    <p>ResNet module</p>
    <p>Cache Telepathy needs to extract a multitude of complicated parameters.</p>
    <p>Example: 16 layers --&gt; 5 trillion architectures</p>
  </div>
  <div class="page">
    <p>Contributions</p>
    <p>Cache Telepathy can substantially reduce the search space of DNN architectures  When attacking VGG-16, we can reduce the search space from 5.410!&quot; to 16</p>
    <p>Cache Telepathy - USENIX Security'2014</p>
  </div>
  <div class="page">
    <p>Contributions</p>
    <p>Cache Telepathy can substantially reduce the search space of DNN architectures  When attacking VGG-16, we can reduce the search space from 5.410!&quot; to 16</p>
    <p>Insights:  We identified DNN inference relies heavily on blocked matrix multiplication (GEMM)  We provide a detailed security analysis of blocked GEMM  We use cache side channel attacks (Flush+Reload, Prime+Probe) to extract GEMM</p>
    <p>matrix parameters and reconstruct DNN architectures</p>
    <p>Cache Telepathy - USENIX Security'2015</p>
  </div>
  <div class="page">
    <p>Contributions</p>
    <p>Cache Telepathy can substantially reduce the search space of DNN architectures  When attacking VGG-16, we can reduce the search space from 5.410!&quot; to 16</p>
    <p>Insights:  We identified DNN inference relies heavily on blocked matrix multiplication (GEMM)  We provide a detailed security analysis of blocked GEMM  We use cache side channel attacks (Flush+Reload, Prime+Probe) to extract GEMM</p>
    <p>matrix parameters and reconstruct DNN architectures</p>
    <p>Cache Telepathy - USENIX Security'2016</p>
    <p>Cache Telepathy works on various ML frameworks and BLAS libraries.</p>
  </div>
  <div class="page">
    <p>Mapping DNN Architectures to Matrix Parameters</p>
    <p>Fully-connected layers</p>
    <p>Cache Telepathy - USENIX Security'2017</p>
    <p>Input</p>
    <p>Output</p>
    <p>Weights</p>
  </div>
  <div class="page">
    <p>Mapping DNN Architectures to Matrix Parameters</p>
    <p>Fully-connected layers</p>
    <p>Cache Telepathy - USENIX Security'2018</p>
    <p>Input</p>
    <p>Output</p>
    <p>Weights Multiplyand-Add</p>
  </div>
  <div class="page">
    <p>Mapping DNN Architectures to Matrix Parameters</p>
    <p>Fully-connected layers</p>
    <p>Cache Telepathy - USENIX Security'2019</p>
    <p>Input</p>
    <p>Output</p>
    <p>Weights</p>
    <p>Number of neurons at current layer</p>
    <p>Multiplyand-Add</p>
  </div>
  <div class="page">
    <p>Mapping DNN Architectures to Matrix Parameters</p>
    <p>Fully-connected layers</p>
    <p>Cache Telepathy - USENIX Security'2020</p>
    <p>Input</p>
    <p>Input</p>
    <p>Output</p>
    <p>Weights</p>
    <p>Number of neurons at current layer</p>
    <p>B at</p>
    <p>ch s</p>
    <p>iz e</p>
    <p>Multiplyand-Add</p>
  </div>
  <div class="page">
    <p>Mapping DNN Architectures to Matrix Parameters</p>
    <p>Fully-connected layers</p>
    <p>Cache Telepathy - USENIX Security'2021</p>
    <p>Input</p>
    <p>Input</p>
    <p>Output</p>
    <p>Weights</p>
    <p>Number of neurons at current layer</p>
    <p>B at</p>
    <p>ch s</p>
    <p>iz e</p>
    <p>Weight</p>
    <p>!</p>
    <p>Number of neurons at next layer</p>
    <p>Multiplyand-Add</p>
  </div>
  <div class="page">
    <p>Mapping DNN Architectures to Matrix Parameters</p>
    <p>Fully-connected layers</p>
    <p>Cache Telepathy - USENIX Security'2022</p>
    <p>Input</p>
    <p>Input</p>
    <p>Output</p>
    <p>Weights</p>
    <p>Number of neurons at current layer</p>
    <p>B at</p>
    <p>ch s</p>
    <p>iz e</p>
    <p>Weight</p>
    <p>!</p>
    <p>Number of neurons at next layer</p>
    <p>Output</p>
    <p>=Multiplyand-Add</p>
  </div>
  <div class="page">
    <p>Mapping DNN Architectures to Matrix Parameters</p>
    <p>Fully-connected layers</p>
    <p>Mapping relationship</p>
    <p>Cache Telepathy - USENIX Security'20</p>
    <p>Architecture Parameters Matrix Parameters</p>
    <p>#layers #GEMM calls</p>
    <p>#neurons per layer #columns in Input matrix</p>
    <p>Input</p>
    <p>Input</p>
    <p>Output</p>
    <p>Weights</p>
    <p>Number of neurons at current layer</p>
    <p>B at</p>
    <p>ch s</p>
    <p>iz e</p>
    <p>Weight</p>
    <p>!</p>
    <p>Number of neurons at next layer</p>
    <p>Output</p>
    <p>=Multiplyand-Add</p>
  </div>
  <div class="page">
    <p>Mapping DNN Architectures to Matrix Parameters  Mapping relationship between DNN architecture parameters and matrix</p>
    <p>parameters for fully-connected (FC), convolutional and pooling layers.</p>
    <p>Cache Telepathy - USENIX Security'2024</p>
  </div>
  <div class="page">
    <p>Attacking Blocked Matrix Multiplication</p>
    <p>GEMM is aggressively optimized for multi-level caches using Gotos algorithm [1]</p>
    <p>Cache Telepathy - USENIX Security'2025</p>
    <p>[1] Goto et al. Anatomy of High-performance Matrix Multiplication. ACM Trans. Math. Softw., 2008.</p>
  </div>
  <div class="page">
    <p>Attacking Blocked Matrix Multiplication</p>
    <p>GEMM is aggressively optimized for multi-level caches using Gotos algorithm [1]  Implement as a nested loop  Attack by counting iterations to infer the number of blocks</p>
    <p>Cache Telepathy - USENIX Security'2026</p>
    <p>[1] Goto et al. Anatomy of High-performance Matrix Multiplication. ACM Trans. Math. Softw., 2008.</p>
  </div>
  <div class="page">
    <p>Blocked Matrix Multiplication</p>
    <p>Cache Telepathy - USENIX Security'2027</p>
    <p>#% %&amp;!</p>
    <p>Matrix A Matrix B</p>
    <p>P, Q, R, UNROLL are block sizes.</p>
  </div>
  <div class="page">
    <p>Blocked Matrix Multiplication</p>
    <p>Cache Telepathy - USENIX Security'2028</p>
    <p>#% %&amp;!</p>
    <p>Matrix A Matrix B</p>
    <p>P, Q, R, UNROLL are block sizes.</p>
    <p>macro-kernel !#</p>
    <p>Buffer A Buffer B</p>
    <p>'(</p>
  </div>
  <div class="page">
    <p>Blocked Matrix Multiplication</p>
    <p>Cache Telepathy - USENIX Security'2029</p>
    <p>#% %&amp;!</p>
    <p>Matrix A Matrix B</p>
    <p>%(</p>
    <p>for j=0,n,R do //Loop 1</p>
    <p>end</p>
    <p>P, Q, R, UNROLL are block sizes.</p>
    <p>macro-kernel !#</p>
    <p>Buffer A Buffer B</p>
    <p>'(</p>
  </div>
  <div class="page">
    <p>#% ! %(</p>
    <p>Blocked Matrix Multiplication</p>
    <p>Cache Telepathy - USENIX Security'2030</p>
    <p>for j=0,n,R do //Loop 1</p>
    <p>end</p>
    <p>P, Q, R, UNROLL are block sizes.</p>
    <p>macro-kernel !#</p>
    <p>Buffer A Buffer B</p>
    <p>'(</p>
  </div>
  <div class="page">
    <p>#% ! %(</p>
    <p>Blocked Matrix Multiplication</p>
    <p>Cache Telepathy - USENIX Security'2031</p>
    <p># '</p>
    <p>'(</p>
    <p>for j=0,n,R do //Loop 1 for l=0,k,Q do //Loop 2</p>
    <p>end end</p>
    <p>P, Q, R, UNROLL are block sizes.</p>
    <p>macro-kernel !#</p>
    <p>Buffer A Buffer B</p>
    <p>'(</p>
  </div>
  <div class="page">
    <p>!</p>
    <p>Blocked Matrix Multiplication</p>
    <p>Cache Telepathy - USENIX Security'2032</p>
    <p>for j=0,n,R do //Loop 1 for l=0,k,Q do //Loop 2</p>
    <p>end end</p>
    <p># '</p>
    <p>'(</p>
    <p>macro-kernel !#</p>
    <p>Buffer A Buffer B</p>
    <p>'(</p>
    <p>P, Q, R, UNROLL are block sizes.</p>
  </div>
  <div class="page">
    <p>!</p>
    <p>Blocked Matrix Multiplication</p>
    <p>Cache Telepathy - USENIX Security'2033</p>
    <p>for j=0,n,R do //Loop 1 for l=0,k,Q do //Loop 2</p>
    <p>end end</p>
    <p># '</p>
    <p>'(!#</p>
    <p>macro-kernel !#</p>
    <p>Buffer A Buffer B</p>
    <p>'(</p>
    <p>P, Q, R, UNROLL are block sizes.</p>
  </div>
  <div class="page">
    <p>!</p>
    <p>Blocked Matrix Multiplication</p>
    <p>Cache Telepathy - USENIX Security'2034</p>
    <p>for j=0,n,R do //Loop 1 for l=0,k,Q do //Loop 2</p>
    <p>//Loop 3.1 itcopy(A[0,l],buf _A)</p>
    <p>end end</p>
    <p># '</p>
    <p>'(!#</p>
    <p>macro-kernel !#</p>
    <p>Buffer A Buffer B</p>
    <p>'(</p>
    <p>P, Q, R, UNROLL are block sizes.</p>
  </div>
  <div class="page">
    <p>!</p>
    <p>Blocked Matrix Multiplication</p>
    <p>Cache Telepathy - USENIX Security'2035</p>
    <p>for j=0,n,R do //Loop 1 for l=0,k,Q do //Loop 2</p>
    <p>//Loop 3.1 itcopy(A[0,l],buf _A)</p>
    <p>end end</p>
    <p># '</p>
    <p>'(!#</p>
    <p>macro-kernel !#</p>
    <p>Buffer A Buffer B</p>
    <p>'(</p>
    <p>!&quot;#$%%</p>
    <p>P, Q, R, UNROLL are block sizes.</p>
  </div>
  <div class="page">
    <p>!</p>
    <p>Blocked Matrix Multiplication</p>
    <p>Cache Telepathy - USENIX Security'2036</p>
    <p>for j=0,n,R do //Loop 1 for l=0,k,Q do //Loop 2</p>
    <p>//Loop 3.1 itcopy(A[0,l],buf _A) for jj=j,j+R,UNROLL do //Loop 4</p>
    <p>oncopy(B[l,jj],buf _B) kernel(buf_A,buf_B)</p>
    <p>end</p>
    <p>end end</p>
    <p># '</p>
    <p>'(!#</p>
    <p>macro-kernel !#</p>
    <p>Buffer A Buffer B</p>
    <p>'(</p>
    <p>!&quot;#$%%</p>
    <p>P, Q, R, UNROLL are block sizes.</p>
  </div>
  <div class="page">
    <p>!</p>
    <p>Blocked Matrix Multiplication</p>
    <p>Cache Telepathy - USENIX Security'2037</p>
    <p>for j=0,n,R do //Loop 1 for l=0,k,Q do //Loop 2</p>
    <p>//Loop 3.1 itcopy(A[0,l],buf _A) for jj=j,j+R,UNROLL do //Loop 4</p>
    <p>oncopy(B[l,jj],buf _B) kernel(buf_A,buf_B)</p>
    <p>end</p>
    <p>end end</p>
    <p># '</p>
    <p>'(!#</p>
    <p>macro-kernel !#</p>
    <p>Buffer A Buffer B</p>
    <p>'(</p>
    <p>!&quot;#$%%</p>
    <p>P, Q, R, UNROLL are block sizes.</p>
  </div>
  <div class="page">
    <p>!</p>
    <p>Blocked Matrix Multiplication</p>
    <p>Cache Telepathy - USENIX Security'2038</p>
    <p>for j=0,n,R do //Loop 1 for l=0,k,Q do //Loop 2</p>
    <p>//Loop 3.1 itcopy(A[0,l],buf _A) for jj=j,j+R,UNROLL do //Loop 4</p>
    <p>oncopy(B[l,jj],buf _B) kernel(buf_A,buf_B)</p>
    <p>end for i=0,m,P do //Loop 3.2</p>
    <p>itcopy(A[i,l],buf _A) kernel(buf_A,buf_B)</p>
    <p>end end</p>
    <p>end</p>
    <p># '</p>
    <p>'(!#</p>
    <p>macro-kernel !#</p>
    <p>Buffer A Buffer B</p>
    <p>'(</p>
    <p>!&quot;#$%%</p>
    <p>P, Q, R, UNROLL are block sizes.</p>
  </div>
  <div class="page">
    <p>Attacking Blocked Matrix Multiplication  Extract matrix parameters by counting iterations of loops</p>
    <p>for j=0,n,R do //Loop 1 for l=0,k,Q do //Loop 2</p>
    <p>//Loop 3.1</p>
    <p>itcopy(A[0,l],buf _A) for jj=j,j+R,UNROLL do //Loop 4</p>
    <p>oncopy(B[l,jj],buf _B) kernel(buf_A,buf_B)</p>
    <p>end for i=0,m,P do //Loop 3.2</p>
    <p>itcopy(A[i,l],buf _A) kernel(buf_A,buf_B)</p>
    <p>end end</p>
    <p>end</p>
    <p>Cache Telepathy - USENIX Security'20</p>
  </div>
  <div class="page">
    <p>Attacking Blocked Matrix Multiplication  Extract matrix parameters by counting iterations of loops</p>
    <p>for j=0,n,R do //Loop 1 for l=0,k,Q do //Loop 2</p>
    <p>//Loop 3.1</p>
    <p>itcopy(A[0,l],buf _A) for jj=j,j+R,UNROLL do //Loop 4</p>
    <p>oncopy(B[l,jj],buf _B) kernel(buf_A,buf_B)</p>
    <p>end for i=0,m,P do //Loop 3.2</p>
    <p>itcopy(A[i,l],buf _A) kernel(buf_A,buf_B)</p>
    <p>end end</p>
    <p>end</p>
    <p>itcopy</p>
    <p>itcopy</p>
    <p>oncopy</p>
    <p>kernel</p>
    <p>kernel</p>
    <p>Cache Telepathy - USENIX Security'20</p>
    <p>Dynamic Call Graph (DCG)</p>
  </div>
  <div class="page">
    <p>Attacking Blocked Matrix Multiplication  Extract matrix parameters by counting iterations of loops</p>
    <p>for j=0,n,R do //Loop 1 for l=0,k,Q do //Loop 2</p>
    <p>//Loop 3.1</p>
    <p>itcopy(A[0,l],buf _A) for jj=j,j+R,UNROLL do //Loop 4</p>
    <p>oncopy(B[l,jj],buf _B) kernel(buf_A,buf_B)</p>
    <p>end for i=0,m,P do //Loop 3.2</p>
    <p>itcopy(A[i,l],buf _A) kernel(buf_A,buf_B)</p>
    <p>end end</p>
    <p>end</p>
    <p>itcopy</p>
    <p>itcopy</p>
    <p>oncopy</p>
    <p>kernel</p>
    <p>kernel</p>
    <p>#pairs=iter4</p>
    <p>#pairs=iter3-1</p>
    <p>Cache Telepathy - USENIX Security'20</p>
    <p>Dynamic Call Graph (DCG)</p>
  </div>
  <div class="page">
    <p>Attacking Blocked Matrix Multiplication  Extract matrix parameters by counting iterations of loops</p>
    <p>for j=0,n,R do //Loop 1 for l=0,k,Q do //Loop 2</p>
    <p>//Loop 3.1</p>
    <p>itcopy(A[0,l],buf _A) for jj=j,j+R,UNROLL do //Loop 4</p>
    <p>oncopy(B[l,jj],buf _B) kernel(buf_A,buf_B)</p>
    <p>end for i=0,m,P do //Loop 3.2</p>
    <p>itcopy(A[i,l],buf _A) kernel(buf_A,buf_B)</p>
    <p>end end</p>
    <p>end</p>
    <p>itcopy</p>
    <p>itcopy</p>
    <p>oncopy</p>
    <p>kernel</p>
    <p>kernel</p>
    <p>#pairs=iter4</p>
    <p>#pairs=iter3-1</p>
    <p>#sequences =iter1*iter2</p>
    <p>Cache Telepathy - USENIX Security'20</p>
    <p>Dynamic Call Graph (DCG)</p>
  </div>
  <div class="page">
    <p>Attacking Blocked Matrix Multiplication  Extract matrix parameters by counting iterations of loops</p>
    <p>for j=0,n,R do //Loop 1 for l=0,k,Q do //Loop 2</p>
    <p>//Loop 3.1</p>
    <p>itcopy(A[0,l],buf _A) for jj=j,j+R,UNROLL do //Loop 4</p>
    <p>oncopy(B[l,jj],buf _B) kernel(buf_A,buf_B)</p>
    <p>end for i=0,m,P do //Loop 3.2</p>
    <p>itcopy(A[i,l],buf _A) kernel(buf_A,buf_B)</p>
    <p>end end</p>
    <p>end</p>
    <p>itcopy</p>
    <p>itcopy</p>
    <p>oncopy</p>
    <p>kernel</p>
    <p>kernel</p>
    <p>#pairs=iter4</p>
    <p>#pairs=iter3-1</p>
    <p>#sequences =iter1*iter2Both OpenBLAS and Intel MKL follow this DCG.</p>
    <p>Cache Telepathy - USENIX Security'20</p>
    <p>Dynamic Call Graph (DCG)</p>
  </div>
  <div class="page">
    <p>Number of Architectures to Search</p>
    <p>Cache Telepathy - USENIX Security'2044</p>
    <p>core</p>
    <p>L1/L2</p>
    <p>L3</p>
    <p>core</p>
    <p>L1/L2</p>
  </div>
  <div class="page">
    <p>Number of Architectures to Search</p>
    <p>Cache Telepathy - USENIX Security'2045</p>
    <p>core</p>
    <p>L1/L2</p>
    <p>L3</p>
    <p>core</p>
    <p>L1/L2</p>
  </div>
  <div class="page">
    <p>Number of Architectures to Search</p>
    <p>Cache Telepathy - USENIX Security'2046</p>
    <p>core</p>
    <p>L1/L2</p>
    <p>L3</p>
    <p>core</p>
    <p>L1/L2</p>
    <p>ResNet-50 VGG-16</p>
    <p>Original: No Cache Telepathy &gt; 610!&quot; &gt; 5.410#$</p>
  </div>
  <div class="page">
    <p>Number of Architectures to Search</p>
    <p>Cache Telepathy - USENIX Security'2047</p>
    <p>core</p>
    <p>L1/L2</p>
    <p>L3</p>
    <p>core</p>
    <p>L1/L2</p>
    <p>ResNet-50 VGG-16</p>
    <p>Original: No Cache Telepathy &gt; 610!&quot; &gt; 5.410#$ ResNet-50 VGG-16</p>
    <p>Original: No Cache Telepathy &gt; 610!&quot; &gt; 5.410#$</p>
    <p>Flush+Reload OpenBLAS 512 16</p>
    <p>MKL 6144 64</p>
    <p>Prime+Probe OpenBLAS 512 16</p>
    <p>MKL 5.710#% 1936</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Cache-based side channel attacks can be used to efficiently recover DNN architectures  DNN architectures have a multitude of parameters, which can be</p>
    <p>mapped to GEMM parameters  The state-of-the-art blocked GEMM implementation can leak matrix</p>
    <p>parameters via cache access patterns</p>
    <p>Cache Telepathy - USENIX Security'2048</p>
    <p>core</p>
    <p>L1/L2</p>
    <p>L3</p>
    <p>core</p>
    <p>L1/L2</p>
  </div>
</Presentation>
