<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Balancing on the edge Transport affinity without network state</p>
    <p>Joo Taveira Arajo, Lorenzo Saino, Raul Landa and Lennert BuytenhekNSDI 2018 |</p>
  </div>
  <div class="page">
    <p>this is the last slide (sort of)</p>
    <p>Faild decomposes load balancing as a division of labour</p>
    <p>leverage hardware wherever possible - no latency cost in expected case  push functions requiring state towards hosts - low latency overhead in worst case  efficient, stateless, while ensuring graceful completion of flows  in production at Fastly since 2013</p>
    <p>Read paper if you have an interest in transport protocols, Internet architecture</p>
  </div>
  <div class="page">
    <p>the problem</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>technology</p>
    <p>SSD, multicore, 10Gbps NICs  network programmability</p>
    <p>cost of entry</p>
    <p>maturity of open source reverse proxies (nginx, varnish)  network topology flattened and bandwidth costs dropped</p>
    <p>market</p>
    <p>incumbents addressed shrinking use case: large static assets  a lot of suppressed demand</p>
  </div>
  <div class="page">
    <p>start over</p>
  </div>
  <div class="page">
    <p>PP (point of presence)BILLY</p>
  </div>
  <div class="page">
    <p>PP (point of presence)BILLY</p>
  </div>
  <div class="page">
    <p>PP (point of presence)BILLYBILLY BILLYBILLY</p>
  </div>
  <div class="page">
    <p>clud</p>
  </div>
  <div class="page">
    <p>clud</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>BILLY</p>
    <p>RCK</p>
  </div>
  <div class="page">
    <p>BILLY</p>
    <p>RCK</p>
  </div>
  <div class="page">
    <p>Requirements BILLY  maximize RPS</p>
    <p>low latency</p>
    <p>absorb DDOS attacks</p>
    <p>no single points of failure</p>
    <p>no service disruption on maintenance</p>
  </div>
  <div class="page">
    <p>Requirements BILLY  maximize RPS</p>
    <p>low latency</p>
    <p>absorb DDOS attacks</p>
    <p>no single points of failure</p>
    <p>no service disruption on maintenance</p>
  </div>
  <div class="page">
    <p>Requirements BILLY  maximize RPS</p>
    <p>low latency</p>
    <p>absorb DDOS attacks</p>
    <p>no single points of failure</p>
    <p>no service disruption on maintenance</p>
  </div>
  <div class="page">
    <p>Problem statementBILLY Given fixed physical footprint, how do you design a load balancing architecture which is efficient, resilient and graceful?</p>
  </div>
  <div class="page">
    <p>the topology</p>
  </div>
  <div class="page">
    <p>GuidelinesBILLY maximize number of hosts</p>
    <p>need switches for connecting to upstreams</p>
    <p>avoid dedicated network hardware:  unneeded features (routers)  load balancer appliances  multiple switch tiers</p>
  </div>
  <div class="page">
    <p>GuidelinesBILLY maximize number of hosts</p>
    <p>need switches for connecting to upstreams</p>
    <p>avoid dedicated network hardware:  unneeded features (routers)  load balancer appliances  multiple switch tiers</p>
  </div>
  <div class="page">
    <p>GuidelinesBILLY maximize number of hosts</p>
    <p>need switches for connecting to upstreams</p>
    <p>avoid dedicated network hardware:  unneeded features (routers)  load balancer appliances  multiple switch tiers</p>
  </div>
  <div class="page">
    <p>POP topology</p>
  </div>
  <div class="page">
    <p>POP topology</p>
  </div>
  <div class="page">
    <p>POP topology</p>
    <p>Hosts Racks Bandwidth* (Gbps)</p>
    <p>RPS (millions)</p>
    <p>Storage (TB)</p>
    <p>* notional host bandwidth on fabric accounting for loss of one switch</p>
  </div>
  <div class="page">
    <p>Hosts Racks Bandwidth* (Gbps)</p>
    <p>RPS (millions)</p>
    <p>Storage (TB)</p>
    <p>POP topology</p>
    <p>* notional host bandwidth on fabric accounting for loss of one switch</p>
  </div>
  <div class="page">
    <p>POP topology POP topology</p>
    <p>Hosts Racks Bandwidth* (Gbps)</p>
    <p>RPS (millions)</p>
    <p>Storage (TB)</p>
    <p>* notional host bandwidth on fabric accounting for loss of one switch</p>
  </div>
  <div class="page">
    <p>load balancing</p>
  </div>
  <div class="page">
    <p>anything that maintains state is easy to DDOS</p>
    <p>load balancer appliances  Ananta [SIGCOMM13]  Duet [SIGCOMM14]  MagLev [NSDI16]  SilkRoad [SIGCOMM17]</p>
  </div>
  <div class="page">
    <p>software-only load balancers cant make use of full bisection bandwidth</p>
  </div>
  <div class="page">
    <p>stateless solutions are not graceful  many switch ECMP implementations result in rehashing  even ones that dont will break ongoing connections</p>
  </div>
  <div class="page">
    <p>faild</p>
  </div>
  <div class="page">
    <p>Faild</p>
    <p>A CB</p>
  </div>
  <div class="page">
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>Faild</p>
    <p>A CB</p>
    <p>on switch, map VIP to static set of virtual next hops</p>
    <p>using static set avoids rehashing  ECMP width determines granularity with which we load balance</p>
  </div>
  <div class="page">
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>Faild</p>
    <p>A CB</p>
    <p>made up IPs</p>
    <p>on switch, map VIP to static set of virtual next hops</p>
    <p>using static set avoids rehashing  ECMP width determines granularity with which we load balance</p>
  </div>
  <div class="page">
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:b10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:b</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>Faild</p>
    <p>A CB</p>
    <p>on switch, control forwarding by manipulating ARP entry</p>
    <p>controller maps virtual next hop to virtual MAC address  encode information about current host in virtual MAC address  bridging table configured to map virtual MAC to egress port</p>
  </div>
  <div class="page">
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:b10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:b</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>Faild</p>
    <p>A CB</p>
    <p>on switch, control forwarding by manipulating ARP entry</p>
    <p>controller maps virtual next hop to virtual MAC address  encode information about current host in virtual MAC address  bridging table configured to map virtual MAC to egress port</p>
    <p>target host</p>
  </div>
  <div class="page">
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:b10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:b</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>Faild</p>
    <p>A CB</p>
    <p>on switch, control forwarding by manipulating ARP entry</p>
    <p>controller maps virtual next hop to virtual MAC address  encode information about current host in virtual MAC address  bridging table configured to map virtual MAC to egress port</p>
  </div>
  <div class="page">
    <p>Faild</p>
    <p>A CB</p>
    <p>hosts send health status to controller</p>
    <p>on drain, update ARP entry  balance virtual next hops across available servers</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:c10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:b10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:b</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
  </div>
  <div class="page">
    <p>Faild</p>
    <p>A CB</p>
    <p>hosts send health status to controller</p>
    <p>on drain, update ARP entry  balance virtual next hops across available servers</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:c10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:b10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:b</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
  </div>
  <div class="page">
    <p>Faild</p>
    <p>A CB</p>
    <p>hosts send health status to controller</p>
    <p>on drain, update ARP entry  balance virtual next hops across available servers</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:c10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:c10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP remap entries</p>
  </div>
  <div class="page">
    <p>Faild</p>
    <p>A CB</p>
    <p>hosts send health status to controller</p>
    <p>on drain, update ARP entry  balance virtual next hops across available servers</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:c10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:c10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
  </div>
  <div class="page">
    <p>isnt this just consistent hashing?</p>
  </div>
  <div class="page">
    <p>isnt this just consistent hashing?</p>
    <p>yes, but we can extend mechanism and avoid resets entirely</p>
  </div>
  <div class="page">
    <p>append previous target as part of MAC address  still results in resets, but  conveys necessary information down to the host</p>
    <p>embed mapping history in MAC address</p>
    <p>Faild</p>
    <p>A B</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:c10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:a:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:b:c10.0.1.B 10.0.2.B xx:xx:xx:xx:b:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>C</p>
    <p>a a</p>
    <p>c c</p>
    <p>b b</p>
  </div>
  <div class="page">
    <p>append previous target as part of MAC address  still results in resets, but  conveys necessary information down to the host</p>
    <p>embed mapping history in MAC address</p>
    <p>Faild</p>
    <p>A B</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:c10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:a:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:b:c10.0.1.B 10.0.2.B xx:xx:xx:xx:b:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>C</p>
    <p>a a</p>
    <p>c c</p>
    <p>b b</p>
    <p>current host</p>
  </div>
  <div class="page">
    <p>append previous target as part of MAC address  still results in resets, but  conveys necessary information down to the host</p>
    <p>embed mapping history in MAC address</p>
    <p>Faild</p>
    <p>A B</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:c10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:a:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:b:c10.0.1.B 10.0.2.B xx:xx:xx:xx:b:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>C</p>
    <p>a a</p>
    <p>c c</p>
    <p>c a</p>
    <p>current host a a</p>
    <p>c c</p>
    <p>b b</p>
  </div>
  <div class="page">
    <p>append previous target as part of MAC address  still results in resets, but  conveys necessary information down to the host</p>
    <p>embed mapping history in MAC address</p>
    <p>Faild</p>
    <p>A B</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:c10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:a:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:b:c10.0.1.B 10.0.2.B xx:xx:xx:xx:b:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>C</p>
    <p>a a</p>
    <p>c c</p>
    <p>c a</p>
    <p>current host</p>
  </div>
  <div class="page">
    <p>append previous target as part of MAC address  still results in resets, but  conveys necessary information down to the host</p>
    <p>embed mapping history in MAC address</p>
    <p>Faild</p>
    <p>A B</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:c10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:a:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:b:c10.0.1.B 10.0.2.B xx:xx:xx:xx:b:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>C</p>
    <p>a a</p>
    <p>c c</p>
    <p>c a</p>
  </div>
  <div class="page">
    <p>append previous target as part of MAC address  still results in resets, but  conveys necessary information down to the host</p>
    <p>embed mapping history in MAC address</p>
    <p>Faild</p>
    <p>A B</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:c10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:a:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:b:c10.0.1.B 10.0.2.B xx:xx:xx:xx:b:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>C</p>
    <p>previous host a a</p>
    <p>c c</p>
    <p>c a</p>
    <p>a a</p>
    <p>c c</p>
    <p>b b</p>
  </div>
  <div class="page">
    <p>append previous target as part of MAC address  still results in resets, but  conveys necessary information down to the host</p>
    <p>embed mapping history in MAC address</p>
    <p>Faild</p>
    <p>A B</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:xx:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:xx:c10.0.1.B 10.0.2.B xx:xx:xx:xx:xx:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>Controller</p>
    <p>ARP table</p>
    <p>IP address xx:xx:xx:xx:a:a10.0.1.A</p>
    <p>MAC address</p>
    <p>xx:xx:xx:xx:b:c10.0.1.B 10.0.2.B xx:xx:xx:xx:b:a</p>
    <p>FIB</p>
    <p>Destination prefix 10.0.1.A192.168.0.0/24</p>
    <p>Next hop IP</p>
    <p>C</p>
    <p>a a</p>
    <p>c c</p>
    <p>c a</p>
    <p>a a</p>
    <p>c c</p>
    <p>b b</p>
  </div>
  <div class="page">
    <p>Host processing</p>
    <p>Current target xx:xx:xx:xx:c:b Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>xx:xx:xx:xx:b:b</p>
    <p>Process</p>
    <p>Destination MAC address</p>
    <p>Previous target</p>
    <p>Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>Process</p>
    <p>C B</p>
    <p>Destination MAC addressA CB</p>
  </div>
  <div class="page">
    <p>Host processing</p>
    <p>Current target xx:xx:xx:xx:c:b Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>xx:xx:xx:xx:b:b</p>
    <p>Process</p>
    <p>Destination MAC address</p>
    <p>Previous target</p>
    <p>Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>Process</p>
    <p>C B</p>
    <p>Destination MAC address</p>
    <p>c != b</p>
    <p>A CB</p>
  </div>
  <div class="page">
    <p>Host processing</p>
    <p>Current target xx:xx:xx:xx:c:b Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>xx:xx:xx:xx:b:b</p>
    <p>Process</p>
    <p>Destination MAC address</p>
    <p>Previous target</p>
    <p>Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>Process</p>
    <p>C B</p>
    <p>Destination MAC addressA CB</p>
  </div>
  <div class="page">
    <p>Host processing</p>
    <p>Current target xx:xx:xx:xx:c:b Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>xx:xx:xx:xx:b:b</p>
    <p>Process</p>
    <p>Destination MAC address</p>
    <p>Previous target</p>
    <p>Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>Process</p>
    <p>C B</p>
    <p>Destination MAC addressA CB</p>
  </div>
  <div class="page">
    <p>Current target xx:xx:xx:xx:c:b Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>xx:xx:xx:xx:b:b</p>
    <p>Process</p>
    <p>Destination MAC address</p>
    <p>Previous target</p>
    <p>Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>Process</p>
    <p>C B</p>
    <p>Destination MAC address</p>
    <p>Host processing</p>
    <p>A CB</p>
  </div>
  <div class="page">
    <p>Current target xx:xx:xx:xx:c:b Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>xx:xx:xx:xx:b:b</p>
    <p>Process</p>
    <p>Destination MAC address</p>
    <p>Previous target</p>
    <p>Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>Process</p>
    <p>C B</p>
    <p>Destination MAC address</p>
    <p>Host processing</p>
    <p>A CB</p>
  </div>
  <div class="page">
    <p>Current target xx:xx:xx:xx:c:b Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>xx:xx:xx:xx:b:b</p>
    <p>Process</p>
    <p>Destination MAC address</p>
    <p>Previous target</p>
    <p>Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>Process</p>
    <p>C B</p>
    <p>Destination MAC address</p>
    <p>Host processing</p>
    <p>A CB</p>
  </div>
  <div class="page">
    <p>Current target xx:xx:xx:xx:c:b Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>xx:xx:xx:xx:b:b</p>
    <p>Process</p>
    <p>Destination MAC address</p>
    <p>Previous target</p>
    <p>Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>Process</p>
    <p>C B</p>
    <p>Destination MAC address</p>
    <p>Host processing</p>
    <p>A CB</p>
  </div>
  <div class="page">
    <p>Current target xx:xx:xx:xx:c:b Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>xx:xx:xx:xx:b:b</p>
    <p>Process</p>
    <p>Destination MAC address</p>
    <p>Previous target</p>
    <p>Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>Process</p>
    <p>C B</p>
    <p>Destination MAC address</p>
    <p>Host processing</p>
    <p>C</p>
    <p>b == b</p>
    <p>A CB</p>
  </div>
  <div class="page">
    <p>Current target xx:xx:xx:xx:c:b Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>xx:xx:xx:xx:b:b</p>
    <p>Process</p>
    <p>Destination MAC address</p>
    <p>Previous target</p>
    <p>Match previous?</p>
    <p>SYN packet?</p>
    <p>Local socket?</p>
    <p>Redirect</p>
    <p>Process</p>
    <p>C B</p>
    <p>Destination MAC address</p>
    <p>Host processing</p>
    <p>b == b</p>
    <p>A CB</p>
  </div>
  <div class="page">
    <p>C u m</p>
    <p>u la</p>
    <p>ti ve</p>
    <p>pr o b ab</p>
    <p>ili ty</p>
    <p>Steady state</p>
    <p>Draining</p>
    <p>Host processing</p>
    <p>Low latency</p>
    <p>expected case: switches do all heavy lifting  worst case: detour routing costs 14s</p>
    <p>Negligible impact on CPU utilization</p>
    <p>impact only when refilling  peak CPU utilization below 0.3%</p>
    <p>median difference: 14s</p>
  </div>
  <div class="page">
    <p>Host processing</p>
    <p>Low latency</p>
    <p>expected case: switches do all heavy lifting  worst case: detour routing costs 20s</p>
    <p>Negligible impact on CPU utilization</p>
    <p>impact only when refilling (transient)  peak CPU utilization below 0.3%</p>
    <p>Steady state</p>
    <p>Drain</p>
    <p>Refill</p>
    <p>E st</p>
    <p>im at</p>
    <p>ed P D</p>
    <p>F</p>
  </div>
  <div class="page">
    <p>Timeline</p>
  </div>
  <div class="page">
    <p>Timeline</p>
    <p>deployed globally</p>
  </div>
  <div class="page">
    <p>Timeline</p>
    <p>deployed globally</p>
    <p>requests per day</p>
  </div>
  <div class="page">
    <p>we suspect it works</p>
  </div>
  <div class="page">
    <p>Assumption #1</p>
    <p>hash buckets are equally loaded</p>
  </div>
  <div class="page">
    <p>Hashing</p>
    <p>R eq</p>
    <p>u es</p>
    <p>ts p er</p>
    <p>se co</p>
    <p>n d</p>
    <p>Implications for capacity planning  you are bound by most loaded host in a cluster</p>
  </div>
  <div class="page">
    <p>Hashing</p>
    <p>R eq</p>
    <p>u es</p>
    <p>ts p er</p>
    <p>se co</p>
    <p>n d</p>
    <p>Implications for capacity planning  you are bound by most loaded host in a cluster</p>
  </div>
  <div class="page">
    <p>N or</p>
    <p>m al</p>
    <p>iz ed</p>
    <p>b u ck</p>
    <p>et lo</p>
    <p>ad Uneven hashing</p>
    <p>Inject synthetic, equally distributed traffic</p>
  </div>
  <div class="page">
    <p>N or</p>
    <p>m al</p>
    <p>iz ed</p>
    <p>b u ck</p>
    <p>et lo</p>
    <p>ad</p>
    <p>N or</p>
    <p>m al</p>
    <p>iz ed</p>
    <p>b u ck</p>
    <p>et lo</p>
    <p>ad Uneven hashing</p>
    <p>Inject synthetic, equally distributed traffic</p>
  </div>
  <div class="page">
    <p>N or</p>
    <p>m al</p>
    <p>iz ed</p>
    <p>b u ck</p>
    <p>et lo</p>
    <p>ad</p>
    <p>N or</p>
    <p>m al</p>
    <p>iz ed</p>
    <p>b u ck</p>
    <p>et lo</p>
    <p>ad Uneven hashing</p>
    <p>Significant skew</p>
    <p>most loaded bucket 6 times more loaded than the least loaded</p>
    <p>Inject synthetic, equally distributed traffic</p>
  </div>
  <div class="page">
    <p>N or</p>
    <p>m al</p>
    <p>iz ed</p>
    <p>b u ck</p>
    <p>et lo</p>
    <p>ad</p>
    <p>N or</p>
    <p>m al</p>
    <p>iz ed</p>
    <p>b u ck</p>
    <p>et lo</p>
    <p>ad Uneven hashing</p>
    <p>Significant skew</p>
    <p>most loaded bucket 6 times more loaded than the least loaded</p>
    <p>Behaviour can depend on number of nexthops</p>
    <p>some buckets received no traffic for specific number of configured nexthops</p>
    <p>Inject synthetic, equally distributed traffic</p>
  </div>
  <div class="page">
    <p>Assumption #2</p>
    <p>switches hash identically</p>
  </div>
  <div class="page">
    <p>Hash polarization</p>
  </div>
  <div class="page">
    <p>Hash polarization</p>
  </div>
  <div class="page">
    <p>Hash polarization</p>
  </div>
  <div class="page">
    <p>Hash polarization</p>
  </div>
  <div class="page">
    <p>Hash polarization</p>
    <p>Vendors were told hash polarization was bad</p>
    <p>in many cases you cant configure seed</p>
    <p>in one case, you can configure the seed, but vendor additionally uses boot order of linecards to add entropy</p>
  </div>
  <div class="page">
    <p>Assumption #3</p>
    <p>packets in a flow use same network path</p>
  </div>
  <div class="page">
    <p>Nope, things break Fragmentation</p>
    <p>returning ICMP packets hash on outer header  took draft to IETF in 2014</p>
    <p>ECN</p>
    <p>some middleboxes hash on TOS field  ended up turning ECN negotation off, breaks anycast too  still looking for vendor(s) behind this, affected multiple ISPs</p>
    <p>SYN proxies</p>
    <p>recent trend in enterprise appliances  route lookup after connection handoff results in new path  one vendor fixed implementation</p>
  </div>
  <div class="page">
    <p>paper has lots more stuff  SYN cookie handling  ARP reconfiguration measurements  evaluation of switch and host draining  switch controller details  host-side implementation quirks  ECMP skew results  switch memory  real flow measurements  vendors that dont test their products</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>the value is not in the implementation NSDI</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>the value is in the design NSDI</p>
  </div>
  <div class="page">
    <p>the value is in the design NSDI</p>
    <p>Faild decomposes load balancing as a division of labour</p>
    <p>leverage hardware wherever possible - no latency cost in expected case  push functions requiring state towards hosts - low latency overhead in worst case  result is efficient, resilient and graceful  many of the design patterns applicable to other networking environments</p>
  </div>
  <div class="page">
    <p>the design is now part of the architecture NSDI</p>
    <p>Five years of dealing with the consequences of changing a fraction of the Internet:</p>
    <p>PMTUD in ECMP networks  talking to vendors about broken hashing implementations and middleboxes  raising awareness within transport community and academia</p>
    <p>Faild part of shift in economics of edge delivery, has since percolated through industry</p>
    <p>If you propose protocol changes, please take this paper into account</p>
  </div>
  <div class="page">
    <p>Additional materials</p>
    <p>NANOG 70 presentation on broken hashing2017</p>
    <p>RFC7690 workarounds for PMTUD in ECMP</p>
    <p>blogpost covering Faild design</p>
  </div>
</Presentation>
