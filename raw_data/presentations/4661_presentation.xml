<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>On Approximating Minimum Infrequent and Maximum Frequent Sets</p>
    <p>Mario Boley</p>
    <p>Fraunhofer Institute IAIS, Germany</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>Brief Motivation</p>
    <p>Why are problems interesting that do not directly contribute to the mining task?</p>
    <p>Main Part</p>
    <p>technical discussion</p>
  </div>
  <div class="page">
    <p>Data</p>
    <p>Patterns</p>
    <p>Mining Algorithm</p>
    <p>verified byadjusts</p>
    <p>User</p>
    <p>???</p>
    <p># of clusters  freq. thres.  etc.</p>
    <p>Parameters expensive step is multiplied due to trial-and</p>
    <p>error parameter setting</p>
    <p>Mining Workflow with Parameter Twiddling</p>
  </div>
  <div class="page">
    <p>Data</p>
    <p>Patterns</p>
    <p>Mining Algorithm</p>
    <p>verified byadjusts</p>
    <p>User</p>
    <p># of clusters  freq. thres.  etc.</p>
    <p>Parameters Evaluation Algorithm</p>
    <p>size  structure  range</p>
    <p>Mining Workflow with Quick Parameter Evaluation</p>
  </div>
  <div class="page">
    <p>Frequent Sets</p>
    <p>xxx4</p>
    <p>xx3</p>
    <p>xx2</p>
    <p>xx1</p>
    <p>DCBA</p>
    <p>verified byadjusts</p>
    <p>User</p>
    <p>freq. thres.</p>
    <p>Parameters Evaluation Algorithm</p>
    <p>range</p>
    <p>apriori, fpgrowth, etc.</p>
    <p>This Talk: Frequent (Item-)Set Mining</p>
    <p>DCB</p>
    <p>DCB C</p>
  </div>
  <div class="page">
    <p>Range Quantities of Frequent Sets</p>
    <p>minimum* infrequent set</p>
    <p>maximum* frequent set</p>
    <p>frequent sets</p>
    <p>subset lattice of all subsets of items I</p>
    <p>* minimum and maximum are always used with respect to cardinality ;</p>
    <p>I</p>
    <p>interesting range</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>Exact Computation Approximate</p>
    <p>Maximum Frequent Set (MFS)</p>
    <p>NP-hard*</p>
    <p>Minimum Infrequent Set</p>
    <p>(MIS) ? ?</p>
    <p>* Gunopulos et al., 2003</p>
    <p>|A(x)|  OPT/ ?</p>
  </div>
  <div class="page">
    <p>xxx4</p>
    <p>xx3</p>
    <p>x2</p>
    <p>xx1</p>
    <p>DCBA1</p>
    <p>A</p>
    <p>D</p>
    <p>B</p>
    <p>C</p>
    <p>Interpretation as Bipartite Graph</p>
    <p>Bipartite Graph Transaction Data</p>
    <p>balanced bipartite clique with size t</p>
    <p>t-frequent set with cardinality t</p>
    <p>NP-hardness of MAX FREQUENT SET follows from NP-hardness of MAX BALANCED BIPARTITE CLIQUE (MBBC)!</p>
    <p>In fact, there is a much stronger result for MBBC</p>
  </div>
  <div class="page">
    <p>Maximum Frequent Sets</p>
    <p>Theorem (Khot, 2004)</p>
    <p>Unless NP = &gt;0 BPTIME(2 n):</p>
    <p>no algorithm approximating MBBC within a factor growing smaller in the instance size n than n for some specific constant  &gt; 0.</p>
    <p>What does this imply for MAX FREQUENT SET?</p>
    <p>If we have an algorithm A approximating MFS within a factor  we can construct an approximation algorithm for MBBC:</p>
    <p>Let G = (V,U,E) be a bip. graph with maximum bal. bip. clique size OPT 1) Find tAPX the maximum t with |A(t)|  t by running A with</p>
    <p>thresholds 1, , |V| on dataset given by G 2) Return X  X = A(tAPX) with |X| = tAPX and any tAPX of its</p>
    <p>common neighbors in G</p>
    <p>Does tAPX  OPT hold?</p>
  </div>
  <div class="page">
    <p>Let t* = OPT/</p>
    <p>mfs(t*)  OPT</p>
    <p>) |A(t*)|  OPT/ = t*</p>
    <p>) tAPX  t* = OPT/</p>
    <p>Preservation of Approximation Factor</p>
    <p>x3</p>
    <p>x2</p>
    <p>xx1</p>
    <p>DBA</p>
    <p>vt</p>
    <p>v2</p>
    <p>v1</p>
    <p>utu2u1</p>
    <p>Y</p>
    <p>X</p>
    <p>(Y,X) maximum bal. bip. clique (t=OPT)</p>
    <p>adjacency matrix of G</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>Exact Computation Approximate</p>
    <p>Maximum Frequent Set (MFS)</p>
    <p>NP-hard</p>
    <p>Unless NP=&gt;0 BPTIME(2 n):</p>
    <p>no approximation with a ratio growing smaller in the</p>
    <p>instance size than n</p>
    <p>Minimum Infrequent Set</p>
    <p>(MIS) ? ?</p>
  </div>
  <div class="page">
    <p>Minimum Infrequent Sets</p>
    <p>xxx4</p>
    <p>xx3</p>
    <p>x2</p>
    <p>xx1</p>
    <p>DCBA A</p>
    <p>D</p>
    <p>Transaction Data Hypergraph</p>
    <p>C</p>
    <p>B</p>
    <p>Generalized Minimum Set Cover Problem (GMSC): Given a hypergraph (family of sets) with n vertices and an integer p, find a minimum subfamily covering at least (n-p) vertices.</p>
    <p>contains NP-hard SET COVER problem as special case (p=0)</p>
    <p>How does this relate to MIN INFREQUENT SET?</p>
  </div>
  <div class="page">
    <p>A B C D</p>
    <p>GMSC instance (p=1) solution X covers n-p elements</p>
    <p>xxxD</p>
    <p>xC</p>
    <p>xB</p>
    <p>xA</p>
    <p>transpose</p>
    <p>xD</p>
    <p>xxxC</p>
    <p>xxxB</p>
    <p>xxxA</p>
    <p>invert entries</p>
    <p>X intersects n-p rows</p>
    <p>X intersects the complement of n-p rows</p>
    <p>) X not contained in n-p transactions ) X is (p+1)-infrequent ) GMSC can be poly transformed to MIS</p>
    <p>In fact, problems are equivalent !</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>Exact Computation Approximate</p>
    <p>Maximum Cardinality</p>
    <p>Frequent Set NP-hard</p>
    <p>Unless NP=&gt;0 BPTIME(2 n):</p>
    <p>no approximation with a ratio growing smaller in the</p>
    <p>instance size than n</p>
    <p>Minimum Cardinality</p>
    <p>Infrequent Set NP-hard |A(x)|  OPT(x) ?</p>
  </div>
  <div class="page">
    <p>Theorem (Nemhauser et al. 1977) k greedy selected sets cover at least (1-1/e) times the maximum number of elements that can be covered by k sets.</p>
    <p>Greedy Algorithm: Iteratively add to solution a set covering most of the remaining elements and stop if all but p elements are covered.</p>
    <p>Greedy Strategy for Coverage/Infrequent Set Construction</p>
    <p>Idea: Consider packages of greedy solution, i.e., disjoint subsequences of the sequence S1, , SG of sets selected by the greedy algorithm, using the following theorem:</p>
    <p>Greedy Package: first k selected sets covering at least (1-1/e)(r-p) of the r elements not covered by previous packages (1-1/e)(r-p)</p>
    <p>p remaining elements:</p>
  </div>
  <div class="page">
    <p>Number of Sets in Greedy Packages</p>
    <p>Notation: gc(i) number of remaining elem. covered by i greedy selected sets OPT cardinality of optimum solution of whole GMSC instance</p>
    <p>Optimum solution covers (n-p) elements with OPT sets. ) OPT sets can cover (r-p) of remaining elements ) gc(OPT)  (1-1/e)(r-p) but k minimum with gc(k)  (1-1/e)(r-p) ) OPT  k</p>
    <p>Greedy Package: first k selected sets covering at least (1-1/e)(r-p) of the r elements not covered by previous packages (1-1/e)(r-p)</p>
    <p>p remaining elements:</p>
    <p>Every greedy package contains at most OPT sets</p>
  </div>
  <div class="page">
    <p>Every greedy package covers at least 1-1/e remaining elements.</p>
    <p>Worst possible situation after i packages:</p>
    <p>Number of Greedy Packages</p>
    <p>e-i(n-p) elements remain to be covered</p>
    <p>uncovered elements</p>
    <p>covered elements</p>
    <p>) done after at most dln(n  p)e + 1 packages</p>
    <p>Together with previous slide: This is a guaranteed apx factor</p>
  </div>
  <div class="page">
    <p>Greedy Algorithm</p>
    <p>Let T be a family of transaction over itemset I X = ; WHILE X frequent in T DO</p>
    <p>add to X item i 2 I n X with minimum frequency in T delete all transaction not containing i from T</p>
    <p>Direct Formulation for MINIMUM INFREQUENT SET:</p>
    <p>Final Question: Can we improve factor dln(m  t)e + 1 ?</p>
    <p>Theorem (Feige, 1998) Unless NP = DTIME(xO(log log x)): no algorithm approximating SET COVER within (1 - ) ln n for instances with n vertices for all  &gt; 0.</p>
    <p>Not substantially, because:</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Exact Computation Approximate</p>
    <p>Maximum Frequent Set (MFS)</p>
    <p>NP-hard</p>
    <p>Unless NP=&gt;0 BPTIME(2 n):</p>
    <p>no approximation with a ratio growing smaller in the</p>
    <p>instance size than n</p>
    <p>Minimum Infrequent Set</p>
    <p>(MIS) NP-hard</p>
    <p>greedy approximates within: dln(m  t)e + 1 for m transactions and threshold t;</p>
    <p>cannot get substantially better</p>
  </div>
  <div class="page">
    <p>Comments, Future/Current Research</p>
    <p>Usually real-world datasets are well-behaved and the greedy approximation finds optimal solutions.</p>
    <p>Are there any practically relevant assumptions that make MAXIMUM FREQUENT SET tractable?</p>
    <p>Can we approximate the number of frequent sets?</p>
    <p>- First experiments with the Markov Chain Monte Carlo method are promising</p>
    <p>- However, so far no theoretical results</p>
    <p>- What about other counting problems</p>
    <p>What about quick parameter evaluation in more complex situations? For instance consider: What is the maximum number of features a labeled instance will possess with the resulting feature set?</p>
  </div>
</Presentation>
