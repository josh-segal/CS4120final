<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>BIGMAC: Fine-Grained Policy Analysis of Android Firmware</p>
    <p>Grant Hernandez , Dave (Jing) Tian , Anurag Swarnim Yadav , Byron J. Williams , and Kevin R. B. Butler</p>
    <p>University of Florida   Purdue University</p>
  </div>
  <div class="page">
    <p>Android Attack-surface</p>
    <p>&quot; #</p>
  </div>
  <div class="page">
    <p>High Impact Bugs</p>
  </div>
  <div class="page">
    <p>High Impact Bugs  CVE-2017-0737 - libstagefright (remote</p>
    <p>MMS triggerable)</p>
  </div>
  <div class="page">
    <p>High Impact Bugs  CVE-2017-0737 - libstagefright (remote</p>
    <p>MMS triggerable)  CVE-2018-9488 - Privilege escalation to full</p>
    <p>root compromise (USB)</p>
  </div>
  <div class="page">
    <p>High Impact Bugs  CVE-2017-0737 - libstagefright (remote</p>
    <p>MMS triggerable)  CVE-2018-9488 - Privilege escalation to full</p>
    <p>root compromise (USB)  CVE-2019-2215 - Binder Use After Free</p>
    <p>(app reachable)</p>
  </div>
  <div class="page">
    <p>Android Security Mechanisms</p>
    <p>SECCOMP</p>
    <p>DAC</p>
    <p>Middleware</p>
    <p>Capabilities</p>
    <p>SELinux</p>
    <p>!</p>
    <p>Apps Native Daemons &amp;</p>
    <p>Privileged Apps</p>
    <p>Kernel Objects</p>
  </div>
  <div class="page">
    <p>Android Security Mechanisms  Primary Access Control</p>
    <p>Linux DAC  Linux Capabilities  SELinux / SEAndroid (MAC)</p>
    <p>SECCOMP</p>
    <p>DAC</p>
    <p>Middleware</p>
    <p>Capabilities</p>
    <p>SELinux</p>
    <p>!</p>
    <p>Apps Native Daemons &amp;</p>
    <p>Privileged Apps</p>
    <p>Kernel Objects</p>
  </div>
  <div class="page">
    <p>Android Security Mechanisms  Primary Access Control</p>
    <p>Linux DAC  Linux Capabilities  SELinux / SEAndroid (MAC)</p>
    <p>Other</p>
    <p>SECCOMP  Android Middleware</p>
    <p>SECCOMP</p>
    <p>DAC</p>
    <p>Middleware</p>
    <p>Capabilities</p>
    <p>SELinux</p>
    <p>!</p>
    <p>Apps Native Daemons &amp;</p>
    <p>Privileged Apps</p>
    <p>Kernel Objects</p>
  </div>
  <div class="page">
    <p>Android Security Mechanisms  Primary Access Control</p>
    <p>Linux DAC  Linux Capabilities  SELinux / SEAndroid (MAC)</p>
    <p>Other</p>
    <p>SECCOMP  Android Middleware</p>
    <p>SECCOMP</p>
    <p>DAC</p>
    <p>Middleware</p>
    <p>Capabilities</p>
    <p>SELinux</p>
    <p>!</p>
    <p>Apps Native Daemons &amp;</p>
    <p>Privileged Apps</p>
    <p>Kernel Objects</p>
  </div>
  <div class="page">
    <p>Android Security Core Files</p>
    <p>property_contexts</p>
    <p>file_contexts</p>
    <p>service_contextsseapp_contexts</p>
    <p>mac_permissions.xml</p>
    <p>init</p>
    <p>kernel</p>
    <p>ueventd</p>
    <p>zygote servicemanager</p>
    <p>system_server</p>
    <p>init.rc</p>
    <p>/etc/services/*.rc</p>
    <p>ueventd.rc</p>
    <p>sepolicy</p>
    <p>Object Read-by Process Relation</p>
  </div>
  <div class="page">
    <p>Android Security Core Files</p>
    <p>property_contexts</p>
    <p>file_contexts</p>
    <p>service_contextsseapp_contexts</p>
    <p>mac_permissions.xml</p>
    <p>init</p>
    <p>kernel</p>
    <p>ueventd</p>
    <p>zygote servicemanager</p>
    <p>system_server</p>
    <p>init.rc</p>
    <p>/etc/services/*.rc</p>
    <p>ueventd.rc</p>
    <p>sepolicy</p>
    <p>Object Read-by Process Relation</p>
    <p>SELinux for properties</p>
    <p>Binary SELinux Policy</p>
    <p>Assigns a SELinux label to files</p>
    <p>Android boot commands</p>
    <p>Boots system, manages props</p>
  </div>
  <div class="page">
    <p>Android Security Core Files</p>
    <p>property_contexts</p>
    <p>file_contexts</p>
    <p>service_contextsseapp_contexts</p>
    <p>mac_permissions.xml</p>
    <p>init</p>
    <p>kernel</p>
    <p>ueventd</p>
    <p>zygote servicemanager</p>
    <p>system_server</p>
    <p>init.rc</p>
    <p>/etc/services/*.rc</p>
    <p>ueventd.rc</p>
    <p>sepolicy</p>
    <p>Object Read-by Process Relation</p>
    <p>SELinux for properties</p>
    <p>Binary SELinux Policy</p>
    <p>Assigns a SELinux label to files</p>
    <p>Assigns DAC context to /dev</p>
    <p>files</p>
    <p>Android boot commands</p>
    <p>Boots system, manages props</p>
    <p>Creates device files and perms</p>
  </div>
  <div class="page">
    <p>Android Security Core Files</p>
    <p>property_contexts</p>
    <p>file_contexts</p>
    <p>service_contextsseapp_contexts</p>
    <p>mac_permissions.xml</p>
    <p>init</p>
    <p>kernel</p>
    <p>ueventd</p>
    <p>zygote servicemanager</p>
    <p>system_server</p>
    <p>init.rc</p>
    <p>/etc/services/*.rc</p>
    <p>ueventd.rc</p>
    <p>sepolicy</p>
    <p>Object Read-by Process Relation</p>
    <p>SELinux for properties</p>
    <p>Binary SELinux Policy</p>
    <p>Assigns a SELinux label to apps</p>
    <p>Assigns a SELinux label to files</p>
    <p>Assigns DAC context to /dev</p>
    <p>files</p>
    <p>Android boot commands</p>
    <p>Boots system, manages props</p>
    <p>Creates device files and perms</p>
    <p>All Java apps are forked from here</p>
  </div>
  <div class="page">
    <p>Android Security Core Files</p>
    <p>property_contexts</p>
    <p>file_contexts</p>
    <p>service_contextsseapp_contexts</p>
    <p>mac_permissions.xml</p>
    <p>init</p>
    <p>kernel</p>
    <p>ueventd</p>
    <p>zygote servicemanager</p>
    <p>system_server</p>
    <p>init.rc</p>
    <p>/etc/services/*.rc</p>
    <p>ueventd.rc</p>
    <p>sepolicy</p>
    <p>Object Read-by Process Relation</p>
    <p>SELinux for properties</p>
    <p>Binary SELinux Policy</p>
    <p>Assigns a SELinux label to apps</p>
    <p>Assigns a SELinux label to files</p>
    <p>Assigns DAC context to /dev</p>
    <p>files</p>
    <p>Android boot commands</p>
    <p>Assigns labels to signed apps</p>
    <p>Boots system, manages props</p>
    <p>Creates device files and perms</p>
    <p>All Java apps are forked from here</p>
    <p>Mediates App IPC with Android perms</p>
  </div>
  <div class="page">
    <p>Android Security Core Files</p>
    <p>property_contexts</p>
    <p>file_contexts</p>
    <p>service_contextsseapp_contexts</p>
    <p>mac_permissions.xml</p>
    <p>init</p>
    <p>kernel</p>
    <p>ueventd</p>
    <p>zygote servicemanager</p>
    <p>system_server</p>
    <p>init.rc</p>
    <p>/etc/services/*.rc</p>
    <p>ueventd.rc</p>
    <p>sepolicy</p>
    <p>Object Read-by Process Relation</p>
    <p>SELinux for properties</p>
    <p>Binary SELinux Policy</p>
    <p>Assigns a SELinux label to apps</p>
    <p>Assigns a SELinux label to files</p>
    <p>Assigns DAC context to /dev</p>
    <p>files</p>
    <p>Assigns SELinux label to services</p>
    <p>Android boot commands</p>
    <p>Assigns labels to signed apps</p>
    <p>Boots system, manages props</p>
    <p>Creates device files and perms</p>
    <p>All Java apps are forked from here</p>
    <p>Mediates App IPC with Android perms</p>
    <p>Manages native services and their IPC</p>
  </div>
  <div class="page">
    <p>BigMAC at a High Level</p>
    <p>BigMAC</p>
    <p>Instantiated Policy Graph Query Input</p>
    <p>SEPolicy Parsing</p>
    <p>Policy Instantiation</p>
    <p>Filesystem Extraction DAC/CAP/Labels</p>
    <p>Type Relations</p>
    <p>Processes/Objects</p>
    <p>File / Object IPC ObjectSubject / Process</p>
    <p>Firmware Filesystems</p>
    <p>Real-System (Ideal) Processes/Files</p>
    <p>Attack Graph Ground Truth Comparison</p>
    <p>Runtime</p>
    <p>Extraction Ctx.Ctx.</p>
    <p>Process Tree Credentials</p>
    <p>File DAC/MAC  Maps MAC+DAC+CAP</p>
    <p>policies onto a fine-grained attack-graph</p>
    <p>Only considers running processes and present files</p>
  </div>
  <div class="page">
    <p>BigMAC at a High Level</p>
    <p>BigMAC</p>
    <p>Instantiated Policy Graph Query Input</p>
    <p>SEPolicy Parsing</p>
    <p>Policy Instantiation</p>
    <p>Filesystem Extraction DAC/CAP/Labels</p>
    <p>Type Relations</p>
    <p>Processes/Objects</p>
    <p>File / Object IPC ObjectSubject / Process</p>
    <p>Firmware Filesystems</p>
    <p>Real-System (Ideal) Processes/Files</p>
    <p>Attack Graph Ground Truth Comparison</p>
    <p>Runtime</p>
    <p>Extraction Ctx.Ctx.</p>
    <p>Process Tree Credentials</p>
    <p>File DAC/MAC  Maps MAC+DAC+CAP</p>
    <p>policies onto a fine-grained attack-graph</p>
    <p>Only considers running processes and present files</p>
  </div>
  <div class="page">
    <p>BigMAC at a High Level</p>
    <p>BigMAC</p>
    <p>Instantiated Policy Graph Query Input</p>
    <p>SEPolicy Parsing</p>
    <p>Policy Instantiation</p>
    <p>Filesystem Extraction DAC/CAP/Labels</p>
    <p>Type Relations</p>
    <p>Processes/Objects</p>
    <p>File / Object IPC ObjectSubject / Process</p>
    <p>Firmware Filesystems</p>
    <p>Real-System (Ideal) Processes/Files</p>
    <p>Attack Graph Ground Truth Comparison</p>
    <p>Runtime</p>
    <p>Extraction Ctx.Ctx.</p>
    <p>Process Tree Credentials</p>
    <p>File DAC/MAC  Maps MAC+DAC+CAP</p>
    <p>policies onto a fine-grained attack-graph</p>
    <p>Only considers running processes and present files</p>
  </div>
  <div class="page">
    <p>BigMAC at a High Level</p>
    <p>BigMAC</p>
    <p>Instantiated Policy Graph Query Input</p>
    <p>SEPolicy Parsing</p>
    <p>Policy Instantiation</p>
    <p>Filesystem Extraction DAC/CAP/Labels</p>
    <p>Type Relations</p>
    <p>Processes/Objects</p>
    <p>File / Object IPC ObjectSubject / Process</p>
    <p>Firmware Filesystems</p>
    <p>Real-System (Ideal) Processes/Files</p>
    <p>Attack Graph Ground Truth Comparison</p>
    <p>Runtime</p>
    <p>Extraction Ctx.Ctx.</p>
    <p>Process Tree Credentials</p>
    <p>File DAC/MAC  Maps MAC+DAC+CAP</p>
    <p>policies onto a fine-grained attack-graph</p>
    <p>Only considers running processes and present files</p>
  </div>
  <div class="page">
    <p>BigMAC at a High Level</p>
    <p>BigMAC</p>
    <p>Instantiated Policy Graph Query Input</p>
    <p>SEPolicy Parsing</p>
    <p>Policy Instantiation</p>
    <p>Filesystem Extraction DAC/CAP/Labels</p>
    <p>Type Relations</p>
    <p>Processes/Objects</p>
    <p>File / Object IPC ObjectSubject / Process</p>
    <p>Firmware Filesystems</p>
    <p>Real-System (Ideal) Processes/Files</p>
    <p>Attack Graph Ground Truth Comparison</p>
    <p>Runtime</p>
    <p>Extraction Ctx.Ctx.</p>
    <p>Process Tree Credentials</p>
    <p>File DAC/MAC  Maps MAC+DAC+CAP</p>
    <p>policies onto a fine-grained attack-graph</p>
    <p>Only considers running processes and present files</p>
  </div>
  <div class="page">
    <p>BigMAC at a High Level</p>
    <p>BigMAC</p>
    <p>Instantiated Policy Graph Query Input</p>
    <p>SEPolicy Parsing</p>
    <p>Policy Instantiation</p>
    <p>Filesystem Extraction DAC/CAP/Labels</p>
    <p>Type Relations</p>
    <p>Processes/Objects</p>
    <p>File / Object IPC ObjectSubject / Process</p>
    <p>Firmware Filesystems</p>
    <p>Real-System (Ideal) Processes/Files</p>
    <p>Attack Graph Ground Truth Comparison</p>
    <p>Runtime</p>
    <p>Extraction Ctx.Ctx.</p>
    <p>Process Tree Credentials</p>
    <p>File DAC/MAC  Maps MAC+DAC+CAP</p>
    <p>policies onto a fine-grained attack-graph</p>
    <p>Only considers running processes and present files</p>
  </div>
  <div class="page">
    <p>Building an Attack-Graph</p>
    <p>Subject</p>
    <p>Dataflow Flat Dataflow</p>
    <p>Process Tree</p>
    <p>Fully Instantiated Attack Graph</p>
    <p>Backing Files Subjects</p>
    <p>Objects</p>
    <p>Processes</p>
    <p>Instantiate</p>
    <p>Extract</p>
    <p>Parse Tag/L ink</p>
    <p>Recover Instantiate</p>
    <p>SEPolicy</p>
    <p>F S</p>
    <p>Gd Gf</p>
    <p>OverlayGs Gp</p>
    <p>O</p>
    <p>P</p>
    <p>Ga</p>
  </div>
  <div class="page">
    <p>Building an Attack-Graph</p>
    <p>Subject</p>
    <p>Dataflow Flat Dataflow</p>
    <p>Process Tree</p>
    <p>Fully Instantiated Attack Graph</p>
    <p>Backing Files Subjects</p>
    <p>Objects</p>
    <p>Processes</p>
    <p>Instantiate</p>
    <p>Extract</p>
    <p>Parse Tag/L ink</p>
    <p>Recover Instantiate</p>
    <p>SEPolicy</p>
    <p>F S</p>
    <p>Gd Gf</p>
    <p>OverlayGs Gp</p>
    <p>O</p>
    <p>P</p>
    <p>Ga</p>
  </div>
  <div class="page">
    <p>Building an Attack-Graph</p>
    <p>Subject</p>
    <p>Dataflow Flat Dataflow</p>
    <p>Process Tree</p>
    <p>Fully Instantiated Attack Graph</p>
    <p>Backing Files Subjects</p>
    <p>Objects</p>
    <p>Processes</p>
    <p>Instantiate</p>
    <p>Extract</p>
    <p>Parse Tag/L ink</p>
    <p>Recover Instantiate</p>
    <p>SEPolicy</p>
    <p>F S</p>
    <p>Gd Gf</p>
    <p>OverlayGs Gp</p>
    <p>O</p>
    <p>P</p>
    <p>Ga</p>
  </div>
  <div class="page">
    <p>Building an Attack-Graph</p>
    <p>Subject</p>
    <p>Dataflow Flat Dataflow</p>
    <p>Process Tree</p>
    <p>Fully Instantiated Attack Graph</p>
    <p>Backing Files Subjects</p>
    <p>Objects</p>
    <p>Processes</p>
    <p>Instantiate</p>
    <p>Extract</p>
    <p>Parse Tag/L ink</p>
    <p>Recover Instantiate</p>
    <p>SEPolicy</p>
    <p>F S</p>
    <p>Gd Gf</p>
    <p>OverlayGs Gp</p>
    <p>O</p>
    <p>P</p>
    <p>Ga</p>
  </div>
  <div class="page">
    <p>Building an Attack-Graph</p>
    <p>Subject</p>
    <p>Dataflow Flat Dataflow</p>
    <p>Process Tree</p>
    <p>Fully Instantiated Attack Graph</p>
    <p>Backing Files Subjects</p>
    <p>Objects</p>
    <p>Processes</p>
    <p>Instantiate</p>
    <p>Extract</p>
    <p>Parse Tag/L ink</p>
    <p>Recover Instantiate</p>
    <p>SEPolicy</p>
    <p>F S</p>
    <p>Gd Gf</p>
    <p>OverlayGs Gp</p>
    <p>O</p>
    <p>P</p>
    <p>Ga</p>
  </div>
  <div class="page">
    <p>Building an Attack-Graph</p>
    <p>Subject</p>
    <p>Dataflow Flat Dataflow</p>
    <p>Process Tree</p>
    <p>Fully Instantiated Attack Graph</p>
    <p>Backing Files Subjects</p>
    <p>Objects</p>
    <p>Processes</p>
    <p>Instantiate</p>
    <p>Extract</p>
    <p>Parse Tag/L ink</p>
    <p>Recover Instantiate</p>
    <p>SEPolicy</p>
    <p>F S</p>
    <p>Gd Gf</p>
    <p>OverlayGs Gp</p>
    <p>O</p>
    <p>P</p>
    <p>Ga</p>
  </div>
  <div class="page">
    <p>Building an Attack-Graph</p>
    <p>Subject</p>
    <p>Dataflow Flat Dataflow</p>
    <p>Process Tree</p>
    <p>Fully Instantiated Attack Graph</p>
    <p>Backing Files Subjects</p>
    <p>Objects</p>
    <p>Processes</p>
    <p>Instantiate</p>
    <p>Extract</p>
    <p>Parse Tag/L ink</p>
    <p>Recover Instantiate</p>
    <p>SEPolicy</p>
    <p>F S</p>
    <p>Gd Gf</p>
    <p>OverlayGs Gp</p>
    <p>O</p>
    <p>P</p>
    <p>Ga</p>
  </div>
  <div class="page">
    <p>Building an Attack-Graph</p>
    <p>Subject</p>
    <p>Dataflow Flat Dataflow</p>
    <p>Process Tree</p>
    <p>Fully Instantiated Attack Graph</p>
    <p>Backing Files Subjects</p>
    <p>Objects</p>
    <p>Processes</p>
    <p>Instantiate</p>
    <p>Extract</p>
    <p>Parse Tag/L ink</p>
    <p>Recover Instantiate</p>
    <p>SEPolicy</p>
    <p>F S</p>
    <p>Gd Gf</p>
    <p>OverlayGs Gp</p>
    <p>O</p>
    <p>P</p>
    <p>Ga</p>
  </div>
  <div class="page">
    <p>Building an Attack-Graph</p>
    <p>Subject</p>
    <p>Dataflow Flat Dataflow</p>
    <p>Process Tree</p>
    <p>Fully Instantiated Attack Graph</p>
    <p>Backing Files Subjects</p>
    <p>Objects</p>
    <p>Processes</p>
    <p>Instantiate</p>
    <p>Extract</p>
    <p>Parse Tag/L ink</p>
    <p>Recover Instantiate</p>
    <p>SEPolicy</p>
    <p>F S</p>
    <p>Gd Gf</p>
    <p>OverlayGs Gp</p>
    <p>O</p>
    <p>P</p>
    <p>Ga</p>
  </div>
  <div class="page">
    <p>Building an Attack-Graph</p>
    <p>Subject</p>
    <p>Dataflow Flat Dataflow</p>
    <p>Process Tree</p>
    <p>Fully Instantiated Attack Graph</p>
    <p>Backing Files Subjects</p>
    <p>Objects</p>
    <p>Processes</p>
    <p>Instantiate</p>
    <p>Extract</p>
    <p>Parse Tag/L ink</p>
    <p>Recover Instantiate</p>
    <p>SEPolicy</p>
    <p>F S</p>
    <p>Gd Gf</p>
    <p>OverlayGs Gp</p>
    <p>O</p>
    <p>P</p>
    <p>Ga</p>
  </div>
  <div class="page">
    <p>Processes Recovery</p>
  </div>
  <div class="page">
    <p>Processes Recovery  We want to know what objects processes</p>
    <p>can access based upon the system policy</p>
  </div>
  <div class="page">
    <p>Processes Recovery  We want to know what objects processes</p>
    <p>can access based upon the system policy  This is based upon their permissions</p>
    <p>(UID, GID, label, capabilities)</p>
  </div>
  <div class="page">
    <p>Processes Recovery  We want to know what objects processes</p>
    <p>can access based upon the system policy  This is based upon their permissions</p>
    <p>(UID, GID, label, capabilities)  We have no processes in static firmware!</p>
    <p>?</p>
    <p>?</p>
    <p>?</p>
    <p>??</p>
    <p>??</p>
    <p>Binary Firmware</p>
  </div>
  <div class="page">
    <p>Processes Recovery  We want to know what objects processes</p>
    <p>can access based upon the system policy  This is based upon their permissions</p>
    <p>(UID, GID, label, capabilities)  We have no processes in static firmware!</p>
    <p>Can we recover processes and their credentials just from firmware?</p>
    <p>?</p>
    <p>?</p>
    <p>?</p>
    <p>??</p>
    <p>??</p>
    <p>Binary Firmware</p>
  </div>
  <div class="page">
    <p>Emulating Androids Boot</p>
    <p>property_contexts</p>
    <p>file_contexts</p>
    <p>service_contextsseapp_contexts</p>
    <p>mac_permissions.xml</p>
    <p>init</p>
    <p>kernel</p>
    <p>ueventd</p>
    <p>zygote servicemanager</p>
    <p>system_server</p>
    <p>init.rc</p>
    <p>/etc/services/*.rc</p>
    <p>ueventd.rc</p>
    <p>sepolicy</p>
    <p>Object Read-by Process Relation</p>
    <p>Boots system, manages props</p>
  </div>
  <div class="page">
    <p>Emulating Androids Boot  Androids boot process is well-specified by the platform</p>
    <p>property_contexts</p>
    <p>file_contexts</p>
    <p>service_contextsseapp_contexts</p>
    <p>mac_permissions.xml</p>
    <p>init</p>
    <p>kernel</p>
    <p>ueventd</p>
    <p>zygote servicemanager</p>
    <p>system_server</p>
    <p>init.rc</p>
    <p>/etc/services/*.rc</p>
    <p>ueventd.rc</p>
    <p>sepolicy</p>
    <p>Object Read-by Process Relation</p>
    <p>Boots system, manages props</p>
  </div>
  <div class="page">
    <p>Emulating Androids Boot  Androids boot process is well-specified by the platform  Init.rc files are loaded describing services, or native daemons</p>
    <p>property_contexts</p>
    <p>file_contexts</p>
    <p>service_contextsseapp_contexts</p>
    <p>mac_permissions.xml</p>
    <p>init</p>
    <p>kernel</p>
    <p>ueventd</p>
    <p>zygote servicemanager</p>
    <p>system_server</p>
    <p>init.rc</p>
    <p>/etc/services/*.rc</p>
    <p>ueventd.rc</p>
    <p>sepolicy</p>
    <p>Object Read-by Process Relation</p>
    <p>Boots system, manages props</p>
  </div>
  <div class="page">
    <p>Emulating Androids Boot  Androids boot process is well-specified by the platform  Init.rc files are loaded describing services, or native daemons  Explicit credential assignment for services</p>
    <p>property_contexts</p>
    <p>file_contexts</p>
    <p>service_contextsseapp_contexts</p>
    <p>mac_permissions.xml</p>
    <p>init</p>
    <p>kernel</p>
    <p>ueventd</p>
    <p>zygote servicemanager</p>
    <p>system_server</p>
    <p>init.rc</p>
    <p>/etc/services/*.rc</p>
    <p>ueventd.rc</p>
    <p>sepolicy</p>
    <p>Object Read-by Process Relation</p>
    <p>Boots system, manages props</p>
  </div>
  <div class="page">
    <p>Emulating Androids Boot  Androids boot process is well-specified by the platform  Init.rc files are loaded describing services, or native daemons  Explicit credential assignment for services  Allows the capture of boot-time changes to the filesystem</p>
    <p>property_contexts</p>
    <p>file_contexts</p>
    <p>service_contextsseapp_contexts</p>
    <p>mac_permissions.xml</p>
    <p>init</p>
    <p>kernel</p>
    <p>ueventd</p>
    <p>zygote servicemanager</p>
    <p>system_server</p>
    <p>init.rc</p>
    <p>/etc/services/*.rc</p>
    <p>ueventd.rc</p>
    <p>sepolicy</p>
    <p>Object Read-by Process Relation</p>
    <p>Boots system, manages props</p>
  </div>
  <div class="page">
    <p>Emulating Androids Boot  Androids boot process is well-specified by the platform  Init.rc files are loaded describing services, or native daemons  Explicit credential assignment for services  Allows the capture of boot-time changes to the filesystem  Without incorporating this, cross-vendor analysis doesnt scale</p>
    <p>and accuracy suffers</p>
    <p>property_contexts</p>
    <p>file_contexts</p>
    <p>service_contextsseapp_contexts</p>
    <p>mac_permissions.xml</p>
    <p>init</p>
    <p>kernel</p>
    <p>ueventd</p>
    <p>zygote servicemanager</p>
    <p>system_server</p>
    <p>init.rc</p>
    <p>/etc/services/*.rc</p>
    <p>ueventd.rc</p>
    <p>sepolicy</p>
    <p>Object Read-by Process Relation</p>
    <p>Boots system, manages props</p>
  </div>
  <div class="page">
    <p>Evaluation of BigMAC</p>
    <p>Ground Truth Evaluation  How does BigMAC recovery compare to</p>
    <p>extracting security policies from a running device?</p>
    <p>Attack Surface Case Studies  Evaluation of our Prolog query engine to</p>
    <p>discover attack paths from and to critical Android components</p>
  </div>
  <div class="page">
    <p>Ground-truth Evaluation (Files)</p>
    <p>Samsung S7 Edge (7.0.0) Pixel 1 (7.1.2) Path Count %Files Path Count %Files</p>
    <p>Correct /system 5,233 93.1% /system 2,301 67.6% Files /data 115 2.0% /vendor 630 18.5%</p>
    <p>/dev 40 0.7% /data 115 3.4% Different /dev 46 0.8% /dev 28 0.8% DAC/MAC /mnt 7 0.1% /sbin 5 0.1%</p>
    <p>/system 5 0.1% /mnt 2 0.1% Extra /dev 73 1.3% /dev 167 4.9% Files /system 6 0.1% /cache 4 0.1%</p>
    <p>/acct 1 0.0% /acct 1 0.0% Total: 5,621 100% Total: 3,405 100% DAC/MAC Correct: 98.7% DAC/MAC Correct: 98.6%</p>
  </div>
  <div class="page">
    <p>Ground-truth Evaluation (Files)</p>
    <p>Our recovered file metadata is 98% accurate to an equivalent running device.</p>
    <p>Samsung S7 Edge (7.0.0) Pixel 1 (7.1.2) Path Count %Files Path Count %Files</p>
    <p>Correct /system 5,233 93.1% /system 2,301 67.6% Files /data 115 2.0% /vendor 630 18.5%</p>
    <p>/dev 40 0.7% /data 115 3.4% Different /dev 46 0.8% /dev 28 0.8% DAC/MAC /mnt 7 0.1% /sbin 5 0.1%</p>
    <p>/system 5 0.1% /mnt 2 0.1% Extra /dev 73 1.3% /dev 167 4.9% Files /system 6 0.1% /cache 4 0.1%</p>
    <p>/acct 1 0.0% /acct 1 0.0% Total: 5,621 100% Total: 3,405 100% DAC/MAC Correct: 98.7% DAC/MAC Correct: 98.6%</p>
  </div>
  <div class="page">
    <p>Ground-truth Evaluation (Proc.)</p>
    <p>Samsung S7 Edge (7.0.0)</p>
    <p>Pixel 1 (7.1.2) Pixel 1 (8.1.0) Pixel 1 (9.0.0)</p>
    <p>Pair Found (TP) Missing Native (FN) Missing App (FN)</p>
    <p>Samsung S7 Edge (7.0.0)</p>
    <p>Pixel 1 (7.1.2) Pixel 1 (8.1.0) Pixel 1 (9.0.0) 0</p>
    <p>P ro</p>
    <p>ce ss</p>
    <p>C o</p>
    <p>u n</p>
    <p>t</p>
    <p>Correct (TP) Different DAC/Cap. (FP) Extra (FP)</p>
    <p>(a) Processes Recovered by BIGMAC (b) Actual device processes</p>
  </div>
  <div class="page">
    <p>Ground-truth Evaluation (Proc.)</p>
    <p>Of the paired processes, we achieve, at best, 74.7% accuracy of process credentials</p>
    <p>Samsung S7 Edge (7.0.0)</p>
    <p>Pixel 1 (7.1.2) Pixel 1 (8.1.0) Pixel 1 (9.0.0)</p>
    <p>Pair Found (TP) Missing Native (FN) Missing App (FN)</p>
    <p>Samsung S7 Edge (7.0.0)</p>
    <p>Pixel 1 (7.1.2) Pixel 1 (8.1.0) Pixel 1 (9.0.0) 0</p>
    <p>P ro</p>
    <p>ce ss</p>
    <p>C o</p>
    <p>u n</p>
    <p>t</p>
    <p>Correct (TP) Different DAC/Cap. (FP) Extra (FP)</p>
    <p>(a) Processes Recovered by BIGMAC (b) Actual device processes</p>
  </div>
  <div class="page">
    <p>Prolog Query Interface</p>
    <p>query_mac(S,T,C,P). query_mac_dac(S,T,C,P). query_mac_dac_cap(S,T,C,B,P). query_mac_dac_cap_ext(S,T,C,B,E,P).</p>
    <p>We developed a Prolog query engine to find attack-paths with MAC, DAC, CAP, and external attack surface filtering</p>
  </div>
  <div class="page">
    <p>Prolog Query Interface</p>
    <p>query_mac(S,T,C,P). query_mac_dac(S,T,C,P). query_mac_dac_cap(S,T,C,B,P). query_mac_dac_cap_ext(S,T,C,B,E,P).</p>
    <p>We developed a Prolog query engine to find attack-paths with MAC, DAC, CAP, and external attack surface filtering</p>
    <p>As a case study, we ran queries against a 1.3 million edge Samsung S8+ and a ~2 million</p>
    <p>edge LG G7 image</p>
  </div>
  <div class="page">
    <p>Layered Path Reduction</p>
    <p>query_mac(untrusted_app,mediaserver,4,P). query_mac_dac(untrusted_app,mediaserver,4,P).</p>
    <p>#Paths Time (s) 102,915 22.48</p>
  </div>
  <div class="page">
    <p>Layered Path Reduction</p>
    <p>query_mac(untrusted_app,mediaserver,4,P). query_mac_dac(untrusted_app,mediaserver,4,P).</p>
    <p>#Paths Time (s) 102,915 22.48</p>
    <p>Each additional layer reduces the number of possible paths.</p>
    <p>MAC to MAC+DAC has a 20x reduction in the number of paths to be considered.</p>
  </div>
  <div class="page">
    <p>Process Strength</p>
    <p>query_mac_dac(init,_,1,P). query_mac_dac(system_server,_,1,P). query_mac_dac(hal_usb,_,1,P).</p>
    <p>query_mac_dac(init,_,1,P). query_mac_dac(system_server,_,1,P). query_mac_dac(lpm,_,1,P).</p>
    <p>Image Process # Writable # IPC</p>
    <p>Samsung S8+</p>
    <p>init 2,066 296</p>
    <p>system_server 1,398 458</p>
    <p>lpm 634 8</p>
    <p>LG G7</p>
    <p>init 1,233 418</p>
    <p>system_server 573 368</p>
    <p>hal_usb_default 508 19</p>
  </div>
  <div class="page">
    <p>Process Strength</p>
    <p>query_mac_dac(init,_,1,P). query_mac_dac(system_server,_,1,P). query_mac_dac(hal_usb,_,1,P).</p>
    <p>query_mac_dac(init,_,1,P). query_mac_dac(system_server,_,1,P). query_mac_dac(lpm,_,1,P).</p>
    <p>Image Process # Writable # IPC</p>
    <p>Samsung S8+</p>
    <p>init 2,066 296</p>
    <p>system_server 1,398 458</p>
    <p>lpm 634 8</p>
    <p>LG G7</p>
    <p>init 1,233 418</p>
    <p>system_server 573 368</p>
    <p>hal_usb_default 508 19</p>
    <p>Some of the most powerful processes (system_server) on Android deal with some of the most untrusted data.</p>
  </div>
  <div class="page">
    <p>Process Strength</p>
    <p>query_mac_dac(init,_,1,P). query_mac_dac(system_server,_,1,P). query_mac_dac(hal_usb,_,1,P).</p>
    <p>query_mac_dac(init,_,1,P). query_mac_dac(system_server,_,1,P). query_mac_dac(lpm,_,1,P).</p>
    <p>Image Process # Writable # IPC</p>
    <p>Samsung S8+</p>
    <p>init 2,066 296</p>
    <p>system_server 1,398 458</p>
    <p>lpm 634 8</p>
    <p>LG G7</p>
    <p>init 1,233 418</p>
    <p>system_server 573 368</p>
    <p>hal_usb_default 508 19</p>
    <p>Some of the most powerful processes (system_server) on Android deal with some of the most untrusted data.</p>
    <p>system_server should be refactored into smaller, less privileged processes, similar to mediaserver</p>
  </div>
  <div class="page">
    <p>Privilege Escalation Analysis</p>
    <p>process:zygote &lt;CAP SYS ADMIN&gt;</p>
    <p>&lt;various files&gt;</p>
    <p>process:crash dump process:vold &lt;uid=0&gt;</p>
    <p>crash dump exec:transition</p>
    <p>*:write</p>
    <p>vold:ptrace</p>
    <p>#1 query_mac_dac(zygote,vold,3,P).</p>
    <p>#2 query_mac_dac_cap(_,crash_dump,1,CAP_SYS_ADMIN,P).</p>
    <p>CVE-2018-9488</p>
  </div>
  <div class="page">
    <p>Privilege Escalation Analysis</p>
    <p>process:zygote &lt;CAP SYS ADMIN&gt;</p>
    <p>&lt;various files&gt;</p>
    <p>process:crash dump process:vold &lt;uid=0&gt;</p>
    <p>crash dump exec:transition</p>
    <p>*:write</p>
    <p>vold:ptrace</p>
    <p>#1 query_mac_dac(zygote,vold,3,P).</p>
    <p>#2 query_mac_dac_cap(_,crash_dump,1,CAP_SYS_ADMIN,P).</p>
    <p>CVE-2018-9488</p>
  </div>
  <div class="page">
    <p>Conclusion  We create BigMAC, one of the most fine-grained policy</p>
    <p>analysis frameworks for Android devices, and recover a running systems security state from static firmware</p>
    <p>BigMAC surpasses previous MAC-only policy analysis approaches through its layered path reduction, improving analysis results and discarding impossible runtime paths</p>
    <p>We highlight BigMACs ability to investigate escalation paths and examine the strength of processes</p>
    <p>BigMAC</p>
    <p>Instantiated Policy Graph Query Input</p>
    <p>SEPolicy Parsing</p>
    <p>Policy Instantiation</p>
    <p>Filesystem Extraction DAC/CAP/Labels</p>
    <p>Type Relations</p>
    <p>Processes/Objects</p>
    <p>File / Object IPC ObjectSubject / Process</p>
    <p>Firmware Filesystems</p>
    <p>Real-System (Ideal) Processes/Files</p>
    <p>Attack Graph Ground Truth Comparison</p>
    <p>Runtime</p>
    <p>Extraction Ctx.Ctx.</p>
    <p>Process Tree Credentials</p>
    <p>File DAC/MAC</p>
    <p>https://github.com/fics/BigMAC</p>
    <p>@Digital_Coldhttps://hernan.de/z</p>
  </div>
</Presentation>
