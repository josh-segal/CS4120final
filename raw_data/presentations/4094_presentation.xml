<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Leveraging Flawed PHP Tutorials for Seeding Large-Scale Web Vulnerability</p>
    <p>Discovery</p>
    <p>Tommi Unruh, Bhargava Shastry, Malte Skoruppa, Federico Maggi, Konrad Rieck, Jean-Pierre Seifert, and Fabian Yamaguchi</p>
  </div>
  <div class="page">
    <p>Origins Oakland14: Modeling and Discovering Vulnerabilities</p>
    <p>with Code Property Graphs</p>
    <p>Joern</p>
    <p>Euro S&amp;P17: Efficient and Flexible Discovery of PHP Application Vulnerabilities</p>
    <p>Joern for PHP</p>
  </div>
  <div class="page">
    <p>Pitch Hypothesis: Vulnerabilities in popular tutorials</p>
    <p>propagate to production code</p>
    <p>Our proposal Use pattern mining to:</p>
    <p>Examine hypothesis  Scale up vulnerability search</p>
  </div>
  <div class="page">
    <p>Key Results  64,415 repos scanned, 117 vulnerabilities</p>
    <p>Hypothesis validated!</p>
    <p>8 SQLi vulnerabilities traced to a single tutorial!  Used a standard PC and broadband DSL</p>
    <p>Low barrier to entry!</p>
  </div>
  <div class="page">
    <p>Motivation Manual audit of popular PHP tutorials betrayed lack of</p>
    <p>security understanding</p>
    <p>If developers borrow code, they borrow vulns</p>
  </div>
  <div class="page">
    <p>Design</p>
    <p>$a = $_p[a] mysql_q($a)</p>
    <p>$_p * *</p>
    <p>$b = $_p[x] mysql_q($b)</p>
    <p>Vulnerable Tutorial</p>
    <p>Template Graph Traversal</p>
    <p>GitHub Analogue</p>
  </div>
  <div class="page">
    <p>Example</p>
  </div>
  <div class="page">
    <p>Template generation  Lightweight PHP parser  Traversals  Gremlin  Python GitHub Crawler  Code serialization  Joern for PHP</p>
    <p>https://github.com/tommiu/ccdetection</p>
    <p>Implementation</p>
  </div>
  <div class="page">
    <p>Results</p>
    <p>Data set Size Num. Analogues</p>
    <p>Num. Vulnerabilities</p>
    <p>Not popular 42,064 269 80 (29.74%)</p>
    <p>Popular 16,037 528 35 (6.63%)</p>
    <p>Very popular 6,314 23 2 (8.7%)</p>
    <p>Total 64,415 820 117 (14.27%)</p>
  </div>
  <div class="page">
    <p>Insights  Traversals efficient for scaling up analysis  Structural analysis (AST) robust  Run time for top 10 PHP projects low  Standard desktop PC  19s &lt; t &lt; 53 m</p>
  </div>
  <div class="page">
    <p>Summary  Developers consult informal documentation  Poorly written tutorials may put software at risk  Finding vulnerabilities from tutorials is possible</p>
  </div>
  <div class="page">
    <p>Future Work  Language agnostic analogue detection  Plug-in for IDEs such as Eclipse</p>
  </div>
  <div class="page">
    <p>Code Joern</p>
    <p>https://github.com/octopus-platform/joern</p>
    <p>PHP Joern</p>
    <p>https://github.com/malteskoruppa/phpjoern</p>
    <p>GitHub Spider</p>
    <p>https://github.com/tommiu/GithubSpider</p>
  </div>
  <div class="page">
    <p>Questions?</p>
  </div>
  <div class="page">
    <p>Related Work  Code clone finders</p>
    <p>Code borrowed from tutorials likely lexically different  Lexical matching  False negatives</p>
    <p>Vulnerability scanners  Not yet another PHP vuln scanner  Intended to shed light on unsafe coding practices</p>
  </div>
</Presentation>
