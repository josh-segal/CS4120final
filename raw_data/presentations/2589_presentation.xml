<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>RC3 Recursively Cautious Congestion Control</p>
    <p>Radhika Mittal, Justine Sherry, Sylvia Ratnasamy, Scott Shenker</p>
    <p>UC Berkeley</p>
  </div>
  <div class="page">
    <p>Roadmap</p>
    <p>Isnt congestion control a solved problem?  Conflicting goals of high throughput and friendliness solved through priorities</p>
    <p>Scope for performance gains  Increases with increasing RTTxBW</p>
    <p>Design Details  Additional packets sent backwards from the end using multiple low priority levels</p>
    <p>Simulation Results  40-80% reduction in FCT over baseline TCP implementation</p>
    <p>Linux Implementation and Evaluation  Simple modifications, agnostic to the underlying congestion control algorithm</p>
    <p>Challenges and Future</p>
  </div>
  <div class="page">
    <p>Roadmap</p>
    <p>Isnt congestion control a solved problem?  Conflicting goals of high throughput and friendliness solved through priorities</p>
    <p>Scope for performance gains  Increases with increasing RTTxBW</p>
    <p>Design Details  Additional packets sent backwards from the end using multiple low priority levels</p>
    <p>Simulation Results  40-80% reduction in FCT over baseline TCP implementation</p>
    <p>Linux Implementation and Evaluation  Simple modifications, agnostic to the underlying congestion control algorithm</p>
    <p>Challenges and Future</p>
  </div>
  <div class="page">
    <p>Short Flow Completion Time</p>
    <p>Being fast really matters. Users really respond to speed.</p>
    <p>0.5 sec delay caused a 20% drop in traffic  Google</p>
    <p>2 sec slowdown changed queries/user by -1.8% and revenue/user by -4.3%  Bing</p>
    <p>5 sec speedup resulted in a 25% increase in page views and 7-12% increase in revenue  Shopzilla</p>
    <p>- James Hamiltons Blog</p>
  </div>
  <div class="page">
    <p>RC3 in a nutshell</p>
    <p>Send additional packets from the flow using low priority service (WQoS),</p>
    <p>filling up only the spare capacity in the network  40-80% Reduction in Flow Completion Time  No harm to the regular high priority traffic  Better use of Network Resources</p>
  </div>
  <div class="page">
    <p>Example Scenario</p>
    <p>Network Provider Receiver Sender</p>
  </div>
  <div class="page">
    <p>Network Provider Viewpoint</p>
    <p>What if I get a burst of traffic in peak hours or a failure occurs?</p>
    <p>Must overprovision 30-50% average link utilization</p>
    <p>Sender Network Provider</p>
    <p>Receiver</p>
  </div>
  <div class="page">
    <p>Endhost Viewpoint</p>
    <p>The network might be very</p>
    <p>congested!</p>
    <p>Must ramp-up cautiously</p>
    <p>Sender Network Provider</p>
    <p>Receiver</p>
  </div>
  <div class="page">
    <p>TCP</p>
    <p>Wasted Capacity Long FCT Slow Start</p>
    <p>Congestion Avoidance Link Fully Utilized</p>
  </div>
  <div class="page">
    <p>The Root Cause</p>
    <p>Two Goals of Congestion Control  Fill the pipe for high throughput  Do no harm to other flows</p>
    <p>Traditional Approach  Single mechanism tries to balance the two conflicting goals</p>
    <p>RC3: Decouple these goals using priorities  Fill the pipe at lower priority  Do no harm at higher priority</p>
  </div>
  <div class="page">
    <p>RC3 in action</p>
    <p>Additional Packets at Low Priority Fill the Pipe Regular TCP at High Priority</p>
    <p>Flow Completes Sooner</p>
  </div>
  <div class="page">
    <p>Example: FCT with Slow Start</p>
    <p>Sender Network Provider</p>
    <p>Receiver</p>
  </div>
  <div class="page">
    <p>Example: FCT with Slow Start</p>
    <p>Sender Network Provider</p>
    <p>Receiver</p>
  </div>
  <div class="page">
    <p>Example: FCT with Slow Start</p>
    <p>Sender Network Provider</p>
    <p>Receiver</p>
  </div>
  <div class="page">
    <p>Example: FCT with RC3</p>
    <p>Remaining 6 packets sent at lower priority with the 1st packet Flow completes in 1RTT</p>
    <p>Sender Network Provider</p>
    <p>Receiver</p>
  </div>
  <div class="page">
    <p>Roadmap</p>
    <p>Isnt congestion control a solved problem?  Conflicting goals of high throughput and friendliness decoupled through priorities</p>
    <p>Scope for performance gains  Increases with increasing RTTxBW</p>
    <p>Design Details  Additional packets sent backwards from the end using multiple low priority levels</p>
    <p>Simulation Results  40-80% reduction in FCT over baseline TCP implementation</p>
    <p>Linux Implementation and Evaluation  Simple modifications, agnostic to the underlying congestion control algorithm</p>
    <p>Challenges and Future</p>
  </div>
  <div class="page">
    <p>Theoretical Model</p>
    <p>Flow Size (N) i ARTT</p>
    <p>% F</p>
    <p>C T</p>
    <p>R e</p>
    <p>d u</p>
    <p>ct io</p>
    <p>n</p>
    <p>TCP: 1 RTT</p>
    <p>RC3: 1 RTT</p>
    <p>TCP: RTTs</p>
    <p>RC3: 1 RTT</p>
    <p>log( N</p>
    <p>i</p>
    <p>) TCP: RTTs +</p>
    <p>RC3: 1 RTT +</p>
    <p>log( A  RTT</p>
    <p>i</p>
    <p>) N</p>
    <p>A</p>
    <p>N</p>
    <p>A</p>
    <p>Initial Congestion</p>
    <p>Window</p>
    <p>Available Capacity A = (1-u)BW</p>
  </div>
  <div class="page">
    <p>Parameter Sensitivity: AxRTT</p>
    <p>TCP: 1 RTT</p>
    <p>RC3: 1 RTT</p>
    <p>TCP: RTTs</p>
    <p>RC3: 1 RTT</p>
    <p>log( N</p>
    <p>i</p>
    <p>) TCP: RTTs +</p>
    <p>RC3: 1 RTT +</p>
    <p>log( A  RTT</p>
    <p>i</p>
    <p>) N</p>
    <p>A</p>
    <p>N</p>
    <p>A</p>
    <p>Flow Size (N) i</p>
    <p>% F</p>
    <p>C T</p>
    <p>R e</p>
    <p>d u</p>
    <p>ct io</p>
    <p>n</p>
    <p>ARTT</p>
    <p>Higher ARTT</p>
    <p>Initial Congestion</p>
    <p>Window</p>
    <p>Available Capacity A = (1-u)BW</p>
  </div>
  <div class="page">
    <p>Roadmap</p>
    <p>Isnt congestion control a solved problem?  Conflicting goals of high throughput and friendliness decoupled through priorities</p>
    <p>Scope for performance gains  Increases with increasing RTTxBW</p>
    <p>Design Details  Additional packets sent backwards from the end using multiple low priority levels</p>
    <p>Simulation Results  40-80% reduction in FCT over baseline TCP implementation</p>
    <p>Linux Implementation and Evaluation  Simple modifications, agnostic to the underlying congestion control algorithm</p>
    <p>Challenges and Future</p>
  </div>
  <div class="page">
    <p>WQoS Implementation</p>
    <p>Routers offer several layers of worse service  Use Priority Queues  Support already present</p>
    <p>Packets carry priority (possibly) in DSCP field  Priority 0  default (highest)  Priority 1, Priority 2, Priority 3,.</p>
  </div>
  <div class="page">
    <p>RC3 Design</p>
    <p>RC3 runs two parallel control loops</p>
    <p>TCP control loop Transmits packets that obey unmodified TCP logic at highest priority</p>
    <p>Recursive Low Priority (RLP) control loop Transmits additional packets at low priority</p>
  </div>
  <div class="page">
    <p>What packets are sent at low priority?</p>
    <p>Minimum overlap between packets sent by the two control loops for maximum gains</p>
    <p>RLP starts from the last packet in buffer  Goes in reverse order</p>
    <p>High Priority Low Priority</p>
    <p>TCP Control Flow RLP Control Flow</p>
  </div>
  <div class="page">
    <p>Single Flow</p>
    <p>Sender Network Provider Receiver</p>
    <p>BWxRTT = 9 packets ...</p>
  </div>
  <div class="page">
    <p>Multiple Flows?</p>
    <p>Sender 2</p>
    <p>Sender 1</p>
    <p>Network Provider Receiver</p>
  </div>
  <div class="page">
    <p>Routers Priority Queue</p>
  </div>
  <div class="page">
    <p>Multiple Flows?</p>
    <p>Sender 2</p>
    <p>Network Provider Receiver</p>
  </div>
  <div class="page">
    <p>Recursively Cautious Congestion Control</p>
    <p>Use multiple priority levels  Send exponentially larger number of packets at</p>
    <p>each priority level</p>
    <p>Priority 1 Priority 0 Priority 2 Priority 3</p>
    <p>TCP Control Flow RLP Control Flow</p>
  </div>
  <div class="page">
    <p>RC3 Design: Quick Recap</p>
    <p>Two parallel control loops  Regular TCP  Recursive Low Priority (RLP)</p>
    <p>Minimum overlap between the two control loops  Send low priority packets from the end in reverse</p>
    <p>order</p>
    <p>Max-min fairness across flows  Use multiple priority levels</p>
  </div>
  <div class="page">
    <p>Roadmap</p>
    <p>Isnt congestion control a solved problem?  Conflicting goals of high throughput and friendliness decoupled through priorities</p>
    <p>Scope for performance gains  Increases with increasing RTTxBW</p>
    <p>Design Details  Additional packets sent backwards from the end using multiple low priority levels</p>
    <p>Simulation Results  40-80% reduction in FCT over baseline TCP implementation</p>
    <p>Linux Implementation and Evaluation  Simple modifications, agnostic to the underlying congestion control algorithm</p>
    <p>Challenges and Future</p>
  </div>
  <div class="page">
    <p>Simulation Setup</p>
    <p>Multi-hop Internet-2 network topology  10 core nodes, 100 end hosts</p>
    <p>1Gbps bottleneck bandwidth  40ms average RTT  Baseline is 30% average link utilization  Pareto flow size distribution with Poisson inter-arrival  Initial Congestion Window of 4 segments</p>
  </div>
  <div class="page">
    <p>Comparing baseline simulation results with the theoretical model</p>
    <p>Flow Size (N)</p>
    <p>i ARTT</p>
    <p>% F</p>
    <p>C T</p>
    <p>R e</p>
    <p>d u</p>
    <p>ct io</p>
    <p>n</p>
  </div>
  <div class="page">
    <p>Baseline</p>
  </div>
  <div class="page">
    <p>Flow Size &lt; 4MSS - No RC3 packets sent</p>
    <p>Benefits because high priority congestion is reduced</p>
    <p>Baseline</p>
  </div>
  <div class="page">
    <p>Model does not account for queuing</p>
    <p>delays and drops</p>
    <p>Baseline</p>
  </div>
  <div class="page">
    <p>Average Over Flows</p>
    <p>Average Over Bytes</p>
    <p>Regular TCP 0.135s 0.443s</p>
    <p>RC3 0.076s 0.114s</p>
    <p>% Reduction 43.54% 74.35%</p>
    <p>Baseline</p>
  </div>
  <div class="page">
    <p>Comparing RC3 with other schemes</p>
  </div>
  <div class="page">
    <p>RC3 in comparison</p>
    <p>Increasing the initial congestion window  Rate Control Protocol (RCP)</p>
  </div>
  <div class="page">
    <p>RC3 in comparison</p>
    <p>Increasing the initial congestion window</p>
    <p>Rate Control Protocol (RCP)</p>
  </div>
  <div class="page">
    <p>Comparison: Increasing InitCWnd</p>
    <p>Flow Size (N) i ARTT i'</p>
    <p>TCP: 1 RTT</p>
    <p>RC3: 1 RTT</p>
    <p>TCP: RTTs</p>
    <p>RC3: 1 RTT</p>
    <p>log( N</p>
    <p>i</p>
    <p>) TCP: RTTs +</p>
    <p>RC3: 1 RTT +</p>
    <p>log( A  RTT</p>
    <p>i</p>
    <p>) N</p>
    <p>A</p>
    <p>N</p>
    <p>A</p>
    <p>% F</p>
    <p>C T</p>
    <p>R e</p>
    <p>d u</p>
    <p>ct io</p>
    <p>n</p>
  </div>
  <div class="page">
    <p>Comparison: Increasing InitCwnd</p>
  </div>
  <div class="page">
    <p>Short Flows penalized by Increasing Initial</p>
    <p>Congestion Window; Benefit from RC3</p>
    <p>Comparison: Increasing InitCwnd</p>
  </div>
  <div class="page">
    <p>Long flows see stronger gains with</p>
    <p>RC3</p>
    <p>Comparison: Increasing InitCwnd</p>
  </div>
  <div class="page">
    <p>RC3 in comparison</p>
    <p>Increasing the initial congestion window</p>
    <p>Rate Control Protocol (RCP)</p>
  </div>
  <div class="page">
    <p>Comparison: RCP</p>
  </div>
  <div class="page">
    <p>RCP penalizes short flows due to more</p>
    <p>aggressive long flows and explicit pacing</p>
    <p>Comparison: RCP</p>
  </div>
  <div class="page">
    <p>Comparison: RCP</p>
    <p>Long flows see similar performance gains</p>
  </div>
  <div class="page">
    <p>Stress Testing RC3</p>
    <p>Varying Link Utilization  Varying RTTxBW  More Topologies  Different Workload  Link Heterogeneity  Random Losses  Varying Priority Assignments  Application Pacing  Comparison with traditional QoS</p>
  </div>
  <div class="page">
    <p>Roadmap</p>
    <p>Isnt congestion control a solved problem?  Conflicting goals of high throughput and friendliness decoupled through priorities</p>
    <p>Scope for performance gains  Increases with increasing RTTxBW</p>
    <p>Design Details  Additional packets sent backwards from the end using multiple low priority levels</p>
    <p>Simulation Results  40-80% reduction in FCT over baseline TCP implementation</p>
    <p>Linux Implementation and Evaluation  Simple modifications, agnostic to the underlying congestion control algorithm</p>
    <p>Challenges and Future</p>
  </div>
  <div class="page">
    <p>RC3 in Implementation  Implemented in Linux 3.2 kernel</p>
    <p>121 additional LOC  Sending Data Packets: 74 LOC  Receiving Data Packets and Acks: 47 LOC</p>
    <p>Agnostic to the underlying TCP algorithm  Can be Tahoe, Reno, NewReno, BIC, CUBIC etc</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Low priority out-of-order packets processed by slow path High per-packet CPU overhead</p>
  </div>
  <div class="page">
    <p>Leveraging NIC Offloading</p>
    <p>TCP Segmentation Offload (TSO)  Multiple segments processed by sender stack as a single chunk</p>
    <p>Large Receive Offload (LRO)  Multiple segments received aggregated into a single chunk</p>
    <p>RC3 supports offloading to reduce CPU overhead  Logically treat each chunk as a single packet at the sender  This allows aggregation of segments at the receiver</p>
  </div>
  <div class="page">
    <p>Leveraging NIC Offloading</p>
  </div>
  <div class="page">
    <p>Roadmap</p>
    <p>Isnt congestion control a solved problem?  Conflicting goals of high throughput and friendliness decoupled through priorities</p>
    <p>Scope for performance gains  Increases with increasing RTTxBW</p>
    <p>Design Details  Additional packets sent backwards from the end using multiple low priority levels</p>
    <p>Simulation Results  40-80% reduction in FCT over baseline TCP implementation</p>
    <p>Linux Implementation and Evaluation  Simple modifications, agnostic to the underlying congestion control algorithm</p>
    <p>Challenges and Future</p>
  </div>
  <div class="page">
    <p>Where RC3 is of little help</p>
    <p>Low delay bandwidth product</p>
    <p>Very heavily utilized links</p>
    <p>Small queue buffer size at the bottleneck</p>
    <p>Application pacing</p>
  </div>
  <div class="page">
    <p>Deployment Concerns</p>
    <p>Partial Priorities Support</p>
    <p>Middleboxes [Honda et. al. 2011, Flach et al 2013]</p>
    <p>Wireless</p>
  </div>
  <div class="page">
    <p>Future</p>
    <p>Performance gains increase with BWxRTT  Likely to increase with time</p>
    <p>Futuristic datacenter bandwidth of 100Gbps  45% reduction in average FCT (over flows)  66% reduction in average FCT (over bytes)</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Send additional packets from a flow using several layers of low priority service</p>
    <p>Uses only the spare capacity in the network without affecting the regular traffic</p>
    <p>Gives 40-80% reduction in FCTs over baseline TCP</p>
  </div>
  <div class="page">
    <p>Thank you!</p>
    <p>Send additional packets from a flow using several layers of low priority service</p>
    <p>Uses only the spare capacity in the network without affecting the regular traffic</p>
    <p>Gives 40-80% reduction in FCTs over baseline TCP</p>
    <p>http://netsys.github.io/RC3/</p>
  </div>
  <div class="page">
    <p>Back Up!</p>
  </div>
  <div class="page">
    <p>What about dropped low priority packets?</p>
    <p>Low priority packets are transmitted only once  Losses recovered by TCP control loop  SACK indicates which segments are missing</p>
    <p>(optional)</p>
  </div>
  <div class="page">
    <p>Throughput</p>
  </div>
  <div class="page">
    <p>Varying Link Load</p>
  </div>
  <div class="page">
    <p>Varying RTTxBW</p>
  </div>
  <div class="page">
    <p>Drop Rates in Baseline Simulations</p>
    <p>Network</p>
    <p>Load Drop % (Regular</p>
    <p>TCP)</p>
    <p>Drop % (RC3)</p>
    <p>High Priority</p>
    <p>Low Priority</p>
    <p>Total</p>
  </div>
  <div class="page">
    <p>Varying Loss Rates</p>
  </div>
  <div class="page">
    <p>Topologies</p>
  </div>
  <div class="page">
    <p>Workload</p>
  </div>
  <div class="page">
    <p>Link Heterogeneity</p>
  </div>
  <div class="page">
    <p>Application Pacing</p>
  </div>
  <div class="page">
    <p>Priority Levels</p>
  </div>
  <div class="page">
    <p>Some Queues DropTail</p>
  </div>
</Presentation>
