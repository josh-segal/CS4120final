<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Distributed Network Monitoring and Debugging with SwitchPointer</p>
    <p>University of Edinburgh, Cornell University Praveen Tammana Rachit Agarwal Myungjin Lee</p>
  </div>
  <div class="page">
    <p>Network monitoring and debugging is complex</p>
  </div>
  <div class="page">
    <p>Network monitoring and debugging is complex Marple [SIGCOMM17],</p>
    <p>EverFlow [SIGCOMM15], FlowRadar [NSDI16],</p>
    <p>Trumpet [SIGCOMM16], PathDump [OSDI16],</p>
    <p>Opensketch [NSDI13]</p>
  </div>
  <div class="page">
    <p>Network monitoring and debugging is complex Marple [SIGCOMM17],</p>
    <p>EverFlow [SIGCOMM15], FlowRadar [NSDI16],</p>
    <p>Trumpet [SIGCOMM16], PathDump [OSDI16],</p>
    <p>Opensketch [NSDI13]</p>
    <p>Increasingly larger scale  Over 100k endpoints  10/40/100 GE  Aggregate traffic &gt; 100 Tbps</p>
  </div>
  <div class="page">
    <p>An example: Too many red lights</p>
    <p>F1</p>
    <p>S2S1</p>
    <p>F1: Low priority F2, F3: High priority</p>
  </div>
  <div class="page">
    <p>An example: Too many red lights</p>
    <p>F1</p>
    <p>S2S1</p>
    <p>F1: Low priority F2, F3: High priority</p>
  </div>
  <div class="page">
    <p>An example: Too many red lights</p>
    <p>F1</p>
    <p>F1 throughput</p>
    <p>S2S1</p>
    <p>bp s</p>
    <p>At S1 At S2</p>
    <p>F1: Low priority F2, F3: High priority</p>
    <p>msec msec</p>
  </div>
  <div class="page">
    <p>An example: Too many red lights</p>
    <p>F1 F2</p>
    <p>F1 throughput</p>
    <p>S2S1</p>
    <p>bp s</p>
    <p>At S1 At S2</p>
    <p>F1: Low priority F2, F3: High priority</p>
    <p>msec msec</p>
  </div>
  <div class="page">
    <p>An example: Too many red lights</p>
    <p>F1 F2</p>
    <p>F1 throughput</p>
    <p>S2S1</p>
    <p>bp s</p>
    <p>At S1 At S2</p>
    <p>~ 600 Mbps ~ 600 Mbps</p>
    <p>F1: Low priority F2, F3: High priority</p>
    <p>msec msec</p>
  </div>
  <div class="page">
    <p>An example: Too many red lights</p>
    <p>F1 F2 F3</p>
    <p>F1 throughput</p>
    <p>S2S1</p>
    <p>bp s</p>
    <p>At S1 At S2</p>
    <p>F1: Low priority F2, F3: High priority</p>
    <p>msec msec</p>
  </div>
  <div class="page">
    <p>An example: Too many red lights</p>
    <p>F1 F2 F3</p>
    <p>F1 throughput</p>
    <p>S2S1</p>
    <p>bp s</p>
    <p>At S1 At S2</p>
    <p>~ 200 MbpsF1: Low priority</p>
    <p>F2, F3: High priority msec msec</p>
  </div>
  <div class="page">
    <p>An example: Too many red lights</p>
    <p>F1 F2 F3</p>
    <p>F1 throughput</p>
    <p>S2S1</p>
    <p>bp s</p>
    <p>At S1 At S2</p>
    <p>F1: Low priority F2, F3: High priority</p>
    <p>msec msecF1,F2 at S1 F1,F3 at S2</p>
  </div>
  <div class="page">
    <p>An example: Too many red lights</p>
    <p>F1 F2 F3</p>
    <p>F1 throughput</p>
    <p>S2S1</p>
    <p>bp s</p>
    <p>At S1 At S2</p>
    <p>F1: Low priority F2, F3: High priority</p>
    <p>msec msec F1,F2 at S1 and</p>
    <p>their packet priorities F1,F2 at S1 F1,F3 at S2</p>
  </div>
  <div class="page">
    <p>In-network techniques</p>
    <p>Existing Approaches</p>
  </div>
  <div class="page">
    <p>In-network techniques</p>
    <p>Existing Approaches</p>
  </div>
  <div class="page">
    <p>In-network techniques</p>
    <p>Existing Approaches</p>
  </div>
  <div class="page">
    <p>In-network techniques</p>
    <p>Requires more data plane resources E.g.: Marple, EverFlow, FlowRadar</p>
    <p>High in-network visibility</p>
    <p>Existing Approaches</p>
  </div>
  <div class="page">
    <p>In-network techniques End-host based techniques</p>
    <p>Requires more data plane resources</p>
    <p>More resources &amp; programmability</p>
    <p>E.g.: Marple, EverFlow, FlowRadar E.g.: PathDump, Trumpet</p>
    <p>High in-network visibility</p>
    <p>Lose network visibility</p>
    <p>Existing Approaches</p>
  </div>
  <div class="page">
    <p>In-network techniques End-host based techniques</p>
    <p>Requires more data plane resources</p>
    <p>More resources &amp; programmability</p>
    <p>E.g.: Marple, EverFlow, FlowRadar E.g.: PathDump, Trumpet</p>
    <p>High in-network visibility</p>
    <p>Lose network visibility</p>
    <p>Existing Approaches</p>
    <p>SwitchPointer</p>
  </div>
  <div class="page">
    <p>SwitchPointer</p>
    <p>Insight: End-hosts collect and monitor telemetry data</p>
    <p>h2 h3</p>
    <p>h4 h1</p>
    <p>Integrates the best of two worlds</p>
  </div>
  <div class="page">
    <p>New insight: Switch stores the telemetry data</p>
    <p>SwitchPointer</p>
    <p>Insight: End-hosts collect and monitor telemetry data</p>
    <p>h2 h3</p>
    <p>h4 h1</p>
    <p>h2</p>
    <p>Integrates the best of two worlds</p>
  </div>
  <div class="page">
    <p>New insight: Switch stores the telemetry data</p>
    <p>h2</p>
    <p>SwitchPointer</p>
    <p>Insight: End-hosts collect and monitor telemetry data</p>
    <p>h2 h3</p>
    <p>h4h2 h1</p>
    <p>h2h4</p>
    <p>h4 h4</p>
    <p>pointers to end-hosts</p>
    <p>Integrates the best of two worlds</p>
  </div>
  <div class="page">
    <p>New insight: Switch stores the telemetry data</p>
    <p>h2</p>
    <p>SwitchPointer</p>
    <p>Insight: End-hosts collect and monitor telemetry data</p>
    <p>h2 h3</p>
    <p>h4h2 h1</p>
    <p>h2h4</p>
    <p>h4 h4</p>
    <p>pointers to end-hosts</p>
    <p>Integrates the best of two worlds</p>
  </div>
  <div class="page">
    <p>New insight: Switch stores the telemetry data</p>
    <p>h2</p>
    <p>SwitchPointer</p>
    <p>Insight: End-hosts collect and monitor telemetry data</p>
    <p>h2 h3</p>
    <p>h4h2 h1 h4 h4</p>
    <p>pointers to end-hosts</p>
    <p>Integrates the best of two worlds</p>
  </div>
  <div class="page">
    <p>SwitchPointer in a nutshell Switch</p>
    <p>Packet</p>
  </div>
  <div class="page">
    <p>Divides time into epochs  Maintains per-epoch pointer to all end-hosts  Embeds linkID( ) and epochID ( )</p>
    <p>SwitchPointer in a nutshell Switch</p>
    <p>Packet</p>
  </div>
  <div class="page">
    <p>Divides time into epochs  Maintains per-epoch pointer to all end-hosts  Embeds linkID( ) and epochID ( )</p>
    <p>SwitchPointer in a nutshell</p>
    <p>Collect and monitor telemetry data  Provides query service to filter telemetry data</p>
    <p>Switch</p>
    <p>End-host</p>
    <p>Packet</p>
  </div>
  <div class="page">
    <p>Divides time into epochs  Maintains per-epoch pointer to all end-hosts  Embeds linkID( ) and epochID ( )</p>
    <p>SwitchPointer in a nutshell</p>
    <p>Collect and monitor telemetry data  Provides query service to filter telemetry data</p>
    <p>Uses pointers at switches  Locates the data necessary for debugging</p>
    <p>Switch</p>
    <p>End-host</p>
    <p>Analyzer</p>
    <p>Packet</p>
  </div>
  <div class="page">
    <p>Lets revisit Too many red lights problem</p>
    <p>S2S1 S3</p>
  </div>
  <div class="page">
    <p>Lets revisit Too many red lights problem</p>
    <p>S2S1 S3</p>
  </div>
  <div class="page">
    <p>h6</p>
    <p>Lets revisit Too many red lights problem</p>
    <p>S2S1 S3</p>
    <p>S1,S2,S3 EpochIDs</p>
  </div>
  <div class="page">
    <p>h2 h3</p>
    <p>h6</p>
    <p>Lets revisit Too many red lights problem</p>
    <p>S2S1 S3h2 h6 h3h6h2 h3h6 S1,S2,S3</p>
    <p>EpochIDs</p>
  </div>
  <div class="page">
    <p>h2 h3</p>
    <p>h6</p>
    <p>Lets revisit Too many red lights problem</p>
    <p>S2S1 S3h2 h6 h3h6h2 h3h6 S1,S2,S3</p>
    <p>EpochIDs</p>
  </div>
  <div class="page">
    <p>h2 h3</p>
    <p>h6</p>
    <p>Lets revisit Too many red lights problem</p>
    <p>Query / Response</p>
    <p>S2S1 S3h2 h6 h3h6h2 h3h6 S1,S2,S3</p>
    <p>EpochIDs</p>
  </div>
  <div class="page">
    <p>h2 h3</p>
    <p>h6</p>
    <p>Lets revisit Too many red lights problem</p>
    <p>Query / ResponseF1, F2 contend at S1F1, F3 contend at S2</p>
    <p>S2S1 F1 S3h2 h6 h3h6h2 h3h6</p>
    <p>S1,S2,S3 EpochIDs</p>
  </div>
  <div class="page">
    <p>SwitchPointer: Four technical challenges</p>
    <p>How to decide the right epoch size?</p>
    <p>How to efficiently maintain pointers?</p>
    <p>How to efficiently embed telemetry data?</p>
    <p>How to handle asynchronous clocks?</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Data structure for pointers</p>
    <p>Tradeoff between memory and bandwidth, and system efficiency</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Data structure for pointers</p>
    <p>Tradeoff between memory and bandwidth, and system efficiency</p>
    <p>TimeSmall epoch size Data plane</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Data structure for pointers</p>
    <p>Tradeoff between memory and bandwidth, and system efficiency</p>
    <p>Time</p>
    <p>Per-epoch pointers</p>
    <p>Large memory Efficient</p>
    <p>Small epoch size Data plane</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Data structure for pointers</p>
    <p>Tradeoff between memory and bandwidth, and system efficiency</p>
    <p>Time</p>
    <p>Large bandwidth</p>
    <p>EfficientSmall epoch size</p>
    <p>Data plane</p>
    <p>Control plane</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Data structure for pointers</p>
    <p>Tradeoff between memory and bandwidth, and system efficiency</p>
    <p>Time</p>
    <p>Large epoch size</p>
    <p>Small memory Inefficient</p>
    <p>Small bandwidth Control plane</p>
    <p>Data plane</p>
  </div>
  <div class="page">
    <p>Our solution: Hierarchical data structure for pointers Each subsequent level has epochs with exponentially larger time scales</p>
    <p>SwitchPointer design</p>
  </div>
  <div class="page">
    <p>Our solution: Hierarchical data structure for pointers</p>
    <p>Level 1</p>
    <p>Each subsequent level has epochs with exponentially larger time scales Epoch size =</p>
    <p>SwitchPointer design</p>
  </div>
  <div class="page">
    <p>ms  ms  ms</p>
    <p>Our solution: Hierarchical data structure for pointers</p>
    <p>Level 1</p>
    <p>set of pointers</p>
    <p>Each subsequent level has epochs with exponentially larger time scales Epoch size =</p>
    <p>SwitchPointer design</p>
  </div>
  <div class="page">
    <p>ms  ms  ms</p>
    <p>2 ms 2 ms</p>
    <p>Our solution: Hierarchical data structure for pointers</p>
    <p>Level 2</p>
    <p>Level 1  set of pointers</p>
    <p>set of pointers</p>
    <p>Each subsequent level has epochs with exponentially larger time scales Epoch size =</p>
    <p>SwitchPointer design</p>
  </div>
  <div class="page">
    <p>ms  ms  ms</p>
    <p>2 ms 2 ms</p>
    <p>k ms</p>
    <p>Our solution: Hierarchical data structure for pointers</p>
    <p>Level k</p>
    <p>Level 2</p>
    <p>Level 1  set of pointers</p>
    <p>set of pointers</p>
    <p>Each subsequent level has epochs with exponentially larger time scales Epoch size =</p>
    <p>SwitchPointer design</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Our solution: Hierarchical data structure for pointers</p>
    <p>Level 3</p>
    <p>Level 2</p>
    <p>Level 1 10 set of pointers</p>
    <p>= 10 ms k = 3</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Our solution: Hierarchical data structure for pointers</p>
    <p>Level 3</p>
    <p>Level 2</p>
    <p>Level 1 10 set of pointers</p>
    <p>= 10 ms k = 3</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Our solution: Hierarchical data structure for pointers</p>
    <p>Level 3</p>
    <p>Level 2</p>
    <p>Level 1</p>
    <p>= 10 ms k = 3</p>
    <p>Redundant information</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Our solution: Hierarchical data structure for pointers</p>
    <p>Level 3</p>
    <p>Level 2</p>
    <p>Level 1</p>
    <p>= 10 ms k = 3</p>
    <p>Redundant information</p>
    <p>Storage  N x  x K</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Our solution: Hierarchical data structure for pointers</p>
    <p>Level 3</p>
    <p>Level 2</p>
    <p>Level 1</p>
    <p>= 10 ms k = 3</p>
    <p>Redundant information</p>
    <p>Storage  N x  x K</p>
    <p>100k end-hosts : 345KB</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Our solution: Hierarchical data structure for pointers</p>
    <p>Level 3</p>
    <p>Level 2</p>
    <p>Level 1</p>
    <p>Fine grained view</p>
    <p>= 10 ms k = 3</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Our solution: Hierarchical data structure for pointers</p>
    <p>Level 3</p>
    <p>Level 2</p>
    <p>Level 1</p>
    <p>Fine grained view</p>
    <p>= 10 ms k = 3</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Our solution: Hierarchical data structure for pointers</p>
    <p>Level 3</p>
    <p>Level 2</p>
    <p>Level 1</p>
    <p>= 10 ms k = 3</p>
    <p>Control plane Push top-level pointers</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Our solution: Hierarchical data structure for pointers</p>
    <p>Level 3</p>
    <p>Level 2</p>
    <p>Level 1</p>
    <p>= 10 ms k = 3</p>
    <p>Control plane  100k end-hosts : 100 Kbps</p>
  </div>
  <div class="page">
    <p>SwitchPointer: Four technical challenges</p>
    <p>How to decide the right epoch size?</p>
    <p>How to efficiently maintain pointers?</p>
    <p>How to efficiently embed telemetry data?</p>
    <p>How to handle asynchronous clocks?</p>
  </div>
  <div class="page">
    <p>Minimal Perfect Hash Functions</p>
    <p>Maps distinct keys (dest IPs) to a set of integers</p>
    <p>No hash collisions</p>
    <p>2.1 bits of storage per end-host</p>
    <p>Construction time is large</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Maintaining pointers in the hierarchical data structure</p>
    <p>Minimal perfect hash function (MPHF)</p>
    <p>MPHF</p>
    <p>Level k</p>
    <p>Level 2</p>
    <p>Level 1 Pointer</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Maintaining pointers in the hierarchical data structure</p>
    <p>Minimal perfect hash function (MPHF)</p>
    <p>Single operation to find the index to set in all levels</p>
    <p>Packets dstIP MPHF</p>
    <p>Update all levels</p>
    <p>Level k</p>
    <p>Level 2</p>
    <p>Level 1 index</p>
    <p>Pointer</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Maintaining updated pointers in the hierarchical data structure</p>
    <p>Minimal perfect hash function (MPHF)</p>
    <p>Checks dstIPs corresponding bit in the bit array</p>
    <p>dstIP1</p>
    <p>Lookup using MPHF</p>
    <p>dstIP2 dstIPn</p>
  </div>
  <div class="page">
    <p>SwitchPointer: Four technical challenges</p>
    <p>How to decide the right epoch size?</p>
    <p>How to efficiently maintain pointers?</p>
    <p>How to efficiently embed telemetry data?</p>
    <p>How to handle asynchronous clocks?</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Switch embeds telemetry data (e.g., linkID, epochID)</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Switch embeds telemetry data (e.g., linkID, epochID)</p>
    <p>INT: Packet header space limitation  Cherrypick [SOSR15] for current deployments</p>
  </div>
  <div class="page">
    <p>SwitchPointer design Switch embeds telemetry data (e.g., linkID, epochID)</p>
    <p>INT: Packet header space limitation  Cherrypick [SOSR15] for current deployments</p>
  </div>
  <div class="page">
    <p>Pod 2Pod 1</p>
    <p>SwitchPointer design Switch embeds telemetry data (e.g., linkID, epochID)</p>
    <p>INT: Packet header space limitation  Cherrypick [SOSR15] for current deployments</p>
    <p>MAC epochID linkID IP</p>
  </div>
  <div class="page">
    <p>SwitchPointer design  Switch embeds telemetry data (e.g., linkID, epochID)  Packet header space limitation  Cherrypick [SOSR15] for current deployments</p>
    <p>End-host collect and monitor telemetry data (E.g., PathDump [OSDI16])</p>
  </div>
  <div class="page">
    <p>SwitchPointer design  Switch embeds telemetry data (e.g., linkID, epochID)  Packet header space limitation  Cherrypick [SOSR15] for current deployments</p>
    <p>End-host collect and monitor telemetry data (E.g., PathDump [OSDI16])  Reconstructs the path  Computes a range of epochs for pod switches</p>
  </div>
  <div class="page">
    <p>SwitchPointer design  Switch embeds telemetry data (e.g., linkID, epochID)  Packet header space limitation  Cherrypick [SOSR15] for current deployments</p>
    <p>End-host collect and monitor telemetry data (E.g., PathDump [OSDI16])  Reconstructs the path  Computes a range of epochs for pod switches</p>
    <p>More details in our paper</p>
  </div>
  <div class="page">
    <p>SwitchPointer design  Switch embeds telemetry data (e.g., linkID, epochID)  Packet header space limitation  Cherrypick [SOSR15] for current deployments</p>
    <p>End-host collect and monitor telemetry data (E.g., PathDump [OSDI16])  Reconstructs the path  Computes a range of epochs for pod switches</p>
    <p>INT simplifies embedding and decoding telemetry data</p>
    <p>More details in our paper</p>
  </div>
  <div class="page">
    <p>SwitchPointer: Four technical challenges</p>
    <p>How to decide the right epoch size?</p>
    <p>How to efficiently maintain pointers?</p>
    <p>How to efficiently embed telemetry data?</p>
    <p>How to handle asynchronous clocks? Set bound on clock difference between any pair of devices</p>
  </div>
  <div class="page">
    <p>SwitchPointer: Four technical challenges</p>
    <p>How to decide the right epoch size?</p>
    <p>How to efficiently maintain pointers?</p>
    <p>How to efficiently embed telemetry data?</p>
    <p>How to handle asynchronous clocks? Set bound on clock difference between any pair of devices</p>
    <p>More details in our paper</p>
  </div>
  <div class="page">
    <p>SwitchPointer - Coverage</p>
  </div>
  <div class="page">
    <p>SwitchPointer - Coverage In-network techniques</p>
    <p>TCP in-cast diagnosis  Heavy hitter  ECMP load imbalance diagnosis  Silent random packet drops  Traffic matrix  DDoS</p>
  </div>
  <div class="page">
    <p>SwitchPointer - Coverage In-network techniques End-host based techniques</p>
    <p>TCP in-cast diagnosis  Heavy hitter  ECMP load imbalance diagnosis  Silent random packet drops  Traffic matrix  DDoS</p>
    <p>TCP out of order packet delivery  TCP non-monotonic  Traffic bursts  SYN flood attacks  New TCP connections  TCP in-complete flows</p>
  </div>
  <div class="page">
    <p>SwitchPointer - Coverage In-network techniques End-host based techniques</p>
    <p>TCP in-cast diagnosis  Heavy hitter  ECMP load imbalance diagnosis  Silent random packet drops  Traffic matrix  DDoS</p>
    <p>TCP out of order packet delivery  TCP non-monotonic  Traffic bursts  SYN flood attacks  New TCP connections  TCP in-complete flows</p>
    <p>Spatially and temporally correlated problems E.g.: Too many red lights, Traffic cascades</p>
  </div>
  <div class="page">
    <p>SwitchPointer - Coverage In-network techniques End-host based techniques</p>
    <p>TCP in-cast diagnosis  Heavy hitter  ECMP load imbalance diagnosis  Silent random packet drops  Traffic matrix  DDoS</p>
    <p>TCP out of order packet delivery  TCP non-monotonic  Traffic bursts  SYN flood attacks  New TCP connections  TCP in-complete flows</p>
    <p>Spatially and temporally correlated problems E.g.: Too many red lights, Traffic cascades</p>
    <p>https://github.com/PathDump/Applications</p>
  </div>
  <div class="page">
    <p>Problems SwitchPointer cannot debug</p>
    <p>Instantaneous queue sizes  Overlay loop detection  Incorrect packet modification  Packet properties at a switch</p>
    <p>https://github.com/PathDump/Applications</p>
  </div>
  <div class="page">
    <p>F2 F1</p>
    <p>S2S1</p>
    <p>F3</p>
    <p>A more complex example: Traffic cascades</p>
    <p>F1: High priority F2: Middle priority F3: Low priority</p>
  </div>
  <div class="page">
    <p>G bp</p>
    <p>s F1</p>
    <p>F2 F1</p>
    <p>S2S1</p>
    <p>F3</p>
    <p>A more complex example: Traffic cascades</p>
    <p>F1: High priority F2: Middle priority F3: Low priority msec</p>
  </div>
  <div class="page">
    <p>G bp</p>
    <p>s F1</p>
    <p>G bp</p>
    <p>s F2F2 F1</p>
    <p>S2S1</p>
    <p>F3</p>
    <p>A more complex example: Traffic cascades</p>
    <p>F1: High priority F2: Middle priority F3: Low priority msec</p>
  </div>
  <div class="page">
    <p>G bp</p>
    <p>s F1</p>
    <p>G bp</p>
    <p>s F2</p>
    <p>G bp</p>
    <p>s F3</p>
    <p>F2 F1</p>
    <p>S2S1</p>
    <p>F3</p>
    <p>A more complex example: Traffic cascades</p>
    <p>F1: High priority F2: Middle priority F3: Low priority msec</p>
  </div>
  <div class="page">
    <p>G bp</p>
    <p>s F1</p>
    <p>G bp</p>
    <p>s F2</p>
    <p>G bp</p>
    <p>s F3</p>
    <p>F2 F1</p>
    <p>S2S1</p>
    <p>F3</p>
    <p>A more complex example: Traffic cascades</p>
    <p>F1: High priority F2: Middle priority F3: Low priority msec</p>
  </div>
  <div class="page">
    <p>F2</p>
    <p>A more complex example: Traffic cascades</p>
    <p>F1: High priority F2: Middle priority F3: Low priority</p>
  </div>
  <div class="page">
    <p>G bp</p>
    <p>s F2 F2</p>
    <p>A more complex example: Traffic cascades</p>
    <p>F1: High priority F2: Middle priority F3: Low priority</p>
  </div>
  <div class="page">
    <p>G bp</p>
    <p>s F1</p>
    <p>G bp</p>
    <p>s F2 F2 F1</p>
    <p>A more complex example: Traffic cascades</p>
    <p>F1: High priority F2: Middle priority F3: Low priority</p>
  </div>
  <div class="page">
    <p>G bp</p>
    <p>s F1</p>
    <p>G bp</p>
    <p>s F2 F2 F1</p>
    <p>A more complex example: Traffic cascades</p>
    <p>F1, F2 collision</p>
    <p>F1: High priority F2: Middle priority F3: Low priority</p>
  </div>
  <div class="page">
    <p>G bp</p>
    <p>s F1</p>
    <p>G bp</p>
    <p>s F2 F2</p>
    <p>A more complex example: Traffic cascades</p>
    <p>F1: High priority F2: Middle priority F3: Low priority</p>
  </div>
  <div class="page">
    <p>G bp</p>
    <p>s F1</p>
    <p>G bp</p>
    <p>s F2 F2</p>
    <p>A more complex example: Traffic cascades</p>
    <p>F1: High priority F2: Middle priority F3: Low priority</p>
  </div>
  <div class="page">
    <p>G bp</p>
    <p>s F1</p>
    <p>G bp</p>
    <p>s F2</p>
    <p>G bp</p>
    <p>s F3</p>
    <p>F2 F3</p>
    <p>A more complex example: Traffic cascades</p>
    <p>F1: High priority F2: Middle priority F3: Low priority</p>
  </div>
  <div class="page">
    <p>G bp</p>
    <p>s F1</p>
    <p>G bp</p>
    <p>s F2</p>
    <p>G bp</p>
    <p>s F3</p>
    <p>F2 F3</p>
    <p>A more complex example: Traffic cascades</p>
    <p>F2, F3 collision</p>
    <p>F1: High priority F2: Middle priority F3: Low priority</p>
  </div>
  <div class="page">
    <p>G bp</p>
    <p>s F1</p>
    <p>G bp</p>
    <p>s F2</p>
    <p>G bp</p>
    <p>s F3</p>
    <p>F2 F3</p>
    <p>A more complex example: Traffic cascades</p>
    <p>F1: High priority F2: Middle priority F3: Low priority msec</p>
  </div>
  <div class="page">
    <p>A more complex example: Traffic cascades</p>
    <p>S2</p>
    <p>F3</p>
    <p>S3</p>
    <p>F1: High priority F2: Middle priority F3: Low priority</p>
  </div>
  <div class="page">
    <p>A more complex example: Traffic cascades</p>
    <p>S2</p>
    <p>F3</p>
    <p>S2,S3 epochIDs</p>
    <p>S3</p>
    <p>F1: High priority F2: Middle priority F3: Low priority</p>
  </div>
  <div class="page">
    <p>h2 h3</p>
    <p>h6</p>
    <p>A more complex example: Traffic cascades</p>
    <p>S2</p>
    <p>F3</p>
    <p>S2,S3 epochIDs</p>
    <p>S3 h3h6h2 h3h6</p>
    <p>F1: High priority F2: Middle priority F3: Low priority</p>
  </div>
  <div class="page">
    <p>h2 h3</p>
    <p>h6</p>
    <p>A more complex example: Traffic cascades</p>
    <p>Query / Response</p>
    <p>S2</p>
    <p>F3</p>
    <p>S2,S3 epochIDs</p>
    <p>S3 h3h6h2 h3h6</p>
    <p>F1: High priority F2: Middle priority F3: Low priority</p>
  </div>
  <div class="page">
    <p>h2 h3</p>
    <p>h6</p>
    <p>A more complex example: Traffic cascades</p>
    <p>F2 contends with F3 F1 contends with F2</p>
    <p>F3</p>
    <p>F2h3h6h2 h3h6</p>
    <p>F1: High priority F2: Middle priority F3: Low priority</p>
  </div>
  <div class="page">
    <p>h2</p>
    <p>h6</p>
    <p>A more complex example: Traffic cascades</p>
    <p>F2 contends with F3 F1 contends with F2</p>
    <p>S1 F2</p>
    <p>F1</p>
    <p>h2 h6</p>
    <p>F1: High priority F2: Middle priority F3: Low priority</p>
  </div>
  <div class="page">
    <p>h2</p>
    <p>h6</p>
    <p>A more complex example: Traffic cascades</p>
    <p>F2 contends with F3 F1 contends with F2</p>
    <p>S1 F2</p>
    <p>F1</p>
    <p>h2 h6</p>
    <p>F1: High priority F2: Middle priority F3: Low priority</p>
  </div>
  <div class="page">
    <p>SwitchPointer overhead (software implementation)</p>
    <p>Prototype  Implemented on top of OVS-DPDK version  Build minimal perfect hash function using CMPH library</p>
    <p>OVS SwitchPointer (#levels = 1) SwitchPointer (#levels = 5)</p>
    <p>Th ro ug hp ut (G bp s)</p>
    <p>Packet size (Bytes)</p>
  </div>
  <div class="page">
    <p>SwitchPointer overhead (software implementation)</p>
    <p>Prototype  Implemented on top of OVS-DPDK version  Build minimal perfect hash function using CMPH library</p>
    <p>OVS SwitchPointer (#levels = 1) SwitchPointer (#levels = 5)</p>
    <p>Th ro ug hp ut (G bp s)</p>
    <p>Packet size (Bytes)</p>
    <p>No throughput loss for average packet size  256 Bytes</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Achieves benefits of both end-host and in-network approaches</p>
    <p>Switch acts as a directory service</p>
    <p>Uses end-host resources to collect and monitor telemetry data</p>
    <p>Debugs a large class problems</p>
    <p>Ongoing work: Hardware implementation using P4 and NetFPGA</p>
  </div>
</Presentation>
