<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Pyro: A Spatial-Temporal Big-Data Storage System</p>
    <p>Shen Li Shaohan Hu Raghu Ganti Mudhakar Srivatsa</p>
    <p>Tarek Abdelzaher</p>
  </div>
  <div class="page">
    <p>Applications  A huge amount of geo-tagged</p>
    <p>events are generated and stored in real-5me.  Tweets, Photos  Taxi loca5ons  Smartphone User Traces</p>
    <p>Query ask for events within a given 5me range and geographic area: geometry query.</p>
    <p>Challenges  Efficiently store and retrieve</p>
    <p>Spa5al-temporal data</p>
    <p>Achieve Scalability</p>
    <p>Handle dynamic workload hotspot</p>
  </div>
  <div class="page">
    <p>Prior Approaches  Make Geographic Informa5on</p>
    <p>Systems (GIS) scalable</p>
    <p>Make Big-Data storage system understand spa5al-temporal workload</p>
    <p>Global Index</p>
    <p>Subspace Local GIS</p>
    <p>Subspace Local GIS</p>
    <p>Subspace Local GIS</p>
    <p>Big-Data Storage</p>
    <p>Translator</p>
    <p>Geometry Query</p>
    <p>Range Queries</p>
    <p>Pyro is the first holis5c solu5on specifically designed for Spa5al- Temporal Applica5ons.</p>
    <p>Internally understands Spa5al-Temporal data and query</p>
    <p>Aggrega5vely op5mizes IO</p>
    <p>Manages data replicas to mi5gate workload hotspots 3</p>
    <p>Contributions</p>
  </div>
  <div class="page">
    <p>HRegion</p>
    <p>Background  Hbase</p>
    <p>The table is horizontally divided into HRegions.</p>
    <p>Each HRegion is ver5cally divided into stores, one store per column family.</p>
    <p>Data is first cached in the MemStore, and then flushed into a StoreFile when the size threshold is reached.</p>
    <p>HDFS  The Name Node manages file</p>
    <p>system namespaces.</p>
    <p>Data Nodes store data chunks</p>
    <p>DFS Client exposes APIs.</p>
    <p>HBase</p>
    <p>Store Store</p>
    <p>Name Node</p>
    <p>MemStore</p>
    <p>StoreFile StoreFile</p>
    <p>MemStore</p>
    <p>StoreFile StoreFile</p>
    <p>DFS Client</p>
    <p>Data Node Data Node Data Node</p>
  </div>
  <div class="page">
    <p>Geometry Translator  Encoding spa5al-temporal</p>
    <p>informa5on into row keys, and transla5ng geometry queries into range scans</p>
    <p>Mul5-Scan Op5mizer  Aggrega5vely op5mizing</p>
    <p>all range scans of the same geometry query</p>
    <p>Group-Based Replica Placement  Improves data locality</p>
    <p>during workload dynamics.</p>
    <p>Store MemStore</p>
    <p>StoreFile StoreFile</p>
    <p>HRegion Geometry Translator</p>
    <p>Name Node DFS Client</p>
    <p>Store MemStore</p>
    <p>StoreFile StoreFile</p>
    <p>Data Node Data Node Data Node</p>
    <p>Mul5-Scan Op5mizer Mul5-Scan Op5mizer</p>
    <p>Replica Group Manager</p>
    <p>Group-Based Replica Placement Policy</p>
    <p>Pyro Architecture</p>
  </div>
  <div class="page">
    <p>Store MemStore</p>
    <p>StoreFile</p>
    <p>Mul5-Scan Op5mizer</p>
    <p>StoreFile</p>
    <p>HRegion</p>
    <p>Name Node</p>
    <p>Replica Group Manager</p>
    <p>DFS Client</p>
    <p>Group-Based Replica Placement Policy</p>
    <p>Store MemStore</p>
    <p>StoreFile</p>
    <p>Mul5-Scan Op5mizer</p>
    <p>StoreFile</p>
    <p>Data Node Data Node Data Node</p>
    <p>Pyro Architecture  Geometry Translator</p>
    <p>Encoding spa5al-temporal informa5on into row keys, and transla5ng geometry queries into range scans</p>
    <p>Mul5-Scan Op5mizer  Aggrega5vely op5mizing</p>
    <p>all range scans of the same geometry query</p>
    <p>Group-Based Replica Placement  Improves data locality</p>
    <p>during workload dynamics.</p>
    <p>Geometry Translator</p>
  </div>
  <div class="page">
    <p>Geometry Translator  The space is recursively</p>
    <p>divided into 5les using a quad-tree</p>
    <p>Using a space filling curve (Z, Moore, Hilbert, etc.) to encode 5les</p>
    <p>Use the same quad-tree to calculate the 5les that intersect with the geometry</p>
    <p>Tiles then turns into range scans.</p>
    <p>Visited</p>
    <p>unvisited</p>
    <p>Fetched</p>
    <p>Requested</p>
    <p>(a) Strip-Encoding (b) ZOrder-Encoding (c) Moore-Encoding</p>
  </div>
  <div class="page">
    <p>Store MemStore</p>
    <p>StoreFile</p>
    <p>Mul5-Scan Op5mizer</p>
    <p>StoreFile</p>
    <p>HRegion Geometry Translator</p>
    <p>Master Node</p>
    <p>Replica Group Manager</p>
    <p>DFS Client</p>
    <p>Group-Based Replica Placement Policy</p>
    <p>Store MemStore</p>
    <p>StoreFile</p>
    <p>Mul5-Scan Op5mizer</p>
    <p>StoreFile</p>
    <p>Data Node Data Node Data Node</p>
    <p>Pyro Architecture  Geometry Translator</p>
    <p>Encoding spa5al-temporal informa5on into row keys, and transla5ng geometry queries into range scans</p>
    <p>Mul5-Scan Op5mizer  Aggrega5vely op5mizing</p>
    <p>all range scans of the same geometry query</p>
    <p>Group-Based Replica Placement  Improves data locality</p>
    <p>during workload dynamics.</p>
  </div>
  <div class="page">
    <p>A Geometry query may translate into a large number of range scans.</p>
    <p>These range scans usually force the underlying system to fetch more data or repeatedly go through the same data structure.</p>
    <p>In logic</p>
    <p>On Disk</p>
    <p>KV KV KV KV KV KV</p>
    <p>Read Area Amplifica5on Read Volume Amplifica5on</p>
    <p>Redundant Read</p>
    <p>Multi-Scan Optimizer: Read Amplification</p>
  </div>
  <div class="page">
    <p>Multi-Scan Optimizer: Use Small Tile and HBlocks</p>
    <p>Keep 5le size and block size small, and aggrega5vely op5mize range scans.</p>
    <p>Profile P-Read delay vs size.</p>
    <p>Use Dynamic Programming to determine which blocks to read</p>
    <p>P-Read Size 1 Block 13 Block</p>
    <p>P-Read Delay 9ms 20ms</p>
    <p>Adap5ve Aggrega5on Algorithm:</p>
    <p>Requested Block Fetched Block One p-read</p>
  </div>
  <div class="page">
    <p>Store MemStore</p>
    <p>StoreFile</p>
    <p>Mul5-Scan Op5mizer</p>
    <p>StoreFile</p>
    <p>HRegion Geometry Translator</p>
    <p>Master Node</p>
    <p>Replica Group Manager</p>
    <p>DFS Client</p>
    <p>Group-Based Replica Placement Policy</p>
    <p>Store MemStore</p>
    <p>StoreFile</p>
    <p>Mul5-Scan Op5mizer</p>
    <p>StoreFile</p>
    <p>Data Node Data Node Data Node</p>
    <p>Pyro Architecture  Geometry Translator</p>
    <p>Encoding spa5al-temporal informa5on into row keys, and transla5ng geometry queries into range scans</p>
    <p>Mul5-Scan Op5mizer  Aggrega5vely op5mizing</p>
    <p>all range scans of the same geometry query</p>
    <p>Group-Based Replica Placement  Improves data locality</p>
    <p>during workload dynamics.</p>
  </div>
  <div class="page">
    <p>Each HRegion handles a range of row keys, that corresponds to a subarea in the space.</p>
    <p>Spa5al-temporal applica5ons naturally create dynamic workload hotspots within small areas that may overwhelm corresponding HRegion servers.</p>
    <p>Group-Based Replica Placement</p>
  </div>
  <div class="page">
    <p>A HRegion can split to input mul5ple daughter HRegions, and these daughter HRegions can be moved into other machines to mi5gate workload hotspot.</p>
    <p>HRegions usually co-locate with HDFS datanodes that allows read/write data locality. Spliing may destroy data locality.</p>
    <p>Pyro employs group-based replica placement to achieve data locality.</p>
    <p>Group-Based Replica Placement Policy</p>
    <p>Group 0</p>
    <p>Group 3 Group 1</p>
    <p>Group 2</p>
    <p>Pre-Split Keys shard shard shard shard</p>
    <p>R1</p>
    <p>R2</p>
    <p>R3 13</p>
  </div>
  <div class="page">
    <p>The asymmetry in replica groups caters HFile format: meta data locates at the end of the Hfile.</p>
    <p>Meta blocks: minimize the probability of losing any DFS block</p>
    <p>Data blocks: minimize the expecta5on of the number of unavailable DFS blocks.</p>
    <p>Group-Based Replica Placement Asymmetry</p>
    <p>KV KV KV KV KV KV</p>
    <p>Data Data Data File Info Data Index</p>
    <p>Meta Index</p>
    <p>Trailer</p>
    <p>n: # of servers, f: # of failed servers, g: # of groups, b: # of DFS blocks in the file</p>
  </div>
  <div class="page">
    <p>Open data: ~700,000,000 NYC taxi trips from 2010 to 2013.  hmps://publish.illinois.edu/dbwork/open-data/</p>
    <p>Experimen5ng on an 80-server cluster:  1 PyroDFS namenode, 30 datanodes  1 PyroDB master, 3 ZooKeeper nodes, 30 co-located HRegion servers.  Remaining nodes generate workload and log latency.</p>
    <p>Compare with Md-HBase  Md-HBase adds an transla5on layer above Hbase, and uses Z-order</p>
    <p>encoding.</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Manually spliing a Pyro region vs Manually spliing a Md-HBase region.  To make the evalua5on fair, this evalua5on submits range scans rather than</p>
    <p>geometry query into two systems. In this case, both geometry translator and</p>
    <p>mul5-scan op5mizer in Pyro are disabled.</p>
    <p>Both systems use Z-order encoding algorithm</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Throughput measurement of 100m X 100m rectangle geometry.  PyroM: Pyro using Moore encoding  PyroZ: Pyro using Zorder encoding  PyroM - A3: PyroM, disabled adap5ve aggrega5on algorithm</p>
    <p>PyroZ - A3: PyroZ, disabled adap5ve aggrega5on algorithm</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Thank you Q&amp;A</p>
  </div>
</Presentation>
