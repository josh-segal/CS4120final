<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>SybilLimit: A Near-Optimal Social SybilLimit: A Near-Optimal Social Network Defense Against Sybil AttacksNetwork Defense Against Sybil Attacks</p>
    <p>Haifeng Yu National University of Singapore</p>
    <p>Phillip B. Gibbons Intel Research Pittsburgh</p>
    <p>Michael Kaminsky Intel Research Pittsburgh</p>
    <p>Feng Xiao National University of Singapore</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 2</p>
    <p>Background: Sybil AttackBackground: Sybil Attack</p>
    <p>Sybil attack: Single user pretends many fake/sybil identities  Already observed in real-world</p>
    <p>p2p systems</p>
    <p>Sybil identities can become a large fraction of all identities  Out-vote honest users in</p>
    <p>collaborative tasks</p>
    <p>launch sybil attack</p>
    <p>honest</p>
    <p>malicious</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 3</p>
    <p>Background: Defending Against Sybil AttackBackground: Defending Against Sybil Attack  Using trusted central authority to tie identities to</p>
    <p>human beings  not always desirable</p>
    <p>Much harder without a trusted central authority [Douceur02]  Resource challenges not sufficient</p>
    <p>IP address-based approach not sufficient</p>
    <p>Widely considered as real &amp; challenging:  Over 40 papers acknowledging the problem of sybil</p>
    <p>attack, without having a distributed solution</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 4</p>
    <p>SybilGuard / SybilLimit Basic Insight: SybilGuard / SybilLimit Basic Insight: Leveraging Social NetworksLeveraging Social Networks</p>
    <p>Nodes = identities</p>
    <p>Undirected edges = strong mutual trust  E.g., colleagues, relatives in</p>
    <p>real-world</p>
    <p>Not online friends !</p>
    <p>SybilGuard [SIGCOMM06] / SybilLimit [Oakland08]:</p>
    <p>The first to leverage social networks for thwarting sybil attacks with provable guarantees.</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 5</p>
    <p>Attack ModelAttack Model</p>
    <p>malicious users</p>
    <p>honest nodes</p>
    <p>Observation: Adversary cannot create extra edges between honest nodes and sybil nodes</p>
    <p>attack edges</p>
    <p>n honest users: One identity/node each</p>
    <p>Malicious users: Multiple identities each (sybil nodes)</p>
    <p>sybil nodes</p>
    <p>sybil nodes may collude  the adversary</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 6</p>
    <p>SybilGuard/SybilLimit Basic InsightSybilGuard/SybilLimit Basic Insight</p>
    <p>honest nodes sybil nodes</p>
    <p>Dis-proportionally small cut disconnecting a large number of identities</p>
    <p>But cannot search brute-forceattack</p>
    <p>edges</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 7</p>
    <p>SybilGuard / SybilLimit End GuaranteesSybilGuard / SybilLimit End Guarantees</p>
    <p>Completely decentralized</p>
    <p>Enables any given verifier node to decide whether to accept any given suspect node  Accept: Provide service to / receive service from</p>
    <p>Ideally: Accept and only accept honest nodes  unfortunately not possible</p>
    <p>SybilGuard / SybilLimit provably  Bound # of accepted sybil nodes (w.h.p.)</p>
    <p>Accept all honest nodes except a small  fraction (w.h.p.)</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 8</p>
    <p>Example Application ScenariosExample Application Scenarios</p>
    <p>If # of sybil nodes accepted</p>
    <p>Then applications can do</p>
    <p>&lt; n/2 byzantine consensus</p>
    <p>&lt; n majority voting</p>
    <p>&lt; n/c for some constant c secure DHT [Awerbuch06, Castro02,</p>
    <p>Fiat05]</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 9</p>
    <p>total number of attack edges</p>
    <p>SybilGuard [SIGCOMM06]</p>
    <p>SybilLimit [Oakland08]</p>
    <p>nnOg log/ )log( nn )(log n</p>
    <p>)(log nunbounded</p>
    <p># sybil nodes accepted (smaller is better) per attack edge</p>
    <p>nn log/  nnO log/</p>
    <p>g between</p>
    <p>and</p>
    <p>g</p>
    <p>~2000 ~10</p>
    <p>~10</p>
    <p>SybilLimit Contribution 1: Pushing the Limit SybilLimit Contribution 1: Pushing the Limit</p>
    <p>We also prove that SybilLimit is away from optimal)(log nO</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 10</p>
    <p>OutlineOutline</p>
    <p>Motivation, basic insight, and end guarantees</p>
    <p>SybilLimit Contribution 1: Pushing the Limit  The near-optimal SybilLimit design</p>
    <p>SybilLimit Contribution 2: Validation on RealWorld Social Networks</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 11</p>
    <p>Identity Registration in SybilLimitIdentity Registration in SybilLimit</p>
    <p>Each node (honest or sybil) has a locally generated public/private key pair</p>
    <p>Identity: V accepts S = V accepts Ss public key KS</p>
    <p>We do not assume/need PKI</p>
    <p>In SybilLimit, every suspect S registers KS on some other nodes</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 12</p>
    <p>SybilLimit: Strawman Design  Step 1SybilLimit: Strawman Design  Step 1</p>
    <p>Ensure that sybil nodes (collectively) register only on limited number of honest nodes</p>
    <p>Still provide enough registration opportunities for honest nodes</p>
    <p>sybil regionhonest region</p>
    <p>K: registered keys of sybil nodes</p>
    <p>K K</p>
    <p>K</p>
    <p>K K</p>
    <p>K</p>
    <p>K K</p>
    <p>K</p>
    <p>K</p>
    <p>K</p>
    <p>K</p>
    <p>K</p>
    <p>K K K</p>
    <p>K: registered keys of honest nodes</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 13</p>
    <p>SybilLimit: Strawman Design  Step 2SybilLimit: Strawman Design  Step 2</p>
    <p>Accept S only if KS is register on sufficiently many honest nodes</p>
    <p>Without knowing where the honest region is !</p>
    <p>Circular design? We can break this circle</p>
    <p>K K</p>
    <p>K</p>
    <p>K K</p>
    <p>K</p>
    <p>K K</p>
    <p>K</p>
    <p>K</p>
    <p>K</p>
    <p>K</p>
    <p>K</p>
    <p>K K K</p>
    <p>sybil regionhonest region</p>
    <p>K: registered keys of sybil nodes K: registered keys of honest nodes</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 14</p>
    <p>Three Interrelated Key TechniquesThree Interrelated Key Techniques</p>
    <p>Technique 1: Use the tails of random routes for registration  Will achieve Step 1</p>
    <p>Random routes are from SybilGuard</p>
    <p>Novelty: The use of tails</p>
    <p>Novelty: The use of multiple independent instances of shorter random routes</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 15</p>
    <p>Three Interrelated Key TechniquesThree Interrelated Key Techniques  Technique 2: Use intersection condition and</p>
    <p>balance condition to verify suspects  Will break the circular design and achieve Step 2</p>
    <p>SybilGuard also has intersection condition</p>
    <p>Novelty: Intersection on edges</p>
    <p>Novelty: SybilGuard has no balance condition</p>
    <p>Technique 3: Use benchmarking technique to estimate unknown parameters  Breaks another seemingly circular design</p>
    <p>Novelty: SybilGuard has no such technique</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 16</p>
    <p>Three Interrelated Key TechniquesThree Interrelated Key Techniques</p>
    <p>Technique 1: Use the tails of random routes for registration  Will achieve Step 1</p>
    <p>Random routes are from SybilGuard</p>
    <p>Novelty: The use of tails</p>
    <p>Novelty: The use of multiple independent instances of shorter random routes</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 17</p>
    <p>Random 1 to 1 mapping between incoming edge and outgoing edge</p>
    <p>Random Route: ConvergenceRandom Route: Convergence</p>
    <p>a  d b  a c  b d  c</p>
    <p>d  e e  d f  f</p>
    <p>a</p>
    <p>b</p>
    <p>c</p>
    <p>d e</p>
    <p>f</p>
    <p>randomized</p>
    <p>routing table</p>
    <p>Using routing table gives Convergence Property:</p>
    <p>Routes merge if crossing the same edge</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 18</p>
    <p>Registering Public Keys with TailsRegistering Public Keys with Tails  Every node initiates a secure random route of length w from itself</p>
    <p>See paper for discussion on w</p>
    <p>See paper for how to make it secure</p>
    <p>A B C D</p>
    <p>edge CD is the tail of As random route w = 3</p>
    <p>D records KA</p>
    <p>under name CD</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 19</p>
    <p>Tails of Sybil SuspectsTails of Sybil Suspects  Imagine that every sybil suspect initiates a</p>
    <p>random route from itself</p>
    <p>total 1 tainted tail</p>
    <p>honest nodes</p>
    <p>sybil nodes</p>
    <p>tainted tail</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 20</p>
    <p>Counting The Number of Tainted TailsCounting The Number of Tainted Tails</p>
    <p>Claim: There are at most w tainted tails per attack edge  Convergence: At most w tainted tails per attack edge</p>
    <p>Regardless of whether sybil nodes follow the protocol</p>
    <p>honest nodes</p>
    <p>sybil nodes</p>
    <p>attack edge</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 21</p>
    <p>Back to the Strawman Design Step 1Back to the Strawman Design Step 1</p>
    <p># of K s  gw  Independent of # sybil</p>
    <p>nodes</p>
    <p># of K s  n  gw  From backtrace-ability</p>
    <p>property of random routes</p>
    <p>See paper honest region</p>
    <p>K</p>
    <p>K</p>
    <p>K</p>
    <p>K</p>
    <p>K</p>
    <p>K</p>
    <p>K Step 1 achieved !</p>
    <p>K: registered keys of sybil nodes</p>
    <p>K: registered keys of honest nodes</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 22</p>
    <p>OutlineOutline  SybilLimit Contribution 1: Pushing the Limit</p>
    <p>Independent instances, intersection condition, balance condition, benchmarking technique</p>
    <p>Avoids multiple seemingly circular designs (hardest part)</p>
    <p>Also see paper for  Performance overheads</p>
    <p>Near-optimality</p>
    <p>SybilLimit Contribution 2: Validation on Real-World Social Networks</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 23</p>
    <p>Validation on Real-World Social NetworksValidation on Real-World Social Networks</p>
    <p>SybilGuard / SybilLimit assumption: Honest nodes are not behind disproportionally small cuts  Rigorously: Social networks (without sybil nodes) have</p>
    <p>small mixing time</p>
    <p>Mixing time affects # sybil nodes accepted and # honest nodes accepted</p>
    <p>Synthetic social networks  proof in [SIGCOMM06]</p>
    <p>Real-world social networks?  Social communities, social groups, .</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 24</p>
    <p>Simulation SetupSimulation Setup</p>
    <p>We experiment with:  Different number and placement of attack edges</p>
    <p>Different graph sizes -- full size to 100-node sub-graphs</p>
    <p>Sybil attackers use the optimal strategy</p>
    <p># nodes # edges</p>
    <p>Friendster 0.9M 7.8M</p>
    <p>Livejournal 0.9M 8.7M</p>
    <p>DBLP 0.1M 0.6M</p>
    <p>Crawled online social networks used in experiments</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 25</p>
    <p>Brief Summary of Simulation ResultsBrief Summary of Simulation Results</p>
    <p>In all cases we experimented with:</p>
    <p>Fraction of honest nodes accepted:  ~95%</p>
    <p># sybil nodes accepted:  ~10 per attack edge for Friendster and LiveJournal</p>
    <p>~15 per attack edge for DBLP</p>
  </div>
  <div class="page">
    <p>Haifeng Yu, National University of Singapore 26</p>
    <p>ConclusionsConclusions</p>
    <p>Sybil attack:  Widely considered as a real and challenging problem</p>
    <p>SybilLimit: Fully decentralized defense protocol based on social networks  Provable near-optimal guarantees</p>
    <p>Experimental validation on real-world social networks</p>
    <p>Future work: Implement SybilLimit with real apps</p>
  </div>
</Presentation>
