<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Can the Production Network Be the Testbed?</p>
    <p>Rob Sherwood Deutsche Telekom Inc.</p>
    <p>R&amp;D Lab</p>
    <p>Glen Gibb, KK Yap, Guido Appenzeller, Martin Cassado,</p>
    <p>Nick McKeown, Guru Parulkar</p>
    <p>Stanford University, Big Switch Networks, Nicira Networks</p>
  </div>
  <div class="page">
    <p>Problem:</p>
    <p>Realisticly evaluating new network services is hard</p>
    <p>services that require changes to switches and routers  e.g.,</p>
    <p>o routing protocols o traffic monitoring services o IP mobility</p>
    <p>Result: Many good ideas don't gets deployed; Many deployed services still have bugs.</p>
  </div>
  <div class="page">
    <p>Why is Evaluation Hard?</p>
    <p>Real Networks</p>
    <p>Testbeds</p>
  </div>
  <div class="page">
    <p>Not a New Problem</p>
    <p>Build open, programmable network hardware o NetFPGA, network processors o but: deployment is expensive, fan-out is small</p>
    <p>Build bigger software testbeds o VINI/PlanetLab, Emulab o but: performance is slower, realistic topologies?</p>
    <p>Convince users to try experimental services o personal incentive, SatelliteLab o but: getting lots of users is hard</p>
  </div>
  <div class="page">
    <p>Solution Overview: Network Slicing</p>
    <p>Divide the production network into logical slices o each slice/service controls its own packet forwarding o users pick which slice controls their traffic: opt-in o existing production services run in their own slice</p>
    <p>e.g., Spanning tree, OSPF/BGP</p>
    <p>Enforce strong isolation between slices o actions in one slice do not affect another</p>
    <p>Allows the (logical) testbed to mirror the production network</p>
    <p>o real hardware, performance, topologies, scale, users</p>
  </div>
  <div class="page">
    <p>Rest of Talk...</p>
    <p>How network slicing works: FlowSpace, Opt-In  Our prototype implementation: FlowVisor</p>
    <p>Isolation and performance results</p>
    <p>Current deployments: 8+ campuses, 2+ ISPs</p>
    <p>Future directions and conclusion</p>
  </div>
  <div class="page">
    <p>Current Network Devices</p>
    <p>Control Plane</p>
    <p>Data Plane</p>
    <p>Switch/Router</p>
    <p>General-purpose CPU</p>
    <p>Custom ASIC</p>
    <p>Computes forwarding rules  128.8.128/16 --&gt; port 6</p>
    <p>Pushes rules down to data plane</p>
    <p>Enforces forwarding rules  Exceptions pushed back to</p>
    <p>control plane  e.g., unmatched packets</p>
    <p>Rules ExceptsControl/Data Protocol</p>
  </div>
  <div class="page">
    <p>Add a Slicing Layer Between Planes</p>
    <p>Data Plane</p>
    <p>Rules Excepts</p>
    <p>Slice 1 Control Plane</p>
    <p>Slice 2 Control Plane</p>
    <p>Control/Data Protocol</p>
    <p>Slice Policies</p>
    <p>Slice 3 Control Plane</p>
  </div>
  <div class="page">
    <p>Network Slicing Architecture</p>
    <p>A network slice is a collection of sliced switches/routers</p>
    <p>Data plane is unmodified  Packets forwarded with no performance penalty  Slicing with existing ASIC</p>
    <p>Transparent slicing layer  each slice believes it owns the data path  enforces isolation between slices</p>
    <p>i.e., rewrites, drops rules to adhere to slice police  forwards exceptions to correct slice(s)</p>
  </div>
  <div class="page">
    <p>Slicing Policies</p>
    <p>The policy specifies resource limits for each slice:</p>
    <p>Link bandwidth  Maximum number of forwarding rules  Topology  Fraction of switch/router CPU</p>
    <p>FlowSpace: which packets does the slice control?</p>
  </div>
  <div class="page">
    <p>FlowSpace: Maps Packets to Slices</p>
  </div>
  <div class="page">
    <p>Real User Traffic: Opt-In</p>
    <p>Allow users to Opt-In to services in real-time o Users can delegate control of individual flows to</p>
    <p>Slices o Add new FlowSpace to each slice's policy</p>
    <p>Example: o &quot;Slice 1 will handle my HTTP traffic&quot; o &quot;Slice 2 will handle my VoIP traffic&quot; o &quot;Slice 3 will handle everything else&quot;</p>
    <p>Creates incentives for building high-quality services</p>
  </div>
  <div class="page">
    <p>Rest of Talk...</p>
    <p>How network slicing works: FlowSpace, Opt-In  Our prototype implementation: FlowVisor</p>
    <p>Isolation and performance results</p>
    <p>Current deployments: 8+ campuses, 2+ ISPs</p>
    <p>Future directions and conclusion</p>
  </div>
  <div class="page">
    <p>Implemented on OpenFlow</p>
    <p>API for controlling packet forwarding</p>
    <p>Abstraction of control plane/data plane protocol</p>
    <p>Works on commodity hardware  via firmware upgrade  www.openflow.orgData</p>
    <p>Plane</p>
    <p>Switch/ Router Switch/ Router</p>
    <p>OpenFlow Firmware</p>
    <p>Data Path</p>
    <p>Custom Control Plane</p>
    <p>Stub Control Plane</p>
    <p>OpenFlow Protocol</p>
    <p>Server</p>
    <p>Network</p>
    <p>OpenFlow Controller</p>
    <p>Control Path</p>
  </div>
  <div class="page">
    <p>FlowVisor Implemented on OpenFlow</p>
    <p>Custom Control Plane</p>
    <p>Stub Control Plane</p>
    <p>Data Plane</p>
    <p>OpenFlow Protocol</p>
    <p>Switch/ Router</p>
    <p>Server</p>
    <p>Network</p>
    <p>Switch/ Router</p>
    <p>Servers</p>
    <p>OpenFlow Firmware</p>
    <p>Data Path</p>
    <p>OpenFlow Controller</p>
    <p>Switch/ Router Switch/ Router</p>
    <p>OpenFlow Firmware</p>
    <p>Data Path</p>
    <p>OpenFlow Controller</p>
    <p>OpenFlow Controller</p>
    <p>OpenFlow Controller</p>
    <p>FlowVisor OpenFlow</p>
    <p>OpenFlow</p>
  </div>
  <div class="page">
    <p>FlowVisor Message Handling</p>
    <p>OpenFlow Firmware</p>
    <p>Data Path</p>
    <p>Alice Controller</p>
    <p>Bob Controller</p>
    <p>Cathy Controller</p>
    <p>FlowVisor OpenFlow</p>
    <p>OpenFlow</p>
    <p>Packet</p>
    <p>Exception</p>
    <p>Rule</p>
    <p>Policy Check: Is this rule allowed?</p>
    <p>Policy Check: Who controls this packet?</p>
    <p>Full Line Rate Forwarding</p>
  </div>
  <div class="page">
    <p>FlowVisor Implementation</p>
    <p>Custom handlers for each of OpenFlow's 20 message types</p>
    <p>Transparent OpenFlow proxy  8261 LOC in C  New version with extra API for GENI</p>
    <p>Could extend to non-OpenFlow (ForCES?)</p>
    <p>Code: `git clone git://openflow.org/flowvisor.git`</p>
  </div>
  <div class="page">
    <p>Rest of Talk...</p>
    <p>How network slicing works: FlowSpace, Opt-In  Our prototype implementation: FlowVisor</p>
    <p>Isolation and performance results</p>
    <p>Current deployments: 8+ campuses, 2+ ISPs</p>
    <p>Future directions and conclusion</p>
  </div>
  <div class="page">
    <p>Isolation Techniques</p>
    <p>Isolation is critical for slicing</p>
    <p>In talk:  Device CPU</p>
    <p>In paper:  FlowSpace  Link bandwidth  Topology  Forwarding rules</p>
    <p>As well as performance and scaling numbers</p>
  </div>
  <div class="page">
    <p>Device CPU Isolation</p>
    <p>Ensure that no slice monopolizes Device CPU</p>
    <p>CPU exhaustion  prevent rule updates  drop LLDPs ---&gt; Causes link flapping</p>
    <p>Techniques  Limiting rule insertion rate  Use periodic drop-rules to throttle exceptions  Proper rate-limiting coming in OpenFlow 1.1</p>
  </div>
  <div class="page">
    <p>CPU Isolation: Malicious Slice</p>
  </div>
  <div class="page">
    <p>Rest of Talk...</p>
    <p>How network slicing works: FlowSpace, Opt-In  Our prototype implementation: FlowVisor</p>
    <p>Isolation and performance results</p>
    <p>Current deployments: 8+ campuses, 2+ ISPs</p>
    <p>Future directions and conclusion</p>
  </div>
  <div class="page">
    <p>FlowVisor Deployment: Stanford</p>
    <p>Our real, production network o 15 switches, 35 APs o 25+ users o 1+ year of use o my personal email and</p>
    <p>web-traffic!</p>
    <p>Same physical network hosts Stanford demos o 7 different demos</p>
  </div>
  <div class="page">
    <p>FlowVisor Deployments: GENI</p>
  </div>
  <div class="page">
    <p>Future Directions</p>
    <p>Currently limited to subsets of actual topology  Add virtual links, nodes support</p>
    <p>Adaptive CPU isolation  Change rate-limits dynamically with load  ... message type</p>
    <p>More deployments, experience</p>
  </div>
  <div class="page">
    <p>Conclusion: Tentative Yes!</p>
    <p>Network slicing can help perform more realistic evaluations</p>
    <p>FlowVisor allows experiments to run concurrently but safely on the production network</p>
    <p>CPU isolation needs OpenFlow 1.1 feature</p>
    <p>Over one year of deployment experience</p>
    <p>FlowVisor+GENI coming to a campus near you!</p>
    <p>Questions? git://openflow.org/flowvisor.git</p>
  </div>
  <div class="page">
    <p>Backup Slides</p>
  </div>
  <div class="page">
    <p>What about VLANs?</p>
    <p>Can't program packet forwarding  Stuck with learning switch and spanning tree</p>
    <p>OpenFlow per VLAN?  No obvious opt-in mechanism:</p>
    <p>Who maps a packet to a vlan? By port?  Resource isolation more problematic</p>
    <p>CPU Isolation problems in existing VLANs</p>
  </div>
  <div class="page">
    <p>FlowSpace Isolation</p>
    <p>Discontinuous FlowSpace:  (HTTP or VoIP) &amp; ALL == two rules</p>
    <p>Isolation by rule priority is hard  longest-prefix-match-like ordering issues  need to be careful about preserving rule ordering</p>
    <p>Policy Desired Rule Result</p>
    <p>HTTP ALL HTTP-only</p>
    <p>HTTP VoIP Drop</p>
  </div>
  <div class="page">
    <p>Scaling</p>
  </div>
  <div class="page">
    <p>Performance</p>
  </div>
</Presentation>
