<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Automating the Choice of Consistency Levels in Replicated Systems</p>
    <p>Cheng Li, Joo Leito, Allen Clement Nuno Preguia, Rodrigo Rodrigues, Viktor Vafeiadis</p>
    <p>Max Planck Institute for Software Systems (MPI-SWS), NOVA-LINCS / Universidade Nova de Lisboa</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>RedBlue Consistency [OSDI12]</p>
    <p>Builds replicated systems that are fast and correct</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>RedBlue Consistency [OSDI12]</p>
    <p>Builds replicated systems that are fast and correct</p>
    <p>Blue ops: local, fast, weakly consistent</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>RedBlue Consistency [OSDI12]</p>
    <p>Builds replicated systems that are fast and correct</p>
    <p>State convergence</p>
    <p>Invariant preservation</p>
    <p>Blue ops: local, fast, weakly consistent</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>RedBlue Consistency [OSDI12]</p>
    <p>Builds replicated systems that are fast and correct</p>
    <p>State convergence</p>
    <p>Invariant preservation</p>
    <p>Blue ops: local, fast, weakly consistent</p>
    <p>Red ops: global, slow, strongly consistent</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Choosing between Blue or Red</p>
    <p>operation u</p>
    <p>commutative?</p>
    <p>Red</p>
    <p>No</p>
    <p>Ensuring state convergence</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Choosing between Blue or Red</p>
    <p>operation u</p>
    <p>commutative?</p>
    <p>breaks invariants?</p>
    <p>Red Blue</p>
    <p>No</p>
    <p>Yes</p>
    <p>Yes</p>
    <p>No</p>
    <p>Ensuring state convergence</p>
    <p>Ensuring invariant</p>
    <p>preservation</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Choosing between Blue or Red</p>
    <p>operation u</p>
    <p>commutative?</p>
    <p>breaks invariants?</p>
    <p>Red Blue</p>
    <p>No</p>
    <p>Yes</p>
    <p>Yes</p>
    <p>No</p>
    <p>Ensuring state convergence</p>
    <p>Ensuring invariant</p>
    <p>preservation</p>
    <p>Good performance obtained if blue ops dominate op space</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>RedBlue Consistent Bank</p>
    <p>Replica 1 Replica 2</p>
    <p>Deposit:  =  + 10</p>
    <p>AccrueInterest  =   1.5</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>RedBlue Consistent Bank</p>
    <p>Replica 1 Replica 2</p>
    <p>Deposit:  =  + 10</p>
    <p>AccrueInterest  =   1.5</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>RedBlue Consistent Bank</p>
    <p>Replica 1 Replica 2</p>
    <p>Deposit:  =  + 10</p>
    <p>AccrueInterest  =   1.5</p>
    <p>Operations are not</p>
    <p>commuting!</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>RedBlue Consistent Bank</p>
    <p>Replica 1 Replica 2</p>
    <p>Deposit:  =  + 10</p>
    <p>AccrueInterest  =   1.5</p>
    <p>Operations are not</p>
    <p>commuting!</p>
    <p>Replica 1 Replica 2</p>
    <p>Deposit:  =  + 10</p>
    <p>AccrueInterest  =   1.5</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>RedBlue Consistent Bank</p>
    <p>Replica 1 Replica 2</p>
    <p>Deposit:  =  + 10</p>
    <p>AccrueInterest  =   1.5</p>
    <p>Operations are not</p>
    <p>commuting!</p>
    <p>Replica 1 Replica 2</p>
    <p>Deposit:  =  + 10</p>
    <p>AccrueInterest  =   1.5</p>
    <p>+10 +5</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>RedBlue Consistent Bank</p>
    <p>Replica 1 Replica 2</p>
    <p>Deposit:  =  + 10</p>
    <p>AccrueInterest  =   1.5</p>
    <p>Operations are not</p>
    <p>commuting!</p>
    <p>Replica 1 Replica 2</p>
    <p>+10 +5</p>
    <p>Deposit:  =  + 10</p>
    <p>AccrueInterest  =   1.5</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>RedBlue Consistent Bank</p>
    <p>Replica 1 Replica 2</p>
    <p>Deposit:  =  + 10</p>
    <p>AccrueInterest  =   1.5</p>
    <p>Operations are not</p>
    <p>commuting!</p>
    <p>Replica 1 Replica 2</p>
    <p>+10 +5</p>
    <p>Deposit:  =  + 10</p>
    <p>AccrueInterest  =   1.5</p>
    <p>Maximize the blue op space by encoding side effects into commutative shadow operations</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>SIEVE</p>
    <p>Transforming</p>
    <p>Operation stream</p>
    <p>Slow, Strongly consistent</p>
    <p>Fast, Weakly consistent</p>
    <p>Commutative shadow operations</p>
    <p>Classifying</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>SIEVE</p>
    <p>Transforming</p>
    <p>Operation stream</p>
    <p>Commutative shadow operations</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>SIEVE</p>
    <p>Transforming</p>
    <p>Operation stream</p>
    <p>Commutative shadow operations</p>
    <p>Challenges:  Making arbitrary side effects commute  Minimizing human intervention</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Two-tier Application Model</p>
    <p>Observation: Side effects are encapsulated into a sequence of DB statements</p>
    <p>Insight: We can model the database using commutative replicated data types (CRDTs)</p>
    <p>Cheng Li @ USENIX ATC14</p>
    <p>App Server</p>
    <p>Database</p>
    <p>App Server App Server</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Two-tier Application Model</p>
    <p>Observation: Side effects are encapsulated into a sequence of DB statements</p>
    <p>Insight: We can model the database using commutative replicated data types (CRDTs)</p>
    <p>Cheng Li @ USENIX ATC14</p>
    <p>App Server</p>
    <p>Database</p>
    <p>App Server App Server</p>
    <p>CRDT Database</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Leveraging CRDTs</p>
    <p>Transform each DB statement into one or more CRDT operations</p>
    <p>Programmers only annotate schema with CRDTs:</p>
    <p>@[CRDTName][TableName|DataFieldName]</p>
    <p>DB Table Set DB Field Counter/ Rewritable value</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Leveraging CRDTs</p>
    <p>Transform each DB statement into one or more CRDT operations</p>
    <p>Programmers only annotate schema with CRDTs:</p>
    <p>@[CRDTName][TableName|DataFieldName]</p>
    <p>DB Table Set DB Field Counter/ Rewritable value</p>
    <p>Shadow operation: [CRDT_OP1; CRDT_OP2; CRDT_OP3;]</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Leveraging CRDTs</p>
    <p>Transform each DB statement into one or more CRDT operations</p>
    <p>Programmers only annotate schema with CRDTs:</p>
    <p>@[CRDTName][TableName|DataFieldName]</p>
    <p>DB Table Set DB Field Counter/ Rewritable value</p>
    <p>Shadow operation: [CRDT_OP1; CRDT_OP2; CRDT_OP3;]</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>CRDT Annotation Example</p>
    <p>@AUSET CREATE TABLE BankAccount(</p>
    <p>id INT(11) NOT NULL,</p>
    <p>@NUMDELTA balance INT(11) default 0,</p>
    <p>@LWW name char(60) default NULL,</p>
    <p>PRIMARY KEY (id)</p>
    <p>) ENGINE=InnoDB</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>CRDT Annotation Example</p>
    <p>@AUSET CREATE TABLE BankAccount(</p>
    <p>id INT(11) NOT NULL,</p>
    <p>@NUMDELTA balance INT(11) default 0,</p>
    <p>@LWW name char(60) default NULL,</p>
    <p>PRIMARY KEY (id)</p>
    <p>) ENGINE=InnoDB</p>
    <p>For details, refer to our paper.</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>SIEVE</p>
    <p>Transforming</p>
    <p>Operation stream</p>
    <p>Slow, Strongly consistent</p>
    <p>Fast, Weakly consistent</p>
    <p>Commutative shadow operations</p>
    <p>Classifying</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>SIEVE</p>
    <p>Slow, Strongly consistent</p>
    <p>Fast, Weakly consistent</p>
    <p>Commutative shadow operations</p>
    <p>Classifying</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>SIEVE</p>
    <p>Slow, Strongly consistent</p>
    <p>Fast, Weakly consistent</p>
    <p>Commutative shadow operations</p>
    <p>Classifying</p>
    <p>Challenge:  How to classify accurately and efficiently?</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Straw man Solution</p>
    <p>Op</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Straw man Solution</p>
    <p>Op parameters</p>
    <p>initial_state +</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Straw man Solution</p>
    <p>Op parameters</p>
    <p>initial_state Shadow op +</p>
    <p>Generates</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Straw man Solution</p>
    <p>Op parameters</p>
    <p>initial_state Shadow op +</p>
    <p>Generates</p>
    <p>Can we pre-determine a combination that produces a</p>
    <p>Red or Blue shadow op?</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Straw man Solution</p>
    <p>Statically define, for each original operation, a weakest precondition (WP) for corresponding shadow op to be invariant preserving</p>
    <p>At runtime, we classify shadow operations by evaluating the corresponding WP</p>
    <p>Op parameters</p>
    <p>initial_state Shadow op +</p>
    <p>Generates</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>WP Computation</p>
    <p>Problem: WP computation is infeasible (inverting hash function)</p>
    <p>Classification will be conservative.</p>
    <p>Observation: side effects are simple.</p>
    <p>Invariant: x &gt;= 0 void foo(string s) { if (SHA-1(s)==SOME_CONSTANT) { if (x&gt;=10) x -= 10; } else x +=10; }</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>WP Computation</p>
    <p>Problem: WP computation is infeasible (inverting hash function)</p>
    <p>Classification will be conservative.</p>
    <p>Observation: side effects are simple.</p>
    <p>Invariant: x &gt;= 0 void foo(string s) { if (SHA-1(s)==SOME_CONSTANT) { if (x&gt;=10) x -= 10; } else x +=10; }</p>
    <p>Weakest precondition</p>
    <p>must be FALSE!</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>WP Computation</p>
    <p>Problem: WP computation is infeasible (inverting hash function)</p>
    <p>Classification will be conservative.</p>
    <p>Observation: side effects are simple.</p>
    <p>Invariant: x &gt;= 0 void foo(string s) { if (SHA-1(s)==SOME_CONSTANT) { if (x&gt;=10) x -= 10; } else x +=10; }</p>
    <p>Weakest precondition</p>
    <p>must be FALSE!</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>WP Computation</p>
    <p>Problem: WP computation is infeasible (inverting hash function)</p>
    <p>Classification will be conservative.</p>
    <p>Observation: side effects are simple.</p>
    <p>Invariant: x &gt;= 0 void foo(string s) { if (SHA-1(s)==SOME_CONSTANT) { if (x&gt;=10) x -= 10; } else x +=10; }</p>
    <p>Do nothing</p>
    <p>Apply -10 to x</p>
    <p>Apply 10 to x</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Path-basis Analysis</p>
    <p>Creates a template per control flow path to capture all possible shadow operations following that path</p>
    <p>WP computation is done over parameters of CRDT invocations in templates</p>
    <p>Cheng Li @ USENIX ATC14 6/20/2014</p>
    <p>Invariant: x &gt;= 0 void foo(string s) { if (SHA-1(s)==SOME_CONSTANT) { if (x&gt;=10) x -= 10; } else x +=10; }</p>
    <p>[]</p>
    <p>[-10]</p>
    <p>[+10]</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Path-basis Analysis</p>
    <p>Creates a template per control flow path to capture all possible shadow operations following that path</p>
    <p>WP computation is done over parameters of CRDT invocations in templates</p>
    <p>Cheng Li @ USENIX ATC14 6/20/2014</p>
    <p>Invariant: x &gt;= 0 void foo(string s) { if (SHA-1(s)==SOME_CONSTANT) { if (x&gt;=10) x -= 10; } else x +=10; }</p>
    <p>[]</p>
    <p>[-10]</p>
    <p>[+10]</p>
    <p>WP: FALSE</p>
    <p>WP: TRUE</p>
    <p>WP: TRUE</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>SIEVE</p>
    <p>Do most (not all) work offline!</p>
    <p>Cheng Li @ USENIX ATC14 6/20/2014</p>
    <p>Static analyzer</p>
    <p>Runtime Generator/</p>
    <p>checker</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>SIEVE</p>
    <p>Do most (not all) work offline!</p>
    <p>Cheng Li @ USENIX ATC14</p>
    <p>App Code</p>
    <p>Programmer inputs: Annotations</p>
    <p>Invariants</p>
    <p>Static analyzer</p>
    <p>Runtime Generator/</p>
    <p>checker</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>SIEVE</p>
    <p>Do most (not all) work offline!</p>
    <p>Cheng Li @ USENIX ATC14</p>
    <p>App Code</p>
    <p>Programmer inputs: Annotations</p>
    <p>Invariants</p>
    <p>Shadow operation template identifier</p>
    <p>Weakest precondition (WP)</p>
    <p>id1 a &gt; 100</p>
    <p>id2 b &lt;&gt; 0</p>
    <p>Produces</p>
    <p>Static analyzer</p>
    <p>Runtime Generator/</p>
    <p>checker</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>SIEVE</p>
    <p>Do most (not all) work offline!</p>
    <p>Cheng Li @ USENIX ATC14</p>
    <p>App Code</p>
    <p>Programmer inputs: Annotations</p>
    <p>Invariants</p>
    <p>Shadow operation template identifier</p>
    <p>Weakest precondition (WP)</p>
    <p>id1 a &gt; 100</p>
    <p>id2 b &lt;&gt; 0</p>
    <p>Produces</p>
    <p>Static analyzer</p>
    <p>Runtime Generator/</p>
    <p>checker</p>
    <p>App runtime</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>SIEVE</p>
    <p>Do most (not all) work offline!</p>
    <p>Cheng Li @ USENIX ATC14</p>
    <p>App Code</p>
    <p>Programmer inputs: Annotations</p>
    <p>Invariants</p>
    <p>Shadow operation template identifier</p>
    <p>Weakest precondition (WP)</p>
    <p>id1 a &gt; 100</p>
    <p>id2 b &lt;&gt; 0</p>
    <p>Produces</p>
    <p>Static analyzer</p>
    <p>Runtime Generator/</p>
    <p>checker</p>
    <p>App runtime</p>
    <p>Lookups</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>SIEVE</p>
    <p>Do most (not all) work offline!</p>
    <p>Cheng Li @ USENIX ATC14</p>
    <p>App Code</p>
    <p>Programmer inputs: Annotations</p>
    <p>Invariants</p>
    <p>Shadow operation template identifier</p>
    <p>Weakest precondition (WP)</p>
    <p>id1 a &gt; 100</p>
    <p>id2 b &lt;&gt; 0</p>
    <p>Produces</p>
    <p>Static analyzer</p>
    <p>Runtime Generator/</p>
    <p>checker</p>
    <p>App runtime</p>
    <p>Lookups</p>
    <p>True -&gt; Blue</p>
    <p>False -&gt; Red</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS 6/20/2014 Cheng Li @ USENIX ATC14</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Questions</p>
    <p>Application adaptation</p>
    <p>How easy is it to adapt apps to SIEVE?</p>
    <p>Static analysis</p>
    <p>How long does the static analysis process take?</p>
    <p>How well does the static analysis scale?</p>
    <p>Runtime part</p>
    <p>Is the runtime classification accurate?</p>
    <p>What is the overhead?</p>
    <p>How does the replicated application perform?</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Questions</p>
    <p>Application adaptation</p>
    <p>How easy is it to adapt apps to SIEVE?</p>
    <p>Static analysis</p>
    <p>How long does the static analysis process take?</p>
    <p>How well does the static analysis scale?</p>
    <p>Runtime part</p>
    <p>Is the runtime classification accurate?</p>
    <p>What is the overhead?</p>
    <p>How does the replicated application perform?</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Original</p>
    <p>Experimental Setup</p>
    <p>TPCW/ RUBiS</p>
    <p>MySQL</p>
    <p>Manual</p>
    <p>TPCW/RUBiS +</p>
    <p>Manual adaptation</p>
    <p>MySQL</p>
    <p>RedBlue framework</p>
    <p>SIEVE</p>
    <p>TPCW/RUBiS +</p>
    <p>SIEVE</p>
    <p>MySQL</p>
    <p>RedBlue framework</p>
    <p>Baselines</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Runtime Overhead</p>
    <p>SIEVE performs almost as well as manual adaptation</p>
    <p>Runtime labeling takes negligible time  TPCW : 0.064  0.002 ms</p>
    <p>RUBiS : 0.072  0.001 ms</p>
    <p>La te</p>
    <p>n cy</p>
    <p>( m</p>
    <p>s)</p>
    <p>Throughput (request/s)</p>
    <p>TPCW Shopping Mix</p>
    <p>Original Manual SIEVE 0</p>
    <p>La te</p>
    <p>n cy</p>
    <p>( m</p>
    <p>s)</p>
    <p>Throughput (request/s)</p>
    <p>RUBiS Bidding Mix</p>
    <p>Original Manual SIEVE</p>
  </div>
  <div class="page">
    <p>MPI-SWS/NOVALINCS</p>
    <p>Conclusion</p>
    <p>SIEVE automatically and efficiently chooses weak consistency (blue) whenever possible, and strong consistency (red) when needed, only requiring little programmer input.</p>
  </div>
  <div class="page">
    <p>Automating the Choice of Consistency Levels in Replicated Systems</p>
    <p>Thanks for your attention!</p>
    <p>Q and A!</p>
  </div>
</Presentation>
