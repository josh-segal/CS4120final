<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Asynchronous I/O Stack: A Low-latency Kernel I/O Stack for Ultra-Low Latency SSDs</p>
    <p>Gyusun Lee, Seokha Shin, Wonsuk Song, Tae Jun Ham,</p>
    <p>Jae W. Lee and Jinkyu Jeong</p>
    <p>Sungkyunkwan University (SKKU)</p>
    <p>Seoul National University (SNU)</p>
  </div>
  <div class="page">
    <p>Emerging ultra low-latency SSDs deliver I/Os in a few  s</p>
    <p>Storage Performance Trends</p>
    <p>Source: R. E. Bryant and D. R. O'Hallaron, Computer Systems: A Programmer's Perspective, Second Edition, Pearson Education, Inc., 2015</p>
    <p>L a te</p>
    <p>n c y (</p>
    <p>n s )</p>
    <p>Year</p>
    <p>HDD</p>
    <p>SSD</p>
    <p>ULL-SSD</p>
    <p>DRAM</p>
    <p>SRAM</p>
    <p>Samsung Z-SSD Intel Optane SSD</p>
  </div>
  <div class="page">
    <p>Low-latency SSDs expose the overhead of kernel I/O stack</p>
    <p>Overhead of Kernel I/O Stack</p>
    <p>SATA SSD</p>
    <p>NVMe SSD</p>
    <p>Z-SSD Optane SSD</p>
    <p>SATA SSD</p>
    <p>NVMe SSD</p>
    <p>Z-SSD Optane SSD</p>
    <p>Read Write (+fsync)</p>
    <p>N o</p>
    <p>rm a li</p>
    <p>e d</p>
    <p>L a te</p>
    <p>n c y</p>
    <p>Device</p>
    <p>Kernel</p>
    <p>User</p>
  </div>
  <div class="page">
    <p>Synchronous I/O vs. Asynchronous I/O</p>
    <p>Our Idea: apply asynchronous I/O concept to the I/O stack itself</p>
    <p>Throughput Total latency</p>
    <p>CPU</p>
    <p>Device</p>
    <p>A (computation)</p>
    <p>B (I/O)</p>
    <p>Total latency</p>
    <p>Synchronous I/O</p>
    <p>CPU</p>
    <p>Device</p>
    <p>A A</p>
    <p>B</p>
    <p>Total latency</p>
    <p>A is independent to B Asynchronous I/O</p>
  </div>
  <div class="page">
    <p>Read Path in Asynchronous I/O Stack</p>
    <p>CPU</p>
    <p>Device Device I/O</p>
    <p>I/O stack operations I/O stack operations</p>
    <p>CPU</p>
    <p>Device Device I/O Latency reduction</p>
    <p>Async. operations</p>
    <p>sys_read() Return to user</p>
    <p>sys_read() Return to user</p>
    <p>Vanilla I/O Stack</p>
    <p>Asynchronous I/O Stack</p>
  </div>
  <div class="page">
    <p>Write(+fsync) Path in Asynchrnous I/O Stack</p>
    <p>CPU</p>
    <p>Device</p>
    <p>CPU</p>
    <p>Device Latency reduction</p>
    <p>sys_fsync()</p>
    <p>Device I/O Device I/O Device I/O</p>
    <p>I/O stack ops. I/O stack ops. I/O stack ops.</p>
    <p>sys_fsync()</p>
    <p>I/O stack ops.</p>
    <p>Device I/O Device I/O Device I/O</p>
    <p>I/O stack ops.</p>
    <p>I/O stack ops.</p>
    <p>Return to user</p>
    <p>Return to user</p>
    <p>Flush</p>
    <p>Vanilla I/O Stack</p>
    <p>Asynchronous I/O Stack</p>
  </div>
  <div class="page">
    <p>Random write (+fsync)</p>
    <p>FIO Performance (on Optane SSD)</p>
    <p>Random read</p>
    <p>L a</p>
    <p>te n</p>
    <p>c y (</p>
    <p>s</p>
    <p>)</p>
    <p>Block size</p>
    <p>Vanilla AIOS AIOS-poll</p>
    <p>L a</p>
    <p>te n</p>
    <p>c y (</p>
    <p>s</p>
    <p>)</p>
    <p>Block size</p>
    <p>Vanilla AIOS</p>
    <p>Up to 23%</p>
    <p>latency reduction</p>
    <p>Up to 26%</p>
    <p>latency reduction</p>
  </div>
  <div class="page">
    <p>USENIX ATC 2019, Thursday July 11</p>
    <p>Track Exotic Kernel Features, 3:50pm</p>
    <p>Main Talk of Asynchronous I/O Stack</p>
    <p>Detailed analysis of read/write I/O stack</p>
    <p>Asynchronous I/O stack</p>
    <p>Proposed read and write(+fsync) paths in detail</p>
    <p>Lightweight block I/O layer</p>
    <p>Low-latency block I/O service for ultra-low latency SSDs</p>
    <p>More performance measurements with various workloads</p>
  </div>
  <div class="page">
    <p>Extra Slides</p>
  </div>
  <div class="page">
    <p>Filebench varmail</p>
    <p>Real-world Workload Performance</p>
    <p>RocksDB DBbench readrandom</p>
    <p>O P</p>
    <p>/s (</p>
    <p>k )</p>
    <p>Threads</p>
    <p>Vanilla AIOS</p>
    <p>O P</p>
    <p>/s (</p>
    <p>k )</p>
    <p>Threads</p>
    <p>Vanilla AIOS</p>
    <p>Up to 27%</p>
    <p>throughput</p>
    <p>improvement</p>
    <p>Up to 29%</p>
    <p>throughput</p>
    <p>improvement</p>
  </div>
</Presentation>
