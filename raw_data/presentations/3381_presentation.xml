<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Answering Queries using Humans, Algorithms &amp; Databases</p>
    <p>Aditya Parameswaran Stanford University</p>
    <p>(Joint work with Alkis Polyzotis, UC Santa Cruz) 1/11/11 1</p>
  </div>
  <div class="page">
    <p>Why Crowd-source?  Many tasks are done better by humans</p>
    <p>Understanding speech, images and language</p>
    <p>Many people are online and willing to work</p>
    <p>Several commercial marketplaces  Amazons Mechanical Turk, Odesk, LiveOps,</p>
    <p>Several programming libraries  TurKit, HPROC,</p>
    <p>Label/Tag Identify</p>
    <p>Description</p>
    <p>Compare Sort Rank</p>
  </div>
  <div class="page">
    <p>Example  Select top-k images for a restaurant from a user</p>
    <p>submitted image DB  Must display food served in restaurant OR  Must display restaurant name  Not dark  Not copyrighted</p>
    <p>Can use image processing algorithms for some cases</p>
    <p>Can look up database containing metadata</p>
    <p>Need to ask humans</p>
  </div>
  <div class="page">
    <p>Example: Current Solution Programmer does all the work  Implements calls to:</p>
    <p>Crowd libraries, hand-coding:  Which tasks to run  On which items  In what order  For what price</p>
    <p>Algorithms, since crowd latency may be high, specifying:  For which tasks, on which items and in what order</p>
    <p>Relational data  Write code to :</p>
    <p>Integrate obtained information  Deal with inconsistencies and incorrect answers from</p>
    <p>the crowd</p>
  </div>
  <div class="page">
    <p>Our Vision</p>
    <p>Query</p>
    <p>Data Humans</p>
    <p>Result Declarative Query Processing Engine</p>
    <p>Algorithms</p>
    <p>Nothing out-of-the-ordinary for DB people!  Application only provides the UI to ask questions to</p>
    <p>humans  Remainder handled under the covers by the query</p>
    <p>optimizer  Application development becomes much simpler.</p>
  </div>
  <div class="page">
    <p>Outline for the Talk</p>
    <p>Query</p>
    <p>Data Humans</p>
    <p>Result Declarative Query Processing Engine</p>
    <p>Algorithms</p>
  </div>
  <div class="page">
    <p>Find all jpg travel pictures: either large pictures of a clean beach, or pictures of a clean and safe city</p>
    <p>4 types of predicates  r  relational predicates  a  algorithmic predicates  h  human predicates</p>
    <p>UI for question is provided by the application.  ha  mixed (human / algorithmic) predicates</p>
    <p>Can ask humans or can use algorithms</p>
    <p>travel(I):= rJpeg(I), hClean(I), hBeach(I), aLarge(I) travel(I):= rJpeg(I), hClean(I), haCity(I,C), rSafe(C)</p>
    <p>Example Query</p>
    <p>Is this an image of a clean location?</p>
    <p>Is this an image of a clean location?</p>
  </div>
  <div class="page">
    <p>Other Examples  Find all images of people at the scene of the crime</p>
    <p>who also have a criminal record  suspects(N, I):=rCriminal(N, P), rScene(I), haSim(I,P)  rCriminal : database of known criminals, with images  haSim : evaluates presence of P in I</p>
    <p>Then the results may be used for an aggregation: Find the best image for every criminal  topImg(N, hBest(&lt;I&gt;)):= suspects(N, I)  hBest : the top image</p>
    <p>Do these images contain the same</p>
    <p>person?</p>
    <p>Do these images contain the same</p>
    <p>person?</p>
  </div>
  <div class="page">
    <p>Need for a New Architecture  Tradeoffs between</p>
    <p>Performance,  Monetary cost, and  Uncertainty in query result</p>
    <p>Unknown  Selectivities  Latency for both algorithms and humans  Uncertainty in answers</p>
    <p>This combination of evils has never appeared before!</p>
    <p>Plus, some other aspects that will become clear later</p>
    <p>tim e tim e</p>
    <p>costcost</p>
    <p>uncertai nty uncertai nty</p>
    <p>Uncerta in</p>
    <p>databas es</p>
    <p>Uncerta in</p>
    <p>databas es</p>
    <p>User Defined Functio</p>
    <p>ns</p>
    <p>User Defined Functio</p>
    <p>ns</p>
    <p>Adaptive Query</p>
    <p>Optimizati on</p>
    <p>Adaptive Query</p>
    <p>Optimizati on</p>
  </div>
  <div class="page">
    <p>Semantics of Query Model  We want correct answers</p>
    <p>What is a correct answer?  Notion not clear:</p>
    <p>Correlations and Inconsistencies  Mistakes and Lack of knowledge</p>
    <p>We use a threshold on confidence to define correctness (later)</p>
    <p>Three semantics:</p>
    <p>tim e tim e</p>
    <p>costcost</p>
    <p>uncertai nty uncertai nty</p>
  </div>
  <div class="page">
    <p>Query Proc. without Uncertainty</p>
    <p>Two-criteria optimization , e.g., cost &amp; time  Selectivities are not known</p>
    <p>Adaptive query optimization  Latency not known</p>
    <p>Asynchronous execution  It is critical to reason about the Information</p>
    <p>gain of a question</p>
    <p>travel(I):= rJpeg(I), hClean(I), hBeach(I), aLarge(I) travel(I):= rJpeg(I), hClean(I), haCity(I,C), rSafe(C)</p>
  </div>
  <div class="page">
    <p>Asking the right questions</p>
    <p>Prefer questions affecting more tuples downstream  If all correct answers needed :</p>
    <p>Prefer selective questions  If k correct answers needed :</p>
    <p>Prefer non-selective questions leading to answers  For complex tasks</p>
    <p>Need to subdivide into questions that maximize information gain  e.g., Classify, Cluster, Categorize</p>
    <p>We studied this problem carefully for graph search  Human-assisted graph search: Its okay to ask</p>
    <p>questions, VLDB 11</p>
    <p>travel(I):= rJpeg(I), hClean(I), hBeach(I), aLarge(I) travel(I):= rJpeg(I), hClean(I), haCity(I,C), rSafe(C)</p>
  </div>
  <div class="page">
    <p>Query Proc. without Uncertainty Intra and inter-stage optimization</p>
    <p>Stage 1</p>
    <p>Stage 3</p>
    <p>Stage 2</p>
    <p>Perform computations on relational data</p>
    <p>Issue a set of asynchronous questions to  Crowd  Algorithms</p>
    <p>Collect results from previous stages</p>
    <p>Prefer algorithmic and relational questions</p>
    <p>Stage n</p>
  </div>
  <div class="page">
    <p>Uncertainty</p>
    <p>Sources:  Intra-predicate correlation  Inter-predicate correlation  Subjective views, random mistakes  Lack of knowledge</p>
    <p>Only want correct answers (confidence &gt; )  Standard techniques are insufficient!</p>
    <p>travel(I):= rJpeg(I), hClean(I), hBeach(I), aLarge(I) travel(I):= rJpeg(I), hClean(I), haCity(I,C), rSafe(C)</p>
    <p>answers to two images I</p>
    <p>for hClean</p>
    <p>answer to I for hBeach is YES</p>
    <p>NO for haCity</p>
  </div>
  <div class="page">
    <p>How do we compute confidence?</p>
    <p>Scheme 1: Majority voting  Each question attempted by c humans  Majority answer taken as the correct answer</p>
    <p>Scheme 2: Homogeneous worker population  Per question, each worker is IID from a</p>
    <p>distribution  No cross-correlations  Infer distribution based on answers of</p>
    <p>workers</p>
    <p>Scheme 3: Item Response Theory 15</p>
  </div>
  <div class="page">
    <p>Other Important Aspects</p>
    <p>Pricing  Must price tasks so that they complete  Important, harder tasks priced higher</p>
    <p>Spam  Test questions or a Gold standard  Reputation systems for workers</p>
    <p>Choosing UI questions for predicates</p>
  </div>
  <div class="page">
    <p>From Tasks to UI Questions</p>
    <p>The choice of the UI affects:  The number of UI questions (thus, the cost)  The overall uncertainty of the answer  Latency</p>
    <p>Complex tasks:  Sort, Top-k, Max</p>
    <p>suspects(N, I):= rCriminal(N, P), rScene(I), haSim(I,P)</p>
    <p>topImg(N, hBest(&lt;I&gt;)):= suspects(N, I)</p>
    <p>Match similar images from the</p>
    <p>two sets</p>
    <p>Match similar images from the</p>
    <p>two sets I1 I2 I3</p>
    <p>J1 J2 J3</p>
    <p>Are the two</p>
    <p>images alike?</p>
    <p>Are the two</p>
    <p>images alike? I1 J1</p>
    <p>SortSort</p>
    <p>I1 I2 I3</p>
    <p>CompareCompare</p>
    <p>I1 I2</p>
  </div>
  <div class="page">
    <p>Conclusions  Using human computation within the database</p>
    <p>Important and challenging new research area for DB people</p>
    <p>Requires a careful redesign of the DBMS  More parameters/tradeoff that we need to keep track of</p>
    <p>Vision of the sCOOP project  (System for COmputing with and Optimizing People)</p>
    <p>Look out for our paper at VLDB in Seattle!  Human-assisted Graph Seach: Its okay to ask</p>
    <p>questions!  By: A. Parameswaran, A. Das Sarma, H. Garcia</p>
    <p>Molina,</p>
    <p>N. Polyzotis and J. Widom 18</p>
  </div>
</Presentation>
