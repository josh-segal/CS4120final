<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Characterizing Database Users Access Patterns</p>
    <p>Qingsong Yao, Aijun An and Xiangji Huang</p>
    <p>{qingsong,aan}@cs.yorku.ca, jhuang@yorku.ca</p>
    <p>York University</p>
    <p>Toronto, Canada</p>
  </div>
  <div class="page">
    <p>Topics  Motivation  User Access Patterns</p>
    <p>Frequently performed queries, time/resource-consuming queries.</p>
    <p>User Access Event and User Access Graph  Mining and Modeling User Access Patterns</p>
    <p>Log data collection and preprocessing  SQL Query classification  Database user identification  Database session identification  Database session clustering  Database session modeling</p>
    <p>Using User Access Patterns  Related Works  Conclusion</p>
  </div>
  <div class="page">
    <p>Motivation  The analysis of database workload plays an important role in</p>
    <p>optimizing the performance of database systems.  Previous workload analysis methods are from the view of the</p>
    <p>server, such as statistical summaries; buffer hit ratio.  It has been brought into attention that analysis of task-oriented</p>
    <p>user sessions provides useful insight into query behaviour of database users.  A database user session is a sequence of queries issued by a user (or</p>
    <p>an application) to achieve a certain task. It consists of one or more database transactions, which are in turn a sequence of operations performed as a logical unit.</p>
    <p>The SQL queries submitted by a client or a user have specific meaning and have certain format.</p>
    <p>The queries within a user session follow certain business logics or rules and have certain order.</p>
    <p>Our research tries to solve the question of  How to model database user behavior?  How to find database user behavior efficiently?  How to use database user behavior?</p>
  </div>
  <div class="page">
    <p>User Access Patterns  We use user access patterns to describe the</p>
    <p>behaviours of a client application or a group of users.</p>
    <p>The user access patterns of a client application or a</p>
    <p>user group contains:  A collection of frequently performed queries.</p>
    <p>A collection of time/resource-consuming queries.</p>
    <p>A collection of frequent user access event associated with the parameter distributions that represent the query format</p>
    <p>A collection of frequent user access graphs that represent the query execution order.</p>
  </div>
  <div class="page">
    <p>User Access Event and User Access Graph  A user access event represents a set of similar queries. It contains</p>
    <p>a SQL template and a set of parameters  SQL template: each value of a query is replaced by char %.  Parameters: the corresponding values in the query, and can be</p>
    <p>constants or variables.  For example, event (select * from customer where id=%, cid)</p>
    <p>represent a set of queries retrieving a given customers info.  A user access graph is a directed dependency graph, that</p>
    <p>represents the query execution order within a user session or the session execution order of a user  The graph has one start node and one or more end nodes  A node has a support value that is the frequency within session.  An edge is represented by (i, j, k), where k is the probability of j</p>
    <p>following i, which is called the confidence value.  A basic user access graph, whose nodes are events represent the</p>
    <p>query execution order. A high-level user access graph, whose nodes are graphs describes the orders among sessions of the same user.</p>
  </div>
  <div class="page">
    <p>Q33 can not be anticipated since the value t202 is unknown before it is requested, but Q34 does. Thus, Q33 contains a action that assigning variable g_tid as t202</p>
    <p>An instance of treatment history retrieving session (P3) 1. q30: select count(tid) from treatment where cid = c101 2. q31: select tid from treatment where cid = c101 3. q32: select tid from treatment where cid = c101</p>
    <p>and status =1 3. q33: select * from treatment_details where tid = t202 4. q34: select card name from treatment_payment</p>
    <p>where tid =t202</p>
    <p>An Example of User Access Graphs</p>
    <p>Same value Same value and sameand same query query predicatepredicate</p>
    <p>Same value,Same value,</p>
    <p>User access graph P: ( g_cid,g_date )</p>
    <p>P1 P2</p>
    <p>P4</p>
    <p>P3</p>
    <p>P5</p>
    <p>The high-level user access graphs for a patient-information model: when a user log in (P1) , the profile is retrieved (P2). User either retrieves treatment history information (P3) or treatment schedule (P4). Finally, user logout (P5)</p>
    <p>User access graph P3: (g_cid, g_date, g_tid)</p>
  </div>
  <div class="page">
    <p>Mining User Access Patterns  Database workload characterizing is based on</p>
    <p>database traces.  Traces are a collection of measures, such as pages</p>
    <p>read/written, locks, SQL statements, produced by all transactions being processed by the DBMS within a time interval.</p>
    <p>The mining algorithm contains following steps: 1. Trace data collection and preprocessing</p>
  </div>
  <div class="page">
    <p>Mining User Access Patterns (1)  Trace data collection and preprocessing</p>
    <p>Query classification 1. Each SQL query is transformed into an SQL template and a set</p>
    <p>of parameters. 2. A user access event is assigned for each SQL template. 3. The parameter value distributions of a user access event are</p>
    <p>obtained. 4. A sequence of events obtained by replacing the query with the</p>
    <p>corresponding event.</p>
  </div>
  <div class="page">
    <p>An Example Database trace log</p>
    <p>User access events table Event sequence table</p>
    <p>queries with the same connection id</p>
    <p>Assigning each user access event a label Obtain a sequence of event label</p>
  </div>
  <div class="page">
    <p>Mining User Access Patterns (2) Database User Identification  The concept of &quot;user&quot; is not the database user that</p>
    <p>directly connects to the database server, but the user of database-based application</p>
    <p>In a client/server application, requests submitted by the same application from the same address and use the same database connection are belonging to the same user.</p>
    <p>It is non-trivial task to identify users from the traces when database users dont connect to the database server directly, and may share database connections.</p>
    <p>Queries within a user session usually has the same database connection, thus identifying sessions can help to find users.</p>
    <p>Other kinds of log, such as web access log can help to find database users.</p>
  </div>
  <div class="page">
    <p>Mining User Access Patterns (3) - User Session Identification  The task of session identification is to separate database</p>
    <p>sessions from a sequence of requests/events.  The most commonly used session identification method is</p>
    <p>called timeout.  Assuming that the think-time between user sessions is longer than</p>
    <p>that between the events of a session.  This session identification method suffers from the problem that it</p>
    <p>is difficult to set the time threshold.  Statistical language modeling (n-gram model) based session</p>
    <p>identification method is proposed.  Using an information theoretic approach to identify session</p>
    <p>boundaries dynamically by measuring the change of information in the sequence of requests.</p>
    <p>Has been demonstrated to be more effective than timeout and two other methods in discovering association rules in a Web mining.</p>
    <p>The successful use of this method depends on how to select values for some parameters.</p>
  </div>
  <div class="page">
    <p>N-gram models Given a sequence of words, what is the next possible word?Given a sequence of words, what is the next possible word?  Markov assumptionMarkov assumption: the probability of a words depends only on the : the probability of a words depends only on the</p>
    <p>probability of a limited history.probability of a limited history.  n-gram Modeln-gram Model: the probability of a word depends on the previous n-: the probability of a word depends on the previous n</p>
    <p>Given a string W with N words, the possibility that it is Given a string W with N words, the possibility that it is</p>
    <p>spoken isspoken is</p>
    <p>Data sparsityData sparsity problem: training data is not big enough to get that problem: training data is not big enough to get that much information, umuch information, unseen sequence get 0 probability. Solution: nseen sequence get 0 probability. Solution: smoothing and discountingsmoothing and discounting</p>
    <p>),,,|(),,,|( 121121   iiniiiii wwwwPwwwwP</p>
    <p>N</p>
    <p>i iinii</p>
    <p>Nn</p>
    <p>N</p>
    <p>wwwwP</p>
    <p>wwwwPwwwPwwPwP</p>
    <p>wwwPP</p>
    <p>),,,|(</p>
    <p>),,,|(),|()|()(</p>
    <p>),,,()(</p>
    <p>W</p>
  </div>
  <div class="page">
    <p>Assumption: given a sequence Assumption: given a sequence W(WW(W11,,W,,WNN)), If , If WW crosses crosses</p>
    <p>session boundary, session boundary, P(W)P(W) is low, otherwise, P(W) is high. is low, otherwise, P(W) is high.  Problem: probability is not a good measurement. IProblem: probability is not a good measurement. Is a s a probability probability value 0.05 small or large?value 0.05 small or large?  Use Use entropyentropy value instead. The empirical entropy of the value instead. The empirical entropy of the model on a sentence W with size N is: -model on a sentence W with size N is: -1/N * log1/N * log22P(W)P(W)</p>
    <p>Entropy is average number of bits per word required to encode Entropy is average number of bits per word required to encode test data using this probability model, and an optimal coder.test data using this probability model, and an optimal coder.</p>
    <p>Entropy is usually between 0 and 10. A small probability means Entropy is usually between 0 and 10. A small probability means a large entropy value, and the sequence may contain boundaries.a large entropy value, and the sequence may contain boundaries.</p>
    <p>Theory: suppose a set of queries for a task that are frequently Theory: suppose a set of queries for a task that are frequently issued one after another. In this case, the entropy of the sequence is issued one after another. In this case, the entropy of the sequence is low. However, when a new query is observed in the sequence that is low. However, when a new query is observed in the sequence that is not relevant to the original task (but in fact indicates a shift to a new not relevant to the original task (but in fact indicates a shift to a new task), it causes an increase in the entropy of the sequence. Such an task), it causes an increase in the entropy of the sequence. Such an entropy increase serves as a signal for session boundary detection.entropy increase serves as a signal for session boundary detection.</p>
    <p>Session Identification with N-gram Model</p>
  </div>
  <div class="page">
    <p>Use a slide window of size n to process event sequence Use a slide window of size n to process event sequence W: WW: W11,,W,,Wii., For each W., For each Wi i , assign an entropy value , assign an entropy value</p>
    <p>Value (WValue (Wii) = Entropy(W) = Entropy(Wi-n+1i-n+1,.W,.Wi-1i-1, W, Wii))</p>
    <p>sequence</p>
    <p>entropy Example: Entropy Evolution Curve</p>
    <p>Detection method: given a threshold value Detection method: given a threshold value , event, event W Wii is is</p>
    <p>session boundary , ifsession boundary , if</p>
    <p>) Value(W</p>
    <p>) Value(W) Value(W</p>
    <p>i</p>
    <p>ii</p>
    <p>Session Identification with N-gram Model(2)</p>
    <p>Session BoundariesSession Boundaries</p>
    <p>Entropy value suddenly increases at a session boundary.Entropy value suddenly increases at a session boundary.</p>
  </div>
  <div class="page">
    <p>The The probabilities probabilities come from training data. Three kinds come from training data. Three kinds of training data/ session identification method exist:of training data/ session identification method exist:  Supervised learningSupervised learning: training data consists of a set of : training data consists of a set of</p>
    <p>sessions have been identified. The frequencies of inter-sessions have been identified. The frequencies of intersesession sequence are set to 0.sesession sequence are set to 0.</p>
    <p>Unsupervised learningUnsupervised learning: training data is un-separated : training data is un-separated request sequence. Contains both inter-session and intra request sequence. Contains both inter-session and intra session frequencies. More sensitive to the model session frequencies. More sensitive to the model parameters, such as entropy threshold and n-gram order.parameters, such as entropy threshold and n-gram order.</p>
    <p>Semi-supervised learningSemi-supervised learning: training data contains part of : training data contains part of the boundary points and are thus partially separated by the boundary points and are thus partially separated by the boundary points. the boundary points.</p>
    <p>For supervised learning, For supervised learning, cross-entropycross-entropy is used to choose is used to choose parameters for the data set. for the data set.</p>
    <p>For unsupervise and semi-supervised learning, a For unsupervise and semi-supervised learning, a development development data setdata set is used to choose the is used to choose the parameters, and applying to the , and applying to the data set.data set.</p>
    <p>Training Data and Probability Estimate</p>
  </div>
  <div class="page">
    <p>event sequence</p>
    <p>e n</p>
    <p>tr o</p>
    <p>p y</p>
    <p>Unsupervised Supervised Semi-Supervised</p>
    <p>Entropy Evolution Curves</p>
  </div>
  <div class="page">
    <p>F-measureF-measure : assume the corrected sessions for test data is : assume the corrected sessions for test data is known and compare the estimated sessions with the known and compare the estimated sessions with the corrected sessions. corrected sessions. F-measure is defined asF-measure is defined as</p>
    <p>PrecisionPrecision is the ratio of correct is the ratio of correct hits to proposedhits to proposed(hit (hit sessions /estimated_sessions)sessions /estimated_sessions). .</p>
    <p>HigherHigher F-measures means better overall performance.F-measures means better overall performance.</p>
    <p>Cross-entropy:Cross-entropy: use the n-gram model to compress the use the n-gram model to compress the</p>
    <p>estimated session set, if the sessions are accurate, the entropy estimated session set, if the sessions are accurate, the entropy</p>
    <p>value is small. The entropy value is called value is small. The entropy value is called cross-entropycross-entropy for the for the</p>
    <p>test data. test data. Can only be used for supervised-learning method.Can only be used for supervised-learning method.</p>
    <p>Performance Measurement metric</p>
  </div>
  <div class="page">
    <p>Relationship Between F-Measure and Cross Entropy</p>
    <p>F-measure and Cross-entropy has invert relationship</p>
  </div>
  <div class="page">
    <p>Parameter Selection threshold value</p>
    <p>Performance of n-gram method greatly depends on the threshold.  Automatic method for choosing a threshold is proposed:</p>
  </div>
  <div class="page">
    <p>Parameter Selection  n-gram order</p>
    <p>An order between 2 and 8 is generally good.</p>
    <p>The performance with a lower order (from 2 to 5) is better than that with a higher order (from 6 to 8).</p>
    <p>The best order value is the model with minimal cross-entropy on the test data (for supervised learning) or that with maximal Fmeasure on the development data (for un-supervised learning or semi-supervised learning)</p>
  </div>
  <div class="page">
    <p>Performance Comparisons</p>
    <p>Supervised &gt; Semi-Supervised &gt; Unsupervised &gt; Timeout</p>
  </div>
  <div class="page">
    <p>Mining User Access Patterns (4) - User Session Classification  The task of session clustering is to group session</p>
    <p>instances to different session groups. The number of groups is unknown, and it is a un-supervised learning procedure.</p>
    <p>A distance-based session clustering algorithm is proposed: 1. Consider each session instance as a session group, and calculate</p>
    <p>the distance between them. 2. Groups are merged according to the intra-group distances, intra</p>
    <p>group distances are updated correspondingly. 3. The clustering procedure will stop when all intra-group distances</p>
    <p>are more than a pre-defined distance threshold.  Distance between two sessions i and j is defined as:</p>
    <p>distance(i,j)= 1.0  sim (i,j), where sim(i, j) is the similarity between two sessions</p>
  </div>
  <div class="page">
    <p>Mining User Access Patterns (4) - User Session Classification Cont. Three similarity scores are proposed:</p>
    <p>Coefficient score: treat i and j as un-ordered item set, the score is the fraction of common events between them:</p>
    <p>csim(i,j) = | i  j |/|i  j |  Alignment score (asim): treat i and j as request</p>
    <p>sequences, aligns them first, calculates the score based on the aligned sequences.</p>
    <p>Neighborhood score (nsim): is the common neighbors between i and j. Two sequences are neighbor if their distance based on the above two scores exceeds certain threshold</p>
    <p>The overall similarity between i and j is sim (i,j) = a * csim(i,j) + b* asim(i,j) + c * nsim(i,j), where a +b +c =1.0</p>
  </div>
  <div class="page">
    <p>Mining User Access Patterns (4) - User Session Classification Cont.  In sequence alignment, two or more strings are aligned</p>
    <p>together in order to get the highest similarity score. Gaps may be inserted into a string in order to shift the remaining characters into better matches.</p>
    <p>Two sequence {ABCDD} and {ABED} are aligned as: ABCDD/ABED</p>
    <p>Treat a session sequence as a piece of programming code. The code may contain branches (such as if/else) or loops (such as for-loop and while-loop).</p>
    <p>We assign each match with a score of 2 (A, and B), each branch with a score of 1 (C/E), and each loop with a score of 1 (DD/D).</p>
    <p>To normalize the score, we divide the value with the length of the aligned sessions. The length is defined as</p>
  </div>
  <div class="page">
    <p>Mining User Access Patterns (4) - User Session Classification Cont.  Clustering Algorithms:</p>
    <p>Question:  How to choose similarity parameters a, b and c?</p>
    <p>The parameters are the weight of the three similarity scores.</p>
    <p>How to choose clustering threshold? depending on the application domain</p>
    <p>How to deal with short session? with some expert knowledge.</p>
  </div>
  <div class="page">
    <p>Model User Access Patterns (1)  Task: building user access graph for each session group.  Markov model based user access graph generation</p>
    <p>instances &lt;a,b,c&gt;, &lt;a,b,c,b&gt;, &lt;a,b,d&gt;, &lt;a,b,d,b&gt; are</p>
    <p>S1 S2</p>
    <p>S7</p>
    <p>Freq S1 S2 S3 S4 S5</p>
    <p>S2 4 0 0 4 0 0 S3 4 0 0 0 2 2 S4 2 0 0 0 0 0 S5 2 0 0 0 0 0 S6 1 0 0 0 0 0</p>
    <p>S1 4 0 4 0 0 0 S6 0 0 0 1 0 0</p>
    <p>S7 1 0 0 0 0 0 0</p>
    <p>S7 0 0 0 0 1 0 0</p>
    <p>S1: (start), S2: (start, a), S3: (a,b), S4: (b,c) S5: (b,d), S6: (c,b), S7:(d,b),</p>
    <p>S31.0 1.0 0.5</p>
    <p>Second Order Markov Model</p>
    <p>start a b</p>
    <p>c</p>
    <p>cd</p>
    <p>d S6</p>
    <p>S5</p>
    <p>S4</p>
    <p>S5</p>
    <p>S1 S2</p>
    <p>Freq S1 S2 S3 S4 S5</p>
    <p>S2 4 0 0 4 0 0 S3 6 0 0 0 2 2 S4 2 0 0 1 0 0 S5 2 0 0 1 0 0</p>
    <p>S1 4 0 4 0 0 0</p>
    <p>S1: (start), S2: (a), S3: (b), S4: (c), S5: (d),</p>
    <p>S31. 0</p>
    <p>First Order Markov Model</p>
    <p>start a b c</p>
    <p>d</p>
    <p>S4</p>
  </div>
  <div class="page">
    <p>Model User Access Patterns (2)  Task: find the relationship between nodes of graph  Solution: using idea of functional dependency inference</p>
    <p>Extension:  How to deal with parameters within the same node?  How to deal with branch, i.e., some parameters will not appear in</p>
    <p>a session: assign a unknown value to the columns  How to deal with loop, i.e.,some parameters have multiple values</p>
    <p>in a session: 1) consider columns that agree on all values in all sessions. 2) consider sequence matching.</p>
    <p>How to deal with query result, i.e., the value of a parameter may be the execution of a query? Hard! Must have the original data of the database.</p>
  </div>
  <div class="page">
    <p>Dependency Discovery Example</p>
    <p>events v30 v31 v32 v32 v33 v34</p>
    <p>col30_1 col31_1 col32_1 col32_2 col33_1 col34_1</p>
    <p>c101 c101 c101 1 t202 t202</p>
    <p>c201 c201 c201 1 t123 t123</p>
    <p>c202 c202 unknown unknown unknown unknown</p>
    <p>. . .</p>
    <p>c212 c212 c212 1 &lt;t301, t302&gt;</p>
    <p>&lt;t301, t302&gt;</p>
    <p>col row</p>
    <p>col32_2 is a constant, col33_1 is an independent variable, col31_1, col32_2 are dependent variables.  What is the relationship between the result of v32 with col33_1?  What about variable col30_1? Use high-level graph relationship.</p>
  </div>
  <div class="page">
    <p>Performance Evalution  How to measure the accuracy of session</p>
    <p>clustering and session modeling algorithm?  Idea:</p>
    <p>Model-based session classification. Given a session instance s, try to classify it into a session group g by using model-based Bayesian classification algorithm. If s and g has minimal distance, it is a hit.</p>
    <p>Model-based request prediction. Given a request sequence (r1,.rn), try to predict the next request r by using model-based prediction algorithm. If we predict the next request correctly, it is a hit.</p>
    <p>Use F-measure to measure the performance</p>
  </div>
  <div class="page">
    <p>Experimental Results Mining result for a client/server application:  12 instances of the application, and 9,344 SQL queries.  190 user access events.  718 user request sequences belong to 21 frequent user access</p>
    <p>graphs</p>
    <p>q1. select authority from employee where employee_id ='1025</p>
    <p>q2. select count(*) as num from customer where cust_num = '1074'</p>
    <p>q3. select card_name from customer t1,member_card t2 where t1.cust_num = '1074 and t1.card_id =t2.card_id</p>
    <p>q4. select contact_last,contact_first from customer where cust_num = '1074'</p>
    <p>q5.</p>
    <p>An instance of user access graph P1</p>
    <p>P1</p>
    <p>P2</p>
    <p>P3</p>
    <p>P9</p>
    <p>P11 P14</p>
    <p>P15</p>
    <p>P16 P13 P21 0.65 0.77</p>
    <p>P20 0.80</p>
    <p>Graph P1_3 support =20</p>
    <p>P4 P3 0.13 Graph P1_2</p>
    <p>support =16</p>
    <p>High-level user access graph</p>
    <p>Broken q3 into two queries, q2 and q2. q2,q3,q4 can be rewrite as: select count(*) as num, card_id, contract_last, contract_first from customer where cust_num=1074</p>
    <p>same table</p>
    <p>same predicate</p>
  </div>
  <div class="page">
    <p>Usage of User Access Patterns User access patterns can help to</p>
    <p>optimize SQL query to gain fast execution time. Find the system bottleneck, i.e., resource-consumed queries and frequentlyperformed queries. Redesign/optimize them</p>
    <p>tune the database system. Distinguish the step of finding user behaviors with the step of using them. Tuning database system based on user access patterns is better than analyzing the queries in a workload.</p>
    <p>anticipate and pre-fetch incoming queries. Try to match user request sequence with a user access graph, and predict the next query.</p>
    <p>rewrite queries for caching. Find the relationship between queries, and rewrite a query to answer subsequent queries.</p>
    <p>process queries by using rules. Design a rule-based database gateway, use rules to rewrite, pre-fetch queries.</p>
    <p>find possible data distributions or relationships</p>
  </div>
  <div class="page">
    <p>SQL-Relay: an Event-driven, Rule-based Database Gateway  Each incoming query is one kind of event. Each event</p>
    <p>associates with a set of pre-defined execution rules.  SQL-Relay contains a set of standard routine to process</p>
    <p>a given execution rule.  Previous query results are cached for answering</p>
    <p>incoming queries. Two kinds of query cache: global caches and local caches. Different cache selection and replacement policies are used for different kinds of cache.</p>
    <p>A global rewriting rule aims to rewrite a single query to improve query performance;</p>
    <p>A pre-fetching rule predicts the next query and prefetches the answer according to user request sequence.</p>
    <p>A local rewriting rule rewrites current query to answer multiple queries.</p>
  </div>
  <div class="page">
    <p>Related Works  Workload Characterization</p>
    <p>Clustering database transaction (based on physical resources)  Discovering and using physical resource reference pattern (disk</p>
    <p>I/O, buffer pool)  Predicting and prefetch OLAP queries.</p>
    <p>Query stream processing  The idea and algorithms discussed can be used on</p>
    <p>web-based session identification and clustering.  Database cache server and gateway</p>
    <p>DBCache (IBM), TimesTen (TimesTen), Oracle 9i database cache. All caches database tables.</p>
    <p>MySQL has server-side query caches.  Information Integrator (IBM) allows users to retrieve information</p>
    <p>from different data sources by using standard query language. It rewrite queries according to certain rule.</p>
  </div>
  <div class="page">
    <p>References  Q. Yao, A. An Using user access patterns for semantic query</p>
    <p>caching in DEXA 2003  Q. Yao, A. An Characterizing database users access patterns in</p>
    <p>DEXA 2004  Q. Yao, A. An SQL-Relay: an event-driven, rule-based database</p>
    <p>gateway in DEXA 2004  Q. Yao, X. Huang, A. An Applying language modeling to session</p>
    <p>identification from database trace Logs, submitted for publication  Q. Yao, X. Huang, A. An  Finding and clustering database user</p>
    <p>sessions, submitted for publication.  I.T. Bowman, K.Salem, Optimization of query streams using</p>
    <p>semantic prefetching, in SIGMOD 2004.  X. Huang and F. Peng and A. An and D. Schuurmans, Dynamic</p>
    <p>Web Log Session Identification with Statistical Language Models, Journal of JASIST, Special Issue on Webometrics, 2003.</p>
  </div>
  <div class="page">
    <p>Conclusion and Future Work  We propose the idea of user access pattern to</p>
    <p>represent database user navigation behaviors  We propose algorithms to cluster SQL queries,</p>
    <p>identify users and sessions, cluster and model sessions.</p>
    <p>Several approaches of using user access patterns are discussed.</p>
    <p>Future Work:  Researching on large scale database</p>
    <p>Extending to web log and applications</p>
  </div>
</Presentation>
