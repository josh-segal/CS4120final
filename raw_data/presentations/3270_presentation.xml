<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Securing Self-Virtualizing Ethernet Devices</p>
    <p>Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>In a Nutshell</p>
    <p>Two technologies, SRIOV and Ethernet Flow Control, that are individually secure . . . . but collectively vulnerable</p>
    <p>We show a new attack where an untrusted virtual machine completely controls the network bandwidth of other, unrelated virtual machines</p>
    <p>This attack exploits a vulnerability in self-virtualizing Ethernet NICs  We show how to build an attack-resistant NIC</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>In a Nutshell</p>
    <p>Two technologies, SRIOV and Ethernet Flow Control, that are individually secure . . . . but collectively vulnerable</p>
    <p>We show a new attack where an untrusted virtual machine completely controls the network bandwidth of other, unrelated virtual machines</p>
    <p>This attack exploits a vulnerability in self-virtualizing Ethernet NICs  We show how to build an attack-resistant NIC</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>In a Nutshell</p>
    <p>Two technologies, SRIOV and Ethernet Flow Control, that are individually secure . . . . but collectively vulnerable</p>
    <p>We show a new attack where an untrusted virtual machine completely controls the network bandwidth of other, unrelated virtual machines</p>
    <p>This attack exploits a vulnerability in self-virtualizing Ethernet NICs  We show how to build an attack-resistant NIC</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>In a Nutshell</p>
    <p>Two technologies, SRIOV and Ethernet Flow Control, that are individually secure . . . . but collectively vulnerable</p>
    <p>We show a new attack where an untrusted virtual machine completely controls the network bandwidth of other, unrelated virtual machines</p>
    <p>This attack exploits a vulnerability in self-virtualizing Ethernet NICs  We show how to build an attack-resistant NIC</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>In a Nutshell</p>
    <p>Two technologies, SRIOV and Ethernet Flow Control, that are individually secure . . . . but collectively vulnerable</p>
    <p>We show a new attack where an untrusted virtual machine completely controls the network bandwidth of other, unrelated virtual machines</p>
    <p>This attack exploits a vulnerability in self-virtualizing Ethernet NICs  We show how to build an attack-resistant NIC</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Attack Ramifications</p>
    <p>To defend against the attack, you have to either:  Trust your virtual machines, or  Give up on flow control functionality and lose performance, or  Modify device hardware/firmware</p>
    <p>All evaluated vendors are vulnerable</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Attack Ramifications</p>
    <p>To defend against the attack, you have to either:  Trust your virtual machines, or  Give up on flow control functionality and lose performance, or  Modify device hardware/firmware</p>
    <p>All evaluated vendors are vulnerable</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Attack Ramifications</p>
    <p>To defend against the attack, you have to either:  Trust your virtual machines, or  Give up on flow control functionality and lose performance, or  Modify device hardware/firmware</p>
    <p>All evaluated vendors are vulnerable</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Attack Ramifications</p>
    <p>To defend against the attack, you have to either:  Trust your virtual machines, or  Give up on flow control functionality and lose performance, or  Modify device hardware/firmware</p>
    <p>All evaluated vendors are vulnerable</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Attack Ramifications</p>
    <p>To defend against the attack, you have to either:  Trust your virtual machines, or  Give up on flow control functionality and lose performance, or  Modify device hardware/firmware</p>
    <p>All evaluated vendors are vulnerable</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Attack Ramifications</p>
    <p>To defend against the attack, you have to either:  Trust your virtual machines, or  Give up on flow control functionality and lose performance, or  Modify device hardware/firmware</p>
    <p>All evaluated vendors are vulnerable</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Background: Types of I/O Virtualization</p>
    <p>hypervisor</p>
    <p>Emulation &amp; Para-virtualization</p>
    <p>Direct I/O Device Assignment</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Background: Direct Device Assignment</p>
    <p>Great performance minimizes the number of I/O-related world switches between the guest and the host</p>
    <p>Limitation: not scalable 510 I/O devices per host, but 50100 virtual machines per host</p>
    <p>Self-virtualizing devices are scalable! PCI-SIG proposed the Single Root I/O Virtualization (SRIOV) standard for scalable device assignment</p>
    <p>PCI device presents itself as multiple virtual interfaces  SRIOV spec supports up to 64K virtual devices  Intel XL710 40GbE NIC implements 128 virtual interfaces</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Background: Direct Device Assignment</p>
    <p>Great performance minimizes the number of I/O-related world switches between the guest and the host</p>
    <p>Limitation: not scalable 510 I/O devices per host, but 50100 virtual machines per host</p>
    <p>Self-virtualizing devices are scalable! PCI-SIG proposed the Single Root I/O Virtualization (SRIOV) standard for scalable device assignment</p>
    <p>PCI device presents itself as multiple virtual interfaces  SRIOV spec supports up to 64K virtual devices  Intel XL710 40GbE NIC implements 128 virtual interfaces</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Background: Direct Device Assignment</p>
    <p>Great performance minimizes the number of I/O-related world switches between the guest and the host</p>
    <p>Limitation: not scalable 510 I/O devices per host, but 50100 virtual machines per host</p>
    <p>Self-virtualizing devices are scalable! PCI-SIG proposed the Single Root I/O Virtualization (SRIOV) standard for scalable device assignment</p>
    <p>PCI device presents itself as multiple virtual interfaces  SRIOV spec supports up to 64K virtual devices  Intel XL710 40GbE NIC implements 128 virtual interfaces</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Background: Direct Device Assignment</p>
    <p>Great performance minimizes the number of I/O-related world switches between the guest and the host</p>
    <p>Limitation: not scalable 510 I/O devices per host, but 50100 virtual machines per host</p>
    <p>Self-virtualizing devices are scalable! PCI-SIG proposed the Single Root I/O Virtualization (SRIOV) standard for scalable device assignment</p>
    <p>PCI device presents itself as multiple virtual interfaces  SRIOV spec supports up to 64K virtual devices  Intel XL710 40GbE NIC implements 128 virtual interfaces</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Single Root I/O Virtualization (SRIOV)</p>
    <p>Each SRIOV capable device consists of at least one Physical Function (PF) and multiple virtual partitions called Virtual Functions (VF)</p>
    <p>PF is a standard PCIe function with full configuration space. Can control entire PCI device and perform I/O operations</p>
    <p>VF is a lightweight PCI function that implements only a subset of standard PCI functionality, mostly performs I/O</p>
    <p>guest VM0</p>
    <p>hypervisor</p>
    <p>SRIOV NIC in a virtualized environment</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Where is SRIOV Used?</p>
    <p>HPC with SRIOV it is possible to virtualize HPC setups.  Cloud Service Providers such as Amazon Elastic Compute Cloud (EC2)</p>
    <p>use SRIOV as the underlying technology in EC2 HPC services</p>
    <p>Data Centers Oracle Exalogic appliance uses SRIOV technology to share the internal network</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Where is SRIOV Used?</p>
    <p>HPC with SRIOV it is possible to virtualize HPC setups.  Cloud Service Providers such as Amazon Elastic Compute Cloud (EC2)</p>
    <p>use SRIOV as the underlying technology in EC2 HPC services</p>
    <p>Data Centers Oracle Exalogic appliance uses SRIOV technology to share the internal network</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Where is SRIOV Used?</p>
    <p>HPC with SRIOV it is possible to virtualize HPC setups.  Cloud Service Providers such as Amazon Elastic Compute Cloud (EC2)</p>
    <p>use SRIOV as the underlying technology in EC2 HPC services</p>
    <p>Data Centers Oracle Exalogic appliance uses SRIOV technology to share the internal network</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Where is SRIOV Used?</p>
    <p>HPC with SRIOV it is possible to virtualize HPC setups.  Cloud Service Providers such as Amazon Elastic Compute Cloud (EC2)</p>
    <p>use SRIOV as the underlying technology in EC2 HPC services</p>
    <p>Data Centers Oracle Exalogic appliance uses SRIOV technology to share the internal network</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Ethernet Flow Control</p>
    <p>Traditional Ethernet is lossy with no guarantee of delivery of Ethernet frames</p>
    <p>Assumes that reliability provided by upper-level protocols (e.g. TCP) or applications  Most data frame drops happen when the receivers buffers are full and has no</p>
    <p>memory available to store incoming data frames</p>
    <p>Ethernet Flow Control (FC) proposed to create a lossless data link medium</p>
    <p>Priority Flow Control (PFC) extends FC for data centers, part of Data Center Bridging (DCB) or Converged Enhanced Ethernet (CEE)</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Ethernet Flow Control</p>
    <p>Traditional Ethernet is lossy with no guarantee of delivery of Ethernet frames</p>
    <p>Assumes that reliability provided by upper-level protocols (e.g. TCP) or applications  Most data frame drops happen when the receivers buffers are full and has no</p>
    <p>memory available to store incoming data frames</p>
    <p>Ethernet Flow Control (FC) proposed to create a lossless data link medium</p>
    <p>Priority Flow Control (PFC) extends FC for data centers, part of Data Center Bridging (DCB) or Converged Enhanced Ethernet (CEE)</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Ethernet Flow Control</p>
    <p>Traditional Ethernet is lossy with no guarantee of delivery of Ethernet frames</p>
    <p>Assumes that reliability provided by upper-level protocols (e.g. TCP) or applications  Most data frame drops happen when the receivers buffers are full and has no</p>
    <p>memory available to store incoming data frames</p>
    <p>Ethernet Flow Control (FC) proposed to create a lossless data link medium</p>
    <p>Priority Flow Control (PFC) extends FC for data centers, part of Data Center Bridging (DCB) or Converged Enhanced Ethernet (CEE)</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Ethernet Flow Control</p>
    <p>Traditional Ethernet is lossy with no guarantee of delivery of Ethernet frames</p>
    <p>Assumes that reliability provided by upper-level protocols (e.g. TCP) or applications  Most data frame drops happen when the receivers buffers are full and has no</p>
    <p>memory available to store incoming data frames</p>
    <p>Ethernet Flow Control (FC) proposed to create a lossless data link medium</p>
    <p>Priority Flow Control (PFC) extends FC for data centers, part of Data Center Bridging (DCB) or Converged Enhanced Ethernet (CEE)</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Ethernet Flow Control 1 The sender (e.g. Ethernet switch) transmits data faster than the receiver can</p>
    <p>process 2 The receiver (e.g. hosts Ethernet NIC) runs out of space 3 The receiver sends the sender a MAC control frame with a pause request 4 The sender stops transmitting data for requested period of time</p>
    <p>receiver buffer</p>
    <p>PAUSE</p>
    <p>DATA</p>
    <p>sender receiver</p>
    <p>sender buffer</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Ethernet Flow Control 1 The sender (e.g. Ethernet switch) transmits data faster than the receiver can</p>
    <p>process 2 The receiver (e.g. hosts Ethernet NIC) runs out of space 3 The receiver sends the sender a MAC control frame with a pause request 4 The sender stops transmitting data for requested period of time</p>
    <p>receiver buffer</p>
    <p>PAUSE</p>
    <p>DATA</p>
    <p>sender receiver</p>
    <p>sender buffer</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Ethernet Flow Control 1 The sender (e.g. Ethernet switch) transmits data faster than the receiver can</p>
    <p>process 2 The receiver (e.g. hosts Ethernet NIC) runs out of space 3 The receiver sends the sender a MAC control frame with a pause request 4 The sender stops transmitting data for requested period of time</p>
    <p>receiver buffer</p>
    <p>PAUSE</p>
    <p>DATA</p>
    <p>sender receiver</p>
    <p>sender buffer</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Ethernet Flow Control 1 The sender (e.g. Ethernet switch) transmits data faster than the receiver can</p>
    <p>process 2 The receiver (e.g. hosts Ethernet NIC) runs out of space 3 The receiver sends the sender a MAC control frame with a pause request 4 The sender stops transmitting data for requested period of time</p>
    <p>receiver buffer</p>
    <p>PAUSE</p>
    <p>DATA</p>
    <p>sender receiver</p>
    <p>sender buffer</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Ethernet Flow Control 1 The sender (e.g. Ethernet switch) transmits data faster than the receiver can</p>
    <p>process 2 The receiver (e.g. hosts Ethernet NIC) runs out of space 3 The receiver sends the sender a MAC control frame with a pause request 4 The sender stops transmitting data for requested period of time</p>
    <p>receiver buffer</p>
    <p>PAUSE</p>
    <p>DATA</p>
    <p>sender receiver</p>
    <p>sender buffer</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Ethernet Flow Control</p>
    <p>When receiver runs out of the buffers, what is the required pause frame rate to stop the transmission completely?</p>
    <p>link speed</p>
    <p>[Gbps]</p>
    <p>single frame pause time</p>
    <p>[ms]</p>
    <p>frame rate required to stop transmission</p>
    <p>[frames/second]</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Ethernet Flow Control</p>
    <p>When receiver runs out of the buffers, what is the required pause frame rate to stop the transmission completely?</p>
    <p>link speed</p>
    <p>[Gbps]</p>
    <p>single frame pause time</p>
    <p>[ms]</p>
    <p>frame rate required to stop transmission</p>
    <p>[frames/second]</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Ethernet Flow Control</p>
    <p>When receiver runs out of the buffers, what is the required pause frame rate to stop the transmission completely?</p>
    <p>link speed</p>
    <p>[Gbps]</p>
    <p>single frame pause time</p>
    <p>[ms]</p>
    <p>frame rate required to stop transmission</p>
    <p>[frames/second]</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Attacking VMs via Flow Control</p>
    <p>Flow Control works on link-level  Link is shared between VMs; all VMs with direct access to the VFs of the</p>
    <p>same PF share the same physical link to the edge switch</p>
    <p>Each FC Pause Frame halts traffic on the entire link  All VFs associated with this PF are affected</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>The Attack</p>
    <p>The malicious VM sends a pause frame  All traffic on the shared link pauses  And then continues. . .  Until the malicious VM sends the next pause frame</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>The Attack</p>
    <p>The malicious VM sends a pause frame  All traffic on the shared link pauses  And then continues. . .  Until the malicious VM sends the next pause frame</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>The Attack</p>
    <p>The malicious VM sends a pause frame  All traffic on the shared link pauses  And then continues. . .  Until the malicious VM sends the next pause frame</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>The Attack</p>
    <p>The malicious VM sends a pause frame  All traffic on the shared link pauses  And then continues. . .  Until the malicious VM sends the next pause frame</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>The Attack</p>
    <p>The malicious VM sends a pause frame  All traffic on the shared link pauses  And then continues. . .  Until the malicious VM sends the next pause frame</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Attack EvaluationSetup</p>
    <p>Our testbed consists of two servers: one acting as the client and the other as the host with SRIOV capable NIC</p>
    <p>VF1 assigned to VM1 and VF2 to VM2</p>
    <p>traffic generated between VM1 and the client</p>
    <p>VM2 attacks VM1 by sending PAUSE frames to the switch</p>
    <p>VF1 VF2</p>
    <p>host</p>
    <p>client PF</p>
    <p>SR-IOV</p>
    <p>enabled NIC</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Pause Frames Attack Results using SRIOV 10GbE NIC</p>
    <p>On the left, victim throughput as a function of pause frames rate  On the right, victim latency as a function of pause frames rate</p>
    <p>v ic</p>
    <p>ti m</p>
    <p>t h</p>
    <p>ro u</p>
    <p>g h</p>
    <p>p u</p>
    <p>t [</p>
    <p>G b</p>
    <p>/s ]</p>
    <p>pause frames attacker sends each second [frames/second]</p>
    <p>v ic</p>
    <p>ti m</p>
    <p>l a</p>
    <p>te n</p>
    <p>c y [</p>
    <p>s ]</p>
    <p>pause frames attacker sends each second [frames/second]</p>
    <p>message size 64B</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>What do we propose?</p>
    <p>Filter outbound traffic transmitted by a VF  All valid pause frames are generated by the NICs hardware and have the PFs</p>
    <p>source MAC address</p>
    <p>All malicious pause frames are sent with source address of a VF  In ideal world we would modify NICs hardware/firmware to filter out malicious</p>
    <p>pause frames</p>
    <p>But . . . in reality NIC uses proprietary closed firmware and hardware   So, we built a Virtualization-Aware Network Flow Controller (VANFC)a</p>
    <p>software-based prototype of an SRIOV Ethernet NIC with pause frame filtering.</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>What do we propose?</p>
    <p>Filter outbound traffic transmitted by a VF  All valid pause frames are generated by the NICs hardware and have the PFs</p>
    <p>source MAC address</p>
    <p>All malicious pause frames are sent with source address of a VF  In ideal world we would modify NICs hardware/firmware to filter out malicious</p>
    <p>pause frames</p>
    <p>But . . . in reality NIC uses proprietary closed firmware and hardware   So, we built a Virtualization-Aware Network Flow Controller (VANFC)a</p>
    <p>software-based prototype of an SRIOV Ethernet NIC with pause frame filtering.</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>What do we propose?</p>
    <p>Filter outbound traffic transmitted by a VF  All valid pause frames are generated by the NICs hardware and have the PFs</p>
    <p>source MAC address</p>
    <p>All malicious pause frames are sent with source address of a VF  In ideal world we would modify NICs hardware/firmware to filter out malicious</p>
    <p>pause frames</p>
    <p>But . . . in reality NIC uses proprietary closed firmware and hardware   So, we built a Virtualization-Aware Network Flow Controller (VANFC)a</p>
    <p>software-based prototype of an SRIOV Ethernet NIC with pause frame filtering.</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>What do we propose?</p>
    <p>Filter outbound traffic transmitted by a VF  All valid pause frames are generated by the NICs hardware and have the PFs</p>
    <p>source MAC address</p>
    <p>All malicious pause frames are sent with source address of a VF  In ideal world we would modify NICs hardware/firmware to filter out malicious</p>
    <p>pause frames</p>
    <p>But . . . in reality NIC uses proprietary closed firmware and hardware   So, we built a Virtualization-Aware Network Flow Controller (VANFC)a</p>
    <p>software-based prototype of an SRIOV Ethernet NIC with pause frame filtering.</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>What do we propose?</p>
    <p>Filter outbound traffic transmitted by a VF  All valid pause frames are generated by the NICs hardware and have the PFs</p>
    <p>source MAC address</p>
    <p>All malicious pause frames are sent with source address of a VF  In ideal world we would modify NICs hardware/firmware to filter out malicious</p>
    <p>pause frames</p>
    <p>But . . . in reality NIC uses proprietary closed firmware and hardware   So, we built a Virtualization-Aware Network Flow Controller (VANFC)a</p>
    <p>software-based prototype of an SRIOV Ethernet NIC with pause frame filtering.</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>The VANFC design</p>
    <p>Internal switch replicates Ethernet switch</p>
    <p>We add a software based extension to the NIC internal switch</p>
    <p>Switch extension filters malicious pause frames with source address of a VFs Schema of VANFC</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>The VANFC design</p>
    <p>Internal switch replicates Ethernet switch</p>
    <p>We add a software based extension to the NIC internal switch</p>
    <p>Switch extension filters malicious pause frames with source address of a VFs Schema of VANFC</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>The VANFC design</p>
    <p>Internal switch replicates Ethernet switch</p>
    <p>We add a software based extension to the NIC internal switch</p>
    <p>Switch extension filters malicious pause frames with source address of a VFs Schema of VANFC</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>The VANFC design</p>
    <p>Internal switch replicates Ethernet switch</p>
    <p>We add a software based extension to the NIC internal switch</p>
    <p>Switch extension filters malicious pause frames with source address of a VFs Schema of VANFC</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>VANFC performance evaluation results in 10GbE setup  We attack with 150 pause frames per second, to reduce perfromance to 50%  VANFC completely blocks the attack and introduces no performance</p>
    <p>penalty</p>
    <p>iperf stream [Mb/s]</p>
    <p>apache 1MB</p>
    <p>[req/s]</p>
    <p>netperf RR 64B</p>
    <p>[packets/s]</p>
    <p>netperf RR 1024B</p>
    <p>[packets/s]</p>
    <p>memcached [req/s]</p>
    <p>apache 1KB</p>
    <p>[req/s]</p>
    <p>n o rm</p>
    <p>a li z e d t h ro</p>
    <p>u g h p u t</p>
    <p>[r e la</p>
    <p>ti v e t o b</p>
    <p>a s e li n e s</p>
    <p>y s te</p>
    <p>m ]</p>
    <p>baseline system baseline system under attack protected system</p>
    <p>protected system under attack</p>
    <p>latency oriented throughput oriented</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Current Situation in the Industry</p>
    <p>Mellanox  updated firmware for ConnectX-3 NICs provided for testing and planned to be</p>
    <p>released in August  fix for ConnectX-4 is in progress</p>
    <p>Qlogic (Broadcom chip)  updated driver/firmware provided for testing  fix is based on the proposed solution of filtering malicious pause frames sent from</p>
    <p>VFs  public release is in progress</p>
    <p>Other major vendors were notified, no solution provided yet</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Current Situation in the Industry</p>
    <p>Mellanox  updated firmware for ConnectX-3 NICs provided for testing and planned to be</p>
    <p>released in August  fix for ConnectX-4 is in progress</p>
    <p>Qlogic (Broadcom chip)  updated driver/firmware provided for testing  fix is based on the proposed solution of filtering malicious pause frames sent from</p>
    <p>VFs  public release is in progress</p>
    <p>Other major vendors were notified, no solution provided yet</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Current Situation in the Industry</p>
    <p>Mellanox  updated firmware for ConnectX-3 NICs provided for testing and planned to be</p>
    <p>released in August  fix for ConnectX-4 is in progress</p>
    <p>Qlogic (Broadcom chip)  updated driver/firmware provided for testing  fix is based on the proposed solution of filtering malicious pause frames sent from</p>
    <p>VFs  public release is in progress</p>
    <p>Other major vendors were notified, no solution provided yet</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Current Situation in the Industry</p>
    <p>Mellanox  updated firmware for ConnectX-3 NICs provided for testing and planned to be</p>
    <p>released in August  fix for ConnectX-4 is in progress</p>
    <p>Qlogic (Broadcom chip)  updated driver/firmware provided for testing  fix is based on the proposed solution of filtering malicious pause frames sent from</p>
    <p>VFs  public release is in progress</p>
    <p>Other major vendors were notified, no solution provided yet</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Removing host from the I/O path requires adding filtering functionality to the hardware</p>
    <p>Current implementation of Ethernet SRIOV devices is incompatible with Ethernet flow control</p>
    <p>We show the new attack that exploits vulnerability in Ethernet SRIOV devices  Our solution, the VANFC, prevents the attack and imposes no overhead  Future work: extend our findings to SRIOV InfiniBand, Fiber Channel, NVMe</p>
    <p>SSD and GPGU</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
  <div class="page">
    <p>Thank You</p>
    <p>Questions?</p>
    <p>Securing Self-Virtualizing Ethernet Devices Igor Smolyar, Muli Ben-Yehuda, Dan Tsafrir</p>
  </div>
</Presentation>
