<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>FaRM: Fast Remote Memory Aleksandar Dragojevi, Dushyanth Narayanan, Orion Hodson, Miguel Castro</p>
  </div>
  <div class="page">
    <p>Hardware trends</p>
    <p>Main memory is cheap  100 GB  1 TB per server</p>
    <p>10  100 TBs in a small cluster</p>
    <p>New data centre networks  40 Gbps throughput (100 this year)</p>
    <p>1-3 s latency</p>
    <p>RDMA primitives</p>
  </div>
  <div class="page">
    <p>Remote direct memory access</p>
    <p>Read / write remote memory  NIC performs DMA requests</p>
    <p>FaRM uses RDMA extensively  Reads to directly read data</p>
    <p>Writes into remote buffers for messaging</p>
    <p>Great performance  Bypasses the kernel</p>
    <p>Bypasses the remote CPU</p>
    <p>RAM CPU NIC</p>
    <p>Machine A</p>
    <p>RAM CPU NIC</p>
    <p>Machine B</p>
    <p>Network</p>
    <p>DMA</p>
    <p>DMA</p>
  </div>
  <div class="page">
    <p>R e q</p>
    <p>u e s ts</p>
    <p>/</p>
    <p>s /</p>
    <p>s e rv</p>
    <p>e r</p>
    <p>Transfer bytes (log)</p>
    <p>RDMA RDMA msg TCP</p>
  </div>
  <div class="page">
    <p>A v e ra</p>
    <p>g e l a te</p>
    <p>n c y</p>
    <p>s (</p>
    <p>lo g</p>
    <p>)</p>
    <p>Transfer bytes (log)</p>
    <p>RDMA RDMA msg TCP</p>
  </div>
  <div class="page">
    <p>Applications</p>
    <p>Data centre applications  Irregular access patterns</p>
    <p>Latency sensitive</p>
    <p>Data serving  Key-value store</p>
    <p>Graph store</p>
    <p>Enabling new applications</p>
  </div>
  <div class="page">
    <p>Paper</p>
    <p>RDMA communication</p>
    <p>Programming model</p>
    <p>Address space management</p>
    <p>Transactions and lock-free operations</p>
    <p>Hashtable</p>
  </div>
  <div class="page">
    <p>How to program a modern cluster?</p>
    <p>We have:  TBs of DRAM</p>
    <p>100s of CPU cores</p>
    <p>RDMA network</p>
    <p>Desirable:  Keep data in memory</p>
    <p>Access data using RDMA</p>
    <p>Collocate data and computation</p>
  </div>
  <div class="page">
    <p>Traditional model</p>
  </div>
  <div class="page">
    <p>Symmetric model</p>
  </div>
  <div class="page">
    <p>Shared address space</p>
    <p>O1 O2 O3 O4</p>
    <p>O5 O6</p>
    <p>O7 O8</p>
    <p>O9</p>
  </div>
  <div class="page">
    <p>Transactions: simplify programming</p>
    <p>O1</p>
    <p>O2</p>
    <p>O3</p>
    <p>O4</p>
    <p>O5 O6</p>
    <p>O7 O8</p>
    <p>O9</p>
    <p>Shared address space</p>
    <p>O10WriteWrite</p>
    <p>Alloc</p>
    <p>Free</p>
  </div>
  <div class="page">
    <p>Optimizations: lock-free reads</p>
    <p>O1</p>
    <p>O2</p>
    <p>O3</p>
    <p>O4</p>
    <p>O5 O6</p>
    <p>O7 O8</p>
    <p>O9</p>
    <p>Shared address space</p>
  </div>
  <div class="page">
    <p>Optimizations: locality awareness</p>
  </div>
  <div class="page">
    <p>Optimizations: locality awareness</p>
    <p>RPC</p>
    <p>Local</p>
  </div>
  <div class="page">
    <p>Paper</p>
    <p>RDMA communication</p>
    <p>Programming model</p>
    <p>Address space management</p>
    <p>Transactions and lock-free operations</p>
    <p>Hashtable</p>
  </div>
  <div class="page">
    <p>Transactions</p>
    <p>S1</p>
    <p>S2</p>
    <p>S3</p>
    <p>RDMA</p>
    <p>Execution Commit</p>
    <p>Lock Validate</p>
    <p>RDMA RDMA</p>
    <p>Update and unlock</p>
    <p>RDMA</p>
    <p>Buffer writes</p>
  </div>
  <div class="page">
    <p>Traditional lock-free reads</p>
    <p>VW</p>
    <p>Update in 3 steps:</p>
    <p>Header</p>
    <p>version</p>
  </div>
  <div class="page">
    <p>Traditional lock-free reads</p>
    <p>VW</p>
    <p>Read in 3 steps:</p>
    <p>Consistent if versions in steps</p>
    <p>Header</p>
    <p>version</p>
  </div>
  <div class="page">
    <p>Traditional lock-free reads</p>
    <p>VW</p>
    <p>Problem: read requires three network</p>
    <p>accesses, so it is not well suited to RDMA</p>
    <p>Header</p>
    <p>version</p>
    <p>to avoid</p>
    <p>overflow</p>
  </div>
  <div class="page">
    <p>FaRM lock-free reads</p>
    <p>$ $ $V V V</p>
    <p>W W W Header</p>
    <p>version</p>
    <p>Use cache-line</p>
    <p>versions</p>
  </div>
  <div class="page">
    <p>FaRM lock-free reads</p>
    <p>$ $ $V V VW W W</p>
    <p>One RDMA read of the whole object,</p>
    <p>check that all versions are equal</p>
    <p>Header</p>
    <p>version</p>
    <p>Cache-line</p>
    <p>versions</p>
  </div>
  <div class="page">
    <p>FaRM lock-free reads</p>
    <p>$ $ $V V VW W W Space efficiency:</p>
    <p>versions</p>
    <p>tupdate_min= 40 ns</p>
    <p>tread_max = 40 ns * 2 16 * (1  ) = 2 ms</p>
    <p>To ensure cache line versions dont overflow,</p>
    <p>measure read time and discard it too long</p>
  </div>
  <div class="page">
    <p>Paper</p>
    <p>RDMA communication</p>
    <p>Programming model</p>
    <p>Address space management</p>
    <p>Transactions and lock-free operations</p>
    <p>Hashtable</p>
  </div>
  <div class="page">
    <p>FaRM hashtable</p>
    <p>Important building block  FaRM makes it possible to easily</p>
    <p>try out different designs</p>
    <p>Optimized for lookups  One RDMA in the common case</p>
    <p>Good space utilization</p>
  </div>
  <div class="page">
    <p>L o</p>
    <p>o k u</p>
    <p>p s /</p>
    <p>s</p>
    <p>Servers</p>
    <p>FaRM TCP</p>
  </div>
  <div class="page">
    <p>L a te</p>
    <p>n c y</p>
    <p>s (</p>
    <p>lo g</p>
    <p>)</p>
    <p>Servers</p>
    <p>FaRM TCP</p>
  </div>
  <div class="page">
    <p>TAO [Bronson 13, Armstrong 13]</p>
    <p>(10x improvement)</p>
    <p>(40  50x improvement)</p>
    <p>Facebooks in-memory graph store</p>
    <p>Workload  Read-dominated (99.8%)</p>
    <p>10 operation types</p>
    <p>FaRM implementation  Nodes and edges are FaRM objects</p>
    <p>Lock-free reads for lookups</p>
    <p>Transactions for updates</p>
  </div>
  <div class="page">
    <p>FaRM</p>
    <p>Platform for distributed computing  Data is in memory</p>
    <p>RDMA</p>
    <p>Shared memory abstraction  Transactions</p>
    <p>Lock-free reads</p>
    <p>Order-of-magnitude performance improvements  Enables new applications</p>
  </div>
</Presentation>
