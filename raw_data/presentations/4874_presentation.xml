<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Efficient Query Filtering Efficient Query Filtering for Streaming Time Seriesfor Streaming Time Series</p>
    <p>Li Wei Eamonn Keogh Helga Van Herle Agenor Mafra-Neto</p>
    <p>Computer Science &amp; Engineering Dept. University of California  Riverside</p>
    <p>Riverside, CA 92521 {wli, eamonn}@cs.ucr.edu</p>
    <p>David Geffen School of Medicine University of California  Los Angeles</p>
    <p>Los Angeles, CA 90095 hvanherle@mednet.ucla.edu</p>
    <p>ISCA Technologies Riverside, CA 92517 isca@iscatech.com</p>
    <p>ICDM '05</p>
  </div>
  <div class="page">
    <p>Outline of TalkOutline of Talk  Introduction to time seriesIntroduction to time series</p>
    <p>Time series filteringTime series filtering</p>
    <p>Wedge-based approachWedge-based approach</p>
    <p>Experimental resultsExperimental results</p>
    <p>ConclusionsConclusions</p>
  </div>
  <div class="page">
    <p>What are Time Series?What are Time Series?</p>
    <p>Time series are collections of observations made sequentially in time.</p>
  </div>
  <div class="page">
    <p>Time Series are EverywhereTime Series are Everywhere ECG Heartbeat Image</p>
    <p>Stock Video</p>
  </div>
  <div class="page">
    <p>A B C</p>
    <p>A B C</p>
    <p>ClusteringClustering ClassificationClassification</p>
    <p>Query by ContentRule Discovery</p>
    <p>s = 0.5 c = 0.3</p>
    <p>Motif DiscoveryMotif Discovery</p>
    <p>Anomaly DetectionAnomaly Detection VisualizationVisualization</p>
    <p>Time Series Data Mining TasksTime Series Data Mining Tasks</p>
  </div>
  <div class="page">
    <p>Time Series FilteringTime Series Filtering</p>
    <p>Given a Time Series T, a set of Candidates C and a distance threshold r, find all subsequences in T that are within r distance to any of the candidates in C.</p>
    <p>Matches Q11</p>
    <p>Time Series</p>
  </div>
  <div class="page">
    <p>Matches Q11</p>
    <p>Database</p>
    <p>Database</p>
    <p>Query (template)</p>
    <p>Database</p>
    <p>Best match</p>
    <p>Filtering vs. QueryingFiltering vs. Querying</p>
  </div>
  <div class="page">
    <p>Euclidean Distance MetricEuclidean Distance Metric Given two time series Q = q1qn and C = c1cn ,</p>
    <p>the Euclidean distance between them is defined as:</p>
    <p>n</p>
    <p>i ii cqCQD</p>
    <p>Q</p>
    <p>C</p>
  </div>
  <div class="page">
    <p>Early AbandonEarly Abandon During the computation, if current sum of the squared differences between each pair of corresponding data points exceeds r 2, we can safely stop the calculation.</p>
    <p>calculation abandoned at this point</p>
    <p>Q</p>
    <p>C</p>
  </div>
  <div class="page">
    <p>Classic ApproachClassic Approach</p>
    <p>Individually compare each candidate sequence to the query using the early abandoning algorithm.</p>
    <p>Time Series</p>
  </div>
  <div class="page">
    <p>WedgeWedge</p>
    <p>C2</p>
    <p>C1</p>
    <p>U</p>
    <p>L</p>
    <p>U</p>
    <p>L</p>
    <p>Q</p>
    <p>W</p>
    <p>W</p>
    <p>Having candidate sequences C1, .. , Ck , we can form two new sequences U and L : Ui = max(C1i , .. , Cki ) Li = min(C1i , .. , Cki )</p>
    <p>They form the smallest possible bounding envelope that encloses sequences C1, .. ,Ck .</p>
    <p>We call the combination of U and L a wedge, and denote a wedge as W. W = {U, L}</p>
    <p>A lower bounding measure between an arbitrary query Q and the entire set of candidate sequences contained in a wedge W:</p>
    <p>n</p>
    <p>i iiii</p>
    <p>iiii</p>
    <p>otherwise</p>
    <p>LqifLq</p>
    <p>UqifUq</p>
    <p>WQKeoghLB 1</p>
    <p>)(</p>
    <p>)(</p>
    <p>),(_</p>
  </div>
  <div class="page">
    <p>Generalized WedgeGeneralized Wedge  Use Use WW(1,2)(1,2) to denote that a wedge is built to denote that a wedge is built</p>
    <p>from sequences from sequences CC11 and and CC2 2 ..</p>
    <p>Wedges can be hierarchally nested. For Wedges can be hierarchally nested. For example, example, WW((1,2),3)((1,2),3) consists of consists of WW(1,2)(1,2) and and CC3 3 ..</p>
    <p>C1 (or W1 ) C2 (or W2 ) C3 (or W3 )</p>
    <p>W(1, 2)</p>
    <p>W((1, 2), 3)</p>
  </div>
  <div class="page">
    <p>Wedge Based ApproachWedge Based Approach</p>
    <p>Compare the query to the wedge using LB_Keogh</p>
    <p>If the LB_Keogh function early abandons, we are done</p>
    <p>Otherwise individually compare each candidate sequences to the query using the early abandoning algorithm</p>
    <p>Time Series</p>
  </div>
  <div class="page">
    <p>Examples of Wedge MergingExamples of Wedge Merging</p>
    <p>W(1,2)</p>
    <p>Q</p>
    <p>W((1,2),3)</p>
    <p>Q</p>
    <p>C1 (or W1 ) C2 (or W2 )</p>
    <p>W(1, 2)</p>
    <p>C1 (or W1 ) C2 (or W2 ) C3 (or W3 )</p>
    <p>W(1, 2)</p>
    <p>W((1, 2), 3)</p>
  </div>
  <div class="page">
    <p>Hierarchal Clustering Hierarchal Clustering</p>
    <p>C1 (or W1)</p>
    <p>C4 (or W4)</p>
    <p>C2 (or W2)</p>
    <p>C5 (or W5)</p>
    <p>C3 (or W3)</p>
    <p>W3</p>
    <p>W2</p>
    <p>W5</p>
    <p>W1</p>
    <p>W4</p>
    <p>W3</p>
    <p>W(2,5)</p>
    <p>W1</p>
    <p>W4</p>
    <p>W3</p>
    <p>W(2,5)</p>
    <p>W(1,4)</p>
    <p>W((2,5),3)</p>
    <p>W(1,4)</p>
    <p>W(((2,5),3), (1,4))</p>
    <p>K = 5 K = 4 K = 3 K = 2 K = 1</p>
    <p>Which wedge set to choose ?</p>
  </div>
  <div class="page">
    <p>Which Wedge Set to Choose ?Which Wedge Set to Choose ?</p>
    <p>Test all Test all kk wedge sets on a representative wedge sets on a representative sample of datasample of data</p>
    <p>Choose the wedge set which performs the Choose the wedge set which performs the bestbest</p>
  </div>
  <div class="page">
    <p>Upper Bound on Wedge Based ApproachUpper Bound on Wedge Based Approach</p>
    <p>Wedge based approach seems to be efficient when Wedge based approach seems to be efficient when comparing a set of time series to a large batch dataset.comparing a set of time series to a large batch dataset.</p>
    <p>But, what about streaming time series ?But, what about streaming time series ?  Streaming algorithms are limited by their Streaming algorithms are limited by their worstworst case. case.  Being efficient on Being efficient on averageaverage does not help. does not help.</p>
    <p>Worst caseWorst case C1 (or W1 ) C2 (or W2 ) C3 (or W3 )</p>
    <p>W(1, 2)</p>
    <p>W((1, 2), 3)</p>
    <p>Subsequence</p>
  </div>
  <div class="page">
    <p>W3</p>
    <p>W2</p>
    <p>W5</p>
    <p>W1</p>
    <p>W4</p>
    <p>W3</p>
    <p>W(2,5)</p>
    <p>W1</p>
    <p>W4</p>
    <p>W3</p>
    <p>W(2,5)</p>
    <p>W(1,4)</p>
    <p>W((2,5),3)</p>
    <p>W(1,4)</p>
    <p>W(((2,5),3), (1,4))</p>
    <p>K = 5 K = 4 K = 3 K = 2 K = 1</p>
    <p>If dist(W((2,5),3), W(1,4)) &gt;= 2 r</p>
    <p>failscannot fail on both wedges</p>
    <p>Subsequence</p>
    <p>&gt;= 2r</p>
    <p>&lt; r</p>
    <p>?</p>
    <p>Triangular Inequality</p>
    <p>W((2,5),3)</p>
    <p>W(1,4)</p>
  </div>
  <div class="page">
    <p>Experimental SetupExperimental Setup  DatasetsDatasets</p>
    <p>ECG DatasetECG Dataset</p>
    <p>Stock DatasetStock Dataset</p>
    <p>Audio DatasetAudio Dataset</p>
    <p>We measure the number of computational steps used by the following We measure the number of computational steps used by the following methods:methods:  Brute forceBrute force</p>
    <p>Brute force with early abandoning (classic)Brute force with early abandoning (classic)</p>
    <p>Our approach (Atomic Wedgie)Our approach (Atomic Wedgie)</p>
    <p>Our approach with random wedge set (AWR)Our approach with random wedge set (AWR)</p>
    <p>How to choose How to choose rr ? ?  A logical value for A logical value for rr would be the average distance from a pattern to its nearest would be the average distance from a pattern to its nearest</p>
    <p>neighborneighbor</p>
  </div>
  <div class="page">
    <p>ECG DatasetECG Dataset  Batch time seriesBatch time series</p>
    <p>650,000 data points (half an 650,000 data points (half an hours ECG signals)hours ECG signals)</p>
    <p>Candidate setCandidate set  200 time series of length 40200 time series of length 40</p>
    <p>4 types of patterns4 types of patterns  left bundle branch block beatleft bundle branch block beat</p>
    <p>right bundle branch block beatright bundle branch block beat</p>
    <p>atrial premature beatatrial premature beat</p>
    <p>ventricular escape beatventricular escape beat</p>
    <p>rr = 0.5 = 0.5</p>
    <p>Upper Bound: 2,120 Upper Bound: 2,120 (8,000 for (8,000 for brute force)brute force)</p>
    <p>AlgorithmAlgorithm Number of StepsNumber of Steps</p>
    <p>brute forcebrute force 5,199,688,000 5,199,688,000</p>
    <p>classicclassic 210,190,006210,190,006</p>
    <p>Atomic WedgieAtomic Wedgie 8,853,0088,853,008</p>
    <p>AWRAWR 29,480,26429,480,264</p>
    <p>Algorithms</p>
    <p>N um</p>
    <p>b er</p>
    <p>o f</p>
    <p>S te</p>
    <p>ps</p>
  </div>
  <div class="page">
    <p>Stock DatasetStock Dataset  Batch time seriesBatch time series</p>
    <p>2,119,415 data points2,119,415 data points</p>
    <p>Candidate setCandidate set  337 time series with length 128337 time series with length 128</p>
    <p>3 types of patterns3 types of patterns  head and shouldershead and shoulders</p>
    <p>reverse head and shouldersreverse head and shoulders</p>
    <p>cup and handle cup and handle</p>
    <p>rr = 4.3 = 4.3</p>
    <p>Upper Bound: 18,048 Upper Bound: 18,048 (43,136 (43,136 for brute force)for brute force)</p>
    <p>AlgorithmAlgorithm Number of StepsNumber of Steps</p>
    <p>brute forcebrute force 91,417,607,168 91,417,607,168</p>
    <p>classicclassic 13,028,000,000 13,028,000,000</p>
    <p>Atomic WedgieAtomic Wedgie 3,204,100,000 3,204,100,000</p>
    <p>AWRAWR 10,064,000,000 10,064,000,000</p>
    <p>Algorithms</p>
    <p>N um</p>
    <p>b er</p>
    <p>o f</p>
    <p>S te</p>
    <p>ps</p>
  </div>
  <div class="page">
    <p>Audio DatasetAudio Dataset  Batch time seriesBatch time series</p>
    <p>37,583,512 data points (one hours 37,583,512 data points (one hours sound)sound)</p>
    <p>Candidate setCandidate set  68 time series with length 5168 time series with length 51  3 species of harmful mosquitoes3 species of harmful mosquitoes</p>
    <p>Culex quinquefasciatusCulex quinquefasciatus  Aedes aegyptiAedes aegypti  Culiseta sppCuliseta spp</p>
    <p>Sliding window: 11,025 (1 second)Sliding window: 11,025 (1 second)  Step: 5,512 (0.5 second)Step: 5,512 (0.5 second)  rr = 2 = 2  Upper Bound: 2,929 Upper Bound: 2,929 (6,868 for brute (6,868 for brute</p>
    <p>force)force)</p>
    <p>AlgorithmAlgorithm Number of StepsNumber of Steps</p>
    <p>brute forcebrute force 57,485,160 57,485,160</p>
    <p>classicclassic 1,844,997 1,844,997</p>
    <p>Atomic WedgieAtomic Wedgie 1,144,778 1,144,778</p>
    <p>AWRAWR 2,655,816 2,655,816</p>
    <p>Algorithms</p>
    <p>N um</p>
    <p>be r</p>
    <p>o f</p>
    <p>S te</p>
    <p>ps</p>
  </div>
  <div class="page">
    <p>ConclusionsConclusions  We introduce the problem of time series We introduce the problem of time series</p>
    <p>filtering.filtering.</p>
    <p>Combining similar sequences into a wedge is a Combining similar sequences into a wedge is a quite promising idea.quite promising idea.</p>
    <p>We have provided the upper bound of the cost We have provided the upper bound of the cost of the algorithm to compute the fastest arrival of the algorithm to compute the fastest arrival rate we can guarantee to handle.rate we can guarantee to handle.</p>
  </div>
  <div class="page">
    <p>Questions?Questions?</p>
    <p>All datasets used in this talk can be found at</p>
    <p>http://www.cs.ucr.edu/~wli/ICDM05/</p>
  </div>
</Presentation>
