<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Memory Efficient Sanitization of a Deduplicated Storage System</p>
    <p>Fabiano C. Botelho Philip Shilane</p>
    <p>Nitin Garg Windsor Hsu</p>
    <p>FAST 2013, San Jose, February 12-15</p>
  </div>
  <div class="page">
    <p>Whats Sanitization All About?</p>
    <p>Classified storage</p>
    <p>Network</p>
  </div>
  <div class="page">
    <p>Whats Sanitization All About?</p>
    <p>Classified storage</p>
    <p>Unclassified storage</p>
    <p>Network</p>
  </div>
  <div class="page">
    <p>Whats Sanitization All About?</p>
    <p>Classified storage</p>
    <p>Unclassified storage</p>
    <p>Network</p>
    <p>Classified Message Incident</p>
  </div>
  <div class="page">
    <p>How Do We Define Sanitization?</p>
    <p>A process to restore the storage system to a state as if the classified</p>
    <p>message incident had never occurred</p>
  </div>
  <div class="page">
    <p>Threat Models</p>
    <p>unallocated blocks</p>
    <p>hardware  Even after overwrites, the disk may retain magnetic</p>
    <p>values indicating a previous state</p>
  </div>
  <div class="page">
    <p>NIST, DoD Guidelines For Sanitization</p>
    <p>protect against casual and keyboard attacks.</p>
    <p>protect against laboratory attacks</p>
  </div>
  <div class="page">
    <p>Why Not Crypto Sanitization 1. Crypto sanitization:</p>
    <p>Encrypt each file with a different key and throw away the key of the affected files.</p>
    <p>encryption is not acceptable</p>
  </div>
  <div class="page">
    <p>Sanitization Of A System vs A Device 1. Device:</p>
    <p>either overwrite each sector or degauss it.</p>
    <p>within the storage system, overwriting the values one or more times, and erasing the meta data as well as other locations that have become unreferenced</p>
    <p>writes  No in-place erasure of sub-units.  Copy forward live data and then erase an earlier region</p>
  </div>
  <div class="page">
    <p>Bulk Sanitization 1. Sanitizing individual files is challenging</p>
  </div>
  <div class="page">
    <p>Sanitization Requirements</p>
    <p>sanitization runs.</p>
  </div>
  <div class="page">
    <p>Deduplicated Storage</p>
    <p>Afp Bfp Cfp Dfp Efp File 0</p>
    <p>Afp Bfp Cfp Yfp Zfp File m</p>
    <p>Files represented with fingerprints</p>
    <p>A B C D Container 0</p>
    <p>E    Container 1</p>
    <p>Y Z Container n</p>
    <p>Containers holding data chunks</p>
    <p>Afp 0 Bfp 0 Cfp 0 Dfp 0 Efp 1</p>
    <p>Yfp n Zfp n</p>
    <p>Fingerprint to container index</p>
    <p>NFS CIFS VTL</p>
  </div>
  <div class="page">
    <p>Challenge With Chunk References</p>
    <p>Huge Fingerprint Set In High-End Systems  Physical capacity: 560TiB  Avg chunk size: 8 KiB, 4KiB after compression  Number of chunks: 140 billions</p>
  </div>
  <div class="page">
    <p>Memory Usage Of Each Approach</p>
    <p>M e</p>
    <p>m o ry</p>
    <p>R e q u</p>
    <p>ir e</p>
    <p>m e n</p>
    <p>ts</p>
    <p>Number of Chunks</p>
    <p>Reference Counts Bloom Filter</p>
    <p>Perfect Hash Bit Vector</p>
  </div>
  <div class="page">
    <p>Perfect Hashing Vector (PHvec)</p>
    <p>s1 s2  sn 0 1 n - 1</p>
    <p>PHF (m  n)</p>
    <p>Fingerprint set S</p>
    <p>PH vector</p>
    <p>Collision free hash function for the fingerprints in S</p>
    <p>|PHvec| = |PHF| + |PH vector|</p>
  </div>
  <div class="page">
    <p>Bucketizing The Huge Fingerprint Set</p>
  </div>
  <div class="page">
    <p>Bucketizing The Huge Fingerprint Set</p>
    <p>Buckets are variable size</p>
  </div>
  <div class="page">
    <p>Sanitization Process  Merge (1)</p>
    <p>Afp Bfp Cfp Dfp Efp File 0</p>
    <p>Files represented with fingerprints</p>
    <p>Afp 0 Bfp 0 Cfp 0 Dfp 0 Efp 1</p>
    <p>Fingerprint to container index Container 0</p>
    <p>Containers</p>
    <p>Container 1</p>
    <p>Container n</p>
    <p>CP0 Container n+1</p>
    <p>Disk Afp 0 Bfp 0 Cfp 0 Dfp 0 Efp 1</p>
    <p>In Memory Fingerprint to container index</p>
    <p>Merge 1</p>
  </div>
  <div class="page">
    <p>Sanitization Process  Analysis (2)</p>
    <p>Afp Bfp Cfp Dfp Efp File 0</p>
    <p>Files represented with fingerprints</p>
    <p>Afp 0 Bfp 0 Cfp 0 Dfp 0 Efp 1</p>
    <p>Fingerprint to container index Container 0</p>
    <p>Containers</p>
    <p>Container 1</p>
    <p>Container n</p>
    <p>CP0</p>
    <p>Memory Perfect Hash</p>
    <p>Vector 1 2 3 4 5 6</p>
    <p>#fps Container n+1</p>
    <p>Disk Container Range Covered by PHvec:</p>
    <p>{0, , n}</p>
  </div>
  <div class="page">
    <p>Sanitization Process  Enumeration (3)</p>
    <p>Afp Bfp Cfp Dfp Efp File 0</p>
    <p>Files represented with fingerprints</p>
    <p>Afp 0 Bfp 0 Cfp 0 Dfp 0 Efp 1</p>
    <p>Fingerprint to container index Container 0</p>
    <p>Containers</p>
    <p>Container 1</p>
    <p>Container n</p>
    <p>CP0</p>
    <p>Memory Perfect Hash</p>
    <p>Vector 1 2 3 4 5 6</p>
    <p>#fps Container n+1 Mark live fingerprints</p>
    <p>Disk Container Range Covered by PHvec:</p>
    <p>{0, , n}</p>
  </div>
  <div class="page">
    <p>Sanitization Process  Copy (4)</p>
    <p>Afp Bfp Cfp Dfp Efp File 0</p>
    <p>Files represented with fingerprints</p>
    <p>Afp 0 Bfp 0 Cfp 0 Dfp 0 Efp 1</p>
    <p>Fingerprint to container index Container 0</p>
    <p>Containers</p>
    <p>Container 1</p>
    <p>Container n</p>
    <p>CP0</p>
    <p>Memory Perfect Hash</p>
    <p>Vector 1 2 3 4 5 6</p>
    <p>#fps Container n+1</p>
    <p>Mark live fingerprints Copy live data forward</p>
    <p>Disk Container Range Covered by PHvec:</p>
    <p>{0, , n}</p>
  </div>
  <div class="page">
    <p>Sanitization Process  Zero (5)</p>
    <p>Afp Bfp Cfp Dfp Efp File 0</p>
    <p>Files represented with fingerprints</p>
    <p>Afp 0 Bfp 0 Cfp 0 Dfp 0 Efp 1</p>
    <p>Fingerprint to container index Container 0</p>
    <p>Containers</p>
    <p>Container 1</p>
    <p>Container n</p>
    <p>CP0</p>
    <p>Memory Perfect Hash</p>
    <p>Vector 1 2 3 4 5 6</p>
    <p>#fps Container n+1</p>
    <p>Mark live fingerprints Copy live data forward</p>
    <p>Disk Container Range Covered by PHvec:</p>
    <p>{0, , n}</p>
  </div>
  <div class="page">
    <p>Issues to Support Read-Write Mode</p>
    <p>fingerprints that came in after CP0 has been taken but before the PHvec structure was constructed in the analysis phase?</p>
  </div>
  <div class="page">
    <p>Memory Perfect Hash</p>
    <p>Vector 1 2 3 4 5 6</p>
    <p>#fps</p>
    <p>Mark live fingerprints</p>
    <p>&lt;fp, CID&gt;</p>
    <p>Container Range Covered by PHvec:</p>
    <p>{0, , n}</p>
    <p>Dedupe Engine</p>
    <p>All incoming chunks &lt;fp, chunk_data&gt;</p>
    <p>Notify Mechanism</p>
    <p>Handling Resurrections</p>
  </div>
  <div class="page">
    <p>Handling Fingerprints Not Referenced by First Consistency Point (CP0)</p>
    <p>F1</p>
    <p>Namespace  CP0</p>
    <p>F2 Fn F3</p>
  </div>
  <div class="page">
    <p>Handling Fingerprints Not Referenced by First Consistency Point (CP0)</p>
    <p>F1</p>
    <p>Namespace  CP1</p>
    <p>F2 Fn F3</p>
    <p>F1</p>
    <p>Namespace  CP0</p>
    <p>F2 Fn F3</p>
    <p>After creating PHvec and setting up notify mechanism</p>
  </div>
  <div class="page">
    <p>Enumerate CP1</p>
    <p>F1</p>
    <p>Namespace  CP1</p>
    <p>F2 Fn F3</p>
    <p>Fingerprints from F1 and Fn</p>
    <p>Afp 0 Bfp 0 Cfp 0 Dfp 0 Efp 1</p>
    <p>Fingerprint to container index</p>
    <p>Memory Perfect Hash</p>
    <p>Vector 1 2 3 4 5 6</p>
    <p>#fps</p>
    <p>Mark live fingerprints</p>
    <p>Lookup &lt;fp, CID&gt;</p>
    <p>Container Range Covered by PHvec:</p>
    <p>{0, , n}</p>
  </div>
  <div class="page">
    <p>Enumerate CP0</p>
    <p>F1</p>
    <p>Namespace  CP1</p>
    <p>F2 Fn F3</p>
    <p>Fingerprints from F1 to Fn</p>
    <p>Memory Perfect Hash</p>
    <p>Vector 1 2 3 4 5 6</p>
    <p>#fps</p>
    <p>Mark live fingerprints</p>
    <p>Add fp to PHvec</p>
    <p>Container Range Covered by PHvec:</p>
    <p>{0, , n}</p>
  </div>
  <div class="page">
    <p>Experimental Setup and Synthetic Tool</p>
    <p>16-Core Intel Xeon, 2.53 GHz, 8 MiB cache  6 RAID6 groups with 2TiB drives</p>
    <p>129.4 TiB of usable capacity</p>
    <p>72 GiB of RAM  Synthetic tool that mimics backup workload by</p>
    <p>leveraging our prior knowledge of such workloads</p>
  </div>
  <div class="page">
    <p>No Deduplication</p>
    <p>T im</p>
    <p>e</p>
    <p>(s e</p>
    <p>c o</p>
    <p>n d</p>
    <p>s )</p>
    <p>Space (TiB)</p>
    <p>Deleted Space vs Sanitization Time</p>
    <p>Merge Analysis</p>
    <p>Enumeration Copy Zero</p>
    <p>Sanitization</p>
  </div>
  <div class="page">
    <p>With Deduplication</p>
    <p>T im</p>
    <p>e</p>
    <p>(s e</p>
    <p>c o</p>
    <p>n d</p>
    <p>s )</p>
    <p>Deleted logical bytes (TiB)</p>
    <p>Deleted Space vs Sanitization Time</p>
    <p>Merge Analysis</p>
    <p>Enumeration Copy Zero</p>
    <p>Sanitization</p>
  </div>
  <div class="page">
    <p>No Deduplication vs With Deduplication</p>
    <p>Deduplication factor 7.38X  Throughput (No dedup): 731 MiB/second  Throughput (with dedup): 5.06 GiB/second  Speedup Factor: 7.1X</p>
  </div>
  <div class="page">
    <p>Concurrent Data Ingest and Sanitization with Deduplication</p>
    <p>Data ingest runs at 70% of its peak throughput  Sanitization runs at least at 59% of its peak</p>
    <p>throughput</p>
    <p>Data Ingest: CPU intensive  Sanitization: IO intensive</p>
  </div>
  <div class="page">
    <p>Concurrent Data Ingest and Sanitization  No Deduplication</p>
    <p>Data ingest runs at 70% of its peak throughput  Sanitization runs at least at 45% of its peak</p>
    <p>throughput</p>
    <p>Data Ingest: CPU and IO intensive  Sanitization: IO intensive</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Sanitization is a critical feature for security matters  We have proposed a process to carry out bulk</p>
    <p>sanitization of a storage system rather than devices</p>
    <p>We use perfect hashing to minimize memory and I/O requirements</p>
    <p>Nearly linear performance as storage grows  Effective throughput multiplying with the</p>
    <p>deduplication factor.</p>
    <p>Sanitization without zero phase can be used as a process to reclaim dead space</p>
  </div>
  <div class="page">
    <p>Q&amp;A</p>
  </div>
  <div class="page"/>
</Presentation>
