<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Reducing Solid-State Storage Device Write Stress</p>
    <p>Through Opportunistic In-Place Delta Compression</p>
    <p>Xuebin Zhang, Jiangpeng Li, Hao Wang,</p>
    <p>Kai Zhao and Tong Zhang</p>
    <p>xuebinzhang.rpi@gmail.com</p>
    <p>ECSE Department, Rensselaer Polytechnic Institute (RPI)</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction and Motivation</p>
    <p>Progressive Programmability of SLC Flash Pages</p>
    <p>In-place Delta Compression Realization in SSDs</p>
    <p>Evaluation Results and Overhead Analysis</p>
    <p>Future Work and Summary</p>
  </div>
  <div class="page">
    <p>NAND Flash Memory</p>
    <p>Increasing Adoptions and Decreasing Cost of NAND Flash Memory</p>
    <p>NAND Flash</p>
    <p>consumer client enterprise</p>
    <p>Increasingly wide adoption</p>
    <p>Endurance: One of Existing Problems of NAND Flash Memory</p>
    <p>Limited lifetime : SLC: 8000; MLC: 2000; TLC: &lt;1000.</p>
    <p>Make it worse: Bad management in software stack.</p>
  </div>
  <div class="page">
    <p>Content Temporal Locality in Storage Systems</p>
    <p>Small (&lt;4kB) update will trigger a 4kB write in Flash (write amplification)</p>
    <p>60% writes are smaller than one page (4kB), even less than 10 bytes</p>
    <p>Redundancy between consecutive updates</p>
    <p>Frequently repeated in-place update within a short time period</p>
    <p>Finance-1 Finance-2 Homes Webmail 0%</p>
    <p>% o</p>
    <p>f L B</p>
    <p>A s</p>
    <p>Workload Traces</p>
  </div>
  <div class="page">
    <p>Delta Compression: Problems in Current Practice</p>
    <p>D0P0</p>
    <p>Physical page</p>
    <p>Other data</p>
    <p>D0P0 Other data</p>
    <p>L1P1 Other data</p>
    <p>D0P0 Other data</p>
    <p>L1P1 ...L2</p>
    <p>LiP2 Other data</p>
    <p>T0 T1Write D1 TiWrite Di</p>
    <p>Li-1</p>
    <p>Latency: need to read multiple pages to recover the latest version.</p>
    <p>Storage: need to keep a mapping table to store the deltas location.</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction and Motivation</p>
    <p>Progressive Programmability of SLC Flash Pages</p>
    <p>In-place Delta Compression Realization in SSDs</p>
    <p>Evaluation Results and Overhead Analysis</p>
    <p>Summary and Future Work</p>
  </div>
  <div class="page">
    <p>NAND Flash Progressive Programming</p>
    <p>Append new data in the same page (for SLC flash pages)</p>
    <p>Writing 1 to flash cell will not change its state</p>
    <p>Overwrite new data to original physical page</p>
  </div>
  <div class="page">
    <p>NAND Flash Progressive Programming</p>
    <p>Hardware Platform: PCIe interface, FPGA as the Flash controller</p>
  </div>
  <div class="page">
    <p>NAND Flash Progressive Programming</p>
    <p>Validity checking of multiple programming before erasing</p>
    <p>Conventional: one program  one erase</p>
    <p>Progressive: eight program  one erase</p>
    <p>-3</p>
    <p>Erase count</p>
    <p>B it e</p>
    <p>rr o</p>
    <p>r ra</p>
    <p>te</p>
    <p>Conventional</p>
    <p>Progressive</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction and Motivation</p>
    <p>Progressive Programmability of SLC Flash Pages</p>
    <p>In-place Delta Compression Realization in SSDs</p>
    <p>Evaluation Results and Overhead Analysis</p>
    <p>Summary and Future Work</p>
  </div>
  <div class="page">
    <p>Proposed Solution: Combine Data/Delta Compression</p>
    <p>Use intra-sector lossless data compression to make space for deltas</p>
    <p>one sector data compressed data</p>
    <p>Compression</p>
    <p>unused space</p>
    <p>Per-sector Compression ratio distribution of different file types</p>
    <p>compression ratio</p>
    <p>P e rc</p>
    <p>e n ta</p>
    <p>g e</p>
    <p>Database1</p>
    <p>Database2</p>
    <p>Excel</p>
    <p>Text</p>
    <p>Source Code</p>
    <p>Metadata Smaller is better</p>
  </div>
  <div class="page">
    <p>Proposed Solution: In-place Delta Compression</p>
    <p>Overall flow diagram to update one new version of sector data</p>
    <p>Sector content change</p>
    <p>d0 d1  dn 111111  11</p>
    <p>d0 d1  dn p1p2  pm 1  11</p>
    <p>pk</p>
    <p>d'0 d'1  d'n 111111  11</p>
    <p>OR</p>
    <p>dk Enough</p>
    <p>space?</p>
    <p>Write pk through</p>
    <p>partial programming</p>
    <p>Allocate a new</p>
    <p>SLC-mode page Header</p>
    <p>generation</p>
    <p>and ECC</p>
    <p>encoding pk</p>
    <p>Compress Ck and</p>
    <p>write to the</p>
    <p>allocated page</p>
    <p>Delta</p>
    <p>compression</p>
    <p>Input: New</p>
    <p>version data</p>
    <p>Ck-1</p>
    <p>Ck</p>
    <p>Read from SLC</p>
    <p>mode page</p>
    <p>Data</p>
    <p>reconstruction</p>
    <p>Y</p>
  </div>
  <div class="page">
    <p>Proposed Solution: In-place Delta Compression</p>
    <p>Consecutive in-place updates</p>
    <p>C0P0</p>
    <p>Physical page</p>
    <p>C0P0</p>
    <p>C0P0</p>
    <p>d1</p>
    <p>C0P0</p>
    <p>Ck+1P1</p>
    <p>Full: k-th update</p>
    <p>Allocate a new page</p>
    <p>.. .</p>
    <p>update</p>
    <p>.. .</p>
    <p>d1 d2</p>
    <p>d1 d2 ... dk</p>
    <p>Reset delta</p>
    <p>compression</p>
  </div>
  <div class="page">
    <p>Proposed Solution: Data Placement</p>
    <p>Two different data placement strategies</p>
    <p>Clustered: shared region for deltas of this physical page</p>
    <p>Segmented: independent regions for deltas of each sector only</p>
    <p>Ac Bc DcCc</p>
    <p>segment</p>
    <p>Segmented placement</p>
    <p>Ac Bc DcCc</p>
    <p>Clustered placement Ac</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>A</p>
    <p>Bc</p>
    <p>Cc</p>
    <p>Dc</p>
    <p>Shared region for</p>
    <p>all deltas</p>
    <p>Deltas of sector</p>
    <p>D only</p>
  </div>
  <div class="page">
    <p>Proposed Solution: ECC Management</p>
    <p>ECC management for different types of data elements</p>
    <p>Compressed original sector data</p>
    <p>Compressed deltas</p>
    <p>Header for each elements</p>
    <p>Compressed</p>
    <p>ECC</p>
    <p>redundancy Header</p>
    <p>Compressed</p>
    <p>delta</p>
    <p>One ECC codeword</p>
    <p>SLC-mode flash memory page</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction and Motivation</p>
    <p>Progressive Programmability of SLC Flash Pages</p>
    <p>In-place Delta Compression Realization in SSDs</p>
    <p>Evaluation Results and Overhead Analysis</p>
    <p>Summary and Future Work</p>
  </div>
  <div class="page">
    <p>Case study: file system metadata</p>
    <p>Use a benchmark to generate database/files operations</p>
    <p>Implement a metaAnalyzer to grasp metadata from file system</p>
    <p>Analyze the collected consecutive versions of metadata</p>
    <p>Evaluation: Write Stress Reduction</p>
    <p>Delta compression efficiency: (full metadata size is 256 bytes)</p>
    <p>C o</p>
    <p>m p</p>
    <p>re s s io</p>
    <p>n R</p>
    <p>a ti o</p>
    <p>Workload Traces</p>
    <p>SQlite Insert SQlite Update</p>
    <p>File Append File Update</p>
  </div>
  <div class="page">
    <p>Write stress reduction to store 1000 consecutive versions</p>
    <p>Segmented Clustered 0</p>
    <p>P a</p>
    <p>g e</p>
    <p>N e</p>
    <p>e d</p>
    <p>e d</p>
    <p>Data Placement Strategy</p>
    <p>SQlite Insert SQlite Update</p>
    <p>File Append File Update</p>
    <p>Evaluation: Write Stress Reduction</p>
    <p>Less than 50</p>
  </div>
  <div class="page">
    <p>Evaluation: Write Stress Reduction</p>
    <p>General cases analysis</p>
    <p>Set the data/delta compression ratio as Gaussian distribution</p>
    <p>Simulation driven by traces of different workloads</p>
    <p>Segmented Clustered 0.0</p>
    <p>N o rm</p>
    <p>a li z e d P</p>
    <p>a g e U</p>
    <p>s e d C</p>
    <p>o u n t</p>
    <p>(a) Webmail</p>
    <p>Rdata= 0.7 Rdelta=0.6 Rdata= 0.7 Rdelta=0.3 Rdata= 0.7 Rdelta=0.1</p>
    <p>Rdata= 0.4 Rdelta=0.6 Rdata= 0.4 Rdelta=0.3 Rdata= 0.4 Rdelta=0.1</p>
    <p>Rdata= 0.2 Rdelta=0.6 Rdata= 0.2 Rdelta=0.3 Rdata= 0.2 Rdelta=0.1</p>
    <p>Segmented Clustered 0.0</p>
    <p>N o rm</p>
    <p>a li z e d P</p>
    <p>a g e U</p>
    <p>s e d C</p>
    <p>o u n t</p>
    <p>(b) Repeated File Update</p>
    <p>Segmented Clustered 0.0</p>
    <p>N o rm</p>
    <p>a li z e d P</p>
    <p>a g e U</p>
    <p>s e d C</p>
    <p>o u n t</p>
    <p>(c) Homes</p>
    <p>Segmented Clustered 0.0</p>
    <p>N o rm</p>
    <p>a li z e d P</p>
    <p>a g e U</p>
    <p>s e d C</p>
    <p>o u n t</p>
    <p>(d) TPC-C</p>
    <p>Segmented Clustered 0.0</p>
    <p>N o rm</p>
    <p>a li z e d P</p>
    <p>a g e U</p>
    <p>s e d C</p>
    <p>o u n t</p>
    <p>(a) Webmail</p>
    <p>Rdata= 0.7 Rdelta=0.6 Rdata= 0.7 Rdelta=0.3 Rdata= 0.7 Rdelta=0.1</p>
    <p>Rdata= 0.4 Rdelta=0.6 Rdata= 0.4 Rdelta=0.3 Rdata= 0.4 Rdelta=0.1</p>
    <p>Rdata= 0.2 Rdelta=0.6 Rdata= 0.2 Rdelta=0.3 Rdata= 0.2 Rdelta=0.1</p>
    <p>Segmented Clustered 0.0</p>
    <p>N o rm</p>
    <p>a li z e d P</p>
    <p>a g e U</p>
    <p>s e d C</p>
    <p>o u n t</p>
    <p>(b) Repeated File Update</p>
    <p>Segmented Clustered 0.0</p>
    <p>N o rm</p>
    <p>a li z e d P</p>
    <p>a g e U</p>
    <p>s e d C</p>
    <p>o u n t</p>
    <p>(c) Homes</p>
    <p>Segmented Clustered 0.0</p>
    <p>N o rm</p>
    <p>a li z e d P</p>
    <p>a g e U</p>
    <p>s e d C</p>
    <p>o u n t</p>
    <p>(d) TPC-C</p>
    <p>Lower is better.</p>
  </div>
  <div class="page">
    <p>Evaluation: Write Stress Reduction</p>
    <p>General cases analysis</p>
    <p>Segmented Clustered 0.0</p>
    <p>N o rm</p>
    <p>a li z e d P</p>
    <p>a g e U</p>
    <p>s e d C</p>
    <p>o u n t</p>
    <p>(a) Webmail</p>
    <p>Rdata= 0.7 Rdelta=0.6 Rdata= 0.7 Rdelta=0.3 Rdata= 0.7 Rdelta=0.1</p>
    <p>Rdata= 0.4 Rdelta=0.6 Rdata= 0.4 Rdelta=0.3 Rdata= 0.4 Rdelta=0.1</p>
    <p>Rdata= 0.2 Rdelta=0.6 Rdata= 0.2 Rdelta=0.3 Rdata= 0.2 Rdelta=0.1</p>
    <p>Segmented Clustered 0.0</p>
    <p>N o rm</p>
    <p>a li z e d P</p>
    <p>a g e U</p>
    <p>s e d C</p>
    <p>o u n t</p>
    <p>(b) Repeated File Update</p>
    <p>Segmented Clustered 0.0</p>
    <p>N o rm</p>
    <p>a li z e d P</p>
    <p>a g e U</p>
    <p>s e d C</p>
    <p>o u n t</p>
    <p>(c) Homes</p>
    <p>Segmented Clustered 0.0</p>
    <p>N o rm</p>
    <p>a li z e d P</p>
    <p>a g e U</p>
    <p>s e d C</p>
    <p>o u n t</p>
    <p>(d) TPC-C</p>
    <p>Segmented Clustered 0.0</p>
    <p>N o rm</p>
    <p>a li z e d P</p>
    <p>a g e U</p>
    <p>s e d C</p>
    <p>o u n t</p>
    <p>(a) Webmail</p>
    <p>Rdata= 0.7 Rdelta=0.6 Rdata= 0.7 Rdelta=0.3 Rdata= 0.7 Rdelta=0.1</p>
    <p>Rdata= 0.4 Rdelta=0.6 Rdata= 0.4 Rdelta=0.3 Rdata= 0.4 Rdelta=0.1</p>
    <p>Rdata= 0.2 Rdelta=0.6 Rdata= 0.2 Rdelta=0.3 Rdata= 0.2 Rdelta=0.1</p>
    <p>Segmented Clustered 0.0</p>
    <p>N o rm</p>
    <p>a li z e d P</p>
    <p>a g e U</p>
    <p>s e d C</p>
    <p>o u n t</p>
    <p>(b) Repeated File Update</p>
    <p>Segmented Clustered 0.0</p>
    <p>N o rm</p>
    <p>a li z e d P</p>
    <p>a g e U</p>
    <p>s e d C</p>
    <p>o u n t</p>
    <p>(c) Homes</p>
    <p>Segmented Clustered 0.0</p>
    <p>N o rm</p>
    <p>a li z e d P</p>
    <p>a g e U</p>
    <p>s e d C</p>
    <p>o u n t</p>
    <p>(d) TPC-C</p>
    <p>Lower is better.</p>
  </div>
  <div class="page">
    <p>Evaluation: Read Latency Overhead</p>
    <p>Read operations flow diagram in proposed solution</p>
    <p>Memory</p>
    <p>Sensing</p>
    <p>Data</p>
    <p>Transfer</p>
    <p>LDPC</p>
    <p>Decode sen xfer Decompress</p>
    <p>BCH</p>
    <p>Decode Decompress</p>
    <p>Combine</p>
    <p>dec ecc</p>
    <p>SATA</p>
    <p>Transfer</p>
    <p>com sata</p>
    <p>Read latency model</p>
    <p>Conventional Practice without data/compression:</p>
    <p>Proposed solution:</p>
    <p>( ) (4 )</p>
    <p>dec</p>
    <p>read sen xfer LDPC sata kB</p>
    <p>( ) ( )</p>
    <p>( ) ( )</p>
    <p>sec</p>
    <p>( 4 ) max( , )</p>
    <p>max( , )</p>
    <p>dec dec</p>
    <p>read sen xfer LDPC BCH</p>
    <p>dec dec</p>
    <p>delta com sata</p>
    <p>n kB</p>
  </div>
  <div class="page">
    <p>Read latency overhead</p>
    <p>Operation Technique Average-case (us) Worst-case</p>
    <p>(us)</p>
    <p>Read</p>
    <p>Conventional 54</p>
    <p>Clustered 76 102</p>
    <p>Segmented 56 63</p>
    <p>Flash memory parameter configurations</p>
    <p>Flash memory sensing latency: 40 us</p>
    <p>Data transfer from flash to controller (ONFI 4.0): 800MB/s</p>
    <p>LDPC/BCH decoding throughput: 1GB/s</p>
    <p>Evaluation: Latency Overhead and Silicon Cost</p>
    <p>Silicon cost</p>
    <p>Total involved silicon area is 0.39 mm2 at 22nm, while in genral,</p>
    <p>a whole controllers silicon area size is around 10-20 mm2.</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction and Motivation</p>
    <p>Progressive Programmability of SLC Flash Pages</p>
    <p>In-place Delta Compression Realization in SSDs</p>
    <p>Evaluation Results and Overhead Analysis</p>
    <p>Summary and Future Work</p>
  </div>
  <div class="page">
    <p>Extensions and Future Work</p>
    <p>Use a hardware accelerator to offload computation intensive tasks</p>
    <p>Will not bring troubles to controller because of small silicon size and power consumption</p>
    <p>Benefit a lot from the perspective of performance</p>
    <p>Exploit the byte-addressability to realize the delta compression in NVM</p>
    <p>Limited endurance, expensive cost</p>
    <p>Inherent support of byte-addressability</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>SLC Flash page can support Progressive Partial Programming: different portions of the same flash page can be programmed at different time.</p>
    <p>Lossless data compression can be utilized to make space for deltas between consecutive versions of updates.</p>
    <p>SSD write stress can be reduced by up to 80% with proposed solution without significant overhead.</p>
  </div>
</Presentation>
