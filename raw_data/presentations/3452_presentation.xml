<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>ACES: AUTOMATIC COMPARTMENTS FOR EMBEDDED SYSTEMS</p>
    <p>Sandia National Laboratories is a multimission laboratory managed and operated by National Technology &amp; Engineering Solutions of Sandia LLC, a wholly owned subsidiary of Honeywell International Inc., for the U.S. Department of Energys National Nuclear Security Administration under contract DE-NA0003525. SAND2018-8907 C</p>
    <p>Abraham A. Clements clemen19@purdue.edu</p>
    <p>Naif Saleh Almakhdhub, nalmakhd@purdue.edu</p>
    <p>Saurabh Bagchi sbagchi@purdue.edu</p>
    <p>Mathias Payer mathias.payer@nebelwelt.net</p>
  </div>
  <div class="page">
    <p>PROBLEM STATEMENT</p>
    <p>Bare-metal IoT devices/ SoCs are vulnerable  Google P0s Broadcom SoC</p>
    <p>CVE-2017-6957</p>
    <p>Legacy code  IoT devices, vehicles, etc.</p>
    <p>No defenses  Even DEP is missing</p>
    <p>No separation of privileges</p>
    <p>Bare-metal Application</p>
    <p>Application Logic</p>
    <p>Image Proc.</p>
    <p>TCP Stack</p>
    <p>Camera HAL</p>
    <p>WIFI HAL</p>
    <p>Serial Coms</p>
    <p>Signal Proc.</p>
    <p>UART HAL</p>
    <p>Camera 2.4Ghz Radio</p>
    <p>UART ADC</p>
    <p>ADC HAL</p>
    <p>Privileged code</p>
    <p>Hardware peripheral</p>
    <p>Result: Single vulnerability compromises the entire system</p>
  </div>
  <div class="page">
    <p>ACES OVERVIEW</p>
    <p>ACES creates many compartments  Applies least privileges</p>
    <p>Creates sub-thread compartments</p>
    <p>Protects integrity of sensitive data and peripherals</p>
    <p>Uses static analysis to automatically infer compartments using a policy</p>
    <p>Separates compartmentalization from application development</p>
    <p>Each compartment has associated data/peripherals</p>
    <p>Compartmented Application</p>
    <p>Application Logic</p>
    <p>Image Proc.</p>
    <p>TCP Stack</p>
    <p>Camera HAL</p>
    <p>WIFI HAL</p>
    <p>Serial Coms</p>
    <p>Signal Proc.</p>
    <p>UART HAL</p>
    <p>Camera 2.4Ghz Radio</p>
    <p>UART ADC</p>
    <p>ADC HAL</p>
    <p>Compartmented unprivileged code</p>
    <p>Hardware peripheral</p>
    <p>Comp. Switcher</p>
    <p>Privileged code</p>
  </div>
  <div class="page">
    <p>RELATED WORK</p>
    <p>EPOXY  DEP, diversity, and stack protections for bare-metal systems  Does not address least privileges</p>
    <p>Clements A. A. et al. Oakland 2017 (Our work)</p>
    <p>Mbed uVisor  runtime and API to manually create compartments  Intermixes source and compartmentalization policy</p>
    <p>Requires Mbed OS</p>
    <p>https://www.mbed.com/en/technologies/security/uvisor/</p>
    <p>MINION  Creates thread level compartments on micro-controllers  Fixed algorithm used to determine compartments</p>
    <p>Kim, C. H. et al. NDSS 2018</p>
  </div>
  <div class="page">
    <p>COMPARTMENTS</p>
    <p>Set of concurrently accessible memory regions and authorized control-flows between them</p>
    <p>Compartments restrict  Accessible memory</p>
    <p>Control-flow between compartments</p>
    <p>Memory Regions</p>
    <p>Control-flow Function</p>
    <p>Code Data Peripheral</p>
    <p>Accessible for compartment</p>
    <p>BA</p>
    <p>Comp B Comp A</p>
    <p>Region 2 Region 1</p>
    <p>Pe ri</p>
    <p>ph er</p>
    <p>al s</p>
    <p>R A</p>
    <p>M C</p>
    <p>o de</p>
    <p>GPIO CAMERA</p>
    <p>UART</p>
    <p>WIFI Comp A</p>
    <p>Comp B</p>
    <p>OnBtn</p>
    <p>TcpTx</p>
    <p>TakeImg</p>
    <p>TxImg</p>
  </div>
  <div class="page">
    <p>CREATING COMPARTMENT</p>
    <p>Static analysis identifies code, data, and peripheral dependencies  ACES ensures compartments can access all required data and peripherals</p>
    <p>Mirco-Emulator used to dynamically identify missed due to dependencies aliasing</p>
    <p>Compartments are code centric  i.e. code belongs to only one compartment</p>
    <p>Policy determines how functions, global variables, and peripherals are grouped to create compartments</p>
    <p>Different policies possible  We evaluate: Nave Filename, Optimize Filename, and Peripheral policies</p>
    <p>MPU is used to restrict access to memory regions</p>
  </div>
  <div class="page">
    <p>PROGRAM DEPENDENCY GRAPH void OnBtn()</p>
    <p>GPIO.led = ON CAMERA.pwr = ON g_btn = PUSHED TakeImg() TxImg()</p>
    <p>void TakeImg() CAMERA.take_pic = 1 g_image.buf = CAMERA.rx_reg GPIO.led = OFF</p>
    <p>void TxImg() g_tx_state = ACTIVE TcpTx(g_image.buf) g_image.sent = TRUE</p>
    <p>void TcpTx(*buf) GPIO.led_tx = ON WIFI.tx_reg = buf g_tcp_stats.tx_count++ g_tx_state = IDLE</p>
    <p>OnBtn</p>
    <p>TcpTx</p>
    <p>TakeImg</p>
    <p>TxImg</p>
    <p>CAMERA</p>
    <p>GPIO</p>
    <p>WIFI</p>
    <p>g_tx_state</p>
    <p>g_btn</p>
    <p>g_tcp_stats</p>
    <p>g_image</p>
  </div>
  <div class="page">
    <p>TakeImg</p>
    <p>OnBtn</p>
    <p>TcpTx</p>
    <p>TxImg</p>
    <p>REGION GRAPH</p>
    <p>PDG mapped to a Region Graph</p>
    <p>Functions 1:1  Control edges not transferred</p>
    <p>Data 1:1  Data edges transferred</p>
    <p>Peripherals 1:Many  Unique region created per</p>
    <p>dependency edge</p>
    <p>WIFI</p>
    <p>GPIO</p>
    <p>CAMERA</p>
    <p>GPIO</p>
    <p>CAMERA</p>
    <p>GPIO</p>
    <p>OnBtn</p>
    <p>TcpTx</p>
    <p>TakeImg</p>
    <p>TxImg</p>
    <p>CAMERA</p>
    <p>GPIO</p>
    <p>WIFI</p>
    <p>g_tx_state</p>
    <p>g_btn</p>
    <p>g_tcp_stats</p>
    <p>g_image</p>
    <p>g_tx_state</p>
    <p>g_tcp_stats</p>
    <p>g_image</p>
    <p>g_btn</p>
  </div>
  <div class="page">
    <p>g_image</p>
    <p>g_btn g_btn,</p>
    <p>g_image</p>
    <p>g_tx_state</p>
    <p>g_tcp_stats</p>
    <p>COMPARTMENTALIZATION POLICY</p>
    <p>Defines what should be grouped to form compartments</p>
    <p>Implemented policies  Nave Filename</p>
    <p>Optimized Filename</p>
    <p>Peripheral</p>
    <p>Many more are possible</p>
    <p>TakeImg</p>
    <p>OnBtn</p>
    <p>WIFI</p>
    <p>GPIO</p>
    <p>TcpTx</p>
    <p>TxImg</p>
    <p>CAMERA</p>
    <p>GPIO</p>
    <p>CAMERA</p>
    <p>GPIO</p>
    <p>TxImg, TcpTx</p>
  </div>
  <div class="page">
    <p>g_btn, g_image</p>
    <p>OPTIMIZE</p>
    <p>Improve security</p>
    <p>Improve performance</p>
    <p>g_tx_state</p>
    <p>g_tcp_stats</p>
    <p>WIFI</p>
    <p>GPIO</p>
    <p>CAMERA</p>
    <p>GPIO</p>
    <p>CAMERA</p>
    <p>GPIO TakeImg</p>
    <p>OnBtn</p>
    <p>TxImg, TcpTx</p>
    <p>TakeImg, OnBtn</p>
  </div>
  <div class="page">
    <p>LOWERING</p>
    <p>Reduces graph to meet HW constraints  Degree of each code regions must</p>
    <p>be less than the number of MPU regions</p>
    <p>Lowest cost regions merged until constraints are met</p>
    <p>Lowing may increases permissions of compartments</p>
    <p>Merging peripherals may capture additional peripherals</p>
    <p>g_btn, g_image</p>
    <p>CAMERA</p>
    <p>GPIO</p>
    <p>TxImg, TcpTx</p>
    <p>WIFI</p>
    <p>GPIO</p>
    <p>TakeImg, OnBtn</p>
    <p>g_tx_state</p>
    <p>g_tcp_stats</p>
    <p>g_tx_state, g_tcp_stats</p>
    <p>UART,GPIO, CAMERA,WIFI</p>
  </div>
  <div class="page">
    <p>MAPPING TO MEMORY A B</p>
    <p>Comp B Comp A</p>
    <p>Region 2 Region 1</p>
    <p>Pe ri</p>
    <p>ph er</p>
    <p>al s</p>
    <p>R A</p>
    <p>M C</p>
    <p>o de</p>
    <p>GPIO CAMERA</p>
    <p>UART</p>
    <p>WIFI</p>
    <p>Region 1 g_btn,</p>
    <p>g_image</p>
    <p>CAMERA</p>
    <p>GPIO</p>
    <p>Comp. B</p>
    <p>TxImg, TcpTx</p>
    <p>Comp. A</p>
    <p>TakeImg, OnBtn</p>
    <p>Region 2 g_tx_state, g_tcp_stats</p>
    <p>UART,GPIO, CAMERA,WIFI</p>
  </div>
  <div class="page">
    <p>RESTRICTING CONTROL-FLOW</p>
    <p>Instrument calls and returns crossing compartment boundaries  Invoke compartment switcher</p>
    <p>Compartment switcher authenticates both directions  Memory permissions only changed for</p>
    <p>valid transitions</p>
    <p>Comp. Switcher</p>
    <p>Comp A Comp B</p>
    <p>Call</p>
    <p>Return</p>
    <p>OnBtn</p>
    <p>TcpTxTakeImg</p>
    <p>TxImg</p>
    <p>OnBtn TxImg</p>
  </div>
  <div class="page">
    <p>MICRO-EMULATOR</p>
    <p>Emulates store instructions in software  Overcomes limitations of static analysis in</p>
    <p>generating PDG</p>
    <p>Authenticated writes outside a compartments regions</p>
    <p>Dynamic profiling run creates white-list of accesses per compartment</p>
    <p>Used for stack protection</p>
    <p>Previous Stack RO</p>
    <p>R W</p>
    <p>New Locals</p>
    <p>M PU</p>
    <p>Perm issio</p>
    <p>ns</p>
    <p>Stack M em</p>
    <p>o ry Space</p>
  </div>
  <div class="page">
    <p>EVALUATION</p>
    <p>Evaluated policies for security, runtime, resource usage  Nave Filename</p>
    <p>Optimized Filename</p>
    <p>Peripheral</p>
    <p>Five applications run on Cortex-M4  PinLock</p>
    <p>FatFs-uSD</p>
    <p>TCP-Echo</p>
    <p>LCD-uSD</p>
    <p>Animation</p>
  </div>
  <div class="page">
    <p>PINLOCK CASE STUDY</p>
    <p>Attacker trying to unlock lock</p>
    <p>Assume write-what-where vulnerability in HAL_UART_Receive_IT</p>
    <p>Overwrite Control Hijack</p>
    <p>Policy Global GPIO Direct Deputy</p>
    <p>Nave Filename     Opt. Filename     Peripheral</p>
  </div>
  <div class="page">
    <p>RUNTIME EVALUATION</p>
    <p>Can have moderate runtime impact</p>
    <p>Emulating instructions accounts for largest increase in execution time</p>
  </div>
  <div class="page">
    <p>MEMORY OVERHEAD</p>
    <p>Flash Overhead RAM Overhead</p>
  </div>
  <div class="page">
    <p>CONCLUSION</p>
    <p>Applies least privileges bare-metal IoT devices  Does not require changes to application logic</p>
    <p>Uses existing hardware</p>
    <p>ACES automatically creates and enforces sub-thread  Decouples security policy from application</p>
    <p>Frees developer from having to manage underlying security hardware</p>
    <p>Enables research in creating compartmentalization policies</p>
    <p>Code will be available at:</p>
    <p>https://github.com/embedded-sec/ACES</p>
  </div>
</Presentation>
