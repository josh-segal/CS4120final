<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>TLM POWER3</p>
    <p>SystemC TLM Power Library</p>
    <p>David Greaves MM Yasin (+ M Pusovic)</p>
    <p>University of Cambridge Computer Laboratory</p>
    <p>FDL, September 2012, Vienna.</p>
    <p>PEHAM Project: Power estimation from high-level models</p>
  </div>
  <div class="page">
    <p>TLM POWER 3: Motivation</p>
    <p>Power estimation from high-level models.  Rapid architectural exploration using SystemC.  Absolute accuracy goal: correct order of</p>
    <p>magnitude at least!  Relative accuracy goal: 20 percent or so.</p>
    <p>Want correct polarity of the parameter derivatives : A change is better or worse!</p>
  </div>
  <div class="page">
    <p>Talk Overview</p>
    <p>TLM POWER 2  TLM POWER 3</p>
    <p>Loose timing  Energy based  Layout aware  Bit transition counting</p>
    <p>Splash-2 benchmarks, power probed.  Data fit x86_64 to OpenRISC !</p>
  </div>
  <div class="page">
    <p>TLM Power 2 Library  TLM POWER 2</p>
    <p>developed at France CEA (Lebreton/Vivet)</p>
    <p>Used phase/mode modelling</p>
    <p>No LT  No TLM socket</p>
    <p>integration.</p>
  </div>
  <div class="page">
    <p>Physical Units</p>
    <p>SystemC provides overloaded sc_time units  TLM POWER 2 added pw_energy and</p>
    <p>pw_power units with all appropriate overloads.  TLM POWER 3 adds pw_voltage for F/V</p>
    <p>scaling.  TLM POWER 3 also adds pw_length and</p>
    <p>pw_area.</p>
    <p>Basic physics: energy divided by time ---&gt; power</p>
    <p>Basic physics: length times length ---&gt; area</p>
  </div>
  <div class="page">
    <p>Records, Accounts and Observers  Every monitored module is tied to a power record</p>
    <p>by inheritance or</p>
    <p>by SystemC attribute.</p>
    <p>Every power record contains a set of accounts.</p>
    <p>Accounts have common (user-defined) names and purposes across the system. Typically:</p>
    <p>A1 Static power</p>
    <p>A2 Dynamic energy</p>
    <p>A3 Wiring energy</p>
    <p>Each account can track both energy and power.</p>
    <p>An observer sums activity in a collection of records keeping accounts separate</p>
    <p>A report file has one observer per line.</p>
  </div>
  <div class="page">
    <p>LT b_transport energy annotation</p>
    <p>Bad: This shows computation of energy per transaction in the body of the transaction.</p>
    <p>Better: Energy and floating point computations done in RECOMPUTE_PVT callback.</p>
  </div>
  <div class="page">
    <p>Static or Initial Parameters (1)</p>
  </div>
  <div class="page">
    <p>Static or Initial Parameters (2)  Set up static parameters in constructor:</p>
    <p>Excess or actual area or dimensions</p>
    <p>Static power consumption</p>
    <p>Chip/region name</p>
    <p>VCC supply voltage</p>
    <p>Optional per-instance or per-kind technology file (XML) can be accessed (defines phases and modes and default VCC ...).</p>
    <p>Some are less static:  Set these in PVT change callback (virtual function).</p>
    <p>Call that yourself from constructor.</p>
    <p>PVT called-back when VCC changes.</p>
  </div>
  <div class="page">
    <p>Spatial Layout Support</p>
    <p>Every SC_MODULE has a chip/region designation.</p>
    <p>The area of a module is sum of  its children with the same chip/region name  its locally defined 'excess area'.</p>
    <p>Inter-module wiring lengths can be estimated using Rent's Rule on area of lowest-commonparent.</p>
    <p>Actual X-Y co-ordinates could be allocated by a placer.</p>
  </div>
  <div class="page">
    <p>Hop Tracking: Origin/Hop/Terminus.</p>
    <p>Initiator makes the origin and terminus calls.</p>
    <p>Intermediate nodes (cache and bus models) call log_hop.</p>
    <p>Flags enable energy to be logged at src or dest.</p>
    <p>Options 1+2:</p>
    <p>For additional transition counting, need to know which bus transaction is on and which fields in TLM payload are active.</p>
    <p>Option 1: Track transaction trajectory to get distance travelled.</p>
  </div>
  <div class="page">
    <p>Report Formats (3: VCD)</p>
    <p>Each account and their summations can be plotted in various forms</p>
    <p>1: Ascii-art table format</p>
    <p>2: SYLK or CSV spreadsheet format</p>
    <p>3: VCD temporal display (using dirac impulse response or average over interval)</p>
    <p>A physical layout file is also written.</p>
  </div>
  <div class="page">
    <p>Report Formats (2: Ascii-art text file)</p>
  </div>
  <div class="page">
    <p>Loosely-Timed: Effect of Quantum Two cores running: main() { for(i=0;i&lt;5;i++) puts(Hello World); }</p>
    <p>Core clock Is 200 MHz (5ns period).</p>
    <p>Global Q = 5ns Lock-step execution</p>
    <p>Global Q = 100us Coarsely interleaved</p>
    <p>Global Q = 1us Finely interleaved</p>
    <p>Sim Start: cores=2 Hello World HeHello World Hello World</p>
    <p>Hello Woolo World Hello rld Hello World World Hello Wor Hello World CPU 0 exit : insns #717 CPU 1 exit: insns #717</p>
    <p>Sim Start: cores=2 HHelleol lWoo rWlodr ld HHeelllloo WWoorrlldd</p>
    <p>HHeelllloo Wwoorrlldd</p>
    <p>HHeelllloo WWoorrlldd H eHlellol oW oWrolrd ld CPU 0 exit: insns #717 CPU 1 exit: insns #717</p>
    <p>Sim Start: cores=2 Hello World Hello World Hello World Hello World Hello World Hello World Hello World Hello World Hello World Hello World CPU 0 exit: insns #717 CPU 1 exit: insns #717</p>
    <p>Three different settings of the global quantum.</p>
  </div>
  <div class="page">
    <p>Loosely-Timed Performance Lost</p>
    <p>Relative performance of LT TLM Model (2 cores, running SPLASH-2 Radix Sort n=100)</p>
  </div>
  <div class="page">
    <p>Confidence Switcher Generic API for a measuring and estimating component.</p>
    <p>Use for time, energy, transition count and so on ...</p>
    <p>Very simple implementation if we just want an estimate of the average metric:</p>
    <p>Discard first N measurements, average next N, return this value while making an actual measurement one in every N to check for LOSS OF CONFIDENCE.</p>
  </div>
  <div class="page">
    <p>LT Performance Restored</p>
    <p>FIGURE MISSING THIS DRAFT</p>
  </div>
  <div class="page">
    <p>Augmented DMI Flow</p>
    <p>Latency can be credited to the initiating thread's 'delay' as always.</p>
    <p>Energy should be credited to the intermediate components:</p>
    <p>so DMI record at initiator is extended with either a) a list of intermediate agents that have their own records</p>
    <p>or b) bulk read and write energy records (simpler, not shown).</p>
  </div>
  <div class="page">
    <p>SMP OpenRISC Reference Design</p>
    <p>Detailed model of AMD Opteron L2/Hypertransport DRAM modelled by Univ Maryland DRAMSIM2</p>
    <p>Verilated OpenRISC Core Or fast ORSIM ISS Or MIPS64 ...</p>
  </div>
  <div class="page">
    <p>PC CPU Power Probe</p>
    <p>USB probe</p>
    <p>Measures 12 volt rail to CPU socket.</p>
    <p>Measures volts and amps at 10 Hz rate.</p>
    <p>Accuracy: consistency of about 1 percent between runs.</p>
  </div>
  <div class="page">
    <p>Splash-2 'RADIX' : First Test Setup</p>
    <p>Plot shows two runs with two cores and then one run with one core.</p>
    <p>Problem: Power probe was running on same machine (spikes). Problem: Some spikes missed owing to aliasing (missing ADC LPF). Fixed thereafter (use separate probe machine and add an RC filter). Also this CPU uses 3x power compared with phenom...</p>
  </div>
  <div class="page">
    <p>Probed and Probing Machines</p>
    <p>AMD 6-Core Phenom 64 Processor with TCP connection to power probe machine.</p>
  </div>
  <div class="page">
    <p>Phenom Corner Cases: 1 to 8 threads</p>
    <p>Integer ALU</p>
    <p>Floating Point ALU</p>
    <p>Memory Access: Disjoint Footprints</p>
    <p>Memory Access: Overlapping Footprint</p>
    <p>Vertical bar -&gt; 1 second. Horizontal scale -&gt; 100 Watts.</p>
    <p>System has 6 cores sharing one DRAM bank.</p>
  </div>
  <div class="page">
    <p>Splash-2 'RADIX' : Power + Energy</p>
    <p>Running the RADIX test on n = 1 to 6 cores.</p>
    <p>Program modified to suit n not a power of 2.</p>
    <p>Increasing n ---&gt; increased performance.</p>
    <p>Increasing n ---&gt; better efficiency.</p>
    <p>Strange power humps !</p>
    <p>One DRAM DIMM shared. 1 2 3 4 5 6</p>
  </div>
  <div class="page">
    <p>Phenom Energy Coefficients</p>
    <p>Instruction 1 nJ</p>
    <p>I Cache Miss</p>
    <p>D Cache Miss</p>
    <p>D Cache Snoop Read</p>
    <p>D Cache Evict</p>
    <p>Values obtained from curve fitting</p>
    <p>CPU + Caches only.</p>
    <p>DRAM excluded.</p>
  </div>
  <div class="page">
    <p>Measured v Predicted: Runs 19-24 extrapolated from data fitting on 1-18.</p>
    <p>Energy</p>
    <p>Time</p>
  </div>
  <div class="page">
    <p>Thankyou for listening</p>
    <p>David Greaves M Yasin (Milos Pusovic)</p>
    <p>University of Cambridge Computer Laboratory</p>
    <p>FDL 2012 Vienna.</p>
  </div>
  <div class="page">
    <p>Power Estimation: Project Flow</p>
  </div>
  <div class="page">
    <p>Backup Slide: ESL Modelling Flow</p>
  </div>
  <div class="page">
    <p>Backup Slide: Loosely-timed TLM Modelling</p>
  </div>
</Presentation>
