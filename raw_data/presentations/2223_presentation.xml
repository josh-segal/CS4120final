<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>A Case for Biased Programming in Flash</p>
    <p>Eitan Yaakobi, Gala Yadgar, Nachum Bundak, and Lior Gilon</p>
    <p>Computer Science Department</p>
  </div>
  <div class="page">
    <p>Biased programming: the basic idea</p>
    <p>Increase number of 1s in the data to reduce flash cell wear</p>
    <p>Utilize page spare area for coding overhead</p>
    <p>Reduce bit errors and increase lifetime (up to 24%)</p>
  </div>
  <div class="page">
    <p>Background: bit values and voltage levels</p>
    <p>SLC (single-level cell) flash</p>
    <p>MLC (multi-level cell) flash</p>
    <p>Bit errors:  Program interference  Retention</p>
    <p>ECC: error correction code</p>
    <p>Later in this talk, TLC: three level cell</p>
    <p>Vth</p>
    <p>ER (11)</p>
    <p>P1 (10)</p>
    <p>P2 (00)</p>
    <p>P3 (01)</p>
    <p>Low page (LSB)</p>
    <p>High page (MSB)</p>
    <p>ER (1)</p>
    <p>P1 (0)</p>
    <p>Vth</p>
  </div>
  <div class="page">
    <p>Background: voltage levels and bit errors</p>
    <p>BER: bit error rate (within page)</p>
    <p>Increases with lifetime</p>
    <p>Increases with average voltage level  Short term: more interference</p>
    <p>Long term: more wear</p>
    <p>ER (11)</p>
    <p>P1 (10)</p>
    <p>P2 (00)</p>
    <p>P3 (01)</p>
    <p>Vth 4</p>
  </div>
  <div class="page">
    <p>Background: biased programming</p>
    <p>Shaping (endurance) codes can reduce the number of zeros in the data</p>
    <p>They also increase its overhead:</p>
    <p>P(zero) = 0.5 P(zero) = 0.4</p>
    <p>=</p>
    <p>() physical bits</p>
    <p>information bits</p>
    <p>binary entropy function</p>
    <p>0.5 = 1 0.425 = 1.13 0.4 = 1.24 0.375 = 1.38</p>
    <p>Jagmohan et al. GLOBECOM Workshops, 2010 Cover. IEEE Trans. on Info. Theory, 1973</p>
  </div>
  <div class="page">
    <p>Previous approach: device-level compression</p>
    <p>Encode with bias</p>
    <p>Original data (no bias)</p>
    <p>Write</p>
    <p>Compress page</p>
    <p>Flash page</p>
    <p>Write</p>
    <p>Compress file</p>
    <p>Compressed data (no bias)</p>
    <p>Li et al. USENIX FAST, 2015 Liu et al. GLOBECOM, 2016</p>
  </div>
  <div class="page">
    <p>Our approach: reallocation of page spare area</p>
    <p>The page spare area is used for ECC bits  Logical distinction</p>
    <p>Read/written simultaneously</p>
    <p>Spare area size designed for worst-case scenario end of lifetime</p>
    <p>In the meantime, we reallocate</p>
    <p>Data area Spare area</p>
    <p>Data area Spare area</p>
  </div>
  <div class="page">
    <p>Safe reallocation (I)</p>
    <p>ECC must match the BER  # correctable bit errors:</p>
    <p>Tolerated BER: TBER =</p>
    <p>+</p>
    <p>After reallocation for bias   New #correctable bit errors:</p>
    <p>= (1  )</p>
    <p>log( + ) = 1    t</p>
    <p>t =</p>
    <p>log( + )</p>
    <p>=  +   = (1  )</p>
  </div>
  <div class="page">
    <p>Safe reallocation (II)</p>
    <p>Chip characteristics   = original lifetime (#P/E cycles)</p>
    <p>= maximal BER at  cycles</p>
    <p>Safety ratio:  =</p>
    <p>After reallocation, ensure</p>
    <p>Return reallocated cells, use until</p>
    <p>Lifetime extension =</p>
    <p>=  +   = (1  )</p>
  </div>
  <div class="page">
    <p>Safe reallocation (III)00101100110110011100</p>
    <p>Original data (no bias)</p>
    <p>Add ECC</p>
    <p>Write</p>
    <p>Flash page</p>
  </div>
  <div class="page">
    <p>Safe reallocation (III)00101100110110011100</p>
    <p>Original data (no bias)</p>
    <p>Add ECC</p>
    <p>Write</p>
    <p>Add ECC</p>
    <p>Encode with bias</p>
    <p>BER?</p>
    <p>High Low:</p>
    <p>Flash page</p>
  </div>
  <div class="page">
    <p>Example: Chip MLC-A</p>
    <p>Original lifetime  = 3000</p>
    <p>Safety ratio  =</p>
    <p>= 0.35</p>
    <p>After reallocation  0.4</p>
    <p>0.4  0.35 0.4  2750</p>
    <p>Biased programming increases lifetime by</p>
    <p>= 24.17%</p>
    <p>T = 3725</p>
  </div>
  <div class="page">
    <p>Example: Chip MLC-B</p>
    <p>Deep erase confirmed by manufacturer</p>
    <p>Biased programming is applicable  future research</p>
    <p>Low pageHigh page</p>
  </div>
  <div class="page">
    <p>Example: TLC chip</p>
    <p>TLC: three level cell</p>
    <p>More mapping options  Some are better</p>
    <p>More bias combinations</p>
    <p>Future research</p>
    <p>Low page (LSB)</p>
    <p>High page (MSB)</p>
    <p>ER (111)</p>
    <p>P1 (110)</p>
    <p>P2 (100)</p>
    <p>P3 (101)</p>
    <p>P4 (001)</p>
    <p>P5 (000)</p>
    <p>P6 (010)</p>
    <p>P7 (011)</p>
    <p>Middle page</p>
    <p>ER (011)</p>
    <p>P1 (111)</p>
    <p>P2 (110)</p>
    <p>P3 (100)</p>
    <p>P4 (101)</p>
    <p>P5 (001)</p>
    <p>P6 (000)</p>
    <p>P7 (010)</p>
    <p>Scheme I</p>
    <p>Scheme II</p>
    <p>[I] Yaakobi et al. ICNC 2012. [II] Doi et al. Japanese J. of App. Physics 2016.</p>
  </div>
  <div class="page">
    <p>TLC Bias combinations Dynamic bias System-level implications</p>
    <p>Conclusions</p>
    <p>Spare area can serve ECC and biased programming</p>
    <p>interchangeably</p>
    <p>Requires tuning to chip characteristics</p>
    <p>Next:</p>
    <p>Thank you!</p>
    <p>TLC, 3D-NAND</p>
    <p>LDPC</p>
    <p>Bias combinations</p>
    <p>Dynamic bias</p>
    <p>System-level implications</p>
    <p>Vector graphics by Starline, Katemangostar and Freepik from www.flaticon.com 15</p>
  </div>
</Presentation>
