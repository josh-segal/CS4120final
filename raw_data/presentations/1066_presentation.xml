<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Soteria: Automated IoT Safety and Security Analysis</p>
    <p>Z. Berkay Celik</p>
    <p>Patrick McDaniel</p>
    <p>Gang Tan</p>
    <p>Penn State University USENIX ATC 2018</p>
  </div>
  <div class="page">
    <p>Internet of Things (IoT) enables the future</p>
    <p>Smart Homes</p>
    <p>Healthcare</p>
    <p>Smart Energy</p>
    <p>Smart Farms</p>
  </div>
  <div class="page">
    <p>IoT is not magic</p>
    <p>IoT applicaQon</p>
    <p>Mobile app Connected devices</p>
    <p>AutomaQon</p>
  </div>
  <div class="page">
    <p>IoT enables the future (and a whole lot of problems)</p>
    <p>Heater is turned on when user is not at home</p>
    <p>Denning et al., Ronen et al., Fernandes et al., Celik et al.</p>
    <p>Front door is unlocked when user is sleeping</p>
  </div>
  <div class="page">
    <p>In this talk How do we ensure IoT implementaQons and environments</p>
    <p>adhere to safety and security properQes?</p>
    <p>Soteria*</p>
    <p>* Greek goddess protecQng from harm</p>
  </div>
  <div class="page">
    <p>How safety/security violaQons happen?</p>
    <p>Individual app</p>
    <p>Expected behavior Actual behavior</p>
    <p>al ar</p>
    <p>m o</p>
    <p>n</p>
    <p>S0</p>
    <p>sm o</p>
    <p>ke</p>
    <p>S1:alarm-on</p>
    <p>S0:alarm-off</p>
    <p>S1</p>
    <p>S0 sm</p>
    <p>o ke</p>
    <p>sm o</p>
    <p>ke</p>
    <p>S1:alarm-on</p>
    <p>S0:alarm-off</p>
    <p>S1</p>
    <p>~</p>
    <p>Does alarm sound when there is smoke?</p>
    <p>IoT environment</p>
    <p>heat&gt;135F</p>
    <p>sm o</p>
    <p>ke</p>
    <p>S1:alarm-on and</p>
    <p>water valve-open</p>
    <p>S0:alarm-off</p>
    <p>S1</p>
    <p>S0</p>
    <p>S2 S2:sprinkleracQve</p>
    <p>Smoke-Alarm</p>
    <p>S0</p>
    <p>le ak</p>
    <p>S1:water valve-closed</p>
    <p>S0:water valve-open</p>
    <p>S1</p>
    <p>Water-Leak-Detector</p>
    <p>Does the sprinkler system acQve when there is a fire?</p>
    <p>Soteria</p>
  </div>
  <div class="page">
    <p>Soteria</p>
    <p>Soteria is a staQc analysis system that provides formal verificaQon by model checking of IoT apps</p>
    <p>Soteria</p>
    <p>Pass</p>
    <p>Fail</p>
    <p>IoT app source code</p>
    <p>Property idenQficaQon</p>
    <p>State-model</p>
    <p>Temporal logic</p>
    <p>Property</p>
    <p>ValidaQon</p>
    <p>Problem: IoT plaeorms cannot evaluate whether an IoT app or environment (collecQon of apps) is safe, secure, and operates correctly</p>
  </div>
  <div class="page">
    <p>State-model extracQon from source code</p>
    <p>What is state model?  States and transiQons  In IoT applicaQons - States: Device afributes - TransiQons: Events changing the afributes</p>
    <p>S1 S2 S3 S4</p>
    <p>Challenges  State-explosion problem  CondiQonal device afribute changes</p>
    <p>State-model of an example app</p>
    <p>Soteria</p>
  </div>
  <div class="page">
    <p>State reducQon</p>
    <p>Property AbstracQon: Reduce states by aggregaQng numerical-valued afributes</p>
    <p>def modeChangeHandler(evt){ def temp = 68 setTemp(temp) }</p>
    <p>u 5: 6: 7:</p>
    <p>def setTemp(t){ ther.setHeatingPoint(t) }</p>
    <p>w v</p>
    <p>(6: t)</p>
    <p>(6: t, 3: temp)</p>
    <p>(2: temp = 68)</p>
    <p>Worklist</p>
    <p>t=50 t=51 t=95 . . .</p>
    <p>Thermostat temperature Without property abstracQon</p>
    <p>t=68 t&lt;&gt;68</p>
    <p>Thermostat temperature With property abstracQon</p>
    <p>Soteria Soteria</p>
    <p>Soteria prunes infeasible paths using path- and context- sensiQvity</p>
  </div>
  <div class="page">
    <p>CondiQonal device afribute changes</p>
    <p>Add a transiQon using end states and path condiQons</p>
    <p>subscribe(presence, present, handler)</p>
    <p>// Entry point handler(){ above = 50 below = 5 power_val = get_power()</p>
    <p>if(power_val &gt; above){ switch.off() }</p>
    <p>if(power_val &lt; below){ switch.on() } }</p>
    <p>get_power(){ latest_pow=power_meter.currentValue(&quot;power&quot;) return latest_pow }</p>
    <p>Entry point</p>
    <p>power&lt;5</p>
    <p>Perform path exploraQon and accumulate path condiQons</p>
    <p>Soteria</p>
    <p>power&gt;50</p>
    <p>present S0 S1</p>
    <p>present S0 S1</p>
    <p>Without path exploraQon</p>
    <p>With path exploraQon</p>
    <p>power&lt;5</p>
  </div>
  <div class="page">
    <p>IoT safety/security property idenQficaQon</p>
    <p>The door must always be locked when the user is not home</p>
    <p>The refrigerator and security system must always be on</p>
    <p>The water valve must be closed if a leak is detected</p>
    <p>The alarm must always go off when there is smoke</p>
    <p>General properQes</p>
    <p>moQon-acQve switch-on</p>
    <p>Afributes of conflicQng values</p>
    <p>moQon-acQve switch-off</p>
    <p>App-specific properQes  Independent of apps semanQcs  IdenQfies use cases of one or more devices</p>
    <p>Property is a system arQfact that formally expressed via temporal logic and validated on the state-model</p>
    <p>Soteria</p>
    <p>moQon-acQve switch-on</p>
    <p>Race condiQon of events</p>
    <p>user-present switch-off 5</p>
  </div>
  <div class="page">
    <p>App1</p>
    <p>App2</p>
    <p>App3</p>
    <p>Property validaQon</p>
    <p>Individual apps</p>
    <p>MulQ-apps</p>
    <p>General properQes are verified at state-model extracQon Qme  App-specific properQes are validated through a model checker</p>
    <p>Apps onen interact through a common device</p>
    <p>smoke-detected switch-off switch-on</p>
    <p>away-mode switch-on home-mode</p>
    <p>door-unlocked door-locked home-mode</p>
    <p>Create a union state-model of interacQng apps</p>
    <p>Soteria Soteria</p>
    <p>home?</p>
    <p>Union state-model represents the complete behavior when running the mulQple apps together</p>
  </div>
  <div class="page">
    <p>EvaluaQon</p>
    <p>Apps* Nr. Unique Devices Avg/Max States</p>
    <p>Official 35 14 36/180</p>
    <p>Third-party 30 18 32/96</p>
    <p>*App funcQonality: Safety and security, green living, convenience, home automaQon, and personal care</p>
    <p>Implemented Soteria for SmartThings IoT plaeorm  Selected 65 SmartThings market apps with bias on popularity and access</p>
    <p>to various devices</p>
    <p>Soteria</p>
  </div>
  <div class="page">
    <p>Nine (14%) individual apps violate 10 (29%) properQes</p>
    <p>Findings - Individual app analysis</p>
    <p>App ID ViolaQon DescripQon Violated Property TP1 The music player is turned on when user is not at home P.13 TP2 The door is unlocked on sunrise and locked on sunset P.1</p>
    <p>TP3</p>
    <p>The locaQon is changed to the different modes when the switch is turned off and when the moQon is inacQve</p>
    <p>S.4</p>
    <p>TP4 The flood sensor sounds alarm when there is no water P.29 TP5 The music player turns on when the user is sleeping P.28 TP6 The lights turn on and turn off when nobody is at home P.13, S.1 TP7 The lights turn on and turn off when the icon of the app is tapped S.1</p>
    <p>TP8 The switch turns on and blinks lights when no user is present P.12</p>
    <p>TP9 The door is locked mulQple Qmes aner it is closed S.2 TP = Third-party</p>
    <p>S = General properQes P = App-specific properQes</p>
    <p>Soteria</p>
  </div>
  <div class="page">
    <p>17 (26%) apps interacQng in three groups and violate 11 (31%) properQes</p>
    <p>Findings - MulQ-app analysis</p>
    <p>Gr. ID App ID Event/AcQons Violated Pr.</p>
    <p>O3</p>
    <p>S.1, S.2, S.3 O4</p>
    <p>O8, TP12</p>
    <p>S.2, S.4 O9, O16, TP3 TP2</p>
    <p>O7, TP3</p>
    <p>P.12, P.13, P.14, P.17, S.1, S.2</p>
    <p>O30, TP21 O31, TP22</p>
    <p>O12, TP19</p>
    <p>contact sensor open switch-on contact sensor open switch-off contact sensor close switch-off contact sensor open switch-off contact sensor open switch-off</p>
    <p>moQon acQve switch-on app touch switch-on</p>
    <p>switch off change locaQon mode moQon inacQve switch-on</p>
    <p>locaQon mode change switch-off locaQon mode change switch-on locaQon mode change set thermostat heaQng locaQon mode change set thermostat cooling</p>
    <p>TP = Third-party, O = Official S = General properQes P = App-specific properQes</p>
    <p>Soteria</p>
  </div>
  <div class="page">
    <p>Model Checking</p>
    <p>Soteria  A system for formal verificaQon of IoT apps through model checking</p>
    <p>Soteria in acQon</p>
    <p>Source code</p>
    <p>WaterLeakDetector.dot [water.dry, valve.close]</p>
    <p>[water.wet, valve.close]</p>
    <p>water.wet</p>
    <p>water.wet</p>
    <p>[water.dry, valve.open]</p>
    <p>water.wet</p>
    <p>[water.wet, valve.open]</p>
    <p>water.wet</p>
    <p>State-model</p>
    <p>Output Stacktrace</p>
    <p>Property SMV format of the state-model</p>
    <p>Soteria</p>
    <p>secQon(&quot;Turn on a pump...&quot;) { input valve_device&quot;, &quot;capability.valve&quot;, Qtle: &quot;Which?&quot;, required: true } def installed() { subscribe(valve_device, &quot;water.wet&quot;, waterWetHandler) }</p>
    <p>// Permissions block input (water_sensor, waterSensor, type:device) input (valve_device, valve, type:device)</p>
    <p>water.wet  (AX valve.on)</p>
    <p>Using NuSMV symbolic model checker General properQes failed at state-model construcQon: none NuSMV &gt;&gt; read model ... NuSMV &gt;&gt; check property NuSMV &gt;&gt; true</p>
    <p>IR 1 2</p>
  </div>
  <div class="page">
    <p>V.1.0.1 Released May 2018</p>
    <p>security</p>
    <p>IoTBench</p>
    <p>hfps://github.com/IoTBench/</p>
  </div>
  <div class="page">
    <p>Thank you for listening!</p>
    <p>hfps://beerkay.github.io</p>
    <p>berkaycelik @ZBerkayCelik</p>
    <p>?</p>
  </div>
</Presentation>
