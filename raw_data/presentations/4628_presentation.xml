<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Full-System Power Analysis and Modeling</p>
    <p>for Server Environments</p>
    <p>D. Economou, S. Rivoire, C. Kozyrakis, P. Ranganathan</p>
    <p>Stanford University / HP Labs</p>
    <p>Workshop on Modeling, Benchmarking, and Simulation (MoBS)</p>
    <p>June 18, 2006</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Costs of power and cooling</p>
    <p>Electricity now ~50% of data center costs (ComputerWorld, 4/06)</p>
    <p>Data center cooling consumes ~1W per W consumed by system</p>
    <p>Power density and compaction</p>
    <p>Thermal failures</p>
    <p>10C temperature increase</p>
    <p>Environmental issues</p>
    <p>EnergyStar Enterprise Server and Data Center Efficiency Initiative, 2006</p>
  </div>
  <div class="page">
    <p>Goals: Prerequisites to Optimizing Power</p>
    <p>Understand server power</p>
    <p>Across different types of systems</p>
    <p>Component breakdowns</p>
    <p>Temporal variation</p>
    <p>Within and between workloads</p>
    <p>Develop model for server power</p>
    <p>Fast, online model deployable in a data center scheduler</p>
    <p>Zero hardware cost to the end user</p>
    <p>Input: accessible OS metrics; Output: good enough (within 5-10%)</p>
    <p>estimate of power</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Motivation</p>
    <p>Experimental setup</p>
    <p>Power characterization</p>
    <p>Power modeling</p>
    <p>Future work</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Test Machines</p>
    <p>Power-optimized blade server</p>
    <p>Low-power processor states</p>
    <p>Compute-optimized Itanium server</p>
    <p>Zero power-saving technology in processors</p>
    <p>Resources imbalanced in favor of processors</p>
    <p>Itanium ServerBlade Server</p>
  </div>
  <div class="page">
    <p>Measurement Infrastructure</p>
    <p>Component Power</p>
    <p>DAQ</p>
  </div>
  <div class="page">
    <p>Measurement Infrastructure</p>
    <p>Component Power</p>
    <p>DAQ</p>
    <p>System Under Test: Blade or Itanium server</p>
    <p>Runs benchmark + low-overhead performance monitors (e.g. sar, caliper) at 1</p>
    <p>sample/sec</p>
  </div>
  <div class="page">
    <p>Measurement Infrastructure</p>
    <p>Insert measurement between machine and wall to measure overall power</p>
    <p>Blade server: 1 sample/sec</p>
    <p>Itanium server: Currently 20 sample/sec</p>
    <p>Component Power</p>
    <p>DAQ</p>
  </div>
  <div class="page">
    <p>Measurement Infrastructure</p>
    <p>We cut into and instrumented the individual power planes of the servers, to capture</p>
    <p>component-level DC power (~20 samples/sec)</p>
    <p>This is NOT required for our model</p>
    <p>Component Power</p>
    <p>DAQ</p>
  </div>
  <div class="page">
    <p>Measurement Infrastructure</p>
    <p>Component Power</p>
    <p>DAQ</p>
    <p>PC: synchronizes measurements, collects data</p>
    <p>Performance metrics from system under test</p>
    <p>Overall power from AC power meter</p>
    <p>Component power from ADC</p>
    <p>Component Power</p>
    <p>DAQ</p>
  </div>
  <div class="page">
    <p>id le</p>
    <p>sp ec</p>
    <p>cp u</p>
    <p>in t</p>
    <p>sp ec</p>
    <p>cp u</p>
    <p>fp</p>
    <p>sp ec</p>
    <p>jb b</p>
    <p>sp ec</p>
    <p>w eb</p>
    <p>m at</p>
    <p>rix</p>
    <p>st re</p>
    <p>am</p>
    <p>fans + other disk pci io cpu0 cpu1 cpu2 cpu3 mem</p>
    <p>Power Characterization</p>
    <p>Blade Itanium</p>
    <p>Average DC power of components</p>
    <p>Benchmarks: idle, SPECint, SPECfp, SPECjbb, SPECweb, matrix</p>
    <p>multiply, streams</p>
  </div>
  <div class="page">
    <p>id le</p>
    <p>sp ec</p>
    <p>cp u</p>
    <p>in t</p>
    <p>sp ec</p>
    <p>cp u</p>
    <p>fp</p>
    <p>sp ec</p>
    <p>jb b</p>
    <p>sp ec</p>
    <p>w eb</p>
    <p>m at</p>
    <p>rix</p>
    <p>st re</p>
    <p>am</p>
    <p>fans + other disk pci io cpu0 cpu1 cpu2 cpu3 mem</p>
    <p>Power Characterization</p>
    <p>Blade Itanium</p>
    <p>Disk, net, fan, and misc components</p>
    <p>Non-negligible contributors to power</p>
    <p>Small variation in average power consumption (occasional</p>
    <p>spikes)</p>
  </div>
  <div class="page">
    <p>id le</p>
    <p>sp ec</p>
    <p>cp u</p>
    <p>in t</p>
    <p>sp ec</p>
    <p>cp u</p>
    <p>fp</p>
    <p>sp ec</p>
    <p>jb b</p>
    <p>sp ec</p>
    <p>w eb</p>
    <p>m at</p>
    <p>rix</p>
    <p>st re</p>
    <p>am</p>
    <p>fans + other disk pci io cpu0 cpu1 cpu2 cpu3 mem</p>
    <p>Power Characterization</p>
    <p>Blade Itanium</p>
    <p>Blade processor is the single largest consumer of power, although memory is close behind</p>
    <p>High variation in processor power consumption shows that blade is</p>
    <p>optimized for power</p>
  </div>
  <div class="page">
    <p>id le</p>
    <p>sp ec</p>
    <p>cp u</p>
    <p>in t</p>
    <p>sp ec</p>
    <p>cp u</p>
    <p>fp</p>
    <p>sp ec</p>
    <p>jb b</p>
    <p>sp ec</p>
    <p>w eb</p>
    <p>m at</p>
    <p>rix</p>
    <p>st re</p>
    <p>am</p>
    <p>fans + other disk pci io cpu0 cpu1 cpu2 cpu3 mem</p>
    <p>Power Characterization</p>
    <p>Blade Itanium</p>
    <p>100 W when idle??</p>
    <p>Not much variation (30%) between idle and max power in Itanium</p>
    <p>So the 4 processors dominate</p>
    <p>High variation in memory, percentage-wise</p>
  </div>
  <div class="page">
    <p>Power Characterization Conclusions</p>
    <p>Conventional wisdom</p>
    <p>After CPU, memory is the next bottleneck</p>
    <p>Lots of variation in CPU power if chip is optimized for power; otherwise</p>
    <p>runs near 100% at all times</p>
    <p>More surprising</p>
    <p>The assorted misc components  the arcane circuits on different power</p>
    <p>planes  really matter (~20% of blade power). Optimizing these may be</p>
    <p>worthwhile</p>
    <p>Disk contribution is relatively small</p>
    <p>Enormous idle power on the Itanium system</p>
  </div>
  <div class="page">
    <p>Power Modeling</p>
    <p>Goal: Develop an online model for use in data center schedulers</p>
    <p>Model requirements</p>
    <p>Full-system</p>
    <p>Non-intrusive; easy for end user</p>
    <p>Fast enough for online use</p>
    <p>Reasonably accurate (within 5-10%)</p>
    <p>Inexpensive</p>
    <p>Generic (applicable to different types of systems)</p>
  </div>
  <div class="page">
    <p>Power Modeling: Past Approaches</p>
    <p>Simulation-based detailed models</p>
    <p>Inexpensive, arbitrarily accurate</p>
    <p>Not full-system</p>
    <p>Tailored specifically to particular systems &amp; components</p>
    <p>Direct hardware measurements</p>
    <p>Accurate, fast, easy</p>
    <p>Expensive (especially over many machines)</p>
    <p>The Mantis Question</p>
    <p>Can high-level combined metrics give a good approximation?</p>
  </div>
  <div class="page">
    <p>Power Modeling</p>
    <p>Run one-time calibration scheme</p>
    <p>(possibly at vendor)</p>
    <p>Inputs: performance metrics, AC</p>
    <p>power measurements</p>
    <p>Workloads that stress individual</p>
    <p>components: CPU, memory, disk,</p>
    <p>network</p>
    <p>Fit model parameters to calibration</p>
    <p>data</p>
    <p>Linear model for simplicity</p>
    <p>Use model to predict power</p>
    <p>Inputs: performance metrics (as from</p>
    <p>sar or caliper) at each point in time</p>
    <p>Output: estimation of AC power at</p>
    <p>each point in time</p>
  </div>
  <div class="page">
    <p>Calibration</p>
    <p>Stress each system component in isolation to develop a model</p>
    <p>Used gamut program (J. Moore, 2005) to stress CPU, memory,</p>
    <p>disk, network at varying degrees of utilization</p>
    <p>Could use any program that can selectively stress components</p>
    <p>Gamut cant always stress each component to the absolute maximum</p>
    <p>Runs as a user program on top of the OS, so incomplete control of the</p>
    <p>hardware</p>
    <p>Getting CPU power to the absolute max. may require architectural</p>
    <p>knowledge</p>
    <p>Overheads (program and OS) prevent it from maxing out subsystems</p>
  </div>
  <div class="page">
    <p>Model Creation</p>
    <p>GOAL: Predict instantaneous power within 10% using a simple,</p>
    <p>fast model</p>
    <p>Inputs: OS-level utilization metrics + AC power for calibration suite</p>
    <p>Output: An equation which relates power to these metrics</p>
    <p>INPUT: Utilization metrics</p>
    <p>ucpu = CPU utilization (%)</p>
    <p>umem = Off-chip memory access count</p>
    <p>udisk = Hard disk I/O rate</p>
    <p>unet = Network I/O rate</p>
    <p>OUTPUT: For linear model, an equation of form</p>
    <p>inetidiskimemicpuipred uEuDuCuBAp</p>
    <p>,,,,, **** ++++=</p>
  </div>
  <div class="page">
    <p>Model Inputs</p>
    <p>Input is a matrix M, e.g.:</p>
    <p>And a vector pmeas, e.g.:</p>
    <p>...</p>
    <p>====</p>
    <p>====</p>
    <p>====</p>
    <p>tnettdisktmemtcpu</p>
    <p>tnettdisktmemtcpu</p>
    <p>tnettdisktmemtcpu</p>
    <p>netdiskmemcpu</p>
    <p>uuuu</p>
    <p>uuuu</p>
    <p>uuuu</p>
    <p>uuuuidle</p>
    <p>...</p>
    <p>=</p>
    <p>=</p>
    <p>=</p>
    <p>tmeas</p>
    <p>tmeas</p>
    <p>tmeas</p>
    <p>p</p>
    <p>p</p>
    <p>p</p>
  </div>
  <div class="page">
    <p>Model Creation</p>
    <p>LP solution: a vector of weights for each utilization metric</p>
    <p>Errors</p>
    <p>Objective: minimize absolute error of models over all calibration programs</p>
    <p>sMp pred</p>
    <p>rr =</p>
    <p>)(min 1</p>
    <p>=</p>
    <p>+  n</p>
    <p>N</p>
    <p>n</p>
    <p>n tt</p>
    <p>imeas</p>
    <p>imeasipred</p>
    <p>i p</p>
    <p>pp</p>
    <p>,</p>
    <p>,,</p>
    <p>=</p>
  </div>
  <div class="page">
    <p>Models Developed</p>
    <p>E (net)D (disk)C (mem)B (cpu)A (const)</p>
    <p>inetidiskimemicpuipred uEuDuCuBAp</p>
    <p>,,,,, **** ++++=</p>
    <p>Power prediction equation:</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>-6</p>
    <p>-4</p>
    <p>-2</p>
    <p>Itanium</p>
    <p>m at</p>
    <p>rix</p>
    <p>st re</p>
    <p>am</p>
    <p>S P</p>
    <p>E C</p>
    <p>jb b</p>
    <p>S P</p>
    <p>E C</p>
    <p>w eb</p>
    <p>S P</p>
    <p>E C</p>
    <p>in t</p>
    <p>S P</p>
    <p>E C</p>
    <p>fp</p>
    <p>Blade</p>
    <p>Itanium</p>
    <p>m at</p>
    <p>rix</p>
    <p>st re</p>
    <p>am</p>
    <p>S P E C jb</p>
    <p>b</p>
    <p>S P E C w eb</p>
    <p>S P E C in</p>
    <p>t</p>
    <p>S P E C fp</p>
    <p>Mean % Error 90th Percentile Absolute Error</p>
  </div>
  <div class="page">
    <p>m at</p>
    <p>rix</p>
    <p>st re</p>
    <p>am</p>
    <p>S P</p>
    <p>E C</p>
    <p>jb b</p>
    <p>S P</p>
    <p>E C</p>
    <p>w eb</p>
    <p>S P</p>
    <p>E C</p>
    <p>in t</p>
    <p>S P</p>
    <p>E C</p>
    <p>fp</p>
    <p>Blade</p>
    <p>Itanium</p>
    <p>-6</p>
    <p>-4</p>
    <p>-2</p>
    <p>Blade</p>
    <p>Itanium</p>
    <p>Evaluation</p>
    <p>m at</p>
    <p>rix</p>
    <p>st re</p>
    <p>am</p>
    <p>S P E C jb</p>
    <p>b</p>
    <p>S P E C w eb</p>
    <p>S P E C in</p>
    <p>t</p>
    <p>S P E C fp</p>
    <p>Mean % Error 90th Percentile Absolute Error</p>
    <p>Generic model works (within 10%) on 2 very different systems over a varied set of</p>
    <p>benchmarks</p>
  </div>
  <div class="page">
    <p>Applications and Future Work</p>
    <p>Improving models  Component-level modeling and validation</p>
    <p>Exploring nonlinear models</p>
    <p>Adding/replacing CPU utilization % with a generic measurement of ILP</p>
    <p>Data center resource provisioning  Estimate power costs at different granularities (server, enclosure, rack)</p>
    <p>Power-aware scheduling and mapping</p>
    <p>Data center thermal optimizations  Replace expensive external thermal sensors with Mantis estimates</p>
    <p>Generate data center thermal map</p>
    <p>Fan control  Dynamically set fan speed in response to estimated power</p>
    <p>With component-level models, turn on fans aimed at high-power components</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Goals:  Understand server power consumption</p>
    <p>Develop power model that can be used online in data centers</p>
    <p>Understanding server power  Quantitative component/temporal power breakdown</p>
    <p>Confirming conventional wisdom: CPU is biggest consumer, memory is next</p>
    <p>Need cooperation of software for low power</p>
    <p>Misc component is worth paying attention to</p>
    <p>Developing a power model  High-level metrics give a reasonable approximation of power</p>
    <p>Future work  Improve model (ILP metrics, non-linear models)</p>
    <p>Use model in a data center scheduler</p>
  </div>
</Presentation>
