<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Middleware for Gossip Protocols</p>
    <p>Michael Chow and Robbert van Renesse</p>
    <p>Cornell University</p>
  </div>
  <div class="page">
    <p>Mo:va:on</p>
    <p>Gossip protocols are highly robust  Problema:c when an error does occur</p>
    <p>E.g. Amazon S3  6 hours to fix an otherwise simple problem</p>
    <p>Want to offer a way to fix such problems without having to take down the en:re system</p>
  </div>
  <div class="page">
    <p>Contribu:ons</p>
    <p>Design, implementa:on, and analysis of gossip middleware that supports rapid code upda:ng</p>
  </div>
  <div class="page">
    <p>Talk Outline</p>
    <p>Versions and Deployments  Architecture  Evalua:on  Conclusion and Future Work</p>
  </div>
  <div class="page">
    <p>Talk Outline</p>
    <p>Versions and Deployments  Architecture  Evalua:on  Conclusion and Future Work</p>
  </div>
  <div class="page">
    <p>Versions and Deployments</p>
    <p>Modules: Gossip applica:on instances  Each module assigned a Deployment Number</p>
    <p>Iden:fies origina:ng node and :me of deployment  Used to determine whether or not nodes are running the correct version of the applica:on</p>
    <p>Does not correspond with code version</p>
  </div>
  <div class="page">
    <p>Versions and Deployments</p>
    <p>Code Version: v1 Code Deployment: d1</p>
    <p>Code Version: v2 Code Deployment: d2</p>
    <p>Code Version: v1 Code Deployment: d3</p>
    <p>Code Update</p>
    <p>Roll Back</p>
    <p>Initial Deployment</p>
  </div>
  <div class="page">
    <p>Talk Outline</p>
    <p>Code Upda:ng  Architecture  Evalua:on  Conclusion and Future Work</p>
  </div>
  <div class="page">
    <p>Architecture</p>
    <p>Core</p>
    <p>Module1</p>
    <p>Module2</p>
    <p>Core</p>
    <p>Module1</p>
    <p>Module3</p>
  </div>
  <div class="page">
    <p>Core</p>
    <p>Provides Module Management and Upda:ng  Core gossips deployment numbers and corresponding code versions</p>
    <p>Core itself cannot be updated this way  Challenge: keep core small  Approach: core leverages ongoing gossip between modules</p>
  </div>
  <div class="page">
    <p>Module Management</p>
    <p>Core maintains a configura:on file that contains:  List of Modules and current versions (iden:fied by hash codes of the class files)</p>
    <p>Deployment Number  Keeps track of which modules and corresponding versions are currently running</p>
    <p>Cores gossip Configura:on files</p>
  </div>
  <div class="page">
    <p>Gossip Media:on</p>
    <p>Core mediates gossip between modules  Two advantages</p>
  </div>
  <div class="page">
    <p>Backup Gossip</p>
    <p>Cores need to be able to update code even if all modules have failed</p>
    <p>Cores implement a rudimentary but robust gossip protocol  Sta:c list of rendezvous nodes  Intercepted membership hints from module gossip</p>
  </div>
  <div class="page">
    <p>Core</p>
    <p>Incoming Gossip Connections</p>
    <p>Hints Table</p>
    <p>Outgoing Gossip Connections</p>
    <p>To Modules From Modules</p>
  </div>
  <div class="page">
    <p>Examples of gossip interac:ons</p>
    <p>Normal case: core piggybacks deployment numbers and checks for matched modules</p>
    <p>Mismatched deployment numbers: core ini:ates code update</p>
    <p>Modules fail to gossip usefully: core gossips configura:on informa:on</p>
  </div>
  <div class="page">
    <p>Normal Case</p>
    <p>Core</p>
    <p>Module1 Deployment: d1</p>
    <p>Core</p>
    <p>Module1 Deployment: d1</p>
    <p>Node A Node B</p>
  </div>
  <div class="page">
    <p>Normal Case</p>
    <p>Core</p>
    <p>Module1 Deployment: d1</p>
    <p>Core</p>
    <p>Module1 Deployment: d1</p>
    <p>Node A Node B</p>
  </div>
  <div class="page">
    <p>Normal Case</p>
    <p>Core</p>
    <p>Module1 Deployment: d1</p>
    <p>Core</p>
    <p>Module1 Deployment: d1</p>
    <p>Node A Node B</p>
  </div>
  <div class="page">
    <p>Normal Case</p>
    <p>Core</p>
    <p>Module1 Deployment: d1</p>
    <p>Core</p>
    <p>Module1 Deployment: d1</p>
    <p>Node A Node B</p>
  </div>
  <div class="page">
    <p>Mismatched Deployment Numbers</p>
    <p>Core</p>
    <p>Module1 Deployment: d2</p>
    <p>Core</p>
    <p>Module1 Deployment: d1</p>
    <p>Node A Node B</p>
  </div>
  <div class="page">
    <p>Mismatched Deployment Numbers</p>
    <p>Core</p>
    <p>Module1 Deployment: d2</p>
    <p>Core</p>
    <p>Module1 Deployment: d1</p>
    <p>Node A Node B</p>
  </div>
  <div class="page">
    <p>Mismatched Deployment Numbers</p>
    <p>Core</p>
    <p>Module1 Deployment: d2</p>
    <p>Core</p>
    <p>Module1 Deployment: d1</p>
    <p>Request code update</p>
    <p>Node A Node B</p>
  </div>
  <div class="page">
    <p>Mismatched Deployment Numbers</p>
    <p>Core</p>
    <p>Module1 Deployment: d2</p>
    <p>Core</p>
    <p>Module1 Deployment: d2</p>
    <p>Node A Node B</p>
  </div>
  <div class="page">
    <p>Mismatched Deployment Numbers</p>
    <p>Core</p>
    <p>Module1 Deployment: d2</p>
    <p>Core</p>
    <p>Module1 Deployment: d2</p>
    <p>Node A Node B</p>
  </div>
  <div class="page">
    <p>Failure to Gossip usefully</p>
    <p>Core</p>
    <p>Module1 Deployment: d3</p>
    <p>Core</p>
    <p>Module1 Deployment: d1</p>
    <p>Node A Node B</p>
    <p>Exchange configuration deployment number</p>
  </div>
  <div class="page">
    <p>Failure to Gossip usefully</p>
    <p>Core</p>
    <p>Module1 Deployment: d3</p>
    <p>Core</p>
    <p>Module1 Deployment: d1</p>
    <p>Node A Node B</p>
    <p>Request code update</p>
  </div>
  <div class="page">
    <p>Failure to Gossip usefully</p>
    <p>Core</p>
    <p>Module1 Deployment: d3</p>
    <p>Core</p>
    <p>Module1 Deployment: d3</p>
    <p>Node A Node B</p>
  </div>
  <div class="page">
    <p>Talk Outline</p>
    <p>Code Upda:ng  Layered Architecture  Evalua:on  Conclusion and Future Work</p>
  </div>
  <div class="page">
    <p>Evalua:on</p>
    <p>Tested on 100 local instances with 10 serving as rendezvous servers</p>
    <p>Applica:on: A Simple Membership Protocol</p>
  </div>
  <div class="page">
    <p>Evalua:on</p>
    <p>How much overhead does the core add?</p>
  </div>
  <div class="page">
    <p>Evalua:on</p>
    <p>How long does it take to propagate code?</p>
  </div>
  <div class="page">
    <p>Evalua:on</p>
    <p>How long does it take to propagate code?</p>
    <p>Rendezvous nodes loaded with code</p>
  </div>
  <div class="page">
    <p>Evalua:on</p>
    <p>How long does it take to propagate code?</p>
    <p>Backup gossip in the background</p>
  </div>
  <div class="page">
    <p>Evalua:on</p>
    <p>How long does it take to propagate code?</p>
    <p>Application gossip picks up</p>
  </div>
  <div class="page">
    <p>Conclusion and Future Work</p>
    <p>Can we make the core smaller?  Can the core be updated?  Security  NAT Traversal as a layered service</p>
  </div>
  <div class="page">
    <p>Ques:ons?</p>
  </div>
  <div class="page">
    <p>Module Management</p>
    <p>Core provides the following public methods for module upda:ng:</p>
    <p>public String transferState() public void acceptState()</p>
    <p>transferState() acceptState()</p>
    <p>Module1 Deployment: d1</p>
    <p>Module1 Deployment: d2</p>
  </div>
</Presentation>
