<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>All Your Biases Belong To Us:</p>
    <p>Breaking RC4 in WPA-TKIP and TLS</p>
    <p>Mathy Vanhoef and Frank Piessens, KU Leuven</p>
    <p>USENIX Security 2015</p>
  </div>
  <div class="page">
    <p>RC4</p>
    <p>Intriguingly simple stream cipher</p>
    <p>WEP</p>
    <p>WPA-TKIP SSL / TLS PPP/MPPE</p>
    <p>And others ...</p>
  </div>
  <div class="page">
    <p>RC4</p>
    <p>Plaintext CiphertextKeystreamRC4</p>
    <p>Key</p>
    <p>Intriguingly simple stream cipher</p>
  </div>
  <div class="page">
    <p>Is RC4 still used?!</p>
    <p>ICSI Notary: TLS connections using RC4</p>
    <p>March 2013 Februari 2015 July 2015</p>
    <p>RC4 fallback not taken into account!</p>
  </div>
  <div class="page">
    <p>RC4 Fallback</p>
    <p>Client Server</p>
    <p>ClientHello: without RC4 Browser first tries without RC4</p>
    <p>ServerHello: use AES</p>
  </div>
  <div class="page">
    <p>Alert: Handshake Failed</p>
    <p>RC4 Fallback</p>
    <p>ClientHello: without RC4 Browser first tries without RC4</p>
    <p>If that fails</p>
    <p>Client Server</p>
  </div>
  <div class="page">
    <p>ClientHello: with RC4</p>
    <p>ServerHello: use RC4</p>
    <p>RC4 Fallback</p>
    <p>Client Server</p>
    <p>Alert: Handshake Failed</p>
    <p>ClientHello: without RC4 Browser first tries without RC4</p>
    <p>If that fails</p>
    <p>fallback to RC4</p>
  </div>
  <div class="page">
    <p>ClientHello: with RC4</p>
    <p>ServerHello: use RC4</p>
    <p>RC4 Fallback</p>
    <p>Client Server</p>
    <p>Alert: Handshake Failed</p>
    <p>ClientHello: without RC4 Browser first tries without RC4</p>
    <p>Forgeable by attacker!</p>
    <p>fallback to RC4</p>
    <p>13% estimate is a lower bound</p>
    <p>Force connection (which we assumed secure) to use RC4</p>
  </div>
  <div class="page">
    <p>Our Goal: further kill RC4</p>
    <p>New Biases Plaintext Recovery</p>
    <p>Break WPA-TKIP Attack HTTPS</p>
  </div>
  <div class="page">
    <p>First: Existing Biases</p>
    <p>Distribution keystream byte 2</p>
    <p>Pr  =  =</p>
  </div>
  <div class="page">
    <p>First: Existing Biases</p>
    <p>Distribution keystream byte 1 (to 256)</p>
  </div>
  <div class="page">
    <p>First: Existing Biases</p>
    <p>Distribution keystream byte 1 (to 256)</p>
    <p>AlFardan et al. 13:</p>
    <p>first 256 bytes biased</p>
    <p>Short-term biases</p>
  </div>
  <div class="page">
    <p>Long-Term Biases</p>
    <p>A B S A B</p>
    <p>Fluhrer-McGrew (2000):</p>
    <p>Some consecutive values are biased</p>
    <p>Examples: 0, 0 and (0,1)</p>
    <p>Mantins ABSAB Bias (2005):</p>
    <p>A byte pair (,) likely reappears</p>
  </div>
  <div class="page">
    <p>Fluhrer-McGrew: only 8 out</p>
    <p>of 65 536 pairs are biased</p>
    <p>Search for new biases</p>
    <p>Traditional emperical approach:</p>
    <p>Generate large amount of keystreams</p>
    <p>Manually inspect data or graph</p>
    <p>How to automate</p>
    <p>the search?</p>
  </div>
  <div class="page">
    <p>Search for new biases</p>
    <p>Hypothesis tests!</p>
    <p>Uniformly distributed: Chi-squared test.</p>
    <p>Correlated: M-test (detect outliers = biases)</p>
    <p>Traditional emperical approach:</p>
    <p>Generate large amount of keystreams</p>
    <p>Manually inspect data or graph</p>
    <p>Allows a large-scale search, revealing many new biases</p>
  </div>
  <div class="page">
    <p>Biases in Bytes 258-513</p>
    <p>Example: keystream byte 258</p>
  </div>
  <div class="page">
    <p>Biases in Bytes 258-513</p>
    <p>Example: keystream byte 320</p>
  </div>
  <div class="page">
    <p>Biases in Bytes 258-513</p>
    <p>Example: keystream byte 352</p>
    <p>Biases quickly</p>
    <p>become quite weak</p>
  </div>
  <div class="page">
    <p>New Long-term Bias</p>
    <p>(256,256+2) = (128, 0)</p>
    <p>with probability 216(1 + 28)</p>
    <p>Every block of 256 bytes</p>
  </div>
  <div class="page">
    <p>Additional Biases</p>
    <p>See paper!</p>
  </div>
  <div class="page">
    <p>Our Goal: further kill RC4</p>
    <p>New Biases Plaintext Recovery</p>
    <p>Break WPA-TKIP Attack HTTPS</p>
  </div>
  <div class="page">
    <p>Existing Methods [AlFardan et al. 13]</p>
    <p>Plaintext encrypted under</p>
    <p>several keystreams</p>
    <p>Ciphertext Distribution Plaintext guess  Induced keystream</p>
    <p>distribution</p>
    <p>Verify guess: how close to</p>
    <p>real keystream distribution?</p>
  </div>
  <div class="page">
    <p>Example: Decrypt byte 1</p>
    <p>Ciphertext Distribution</p>
  </div>
  <div class="page">
    <p>Example: Decrypt byte 1</p>
    <p>RC4 &amp; Ciphertext distribution</p>
  </div>
  <div class="page">
    <p>Example: Decrypt byte 1</p>
    <p>If plaintext byte  = 0x28: RC4 &amp; Induced</p>
    <p>= 0x28 has low likelihood</p>
  </div>
  <div class="page">
    <p>Example: Decrypt byte 1</p>
    <p>If plaintext byte  = 0x5C: RC4 &amp; Induced</p>
    <p>= 0x5C has higher likelihood</p>
  </div>
  <div class="page">
    <p>Example: Decrypt byte 1</p>
    <p>If plaintext byte  = 0x5A: RC4 &amp; Induced</p>
    <p>= 0x5A has highest likelihood!</p>
  </div>
  <div class="page">
    <p>Types of likelihood estimates</p>
    <p>Previous works: pick value with highest likelihood.</p>
    <p>Better idea: list of candidates in decreasing likelihood:</p>
    <p>Most likely one may not be correct!</p>
    <p>Prune bad candidates (e.g. bad CRC)</p>
    <p>Brute force cookies or passwords</p>
    <p>How to calculate list of candidates?</p>
  </div>
  <div class="page">
    <p>idea: Generate List of Candidatess</p>
    <p>Gist of the Algorithm: Incremental approach</p>
    <p>Calculate candidates of length 1, length 2, ...</p>
    <p>...</p>
  </div>
  <div class="page">
    <p>idea: abusing the ABSAB bias</p>
    <p>Assume theres surrounding known plaintext</p>
    <p>Derive values of A,B</p>
    <p>Combine with ABSAB bias to (probablisticly) predict A,B</p>
    <p>Ordinary likelihood calculation over only (A,B)</p>
    <p>A B S A B</p>
    <p>Known Plaintext Unknown Plaintext</p>
    <p>Likelihood estimate:</p>
    <p>!</p>
  </div>
  <div class="page">
    <p>Our Goal: further kill RC4</p>
    <p>New Biases Plaintext Recovery</p>
    <p>Break WPA-TKIP Attack HTTPS</p>
  </div>
  <div class="page">
    <p>TKIP Background</p>
    <p>How are packets sent/received?</p>
    <p>Encrypted</p>
    <p>MICDataIV CRC</p>
  </div>
  <div class="page">
    <p>Flaw #1: TKIP Per-packet Key</p>
    <p>Key-Mix</p>
    <p>Key Sender MAC</p>
    <p>packet key</p>
    <p>Anti-FMS(0, 1)</p>
    <p>-dependent biases in keystream [Gupta/Paterson et al.]</p>
    <p>Avoid weak keys which broke WEP</p>
  </div>
  <div class="page">
    <p>Flaw #2: MIC is invertible</p>
    <p>If decrypted, reveals MIC key</p>
    <p>MICDataIV CRC</p>
    <p>With the MIC key, an attacker can inject and</p>
    <p>decrypt some packets [AsiaCCS 13]</p>
  </div>
  <div class="page">
    <p>Goal: decrypt data and MIC</p>
    <p>If decrypted, reveals MIC key</p>
    <p>MICDataIV CRC</p>
    <p>Generate identical packets (otherwise MIC changes):</p>
    <p>Assume victim connects to server of attacker</p>
    <p>Retransmit identical TCP packet</p>
    <p>List of plaintext candidates (unknown MIC and CRC)</p>
    <p>Prune bad candidates based on CRC</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Simulations with 230 candidates:</p>
    <p>Need  224 captures to decrypt with high success rates</p>
    <p>Emperical tests:</p>
    <p>Server can inject 2 500 packets per second</p>
    <p>Roughly one hour to capture sufficient traffic</p>
    <p>Successfully decrypted packet &amp; found MIC key!</p>
  </div>
  <div class="page">
    <p>Our Goal: further kill RC4</p>
    <p>New Biases Plaintext Recovery</p>
    <p>Break WPA-TKIP Attack HTTPS</p>
  </div>
  <div class="page">
    <p>TLS Background</p>
    <p>Client Server</p>
    <p>Focus on record protocol with RC4 as cipher</p>
    <p>Handshake protocol</p>
    <p>Negotiate keys</p>
    <p>Record protocol</p>
    <p>Encrypt data</p>
  </div>
  <div class="page">
    <p>Targeting HTTPS Cookies</p>
    <p>Previous attacks only used Fluhrer-McGrew (FM) biases</p>
    <p>We combine FM bias with the ABSAB bias</p>
    <p>Must surround cookie with known plaintext</p>
  </div>
  <div class="page">
    <p>Example: manipulated HTTP request</p>
    <p>User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko</p>
    <p>Host: a.site.com</p>
    <p>Connection: Keep-Alive</p>
    <p>Cache-Control: no-cache</p>
    <p>Cookie: auth=????????????????; P=aaaaaaaaaaaaaaaaa</p>
    <p>Surrounded by known</p>
    <p>plaintext at both sides</p>
    <p>Headers are</p>
    <p>predictable</p>
  </div>
  <div class="page">
    <p>Preparation: manipulating cookies</p>
    <p>Clienta.site.com fake.site.com</p>
    <p>HTTPS insecure</p>
    <p>Remove &amp; inject</p>
    <p>secure cookies!</p>
  </div>
  <div class="page">
    <p>Performing the attack!</p>
  </div>
  <div class="page">
    <p>Performing the attack!</p>
  </div>
  <div class="page">
    <p>Performing the attack!</p>
  </div>
  <div class="page">
    <p>Decrypting 16-character cookie</p>
    <p>Takes 75 hours with 4450 requests / second</p>
    <p>Ciphertext copies times 227</p>
  </div>
  <div class="page">
    <p>Decrypting 16-character cookie</p>
    <p>DEMO! rc4nomore.com</p>
  </div>
  <div class="page">
    <p>Questions?</p>
    <p>May the bias be ever in your favor</p>
  </div>
</Presentation>
