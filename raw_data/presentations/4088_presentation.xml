<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Shedding too much Light on a Microcontrollers Firmware Protection</p>
    <p>Johannes Obermaier, Stefan Tatschner, August 15, 2017</p>
  </div>
  <div class="page">
    <p>Shedding too much Light on a Microcontrollers Firmware Protection</p>
    <p>Microcontrollers and Security</p>
    <p>The STM32 Security Concept</p>
    <p>Attacking the STM32 Security Concept Cold-Boot Stepping Security Downgrade Debug Interface Exploit</p>
    <p>Conclusion and Outlook</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 1  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Microcontrollers and Security Firmware Protection against Product Piracy</p>
    <p>Microcontrollers in a lot of applications  Firmware properties</p>
    <p>Contains intellectual property  Might be license-locked  Cryptographic keys are included</p>
    <p>Gaining access becomes more worthwhile  All firmware contents need to be protected!</p>
    <p>Due to insufficient protection, several systems have been broken in the past.</p>
    <p>Researchers have shown that security concepts have flaws, hidden functions, or backdoors.</p>
    <p>C Calibration</p>
    <p>Crypt. Keys</p>
    <p>Algorithms</p>
    <p>Product Piracy</p>
    <p>ManipulationCloning</p>
    <p>Licenses</p>
    <p>Intellectual Property</p>
    <p>Warranty</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 2  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Microcontrollers and Security Firmware Protection against Product Piracy</p>
    <p>Microcontrollers in a lot of applications  Firmware properties</p>
    <p>Contains intellectual property  Might be license-locked  Cryptographic keys are included</p>
    <p>Gaining access becomes more worthwhile  All firmware contents need to be protected!</p>
    <p>Due to insufficient protection, several systems have been broken in the past.</p>
    <p>Researchers have shown that security concepts have flaws, hidden functions, or backdoors.</p>
    <p>C Calibration</p>
    <p>Crypt. Keys</p>
    <p>Algorithms</p>
    <p>Product Piracy</p>
    <p>ManipulationCloning</p>
    <p>Licenses</p>
    <p>Intellectual Property</p>
    <p>Warranty</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 2  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Microcontrollers and Security Firmware Protection against Product Piracy</p>
    <p>Microcontrollers in a lot of applications  Firmware properties</p>
    <p>Contains intellectual property  Might be license-locked  Cryptographic keys are included</p>
    <p>Gaining access becomes more worthwhile  All firmware contents need to be protected!</p>
    <p>Due to insufficient protection, several systems have been broken in the past.</p>
    <p>Researchers have shown that security concepts have flaws, hidden functions, or backdoors.</p>
    <p>C Calibration</p>
    <p>Crypt. Keys</p>
    <p>Algorithms</p>
    <p>Product Piracy</p>
    <p>ManipulationCloning</p>
    <p>Licenses</p>
    <p>Intellectual Property</p>
    <p>Warranty</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 2  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Microcontrollers and Security The STM32 Series</p>
    <p>STM32: Divided into several families (F0, L0, F1, F2, . . . )</p>
    <p>Different capabilities and performance</p>
    <p>STM32F0: Entry-level / cost-efficient sub-series</p>
    <p>Used in commercial products</p>
    <p>ARM Cortex-M0 CPU core</p>
    <p>Integrated SRAM, Flash, Peripherals, . . .</p>
    <p>No JTAG, only SWD interface for debugging</p>
    <p>Easily available evaluation boards (+integrated debugger) STM32F0 discovery evaluation board</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 3  Fraunhofer</p>
  </div>
  <div class="page">
    <p>The STM32 Security Concept Flash Readout Protection Levels</p>
    <p>Three levels of security available for Readout Protection (RDP)</p>
    <p>Two bytes: nRDP and RDP</p>
    <p>nRDP ! = RDP (nRDP is bitwise complement of RDP)</p>
    <p>RDP Level 0: no protection (Default) Full system access incl. flash read/write</p>
    <p>RDP Level 1: read protection No access to flash memory</p>
    <p>RDP Level 2: no debug SWD interface permanently disabled</p>
    <p>But what about SRAM in RDP Level 1?</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 4  Fraunhofer</p>
  </div>
  <div class="page">
    <p>The STM32 Security Concept Flash Readout Protection Levels</p>
    <p>Three levels of security available for Readout Protection (RDP)</p>
    <p>Two bytes: nRDP and RDP</p>
    <p>nRDP ! = RDP (nRDP is bitwise complement of RDP)</p>
    <p>RDP Level 0: no protection (Default) Full system access incl. flash read/write</p>
    <p>RDP Level 1: read protection No access to flash memory</p>
    <p>RDP Level 2: no debug SWD interface permanently disabled</p>
    <p>nRDP RDP Protection 0x55 0xAA RDP Level 0</p>
    <p>Any other combination RDP Level 1 0x33 0xCC RDP Level 2</p>
    <p>Readout Protection Level Configuration</p>
    <p>But what about SRAM in RDP Level 1?</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 4  Fraunhofer</p>
  </div>
  <div class="page">
    <p>The STM32 Security Concept Flash Readout Protection Levels</p>
    <p>Three levels of security available for Readout Protection (RDP)</p>
    <p>Two bytes: nRDP and RDP</p>
    <p>nRDP ! = RDP (nRDP is bitwise complement of RDP)</p>
    <p>RDP Level 0: no protection (Default) Full system access incl. flash read/write</p>
    <p>RDP Level 1: read protection No access to flash memory</p>
    <p>RDP Level 2: no debug SWD interface permanently disabled</p>
    <p>nRDP RDP Protection 0x55 0xAA RDP Level 0</p>
    <p>Any other combination RDP Level 1 0x33 0xCC RDP Level 2</p>
    <p>Readout Protection Level Configuration</p>
    <p>But what about SRAM in RDP Level 1?</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 4  Fraunhofer</p>
  </div>
  <div class="page">
    <p>The STM32 Security Concept Readout Protection Storage</p>
    <p>nRDP RDP Protection 0x55 0xAA RDP Level 0</p>
    <p>Any other combination RDP Level 1 0x33 0xCC RDP Level 2</p>
    <p>RDP and nRDP: Stored in Option Bytes region</p>
    <p>Non-volatile memory for system configuration</p>
    <p>Option Bytes: Part of the flash memory</p>
    <p>Flash memory: Part of the systems memory map</p>
    <p>Security impact of flash data manipulation?</p>
    <p>Option Bytes</p>
    <p>Address</p>
    <p>nRDP RDPnUSER USER</p>
    <p>[31:24] [23:16] [15:8] [7:0]</p>
    <p>nDATA0 DATA0nDATA1 DATA1</p>
    <p>nWRP0 WRP0nWRP1 WRP1</p>
    <p>nWRP2 WRP2nWRP3 WRP3</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 5  Fraunhofer</p>
  </div>
  <div class="page">
    <p>The STM32 Security Concept Readout Protection Storage</p>
    <p>nRDP RDP Protection 0x55 0xAA RDP Level 0</p>
    <p>Any other combination RDP Level 1 0x33 0xCC RDP Level 2</p>
    <p>RDP and nRDP: Stored in Option Bytes region</p>
    <p>Non-volatile memory for system configuration</p>
    <p>Option Bytes: Part of the flash memory</p>
    <p>Flash memory: Part of the systems memory map</p>
    <p>Security impact of flash data manipulation?</p>
    <p>(mapped)</p>
    <p>Flash</p>
    <p>SRAM</p>
    <p>(reserved)</p>
    <p>Peripherals</p>
    <p>Firmware Flash</p>
    <p>(reserved)</p>
    <p>System Flash</p>
    <p>Option Bytes</p>
    <p>Option Bytes</p>
    <p>Address</p>
    <p>nRDP RDPnUSER USER</p>
    <p>[31:24] [23:16] [15:8] [7:0]</p>
    <p>nDATA0 DATA0nDATA1 DATA1</p>
    <p>nWRP0 WRP0nWRP1 WRP1</p>
    <p>nWRP2 WRP2nWRP3 WRP3</p>
    <p>Flash Memory System Memory</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 5  Fraunhofer</p>
  </div>
  <div class="page">
    <p>The STM32 Security Concept Readout Protection Storage</p>
    <p>nRDP RDP Protection 0x55 0xAA RDP Level 0</p>
    <p>Any other combination RDP Level 1 0x33 0xCC RDP Level 2</p>
    <p>RDP and nRDP: Stored in Option Bytes region</p>
    <p>Non-volatile memory for system configuration</p>
    <p>Option Bytes: Part of the flash memory</p>
    <p>Flash memory: Part of the systems memory map</p>
    <p>Security impact of flash data manipulation? 0x0000 0000 0x0800 0000</p>
    <p>(mapped)</p>
    <p>Flash</p>
    <p>SRAM</p>
    <p>(reserved)</p>
    <p>Peripherals</p>
    <p>Firmware Flash</p>
    <p>(reserved)</p>
    <p>System Flash</p>
    <p>Option Bytes</p>
    <p>Option Bytes</p>
    <p>Address</p>
    <p>nRDP RDPnUSER USER</p>
    <p>[31:24] [23:16] [15:8] [7:0]</p>
    <p>nDATA0 DATA0nDATA1 DATA1</p>
    <p>nWRP0 WRP0nWRP1 WRP1</p>
    <p>nWRP2 WRP2nWRP3 WRP3</p>
    <p>Flash Memory System Memory</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 5  Fraunhofer</p>
  </div>
  <div class="page">
    <p>The STM32 Security Concept Flash Protection Logic</p>
    <p>Complex system architecture</p>
    <p>Core and SWD use the same bus for flash access</p>
    <p>RDP Level 1 raises special interest: SWD active, but no flash access</p>
    <p>Very little information on flash locking mechanism</p>
    <p>How does it work?  When is the protection triggered?  Who manages the protection?</p>
    <p>Locking mechanism requires deep investigation and reverse engineering!</p>
    <p>SWD Interface</p>
    <p>ARM Cortex-M0</p>
    <p>System bus</p>
    <p>DMA bus</p>
    <p>DMA bus</p>
    <p>DMA 1 channels 1 to 7</p>
    <p>DMA 2 channels 1 to 5</p>
    <p>Bus matrix</p>
    <p>FLITF Flash interface</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>GPIO Ports</p>
    <p>AHB to APB bridge</p>
    <p>APB</p>
    <p>Various peripheralsAHB2</p>
    <p>AHB1</p>
    <p>STM32F0 system architecture Adapted from: STM32F051 Reference Manual (RM0091)</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 6  Fraunhofer</p>
  </div>
  <div class="page">
    <p>The STM32 Security Concept Flash Protection Logic</p>
    <p>Complex system architecture</p>
    <p>Core and SWD use the same bus for flash access</p>
    <p>RDP Level 1 raises special interest: SWD active, but no flash access</p>
    <p>Very little information on flash locking mechanism</p>
    <p>How does it work?  When is the protection triggered?  Who manages the protection?</p>
    <p>Locking mechanism requires deep investigation and reverse engineering!</p>
    <p>SWD Interface</p>
    <p>ARM Cortex-M0</p>
    <p>System bus</p>
    <p>DMA bus</p>
    <p>DMA bus</p>
    <p>DMA 1 channels 1 to 7</p>
    <p>DMA 2 channels 1 to 5</p>
    <p>Bus matrix</p>
    <p>FLITF Flash interface</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>GPIO Ports</p>
    <p>AHB to APB bridge</p>
    <p>APB</p>
    <p>Various peripheralsAHB2</p>
    <p>AHB1</p>
    <p>STM32F0 system architecture Adapted from: STM32F051 Reference Manual (RM0091)</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 6  Fraunhofer</p>
  </div>
  <div class="page">
    <p>The STM32 Security Concept Flash Protection Logic</p>
    <p>Complex system architecture</p>
    <p>Core and SWD use the same bus for flash access</p>
    <p>RDP Level 1 raises special interest: SWD active, but no flash access</p>
    <p>Very little information on flash locking mechanism</p>
    <p>How does it work?  When is the protection triggered?  Who manages the protection?</p>
    <p>Locking mechanism requires deep investigation and reverse engineering!</p>
    <p>SWD Interface</p>
    <p>ARM Cortex-M0</p>
    <p>System bus</p>
    <p>DMA bus</p>
    <p>DMA bus</p>
    <p>DMA 1 channels 1 to 7</p>
    <p>DMA 2 channels 1 to 5</p>
    <p>Bus matrix</p>
    <p>FLITF Flash interface</p>
    <p>Flash memory</p>
    <p>SRAM</p>
    <p>GPIO Ports</p>
    <p>AHB to APB bridge</p>
    <p>APB</p>
    <p>Various peripheralsAHB2</p>
    <p>AHB1</p>
    <p>STM32F0 system architecture Adapted from: STM32F051 Reference Manual (RM0091)</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 6  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept</p>
    <p>Microcontrollers and Security</p>
    <p>The STM32 Security Concept</p>
    <p>Attacking the STM32 Security Concept Cold-Boot Stepping Security Downgrade Debug Interface Exploit</p>
    <p>Conclusion and Outlook</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 7  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept</p>
    <p>Methodology</p>
    <p>Theoretical analysis of each security concept component</p>
    <p>Discovery of weaknesses, Proof-of-Concept for vulnerability</p>
    <p>Discussion of countermeasures</p>
    <p>Goal: Extraction of flash memory contents</p>
    <p>Three tasks for security testing</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 8  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept</p>
    <p>Methodology</p>
    <p>Theoretical analysis of each security concept component</p>
    <p>Discovery of weaknesses, Proof-of-Concept for vulnerability</p>
    <p>Discussion of countermeasures</p>
    <p>Goal: Extraction of flash memory contents</p>
    <p>Three tasks for security testing</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 8  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Cold-Boot Stepping</p>
    <p>RDP Level 1 often in use  On-field debugging  Possibility of failed-device analysis  OpenOCD support only for RDP Level 0+1</p>
    <p>Access permissions to non-flash memory / SRAM in RDP Level 1</p>
    <p>Microcontroller halted upon connecting a debugger</p>
    <p>Access to SRAM and peripherals allowed!</p>
    <p>Potential weakness!</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 9  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Cold-Boot Stepping</p>
    <p>RDP Level 1 often in use  On-field debugging  Possibility of failed-device analysis  OpenOCD support only for RDP Level 0+1</p>
    <p>Access permissions to non-flash memory / SRAM in RDP Level 1</p>
    <p>Microcontroller halted upon connecting a debugger</p>
    <p>Access to SRAM and peripherals allowed!</p>
    <p>Potential weakness!</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 9  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Cold-Boot Stepping</p>
    <p>Common bootloader implementation: Application CRC validation during startup</p>
    <p>Intermediate results in SRAM, Bytewise-CRC reversible  CRC source data extraction!</p>
    <p>Each CRC iteration takes T microseconds</p>
    <p>Start with n = 0</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 10  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Cold-Boot Stepping</p>
    <p>Common bootloader implementation: Application CRC validation during startup</p>
    <p>Intermediate results in SRAM, Bytewise-CRC reversible  CRC source data extraction!</p>
    <p>Each CRC iteration takes T microseconds</p>
    <p>Start with n = 0</p>
    <p>Assert Reset</p>
    <p>Power ON</p>
    <p>Deassert Reset</p>
    <p>n = n + 1</p>
    <p>Assert Reset</p>
    <p>Wait for n * T</p>
    <p>Start Debugger</p>
    <p>Deassert Reset</p>
    <p>Dump SRAM</p>
    <p>Power OFF</p>
    <p>Reset System</p>
    <p>Run System for n * T</p>
    <p>Dump Memory</p>
    <p>n = n + 1</p>
    <p>General method STM32F0x specific</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 10  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Proof of Concept</p>
    <p>Similar to a real (successful) penetration test</p>
    <p>Fully automized attack setup</p>
    <p>Device under Attack: Bootloader computing a CRC32</p>
    <p>Attack control board: Precise Exec.-Time Control</p>
    <p>Power Relay: Reset / Power cycle after each iteration</p>
    <p>On-Line CRC reversing, dynamic timing adjustment</p>
    <p>Extraction of seven bytes per minute</p>
    <p>Firmware extraction feasible, but slow  RDP Level 1 unable to protect firmware</p>
    <p>P o</p>
    <p>w e</p>
    <p>r S</p>
    <p>u p</p>
    <p>p ly</p>
    <p>Device under Aack</p>
    <p>Power</p>
    <p>Reset</p>
    <p>SWDIO</p>
    <p>SWCLK</p>
    <p>Debug IF ST-LINK</p>
    <p>STM32</p>
    <p>C</p>
    <p>Aack Control</p>
    <p>TX</p>
    <p>RX USB UART Adapter</p>
    <p>La p</p>
    <p>to p</p>
    <p>Power Relay</p>
    <p>Power Control</p>
    <p>U S</p>
    <p>B U</p>
    <p>S B</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 11  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Proof of Concept</p>
    <p>Similar to a real (successful) penetration test</p>
    <p>Fully automized attack setup</p>
    <p>Device under Attack: Bootloader computing a CRC32</p>
    <p>Attack control board: Precise Exec.-Time Control</p>
    <p>Power Relay: Reset / Power cycle after each iteration</p>
    <p>On-Line CRC reversing, dynamic timing adjustment</p>
    <p>Extraction of seven bytes per minute</p>
    <p>Firmware extraction feasible, but slow  RDP Level 1 unable to protect firmware</p>
    <p>P o</p>
    <p>w e</p>
    <p>r S</p>
    <p>u p</p>
    <p>p ly</p>
    <p>Device under Aack</p>
    <p>Power</p>
    <p>Reset</p>
    <p>SWDIO</p>
    <p>SWCLK</p>
    <p>Debug IF ST-LINK</p>
    <p>STM32</p>
    <p>C</p>
    <p>Aack Control</p>
    <p>TX</p>
    <p>RX USB UART Adapter</p>
    <p>La p</p>
    <p>to p</p>
    <p>Power Relay</p>
    <p>Power Control</p>
    <p>U S</p>
    <p>B U</p>
    <p>S B</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 11  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Proof of Concept</p>
    <p>Similar to a real (successful) penetration test</p>
    <p>Fully automized attack setup</p>
    <p>Device under Attack: Bootloader computing a CRC32</p>
    <p>Attack control board: Precise Exec.-Time Control</p>
    <p>Power Relay: Reset / Power cycle after each iteration</p>
    <p>On-Line CRC reversing, dynamic timing adjustment</p>
    <p>Extraction of seven bytes per minute</p>
    <p>Firmware extraction feasible, but slow  RDP Level 1 unable to protect firmware</p>
    <p>P o</p>
    <p>w e</p>
    <p>r S</p>
    <p>u p</p>
    <p>p ly</p>
    <p>Device under Aack</p>
    <p>Power</p>
    <p>Reset</p>
    <p>SWDIO</p>
    <p>SWCLK</p>
    <p>Debug IF ST-LINK</p>
    <p>STM32</p>
    <p>C</p>
    <p>Aack Control</p>
    <p>TX</p>
    <p>RX USB UART Adapter</p>
    <p>La p</p>
    <p>to p</p>
    <p>Power Relay</p>
    <p>Power Control</p>
    <p>U S</p>
    <p>B U</p>
    <p>S B</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 11  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Countermeasures against Cold-Boot Stepping</p>
    <p>Technical solution  Do not use RDP Level 1, use RDP Level 2 instead  Read the datasheet thoroughly (SRAM protection not claimed!)</p>
    <p>Mitigation / Increasing attack effort  Insert random delay / timing jitter  Move computations into CPU registers (weak, attack can be adapted)</p>
    <p>Increase Discoverability / Awareness, RDP Level 2 support  Created OpenOCD Patch Added RDP Level 2 support http://openocd.zylin.com/4111</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 12  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Security Downgrade</p>
    <p>16 bits to store RDP Level (3 possible configurations)</p>
    <p>In theory, high redundancy possible</p>
    <p>But: Non-optimal security design</p>
    <p>1 setting each maps to RDP Level 0 and 2</p>
    <p>65534 settings map to RDP Level 1</p>
    <p>Hamming-Distance Level 2 to 1: One single bit!</p>
    <p>Flipping any bit causes security downgrade!</p>
    <p>Includes non-complementary bytes</p>
    <p>Dangerous fallback!</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 13  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Security Downgrade</p>
    <p>16 bits to store RDP Level (3 possible configurations)</p>
    <p>In theory, high redundancy possible</p>
    <p>But: Non-optimal security design</p>
    <p>1 setting each maps to RDP Level 0 and 2</p>
    <p>65534 settings map to RDP Level 1</p>
    <p>Hamming-Distance Level 2 to 1: One single bit!</p>
    <p>Flipping any bit causes security downgrade!</p>
    <p>Includes non-complementary bytes</p>
    <p>Dangerous fallback!</p>
    <p>FF FF</p>
    <p>.... ....</p>
    <p>CB CC CD</p>
    <p>A9 AA AB</p>
    <p>FE FF</p>
    <p>.... ....</p>
    <p>Level 2</p>
    <p>Level 0</p>
    <p>Level 1</p>
    <p>RDPnRDP Flash Readout</p>
    <p>Protection</p>
    <p>HEX BIN RDPnRDP</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 13  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Security Downgrade</p>
    <p>16 bits to store RDP Level (3 possible configurations)</p>
    <p>In theory, high redundancy possible</p>
    <p>But: Non-optimal security design</p>
    <p>1 setting each maps to RDP Level 0 and 2</p>
    <p>65534 settings map to RDP Level 1</p>
    <p>Hamming-Distance Level 2 to 1: One single bit!</p>
    <p>Flipping any bit causes security downgrade!</p>
    <p>Includes non-complementary bytes</p>
    <p>Dangerous fallback!</p>
    <p>FF FF</p>
    <p>.... ....</p>
    <p>CB CC CD</p>
    <p>A9 AA AB</p>
    <p>FE FF</p>
    <p>.... ....</p>
    <p>Level 2</p>
    <p>Level 0</p>
    <p>Level 1</p>
    <p>RDPnRDP Flash Readout</p>
    <p>Protection</p>
    <p>HEX BIN RDPnRDP</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>....</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 13  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Reverse-Engineering the Flash Memory Layout</p>
    <p>UV-C light (254 nm wavelength) erases flash memory cells (01)</p>
    <p>Die access required  Acid decapsulation</p>
    <p>Experiment: Full-Chip UV-C illumination</p>
    <p>Successful downgrade from RDP Level 2 to 1</p>
    <p>Causes Firmware destruction  not useful</p>
    <p>Location of nRDP and RDP bytes unknown</p>
    <p>Masking not possible, yet</p>
    <p>Reverse-Engineering of Flash-Memory Layout</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 14  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Reverse-Engineering the Flash Memory Layout</p>
    <p>UV-C light (254 nm wavelength) erases flash memory cells (01)</p>
    <p>Die access required  Acid decapsulation</p>
    <p>Experiment: Full-Chip UV-C illumination</p>
    <p>Successful downgrade from RDP Level 2 to 1</p>
    <p>Causes Firmware destruction  not useful</p>
    <p>Location of nRDP and RDP bytes unknown</p>
    <p>Masking not possible, yet</p>
    <p>Reverse-Engineering of Flash-Memory Layout</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 14  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Reverse-Engineering the Flash Memory Layout</p>
    <p>UV-C light (254 nm wavelength) erases flash memory cells (01)</p>
    <p>Die access required  Acid decapsulation</p>
    <p>Experiment: Full-Chip UV-C illumination</p>
    <p>Successful downgrade from RDP Level 2 to 1</p>
    <p>Causes Firmware destruction  not useful</p>
    <p>Location of nRDP and RDP bytes unknown</p>
    <p>Masking not possible, yet</p>
    <p>Reverse-Engineering of Flash-Memory Layout</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 14  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Reverse-Engineering the Flash-Memory Layout + PoC</p>
    <p>Bisection method: Repeatedly cover a part of the flash</p>
    <p>Create simple mask (e.g., piece of plastic)</p>
    <p>Apply UV-C light, analyze flipped bits</p>
    <p>Firmware Flash Layout: 1024 bitlines, 512 wordlines</p>
    <p>nRDP + RDP in lower region</p>
    <p>Cover flash except nRDP + RDP</p>
    <p>Very few firmware errors down to no errors</p>
    <p>RDP Level 2 to 1 Security Downgrade possible! Weak RDP level design!</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 15  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Reverse-Engineering the Flash-Memory Layout + PoC</p>
    <p>Bisection method: Repeatedly cover a part of the flash</p>
    <p>Create simple mask (e.g., piece of plastic)</p>
    <p>Apply UV-C light, analyze flipped bits</p>
    <p>Firmware Flash Layout: 1024 bitlines, 512 wordlines</p>
    <p>nRDP + RDP in lower region</p>
    <p>Cover flash except nRDP + RDP</p>
    <p>Very few firmware errors down to no errors</p>
    <p>RDP Level 2 to 1 Security Downgrade possible! Weak RDP level design!</p>
    <p>W o</p>
    <p>rd li n</p>
    <p>e</p>
    <p>Bitline</p>
    <p>Bisection step, Blue dot = bitflip (Upper half covered)</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 15  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Reverse-Engineering the Flash-Memory Layout + PoC</p>
    <p>Bisection method: Repeatedly cover a part of the flash</p>
    <p>Create simple mask (e.g., piece of plastic)</p>
    <p>Apply UV-C light, analyze flipped bits</p>
    <p>Firmware Flash Layout: 1024 bitlines, 512 wordlines</p>
    <p>nRDP + RDP in lower region</p>
    <p>Cover flash except nRDP + RDP</p>
    <p>Very few firmware errors down to no errors</p>
    <p>RDP Level 2 to 1 Security Downgrade possible! Weak RDP level design!</p>
    <p>W o</p>
    <p>rd li n</p>
    <p>e</p>
    <p>Bitline</p>
    <p>Bisection step, Blue dot = bitflip (Upper half covered)</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 15  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Countermeasures against Security Downgrade</p>
    <p>Root-cause not fixable by user  Non-optimal protection level design  RDP Level 2 still recommended, raises the bar for the attacker</p>
    <p>Mitigation available  Check for RDP Level 2 during boot process  Stop firmware execution if not RDP Level 2, rewrite configuration  Prevents Cold-Boot Stepping after security downgrade  Negligible performance+memory overhead</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 16  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Debug Interface Exploit</p>
    <p>Goal: Analysis of the flash protection mechanism</p>
    <p>SWD access to flash prevented in RDP Level 1</p>
    <p>ST-LINK debugger triggers protection instantly</p>
    <p>Implement own SWD debugger  Less aggressive SWD interface initialization</p>
    <p>Only a (bus) access triggers flash lockdown!</p>
    <p>Digging deeper into the system. . .</p>
    <p>Anomaly: If the first bus access targets flash memory, valid data is sometimes returned!</p>
    <p>Flash Lock mechanism fails!</p>
    <p>Integrated ST-Link on Eval Board</p>
    <p>Independent ST-LINK (clone)</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 17  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Debug Interface Exploit</p>
    <p>Goal: Analysis of the flash protection mechanism</p>
    <p>SWD access to flash prevented in RDP Level 1</p>
    <p>ST-LINK debugger triggers protection instantly</p>
    <p>Implement own SWD debugger  Less aggressive SWD interface initialization</p>
    <p>Only a (bus) access triggers flash lockdown!</p>
    <p>Digging deeper into the system. . .</p>
    <p>Anomaly: If the first bus access targets flash memory, valid data is sometimes returned!</p>
    <p>Flash Lock mechanism fails!</p>
    <p>Device under Aack</p>
    <p>Reset SWDIO SWCLK</p>
    <p>STM32C</p>
    <p>SWD Firmware Extractor / DBG</p>
    <p>TX</p>
    <p>RX USB UART Adapter</p>
    <p>La p</p>
    <p>to p</p>
    <p>U S</p>
    <p>B</p>
    <p>GNDPower</p>
    <p>U S</p>
    <p>B</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 17  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Debug Interface Exploit</p>
    <p>Goal: Analysis of the flash protection mechanism</p>
    <p>SWD access to flash prevented in RDP Level 1</p>
    <p>ST-LINK debugger triggers protection instantly</p>
    <p>Implement own SWD debugger  Less aggressive SWD interface initialization</p>
    <p>Only a (bus) access triggers flash lockdown!</p>
    <p>Digging deeper into the system. . .</p>
    <p>Anomaly: If the first bus access targets flash memory, valid data is sometimes returned!</p>
    <p>Flash Lock mechanism fails!</p>
    <p>Device under Aack</p>
    <p>Reset SWDIO SWCLK</p>
    <p>STM32C</p>
    <p>SWD Firmware Extractor / DBG</p>
    <p>TX</p>
    <p>RX USB UART Adapter</p>
    <p>La p</p>
    <p>to p</p>
    <p>U S</p>
    <p>B</p>
    <p>GNDPower</p>
    <p>U S</p>
    <p>B</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 17  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Searching for the Root-Cause</p>
    <p>Issue not visible to ST-LINK debugger  Very verbose SWD initialization  Reading of system config, breakpoints, etc.  Flash lockdown triggered early</p>
    <p>Flash locking handled by flash module</p>
    <p>Success ratio: Dependant on bus load</p>
    <p>Instant bus arbitration required</p>
    <p>Race condition! Access vs. flash lockdown</p>
    <p>Lockdown signal arrives a few cycles too late 0</p>
    <p>q u ir e d r</p>
    <p>e a d a</p>
    <p>tt e m</p>
    <p>p ts</p>
    <p>Flash wait states</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 18  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Using the Exploit</p>
    <p>Exploitable for firmware extraction</p>
    <p>Access may fail  Retry  Readout at 45 bytes per second</p>
    <p>Practically feasible!</p>
    <p>[...] SWD RESET [!] Triggered AHB Read at 0x00000100 [OK] Read from 0x00000100: 0x12345678 [OK] SWD RESET [!] Triggered AHB Read at 0x00000104 [OK] Read from 0x00000104: 0xFFFFFFFF [ERROR] SWD RESET [!] Triggered AHB Read at 0x00000104 [OK] Read from 0x00000104: 0x0800E125 [OK] SWD RESET [!] Triggered AHB Read at 0x00000108 [OK] Read from 0x00000108: 0x2000014A [OK] SWD RESET [!] Triggered AHB Read at 0x0000010C [OK] Read from 0x0000010C: 0x200002A0 [OK] [...]</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 19  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Using the Exploit</p>
    <p>Exploitable for firmware extraction</p>
    <p>Access may fail  Retry  Readout at 45 bytes per second</p>
    <p>Practically feasible!</p>
    <p>[...] SWD RESET [!] Triggered AHB Read at 0x00000100 [OK] Read from 0x00000100: 0x12345678 [OK] SWD RESET [!] Triggered AHB Read at 0x00000104 [OK] Read from 0x00000104: 0xFFFFFFFF [ERROR] SWD RESET [!] Triggered AHB Read at 0x00000104 [OK] Read from 0x00000104: 0x0800E125 [OK] SWD RESET [!] Triggered AHB Read at 0x00000108 [OK] Read from 0x00000108: 0x2000014A [OK] SWD RESET [!] Triggered AHB Read at 0x0000010C [OK] Read from 0x0000010C: 0x200002A0 [OK] [...]</p>
    <p>Retry</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 19  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Proof of Concept</p>
    <p>Video: firmware-extraction.mp4 (see availability slide) Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 20  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Attacking the STM32 Security Concept Impact and Countermeasures</p>
    <p>RDP Level 1 security successfully leveraged!</p>
    <p>Affects STM32F0 only (no success for other series)  Dangerous for system security</p>
    <p>Combination of security downgrade + firmware extractor  Integrity of flash after downgrade not required anymore  Pulls down the requirements on an attacker</p>
    <p>Recommendation: Never use RDP Level 1  use Level 2  Requires the attacker to open the device</p>
    <p>Hope for a new hardware revision and fix</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 21  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Conclusion and Outlook</p>
    <p>Discovery of three major security issues in the STM32F0 series  Demonstration of their practical relevance  Presentation of countermeasures and limitations</p>
    <p>Further investigation necessary (other series, etc.)  Weaknesses perhaps already known to professional adversaries. . .</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 22  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Availability</p>
    <p>Supplemental materials include scripts, sources, and ELF files for:</p>
    <p>The device under attack (Sample data + CRC implementation)</p>
    <p>The timing control board (Cold-Boot Stepping)</p>
    <p>The Firmware Extractor (Debug Interface Exploit)</p>
    <p>The PoC Video for Firmware Extraction (firmware-extraction.mp4)</p>
    <p>Available under the MIT license at https://science.obermaier-johannes.de/</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 23  Fraunhofer</p>
  </div>
  <div class="page">
    <p>Contact Information</p>
    <p>Johannes Obermaier Stefan Tatschner</p>
    <p>Product Protection and Industrial Security</p>
    <p>Fraunhofer-Institute for Applied and Integrated Security (AISEC)</p>
    <p>Address: Parkring 4 85748 Garching (near Munich) Germany</p>
    <p>Internet: http://www.aisec.fraunhofer.de</p>
    <p>Phone: +49 89 3229986-176 E-Mail: johannes.obermaier@aisec.fraunhofer.de</p>
    <p>stefan.tatschner@aisec.fraunhofer.de</p>
    <p>Shedding too much Light on a Microcontrollers Firmware Protection | Johannes Obermaier, Stefan Tatschner | August 15, 2017 | 24  Fraunhofer</p>
  </div>
</Presentation>
