<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Comparison of bandwidth-sharing policies in a linear network</p>
    <p>Maaike Verloop (CWI)</p>
    <p>Urtzi Ayesta (LAAS-CNRS)</p>
    <p>and Sem Borst (TU/e, Bell Labs)</p>
    <p>ValueTools, 21 October 2008</p>
  </div>
  <div class="page">
    <p>Bandwidth-sharing networks</p>
    <p>Flow-level modeling of elastic data transfers over the Internet</p>
    <p>Data flows traverse several links on the path from their source to destination</p>
    <p>Link is represented by a node</p>
    <p>View network at flow level</p>
    <p>A flow gets simultaneously the same bandwidth in all links along its path</p>
    <p>.</p>
  </div>
  <div class="page">
    <p>Bandwidth-sharing networks</p>
    <p>Flow-level modeling of elastic data transfers over the Internet</p>
    <p>Data flows traverse several links on the path from their source to destination</p>
    <p>Link is represented by a node</p>
    <p>View network at flow level</p>
    <p>A flow gets simultaneously the same bandwidth in all links along its path</p>
    <p>Concentrate on one flow path</p>
  </div>
  <div class="page">
    <p>Model description: linear network</p>
    <p>node 1 node 2 node 3 node L</p>
    <p>class 0</p>
    <p>class 1 class 2 class 3 class L</p>
    <p>Class-i users arrive according to a renewal process with mean inter-arrival time 1</p>
    <p>i , i = 0, . . . , L</p>
    <p>Generally distributed service requirements with mean 1 i</p>
    <p>Load of class i: i = i/i  N i (t): number of class-i users at time t under policy  and</p>
    <p>W i (t): amount of work in class i at time t under policy</p>
    <p>si (t, ~N )  R(t) capacity given to class i at time t</p>
    <p>R(t) = {~s : s0 + si  Ci(t), i = 1, . . . , L}</p>
  </div>
  <div class="page">
    <p>Bandwidth-sharing mechanisms A policy  determines how to allocate the capacity of the links to all</p>
    <p>flows present in the network</p>
    <p>Internet: TCP determines implicit rate allocation through congestion</p>
    <p>control</p>
    <p>Some allocations: Weighted -fair policies, max-min, proportional</p>
    <p>fair, maximum throughput etc.</p>
    <p>Stability is ensured whenever possible (for  &gt; 0, exponentially distributed service requirements and fixed capacities)</p>
    <p>Metrics like delay, throughput, number of users in the system difficult to determine in general</p>
    <p>Objective of the talk: Compare the performance under various</p>
    <p>bandwidth-sharing policies in the linear network</p>
  </div>
  <div class="page">
    <p>Outline of the talk  Linear network</p>
    <p>sample-path comparison result of policies</p>
    <p>performance: stability and mean number of users</p>
    <p>Special case: single node with two classes  monotonicity with respect to the weights for DPS and GPS</p>
    <p>Weighted -fair policies  monotonicity results w.r.t. fairness parameter  and the weights:</p>
    <p>stability and mean number of users</p>
    <p>heavy-traffic regime</p>
    <p>numerical results</p>
    <p>Conclusion and future work</p>
  </div>
  <div class="page">
    <p>Sample-path comparison result</p>
    <p>Property: Let  and  be two policies such that</p>
    <p>s0 ( ~N )  s0 ( ~N ),</p>
    <p>and either s0 ( ~N ) or s0 (</p>
    <p>~N ) is non-increasing w.r.t. Ni, i 6= 0.</p>
    <p>The property states that higher priority is given to class 0 under policy</p>
    <p>compared to .</p>
    <p>node 1 node 2 node 3 node L</p>
    <p>class 0</p>
    <p>class 1 class 2 class 3 class L</p>
  </div>
  <div class="page">
    <p>Sample-path comparison result</p>
    <p>Property: Let  and  be two policies such that</p>
    <p>s0 ( ~N )  s0 ( ~N ),</p>
    <p>and either s0 ( ~N ) or s0 (</p>
    <p>~N ) is non-increasing w.r.t. Ni, i 6= 0.</p>
  </div>
  <div class="page">
    <p>Sample-path comparison result</p>
    <p>Property: Let  and  be two policies such that</p>
    <p>s0 ( ~N )  s0 ( ~N ),</p>
    <p>and either s0 ( ~N ) or s0 (</p>
    <p>~N ) is non-increasing w.r.t. Ni, i 6= 0.</p>
    <p>Proposition:</p>
    <p>Consider the same realizations of the arrival processes and service requirements.</p>
    <p>Intra-class policy is FCFS.</p>
    <p>If ~W (0) = ~W (0), then</p>
    <p>i) N 0 (t)  N 0 (t) and W 0 (t)  W 0 (t),</p>
    <p>ii) W 0 (t) + W  i (t)  W 0 (t) + W i (t)</p>
  </div>
  <div class="page">
    <p>Relation with stochastic comparison results in [Massey87]</p>
    <p>The necessary and sufficient conditions on the policies  and  to</p>
    <p>obtain</p>
    <p>{N 0 (t)}t0 st {N 0 (t)}t0,</p>
    <p>for any two ordered initial states N 0 (0)  N 0 (0), are</p>
    <p>s0 ( ~N )  s0 ( ~N ) when N 0 = N 0 .</p>
    <p>For bandwidth-sharing policies in the linear network this often does</p>
    <p>not hold. Since if N i  , i 6= 0, then s0 ( ~N )  0.</p>
  </div>
  <div class="page">
    <p>Performance</p>
    <p>From the sample-path comparison result, we obtain the following</p>
    <p>Proposition:</p>
    <p>If L</p>
    <p>i=1</p>
    <p>cii  c00,</p>
    <p>then L</p>
    <p>i=0</p>
    <p>ciE(N  i (t))</p>
    <p>L</p>
    <p>i=0</p>
    <p>ciE(N  i (t)),  t  0.</p>
  </div>
  <div class="page">
    <p>Application: Single node with time-varying capacity and two classes</p>
    <p>GPS allocation</p>
    <p>s GP S() i (</p>
    <p>~N ) = C(t)  i</p>
    <p>11(N1&gt;0) + 21(N2&gt;0) , i = 1, 2</p>
    <p>Intra-class policy is FCFS</p>
    <p>DPS allocation</p>
    <p>s DP S() i (</p>
    <p>~N ) = C(t)  iNi</p>
    <p>1N1 + 2N2 , i = 1, 2</p>
    <p>Intra-class policy is PS</p>
    <p>Remark: For exponentially distributed service requirements the</p>
    <p>stochastic behavior of the system does not depend on the</p>
    <p>non-anticipating policy (like PS, FCFS, . . .) chosen.</p>
  </div>
  <div class="page">
    <p>Application: DPS and GPS</p>
    <p>Proposition: Let 1 &lt; 1. Consider the same realizations of the</p>
    <p>arrival processes and service requirements for both processes.</p>
    <p>GPS: for generally distributed service requirements:</p>
    <p>W GP S() 1 (t)  W</p>
    <p>GP S() 1 (t) and N</p>
    <p>GP S() 1 (t)  N</p>
    <p>GP S() 1 (t).</p>
    <p>The opposite inequalities hold for class 2.</p>
  </div>
  <div class="page">
    <p>Application: DPS and GPS</p>
    <p>Proposition: Let 1 &lt; 1. Consider the same realizations of the</p>
    <p>arrival processes and service requirements for both processes.</p>
    <p>GPS: for generally distributed service requirements:</p>
    <p>W GP S() 1 (t)  W</p>
    <p>GP S() 1 (t) and N</p>
    <p>GP S() 1 (t)  N</p>
    <p>GP S() 1 (t).</p>
    <p>DPS: for exponentially distributed service requirements:</p>
    <p>{W DP S()1 (t)}t st {W DP S() 1 (t)}t, and</p>
    <p>{N DP S()1 (t)}t st {N DP S() 1 (t)}t.</p>
    <p>The opposite inequalities hold for class 2.</p>
  </div>
  <div class="page">
    <p>Application: DPS and GPS (cont)</p>
    <p>Proposition: Let 1 &lt; 1.</p>
    <p>Assume exponentially distributed service requirements with</p>
    <p>c11  c22.</p>
    <p>Then for all t  0 2</p>
    <p>i=1</p>
    <p>ciE(N GP S() i (t))</p>
    <p>i=1</p>
    <p>ciE(N GP S() i (t))</p>
    <p>and 2</p>
    <p>i=1</p>
    <p>ciE(N DP S() i (t))</p>
    <p>i=1</p>
    <p>ciE(N DP S() i (t))</p>
  </div>
  <div class="page">
    <p>Application to linear network: Weighted -fair policies</p>
    <p>node 1 node 2 node 3 node L</p>
    <p>class 0</p>
    <p>class 1 class 2 class 3 class L</p>
    <p>The weighted- fair allocation is the solution to the following optimization problem:</p>
    <p>max~sR(t) L</p>
    <p>i=0 wiNi</p>
    <p>(</p>
    <p>si Ni</p>
    <p>)1 /(1  ) if  6= 1</p>
    <p>max~sR(t) L</p>
    <p>i=0 wiNi log si if  = 1.</p>
    <p>Intra-class policy is Processor Sharing. Assume exponentially distributed service requirements.</p>
    <p>results for general setting with FCFS can be used</p>
  </div>
  <div class="page">
    <p>Weighted -fair policies (cont.)</p>
    <p>Varying  we obtain:   0 maximum throughput,  = 1 Proportional Fairness,    max-min fairness,  = 2 approximates TCP.</p>
    <p>There exist congestion control algorithms that realize -fair policies in a decentralized way</p>
    <p>For fixed capacities and  &gt; 0, stability is ensured whenever possible [BM01]</p>
  </div>
  <div class="page">
    <p>Application: Weighted -fair policies (cont)</p>
    <p>For a given  and weights w = (w0, w1, . . . , wL) denote the policy</p>
    <p>by ,w and the allocation vector by ~s(,w)( ~N ).</p>
    <p>We have</p>
    <p>(i) s (,w) 0 (</p>
    <p>~N ) is non-increasing in Ni, i = 1, ..., L</p>
    <p>(ii) s (,w) 0 (</p>
    <p>~N )  s(,w)0 ( ~N ), if</p>
    <p>(iii) s (,w) 0 (</p>
    <p>~N )  s(,w)0 ( ~N ), if w0 wi</p>
    <p>w0 wi</p>
    <p>Hence, the property holds for ,w and ,w, with  and w0 wi</p>
    <p>w0 wi</p>
    <p>We obtain insights into the performance of these policies in linear</p>
    <p>networks</p>
  </div>
  <div class="page">
    <p>Stability results for the linear network</p>
    <p>Exponentially distributed service requirements</p>
    <p>Corollary: Let    and w0 wi</p>
    <p>w0 wi</p>
    <p>, i = 1, . . . , L.</p>
    <p>If policy ,w is stable, then policy ,w is stable.</p>
  </div>
  <div class="page">
    <p>Stability results for the linear network</p>
    <p>Exponentially distributed service requirements</p>
    <p>Corollary: Let    and w0 wi</p>
    <p>w0 wi</p>
    <p>, i = 1, . . . , L.</p>
    <p>If policy ,w is stable, then policy ,w is stable.</p>
    <p>In [Liu et al., 2007] it is shown that the stability region is decreasing</p>
    <p>in  (wi = 1).</p>
  </div>
  <div class="page">
    <p>Stability results for the linear network</p>
    <p>Exponentially distributed service requirements</p>
    <p>Corollary: Let    and w0 wi</p>
    <p>w0 wi</p>
    <p>, i = 1, . . . , L.</p>
    <p>If policy ,w is stable, then policy ,w is stable.</p>
    <p>In [Liu et al., 2007] it is shown that the stability region is decreasing</p>
    <p>in  (wi = 1).</p>
    <p>Corollary: Assume Poisson arrivals and that (C1(t), . . . , CL(t)) can</p>
    <p>be in a finite number of states and evolves as a stationary and ergodic</p>
    <p>process, with Ci the average of Ci(t).</p>
    <p>Policy ,w with wi  w0, i = 1, . . . , L is stable if 0 + i &lt; Ci, i</p>
  </div>
  <div class="page">
    <p>Mean number of users: linear network</p>
    <p>Proposition: Assume exponentially distributed service requirements</p>
    <p>with L</p>
    <p>i=1 cii  c00. If  and w0 wi</p>
    <p>w0 wi</p>
    <p>, then</p>
    <p>L</p>
    <p>i=0</p>
    <p>ciE(N ,w</p>
    <p>i (t))  L</p>
    <p>i=0</p>
    <p>ciE(N ,w</p>
    <p>i (t)),  t  0.</p>
  </div>
  <div class="page">
    <p>Mean number of users: linear network</p>
    <p>Proposition: Assume exponentially distributed service requirements</p>
    <p>with L</p>
    <p>i=1 cii  c00. If  and w0 wi</p>
    <p>w0 wi</p>
    <p>, then</p>
    <p>L</p>
    <p>i=0</p>
    <p>ciE(N ,w</p>
    <p>i (t))  L</p>
    <p>i=0</p>
    <p>ciE(N ,w</p>
    <p>i (t)),  t  0.</p>
    <p>Natural choice for weights: c0 = L, ci = 1, i = 1, . . . , L.</p>
    <p>The condition L</p>
    <p>i=1 cii  c00 becomes</p>
    <p>L</p>
    <p>L</p>
    <p>i=1</p>
    <p>i  0,</p>
    <p>i.e. departure rate of class 0 is larger than or equal to the average</p>
    <p>departure rate of classes 1, . . . , L</p>
  </div>
  <div class="page">
    <p>Uncovered case</p>
    <p>If L</p>
    <p>i=1 cii &gt; c00, then no such result holds.</p>
    <p>Trade-off:</p>
    <p>More preference to classes 1, . . . , L  increases the instantaneous departure rate</p>
    <p>uses the capacity of the network less efficiently</p>
  </div>
  <div class="page">
    <p>Heavy-traffic regime</p>
    <p>Consider the diffusion scaled processes</p>
    <p>n k,() i (t) :=</p>
    <p>N  ,~1</p>
    <p>i (kt) k</p>
    <p>, i = 0, 1, 2</p>
    <p>v k,() i (t) = n</p>
    <p>k,() 0 (t)/0 + n</p>
    <p>k,() i (t)/i, i = 1, 2.</p>
    <p>v k,() i (t)  total workload in node i</p>
  </div>
  <div class="page">
    <p>Heavy-traffic regime</p>
    <p>Consider the diffusion scaled processes</p>
    <p>n k,() i (t) :=</p>
    <p>N  ,~1</p>
    <p>i (kt) k</p>
    <p>, i = 0, 1, 2</p>
    <p>v k,() i (t) = n</p>
    <p>k,() 0 (t)/0 + n</p>
    <p>k,() i (t)/i, i = 1, 2.</p>
    <p>v k,() i (t)  total workload in node i</p>
    <p>In [Kang et al, 2007] it is conjectured that ~vk,()(t) d ~v()(t),</p>
    <p>k  , with ~v()(t) a semimartingale reflecting Brownian motion living in a workload cone.</p>
  </div>
  <div class="page">
    <p>Heavy-traffic regime</p>
    <p>Consider the diffusion scaled processes</p>
    <p>n k,() i (t) :=</p>
    <p>N  ,~1</p>
    <p>i (kt) k</p>
    <p>, i = 0, 1, 2</p>
    <p>v k,() i (t) = n</p>
    <p>k,() 0 (t)/0 + n</p>
    <p>k,() i (t)/i, i = 1, 2.</p>
    <p>v k,() i (t)  total workload in node i</p>
    <p>In [Kang et al, 2007] it is conjectured that ~vk,()(t) d ~v()(t),</p>
    <p>k  , with ~v()(t) a semimartingale reflecting Brownian motion living in a workload cone.</p>
    <p>Two-node linear network: workload cone is independent of</p>
  </div>
  <div class="page">
    <p>Heavy-traffic regime (cont)</p>
    <p>Proposition: Assume i + 0 = Ci, i = 1, 2.</p>
    <p>If c11 + c22 &lt; c00, then E( 2</p>
    <p>i=0 cin () i (t)) is strictly</p>
    <p>decreasing in .</p>
    <p>If c11 + c22 = c00, then E( 2</p>
    <p>i=0 cin () i (t)) is constant in</p>
    <p>.</p>
    <p>If c11 + c22 &gt; c00, then E( 2</p>
    <p>i=0 cin () i (t)) is strictly</p>
    <p>increasing in .</p>
    <p>L</p>
    <p>i=0</p>
    <p>cin () i (t)</p>
    <p>d =</p>
    <p>c00  2</p>
    <p>i=1 cii 0</p>
    <p>n () 0 (t) +</p>
    <p>i=1</p>
    <p>ciiv () i (t).</p>
  </div>
  <div class="page">
    <p>Numerical results I</p>
    <p>E (N</p>
    <p>)</p>
    <p>0 =0.3,</p>
    <p>0 =0.2</p>
    <p>0 =0.4</p>
    <p>0 =0.6</p>
    <p>0 =0.8</p>
    <p>0 =1.2</p>
    <p>0 =1.6</p>
    <p>0 =2</p>
  </div>
  <div class="page">
    <p>Numerical results II</p>
    <p>0</p>
    <p>E (N</p>
    <p>)</p>
    <p>0 =0.3,</p>
    <p>=0 =0.2 =0.5 =0.7 =1 =1.5 =2 =10 =</p>
  </div>
  <div class="page">
    <p>Conclusion and future work</p>
    <p>Single server with more than 2 classes</p>
    <p>Extend to different topologies like star or grid network</p>
    <p>Monotonicity in 0.</p>
  </div>
  <div class="page">
    <p>Comparison of bandwidth-sharing policies in a linear network</p>
    <p>Maaike Verloop (CWI)</p>
    <p>Urtzi Ayesta (LAAS-CNRS)</p>
    <p>and Sem Borst (TU/e, Bell Labs)</p>
    <p>ValueTools, 21 October 2008</p>
  </div>
  <div class="page">
    <p>Intuition Let Si (t) :=</p>
    <p>t</p>
    <p>u=0 si (</p>
    <p>~N (u))du, be the cumulative amount of</p>
    <p>service received by class i during [0, t).</p>
    <p>Property: Class 0 is given more priority under policy  than under</p>
    <p>(i) S0 (t)  S0 (t) (ii) S0 (t) + S</p>
    <p>i (t)  S0 (t) + Si (t), since  gives more priority to</p>
    <p>class 0 and hence makes better use of the available capacity of</p>
    <p>the network.</p>
    <p>Not trivial:</p>
    <p>Giving higher priority to class 0 implies that classes 1 and 2 will</p>
    <p>contain more users. Hence, class 0 receives less service later on.</p>
  </div>
  <div class="page">
    <p>Intuition</p>
    <p>Let Si (t) :=  t</p>
    <p>u=0 si (</p>
    <p>~N (u))du, be the cumulative amount of</p>
    <p>service received by class i during [0, t).</p>
    <p>Property: Class 0 is given more priority under policy  than under</p>
    <p>(i) S0 (t)  S0 (t)</p>
    <p>(ii) S0 (t) + S  i (t)  S0 (t) + Si (t)</p>
  </div>
  <div class="page">
    <p>Intuition</p>
    <p>Let Si (t) :=  t</p>
    <p>u=0 si (</p>
    <p>~N (u))du, be the cumulative amount of</p>
    <p>service received by class i during [0, t).</p>
    <p>Property: Class 0 is given more priority under policy  than under</p>
    <p>(i) S0 (t)  S0 (t)</p>
    <p>(ii) S0 (t) + S  i (t)  S0 (t) + Si (t)</p>
    <p>Hence,</p>
    <p>(i) N 0 (t)  N 0 (t), and W 0 (t)  W 0 (t),</p>
    <p>(ii) W 0 (t) + W  i (t)  W 0 (t) + W i (t).</p>
  </div>
  <div class="page">
    <p>Proof:</p>
    <p>N 0 (t)  N 0 (t)  E(N 0 (t))  E(N 0 (t))</p>
  </div>
  <div class="page">
    <p>Proof:</p>
    <p>N 0 (t)  N 0 (t)  E(N 0 (t))  E(N 0 (t))</p>
    <p>W 0 (t) + W i (t)  W 0 (t) + W i (t)</p>
    <p>E(W 0 (t)) + E(W i (t))  E(W 0 (t)) + E(W i (t))</p>
  </div>
  <div class="page">
    <p>Proof:</p>
    <p>N 0 (t)  N 0 (t)  E(N 0 (t))  E(N 0 (t))</p>
    <p>W 0 (t) + W i (t)  W 0 (t) + W i (t)</p>
    <p>E(W 0 (t)) + E(W i (t))  E(W 0 (t)) + E(W i (t))</p>
    <p>Intra-class policy is FCFS and exponentially service req.  E(Wi(t)) = 1i E(Ni(t)), and hence</p>
    <p>0 E(N 0 (t)) +</p>
    <p>i E(N i (t))</p>
    <p>0 E(N 0 (t)) +</p>
    <p>i E(N i (t)).</p>
  </div>
  <div class="page">
    <p>We have E(N 0 (t))  E(N 0 (t)) and 1 0</p>
    <p>E(N 0 (t)) + 1 i</p>
    <p>E(N i (t))  10 E(N  0 (t)) +</p>
    <p>E(N i (t)).</p>
  </div>
  <div class="page">
    <p>We have E(N 0 (t))  E(N 0 (t)) and 1 0</p>
    <p>E(N 0 (t)) + 1 i</p>
    <p>E(N i (t))  10 E(N  0 (t)) +</p>
    <p>E(N i (t)).</p>
    <p>Since L</p>
    <p>i=1 cii  c00, we obtain L</p>
    <p>i=0</p>
    <p>ciE(N  i (t))</p>
    <p>= c00</p>
    <p>L i=1 cii</p>
    <p>0 E(N 0 (t)) +</p>
    <p>L</p>
    <p>i=1</p>
    <p>cii</p>
    <p>(</p>
    <p>0 E(N 0 (t)) +</p>
    <p>i E(N i (t))</p>
    <p>)</p>
    <p>c00</p>
    <p>L i=1 cii</p>
    <p>0 E(N 0 (t)) +</p>
    <p>L</p>
    <p>i=1</p>
    <p>cii</p>
    <p>(</p>
    <p>0 E(N 0 (t)) +</p>
    <p>i E(N i (t))</p>
    <p>)</p>
    <p>= L</p>
    <p>i=0</p>
    <p>ciE(N  i (t)).</p>
  </div>
</Presentation>
