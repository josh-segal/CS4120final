<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Analyzing Cooperative Containment Of Fast Scanning Worms</p>
    <p>Jayanthkumar Kannan</p>
    <p>UC Berkeley</p>
    <p>Joint work with</p>
    <p>Lakshminarayanan Subramanian, Ion Stoica, Randy Katz</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Automatic containment of worms required</p>
    <p>Faster: Slammer infected over 95% of vulnerable population in 10 mins (MPSSSW 03)</p>
    <p>Easier to write: Worm = Propagation toolkit + new exploit</p>
  </div>
  <div class="page">
    <p>Worm containment strategies</p>
    <p>End-host instrumentation (eg: NS 05)</p>
    <p>specialized end-points</p>
    <p>end-hosts</p>
    <p>firewalls</p>
    <p>core routers</p>
    <p>Core-router augmentation (eg: WWSGB 04)</p>
    <p>Specialized end-points (eg: honeyfarms - P 04)</p>
    <p>Firewall-level containment (eg: WSP 04)</p>
  </div>
  <div class="page">
    <p>Decentralized Cooperation</p>
    <p>end-hosts</p>
    <p>firewalls</p>
    <p>Internet firewalls exchange information with each other to contain the worm  Suggested recently: WSP 04, NRL 03, AGIKL 03</p>
    <p>Pros of decentralization:  Scales with the system size  No single point of failure / administrative control</p>
  </div>
  <div class="page">
    <p>Questions we seek to answer</p>
    <p>Cost of decentralization  Modes of information exchange  Effect of finite communication rate between firewalls</p>
    <p>on containment</p>
    <p>Effect of malice  Trust Model: Only few malicious participants  How does one deal with malicious firewalls?</p>
    <p>Performance under partial deployment</p>
  </div>
  <div class="page">
    <p>Roadmap</p>
    <p>Abstract model of cooperation  Analysis of cooperation model  Numerical Results</p>
    <p>Analytical, Simulation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Model Of Cooperation</p>
    <p>end-hosts</p>
    <p>firewalls</p>
    <p>Local Detection: Identify when its network is infected by analyzing outgoing traffic</p>
    <p>Signaling: Informs other firewalls of its own infection along with filters</p>
    <p>Filtering: An informed firewall drops incoming packets</p>
    <p>Scan Signal</p>
    <p>Scan dropped</p>
  </div>
  <div class="page">
    <p>Firewall states</p>
    <p>Infected</p>
    <p>Normal</p>
    <p>Alerted/Uninfected</p>
    <p>Detected</p>
    <p>Successful worm scan</p>
    <p>Local Detection</p>
    <p>Signals Sent Signal Received</p>
  </div>
  <div class="page">
    <p>Model of Signaling</p>
    <p>Two kinds of signaling:  Implicit: Piggyback signals on outgoing packets  Explicit: Signals addressed to other firewalls</p>
    <p>How to do robust signaling in face of malicious firewalls?</p>
  </div>
  <div class="page">
    <p>Robust Signaling</p>
    <p>end-hosts</p>
    <p>Signal (A)</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>Setup attacks:  Attack: A sends signal to B claiming C is infected  Defense: Challenge-response verification of signals</p>
    <p>False Positives:  Attack: Firewall sends signal even when uninfected  Defense: Thresholding: Enter alerted state after</p>
    <p>receiving signals from T different firewalls</p>
    <p>False Negatives:  Attack: Firewall suppresses signal  Equivalent to the case of partial deployment  Even if about 25% firewalls behave this way, good</p>
    <p>containment is possible</p>
    <p>Signal (C)</p>
    <p>Security parameter: T</p>
  </div>
  <div class="page">
    <p>Roadmap</p>
    <p>Abstract model of cooperation  Analysis of cooperation model  Numerical Results</p>
    <p>Analytical, Simulation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Analytical results</p>
    <p>Main focus: Containment metric C:  C = fraction of networks that escape infection</p>
    <p>Cost of Decentralization  Effect of type of signaling:  Dependence of containment on signaling rate  Is Signaling Necessary?</p>
    <p>Effect of malice:  Dependence of containment on Threshold T</p>
  </div>
  <div class="page">
    <p>Parameters used in analysis</p>
    <p>Worm model:  Scanning: Topological scanning (zero time) followed by</p>
    <p>global uniform scanning  Scanning rate = s  Probability of successful probe = p  Vulnerable hosts uniformly distributed behind these</p>
    <p>firewalls, initial number of seeds small</p>
    <p>Local detection model:  After infection, the time required for the infection to</p>
    <p>be detected is an exponential variable with mean td  Signaling model:</p>
    <p>Explicit signals sent at rate E</p>
  </div>
  <div class="page">
    <p>No Signaling</p>
    <p>Worm probes only in interval between infection and detection</p>
    <p>_ is the expected number of successful infections made by a infected network before detection  _ = p s td</p>
    <p>Result: If _ &lt; 1, C = 1 for large N (WSP 04)  Analogy to birth-death process</p>
    <p>Implications  Earlier worms like Blaster satisfied this constraint</p>
  </div>
  <div class="page">
    <p>No Signaling (2)</p>
    <p>Surprisingly, even if _&gt;1, containment possible without signaling for random scanning worm</p>
    <p>Intuition:  As the infection proceeds, harder to find new victims  _ (= p s td) effectively decreases over time</p>
    <p>For _ = 1.5, about 40% containment  For _ = 2.0, about 20% containment</p>
    <p>_ = O(2) for a Slammer-like worm</p>
  </div>
  <div class="page">
    <p>Need for Signaling</p>
    <p>Signaling required if _ &gt; 1</p>
    <p>Differential equation model</p>
    <p>For _ &gt; 1 and _ = (_-1)/td , the containment metric C is lower-bounded by</p>
  </div>
  <div class="page">
    <p>Need for Signaling (2)</p>
    <p>Implicit Signaling:  Spread rate of worm (ps) outpaced by signaling rate</p>
    <p>(s)  Implicit signaling relies on (p &lt;&lt; 1)  Linear drop with time to detection (td)  Linear drop with threshold (T)</p>
    <p>Explicit Signaling:  Explicit signals essential for high p  Linear drop with 1/E  Tunable parameter</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>_ &lt; 1: no signaling required for good containment  _ &gt;= 1: without signaling, only moderate</p>
    <p>containment  _ &gt;= 1, low p: implicit signaling works  _ &gt;= 1, high p: explicit signaling required</p>
  </div>
  <div class="page">
    <p>Roadmap</p>
    <p>Abstract model of cooperation  Analysis of cooperation model  Numerical Results</p>
    <p>Analytical, Simulation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Numerical Results</p>
    <p>Parameter Settings:  Scan rate set to that of Slammer  Size of vulnerable population = 2 x Blaster  100,000 networks: 20 vulnerable hosts per network  Start out with 10 infected networks and track worm</p>
    <p>propagation  Time to infect is about 2 secs</p>
  </div>
  <div class="page">
    <p>Cost of Decentralization</p>
    <p>Higher the detection time, lower the containment</p>
  </div>
  <div class="page">
    <p>Cost Of Decentralization (2)</p>
    <p>Even for low explicit signaling rate, good containment</p>
  </div>
  <div class="page">
    <p>Effect of Malice</p>
    <p>Defends against a few hundred malicious firewalls</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Contribution: Characterize necessity, efficacy, and limitations of cooperative worm containment</p>
    <p>Cost of Decentralization:  With moderate overhead, good containment can be achieved</p>
    <p>Effect of Malice:  Can handle a few hundred malicious firewalls in the cooperative</p>
    <p>Cost of Deployment:  Even with deployment levels as low as 10%, good containment can</p>
    <p>be achieved</p>
  </div>
  <div class="page">
    <p>Detection and Filtering</p>
  </div>
  <div class="page">
    <p>Signaling</p>
  </div>
  <div class="page">
    <p>Containment vs Vulnerable population size</p>
  </div>
  <div class="page">
    <p>Containment vs Signaling Rate</p>
  </div>
  <div class="page">
    <p>Containment vs Deployment</p>
  </div>
  <div class="page">
    <p>Internet-like Scenario</p>
    <p>Works well even under non-uniform distributions</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Main result: with moderate overhead, cooperation can provide good containment even under partial deployment  For earlier worms, cooperation may have been unnecessary  Required for the fast scanning worms of today</p>
    <p>Our results can be used to benchmark local detection schemes in their suitability for cooperation</p>
    <p>Our model and results can be applied to:  Internet-level / enterprise-level cooperation  More sophisticated worms like hit-list worms</p>
    <p>Room for improvement in terms of robustness  Verifiable signals</p>
    <p>Hybrid architecture:  Fit in well-informed participants in the cooperative</p>
  </div>
</Presentation>
