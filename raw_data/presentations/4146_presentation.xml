<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Reducing Unwanted Traffic in a Backbone Network</p>
    <p>Kuai Xu, Zhi-Li Zhang, and Supratik Bhattacharyya</p>
    <p>July 7, 2005</p>
    <p>USENIX SRUTI 05</p>
  </div>
  <div class="page">
    <p>The Unwanted Traffic Problem Unwanted traffic proliferates on the Internet  pose security threats, e.g., worms, scans, DOS  waste resources, e.g., bandwidth, space on SMTP</p>
    <p>servers</p>
    <p>Challenges for a transit backbone  large volumes of traffic, diverse hosts and applications  little (or no) knowledge about customer networks  customer satisfaction is paramount</p>
    <p>minimize false positives, can not block vulnerable ports, etc.  need concise representation of filtering policies</p>
    <p>Core routers support less than 10K ACLs</p>
  </div>
  <div class="page">
    <p>Filtering traffic in the backbone Why in the backbone?  A better vantage point for detecting maltraffic  Early filtering minimizes potential for harm, resource</p>
    <p>wastage  A value-added service for additional revenues or</p>
    <p>competitive edge</p>
    <p>Existing mechanisms  Customer premise solutions, e.g., IDS/IPS, firewalls  Unicast reverse path forwarding (uRPF) checks on</p>
    <p>ingress routers  Regional scrubbing centers for DDOS  Hand-crafted filters in response to specific events</p>
  </div>
  <div class="page">
    <p>Our focus</p>
    <p>Questions  How to identify unwanted traffic?  What are efficient and practical blocking strategies?</p>
    <p>Approach  Use backbone traffic profiling to identify sources of</p>
    <p>unwanted traffic  Devise simple blocking strategies based on the</p>
    <p>characteristics of unwanted traffic  Evaluate the cost/benefit tradeoffs of these strategies</p>
  </div>
  <div class="page">
    <p>Outline of this talk</p>
    <p>Traffic profiling framework</p>
    <p>Simple blocking strategies</p>
    <p>Ongoing and future work</p>
  </div>
  <div class="page">
    <p>Traffic profiling framework Key idea: communication patterns reveal behavior  Communication patterns:</p>
    <p>feature distributions of unidimensional traffic clusters for end hosts or services</p>
    <p>Packet streams</p>
    <p>Aggregation</p>
    <p>PDF</p>
    <p>Threshold</p>
    <p>Adaptive threshold</p>
    <p>Clustering</p>
    <p>Unidimensional clusters</p>
    <p>srcIP clusters dstIP clusters srcPort clusters dstPort clusters</p>
    <p>Structural model</p>
    <p>Behavior model</p>
    <p>Behavior profiles</p>
  </div>
  <div class="page">
    <p>Canonical behavior profile</p>
    <p>Scan/exploit behavior profile (low uncertainty on dstPort, high uncertainty on dstIP)</p>
    <p>heavy hitter client behavior profile (low uncertainty on dstPort, high uncertainty on srcPort)</p>
    <p>Server/client behavior</p>
    <p>Server/service behavior (low uncertainty on srcPort, high uncertainty on dstPort)</p>
    <p>RU: relative uncertainty: measure the dispersal of a variable</p>
    <p>Exploit behavior</p>
  </div>
  <div class="page">
    <p>Additional flow features</p>
    <p>srcIPs with server behavior profiles</p>
    <p>srcIPs with exploit behavior profiles</p>
  </div>
  <div class="page">
    <p>Dataset</p>
    <p>Validate the framework using a diverse set of links from Sprint backbone network</p>
    <p>One link (L1) as an example  Duration: 24 hours  Profiling done every 5-minute time slot  Total time slots: 288</p>
    <p>Identify sources with an exploit profile  3728 (significant) srcIPs with exploit profile</p>
  </div>
  <div class="page">
    <p>Devising blocking strategies</p>
    <p>Objective  Reduce exploit traffic  Reduce threats and damage</p>
    <p>What factors to consider in a strategy?  Policies</p>
    <p>whom to block: all or a subset of sources with exploit profile  what to block: all traffic or only traffic to exploit port</p>
    <p>Mechanism  Route all srcIPs to null0/discard  ACL entries: &lt;srcIP, dstPort&gt;</p>
    <p>Performance tradeoff</p>
  </div>
  <div class="page">
    <p>Performance Tradeoff Benefits of reducing unwanted traffic  Reduce potential threats of exploit traffic (hard</p>
    <p>to quantify)  Exploit traffic (flows, packets, bytes) reduction</p>
    <p>Cost: number of ACL entries created  An estimate of the actual cost incurred in</p>
    <p>ingress routers</p>
    <p>Wastage: ACL entries that are never invoked</p>
  </div>
  <div class="page">
    <p>Base rule Rule  Identify srcIP with an exploit behavior on dstPort  Create an ACL entry &lt;srcIP, dstPort&gt;  Apply the ACL entry for all future time slots</p>
    <p>Performance on the link L1  Benefits: reduce 76% (exploit) flows, 71% packets, and</p>
    <p>ACL entries increase as the number of links monitored  Reduce the cost/wastage via selectively blocking  Can we learn from characteristics of unwanted traffic?</p>
  </div>
  <div class="page">
    <p>Characteristics of exploit traffic</p>
    <p>Source of exploit traffic  where are they from?</p>
    <p>Port of exploit traffic  What ports are exploited?</p>
    <p>Severity of exploit traffic  frequency: # of time slots of each source observed  persistency: # of consecutive slots (frequency &gt; 1)  intensity: (average) # of targets touched per minute</p>
  </div>
  <div class="page">
    <p>Original ASes</p>
    <p>Rule 1: Block srcIPs only from the top x ASes</p>
    <p>Performance (x = 10) Benefits: 22% flows, 19% packets, 17% bytes Cost: 1942 ACL entries Wastage: 1071 (55%) ACL entries</p>
  </div>
  <div class="page">
    <p>Popular exploit port</p>
    <p>Rule 2: Block srcIPs only targeting the top k popular ports</p>
    <p>Performance (k = 5) Benefits: 67% flows, 56% packets, 52% bytes Cost: 3471 ACL entries Wastage: 1216 (35%) ACL entries</p>
  </div>
  <div class="page">
    <p>Frequency and persistency</p>
    <p>Rule 3: Blocking srcIPs with an exploit profile for at least n consecutive time periods</p>
    <p>Performance (n = 2) Benefits: 48% flows, 43% packets, 37% bytes Cost: 1586 ACL entries Wastage: 505 (32%) ACL entries</p>
  </div>
  <div class="page">
    <p>Intensity of exploit traffic</p>
    <p>Rule 4: Block srcIPs with at least m targets per minute</p>
    <p>Performance (m = 300) Benefits: 64% flows, 57% packets, 48% bytes Cost: 1789 ACL entries Wastage: 302 (17%) ACL entries</p>
  </div>
  <div class="page">
    <p>Summary of blocking rules</p>
    <p>block sources from the top x origin ASesRule 1</p>
    <p>block source have an exploit profile with one of the top k popular ports</p>
    <p>Rule 2</p>
    <p>block source have an intensity of at least m targets per minute</p>
    <p>Rule 4</p>
    <p>block sources have an exploit profile for at least n consecutive periods</p>
    <p>Rule 3</p>
    <p>block every source with an exploit profileBase rule</p>
    <p>HeuristicRule</p>
  </div>
  <div class="page">
    <p>Summary of performance evaluations</p>
    <p>Wastage (%)</p>
    <p>Byte reduction</p>
    <p>Packet reduction</p>
    <p>Flow reduction</p>
    <p>CostRule</p>
  </div>
  <div class="page">
    <p>Ongoing/Future Work More concise filters  To what extent can we aggregate exploits sources with</p>
    <p>common prefixes?  Timing out ACL entries that are never or less used  Quantify threat reductions</p>
    <p>Develop a network-wide view across multiple links  Can we identify exploit activities not visible at any single</p>
    <p>link?  How does the number of exploit sources grow?</p>
    <p>Sequential behavior analysis  What is the communication patterns of a source before</p>
    <p>and after an exploit?  What is the collateral damage caused by blocking it?</p>
  </div>
</Presentation>
