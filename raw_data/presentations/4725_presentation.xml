<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Double Rulings for</p>
    <p>Information Brokerage in</p>
    <p>Sensor Networks</p>
    <p>Double Rulings for Double Rulings for</p>
    <p>Information Brokerage in Information Brokerage in</p>
    <p>Sensor NetworksSensor Networks</p>
    <p>Rik SarkarRik Sarkar Xianjin Zhu Jie Gao</p>
    <p>MobiCom06</p>
  </div>
  <div class="page">
    <p>Problem: Information Brokerage</p>
    <p>Information producers and information consumers need to</p>
    <p>find each-other.</p>
    <p>Tourists in a park looking for animals, but sensors with</p>
    <p>animals in range do not know where tourists are.</p>
    <p>Challenges</p>
    <p>Content based search</p>
    <p>Spatial/Temporal separation</p>
    <p>Limited network resources</p>
    <p>Easy solution : Flood</p>
    <p>Inefficient</p>
  </div>
  <div class="page">
    <p>Existing work: Geographic Hash Tables</p>
    <p>Data centric hashing.</p>
    <p>Hashed node forms rendezvous</p>
    <p>Enables brokerage</p>
    <p>Pros</p>
    <p>Simple, works without flooding</p>
    <p>Cons</p>
    <p>Nodes near hashed location become bottleneck.</p>
    <p>Not distance-sensitive. Nearby producer and</p>
    <p>consumer may hash to far away nodes. Reference: GHT [Ratnasamy, et.al. 2002].</p>
  </div>
  <div class="page">
    <p>Our Approach: Double Rulings</p>
    <p>Hash data to a 1-d curve, instead of a 0-d point</p>
    <p>Motivations for generalization</p>
    <p>Data delivery uses multi-hop routing</p>
    <p>Leave information along route at no extra cost</p>
    <p>More flexible data retrieval</p>
    <p>Easier to encounter a 1-d curve than a 0-d point</p>
  </div>
  <div class="page">
    <p>Simple Double Ruling</p>
    <p>Rectilinear Double Ruling</p>
    <p>Producer stores data on</p>
    <p>horizontal lines</p>
    <p>Consumer searches along</p>
    <p>vertical lines</p>
    <p>Correctness : Every</p>
    <p>horizontal line intersects</p>
    <p>every vertical line</p>
    <p>References: [Liu Huang Zhang 04], Rumor routing [Barginsky-Estrin 02], Quorumbased routing [Stojmenovic99].</p>
  </div>
  <div class="page">
    <p>This Paper: A New Double Rulings</p>
    <p>Scheme  Producer follows a circle to the hashed location</p>
    <p>Includes GHT as a sub-case</p>
    <p>Allows a large variety of retrieval mechanisms</p>
    <p>Improves on GHT</p>
    <p>Load balancing for popular data types</p>
    <p>Distance sensitivity</p>
    <p>Flexible data retrieval schemes improve system robustness</p>
  </div>
  <div class="page">
    <p>Double Rulings on a Sphere</p>
    <p>Stereographic projection maps a projective plane to a sphere</p>
    <p>Circles map to circles</p>
    <p>May incur distortion</p>
    <p>For a finite sensor field</p>
    <p>Can choose location and size of sphere such</p>
    <p>that distance distortion is bounded by 1+.</p>
  </div>
  <div class="page">
    <p>Spherical Double Rulings</p>
    <p>Any two great circles intersect</p>
    <p>Use great circles in place of vertical/horizontal lines</p>
  </div>
  <div class="page">
    <p>Spherical Double Rulings</p>
    <p>One major difference with rectilinear double rulings:</p>
    <p>Infinitely many great circles through a point</p>
    <p>A lot more flexibility</p>
  </div>
  <div class="page">
    <p>Data Replication</p>
    <p>Data centric hash function h(Ti )=hi .</p>
    <p>Producer p replicates data along the great circle C(p, hi ) .</p>
  </div>
  <div class="page">
    <p>Data Replication</p>
    <p>Different producers with the same data type hash to different great circles, all passing through , and its antipodal point .</p>
    <p>Allow aggregation.</p>
    <p>h h</p>
  </div>
  <div class="page">
    <p>Replication Curve Examples</p>
    <p>Hashed node</p>
    <p>Producer 1</p>
    <p>Producer 2</p>
    <p>GHT paths</p>
    <p>Replication curveAntipode</p>
  </div>
  <div class="page">
    <p>Data Retrieval</p>
    <p>Flexible retrieval rules</p>
  </div>
  <div class="page">
    <p>GHT still works</p>
    <p>Consumer q wants data Ti</p>
    <p>Consumer goes to hashed node h or its antipodal, whichever is closer.</p>
    <p>Consumer goes to hashed node h or its antipodal, whichever is closer.</p>
  </div>
  <div class="page">
    <p>Distance Sensitive : If producer is at distance d from q, consumer should find data with cost O(d).</p>
    <p>Consumes less network resources</p>
    <p>Users are likely to be more interested in immediate vicinity.</p>
    <p>Lower delay --- Important in emergency response.</p>
  </div>
  <div class="page">
    <p>Rotate the sphere so that hashed node is at the north pole.</p>
    <p>Retrieval along the latitude curve</p>
    <p>Replication along the longitude curve</p>
    <p>d  /2</p>
    <p>|pq|=d</p>
    <p>If q is d away from p, the distance from q along latitude curve is  d  /2.</p>
  </div>
  <div class="page">
    <p>Distance Sensitive : If producer is at distance d from q, consumer should find data with cost O(d).</p>
    <p>Wrong direction ?</p>
    <p>Handled using a doubling technique</p>
    <p>A random choice of direction works well in practice (we use this in simulations).</p>
    <p>Consumer q follows the circle with fixed distance to the hashed location.</p>
    <p>Consumer q follows the circle with fixed distance to the hashed location.</p>
  </div>
  <div class="page">
    <p>Producer</p>
    <p>Hashed node</p>
    <p>Consumer</p>
    <p>Retrieval curve</p>
    <p>Antipode</p>
  </div>
  <div class="page">
    <p>Consumer wants data of several Data Types {Ti }</p>
    <p>E.g., monkey &amp; elephant detections.</p>
    <p>Correctness: Any closed cycle that separates h i from its</p>
    <p>antipodal intersects the producer curve.</p>
    <p>Many such retrieval curves!  more freedom for consumers and better load balancing.</p>
    <p>Follow a closed curve that separates hi and its antipodal point, for each data type Ti</p>
    <p>Follow a closed curve that separates hi and its antipodal point, for each data type Ti</p>
  </div>
  <div class="page">
    <p>Producer</p>
    <p>Antipode</p>
    <p>Hashed node</p>
    <p>Consumer</p>
    <p>Retrieval curve</p>
  </div>
  <div class="page">
    <p>Consumer wants all the data in the network</p>
    <p>Correctness : Any two great circles intersect</p>
    <p>Many such great circles!</p>
    <p>Follow a great circle, retrieve all data.Follow a great circle, retrieve all data.</p>
  </div>
  <div class="page">
    <p>Producer</p>
    <p>Antipode</p>
    <p>Hashed node</p>
    <p>Consumer</p>
    <p>Great Circle Retrieval curve</p>
  </div>
  <div class="page">
    <p>Local Data Recovery upon Node</p>
    <p>Failures  When a group of nodes are destroyed,</p>
    <p>All the data on those nodes are available on the boundary of destroyed region.</p>
    <p>All the data on those nodes are available on the boundary of destroyed region.</p>
  </div>
  <div class="page">
    <p>Local Data Recovery upon Node Failures</p>
    <p>Survived Data Replicas on the boundary</p>
  </div>
  <div class="page">
    <p>Implementation</p>
    <p>How to forward data on a virtual curve ?</p>
    <p>Use Geographic Greedy forwarding</p>
    <p>on a Curve</p>
    <p>The question of density</p>
    <p>Is it always possible to forward ?</p>
    <p>Simulation : A suitable 2-hop neighbor exists with high probability, for networks with avg degree 5.</p>
    <p>Badri Nath and D. Niculescu. Routing on a curve.</p>
    <p>SIGCOMM Comput. Commun. Rev., 2003.</p>
  </div>
  <div class="page">
    <p>Simulation: Distance Sensitivity</p>
    <p>GLIDER based scheme : Q. Fang et. al. Landmark-based information storage</p>
    <p>and retrieval in sensor networks. INFOCOM 2006.</p>
    <p>Distance Sensitivity of queries</p>
    <p>GHT</p>
    <p>Spherical Double Ruling</p>
    <p>GLIDER scheme</p>
  </div>
  <div class="page">
    <p>Simulation: Storage/Retrieval Tradeoff</p>
    <p>Larger Replication Interval Decreasing Storage Cost</p>
    <p>In c re</p>
    <p>a s in</p>
    <p>g C</p>
    <p>o n s u m</p>
    <p>e r</p>
    <p>c o s t</p>
    <p>Nodes on replication curve can store the data or a pointer to the actual data.</p>
    <p>Replication Interval</p>
  </div>
  <div class="page">
    <p>Simulation: Storage/Retrieval Tradeoff</p>
    <p>More storage, Lower retrieval cost.</p>
    <p>Replication only on the hashed node and antipode.</p>
  </div>
  <div class="page">
    <p>Simulation: Load Balancing</p>
    <p>Double Ruling GHT</p>
    <p>Load Distribution</p>
    <p>N u m</p>
    <p>b e r</p>
    <p>o f</p>
    <p>m e</p>
    <p>s s a g e s t</p>
    <p>h ro</p>
    <p>u g</p>
    <p>h a</p>
    <p>n o d e</p>
  </div>
  <div class="page">
    <p>Discussion</p>
    <p>Data collection by mobile data mules.</p>
    <p>Physically move along any retrieval curve.</p>
    <p>Advanced hashing schemes.</p>
    <p>E.g., similar data types are placed nearby.</p>
    <p>Networks with holes.</p>
    <p>Require special care.</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Flexibility in choice of retrieval method</p>
    <p>Easier to hit a curve than a point.</p>
    <p>many retrieval curves possible</p>
    <p>Better distance sensitivity</p>
    <p>Even with sparse replication on producer path</p>
    <p>Better load balancing</p>
    <p>Better response to aggregate query:</p>
    <p>Consistent performance with structured aggregate queries</p>
    <p>GHT's cost increases linearly with number of data types</p>
    <p>Better average consumer costs</p>
  </div>
  <div class="page">
    <p>QuestionsQuestions</p>
    <p>&amp;&amp;</p>
    <p>Comments..Comments..</p>
  </div>
  <div class="page">
    <p>References</p>
    <p>S. Ratnasamy, B. Karp, L. Yin, F. Yu, D. Estrin, R.</p>
    <p>Govindan, and S. Shenker. GHT: A geographic hash table for</p>
    <p>data-centric storage in sensornets. In Proc. 1st ACM</p>
    <p>Workshop on Wireless Sensor Networks and Applications, 2002.</p>
    <p>Q. Fang, J. Gao, and L. J. Guibas. Landmark-based</p>
    <p>information storage and retrieval in sensor networks. In The</p>
    <p>(INFOCOM'06), April 2006.</p>
    <p>B. Nath and D. Niculescu. Routing on a curve. SIGCOMM</p>
    <p>Comput. Commun. Rev., 2003.</p>
  </div>
</Presentation>
