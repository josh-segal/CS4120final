<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Huong Phan George Avrunin Lori Clarke Lee Osterweil University of Massachusetts University of Massachusetts University of Massachusetts University of Massachusetts AmherstAmherstAmherstAmherst http://laser.cs.umass.edu</p>
    <p>Matt Bishop University of California University of California University of California University of California DavisDavisDavisDavis http://nob.cs.ucdavis.edu/bishop/</p>
    <p>EVT/WOTE 2012</p>
    <p>Bellevue, WA</p>
    <p>August 7, 2012</p>
    <p>hphan@cs.umass.edu</p>
  </div>
  <div class="page">
    <p>Improving election security is important</p>
    <p>Elections are complex processes composed of many steps performed by humans and computer systems</p>
    <p>Past election security work focused largely on:  Past election security work focused largely on:  Computer systems</p>
    <p>Cryptography protocols used in election processes</p>
  </div>
  <div class="page">
    <p>Examine the overall election process by  Developing a rigorously defined model of the process  Derived from and validated by domain experts</p>
    <p>Applying formal analyses  To detect vulnerabilities  Using Fault Tree Analysis (FTA) Using Fault Tree Analysis (FTA)</p>
    <p>To evaluate the processs resistance to attacks based on those vulnerabilities  Using model checking</p>
    <p>Election officials may use the results of this work to  Identify and remove vulnerabilities before attacks occur</p>
    <p>Evaluate how well proposed changes will thwart known attacks</p>
  </div>
  <div class="page">
    <p>Process Modeling</p>
    <p>Process Evaluation of</p>
    <p>Process modification for improvement</p>
    <p>Process Model &amp;</p>
    <p>Process Vulnerability Identification</p>
    <p>Attack Plan Construction</p>
    <p>Evaluation of Processs Robustness against the Attack</p>
    <p>Process Model &amp; Attack Plan Composition</p>
    <p>FTA model checking</p>
    <p>Iterative process improvement</p>
  </div>
  <div class="page">
    <p>Expressive to closely capture real-world processes</p>
    <p>Having well-defined semantics for rigorous analyses</p>
    <p>Accessible to domain experts</p>
  </div>
  <div class="page">
    <p>&gt;&gt; ballotballot &gt;&gt;</p>
    <p>VoterUnqualifiedException</p>
    <p>&gt;&gt; a</p>
    <p>: input artifact a</p>
    <p>: sequential step</p>
    <p>: try step</p>
    <p>b : pre-requisite b</p>
    <p>a &gt;&gt; : output artifact a</p>
    <p>E : simple handler</p>
    <p>for exception E</p>
    <p>: step bar</p>
    <p>voterRegistered==true</p>
    <p>voterName &gt;&gt; &gt;&gt; voterName</p>
    <p>voterRegistered &gt;&gt; &gt;&gt; voterRegistered</p>
    <p>voterQualified &gt;&gt; &gt;&gt; voterQualified</p>
    <p>voterQualified &gt;&gt; &gt;&gt; voterQualified</p>
    <p>ballot &gt;&gt;</p>
    <p>ballot &gt;&gt; ballot &gt;&gt;</p>
    <p>&gt;&gt; voterQualified</p>
    <p>voterQualified==false</p>
    <p>&gt;&gt; voterQualified</p>
    <p>voterQualified==true</p>
    <p>voterQualified==true</p>
    <p>VoterNotRegisteredException VoterUnqualifiedException</p>
  </div>
  <div class="page">
    <p>FTA is a deductive, top-down analysis to find out which</p>
    <p>events in a system could lead to a given hazard</p>
    <p>A fault tree is a graphical model of the various combinations of events producing the hazard</p>
    <p>hazard</p>
    <p>gate</p>
    <p>primary event</p>
  </div>
  <div class="page">
    <p>FTA is a deductive, top-down analysis to find out which</p>
    <p>events in a system could lead to a given hazard</p>
    <p>A fault tree is a graphical model of the various combinations of events producing the hazard</p>
    <p>A minimal cut set (MCS) is a minimal set of primary events all of whose occurrence ensures that the hazard event occurs</p>
    <p>A MCS indicates a system vulnerability that an adversary may be able to exploit to create the hazard</p>
  </div>
  <div class="page">
    <p>Applying FTA to the Yolo County election process model</p>
  </div>
  <div class="page">
    <p>Hazard: an unqualified voter gets to vote with a</p>
    <p>regular ballot</p>
    <p>Hazard specification using the FTA tool</p>
    <p>artifact ballot input into the step record</p>
    <p>voter preference is wrong</p>
  </div>
  <div class="page">
    <p>There are 11 MCSs in the fault tree</p>
    <p>Example:</p>
    <p>checking prerequisite)</p>
    <p>Interpreting MCSs is</p>
    <p>challenging</p>
    <p>checking prerequisite)</p>
    <p>checking prerequisite)</p>
    <p>checking prerequisite)</p>
  </div>
  <div class="page">
    <p>voterQualified==true</p>
    <p>the impostor</p>
    <p>has the name of a</p>
    <p>registered voter</p>
    <p>who has not voted</p>
    <p>Interpretation 1</p>
    <p>prerequisite)</p>
    <p>voterRegistered==true voterQualified==true</p>
    <p>voterName &gt;&gt;</p>
  </div>
  <div class="page">
    <p>voterQualified==true</p>
    <p>Interpretation 2</p>
    <p>the impostor</p>
    <p>has the name of a</p>
    <p>registered voter</p>
    <p>who has not voted</p>
    <p>prerequisite)</p>
    <p>voterRegistered==true voterQualified==true</p>
    <p>voterName &gt;&gt;</p>
  </div>
  <div class="page">
    <p>voterQualified==true</p>
    <p>Interpretation 2</p>
    <p>who already voted</p>
    <p>&amp; election official</p>
    <p>does not raise any</p>
    <p>exception</p>
    <p>the impostor</p>
    <p>has the name of a</p>
    <p>registered voter</p>
    <p>who has not voted</p>
    <p>prerequisite)</p>
    <p>voterRegistered==true voterQualified==true</p>
    <p>voterName &gt;&gt;</p>
    <p>exception</p>
    <p>voterQualified &gt;&gt;</p>
  </div>
  <div class="page">
    <p>Process Modeling</p>
    <p>Process Vulnerability Identification</p>
    <p>Evaluation of Processs Robustness against the Attack</p>
    <p>Process modification for improvement</p>
    <p>Process Model &amp; Attack Plan Composition</p>
    <p>Attack Plan Construction</p>
    <p>Each MCS  shows what events must occur for the hazard to occur, which agents involved</p>
    <p>does not show specific actions, practicality, associated costs</p>
    <p>Constructing an attack plan  requires domain expert knowledge  needs formal definition for further analyses</p>
  </div>
  <div class="page">
    <p>Matching level of details of the attack with level of details in the model of the attacked process</p>
    <p>Specifying artifact flows and agents</p>
    <p>voterName &gt;&gt; voterAddr &gt;&gt;</p>
    <p>voterName &gt;&gt;</p>
    <p>voterAddr&gt;&gt; &gt;&gt;voterName</p>
    <p>&gt;&gt;voterAddr</p>
    <p>&gt;&gt; voterName &gt;&gt; voterAddr</p>
  </div>
  <div class="page">
    <p>Process Modeling</p>
    <p>Process Vulnerability Identification</p>
    <p>Evaluation of Processs Robustness against the Attack</p>
    <p>Process modification for improvement</p>
    <p>Process Model &amp; Attack Plan Composition</p>
    <p>Attack Plan Construction New composed process model</p>
    <p>Attack plan and election process are sub-processes executing in parallel</p>
    <p>Appropriate synchronization</p>
  </div>
  <div class="page">
    <p>Composed Process</p>
    <p>synchronization</p>
    <p>The election process model</p>
    <p>The impostor attack plan</p>
  </div>
  <div class="page">
    <p>Process Modeling</p>
    <p>Process Vulnerability Identification</p>
    <p>Evaluation of Processs Robustness against the Attack</p>
    <p>Process modification for improvement</p>
    <p>Process Model &amp; Attack Plan Composition</p>
    <p>Attack Plan Construction</p>
    <p>model checking</p>
    <p>Model checking  exhaustively explores all possible execution paths in a finite model of a process,</p>
    <p>determines whether a particular property holds in the model,</p>
    <p>produces a counterexample if the property does not hold.</p>
  </div>
  <div class="page">
    <p>Successful hazard defense is represented by the property: the attack cannot complete successfully</p>
    <p>For our example the property is violated  i.e. the attack might complete successfully</p>
    <p>automatically-generated counterexample shows an attack path (the impostor provides name of registered voter who has not (the impostor provides name of registered voter who has not voted)</p>
    <p>Domain expert proposes process modifications</p>
    <p>one way is to add more authentication</p>
    <p>Re-verify the property with the modified process model</p>
    <p>the property holds</p>
  </div>
  <div class="page">
    <p>Attack modeling  Attack trees, Petri nets, require/provide model, declarative textual specification</p>
    <p>Usage: documentation, intrusion detection</p>
    <p>Formal reasoning in security Formal reasoning in security  Security protocol verification, attack generation</p>
    <p>Process-based security in elections  Weldermariam et al</p>
  </div>
  <div class="page">
    <p>More automation  Construction of attack plans from MCSs  Composition of attack plan and process model</p>
    <p>Agent analyses  Consider the number of agents performing steps involved in one MCSinvolved in one MCS  Model agent behaviors  Explore insider attacks</p>
    <p>MCS and attack plan analyses in terms of probability, cost, impact</p>
    <p>More extensive evaluation</p>
  </div>
  <div class="page">
    <p>This work is partially funded by NSF</p>
  </div>
</Presentation>
