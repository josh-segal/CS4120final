<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Using TCP/IP Traffic shaping to achieve iSCSI service predictability</p>
    <p>Paper presentation</p>
    <p>Jarle Bjrgeengen</p>
    <p>University of Oslo / USIT</p>
    <p>November 11, 2010</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>About resource sharing in storage devices Lab setup / job setup Experiment illustrating the problem One half of the solution: the throttle Live demo</p>
    <p>The throttle Part two of the solution: the controller</p>
    <p>How the controller works Conclusion and future work</p>
  </div>
  <div class="page">
    <p>General problem of sharing resources</p>
    <p>QoS bridge QoS bridge</p>
    <p>QoS bridge QoS bridge</p>
    <p>QoS bridge Consumers</p>
    <p>Shared physical resources</p>
    <p>SAN</p>
    <p>Virtual disks</p>
    <p>Centralized storage pool</p>
    <p>Free competition causes unpredictable I/O performance for any given consumer.</p>
    <p>Remaining capacity affects performance. Storage is managed by sysadmins Sysadmins are unable to make keepable promises about performance.</p>
  </div>
  <div class="page">
    <p>Lab setup</p>
    <p>b</p>
    <p>HP SC10 10 x 36GB 10k</p>
    <p>vg_perc</p>
    <p>lv_b2</p>
    <p>lv_b3</p>
    <p>lv_b4</p>
    <p>lv_b5</p>
    <p>b2</p>
    <p>b4</p>
    <p>b5</p>
    <p>b3</p>
    <p>iSCSI target (iet)</p>
    <p>TCP Connections</p>
    <p>TCP/IP Layer</p>
    <p>Striped logical volumes. 64KB</p>
    <p>stripe size across 10 disks</p>
    <p>/dev/iscsi_0</p>
    <p>iqn.iscsilab:perc_b2</p>
    <p>iqn.iscsilab:perc_b3</p>
    <p>iqn.iscsilab:perc_b4</p>
    <p>iqn.iscsilab:perc_b5</p>
    <p>Block Layer Block Layer</p>
    <p>bm</p>
    <p>b1 Argus</p>
  </div>
  <div class="page">
    <p>Is read response time affected by write activity ?</p>
    <p>b</p>
    <p>lv_b2</p>
    <p>lv_b3</p>
    <p>lv_b4</p>
    <p>lv_b5</p>
    <p>b2</p>
    <p>b4</p>
    <p>b5</p>
    <p>b3</p>
    <p>bm Random read rate=256kB/s</p>
    <p>Seq write full speed</p>
    <p>Seq write full speed</p>
    <p>Seq write full speed</p>
  </div>
  <div class="page">
    <p>The Answer is yes</p>
    <p>Long response times adversely affect application service availability.</p>
    <p>W ai</p>
    <p>t t im</p>
    <p>e (m</p>
    <p>s)</p>
    <p>No interference 1 thread (1 machines) 3 threads (3 machines) 12 threads (3 machines)</p>
  </div>
  <div class="page">
    <p>Throttling method</p>
    <p>SYN SYN+ACK</p>
    <p>Initiator Target</p>
    <p>ACK</p>
    <p>Write</p>
    <p>Timeline without delay</p>
    <p>ACK</p>
    <p>Write ACK</p>
    <p>Write ACK</p>
    <p>Write ACK</p>
    <p>Time</p>
    <p>SYN SYN+ACK</p>
    <p>Initiator Target</p>
    <p>ACK</p>
    <p>Write</p>
    <p>ACK</p>
    <p>Write</p>
    <p>ACK</p>
    <p>Write</p>
    <p>ACK</p>
    <p>Write</p>
    <p>ACK</p>
    <p>Timeline with delay</p>
    <p>Throttling delay</p>
  </div>
  <div class="page">
    <p>Relation between packet delay and average rate</p>
    <p>Introduced delay (ms)</p>
    <p>T im</p>
    <p>e t o r</p>
    <p>e a d 2</p>
    <p>B o</p>
    <p>f d a ta</p>
    <p>( s)</p>
    <p>Introduced delay (ms)</p>
    <p>T im</p>
    <p>e t o w</p>
    <p>ri te</p>
    <p>B o</p>
    <p>f d a ta</p>
    <p>( s)</p>
    <p>Write rate 15 MB/s - 2.5 MB/s Read rate 22 MB/s - 5 MB/s</p>
  </div>
  <div class="page">
    <p>Managing consumers</p>
    <p>Need to operate on sets of consumers (throttlable={10.0.0.243,10.0.0.244}) Ipset: One rule to match them all</p>
    <p>ipset -N $throttlable ipmap --network 10.0.0.0/24 ipset -A $throttlable 10.0.0.243 ipset -A $throttlable 10.0.0.244 iptables --match-set $throttlable dst -j MARK --set-mark $mark</p>
    <p>The mark is a step in the range of available packet delays</p>
  </div>
  <div class="page">
    <p>Live demonstration</p>
    <p>Manual throttling and QoS specification An automatic QoS policy and automated throttling</p>
  </div>
  <div class="page">
    <p>Dynamic throttling decision</p>
    <p>Figure: Block diagram of a PID controller. Created by SilverStar(at)en.wikipedia. Licensed under the terms of Creative Commons Attribution 2.5 Generic.</p>
  </div>
  <div class="page">
    <p>Modified PID function</p>
    <p>Start</p>
    <p>Stop</p>
    <p>Calculate Up,Ui,Ud</p>
    <p>U p = Kp ! ek U i = U ik!1 +</p>
    <p>T s ! Kp T i</p>
    <p>! ek</p>
    <p>U d = Kp ! T d ! ek &quot; ek!1</p>
    <p>T s</p>
    <p>Ui &lt; 0</p>
    <p>Ui &gt; Ukmax</p>
    <p>N</p>
    <p>N</p>
    <p>Ui=0</p>
    <p>Ui=Uik-1</p>
    <p>Uk = Up+Ui+Ud</p>
    <p>Y</p>
    <p>Y</p>
    <p>mark = int(ceil(Uk))</p>
    <p>Uk &lt; 0</p>
    <p>Uk &gt; Ukmax Uk=Ukmax</p>
    <p>Uk=0</p>
    <p>N</p>
    <p>Y</p>
    <p>Y</p>
    <p>YY</p>
    <p>N</p>
  </div>
  <div class="page">
    <p>The completely automated approach</p>
    <p>ISCSIMAP</p>
    <p>set_maintaner.pl</p>
    <p>Create</p>
    <p>/proc/net/iet/sessions</p>
    <p>/proc/net/iet/volumes</p>
    <p>IP-sets</p>
    <p>Create &amp; maintain members</p>
    <p>Read</p>
    <p>perf_maintainer.pl</p>
    <p>PDATA</p>
    <p>Read Saturation indicators</p>
    <p>/proc/diskstats</p>
    <p>Read</p>
    <p>pid_reg.pl</p>
    <p>Read</p>
    <p>pid_threads</p>
    <p>Read</p>
    <p>Spawn($resource)</p>
    <p>Throttles</p>
    <p>Files Shared memory ProcessesLegend:</p>
    <p>lvs Run</p>
    <p>Command Dependency</p>
    <p>Read output</p>
    <p>perf_server.pl</p>
    <p>CMEM</p>
    <p>Throttle values</p>
    <p>gnuplot</p>
  </div>
  <div class="page">
    <p>Impact</p>
    <p>The packet delay throttle is very efficient Solves the throttling need completely for iSCSI (likely other TCP based storage networks too)</p>
    <p>The modified PID controller is consistently keeping response time low in spite of rapidly changing load interference. The concept is widely applicable</p>
  </div>
  <div class="page">
    <p>Impact</p>
    <p>The packet delay throttle is very efficient Solves the throttling need completely for iSCSI (likely other TCP based storage networks too)</p>
    <p>The modified PID controller is consistently keeping response time low in spite of rapidly changing load interference. The concept is widely applicable</p>
  </div>
  <div class="page">
    <p>Impact</p>
    <p>The packet delay throttle is very efficient Solves the throttling need completely for iSCSI (likely other TCP based storage networks too)</p>
    <p>The modified PID controller is consistently keeping response time low in spite of rapidly changing load interference. The concept is widely applicable</p>
  </div>
  <div class="page">
    <p>Future work</p>
    <p>iSCSI disk array Ethernet sw.</p>
    <p>QoS bridge QoS bridge</p>
    <p>QoS bridge QoS bridge</p>
    <p>QoS bridge Consumers</p>
    <p>QoS bridge</p>
    <p>Resource/consumer maps Virtual disk latencies</p>
    <p>Array specific pluginSNMPGET</p>
    <p>Packet delay throttle with other algorithms PID controller with other throttles</p>
  </div>
  <div class="page">
    <p>Thanks for the attention !</p>
  </div>
  <div class="page">
    <p>Overhead</p>
    <p>Negligeble overhead introduced by TC filters Differences measured 20 times t-test 99% confidence shows 0.4% / 1.7 % overhead for read/write (worst case)</p>
  </div>
  <div class="page">
    <p>Is response time improved by throttling ?</p>
    <p>W ai</p>
    <p>t t im</p>
    <p>e (m</p>
    <p>s)</p>
    <p>A gg</p>
    <p>re ga</p>
    <p>te d</p>
    <p>in te</p>
    <p>rfe re</p>
    <p>nc e</p>
    <p>(k B</p>
    <p>/s )</p>
    <p>Small job average wait time (Left) Interference aggregated throughput (Right). Throttling period with 4.6 ms delay Throttling period with 9.6 ms delay</p>
  </div>
  <div class="page">
    <p>Automatically controlled wait time</p>
    <p>Av er</p>
    <p>ag e</p>
    <p>w ai</p>
    <p>t t im</p>
    <p>e (m</p>
    <p>s)</p>
    <p>No regulation 20 ms treshold 15 ms threshold 10 ms threshold</p>
  </div>
  <div class="page">
    <p>The throttled rates</p>
    <p>A gg</p>
    <p>re ga</p>
    <p>te W</p>
    <p>rit e</p>
    <p>(k B</p>
    <p>/s )</p>
    <p>No regulation 20 ms threshold (smoothed) 15 ms threshold (smoothed) 10 ms threshold (smoothed)</p>
  </div>
  <div class="page">
    <p>Exposing the throttling value</p>
    <p>(m s)</p>
    <p>(k B</p>
    <p>/s )</p>
    <p>vg_aic read wait time with automatic regulation, thresh=15ms Packet delay introduced to writers Aggregated write rate</p>
  </div>
  <div class="page">
    <p>Effect of the packet delay throttle: Reads</p>
    <p>R ea</p>
    <p>d (k</p>
    <p>B /s</p>
    <p>)</p>
    <p>b2 b3 b4 b5</p>
  </div>
  <div class="page">
    <p>Effect of the packet delay throttle: Writes</p>
    <p>W rit</p>
    <p>e (k</p>
    <p>B /s</p>
    <p>)</p>
    <p>b2 b3 b4 b5</p>
  </div>
  <div class="page">
    <p>The tc delay queues</p>
    <p>parent 1:10 limit 1000</p>
    <p>delay 4.1ms</p>
    <p>parent 1:11 limit 1000</p>
    <p>delay 4.6ms</p>
    <p>parent 1:12 limit 1000</p>
    <p>delay 5.1ms</p>
    <p>parent 1:13 limit 1000</p>
    <p>delay 5.6ms</p>
    <p>parent 1:14 limit 1000</p>
    <p>delay 6.1ms</p>
    <p>parent 1:15 limit 1000</p>
    <p>delay 6.6ms</p>
    <p>parent 1:16 limit 1000</p>
    <p>delay 7.1ms</p>
    <p>parent 1:17 limit 1000</p>
    <p>delay 7.6ms</p>
    <p>parent 1:18 limit 1000</p>
    <p>delay 8.1ms</p>
    <p>parent 1:19 limit 1000</p>
    <p>delay 8.6ms</p>
    <p>parent 1:20 limit 1000</p>
    <p>delay 9.1ms</p>
    <p>parent 1:21 limit 1000</p>
    <p>delay 9.6ms</p>
    <p>parent 1:2 limit 1000</p>
    <p>delay 99us</p>
    <p>parent 1:3 limit 1000</p>
    <p>delay 598us</p>
    <p>parent 1:4 limit 1000</p>
    <p>delay 1.1ms</p>
    <p>parent 1:5 limit 1000</p>
    <p>delay 1.6ms</p>
    <p>parent 1:6 limit 1000</p>
    <p>delay 2.1ms</p>
    <p>parent 1:7 limit 1000</p>
    <p>delay 2.6ms</p>
    <p>parent 1:8 limit 1000</p>
    <p>delay 3.1ms</p>
    <p>parent 1:9 limit 1000</p>
    <p>delay 3.6ms</p>
    <p>r2q 10 default 1</p>
    <p>direct_packets_stat 4399042 ver 3.17</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000</p>
    <p>rate 8000Mbit ceil 8000Mbit</p>
    <p>burst 0b/8 mpu 0b</p>
    <p>overhead 0b cburst 0b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>(1) (2) (3) (4)</p>
    <p>(5) (6) (7)</p>
    <p>(8)</p>
    <p>(9) (10) (11) (12)</p>
    <p>(13) (14) (15) (16)</p>
    <p>(17) (18)</p>
    <p>(19) (20)</p>
  </div>
  <div class="page">
    <p>The tc bandwidth queues</p>
    <p>r2q 10 default 1</p>
    <p>direct_packets_stat 4665509 ver 3.17</p>
    <p>rate 1000Mbit ceil 1000Mbit</p>
    <p>burst 130875b/8 mpu 0b</p>
    <p>overhead 0b cburst 130875b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 7</p>
    <p>prio 0 quantum 200000 rate 550000Kbit ceil 550000Kbit burst 277612b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 277612b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 500000Kbit ceil 500000Kbit burst 252500b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 252500b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 450000Kbit ceil 450000Kbit burst 227418b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 227418b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 400000Kbit ceil 400000Kbit burst 202350b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 202350b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 350000Kbit ceil 350000Kbit burst 177231b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 177231b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 300000Kbit ceil 300000Kbit burst 152137b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 152137b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 250000Kbit ceil 250000Kbit burst 127062b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 127062b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 200000Kbit ceil 200000Kbit burst 101975b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 101975b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 150000Kbit ceil 150000Kbit burst 76875b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 76875b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 100000Kbit ceil 100000Kbit burst 51787b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 51787b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 950000Kbit ceil 950000Kbit burst 478325b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 478325b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 50000Kbit ceil 50000Kbit burst 26693b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 26693b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 45000Kbit ceil 45000Kbit burst 24181b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 24181b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 35000Kbit ceil 35000Kbit burst 19162b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 19162b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 25000Kbit ceil 25000Kbit burst 14146b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 14146b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 187500 rate 15000Kbit ceil 15000Kbit burst 9127b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 9127b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 62500 rate 5000Kbit ceil 5000Kbit burst 4Kb/8</p>
    <p>mpu 0b overhead 0b cburst 4Kb/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>level 0</p>
    <p>prio 0 quantum 200000 rate 900000Kbit ceil 900000Kbit burst 453262b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 453262b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 850000Kbit ceil 850000Kbit burst 428187b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 428187b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 800000Kbit ceil 800000Kbit burst 403100b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 403100b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 750000Kbit ceil 750000Kbit burst 378000b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 378000b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 700000Kbit ceil 700000Kbit burst 352887b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 352887b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 650000Kbit ceil 650000Kbit burst 327762b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 327762b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>prio 0 quantum 200000 rate 600000Kbit ceil 600000Kbit burst 302700b/8</p>
    <p>mpu 0b overhead 0b</p>
    <p>cburst 302700b/8 mpu 0b</p>
    <p>overhead 0b level 0</p>
    <p>(1) (2)</p>
    <p>(3)</p>
    <p>(4) (5)</p>
    <p>(6) (7)</p>
    <p>(8)</p>
    <p>(9) (10)</p>
    <p>(11)</p>
    <p>(12) (13)</p>
    <p>(14) (15)</p>
    <p>(16)</p>
    <p>(17)</p>
    <p>(18)</p>
    <p>(19)</p>
    <p>(20) (21)</p>
    <p>(22)</p>
    <p>(23)</p>
    <p>(24)</p>
  </div>
  <div class="page">
    <p>Input signal</p>
    <p>Wait HmsL</p>
    <p>Red: Exponential Weighted Moving Average (EWMA) Green: Moving median L(t) = l(t) + L(t1)(1  ) EWMA, also called low pass filter</p>
  </div>
  <div class="page">
    <p>u(t) =</p>
    <p>Continous   Kpe(t)</p>
    <p>Proportional</p>
    <p>+ Kp Ti</p>
    <p>t 0</p>
    <p>e( )d</p>
    <p>Integral</p>
    <p>+ KpTd e (t)</p>
    <p>Derivative</p>
    <p>uk = uk1   Previous</p>
    <p>+ Kp(1 + T Ti</p>
    <p>)ek  Kpek1 + KpTd</p>
    <p>T (ek  2ek1 + ek2)</p>
    <p>Delta   Incremental form</p>
    <p>uk = Kpek   Proportional</p>
    <p>+ ui(k1) + KpT Ti</p>
    <p>ek   Integral</p>
    <p>+ KpTd</p>
    <p>T (ek  ek1)</p>
    <p>Derivative   Absolute form</p>
  </div>
</Presentation>
