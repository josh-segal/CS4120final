<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Approximating Push-In First-Out Behaviors</p>
    <p>Albert Gran Alcoz,</p>
    <p>Alexander Dietmller,</p>
    <p>Laurent Vanbever</p>
    <p>SP-PIFO</p>
    <p>sp-pifo.ethz.ch</p>
    <p>SP-PIFO:</p>
    <p>NSDI 20</p>
    <p>February, 25 2020</p>
    <p>Using Strict-Priority Queues</p>
  </div>
  <div class="page">
    <p>[SIGCOMM 92]</p>
    <p>Minimize tail packet delays</p>
    <p>[SIGCOMM 13, NSDI 15]</p>
    <p>Minimize flow completion times</p>
    <p>[ToN 93, NSDI 18]</p>
    <p>Enforce max-min fairness</p>
  </div>
  <div class="page">
    <p>You cant have everything you want,</p>
    <p>but you can have anything you want</p>
    <p>Flexibility</p>
    <p>Customized algorithms</p>
    <p>Generality</p>
    <p>Universal packet scheduler</p>
    <p>[NSDI 16]</p>
    <p>Is there a universal packet scheduler?</p>
  </div>
  <div class="page">
    <p>Generality</p>
    <p>Universal packet scheduler</p>
    <p>Programmable</p>
    <p>scheduling</p>
    <p>but you can have anything you want</p>
    <p>You cant have everything you want,</p>
    <p>[NSDI 16]</p>
    <p>Is there a universal packet scheduler?</p>
  </div>
  <div class="page">
    <p>[SIGCOMM 16]</p>
    <p>PIFO abstraction for programmable scheduling</p>
    <p>Assumes monotonic increase of ranks within flows</p>
    <p>Supports ~1k flows and ~10 Gbps</p>
    <p>Requires new ASIC implementation, which might take years</p>
    <p>Deployability</p>
    <p>Scalability</p>
    <p>Flexibility</p>
    <p>Implementing PIFO queues in hardware</p>
    <p>is difficult</p>
  </div>
  <div class="page">
    <p>on existing devices?</p>
    <p>Can we approximate PIFO queues</p>
    <p>at scale, and</p>
    <p>at line rate,</p>
  </div>
  <div class="page">
    <p>Introducing</p>
    <p>SP-PIFO</p>
    <p>A deployable, scalable and flexible</p>
    <p>PIFO approximation</p>
  </div>
  <div class="page">
    <p>PIFO queues can be used as an abstraction</p>
    <p>to make scheduling programmable</p>
    <p>The PIFO queue Allows packets to be pushed into arbitrary locations</p>
    <p>Only drains packets from the head</p>
    <p>Packet ranks</p>
    <p>PIFO Queue</p>
  </div>
  <div class="page">
    <p>PIFO queues can be used as an abstraction</p>
    <p>to make scheduling programmable</p>
    <p>The PIFO queue Allows packets to be pushed into arbitrary locations</p>
    <p>Only drains packets from the head</p>
    <p>Packet ranks</p>
    <p>PIFO Queue</p>
  </div>
  <div class="page">
    <p>PIFO queues can be used as an abstraction</p>
    <p>to make scheduling programmable</p>
    <p>The PIFO queue Allows packets to be pushed into arbitrary locations</p>
    <p>Only drains packets from the head</p>
    <p>Packet ranks</p>
    <p>PIFO Queue</p>
  </div>
  <div class="page">
    <p>PIFO queues can be used as an abstraction</p>
    <p>to make scheduling programmable</p>
    <p>The PIFO queue Allows packets to be pushed into arbitrary locations</p>
    <p>Only drains packets from the head</p>
    <p>Packet ranks</p>
    <p>PIFO Queue</p>
    <p>Input sequence</p>
  </div>
  <div class="page">
    <p>Programmable scheduler</p>
    <p>PIFO queues can be used as an abstraction</p>
    <p>to make scheduling programmable</p>
    <p>Rank computation (programmable)</p>
    <p>PIFO queue (fixed logic)</p>
    <p>Rank Computation</p>
    <p>p.rank = f.size</p>
    <p>f = flow(p)</p>
    <p>Input sequence</p>
    <p>PIFO Queue</p>
  </div>
  <div class="page">
    <p>Programmable scheduler</p>
    <p>PIFO queues can be used as an abstraction</p>
    <p>to make scheduling programmable</p>
    <p>Rank computation (programmable)</p>
    <p>PIFO queue (fixed logic)</p>
    <p>Rank Computation</p>
    <p>p.rank = f.size</p>
    <p>f = flow(p)</p>
    <p>Input sequence</p>
    <p>PIFO Queue</p>
  </div>
  <div class="page">
    <p>Programmable scheduler</p>
    <p>PIFO queues can be used as an abstraction</p>
    <p>to make scheduling programmable</p>
    <p>Rank computation (programmable)</p>
    <p>PIFO queue (fixed logic)</p>
    <p>Rank Computation</p>
    <p>p.rank = f.size</p>
    <p>f = flow(p)</p>
    <p>Input sequence</p>
    <p>PIFO Queue</p>
  </div>
  <div class="page">
    <p>SP-PIFO approximates PIFO behaviors using Strict-Priority queues</p>
    <p>and a dynamic mapping strategy</p>
    <p>Adaptation Strategy Strict-Priority Queues</p>
    <p>Rank Computation</p>
    <p>p.rank = f.size</p>
    <p>f = flow(p)</p>
    <p>Programmable scheduler</p>
    <p>Rank computation (programmable)</p>
    <p>Adaptation strategy + strict-priority queues (fixed logic)</p>
  </div>
  <div class="page">
    <p>Ideal case Perfect PIFO if number of queues &gt;= number of ranks</p>
    <p>SP-PIFO approximates PIFO behaviors using Strict-Priority queues</p>
    <p>and a dynamic mapping strategy</p>
    <p>Strict-Priority Queues</p>
  </div>
  <div class="page">
    <p>Ideal case Perfect PIFO if number of queues &gt;= number of ranks</p>
    <p>SP-PIFO approximates PIFO behaviors using Strict-Priority queues</p>
    <p>and a dynamic mapping strategy</p>
    <p>Output sequence</p>
    <p>Strict-Priority Queues</p>
  </div>
  <div class="page">
    <p>Strict-Priority Queues</p>
    <p>In practice Number of queues &lt; number of ranks</p>
    <p>SP-PIFO approximates PIFO behaviors using Strict-Priority queues</p>
    <p>and a dynamic mapping strategy</p>
    <p>Problem Output sequence can have scheduling errors</p>
  </div>
  <div class="page">
    <p>Problem Output sequence can have scheduling errors</p>
    <p>Low-ranked packets drained after high-ranked packets</p>
    <p>suboptimal output</p>
    <p>In practice Number of queues &lt; number of ranks</p>
    <p>SP-PIFO approximates PIFO behaviors using Strict-Priority queues</p>
    <p>and a dynamic mapping strategy</p>
    <p>Strict-Priority Queues</p>
  </div>
  <div class="page">
    <p>Problem Output sequence can have scheduling errors</p>
    <p>In practice Number of queues &lt; number of ranks</p>
    <p>SP-PIFO approximates PIFO behaviors using Strict-Priority queues</p>
    <p>and a dynamic mapping strategy</p>
    <p>Design mapping strategies that</p>
    <p>minimize scheduling errors</p>
    <p>Opportunity</p>
  </div>
  <div class="page">
    <p>SP-PIFO defines mapping through queue bounds'</p>
    <p>Queue bounds scanned bottom-upMapping</p>
    <p>Packet enqueued if rank &gt;= queue bound</p>
    <p>Strict-Priority Queues</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>SP-PIFO defines mapping through queue bounds'</p>
    <p>Strategy A</p>
    <p>Mapping Queue bounds scanned bottom-up</p>
    <p>Packet enqueued if rank &gt;= queue bound</p>
  </div>
  <div class="page">
    <p>SP-PIFO defines mapping through queue bounds'</p>
    <p>Strategy A</p>
    <p>Mapping Queue bounds scanned bottom-up</p>
    <p>Packet enqueued if rank &gt;= queue bound</p>
  </div>
  <div class="page">
    <p>Input sequence Output sequence</p>
    <p>SP-PIFO defines mapping through queue bounds'</p>
    <p>Strategy A</p>
    <p>Is rank &gt;= queue bound ?</p>
  </div>
  <div class="page">
    <p>Input sequence Output sequence</p>
    <p>SP-PIFO defines mapping through queue bounds'</p>
    <p>Strategy A</p>
  </div>
  <div class="page">
    <p>SP-PIFO defines mapping through queue bounds'</p>
    <p>Strategy A</p>
    <p>Input sequence Output sequence</p>
    <p>Mapping</p>
    <p>Queue bounds scanned bottom-up</p>
    <p>Packet enqueued if rank &gt;= queue bound</p>
  </div>
  <div class="page">
    <p>SP-PIFO defines mapping through queue bounds'</p>
    <p>Strategy A</p>
    <p>Input sequence Output sequence</p>
    <p>Mapping Queue bounds scanned bottom-up</p>
    <p>Packet enqueued if rank &gt;= queue bound</p>
  </div>
  <div class="page">
    <p>SP-PIFO defines mapping through queue bounds'</p>
    <p>Strategy A</p>
    <p>Input sequence Output sequence</p>
    <p>Mapping Queue bounds scanned bottom-up</p>
    <p>Packet enqueued if rank &gt;= queue bound</p>
  </div>
  <div class="page">
    <p>SP-PIFO defines mapping through queue bounds'</p>
    <p>Strategy A</p>
    <p>Input sequence Output sequence</p>
    <p>Mapping Queue bounds scanned bottom-up</p>
    <p>Packet enqueued if rank &gt;= queue bound</p>
  </div>
  <div class="page">
    <p>How can we design a mapping strategy</p>
    <p>that minimizes scheduling errors?</p>
  </div>
  <div class="page">
    <p>How does it work</p>
    <p>How can it be deployed</p>
    <p>How well does it perform</p>
    <p>Approximating Push-In First-Out Behaviors SP-PIFO:</p>
    <p>Using Strict-Priority Queues</p>
  </div>
  <div class="page">
    <p>How does it work</p>
    <p>Approximating Push-In First-Out Behaviors SP-PIFO:</p>
    <p>Using Strict-Priority Queues</p>
    <p>How can it be deployed</p>
    <p>How well does it perform</p>
  </div>
  <div class="page">
    <p>Problem formulation</p>
    <p>q* = argmin E [ U(q, r) ] q  Q r  R</p>
    <p>Objective Find optimal queue bounds q*</p>
    <p>That minimize the expected loss U for all ranks</p>
    <p>Unpifoness (U) quantifies the scheduling errors</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Strict-Priority Queues</p>
    <p>Input sequence Output sequence</p>
    <p>Initialization</p>
    <p>Queue bounds set to zero</p>
    <p>Zero traffic knowledge</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Strict-Priority Queues</p>
    <p>Input sequence Output sequence</p>
    <p>Rank &gt;= queue bound ?</p>
    <p>Initialization</p>
    <p>Queue bounds set to zero</p>
    <p>Zero traffic knowledge</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Strict-Priority Queues</p>
    <p>Input sequence Output sequence</p>
    <p>Initialization</p>
    <p>Queue bounds set to zero</p>
    <p>Zero traffic knowledge</p>
    <p>Rank &gt;= queue bound ?</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Strict-Priority Queues</p>
    <p>Input sequence Output sequence</p>
    <p>Initialization</p>
    <p>Queue bounds set to zero</p>
    <p>Zero traffic knowledge</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Strict-Priority Queues</p>
    <p>Input sequence Output sequence</p>
    <p>scheduling error</p>
    <p>Initialization</p>
    <p>Queue bounds set to zero</p>
    <p>Zero traffic knowledge</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Strict-Priority Queues</p>
    <p>Input sequence Output sequence</p>
    <p>Initialization</p>
    <p>Queue bounds set to zero</p>
    <p>Zero traffic knowledge</p>
    <p>Rank &gt;= queue bound ?</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Strict-Priority Queues</p>
    <p>Input sequence Output sequence</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Strict-Priority Queues</p>
    <p>Input sequence Output sequence</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Strict-Priority Queues</p>
    <p>Input sequence Output sequence</p>
    <p>After enqueue, queue bound set to</p>
    <p>the rank of the packet enqueued</p>
    <p>Push-up</p>
    <p>(future low-rank packets to</p>
    <p>higher-priority queues)</p>
    <p>Rank &gt;= queue bound ?</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Strict-Priority Queues</p>
    <p>Input sequence Output sequence</p>
    <p>Push-up 3</p>
    <p>After enqueue, queue bound set to</p>
    <p>the rank of the packet enqueued</p>
    <p>Push-up</p>
    <p>(future low-rank packets to</p>
    <p>higher-priority queues)</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Strict-Priority Queues</p>
    <p>Input sequence Output sequence</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Strict-Priority Queues</p>
    <p>Input sequence Output sequence</p>
    <p>!</p>
    <p>Output sequence</p>
    <p>After enqueue, queue bound set to</p>
    <p>the rank of the packet enqueued</p>
    <p>Push-up</p>
    <p>(future low-rank packets to</p>
    <p>higher-priority queues)</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Strict-Priority Queues</p>
    <p>Input sequence Output sequence</p>
    <p>Output sequence</p>
    <p>Error cost = (queue bound - rank) = 1</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Strict-Priority Queues</p>
    <p>Input sequence Output sequence</p>
    <p>Output sequence</p>
    <p>For all queue bounds:</p>
    <p>decrease error cost (1)</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Strict-Priority Queues</p>
    <p>Input sequence Output sequence</p>
    <p>Output sequence</p>
    <p>Push-down 32 3</p>
    <p>For all queue bounds:</p>
    <p>decrease error cost (1)</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Strict-Priority Queues</p>
    <p>Input sequence Output sequence</p>
    <p>Output sequence</p>
    <p>For all queue bounds:</p>
    <p>decrease error cost (1)</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Strict-Priority Queues</p>
    <p>Input sequence Output sequence</p>
    <p>Output sequence</p>
    <p>After potential error detected,</p>
    <p>all queue bounds decreased the error cost</p>
    <p>Push-down</p>
    <p>(future high-rank packets to</p>
    <p>lower-priority queues)</p>
  </div>
  <div class="page">
    <p>SP-PIFO adapts the mapping of packet ranks</p>
    <p>to strict-priority queues</p>
    <p>Objective Find optimal queue bounds q*</p>
    <p>That minimize the expected loss U for all ranks</p>
    <p>Strict-Priority Queues</p>
    <p>Low-rank packets High-rank packets</p>
    <p>Result Packet-level adaptation of q</p>
  </div>
  <div class="page">
    <p>How can it be deployed</p>
    <p>How well does it perform</p>
    <p>Approximating Push-In First-Out Behaviors SP-PIFO:</p>
    <p>Using Strict-Priority Queues</p>
    <p>How does it work</p>
  </div>
  <div class="page">
    <p>SP-PIFO has been fully implemented on</p>
    <p>existing programmable hardware</p>
    <p>Parser Traffic ManagerIngress pipeline</p>
    <p>Priority Queues</p>
    <p>Queue Bound n</p>
    <p>Registers</p>
    <p>Queue Bound n-1 Queue Bound 1</p>
    <p>Metadata</p>
    <p>Queue ID</p>
    <p>Queue Bound 1 - Rank</p>
  </div>
  <div class="page">
    <p>How can it be deployed</p>
    <p>How well does it perform</p>
    <p>Approximating Push-In First-Out Behaviors SP-PIFO:</p>
    <p>Using Strict-Priority Queues</p>
    <p>How does it work</p>
  </div>
  <div class="page">
    <p>How well does SP-PIFO approximate</p>
    <p>well-known scheduling objectives under</p>
    <p>realistic traffic workloads?</p>
    <p>Max-min fairness</p>
    <p>Minimizing Flow Completion Time</p>
    <p>pFabric* (8 queues)</p>
    <p>Start-Time Fair Queuing (32 queues)</p>
    <p>Ranks based on a fluid model</p>
    <p>Ranks are set to the remaining flow size</p>
    <p>Evaluation</p>
    <p>* without starvation prevention</p>
    <p>Scheduling objectives</p>
    <p>Question</p>
  </div>
  <div class="page">
    <p>We generate traffic following pFabricRealistic workloads web-search workload</p>
    <p>Methodology</p>
    <p>We use a leaf-spine topology with 144 servers,Topology</p>
    <p>links of 1Gbps and 4Gbps</p>
    <p>Packet-level simulator</p>
    <p>We integrated SP-PIFO in Netbench</p>
    <p>[SIGCOMM 2017]</p>
  </div>
  <div class="page">
    <p>SP-PIFO closely approximates pFabric,</p>
    <p>minimizing FCTs for both small and big flows</p>
    <p>Load</p>
    <p>Small flows &lt;100KB Big flows 1MB</p>
    <p>Fl ow</p>
    <p>C om</p>
    <p>pl et</p>
    <p>io n</p>
    <p>Ti m</p>
    <p>e (m</p>
    <p>s)</p>
    <p>Load</p>
    <p>PIFO SP-PIFO DCTCP</p>
    <p>TCP</p>
    <p>Fl ow</p>
    <p>C om</p>
    <p>pl et</p>
    <p>io n</p>
    <p>Ti m</p>
    <p>e (m</p>
    <p>s)</p>
    <p>Load</p>
    <p>PIFO SP-PIFO DCTCP</p>
    <p>TCP</p>
    <p>Load</p>
    <p>Fl ow</p>
    <p>C om</p>
    <p>pl et</p>
    <p>io n</p>
    <p>Ti m</p>
    <p>e (m</p>
    <p>s)</p>
    <p>Load</p>
    <p>PIFO SP-PIFO DCTCP</p>
    <p>TCP</p>
  </div>
  <div class="page">
    <p>SP-PIFO closely approximates state-of-the-art</p>
    <p>fair-queuing algorithms</p>
    <p>2M 0.2M-1M 80K 50K 30K 20K 10K</p>
    <p>Fl ow</p>
    <p>C om</p>
    <p>pl et</p>
    <p>io n</p>
    <p>Ti m</p>
    <p>e (m</p>
    <p>s)</p>
    <p>Flow Size</p>
    <p>PIFO AFQ</p>
    <p>SP-PIFO DCTCP</p>
    <p>TCP</p>
    <p>Fl ow</p>
    <p>C om</p>
    <p>pl et</p>
    <p>io n</p>
    <p>Ti m</p>
    <p>e (m</p>
    <p>s)</p>
    <p>Load</p>
    <p>PIFO AFQ</p>
    <p>SP-PIFO DCTCP</p>
    <p>TCP</p>
    <p>Flow size</p>
    <p>All flows @ Load 0.7</p>
    <p>Average FCT (ms)</p>
    <p>Load</p>
    <p>2M</p>
    <p>Small flows &lt;100KB</p>
    <p>Average FCT (ms)</p>
  </div>
  <div class="page">
    <p>SP-PIFO characterization, comparison with gradient</p>
    <p>Check our website!</p>
    <p>Limitations and future improvements</p>
    <p>sp-pifo.ethz.ch</p>
    <p>All the code is available All our experiments are reproducible</p>
    <p>Hardware evaluation on Barefoot Tofino</p>
  </div>
  <div class="page">
    <p>SP-PIFO approximates the behavior of PIFO queues</p>
    <p>Making scheduling programmable, today!SP-PIFO:</p>
    <p>at line rate, at scale and on existing devices</p>
    <p>It adapts the mapping between packet ranks and</p>
    <p>strict-priority queues to minimize the scheduling errors</p>
    <p>It reacts per-packet to traffic variations,</p>
    <p>without traffic knowledge required</p>
  </div>
  <div class="page">
    <p>sp-pifo.ethz.ch</p>
    <p>Albert Gran Alcoz Alexander Dietmller Laurent Vanbever</p>
    <p>Approximating Push-In First-Out Behaviors SP-PIFO:</p>
    <p>Using Strict-Priority Queues</p>
  </div>
</Presentation>
