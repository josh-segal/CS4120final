<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Mohamed Hefeeda 1</p>
    <p>School of Computing Science Simon Fraser University, Canada</p>
    <p>Energy Optimization in Mobile TV Broadcast Networks</p>
    <p>Mohamed Hefeeda (Joint work with ChengHsin Hsu)</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 2</p>
    <p>Most mobile devices (phones, PDAs, ...) are almost full-fledged computers</p>
    <p>Users like to access multimedia content anywhere, anytime</p>
    <p>Longer Prime Time viewing  More business opportunities for content providers</p>
    <p>Market research forecasts (by 2011) - 500 million subscribers, 20 billion Euros in revenue</p>
    <p>Already deployed (or trial) networks in 40+ countries [http://www.dvb-h.org]</p>
    <p>Mobile TV: Market Demand &amp; Potential</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 3</p>
    <p>Mobile TV</p>
    <p>Batterypowered  Mobile, wireless  Small screens, ...</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 4</p>
    <p>Over (current, 3G) cellular networks - Third Generation Partnership Project (3GPP)  - Multimedia Broadcast/Multicast Service (MBMS)</p>
    <p>- Pros: leverage already deployed networks</p>
    <p>- Cons: Limited bandwidth (&lt;1.5 Mb/s)   very few TV channels, low quality, and</p>
    <p>high energy consumption for mobile devices (they work mostly in continuous mode)</p>
    <p>Mobile TV: Multiple Technologies</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda</p>
    <p>Mobile TV: Multiple Technologies</p>
    <p>Over Dedicated Broadcast Networks - T-DMB: Terrestrial Digital Media Broadcasting</p>
    <p>Started in South Korea</p>
    <p>Builds on the success of Digital Audio Broadcast (DAB)</p>
    <p>Limited bandwidth (&lt; 1.8 Mbps)</p>
    <p>- DVB-H: Digital Video BroadcastHandheld  Extends DVB-T to support mobile devices</p>
    <p>High bandwidth (&lt; 25 Mbps), energy saving, error protection, efficient handoff,</p>
    <p>Open standard</p>
    <p>- MediaFLO: Media Forward Link Only  Similar to DVB-H, but proprietary (Qualcomm)</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 6</p>
    <p>This is called Time Slicing - Supported (dictated) in DVB-H and MediaFLO</p>
    <p>- Performed by base station to save energy of mobile receivers</p>
    <p>- Also enables seamless hand off</p>
    <p>Need to construct Burst Transmission Schedule</p>
    <p>Energy Saving for Mobile TV Receivers</p>
    <p>Time</p>
    <p>Bit Rate</p>
    <p>R</p>
    <p>r1</p>
    <p>Off</p>
    <p>Burst</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda</p>
    <p>Burst Transmission Schedule Problem</p>
    <p>Easy IF all TV channels have same bit rate - Currently assumed in many deployed networks</p>
    <p>Simple, but not efficient (visual quality &amp;bw utilization)</p>
    <p>TV channels broadcast different programs (sports, series, talk shows, )  different visual complexity/motion</p>
    <p>Time</p>
    <p>R</p>
    <p>Bit Rate</p>
    <p>Frame p</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda</p>
    <p>The Need for Different Bit Rates</p>
    <p>Wide variations in quality (PSNR), as high as 1020 dB</p>
    <p>Bandwidth waste if we encode channels at high rate</p>
    <p>Encode multiple video sequences at various bit rates, measure quality</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 9</p>
    <p>Ensure no buffer violations for ALL TV channels</p>
    <p>- Violation = buffer underflow or overflow</p>
    <p>Ensure no overlap between bursts</p>
    <p>Burst Scheduling with Different Bit Rates</p>
    <p>Time</p>
    <p>R</p>
    <p>Bit Rate</p>
    <p>Frame p</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 10</p>
    <p>Theorem 1: Burst Scheduling to minimize energy consumption For TV channels with arbitrary bit rates is NP-Complete</p>
    <p>Proof Sketch: - We show that minimizing energy consumption is the</p>
    <p>same as minimizing number of bursts in each frame</p>
    <p>- Then, we reduce the Task Sequencing with release times and deadlines problem to it</p>
    <p>We can NOT use exhaustive search in Real Time</p>
    <p>Burst Scheduling with Different Bit Rates</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 11</p>
    <p>Practical Simplification: - Divide TV channels into classes</p>
    <p>- Channels in class c have bit rate:</p>
    <p>- E.g., four classes: 150, 300, 600, 1200 kbps for talk shows, episodes, movies, sports</p>
    <p>- Present optimal and efficient algorithm (P2OPT)</p>
    <p>For the General Problem - With any bit rate</p>
    <p>- Present a near-optimal approximation algorithm (DBS)  Theoretical (small) bound on the approximation factor</p>
    <p>All algorithms are validated in a mobile TV testbed</p>
    <p>Solution Approach</p>
    <p>cr r i  K</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 12</p>
    <p>Assume S channels:  Also assume medium bandwidth  Compute the optimal frame length  Divide into bursts, each bits  Then assign bursts to each TV channel s  Set inter-burst distance as</p>
    <p>P2OPT Algorithm: Idea</p>
    <p>*p *p 1/R r</p>
    <p>* 1p r</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 13</p>
    <p>Four TV channels:  Medium bandwidth:  is divided into 8 bursts</p>
    <p>P2OPT: Example</p>
    <p>Build binary tree, bottom up  Traverse tree root-down to</p>
    <p>assign bursts</p>
    <p>*p</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 14</p>
    <p>Theorem 2: P2OPT is correct and runs in . - i.e., returns a valid burst schedule iff one exists</p>
    <p>- Very efficient, S is typically &lt; 50</p>
    <p>Theorem 3: P2OPT is optimal when - Optimal = minimizes energy consumption for receivers</p>
    <p>- b is the receiver buffer size</p>
    <p>P2OPT: Analysis</p>
    <p>( log )O S S</p>
    <p>* 1/p b r</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 15</p>
    <p>Complete open-source implementation of testbed for DVB-H networks: base station, web GUI, analyzers</p>
    <p>P2OPT: Empirical Validation</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 16</p>
    <p>P2OPT is implemented in the Time Slicing module</p>
    <p>P2OPT: Empirical Validation</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 17</p>
    <p>Setup: Broadcast 9 TV channels for 10 minutes - 4 classes: 2 @ 64, 3 @ 256, 2 @ 512, 2 @ 1024 kbps</p>
    <p>- Receiver Buffer = 1 Mb</p>
    <p>- Collect detailed logs (start/end of each burst in msec)</p>
    <p>- Monitor receiver buffer levels with time</p>
    <p>- Compute inter-burst intervals for burst conflicts</p>
    <p>P2OPT: Correctness</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 18</p>
    <p>Never exceeds 1 Mb, nor goes below 0</p>
    <p>P2OPT: Correctness</p>
    <p>TV Channel 1</p>
    <p>No overlap, all positive spacing</p>
    <p>And P2OPT runs in real time on a commodity PC</p>
    <p>Bursts of all TV Channels</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 19</p>
    <p>Compare energy saving against absolutemaximum - Max: broadcast TV channels one by one, freely use the</p>
    <p>largest burst  max off time  max energy saving - P2OPT: broadcast all TV channels concurrently</p>
    <p>P2OPT: Optimality</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 20</p>
    <p>Does encoding channels with power of 2 increments bit rate really help?</p>
    <p>We encode ten (diverse) sequences using H.264: - Uniform: all at same rate r (r varies 32 -- 1024 kbps)</p>
    <p>- P2OPT: at 3 different bit rates</p>
    <p>P2OPT: Quality Variation</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 21</p>
    <p>Quality gap &lt; 1 dB  P2OPT is useful in practice</p>
    <p>P2OPT: Quality Variation</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 22</p>
    <p>Energy saving: critical problem for mobile TV  TV channels should be encoded at different bit rates</p>
    <p>- Better visual quality, higher bandwidth utilization</p>
    <p>- BUT make burst transmission scheduling NP-Complete</p>
    <p>Proposed a practical simplification - Classes of TV channels with power of 2 increments in rate</p>
    <p>- Optimal algorithm (P2OPT) and efficient</p>
    <p>General Problem - Near-optimal algorithm (DBS): approx factor close to 1</p>
    <p>for typical cases</p>
    <p>Implementation in real mobile TV testbed</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Mohamed Hefeeda 23</p>
    <p>Thank You!</p>
    <p>Questions??</p>
    <p>Details are available in our papers at:</p>
    <p>http://nsl.cs.sfu.ca/</p>
  </div>
</Presentation>
