<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Is advance knowledge of flow sizes a plausible assumption?</p>
    <p>Vojislav Dukic, Sangeetha Abdu Jyothi, Bojan Karlas, Muhsen Owaida, Ce Zhang, Ankit Singla</p>
  </div>
  <div class="page">
    <p>Flow size information can increase efficiency</p>
    <p>Performance</p>
    <p>FS known in advance</p>
    <p>FS not known in advance</p>
  </div>
  <div class="page">
    <p>Flow size information can increase efficiency</p>
    <p>fine-grained circuit scheduling</p>
    <p>packet scheduling within switches</p>
    <p>deadline-aware prioritization</p>
    <p>adaptive routing</p>
    <p>congestion control schemes</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>!5</p>
    <p>Typically, first-in first-out</p>
    <p>Packet scheduling at a switch queue</p>
  </div>
  <div class="page">
    <p>!5</p>
    <p>Typically, first-in first-out</p>
    <p>Packet scheduling at a switch queue</p>
  </div>
  <div class="page">
    <p>!6</p>
    <p>Packet scheduling at a switch queue</p>
    <p>But could apply shortest job first idea!</p>
  </div>
  <div class="page">
    <p>!7</p>
    <p>Packet scheduling at a switch queue</p>
    <p>Least remaining bytes first [*pFabric: Minimal Near-Optimal Datacenter Transport; SIGCOMM 13]</p>
  </div>
  <div class="page">
    <p>!7</p>
    <p>Packet scheduling at a switch queue</p>
    <p>Least remaining bytes first [*pFabric: Minimal Near-Optimal Datacenter Transport; SIGCOMM 13]</p>
  </div>
  <div class="page">
    <p>!8</p>
    <p>Packet scheduling at a switch queue</p>
    <p>Simple, but problematic: do we know the shortest flow?</p>
  </div>
  <div class="page">
    <p>Assumption: Flow size is know in advance</p>
  </div>
  <div class="page">
    <p>In many datacenter applications flow sizes or deadlines are known at initiation time and can be conveyed to the network stack (e.g., through a socket API)...</p>
    <p>pFabric  SIGCOMM 13 Improves FCT by 4x</p>
    <p>When an application calls send() or sendto() on a socket, the operating</p>
    <p>system sends this demand in a request message to the Fastpass arbiter,</p>
    <p>specifying the destination and the number of bytes.</p>
    <p>FastPass  SIGCOMM 14 Improves FCT by 15x</p>
    <p>The sender must specify the size of a message when presenting its first byte to the transport... Knowledge of message sizes is particularly valuable because it allows transports to prioritize shorter messages.</p>
    <p>Homa  SIGCOMM 18 Reduces tail latency by 100x</p>
    <p>Time</p>
  </div>
  <div class="page">
    <p>Assumption: Flow size is know in advance</p>
  </div>
  <div class="page">
    <p>Assumption: Flow size is know in advance</p>
  </div>
  <div class="page">
    <p>In this paper, we question the validity of this assumption, and point out that, for many applications, such information is difficult to obtain, and may even be unavailable.</p>
    <p>PIAS  NSDI 15</p>
    <p>A number of applications are unable to provide size/deadline information at the start of their flows, e.g. database access</p>
    <p>and HTTP chunked transfer.</p>
    <p>Karuna  SIGCOMM 16</p>
    <p>We ignore flow size and duration as they cannot be acquired until a flow finishes.</p>
    <p>CODA  SIGCOMM 16</p>
    <p>Time</p>
  </div>
  <div class="page">
    <p>Example alternative: Flow aging</p>
    <p>Packets sent = packets remaining</p>
  </div>
  <div class="page">
    <p>Example alternative: Flow aging</p>
    <p>Packets sent = packets remaining</p>
  </div>
  <div class="page">
    <p>Possible alternative: flow aging</p>
    <p>Works well for long tail flow size distributions</p>
  </div>
  <div class="page">
    <p>Possible alternative: flow aging</p>
    <p>Works well for long tail flow size distributions</p>
    <p>Works only when relative flow size is needed</p>
    <p>Doesnt work for equally sized flows</p>
  </div>
  <div class="page">
    <p>Is advance knowledge of flow sizes a plausible assumption?</p>
  </div>
  <div class="page">
    <p>Is advance knowledge of flow sizes a plausible assumption?</p>
  </div>
  <div class="page">
    <p>but partial knowledge is plausible and useful</p>
    <p>Is advance knowledge of flow sizes a plausible assumption?</p>
  </div>
  <div class="page">
    <p>Sources of flow size information?</p>
    <p>How useful is imprecise / partial knowledge?</p>
    <p>Incentives for operators and users?</p>
  </div>
  <div class="page">
    <p>Sources of flow size information?</p>
    <p>How useful is imprecise / partial knowledge?</p>
    <p>Incentives for operators and users?</p>
  </div>
  <div class="page">
    <p>Flow size estimation: design space</p>
    <p>Many apps know flow sizes</p>
    <p>Doable in private DCs</p>
    <p>Exact sizes given by application</p>
    <p>TCP buffer occupancy</p>
    <p>Monitoring system calls</p>
    <p>Learning from past traces</p>
  </div>
  <div class="page">
    <p>Flow size estimation: design space</p>
    <p>Many apps know flow sizes</p>
    <p>Doable in private DCs</p>
    <p>Exact sizes given by application</p>
    <p>TCP buffer occupancy</p>
    <p>Monitoring system calls</p>
    <p>Learning from past traces Some apps dont</p>
    <p>Change a lot of applications</p>
    <p>Change network API</p>
  </div>
  <div class="page">
    <p>Bu ffe</p>
    <p>r o cc</p>
    <p>up an</p>
    <p>cy</p>
    <p>Time (s)</p>
    <p>Flow size estimation: design space</p>
    <p>Exact sizes given by application</p>
    <p>TCP buffer occupancy</p>
    <p>Monitoring system calls</p>
    <p>Learning from past traces</p>
    <p>Buffer occupancy</p>
  </div>
  <div class="page">
    <p>Bu ffe</p>
    <p>r o cc</p>
    <p>up an</p>
    <p>cy</p>
    <p>Time (s)</p>
    <p>Flow size estimation: design space</p>
    <p>Exact sizes given by application</p>
    <p>TCP buffer occupancy</p>
    <p>Monitoring system calls</p>
    <p>Learning from past traces</p>
    <p>Buffer occupancy</p>
  </div>
  <div class="page">
    <p>Bu ffe</p>
    <p>r o cc</p>
    <p>up an</p>
    <p>cy</p>
    <p>Time (s)</p>
    <p>Flow size estimation: design space</p>
    <p>Exact sizes given by application</p>
    <p>TCP buffer occupancy</p>
    <p>Monitoring system calls</p>
    <p>Learning from past traces</p>
    <p>Buffer occupancy</p>
  </div>
  <div class="page">
    <p>Bu ffe</p>
    <p>r o cc</p>
    <p>up an</p>
    <p>cy</p>
    <p>Time (s)</p>
    <p>Flow size estimation: design space</p>
    <p>Exact sizes given by application</p>
    <p>TCP buffer occupancy</p>
    <p>Monitoring system calls</p>
    <p>Learning from past traces</p>
    <p>Buffer occupancy</p>
  </div>
  <div class="page">
    <p>Bu ffe</p>
    <p>r o cc</p>
    <p>up an</p>
    <p>cy</p>
    <p>Time (s)</p>
    <p>Flow size estimation: design space</p>
    <p>Exact sizes given by application</p>
    <p>TCP buffer occupancy</p>
    <p>Monitoring system calls</p>
    <p>Learning from past traces</p>
    <p>Buffer occupancy</p>
  </div>
  <div class="page">
    <p>Flow size estimation: design space</p>
    <p>while(data in buffer): y = write( socket_desc, buffer+x, 100KB</p>
    <p>)</p>
    <p>Exact sizes given by application</p>
    <p>TCP buffer occupancy</p>
    <p>Monitoring system calls</p>
    <p>Learning from past traces</p>
  </div>
  <div class="page">
    <p>Flow size estimation: design space</p>
    <p>flow_size = f( disk I/O, memory I/O, past network traffic, computation</p>
    <p>)</p>
    <p>Exact sizes given by application</p>
    <p>TCP buffer occupancy</p>
    <p>Monitoring system calls</p>
    <p>Learning from past traces</p>
  </div>
  <div class="page">
    <p>Learning flow size</p>
    <p>* Values are in R2 1  perfect prediction</p>
    <p>Workload Web server</p>
    <p>TensorFlow</p>
    <p>PageRank</p>
    <p>KMeans</p>
    <p>SGD</p>
    <p>Performance 0.96 0.97 0.83 0.88 0.79</p>
    <p>+</p>
    <p>Trace Disk I/O</p>
    <p>Memory I/O</p>
    <p>CPU cycles</p>
    <p>Past traffic</p>
    <p>+</p>
    <p>Model GBDT</p>
    <p>FFNN</p>
    <p>LSTM =</p>
  </div>
  <div class="page">
    <p>Sources of flow size information?</p>
    <p>How useful is imprecise / partial knowledge?</p>
    <p>Incentives for operators and users?</p>
  </div>
  <div class="page">
    <p>Flow scheduling using imprecise knowledge</p>
    <p>[TensorFlow workload]</p>
    <p>pFabric pHost FastPass</p>
    <p>M ea</p>
    <p>n FC</p>
    <p>T (m</p>
    <p>s) Perfect</p>
    <p>Fifo</p>
    <p>Mean FCT (ms)</p>
    <p>[1. pHost: Distributed Near-Optimal Datacenter Transport Over Commodity Network Fabric; CoNEXT 15]</p>
    <p>[2. Fastpass: A Centralized Zero-Queue Datacenter Network; SIGCOMM 14]</p>
  </div>
  <div class="page">
    <p>Flow scheduling using imprecise knowledge</p>
    <p>pFabric pHost FastPass</p>
    <p>M ea</p>
    <p>n FC</p>
    <p>T (m</p>
    <p>s) Perfect</p>
    <p>Fifo</p>
    <p>Mean FCT (ms)</p>
    <p>[TensorFlow workload]</p>
    <p>[1. pHost: Distributed Near-Optimal Datacenter Transport Over Commodity Network Fabric; CoNEXT 15]</p>
    <p>[2. Fastpass: A Centralized Zero-Queue Datacenter Network; SIGCOMM 14]</p>
    <p>Least remaining bytes first</p>
  </div>
  <div class="page">
    <p>Flow scheduling using imprecise knowledge</p>
    <p>pFabric pHost FastPass</p>
    <p>M ea</p>
    <p>n FC</p>
    <p>T (m</p>
    <p>s) Perfect</p>
    <p>Fifo</p>
    <p>Mean FCT (ms)</p>
    <p>[TensorFlow workload]</p>
    <p>[1. pHost: Distributed Near-Optimal Datacenter Transport Over Commodity Network Fabric; CoNEXT 15]</p>
    <p>[2. Fastpass: A Centralized Zero-Queue Datacenter Network; SIGCOMM 14]</p>
  </div>
  <div class="page">
    <p>Flow scheduling using imprecise knowledge</p>
    <p>pFabric pHost FastPass</p>
    <p>M ea</p>
    <p>n FC</p>
    <p>T (m</p>
    <p>s) Perfect</p>
    <p>Fifo Prediction</p>
    <p>Mean FCT (ms)</p>
    <p>[TensorFlow workload]</p>
    <p>[1. pHost: Distributed Near-Optimal Datacenter Transport Over Commodity Network Fabric; CoNEXT 15]</p>
    <p>[2. Fastpass: A Centralized Zero-Queue Datacenter Network; SIGCOMM 14]</p>
  </div>
  <div class="page">
    <p>Flow scheduling using imprecise knowledge</p>
    <p>pFabric pHost FastPass</p>
    <p>M ea</p>
    <p>n FC</p>
    <p>T (m</p>
    <p>s) Perfect</p>
    <p>Fifo Prediction</p>
    <p>Mean FCT (ms)</p>
    <p>[TensorFlow workload]</p>
    <p>[1. pHost: Distributed Near-Optimal Datacenter Transport Over Commodity Network Fabric; CoNEXT 15]</p>
    <p>[2. Fastpass: A Centralized Zero-Queue Datacenter Network; SIGCOMM 14]</p>
  </div>
  <div class="page">
    <p>pFabric pHost FastPass</p>
    <p>M ea</p>
    <p>n FC</p>
    <p>T (m</p>
    <p>s) Perfect</p>
    <p>Fifo Prediction</p>
    <p>Aging</p>
    <p>Flow scheduling using imprecise knowledge</p>
    <p>Mean FCT (ms)</p>
    <p>[TensorFlow workload]</p>
    <p>[1. pHost: Distributed Near-Optimal Datacenter Transport Over Commodity Network Fabric; CoNEXT 15]</p>
    <p>[2. Fastpass: A Centralized Zero-Queue Datacenter Network; SIGCOMM 14]</p>
  </div>
  <div class="page">
    <p>Pag eRa</p>
    <p>nk KMe</p>
    <p>ans SGD Tens</p>
    <p>orFl ow</p>
    <p>Web Ser</p>
    <p>ver</p>
    <p>Re la</p>
    <p>tiv e</p>
    <p>pe rf</p>
    <p>or m</p>
    <p>an ce</p>
    <p>de</p>
    <p>gr ad</p>
    <p>at io</p>
    <p>n</p>
    <p>Coflow scheduling using imprecise knowledge (Sincronia*)</p>
    <p>Slowdown</p>
    <p>[*Sincronia: Near-Optimal Network Design for Coflows; SIGCOMM 18]</p>
  </div>
  <div class="page">
    <p>Pag eRa</p>
    <p>nk KMe</p>
    <p>ans SGD Tens</p>
    <p>orFl ow</p>
    <p>Web Ser</p>
    <p>ver</p>
    <p>Re la</p>
    <p>tiv e</p>
    <p>pe rf</p>
    <p>or m</p>
    <p>an ce</p>
    <p>de</p>
    <p>gr ad</p>
    <p>at io</p>
    <p>n</p>
    <p>Coflow scheduling using imprecise knowledge (Sincronia*)</p>
    <p>Slowdown</p>
    <p>[*Sincronia: Near-Optimal Network Design for Coflows; SIGCOMM 18]</p>
    <p>Workload R2</p>
    <p>Web server 0.96</p>
    <p>TensorFlow 0.97</p>
    <p>PageRank 0.83</p>
    <p>KMeans 0.88</p>
    <p>SGD 0.79</p>
  </div>
  <div class="page">
    <p>Pag eRa</p>
    <p>nk KMe</p>
    <p>ans SGD Tens</p>
    <p>orFl ow</p>
    <p>Web Ser</p>
    <p>ver</p>
    <p>Re la</p>
    <p>tiv e</p>
    <p>pe rf</p>
    <p>or m</p>
    <p>an ce</p>
    <p>de</p>
    <p>gr ad</p>
    <p>at io</p>
    <p>n</p>
    <p>Coflow scheduling using imprecise knowledge (Sincronia*)</p>
    <p>Slowdown</p>
    <p>[*Sincronia: Near-Optimal Network Design for Coflows; SIGCOMM 18]</p>
    <p>Workload R2</p>
    <p>Web server 0.96</p>
    <p>TensorFlow 0.97</p>
    <p>PageRank 0.83</p>
    <p>KMeans 0.88</p>
    <p>SGD 0.79</p>
  </div>
  <div class="page">
    <p>Pag eRa</p>
    <p>nk KMe</p>
    <p>ans SGD Tens</p>
    <p>orFl ow</p>
    <p>Web Ser</p>
    <p>ver</p>
    <p>Re la</p>
    <p>tiv e</p>
    <p>pe rf</p>
    <p>or m</p>
    <p>an ce</p>
    <p>de</p>
    <p>gr ad</p>
    <p>at io</p>
    <p>n</p>
    <p>Coflow scheduling using imprecise knowledge (Sincronia*)</p>
    <p>Slowdown</p>
    <p>[*Sincronia: Near-Optimal Network Design for Coflows; SIGCOMM 18]</p>
    <p>Workload R2</p>
    <p>Web server 0.96</p>
    <p>TensorFlow 0.97</p>
    <p>PageRank 0.83</p>
    <p>KMeans 0.88</p>
    <p>SGD 0.79</p>
  </div>
  <div class="page">
    <p>CD F</p>
    <p>Latency (s)</p>
    <p>CPU</p>
    <p>Fast enough, deployable learning?</p>
    <p>CDF</p>
  </div>
  <div class="page">
    <p>CD F</p>
    <p>Latency (s)</p>
    <p>CPU</p>
    <p>Fast enough, deployable learning?</p>
    <p>CDF</p>
  </div>
  <div class="page">
    <p>CD F</p>
    <p>Latency (s)</p>
    <p>CPU FPGA</p>
    <p>Fast enough, deployable learning?</p>
    <p>CDF</p>
  </div>
  <div class="page">
    <p>Flow size estimation: design space</p>
    <p>Works only for repetitive workloads</p>
    <p>Must identify the application Substantial implementation effort.</p>
    <p>Exact sizes given by application</p>
    <p>TCP buffer occupancy</p>
    <p>Monitoring system calls</p>
    <p>Learning from past traces</p>
  </div>
  <div class="page">
    <p>Learning from past traces</p>
    <p>Every technique provides some knowledge</p>
    <p>Estimation effort</p>
    <p>Flow size knowledge</p>
    <p>Exact sizes given by application</p>
    <p>TCP buffer occupancy</p>
    <p>Monitoring system calls</p>
  </div>
  <div class="page">
    <p>Learning from past traces</p>
    <p>Every technique provides some knowledge</p>
    <p>Estimation effort</p>
    <p>Flow size knowledge</p>
    <p>Exact sizes given by application</p>
    <p>TCP buffer occupancy</p>
    <p>Monitoring system calls</p>
  </div>
  <div class="page">
    <p>Sources of flow size information?</p>
    <p>How useful is imprecise / partial knowledge?</p>
    <p>Incentives for operators and users?</p>
  </div>
  <div class="page">
    <p>What we want: More knowledge  better performance</p>
    <p>Knowledge = Effort</p>
    <p>Performance</p>
  </div>
  <div class="page">
    <p>Time</p>
  </div>
  <div class="page">
    <p>Unknown</p>
    <p>Time</p>
  </div>
  <div class="page">
    <p>Unknown Known</p>
    <p>TimeTime</p>
  </div>
  <div class="page">
    <p>Unknown Known</p>
    <p>Q1: Can this flows performance deteriorate?</p>
    <p>TimeTime</p>
  </div>
  <div class="page">
    <p>Unknown Known</p>
    <p>Q2: Can the whole systems performance deteriorate?</p>
    <p>TimeTime</p>
  </div>
  <div class="page">
    <p>Q1: Can this flows performance deteriorate?</p>
    <p>Unknown Known</p>
    <p>Q2: Can the whole systems performance deteriorate?</p>
  </div>
  <div class="page">
    <p>Q1: Can this flows performance deteriorate?</p>
    <p>Unknown Known</p>
    <p>Old scheduling problem, but novel, interesting questions raised by our unique angle!</p>
    <p>Q2: Can the whole systems performance deteriorate?</p>
  </div>
  <div class="page">
    <p>Q1: Can this flows performance deteriorate?</p>
    <p>Unknown Known</p>
  </div>
  <div class="page">
    <p>Q1: Can this flows performance deteriorate?</p>
    <p>Unknown Known</p>
    <p>Least remaining bytes first</p>
  </div>
  <div class="page">
    <p>Q1: Can this flows performance deteriorate?</p>
    <p>Unknown Known</p>
    <p>Least remaining bytes first</p>
    <p>+ 1</p>
    <p>Flow aging 0101223</p>
  </div>
  <div class="page">
    <p>Q1: Can this flows performance deteriorate?</p>
    <p>Unknown Known</p>
    <p>A flows performance cannot deteriorate!</p>
    <p>Least remaining bytes first</p>
    <p>+ 1</p>
    <p>Flow aging 0101223</p>
  </div>
  <div class="page">
    <p>For coflow scheduling with mean flow size used for unknowns, performance can in fact deteriorate</p>
    <p>Unknown Known</p>
    <p>Q1: Can this flows performance deteriorate?</p>
  </div>
  <div class="page">
    <p>Q2: Can the whole systems performance deteriorate?</p>
    <p>Unknown Known</p>
  </div>
  <div class="page">
    <p>Q2: Can the whole systems performance deteriorate?</p>
    <p>Average co/flow completion time system-wide can deteriorate!</p>
    <p>Unknown Known</p>
  </div>
  <div class="page">
    <p>Sl ow</p>
    <p>do w</p>
    <p>n</p>
    <p>Percentage of known flows</p>
    <p>Slowdown</p>
    <p>Perfect knowledge performance</p>
    <p>Unknown Known</p>
    <p>Q2: Can the whole systems performance deteriorate?</p>
  </div>
  <div class="page">
    <p>Sl ow</p>
    <p>do w</p>
    <p>n</p>
    <p>Percentage of known flows</p>
    <p>Slowdown</p>
    <p>Open question: positive results with some restrictions?</p>
    <p>Perfect knowledge performance</p>
    <p>Unknown Known</p>
    <p>Q2: Can the whole systems performance deteriorate?</p>
  </div>
  <div class="page">
    <p>Sources of flow size information? Partial knowledge available from many sources</p>
    <p>How useful is imprecise / partial knowledge? Can still provide performance improvements</p>
    <p>Incentives for operators and users? Need better guarantees on value of investment</p>
    <p>Is advance knowledge of flow sizes a plausible assumption?</p>
  </div>
  <div class="page">
    <p>Thank you for your attention</p>
    <p>vojislav.dukic@inf.ethz.ch</p>
  </div>
  <div class="page">
    <p>Performance improvement</p>
    <p>Pe rfo</p>
    <p>rm an</p>
    <p>ce</p>
    <p>Size of known flows</p>
    <p>SGD PageRank</p>
    <p>TensorFlow</p>
  </div>
  <div class="page">
    <p>Features</p>
    <p>Feature Description Start time, tf Start time of f relative to job start time Flow gap Time since the end of the previous flow First call Size of the first system call tf Network in Data received until tf Network out Data sent until tf Network in(d) Data received from flows dest. d until tf Network out(d) Data sent by this host to d until tf CPU CPU cycles used until tf Disk I/O Total disk I/O until tf Memory I/O Total memory I/O until tf Previous flows Flow sizes for last k flows</p>
  </div>
</Presentation>
