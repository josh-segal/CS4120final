<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>DEW: Distributed Experiment Workflows</p>
    <p>Jelena Mirkovic, Genevieve Bartlett and Jim Blythe {mirkovic, bartlett, blythe}@isi.edu</p>
    <p>USC Information Sciences Institute</p>
  </div>
  <div class="page">
    <p>Testbed Evaluation What we think we do</p>
    <p>Vital for testing security solutions</p>
    <p>Testbed evaluation requires structured, rigorous and robust hypothesis testing</p>
    <p>Peer review: Communicate what/how</p>
  </div>
  <div class="page">
    <p>But, Sometimes More Art Than Science What we think we do</p>
    <p>What we actually do</p>
  </div>
  <div class="page">
    <p>Noble Goals in Testbed Experimentation What we think we doWhat we actually do</p>
    <p>More:  Automation  Proactive error</p>
    <p>detection</p>
    <p>Less:  Tedious +</p>
    <p>Manual  Error prone</p>
  </div>
  <div class="page">
    <p>Noble Goals in Testbed Experimentation</p>
    <p>Better artifact and documentation creation  Repeatability and Reuse (needs portability)  Proactively identify and address errors</p>
    <p>What we think we doWhat we actually do</p>
  </div>
  <div class="page">
    <p>Why are we not there yet? What we think we do</p>
  </div>
  <div class="page">
    <p>Why are we not there yet? What we think we do</p>
    <p>Experiment representations are lacking  Currently focus on topological structure and resources  Need standardized way to encode behavior</p>
  </div>
  <div class="page">
    <p>Why are we not there yet? What we think we do</p>
    <p>Experiment representations are lacking  Currently focus on topological structure and resources  Need standardized way to encode behavior</p>
    <p>DEW: A way to represent experiments</p>
  </div>
  <div class="page">
    <p>Overview  Distributed Experiment Workflows: DEW  Automation through DEW  Building with and on prior work  UI/Demo</p>
  </div>
  <div class="page">
    <p>Overview  Distributed Experiment Workflows: DEW  Automation through DEW  Building with and on prior work  UI/Demo</p>
  </div>
  <div class="page">
    <p>Distributed Experiment Workflows</p>
    <p>Captures Full Experiment Description by drawing out only what matters</p>
    <p>behavior + resources/topology = experiment  Strong separation between the behavior, the tools that enact that</p>
    <p>behavior and the topology the behavior is enacted on</p>
  </div>
  <div class="page">
    <p>Full Experiment Description  Works like a playscript:  Scenario: The What and who (actions in an experiment, and the actors</p>
    <p>involved)  Bindings: The How (the tools, orchestration and configurations needed</p>
    <p>to carry out the what)  Constraints: The Where (such as on hardware x, os y, linked with at</p>
    <p>least bandwidth x)</p>
  </div>
  <div class="page">
    <p>Full Experiment Description  Works like a playscript:  Scenario: The What and who (actions in an experiment, and the actors</p>
    <p>involved)</p>
    <p>Bindings: The How (the tools, orchestration and configurations needed to carry out the what)</p>
    <p>Constraints: The Where (such as on hardware x, os y, linked with at least bandwidth x)</p>
    <p>Scenario (actors + actions)</p>
    <p>Bindings (tools)</p>
    <p>Behavior</p>
    <p>+ Constraints Appropriate</p>
    <p>Testbed Topology and</p>
    <p>Resources</p>
  </div>
  <div class="page">
    <p>Gist of a DEW Statement  General: &lt;Trigger(s)&gt; &lt;Actor(s)&gt; &lt;action(s)&gt;&lt;signals&gt;  Examples:  Attacker startAttack  WHEN startWebserver WAIT t0 Attacker startAttack EMIT attackStarted</p>
    <p>Note: Actors != individual resources  E.g. An attacker role may be spread across multiple physical nodes  E.g. Multiple nodes acting in the same client role</p>
  </div>
  <div class="page">
    <p>DEW Goals  High-level representation  Generic language  Self-contained representation  Decouple behavior from topology and resources  Structured representation</p>
  </div>
  <div class="page">
    <p>High-level Representation  Human-readable (no, really)  Quick glance should tell you what the experiment does  Enables humans to sort out what is interesting, useful and reusable</p>
  </div>
  <div class="page">
    <p>Generic Language  Support a diverse range of experiments  Focus now on cybersecurity and human modeling, but goal is to be</p>
    <p>broadly applicable</p>
  </div>
  <div class="page">
    <p>Self-contained Representation + Decouple Behavior  Capture enough details to support automatic generation</p>
    <p>of experiment pieces for a range of testbeds  Decouple topological structure and resources enables</p>
    <p>easy scaling and portability</p>
  </div>
  <div class="page">
    <p>Structured Representation  Focus on the high-level first  Match natural flow for humans in understanding or describing a process</p>
    <p>Focus on only the important details  Constraints emphasize the most salient details in reconstructing the</p>
    <p>underlying resources for an experiment</p>
  </div>
  <div class="page">
    <p>Overview  Distributed Experiment Workflows: DEW  Automation through DEW  Building with and on prior work  UI/Demo</p>
  </div>
  <div class="page">
    <p>Automation  Generate</p>
    <p>DEW -&gt; experiment  Scripted tools (including</p>
    <p>orchestration tools)  Topology descriptions</p>
    <p>Translate  experiment -&gt; DEW (reverse process)</p>
    <p>goal</p>
    <p>scenario (what)</p>
    <p>bindings (how)</p>
    <p>constraints (where)</p>
    <p>DEW</p>
    <p>scripts</p>
    <p>topology tr an</p>
    <p>sl at or s generators</p>
  </div>
  <div class="page">
    <p>Generators  May not produce fully featured scripts, but:  Provide structure for common variables for configuring and tuning  Structure for varying independent variables and producing runs of results  Offers point to decouple orchestration from other experiment tooling,</p>
    <p>enabling different orchestration to be inserted for different environments</p>
  </div>
  <div class="page">
    <p>Translators  Work with how users work currently  Benefit: potential eventual adoption, but if not, helps the</p>
    <p>experiment be sharable/portable  Challenge: capture manual input in a meaningful way  Identify and prune paths of unproductive/undone input  Identify and capture varying independent variables</p>
  </div>
  <div class="page">
    <p>Overview  Distributed Experiment Workflows: DEW  Automation through DEW  Building with and on prior work  UI/Demo</p>
  </div>
  <div class="page">
    <p>Standing on the Shoulders  Lets not insist on stepping on the toes of those who came before</p>
    <p>us instead of climbing on their shoulders  Dan Ingalls</p>
  </div>
  <div class="page">
    <p>Standing on the Shoulders  Many inspiring works:  NS-based Experimentation Workbench (Eide et al.)  GPLMT (XML-based)  Grid computing workflows</p>
    <p>DEW  Higher-level language (much shorter descriptions)  Stronger abstraction from topology/resources  Translators/Generators enable building with and on other workflow tools</p>
  </div>
  <div class="page">
    <p>Overview  Distributed Experiment Workflows: DEW  Automation through DEW  Building with and on prior work  UI/Demo</p>
  </div>
  <div class="page">
    <p>Prototype UI: Key Features  Assisted text UI  Suggestions to help with DEW syntax</p>
    <p>Natural Language Processing  NLP-&gt;DEW  Challenging, but a first stab at living the dream</p>
    <p>DAG-based representation of event dependencies  Topology depiction based on constraints  past experiences with DETER indicate users under</p>
    <p>constrain, DEW fills in some guesses</p>
  </div>
  <div class="page">
    <p>Quick Demo: Set up  Test of DoS defense deployed at a firewall  Actors: webserver, firewall, attacker  After the webserver is up and serving content, the attacker will</p>
    <p>begin an attack. Then the firewall will deploy defenses.  In DEW:</p>
    <p>+ tool bindings + some constraints</p>
  </div>
  <div class="page">
    <p>Quick Demo</p>
  </div>
  <div class="page">
    <p>Call to Action</p>
    <p>Help us develop DEW  Can you describe your experiment in DEW?  Whats missing in DEW? What worked?  UI can help you play with the language</p>
    <p>Thanks:  Jelena Mirkovic, Genevieve Bartlett, Jim Blythe</p>
    <p>{mirkovic, bartlett, blythe}@isi.edu</p>
    <p>Github: https://github.com/gbartlet/DEW</p>
  </div>
</Presentation>
