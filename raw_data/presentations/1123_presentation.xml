<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Siyuan Wang, Chang Lou, Rong Chen, Haibo Chen</p>
    <p>Fast and Concurrent RDF Queries using RDMA-assisted GPU Graph Exploration</p>
    <p>Institute of Parallel and Distributed Systems (IPADS) Shanghai Jiao Tong University</p>
    <p>http://ipads.se.sjtu.edu.cn</p>
  </div>
  <div class="page">
    <p>Graphs are Everywhere</p>
    <p>Online graph query plays a vital role for searching, mining and reasoning linked data</p>
    <p>Unicorn TAO</p>
  </div>
  <div class="page">
    <p>RDF and SPARQL Resource Description Framework (RDF)  Representing linked data on the Web  Public knowledge bases: DBpedia, Wikidata, PubChemRDF  Googles knowledge graph</p>
  </div>
  <div class="page">
    <p>to OS</p>
    <p>ad</p>
    <p>Rong to</p>
    <p>Siyuan</p>
    <p>DS tc</p>
    <p>mo</p>
    <p>tc Haibo</p>
    <p>IPADS</p>
    <p>Jiaxin</p>
    <p>ad Changmo</p>
    <p>tc</p>
    <p>RDF and SPARQL RDF is a graph composed by a set of Subject, Predicate, Object triples</p>
    <p>Rong to DS Rong mo IPADS Siyuan ad Rong Siyuan tc OS Haibo to OS Haibo mo IPADS Jiaxin ad Haibo . . .</p>
    <p>mo: MemberOf ad: ADvisor to: TeacherOf tc: TakeCourse</p>
    <p>triple Rong DS</p>
    <p>to</p>
  </div>
  <div class="page">
    <p>Triple Pattern</p>
    <p>RDF and SPARQL SPARQL is standard query language for RDF</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X teacherof ?Y . ?Z takecourse ?Y . ?Z adivsor ?X .</p>
    <p>}</p>
    <p>Professor (?X) advises (ad) student (?Z) who also takes (tc) a course (?Y) taught by (tc) the professor</p>
    <p>TP1 TP2 TP3</p>
    <p>Variable</p>
    <p>to OS</p>
    <p>ad</p>
    <p>Rong to</p>
    <p>Siyuan</p>
    <p>DS tc</p>
    <p>mo</p>
    <p>tc Haibo</p>
    <p>IPADS</p>
    <p>Jiaxin</p>
    <p>ad Changmo</p>
    <p>to OS</p>
    <p>ad tc</p>
    <p>Haibo</p>
    <p>Jiaxin</p>
    <p>tc</p>
  </div>
  <div class="page">
    <p>Queries are Heterogeneous</p>
    <p>Heavy Query (QH)  Start from a set of vertices  Explore a large part of graph</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X teacherof ?Y . ?Z takecourse ?Y . ?Z adivsor ?X . }</p>
    <p>to OS</p>
    <p>ad</p>
    <p>Rong to</p>
    <p>Siyuan</p>
    <p>DS tc</p>
    <p>mo</p>
    <p>tc Haibo</p>
    <p>IPADS</p>
    <p>Jiaxin</p>
    <p>ad Changmo</p>
    <p>tc</p>
    <p>Light Query (QL)</p>
  </div>
  <div class="page">
    <p>to OS</p>
    <p>ad</p>
    <p>Rong to</p>
    <p>Siyuan</p>
    <p>DS tc</p>
    <p>mo</p>
    <p>tc Haibo</p>
    <p>IPADS</p>
    <p>Jiaxin</p>
    <p>ad Changmo</p>
    <p>tc</p>
    <p>TP1</p>
    <p>Queries are Heterogeneous</p>
    <p>Heavy Query (QH)  Start from a set of vertices  Explore a large part of graph</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X teacherof ?Y . ?Z takecourse ?Y . ?Z adivsor ?X . }</p>
    <p>to DSRong</p>
    <p>to OS Haibo</p>
    <p>Light Query (QL)</p>
  </div>
  <div class="page">
    <p>TP3 TP2</p>
    <p>to OS</p>
    <p>ad</p>
    <p>Rong to</p>
    <p>Siyuan</p>
    <p>DS tc</p>
    <p>mo</p>
    <p>tc Haibo</p>
    <p>IPADS</p>
    <p>Jiaxin</p>
    <p>ad Changmo</p>
    <p>tc</p>
    <p>TP1</p>
    <p>Queries are Heterogeneous</p>
    <p>Heavy Query (QH)  Start from a set of vertices  Explore a large part of graph</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X teacherof ?Y . ?Z takecourse ?Y . ?Z adivsor ?X . }</p>
    <p>to DSRong</p>
    <p>to OS Haibo</p>
    <p>ad</p>
    <p>Siyuan</p>
    <p>tc</p>
    <p>tc Jiaxin</p>
    <p>ad Chang</p>
    <p>tc</p>
    <p>Light Query (QL)</p>
  </div>
  <div class="page">
    <p>TP3 TP2</p>
    <p>to OS</p>
    <p>ad</p>
    <p>Rong to</p>
    <p>Siyuan</p>
    <p>DS tc</p>
    <p>mo</p>
    <p>tc Haibo</p>
    <p>IPADS</p>
    <p>Jiaxin</p>
    <p>ad Changmo</p>
    <p>tc</p>
    <p>TP1</p>
    <p>Queries are Heterogeneous</p>
    <p>Heavy Query (QH)  Start from a set of vertices  Explore a large part of graph</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X teacherof ?Y . ?Z takecourse ?Y . ?Z adivsor ?X . }</p>
    <p>to DSRong</p>
    <p>to OS Haibo</p>
    <p>ad</p>
    <p>Siyuan</p>
    <p>tc</p>
    <p>tc Jiaxin</p>
    <p>ad Chang</p>
    <p>tc</p>
    <p>Light Query (QL)</p>
  </div>
  <div class="page">
    <p>Queries are Heterogeneous</p>
    <p>Heavy Query (QH)  Start from a set of vertices  Explore a large part of graph</p>
    <p>Light Query (QL)  Start from a given vertex  Explore a small part of graph</p>
    <p>SELECT ?X WHERE { ?X advisor Rong . ?X takecourse OS . }</p>
    <p>to OS</p>
    <p>ad</p>
    <p>Rong to</p>
    <p>Siyuan</p>
    <p>DS tc</p>
    <p>mo</p>
    <p>tc Haibo</p>
    <p>IPADS</p>
    <p>Jiaxin</p>
    <p>ad Changmo</p>
    <p>tc</p>
  </div>
  <div class="page">
    <p>Queries are Heterogeneous</p>
    <p>Heavy Query (QH)  Start from a set of vertices  Explore a large part of graph</p>
    <p>Light Query (QL)  Start from a given vertex  Explore a small part of graph</p>
    <p>SELECT ?X WHERE { ?X advisor Rong . ?X takecourse OS . }</p>
    <p>to OS</p>
    <p>ad</p>
    <p>Rong to</p>
    <p>Siyuan</p>
    <p>DS tc</p>
    <p>mo</p>
    <p>tc Haibo</p>
    <p>IPADS</p>
    <p>Jiaxin</p>
    <p>ad Changmo</p>
    <p>tc</p>
    <p>OS</p>
    <p>Rong</p>
    <p>Siyuan ad tc</p>
  </div>
  <div class="page">
    <p>Queries are Heterogeneous</p>
    <p>Heavy Query (QH)  Start from a set of vertices  Explore a large part of graph</p>
    <p>Light Query (QL)  Start from a given vertex  Explore a small part of graph</p>
    <p>Q7* 390 ms</p>
    <p>Q5* 0.13 ms</p>
    <p>* Wukong on a 10-server cluster for LUBM-10240 dataset</p>
    <p>.. ..1</p>
    <p>... .1</p>
    <p>... .</p>
    <p>... .</p>
    <p>... .</p>
    <p>Incompetent to handle heavy queries efficiently</p>
  </div>
  <div class="page">
    <p>Concurrent Workload</p>
    <p>Throughput</p>
    <p>La te</p>
    <p>nc y</p>
    <p>logarithmic scale</p>
    <p>better</p>
  </div>
  <div class="page">
    <p>Concurrent Workload</p>
    <p>Throughput</p>
    <p>La te</p>
    <p>nc y</p>
    <p>logarithmic scale</p>
    <p>PURE light query workload</p>
    <p>Thpt: 398K q/s</p>
    <p>Lat: 0.10 ms</p>
  </div>
  <div class="page">
    <p>Concurrent Workload</p>
    <p>Thpt: 398K q/s</p>
    <p>Throughput</p>
    <p>La te</p>
    <p>nc y</p>
    <p>PURE light query workload</p>
    <p>Lat: 0.10 ms</p>
    <p>HYBRID light &amp; heavy query workload</p>
    <p>Thpt: 40 q/s Lat: 100 ms</p>
    <p>Thpt: 10 q/s Lat: 8,600 ms</p>
    <p>logarithmic scale</p>
    <p>poor performance when facing hybrid workload</p>
  </div>
  <div class="page">
    <p>Advanced Hardware Heterogeneity  GPU has many cores and</p>
    <p>high memory bandwidth GPUCPU</p>
    <p>memory</p>
    <p>Server</p>
    <p>CPU</p>
    <p>RNIC</p>
    <p>memory</p>
    <p>Server</p>
    <p>RNIC CPU</p>
    <p>Fast Communications  RDMA enables direct</p>
    <p>data transfer between machines</p>
  </div>
  <div class="page">
    <p>General Idea Heterogeneous</p>
    <p>Workload</p>
    <p>CPU</p>
    <p>GPU</p>
    <p>Heterogeneous Hardware</p>
    <p>.. ..1</p>
    <p>Light Query</p>
    <p>... .1</p>
    <p>... .</p>
    <p>... .</p>
    <p>... .Heavy Query</p>
  </div>
  <div class="page">
    <p>System Overview : a distributed graph query system that</p>
    <p>can leverage CPU/GPU to handle hybrid workload 1. GPU-enable graph exploration 2. GPU-friendly RDF store 3. Heterogeneous RDMA Communication</p>
    <p>Performance improvement  Latency: 2.3X - 9.0X speedup for heavy query  Throughput: 345K queries/sec in hybrid workloads</p>
    <p>Wukong+G</p>
  </div>
  <div class="page">
    <p>Wukong Architecture</p>
    <p>SPARQL queries</p>
  </div>
  <div class="page">
    <p>Wukong+G Architecture</p>
    <p>Agent</p>
  </div>
  <div class="page">
    <p>H ist</p>
    <p>or y</p>
    <p>Ta bl</p>
    <p>e</p>
    <p>Query</p>
    <p>St or</p>
    <p>eKey Value</p>
    <p>CPU CP U</p>
    <p>D RA</p>
    <p>M</p>
    <p>Query Execution on CPU Work Thread Graph StoreMetadata</p>
    <p>Intermediate Result</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X teacherof ?Y . ?Z takecourse ?Y . ?Z adivsor ?X . }</p>
  </div>
  <div class="page">
    <p>TP-1 TP-2 ...</p>
    <p>H ist</p>
    <p>or y</p>
    <p>Ta bl</p>
    <p>e</p>
    <p>Query</p>
    <p>St or</p>
    <p>eKey Value</p>
    <p>CPU CP U</p>
    <p>D RA</p>
    <p>M</p>
    <p>?X ?Y?Z</p>
    <p>Query Execution on CPU Work Thread Graph StoreMetadata</p>
    <p>Intermediate Result</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X teacherof ?Y . ?Z takecourse ?Y . ?Z adivsor ?X . }</p>
  </div>
  <div class="page">
    <p>TP-1 TP-2 ...</p>
    <p>H ist</p>
    <p>or y</p>
    <p>Ta bl</p>
    <p>e</p>
    <p>Query</p>
    <p>St or</p>
    <p>eKey Value</p>
    <p>CPU CP U</p>
    <p>D RA</p>
    <p>M</p>
    <p>?X ?Y?Z</p>
    <p>TP-2</p>
    <p>Query Execution on CPU Work Thread Graph StoreMetadata</p>
    <p>Intermediate Result</p>
    <p>TP3 TP2 TP1</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X teacherof ?Y . ?Z takecourse ?Y . ?Z adivsor ?X . }</p>
  </div>
  <div class="page">
    <p>TP-1 TP-2 ...</p>
    <p>H ist</p>
    <p>or y</p>
    <p>Ta bl</p>
    <p>e</p>
    <p>Query</p>
    <p>St or</p>
    <p>eKey Value</p>
    <p>CPU CP U</p>
    <p>D RA</p>
    <p>M</p>
    <p>?X ?Y?Z</p>
    <p>TP-2</p>
    <p>Query Execution on CPU Work Thread Graph StoreMetadata</p>
    <p>Intermediate Result</p>
    <p>TP3 TP2 TP1</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X teacherof ?Y . ?Z takecourse ?Y . ?Z adivsor ?X . }</p>
    <p>Observation: all of traversal paths can be explored independently</p>
  </div>
  <div class="page">
    <p>Query Execution on CPU TP3 TP2 TP1</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X teacherof ?Y . ?Z takecourse ?Y . ?Z adivsor ?X . }</p>
    <p>TP-1 TP-2 ...</p>
    <p>H ist</p>
    <p>or y</p>
    <p>Ta bl</p>
    <p>e</p>
    <p>Query</p>
    <p>St or</p>
    <p>eKey Value</p>
    <p>CPU CP U</p>
    <p>D RA</p>
    <p>M</p>
    <p>?X ?Y?Z</p>
    <p>TP-2</p>
    <p>Work Thread Graph StoreMetadata</p>
    <p>Intermediate Result</p>
  </div>
  <div class="page">
    <p>TP-1 TP-2 ...</p>
    <p>H ist</p>
    <p>or y</p>
    <p>Ta bl</p>
    <p>e</p>
    <p>Query</p>
    <p>St or</p>
    <p>eKey Value</p>
    <p>CPU CP U</p>
    <p>D RA</p>
    <p>M ?X ?Y?Z</p>
    <p>TP-2</p>
    <p>H ist</p>
    <p>or y</p>
    <p>Ta bl</p>
    <p>e</p>
    <p>Key Value</p>
    <p>Ca ch</p>
    <p>e</p>
    <p>G PU</p>
    <p>D RA</p>
    <p>MGPU</p>
    <p>?X ?Y?Z</p>
    <p>Query Execution on GPU TP3 TP2 TP1</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X teacherof ?Y . ?Z takecourse ?Y . ?Z adivsor ?X . }</p>
    <p>Work Thread</p>
    <p>Agent Thread</p>
  </div>
  <div class="page">
    <p>H ist</p>
    <p>or y</p>
    <p>Ta bl</p>
    <p>e</p>
    <p>Key Value</p>
    <p>Ca ch</p>
    <p>e</p>
    <p>G PU</p>
    <p>D RA</p>
    <p>MGPU</p>
    <p>?X ?Y?Z</p>
    <p>TP-1 TP-2 ...</p>
    <p>H ist</p>
    <p>or y</p>
    <p>Ta bl</p>
    <p>e</p>
    <p>Query</p>
    <p>St or</p>
    <p>eKey Value</p>
    <p>CPU CP U</p>
    <p>D RA</p>
    <p>M ?X ?Y?Z</p>
    <p>TP-2</p>
    <p>Query Execution on GPU TP3 TP2 TP1</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X teacherof ?Y . ?Z takecourse ?Y . ?Z adivsor ?X . }</p>
    <p>Work Thread</p>
    <p>Agent Thread</p>
    <p>Prefecthing</p>
  </div>
  <div class="page">
    <p>Challenges 1. Small GPU memory</p>
  </div>
  <div class="page">
    <p>Smart data prefetching</p>
    <p>GPU-friendly key/value store</p>
    <p>Heterogeneous RDMA comm.</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Smart Data Prefetching</p>
    <p>Granularity Memory Footprint Data</p>
    <p>Transfer Entire graph 16.3GB Failed</p>
    <p>Case study: Q7 on LUBM-2560</p>
    <p>Entire RDF graph X// Out-of-memory Time TP3</p>
    <p>TP2 TP1</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X teacherof ?Y . ?Z takecourse ?Y . ?Z adivsor ?X . }</p>
    <p>OB1: a query only touches a part of RDF data</p>
    <p>OB2: the predicate of TP is commonly known</p>
  </div>
  <div class="page">
    <p>Smart Data Prefetching</p>
    <p>Granularity Memory Footprint Data</p>
    <p>Transfer Entire graph 16.3GB Failed Per-query 5.6GB 5.6GB</p>
    <p>Case study: Q7 on LUBM-2560 Per-query</p>
    <p>Entire RDF graph X compute timeload time</p>
    <p>Out-of-memory Time TP3</p>
    <p>TP2 TP1</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X teacherof ?Y . ?Z takecourse ?Y . ?Z adivsor ?X . }</p>
    <p>OB3: TPs of a query will be executed in sequence</p>
    <p>//</p>
  </div>
  <div class="page">
    <p>Smart Data Prefetching</p>
    <p>Granularity Memory Footprint Data</p>
    <p>Transfer Entire graph 16.3GB Failed Per-query 5.6GB 5.6GB Per-pattern 2.9GB 5.6GB</p>
    <p>Case study: Q7 on LUBM-2560 Per-query</p>
    <p>Pipeline</p>
    <p>Entire RDF graph X compute timeload time</p>
    <p>Per-pattern</p>
    <p>TP1 TP2 TP3IDX</p>
    <p>Out-of-memory Time TP3</p>
    <p>TP2 TP1</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X teacherof ?Y . ?Z takecourse ?Y . ?Z adivsor ?X . }</p>
    <p>//</p>
  </div>
  <div class="page">
    <p>Smart Data Prefetching</p>
    <p>Granularity Memory Footprint Data</p>
    <p>Transfer Entire graph 16.3GB Failed Per-query 5.6GB 5.6GB Per-pattern 2.9GB 5.6GB Per-block 2.9GB 0.7GB*</p>
    <p>Case study: Q7 on LUBM-2560 Per-query</p>
    <p>Pipeline</p>
    <p>Per-block</p>
    <p>Entire RDF graph X compute timeload time</p>
    <p>Per-pattern</p>
    <p>TP1 TP2 TP3IDX</p>
    <p>Out-of-memory Time TP3</p>
    <p>TP2 TP1</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X teacherof ?Y . ?Z takecourse ?Y . ?Z adivsor ?X . }</p>
    <p>* evaluated on 6GB GPU memory</p>
    <p>//</p>
  </div>
  <div class="page">
    <p>GPU-enable query processing</p>
    <p>GPU-friendly key/value store</p>
    <p>Heterogeneous RDMA comm.</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Predicate-based decomposition</p>
    <p>Original RDF Store (Wukong)</p>
    <p>Hash( )vtx, pred, dir</p>
    <p>Key Logan</p>
    <p>Erik</p>
    <p>to</p>
    <p>to</p>
    <p>out</p>
    <p>out</p>
    <p>DS</p>
    <p>OS</p>
    <p>Pidx to in Logan Erik</p>
    <p>OS</p>
    <p>DS</p>
    <p>tc in</p>
    <p>tc in</p>
    <p>Bobby</p>
    <p>Kurt</p>
    <p>Bobby ad out</p>
    <p>Logan Marie ad out</p>
    <p>Logan</p>
    <p>Value</p>
    <p>Triples with the same predicate are sprinkled all over the store</p>
  </div>
  <div class="page">
    <p>Predicate-based grouping Key Logan Erik</p>
    <p>to to</p>
    <p>out out</p>
    <p>DSOS</p>
    <p>Pidx to in Logan Erik DS</p>
    <p>OS</p>
    <p>tc in</p>
    <p>tc in</p>
    <p>Kurt Bobby</p>
    <p>Bobby ad out</p>
    <p>LoganMarie ad out Logan</p>
    <p>Value</p>
    <p>GPU-friendly RDF Store</p>
    <p>+ Hash( )vtx SEG_OFFSET( )pred, dir</p>
    <p>% SEG_SZ( )pred, dir</p>
    <p>Segment</p>
    <p>RDF Store (CPU)</p>
  </div>
  <div class="page">
    <p>Predicate-based grouping</p>
    <p>Prefetching Cost vs.</p>
    <p>Lookup Overhead</p>
    <p>Key Logan Erik</p>
    <p>to to</p>
    <p>out out</p>
    <p>DSOS</p>
    <p>Pidx to in Logan Erik DS</p>
    <p>OS</p>
    <p>tc in</p>
    <p>tc in</p>
    <p>Kurt Bobby</p>
    <p>Bobby ad out</p>
    <p>LoganMarie ad out Logan</p>
    <p>Value</p>
    <p>GPU-friendly RDF Store</p>
    <p>Segment</p>
    <p>RDF Store (CPU)</p>
    <p>Tradeoff</p>
  </div>
  <div class="page">
    <p>Predicate-based grouping  Fine-grained swapping</p>
    <p>Key Logan Erik</p>
    <p>to to</p>
    <p>out out</p>
    <p>DSOS</p>
    <p>Pidx to in Logan Erik DS</p>
    <p>OS</p>
    <p>tc in</p>
    <p>tc in</p>
    <p>Kurt Bobby</p>
    <p>Bobby ad out</p>
    <p>LoganMarie ad out Logan</p>
    <p>Value</p>
    <p>GPU-friendly RDF Store</p>
    <p>Segment</p>
    <p>Pidx to in Logan DS</p>
    <p>to tc</p>
    <p>out in</p>
    <p>Erik to out</p>
    <p>Logan Erik</p>
    <p>DS</p>
    <p>OS Kurt</p>
    <p>Key Value</p>
    <p>RDF Store (CPU)</p>
    <p>RDF Cache (GPU)</p>
    <p>OS tc in Bobby</p>
    <p>N x Blocks =</p>
    <p>Prefetching</p>
    <p>Block</p>
  </div>
  <div class="page">
    <p>Predicate-based grouping  Fine-grained swapping</p>
    <p>Pairwise caching  Look-ahead replacement</p>
    <p>(see paper)</p>
    <p>Key Logan Erik</p>
    <p>to to</p>
    <p>out out</p>
    <p>DSOS</p>
    <p>Pidx to in Logan Erik DS</p>
    <p>OS</p>
    <p>tc in</p>
    <p>tc in</p>
    <p>Kurt Bobby</p>
    <p>Bobby ad out</p>
    <p>LoganMarie ad out Logan</p>
    <p>Value</p>
    <p>GPU-friendly RDF Store RDF Store (CPU)</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>GPU-enable query processing</p>
    <p>GPU-friendly key/value store</p>
    <p>Heterogeneous RDMA comm.</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Heterogeneous RDMA Communication</p>
    <p>History Table</p>
    <p>Query</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
    <p>Metadata: Query</p>
    <p>Data: History Table</p>
  </div>
  <div class="page">
    <p>History Table</p>
    <p>Query</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
    <p>History Table</p>
    <p>Query</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
    <p>Heterogeneous RDMA Communication</p>
    <p>Metadata: Query</p>
    <p>Data: History Table</p>
  </div>
  <div class="page">
    <p>Heterogeneous RDMA Communication</p>
    <p>(Native) RDMA Metadata: Query  CPU  CPU (RDMA)</p>
    <p>Data: History Table  GPU  CPU (PCIe)  CPU  CPU (RDMA)  CPU  GPU (PCIe)  GPU  CPU (PCIe)  CPU  CPU (RDMA)</p>
    <p>History Table</p>
    <p>Query</p>
    <p>History Table</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
    <p>History Table</p>
    <p>Query</p>
    <p>History Table</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
  </div>
  <div class="page">
    <p>Heterogeneous RDMA Communication</p>
    <p>RDMA with GPUDirect Metadata: Query  CPU  CPU (RDMA)</p>
    <p>Data: History Table  GPU  CPU (PCIe)  CPU  CPU (RDMA)  CPU  GPU (PCIe)  GPU  CPU (PCIe)  CPU  CPU (RDMA)</p>
    <p>History Table</p>
    <p>Query</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
    <p>History Table</p>
    <p>Query</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
    <p>GPUDirect</p>
    <p>GPUDirect</p>
    <p>History Table</p>
    <p>Query</p>
    <p>History Table</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
    <p>History Table</p>
    <p>Query</p>
    <p>History Table</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
  </div>
  <div class="page">
    <p>Heterogeneous RDMA Communication</p>
    <p>RDMA with GPUDirect Metadata: Query  CPU  CPU (RDMA)</p>
    <p>Data: History Table  GPU  CPU (PCIe)  GPU  CPU (RDMA+G)  CPU  GPU (PCIe)  GPU  CPU (PCIe)  CPU  CPU (RDMA)</p>
    <p>History Table</p>
    <p>Query</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
    <p>History Table</p>
    <p>Query</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
    <p>GPUDirect</p>
    <p>GPUDirect</p>
    <p>History Table</p>
    <p>Query</p>
    <p>History Table</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
    <p>History Table</p>
    <p>Query</p>
    <p>History Table</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
  </div>
  <div class="page">
    <p>Heterogeneous RDMA Communication</p>
    <p>History Table</p>
    <p>Query</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
    <p>History Table</p>
    <p>Query</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
    <p>GPUDirect</p>
    <p>GPUDirect</p>
    <p>History Table</p>
    <p>Query</p>
    <p>History Table</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
    <p>History Table</p>
    <p>Query</p>
    <p>History Table</p>
    <p>DRAM DRAM</p>
    <p>CPU GPU</p>
    <p>RDMA</p>
    <p>RDMA with GPUDirect Metadata: Query  CPU  CPU (RDMA)</p>
    <p>Data: History Table  GPU  CPU (PCIe)  GPU  CPU (RDMA+G)  CPU  GPU (PCIe)  GPU  CPU (PCIe)  GPU  CPU (RDMA+G)</p>
  </div>
  <div class="page">
    <p>GPU-enable query processing</p>
    <p>GPU-friendly key/value store</p>
    <p>Heterogeneous RDMA comm.</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Evaluation Baseline: state-of-the-art systems  Wukong, TriAD (distributed triple store)</p>
    <p>Platforms: 10 servers on a rack-scale 5-node cluster  RDMA: Mellanox 56Gbps IB NIC, 40Gbps IB Switch  Two servers run on a single machine  Each server: 12-core Intel Xeon, 128GB DRAM,</p>
    <p>NVIDIA Tesla K40m (2880 cores, 12GB DRAM)</p>
    <p>Benchmarks  Synthetic: LUBM  Real-life: DBPSB, YAGO2</p>
    <p>CPU CPU</p>
    <p>RDMA GPU GPU Se</p>
    <p>rve r</p>
  </div>
  <div class="page">
    <p>Single Query Latency (msec)</p>
    <p>Heavy queries (Q1-Q3, Q7) Light queries (Q4-Q6)  Start from a set of vertices  Touch a large part of graph  Speedup: 2.3X~9X vs. Wukong</p>
    <p>Start from a given vertex  Touch a small part of graph  Negligible slowdown</p>
    <p>single server 10-server cluster</p>
  </div>
  <div class="page">
    <p>Performance of Hybrid Workloads</p>
    <p>WKD (default) Heavy/Light: ALL of CPUs (10)</p>
    <p>WKI (Isolation) Heavy: HALF of CPUs (5) Light: HALF of CPUs (5)</p>
    <p>WKG (+G) Heavy: CPU (1) + GPUs (1) Light: REST of CPU (9)</p>
    <p>Workload: 6 classes of light queries + 4 classes of heavy queries</p>
  </div>
  <div class="page">
    <p>Performance of Hybrid Workloads</p>
    <p>WKG (+G) Heavy: CPU (1) + GPUs (1) Light: REST of CPU (9)</p>
    <p>Workload: 6 classes of light queries + 4 classes of heavy queries</p>
  </div>
  <div class="page">
    <p>Performance of Hybrid Workloads</p>
    <p>Workload: 6 classes of light queries + 4 classes of heavy queries</p>
    <p>WKD (default) Heavy/Light: ALL of CPUs (10)</p>
    <p>WKI (Isolation) Heavy: HALF of CPUs (5) Light: HALF of CPUs (5)</p>
    <p>WKG (+G) Heavy: CPU (1) + GPUs (1) Light: REST of CPU (9)</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>: a distributed RDF query system supports heterogeneous CPU/GPU processing for hybrid queries on graph data</p>
    <p>Outperform prior state-of-the-art systems by more than one order of magnitude when facing hybrid workloads</p>
    <p>Wukong+G</p>
    <p>Hardware heterogeneity opens opportunities for hybrid workloads on graph data</p>
    <p>Website: http://ipads.se.sjtu.edu.cn/projects/wukong GitHub: https://github.com/SJTU-IPADS/wukong</p>
  </div>
  <div class="page">
    <p>Questions</p>
    <p>Thanks</p>
    <p>Wukong+G</p>
    <p>Institute of Parallel and Distributed Systems Shanghai Jiao Tong University</p>
    <p>GitHub: https://github.com/SJTU-IPADS/wukong</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Distinguish Heavy &amp; Light Queries Query plan optimizer</p>
    <p>Query plan: the order of triple patterns  Using a cost-model to estimate the execution time of</p>
    <p>different plans for a given query  For SPARQL query, cost model is roughly based on #paths</p>
    <p>may be explored</p>
    <p>Wukong+G uses a user-defined threshold for #paths to distinguish heavy and light queries</p>
  </div>
  <div class="page">
    <p>GPU Memory Size Limitation Too large predicate segment</p>
    <p>Too large intermediate results 1. Load one part of history table to GPU memory 2. Do traversal work Repeat 1 and 2</p>
  </div>
  <div class="page">
    <p>Multi-GPUs Support  Run a separate server for each GPU card and</p>
    <p>several co-located CPU cores (usually a socket)  All servers comply with the same communication</p>
    <p>mechanism via GPUDirect RDMA operations</p>
    <p>CPU CPU</p>
    <p>RDMA GPU GPU</p>
    <p>Se rve</p>
    <p>r</p>
  </div>
  <div class="page">
    <p>Graph Analytics vs. Graph Query</p>
    <p>Graph Analytics Graph Query Graph Model Property Graph Semantic (RDF) Graph</p>
    <p>Working Set A whole Graph A small frac. of Graph</p>
    <p>Processing Batched &amp; Iterative Concurrent</p>
    <p>Metrics Latency Latency &amp; Throughput</p>
  </div>
  <div class="page">
    <p>Factor Analysis of Improvement  Single Server w/ 3GB GPU memory  LUBM-2560</p>
  </div>
  <div class="page">
    <p>RDF Cache of GPU  LUBM-2560  10GB GPU Memory LUBM-2560</p>
  </div>
</Presentation>
