<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>UNOBTRUSIVE DEFERRED UPDATE STABILIZATION FOR EFFICIENT GEO-REPLICATION</p>
    <p>Chathuri Gunawardhana, Manuel Bravo, Lus Rodrigues</p>
  </div>
  <div class="page">
    <p>In a geo-replicated system, how to apply efficiently,</p>
    <p>remote updates, in causal order?</p>
    <p>Problem</p>
  </div>
  <div class="page">
    <p>Strongest without</p>
    <p>compromising availability</p>
    <p>Why causal consistency?</p>
  </div>
  <div class="page">
    <p>Key ingredient of several</p>
    <p>consistency criteria</p>
    <p>Parallel Snapshot Isolation [SOSP11]</p>
    <p>RedBlue Consistency [OSDI12]</p>
    <p>Session guarantees [SOSP97]</p>
    <p>Explicit Consistency [EuroSys15]</p>
    <p>Why causal consistency?</p>
  </div>
  <div class="page">
    <p>Alice</p>
    <p>Dan is in the hospital!</p>
    <p>Dan is ok!</p>
    <p>Bob</p>
    <p>Dan is in the hospital! Dan is ok!</p>
    <p>Thats great!</p>
    <p>Dan</p>
    <p>Dan is in the hospital!</p>
    <p>Thats great!</p>
    <p>Data center should delay the</p>
    <p>visibility of inconsistent operations</p>
    <p>Requires maintaing</p>
    <p>and exchanging metadata!</p>
  </div>
  <div class="page">
    <p>Metadata</p>
    <p>more metadata less metadata</p>
    <p>precise</p>
    <p>expensive</p>
    <p>false positives</p>
    <p>cheap</p>
    <p>Needs a way to compress metadata!</p>
  </div>
  <div class="page">
    <p>Metadata compression</p>
    <p>Two main ways to compress and manage metadata</p>
    <p>Global stabilization procedures</p>
    <p>Serializers</p>
  </div>
  <div class="page">
    <p>Metadata compression</p>
    <p>Global stabilization procedures</p>
    <p>Updates are propagated concurrently and later ordered at remote datacenters</p>
  </div>
  <div class="page">
    <p>Metadata compression</p>
    <p>Serializers</p>
    <p>Updates are ordered before being applied at the origin datacenter</p>
  </div>
  <div class="page">
    <p>V is</p>
    <p>ib ili</p>
    <p>ty la</p>
    <p>te nc</p>
    <p>ie s</p>
    <p>(m s)</p>
    <p>GentleRain Cure</p>
    <p>-50 -40 -30 -20 -10</p>
    <p>Th pu</p>
    <p>t ( %</p>
    <p>)</p>
    <p>Clock computation interval (ms)</p>
    <p>GentleRain and Cure use global stabilization!</p>
    <p>Metadata compression</p>
    <p>global stabilization forces</p>
    <p>designers to either favor throughput or</p>
    <p>visibility</p>
    <p>favors visibility</p>
    <p>latencies by using a vector with an</p>
    <p>entry per dc</p>
    <p>favors throughput by</p>
    <p>using a single scalar</p>
  </div>
  <div class="page">
    <p>V is</p>
    <p>ib ili</p>
    <p>ty la</p>
    <p>te nc</p>
    <p>ie s</p>
    <p>(m s)</p>
    <p>GentleRain Cure</p>
    <p>-50 -40 -30 -20 -10</p>
    <p>Th pu</p>
    <p>t ( %</p>
    <p>)</p>
    <p>Clock computation interval (ms)</p>
    <p>Metadata compression</p>
    <p>Serializer (typically one per dc): SwiftCloud [Middleware15], ChainReaction [EuroSys13],</p>
  </div>
  <div class="page">
    <p>Serializer (typically one per dc): SwiftCloud [Middleware15], ChainReaction [EuroSys13],</p>
    <p>V is</p>
    <p>ib ili</p>
    <p>ty la</p>
    <p>te nc</p>
    <p>ie s</p>
    <p>(m s)</p>
    <p>GentleRain Cure</p>
    <p>-50 -40 -30 -20 -10</p>
    <p>Th pu</p>
    <p>t ( %</p>
    <p>)</p>
    <p>Clock computation interval (ms)</p>
    <p>Sequencer</p>
    <p>Metadata compression</p>
    <p>abstracts the complexity of</p>
    <p>partitioned datacenters, which enables trivial</p>
    <p>dependency checking thus, allowing</p>
    <p>sequencer-based systems to only slightly</p>
    <p>add artificial delays</p>
    <p>unfortunately, coordination is on the</p>
    <p>clients critical path, which significantly penalises</p>
    <p>throughput (16%) an sequencers can easily be overloaded for</p>
    <p>medium-size clusters. In our experiments, a</p>
    <p>max of 48 kops/s</p>
  </div>
  <div class="page">
    <p>To achieve the latency of a sequencer and the throughput of GentleRain</p>
    <p>V is</p>
    <p>ib ili</p>
    <p>ty la</p>
    <p>te nc</p>
    <p>ie s</p>
    <p>(m s)</p>
    <p>GentleRain Cure</p>
    <p>-50 -40 -30 -20 -10</p>
    <p>Th pu</p>
    <p>t ( %</p>
    <p>)</p>
    <p>Clock computation interval (ms)</p>
    <p>Sequencer</p>
    <p>Our goal</p>
  </div>
  <div class="page">
    <p>aims at finding a novel way of compressing metadata that allows</p>
    <p>to pick a better spot in the throughput-visibility tradeoff</p>
    <p>Eunomia</p>
  </div>
  <div class="page">
    <p>conceived to replace sequencers in georeplicated storage systems</p>
    <p>Eunomia</p>
    <p>totally ordersconsistently with causality local updates, before shipping them to other dcs</p>
    <p>the ordering is done in the background, out of clients critical path</p>
  </div>
  <div class="page">
    <p>A CB</p>
    <p>remote datacenters</p>
    <p>Sequencer</p>
  </div>
  <div class="page">
    <p>A CB</p>
    <p>remote datacenters</p>
    <p>Eunomia</p>
  </div>
  <div class="page">
    <p>put(a) put(b)</p>
    <p>A CB</p>
  </div>
  <div class="page">
    <p>put(c)</p>
    <p>A CB</p>
  </div>
  <div class="page">
    <p>put(d)</p>
    <p>A CB</p>
  </div>
  <div class="page">
    <p>put(e)</p>
    <p>A CB</p>
  </div>
  <div class="page">
    <p>A CB</p>
  </div>
  <div class="page">
    <p>A CB</p>
  </div>
  <div class="page">
    <p>A CB</p>
  </div>
  <div class="page">
    <p>A CB</p>
  </div>
  <div class="page">
    <p>put(f)</p>
    <p>A CB</p>
  </div>
  <div class="page">
    <p>EunomiaKV: supporting geo-replication</p>
    <p>dc1 p11 p12</p>
    <p>p1 3</p>
    <p>p15 p14</p>
    <p>p1n front end</p>
    <p>front end</p>
    <p>...</p>
    <p>remote proxy</p>
    <p>dc2</p>
    <p>...</p>
    <p>dcmEunomia</p>
  </div>
  <div class="page">
    <p>EunomiaKV: supporting geo-replication</p>
    <p>dc1 p11 p12</p>
    <p>p1 3</p>
    <p>p15 p14</p>
    <p>p1n front end</p>
    <p>front end</p>
    <p>...</p>
    <p>remote proxy</p>
    <p>dc2</p>
    <p>...</p>
    <p>dcmEunomia</p>
    <p>abstract partitioning and</p>
    <p>replication details from clients</p>
  </div>
  <div class="page">
    <p>EunomiaKV: supporting geo-replication</p>
    <p>dc1 p11 p12</p>
    <p>p1 3</p>
    <p>p15 p14</p>
    <p>p1n front end</p>
    <p>front end</p>
    <p>...</p>
    <p>remote proxy</p>
    <p>dc2</p>
    <p>...</p>
    <p>dcmEunomia</p>
  </div>
  <div class="page">
    <p>EunomiaKV: supporting geo-replication</p>
    <p>dc1 p11 p12</p>
    <p>p1 3</p>
    <p>p15 p14</p>
    <p>p1n front end</p>
    <p>front end</p>
    <p>...</p>
    <p>remote proxy</p>
    <p>dc2</p>
    <p>...</p>
    <p>dcmEunomia</p>
    <p>Eunomia (as explained)</p>
  </div>
  <div class="page">
    <p>EunomiaKV: supporting geo-replication</p>
    <p>dc1 p11 p12</p>
    <p>p1 3</p>
    <p>p15 p14</p>
    <p>p1n front end</p>
    <p>front end</p>
    <p>...</p>
    <p>remote proxy</p>
    <p>dc2</p>
    <p>...</p>
    <p>dcmEunomia</p>
  </div>
  <div class="page">
    <p>EunomiaKV: supporting geo-replication</p>
    <p>dc1 p11 p12</p>
    <p>p1 3</p>
    <p>p15 p14</p>
    <p>p1n front end</p>
    <p>front end</p>
    <p>...</p>
    <p>remote proxy</p>
    <p>dc2</p>
    <p>...</p>
    <p>dcmEunomia</p>
    <p>receives remote updates,</p>
    <p>coming from remote Eunomia services</p>
  </div>
  <div class="page">
    <p>EunomiaKV: supporting geo-replication</p>
    <p>dc1 p11 p12</p>
    <p>p1 3</p>
    <p>p15 p14</p>
    <p>p1n front end</p>
    <p>front end</p>
    <p>...</p>
    <p>remote proxy</p>
    <p>dc2</p>
    <p>...</p>
    <p>dcmEunomia</p>
    <p>only propagates to</p>
    <p>local partitions when dependencies are</p>
    <p>satisfied</p>
  </div>
  <div class="page">
    <p>Implementation</p>
    <p>Eunomia is implemented in C++ (200 LOC). At its core, it uses a red-black tree</p>
    <p>EunomiaKV is built as a variant of the open source version of Riak (100 lines of Erlang code)</p>
    <p>Our implementation uses hybrid logical clocks (HLC) becoming resilient to both clock and</p>
    <p>workload skew</p>
  </div>
  <div class="page">
    <p>Evaluation: EunomiaKV vs. state-of-the-art</p>
    <p>Three datacenter deployment, emulating Amazon EC2 Virginia, Oregon, and Ireland regions</p>
    <p>baseline: system that adds no overhead due to consistency management</p>
    <p>comparison to: global stabilisation solutions, GentleRain (single scalar) and Cure (vector as EunomiaKV)</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut (o</p>
    <p>ps /s</p>
    <p>ec )</p>
    <p>Eventual EunomiaKV</p>
    <p>GentleRain Cure</p>
    <p>throughput comparisonGlobal stabilisation has a significant cost,</p>
    <p>specially in Cure, that uses more metadata</p>
    <p>EunomiaKV barely penalizes throughput when compared to the</p>
    <p>baseline</p>
  </div>
  <div class="page">
    <p>C D</p>
    <p>F</p>
    <p>Remote update visibility (milliseconds)</p>
    <p>GentleRain Cure</p>
    <p>EunomiaKV</p>
    <p>Evaluation</p>
    <p>visibility comparisonGentleRain significantly penalizes visibility due to the amount</p>
    <p>of false positives</p>
    <p>EunomiaKV provides even better</p>
    <p>results than Cure, using the same amount of</p>
    <p>metadata</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut (K</p>
    <p>op s/</p>
    <p>se c) Eunomia 15</p>
    <p>Eunomia 30 Eunomia 45 Eunomia 60 Eunomia 75 Sequencer</p>
    <p>maximum throughput achievable by Eunomia vs a classical sequencer</p>
    <p>x7.7</p>
  </div>
  <div class="page">
    <p>Going back to the beginning</p>
    <p>V is</p>
    <p>ib ili</p>
    <p>ty la</p>
    <p>te nc</p>
    <p>ie s</p>
    <p>(m s)</p>
    <p>GentleRain Cure</p>
    <p>-50 -40 -30 -20 -10</p>
    <p>pu t (</p>
    <p>% )</p>
    <p>Clock computation interval (ms)</p>
    <p>Sequencer</p>
  </div>
  <div class="page">
    <p>Going back to the beginning</p>
    <p>V is</p>
    <p>ib ili</p>
    <p>ty la</p>
    <p>te nc</p>
    <p>ie s</p>
    <p>(m s)</p>
    <p>GentleRain Cure</p>
    <p>-50 -40 -30 -20 -10</p>
    <p>pu t (</p>
    <p>% )</p>
    <p>Clock computation interval (ms)</p>
    <p>Eunomia Sequencer</p>
    <p>EunomiaKV only adds an slight</p>
    <p>artificial delay, matching the latency</p>
    <p>observed in sequencer-based</p>
    <p>systems</p>
    <p>EunomiaKV adds negligible</p>
    <p>throughput penalty</p>
  </div>
  <div class="page">
    <p>take-away message by taking the coordination with an ordering service out the the clients critical path, one can pick a sweet-spot in the throughput vs. visibility tradeoff</p>
    <p>check the paper!!! fault-tolerant version of Eunomia impact of stragglers</p>
    <p>Thanks!</p>
    <p>more experiments</p>
    <p>Evaluation</p>
  </div>
</Presentation>
