<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>A Tool for Constructing A Tool for Constructing Syntax-Directed EditorsSyntax-Directed Editors</p>
    <p>Yung-Shen Chang and Nai-Wei LinYung-Shen Chang and Nai-Wei Lin Department of Computer Science and Information EngineerDepartment of Computer Science and Information Engineer</p>
    <p>inging National Chung-Cheng UniversityNational Chung-Cheng University</p>
    <p>Taiwan, R.O.C.Taiwan, R.O.C.</p>
  </div>
  <div class="page">
    <p>OutlineOutline</p>
    <p>IntroductionIntroduction  A generator for incremental parsersA generator for incremental parsers  A simple interface to incremental A simple interface to incremental</p>
    <p>parsersparsers  Conclusions and future workConclusions and future work</p>
  </div>
  <div class="page">
    <p>Typical Program Development Typical Program Development Cycle Cycle</p>
    <p>Program editing and program Program editing and program compilation are separated. compilation are separated.</p>
    <p>It is more efficient if we can do program It is more efficient if we can do program editing and program compilation at the editing and program compilation at the same time.same time.</p>
    <p>Edit Compil e</p>
    <p>Found Bugs</p>
    <p>Edit Compil e</p>
    <p>Found Bugs</p>
  </div>
  <div class="page">
    <p>Syntax-Directed EditorsSyntax-Directed Editors</p>
    <p>Syntax-directed editors have the Syntax-directed editors have the ability to perform program editing ability to perform program editing and program compilation at the and program compilation at the same time.same time.</p>
    <p>Syntax-directed editors have become Syntax-directed editors have become an integral feature for modern an integral feature for modern integrated development integrated development environment.environment.</p>
  </div>
  <div class="page">
    <p>Incremental ParsingIncremental Parsing</p>
    <p>The main capability of syntax-directed The main capability of syntax-directed editors is incremental parsing.editors is incremental parsing.</p>
    <p>Incremental parsing has the ability to Incremental parsing has the ability to only parse the only parse the modifiedmodified portion of a portion of a program.program.</p>
    <p>This ability allows us to interleave This ability allows us to interleave program editing and program program editing and program compilation.compilation.</p>
  </div>
  <div class="page">
    <p>ContributionsContributions</p>
    <p>A generator for incremental parsers A generator for incremental parsers that is based on Bison.that is based on Bison.</p>
    <p>A simple interface to incremental A simple interface to incremental parsers to facilitate the integration of parsers to facilitate the integration of editors and incremental parsers to editors and incremental parsers to form syntax-directed editors.form syntax-directed editors.</p>
  </div>
  <div class="page">
    <p>BisonBison</p>
    <p>A popular generator for batch parsers A popular generator for batch parsers that converts an LALR(1) grammar that converts an LALR(1) grammar definition into a parser written in C.definition into a parser written in C.</p>
    <p>Grammar definitio n</p>
    <p>(sample.y)</p>
    <p>Parser</p>
    <p>(sample.tab. c)</p>
    <p>Bison</p>
  </div>
  <div class="page">
    <p>OutlineOutline</p>
    <p>IntroductionIntroduction  A generator for incremental parsersA generator for incremental parsers  A simple interface to incremental A simple interface to incremental</p>
    <p>parsersparsers  ConclusionsConclusions</p>
  </div>
  <div class="page">
    <p>Incremental Parsing Incremental Parsing AlgorithmsAlgorithms</p>
    <p>The state matching incremental parsinThe state matching incremental parsin g algorithm (Larchveque)g algorithm (Larchveque)  no need to change Bison parsing tableno need to change Bison parsing table</p>
    <p>The sentential-form incremental parsiThe sentential-form incremental parsi ng algorithm (Wagner)ng algorithm (Wagner)  need to change Bison parsing tableneed to change Bison parsing table</p>
  </div>
  <div class="page">
    <p>Threaded Tree ParsingThreaded Tree Parsing</p>
    <p>Use threaded tree data structure to Use threaded tree data structure to represent the parse treerepresent the parse tree</p>
    <p>Threaded tree is a combination of Threaded tree is a combination of parse tree and parse stackparse tree and parse stack</p>
    <p>All shift/reduce actions are operated All shift/reduce actions are operated on the threaded treeon the threaded tree</p>
  </div>
  <div class="page">
    <p>Threaded Parse TreeThreaded Parse Tree</p>
    <p>Each node in the threaded tree has Each node in the threaded tree has the following fieldsthe following fields  symbolsymbol  childrenchildren  statestate  threadingthreading</p>
  </div>
  <div class="page">
    <p>Shift ActionShift Action</p>
    <p>Shift symbol Shift symbol M M at at state state SS 1.1. construct a node construct a node</p>
    <p>N (M, S)N (M, S)</p>
    <p>N1</p>
    <p>N (M, S)</p>
    <p>TOS</p>
  </div>
  <div class="page">
    <p>Reduce ActionReduce Action</p>
    <p>Reduce symbol Reduce symbol MM at at State State SS with with kk children children 1.1. construct a node construct a node N (M, S)N (M, S)</p>
    <p>N1</p>
    <p>N(M,S)</p>
    <p>s1 r2</p>
    <p>TOS</p>
    <p>M  sr</p>
  </div>
  <div class="page">
    <p>An ExampleAn Example</p>
    <p>S1</p>
    <p>f2 f6F3</p>
    <p>G4</p>
    <p>g6</p>
    <p>H7</p>
    <p>h9</p>
    <p>BOS</p>
    <p>Input= fgh f</p>
    <p>Action:</p>
    <p>Shift f2</p>
    <p>Shift g6</p>
    <p>Reduce G4</p>
    <p>Shift h9</p>
    <p>Reduce H7</p>
    <p>Reduce F3</p>
    <p>Shift f6</p>
    <p>Reduce S1</p>
    <p>TOS</p>
  </div>
  <div class="page">
    <p>Incremental Threaded Tree Incremental Threaded Tree ParsingParsing</p>
    <p>Split previous Split previous parse tree into parse tree into three parts three parts x y zx y z</p>
    <p>xx and and z z are are unmodified partsunmodified parts</p>
    <p>yy is the modified is the modified partpart</p>
    <p>Let Let yy be the be the modifying contentmodifying content</p>
    <p>x y z</p>
    <p>x, z = unmodifi ed</p>
    <p>y = modified</p>
  </div>
  <div class="page">
    <p>Incremental Threaded Tree Incremental Threaded Tree ParsingParsing</p>
  </div>
  <div class="page">
    <p>Finding CandidatesFinding Candidates</p>
    <p>A grafting point must be a common A grafting point must be a common ancestor of ancestor of yy and and yy</p>
    <p>We start searching from nearest We start searching from nearest common ancestor (NCA)common ancestor (NCA)</p>
  </div>
  <div class="page">
    <p>Proper Grafting PointsProper Grafting Points</p>
    <p>A candidate for a grafting point is aA candidate for a grafting point is a n NCA n NCA nn such that such that  terminal successor of terminal successor of nn = current lookahe = current lookahe adad</p>
    <p>symbol of symbol of nn = symbol of the TOS = symbol of the TOS  predecessor of predecessor of nn = predecessor of the TOS = predecessor of the TOS</p>
  </div>
  <div class="page">
    <p>An ExampleAn Example</p>
    <p>S1</p>
    <p>BOS0</p>
    <p>f2</p>
    <p>g5</p>
    <p>G4</p>
    <p>h9</p>
    <p>H7</p>
    <p>F3 f6</p>
    <p>g8</p>
    <p>G4</p>
    <p>TO S NCA</p>
    <p>lookahead</p>
    <p>Grafting Point</p>
    <p>F3</p>
    <p>= deleted node</p>
    <p>x: g5</p>
    <p>y: g8</p>
    <p>z: h9, f6</p>
  </div>
  <div class="page">
    <p>Incremental Parser ModulesIncremental Parser Modules</p>
    <p>node</p>
    <p>Parsing table reader</p>
    <p>tree</p>
    <p>incparser</p>
    <p>parser</p>
    <p>manag e</p>
    <p>read</p>
    <p>Determine what to do</p>
    <p>Perform action (shift/reduce)</p>
    <p>read</p>
    <p>node</p>
    <p>node</p>
    <p>= module</p>
    <p>= file</p>
    <p>input</p>
    <p>Bison Parsing Table</p>
  </div>
  <div class="page">
    <p>OutlineOutline</p>
    <p>IntroductionIntroduction  A generator for incremental parsersA generator for incremental parsers  A simple interface to incremental A simple interface to incremental</p>
    <p>parsersparsers  ConclusionsConclusions</p>
  </div>
  <div class="page">
    <p>Interface to Incremental Parser Interface to Incremental Parser</p>
    <p>Editor calls Editor calls incparserincparser to get service from to get service from incremental parserincremental parser</p>
    <p>Editor passes parameters Editor passes parameters beginbegin, , endend, and , and deltadelta</p>
    <p>incparserincparser will store the parsing result in will store the parsing result in variable variable errerr</p>
    <p>voidvoid</p>
    <p>incparserincparser</p>
    <p>((POSPOS begin, begin, POSPOS end, end, constconst stringstring&amp; delta, &amp; delta, ERRERR&amp; err);&amp; err);</p>
  </div>
  <div class="page">
    <p>Flow of an Incremental Parsing Flow of an Incremental Parsing SessionSession</p>
    <p>incparserinterfaceeditor</p>
    <p>Write delta</p>
    <p>Return parse result</p>
    <p>Return parse result</p>
    <p>Read input from temporary file</p>
    <p>Call interfac e</p>
    <p>Wrapper call incparser</p>
    <p>Temporary file</p>
  </div>
  <div class="page">
    <p>Proper Timing to Trigger Proper Timing to Trigger Incremental ParsingIncremental Parsing</p>
    <p>By timerBy timer  By each key pressBy each key press  By editing modelBy editing model</p>
  </div>
  <div class="page">
    <p>Editing ModelEditing Model  Editing is a sequence of key pressesEditing is a sequence of key presses  Classify key presses into two groupsClassify key presses into two groups</p>
    <p>modikeysmodikeys   which will cause content changewhich will cause content change  non-modikeysnon-modikeys   which which wontwont cause content cause content</p>
    <p>changechange  Editing causes a state change between Editing causes a state change between</p>
    <p>pressing pressing modikeysmodikeys and and non-modikeysnon-modikeys  Editor should remember BEGIN and END Editor should remember BEGIN and END</p>
    <p>position when a state change occursposition when a state change occurs</p>
  </div>
  <div class="page">
    <p>Special KeysSpecial Keys  BS (Backspace)/DEL are keys in BS (Backspace)/DEL are keys in</p>
    <p>modikeys modikeys that need special treatmentsthat need special treatments  BS might change the BEGIN positionBS might change the BEGIN position  DEL might change the END positionDEL might change the END position  Editor should perform appropriate Editor should perform appropriate</p>
    <p>action when user pressing BS/DELaction when user pressing BS/DEL  We use a counter to maintain how many We use a counter to maintain how many</p>
    <p>modikeysmodikeys are pressed (except BS/DEL) are pressed (except BS/DEL)</p>
  </div>
  <div class="page">
    <p>An ExampleAn Example</p>
    <p>Assume that the cursor is at the Assume that the cursor is at the position between ma, in, the editor position between ma, in, the editor is at is at non-modikeynon-modikey state state</p>
    <p>User performs the following User performs the following modificationsmodifications  press BS two timespress BS two times  press DEL two timespress DEL two times  key in foo_functionkey in foo_function  key in any key in any non-modikeysnon-modikeys</p>
  </div>
  <div class="page">
    <p>An Example (cont.)An Example (cont.)</p>
    <p>Initial situationInitial situation  cursor at (1, 7)cursor at (1, 7)  BEGIN and END is N/ABEGIN and END is N/A</p>
    <p>Pressing BS two Pressing BS two timestimes  cursor at (1, 5)cursor at (1, 5)  BEGIN = (1, 5)BEGIN = (1, 5)  END = (1, 8)END = (1, 8)</p>
    <p>}04</p>
    <p>return 0;03</p>
    <p>printf(Hello, World\n);02</p>
    <p>int main (void) {01</p>
    <p>}}04</p>
    <p>return 0;03</p>
    <p>printf(Hello, World\n);02</p>
    <p>int in (void) {01</p>
  </div>
  <div class="page">
    <p>An Example (cont.)An Example (cont.)  Press DEL two timesPress DEL two times</p>
    <p>cursor at (1, 5)cursor at (1, 5)  BEGIN = (1, 5)BEGIN = (1, 5)  END = (1, 10)END = (1, 10)</p>
    <p>}04</p>
    <p>return 0;03</p>
    <p>printf(Hello, World\n);02</p>
    <p>int in (void) {01</p>
    <p>}04</p>
    <p>return 0;03</p>
    <p>printf(Hello, World\n);02</p>
    <p>int (void) {01</p>
  </div>
  <div class="page">
    <p>An Example (cont.)An Example (cont.)  Key in Key in foo_functionfoo_function</p>
    <p>cursor at (1, 17)cursor at (1, 17)  BEGIN = (1, 5)BEGIN = (1, 5)  END = (1, 10)END = (1, 10)  DELTA = DELTA =</p>
    <p>foo_functionfoo_function  Press any non-Press any non</p>
    <p>modikeys Call modikeys Call incparserincparser by by  BEGIN = (1, 5)BEGIN = (1, 5)  END = (1, 10)END = (1, 10)  DELTA = DELTA =</p>
    <p>foo_functionfoo_function</p>
    <p>}04</p>
    <p>return 0;03</p>
    <p>printf(Hello, World\n);02</p>
    <p>int (void) {01</p>
    <p>}04</p>
    <p>return 0;03</p>
    <p>printf(Hello, World\n);02</p>
    <p>int foo_function (void) {01</p>
  </div>
  <div class="page">
    <p>OutlineOutline</p>
    <p>IntroductionIntroduction  A generator for incremental parsersA generator for incremental parsers  A simple interface to incremental A simple interface to incremental</p>
    <p>parsersparsers  ConclusionsConclusions</p>
  </div>
  <div class="page">
    <p>ConclusionsConclusions  We developed a generator for We developed a generator for</p>
    <p>incremental parsers based on Bisonincremental parsers based on Bison  We introduced a simple interface to We introduced a simple interface to</p>
    <p>incremental parsers that facilitate incremental parsers that facilitate integration of an incremental parser integration of an incremental parser and an editor based on editing modeland an editor based on editing model</p>
  </div>
  <div class="page">
    <p>Future WorkFuture Work  A generator for incremental lexersA generator for incremental lexers  A generator for incremental A generator for incremental</p>
    <p>semantics analyzerssemantics analyzers  A generator for syntax-directed A generator for syntax-directed</p>
    <p>editorseditors</p>
  </div>
</Presentation>
