<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>From Feast to Famine Managing mobile network resources across</p>
    <p>environments and preferences</p>
    <p>Rob Kiefer Erik Nordstrm</p>
    <p>Michael Freedman Princeton University</p>
  </div>
  <div class="page">
    <p>Network Usage Makes Demands on Limited Resources</p>
    <p>Data</p>
    <p>Ba&gt;ery</p>
    <p>Performance</p>
    <p>! 2GB</p>
    <p>!</p>
    <p>App App App App App App !</p>
    <p>Running tasks</p>
  </div>
  <div class="page">
    <p>User mobility  indoor vs outdoor  WiFi vs LTE  mulIpath &amp; migraIon</p>
    <p>User interest  foreground vs background apps  InteracIve vs streaming</p>
    <p>Limita&lt;ons and Opera&lt;ng Condi&lt;ons Are Not Sta&lt;c</p>
  </div>
  <div class="page">
    <p>Divergent Goals = Resource Conflicts</p>
    <p>User and apps may differ  e.g., apps may prioriIze perf, user is cost sensiIve</p>
    <p>User has to moderate resource usage between apps</p>
  </div>
  <div class="page">
    <p>Streaming Music App</p>
    <p>User Goals Dont Match App Goals</p>
  </div>
  <div class="page">
    <p>Streaming Music App</p>
    <p>User Goals Dont Match App Goals</p>
    <p>User wants to sacrifice quality; app overuses cell network</p>
  </div>
  <div class="page">
    <p>Streaming Music App</p>
    <p>Flow-level Fairness != App-level Fairness</p>
    <p>Video App</p>
    <p>Network Usage</p>
    <p>Flows</p>
  </div>
  <div class="page">
    <p>Streaming Music App</p>
    <p>Flow-level Fairness != App-level Fairness</p>
    <p>Video App</p>
    <p>Network Usage</p>
    <p>Flows</p>
  </div>
  <div class="page">
    <p>Streaming Music App</p>
    <p>Flow-level Fairness != App-level Fairness</p>
    <p>Video App</p>
    <p>Network Usage</p>
    <p>Flows</p>
  </div>
  <div class="page">
    <p>Streaming Music App</p>
    <p>Interac&lt;ve Apps Lack Priori&lt;za&lt;on</p>
    <p>Browser</p>
    <p>Network Usage</p>
  </div>
  <div class="page">
    <p>Streaming Music App</p>
    <p>Interac&lt;ve Apps Lack Priori&lt;za&lt;on</p>
    <p>Browser</p>
    <p>Network Usage</p>
  </div>
  <div class="page">
    <p>Streaming Music App</p>
    <p>Interac&lt;ve Apps Lack Priori&lt;za&lt;on</p>
    <p>Browser</p>
    <p>Network Usage</p>
    <p>Interac&lt;ve apps stuck behind long-running flows, hur&lt;ng UX.</p>
  </div>
  <div class="page">
    <p>Strawman: Users micromanage across seQngs</p>
  </div>
  <div class="page">
    <p>Strawman: Users micromanage across seQngs</p>
    <p>Requires user to monitor and esImate usage over potenIally long epochs (hours, days)</p>
    <p>Restricts typically all-or-nothing, e.g., allow on mobile or not</p>
  </div>
  <div class="page">
    <p>Strawman: Users micromanage across seQngs</p>
    <p>Poor reuse in similar apps</p>
  </div>
  <div class="page">
    <p>Strawman: Users micromanage across seQngs</p>
    <p>Varying levels of control</p>
    <p>Few</p>
    <p>Many</p>
    <p>Poor reuse in similar apps</p>
  </div>
  <div class="page">
    <p>Strawman: Users micromanage across seQngs</p>
    <p>Updates can add, remove, or change seangs without user knowing</p>
    <p>Varying levels of control</p>
    <p>Poor reuse in similar apps</p>
  </div>
  <div class="page">
    <p>OS limits background acIvity</p>
    <p>Only certain classes of apps</p>
    <p>Used by iOS and WinPhone</p>
    <p>User has no choice</p>
    <p>Strawman: OS-level limita&lt;ons and restric&lt;ons</p>
    <p>Streaming Music App</p>
    <p>OK!</p>
    <p>Random App XYZ</p>
    <p>NOPE!</p>
  </div>
  <div class="page">
    <p>Usage preferences through programmaIc policy; user is priority, but app flexibility</p>
    <p>Address conflicts proac0vely</p>
    <p>MigraIon / mulIpath in mind</p>
    <p>Handle dynamic operaIng condiIons</p>
    <p>Our Solu&lt;on: Tango</p>
  </div>
  <div class="page">
    <p>Tango Overview</p>
    <p>Kernel Measure Control</p>
    <p>Controller</p>
    <p>Gather plans</p>
    <p>Execute</p>
    <p>Apps</p>
    <p>Plans</p>
    <p>User Policy</p>
    <p>State</p>
  </div>
  <div class="page">
    <p>Tango Overview</p>
    <p>Kernel Measure Control</p>
    <p>Controller</p>
    <p>Gather plans</p>
    <p>Execute</p>
    <p>Apps</p>
    <p>Plans</p>
    <p>User Policy</p>
    <p>State</p>
    <p>State  metrics from kernel sources Plans  acIons to be taken Policy  generates plans from given state</p>
  </div>
  <div class="page">
    <p>Tango Overview</p>
    <p>Kernel Measure Control</p>
    <p>Controller</p>
    <p>Gather plans</p>
    <p>Execute</p>
    <p>Apps</p>
    <p>Plans</p>
    <p>User Policy</p>
    <p>State</p>
  </div>
  <div class="page">
    <p>Tango Overview</p>
    <p>Kernel Measure Control</p>
    <p>Controller</p>
    <p>Gather plans</p>
    <p>Execute</p>
    <p>Apps</p>
    <p>Plans</p>
    <p>User Policy</p>
    <p>State</p>
  </div>
  <div class="page">
    <p>Tango: Controller</p>
    <p>Measures device state</p>
    <p>Generates policy constraints</p>
    <p>Carries out policy plans  Verify against constraints  Perform ac&lt;ons in plan</p>
    <p>Kernel Measure Control</p>
    <p>Controller</p>
    <p>Gather plans</p>
    <p>Execute</p>
    <p>Apps</p>
    <p>Plans</p>
    <p>User Policy</p>
    <p>State</p>
  </div>
  <div class="page">
    <p>Tango: Controller</p>
    <p>Measures device state</p>
    <p>Executes the user policy</p>
    <p>Carries out policy plans  Verify against constraints  Perform ac&lt;ons in plan</p>
    <p>Kernel Measure Control</p>
    <p>Controller</p>
    <p>Gather plans</p>
    <p>Execute</p>
    <p>User Policy</p>
    <p>State</p>
    <p>Apps</p>
    <p>Plans</p>
  </div>
  <div class="page">
    <p>Tango: Policies</p>
    <p>Kernel Measure Control</p>
    <p>Controller</p>
    <p>Gather plans</p>
    <p>Execute</p>
    <p>User Policy</p>
    <p>State</p>
    <p>Programs</p>
    <p>Turn state into plans</p>
    <p>Two levels: user &amp; app</p>
    <p>Apps</p>
    <p>Plans</p>
  </div>
  <div class="page">
    <p>Tango: Policies</p>
    <p>Kernel Measure Control</p>
    <p>Controller</p>
    <p>Gather plans</p>
    <p>Execute</p>
    <p>Apps</p>
    <p>Plans</p>
    <p>User Policy</p>
    <p>State</p>
    <p>Programs</p>
    <p>Turn state into plans</p>
    <p>Two levels: user &amp; app</p>
    <p>User level  Global management of network resources  Sets resource constraints for app policies  Default plan for (classes of) apps</p>
  </div>
  <div class="page">
    <p>Policies: Turning State into Ac&lt;ons</p>
  </div>
  <div class="page">
    <p>Policies: Turning State into Ac&lt;ons net_name: eth0 net_type: CELL, ba&gt;_charge: false ba&gt;_perc: 50</p>
    <p>flows: 10, 11, 12</p>
  </div>
  <div class="page">
    <p>Policies: Turning State into Ac&lt;ons net_name: eth0 net_type: CELL, ba&gt;_charge: false ba&gt;_perc: 50</p>
    <p>flows: 10, 11, 12</p>
    <p>Source Info</p>
    <p>Transport Layer # retrans., RTTs, cong. window</p>
    <p>Network Layer (IP) addresses, rouIng rules</p>
    <p>Link Layer type, signal quality, bit errors</p>
    <p>Ba&gt;ery charging status, percent</p>
    <p>State</p>
  </div>
  <div class="page">
    <p>Policies: Turning State into Ac&lt;ons net_name: eth0 net_type: CELL, ba&gt;_charge: false ba&gt;_perc: 50</p>
    <p>flows: 10, 11, 12</p>
    <p>Policy</p>
    <p>State Source Info</p>
    <p>Transport Layer # retrans., RTTs, cong. window</p>
    <p>Network Layer (IP) addresses, rouIng rules</p>
    <p>Link Layer type, signal quality, bit errors</p>
    <p>Ba&gt;ery charging status, percent</p>
  </div>
  <div class="page">
    <p>Policies: Turning State into Ac&lt;ons net_name: eth0 net_type: CELL, ba&gt;_charge: false ba&gt;_perc: 50</p>
    <p>flows: 10, 11, 12</p>
    <p>Policy</p>
    <p>MIGRATE(10, eth0), MIGRATE(11, eth0), MIGRATE(12, eth0), , RATELIMIT(eth0, 500kbps)</p>
    <p>State Source Info</p>
    <p>Transport Layer # retrans., RTTs, cong. window</p>
    <p>Network Layer (IP) addresses, rouIng rules</p>
    <p>Link Layer type, signal quality, bit errors</p>
    <p>Ba&gt;ery charging status, percent</p>
  </div>
  <div class="page">
    <p>Policies: Turning State into Ac&lt;ons</p>
    <p>Ac&lt;on Iface Flow</p>
    <p>ENABLE</p>
    <p>RATELIMIT</p>
    <p>LOG</p>
    <p>MANAGE</p>
    <p>MIGRATE</p>
    <p>State</p>
    <p>Ac&lt;ons</p>
    <p>net_name: eth0 net_type: CELL, ba&gt;_charge: false ba&gt;_perc: 50</p>
    <p>flows: 10, 11, 12</p>
    <p>Policy</p>
    <p>MIGRATE(10, eth0), MIGRATE(11, eth0), MIGRATE(12, eth0), , RATELIMIT(eth0, 500kbps)</p>
    <p>Source Info</p>
    <p>Transport Layer # retrans., RTTs, cong. window</p>
    <p>Network Layer (IP) addresses, rouIng rules</p>
    <p>Link Layer type, signal quality, bit errors</p>
    <p>Ba&gt;ery charging status, percent</p>
  </div>
  <div class="page">
    <p>Kernel Measure Control</p>
    <p>Controller</p>
    <p>Gather plans</p>
    <p>Execute State</p>
    <p>Leverage local state</p>
    <p>Only act on their flows</p>
    <p>Subject to user policy constraints</p>
    <p>App can provide hints</p>
    <p>Tango: App Policies</p>
    <p>Apps</p>
    <p>Plans</p>
    <p>User Policy</p>
  </div>
  <div class="page">
    <p>ProacIvely address resource conflicts  Constraints known a priori  Simplifies controller &amp; app policy interacIon cycle</p>
    <p>Apps can hint at desired resource needs for future rounds</p>
    <p>Tango: Constraints &amp; Hints</p>
  </div>
  <div class="page">
    <p>evaluate(s, c): // Plan returned.</p>
    <p>genConstraints(s): c = new Constraints()</p>
    <p>for a in s.apps():</p>
    <p>if a.isForeground():</p>
    <p>c.put(a, HIGH)</p>
    <p>return c</p>
    <p>USER POLICY</p>
    <p>Tango: User &amp; App Policy</p>
  </div>
  <div class="page">
    <p>evaluate(s, c): // Plan returned.</p>
    <p>genConstraints(s): c = new Constraints()</p>
    <p>for a in s.apps():</p>
    <p>if a.isForeground():</p>
    <p>c.put(a, HIGH)</p>
    <p>return c</p>
    <p>evaluate(s, ca): plan = new Plan() pstate = GetPlayerState()</p>
    <p>// Rest of policy omitted.</p>
    <p>plan.hintPriority = NORM</p>
    <p>urgent = false</p>
    <p>buffer = pstate.bufferTime</p>
    <p>if buffer &gt; 30:</p>
    <p>urgent = false</p>
    <p>elif buffer &lt; 20 || urgent:</p>
    <p>urgent = true</p>
    <p>plan.hintPriority = HIGH</p>
    <p>return plan</p>
    <p>USER POLICY APP POLICY</p>
    <p>Tango: User &amp; App Policy</p>
  </div>
  <div class="page">
    <p>evaluate(s, c): // Plan returned.</p>
    <p>genConstraints(s): c = new Constraints()</p>
    <p>for a in s.apps():</p>
    <p>hint = a.hintPriority</p>
    <p>if a.isForeground():</p>
    <p>c.put(a, HIGH)</p>
    <p>elif Allowed(a, hint):</p>
    <p>c.put(a, hint)</p>
    <p>return c</p>
    <p>evaluate(s, ca): plan = new Plan() pstate = GetPlayerState()</p>
    <p>// Rest of policy omitted.</p>
    <p>plan.hintPriority = NORM</p>
    <p>urgent = false</p>
    <p>buffer = pstate.bufferTime</p>
    <p>if buffer &gt; 30:</p>
    <p>urgent = false</p>
    <p>elif buffer &lt; 20 || urgent:</p>
    <p>urgent = true</p>
    <p>plan.hintPriority = HIGH</p>
    <p>return plan</p>
    <p>USER POLICY APP POLICY</p>
    <p>Tango: User &amp; App Policy</p>
  </div>
  <div class="page">
    <p>Controller, sample policies, sample apps in Java for Android phones</p>
    <p>Flow migraIon provided by Serval (NSDI 12)</p>
    <p>Explored the policy space for single and mulIple apps</p>
    <p>Prototype</p>
  </div>
  <div class="page">
    <p>Campus WiFi offers chance to offload</p>
    <p>But, even seamless switching w/ migraIon has problems</p>
    <p>How to use policy to improve when to switch?</p>
    <p>How to minimize cell usage?</p>
    <p>How can app policies help?</p>
    <p>Evalua&lt;on: Streaming Music Across SpoXy Campus WiFi</p>
  </div>
  <div class="page">
    <p>Campus WiFi offers chance to offload</p>
    <p>But, even seamless switching w/ migraIon has problems</p>
    <p>How to use policy to improve when to switch?</p>
    <p>How to minimize cell usage?</p>
    <p>How can app policies help?</p>
    <p>Evalua&lt;on: Streaming Music Across SpoXy Campus WiFi</p>
  </div>
  <div class="page">
    <p>Clinging to WiFi Leads to Poor Performance</p>
    <p>Good WiFi Bad WiFi</p>
  </div>
  <div class="page">
    <p>B uf</p>
    <p>fe r (</p>
    <p>se cs</p>
    <p>)</p>
    <p>Time (secs)</p>
    <p>WiFi Cell</p>
    <p>Clinging to WiFi Leads to Poor Performance</p>
    <p>Good WiFi Bad WiFi</p>
  </div>
  <div class="page">
    <p>B uf</p>
    <p>fe r (</p>
    <p>se cs</p>
    <p>)</p>
    <p>Time (secs)</p>
    <p>WiFi Cell</p>
    <p>Clinging to WiFi Leads to Poor Performance</p>
    <p>Unneeded cell usage</p>
    <p>Good WiFi Bad WiFi</p>
  </div>
  <div class="page">
    <p>B uf</p>
    <p>fe r (</p>
    <p>se cs</p>
    <p>)</p>
    <p>Time (secs)</p>
    <p>WiFi Cell</p>
    <p>B uf</p>
    <p>fe r (</p>
    <p>se cs</p>
    <p>)</p>
    <p>Time (secs)</p>
    <p>Pause</p>
    <p>WiFi Cell</p>
    <p>Clinging to WiFi Leads to Poor Performance</p>
    <p>Good WiFi Bad WiFi</p>
  </div>
  <div class="page">
    <p>More aggressive in leaving WiFi; more conservaIve in joining</p>
    <p>Use heurisIcs on signal strength trends</p>
    <p>Based on measurements across campus of signal strength vs achieved throughput</p>
    <p>Improving Network Switching</p>
  </div>
  <div class="page">
    <p>B uf</p>
    <p>fe r (</p>
    <p>se cs</p>
    <p>)</p>
    <p>Time (secs)</p>
    <p>WiFi Cell</p>
    <p>Improving Streaming Music Through Policy</p>
    <p>No rate limit</p>
  </div>
  <div class="page">
    <p>B uf</p>
    <p>fe r (</p>
    <p>se cs</p>
    <p>)</p>
    <p>Time (secs)</p>
    <p>WiFi Cell</p>
    <p>B uf</p>
    <p>fe r (</p>
    <p>se cs</p>
    <p>)</p>
    <p>Time (secs)</p>
    <p>WiFi Cell</p>
    <p>Improving Streaming Music Through Policy</p>
    <p>No rate limit Rate limit</p>
  </div>
  <div class="page">
    <p>B uf</p>
    <p>fe r (</p>
    <p>se cs</p>
    <p>)</p>
    <p>Time (secs)</p>
    <p>WiFi Cell</p>
    <p>B uf</p>
    <p>fe r (</p>
    <p>se cs</p>
    <p>)</p>
    <p>Time (secs)</p>
    <p>WiFi Cell</p>
    <p>B uf</p>
    <p>fe r (</p>
    <p>se cs</p>
    <p>)</p>
    <p>Time (secs)</p>
    <p>WiFi Cell</p>
    <p>Improving Streaming Music Through Policy</p>
    <p>No rate limit Rate limit</p>
    <p>App Policy</p>
  </div>
  <div class="page">
    <p>Unl Rate App</p>
    <p>D at</p>
    <p>a (M</p>
    <p>B )</p>
    <p>Policy</p>
    <p>WiFi Cell</p>
    <p>Total</p>
    <p>User and App Policy Coopera&lt;on Yields Best Usage</p>
    <p>Rate uses 5-6x less cell data than Unl. App uses about 30x less cell data than Unl.</p>
  </div>
  <div class="page">
    <p>ag e</p>
    <p>lo ad</p>
    <p>ti m</p>
    <p>e (s</p>
    <p>)</p>
    <p>P la</p>
    <p>yb ac</p>
    <p>k bu</p>
    <p>ffe r (</p>
    <p>s)</p>
    <p>Time (secs)</p>
    <p>Music app Web app</p>
    <p>Interac&lt;ve App Compe&lt;ng w/ Streaming App</p>
    <p>Problem Poor resource isolaIon leads to erraIc load Imes Solu&lt;on App fair share, prioriIze music only when buffer low</p>
  </div>
  <div class="page">
    <p>ag e</p>
    <p>lo ad</p>
    <p>ti m</p>
    <p>e (s</p>
    <p>)</p>
    <p>P la</p>
    <p>yb ac</p>
    <p>k bu</p>
    <p>ffe r (</p>
    <p>s)</p>
    <p>Time (secs)</p>
    <p>Music app Web app</p>
    <p>Interac&lt;ve App Compe&lt;ng w/ Streaming App</p>
    <p>Problem Poor resource isolaIon leads to erraIc load Imes Solu&lt;on App fair share, prioriIze music only when buffer low</p>
  </div>
  <div class="page">
    <p>ag e</p>
    <p>lo ad</p>
    <p>ti m</p>
    <p>e (s</p>
    <p>)</p>
    <p>P la</p>
    <p>yb ac</p>
    <p>k bu</p>
    <p>ffe r (</p>
    <p>s)</p>
    <p>Time (secs)</p>
    <p>Music app Web app</p>
    <p>P ag</p>
    <p>e lo</p>
    <p>ad ti</p>
    <p>m e</p>
    <p>(s )</p>
    <p>P la</p>
    <p>yb ac</p>
    <p>k bu</p>
    <p>ffe r (</p>
    <p>s)</p>
    <p>Time (secs)</p>
    <p>Music app Web app</p>
    <p>Interac&lt;ve App Compe&lt;ng w/ Streaming App</p>
  </div>
  <div class="page">
    <p>Context awareness: CASS, CARISMA, JCAF  Using context to improve apps  Not looking at resource usage; not single device</p>
    <p>Network Choice/Wifi Offloading  Many: Whiffler, IMP, BreadCrumbs, SALSA  Complementary to Tango</p>
    <p>Serval, MPTCP, TCP-Migrate  Need policy to guide decisions on nets to use  Complementary to Tango</p>
    <p>Related Work</p>
  </div>
  <div class="page">
    <p>Context awareness: CASS, CARISMA, JCAF  Using context to improve apps  Not looking at resource usage; not single device</p>
    <p>Network Choice/WiFi Offloading  Many: Whiffler, IMP, BreadCrumbs, SALSA  Complementary to Tango</p>
    <p>Serval, MPTCP, TCP-Migrate  Need policy to guide decisions on nets to use  Complementary to Tango</p>
    <p>Related Work</p>
  </div>
  <div class="page">
    <p>Context awareness: CASS, CARISMA, JCAF  Using context to improve apps  Not looking at resource usage; not single device</p>
    <p>Network Choice/WiFi Offloading  Many: Whiffler, IMP, BreadCrumbs, SALSA  Complementary to Tango</p>
    <p>Serval, MPTCP, TCP-Migrate  Need policy to guide decisions on nets to use  Complementary to Tango</p>
    <p>Related Work</p>
  </div>
  <div class="page">
    <p>Tango is a network resource management framework based on programmaIc policy</p>
    <p>ProacIvely handle resource conflicts while including user and app prefs into decisions</p>
    <p>Demonstrated the value it adds for single apps as well as across apps</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Thanks! Ques&lt;ons?</p>
  </div>
</Presentation>
