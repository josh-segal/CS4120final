<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>A Clean-Slate Look at Disk Scrubbing</p>
    <p>Alina Oprea and Ari Juels RSA Laboratories</p>
    <p>Presented by Arkady Kanevsky</p>
  </div>
  <div class="page">
    <p>Risk of Data Loss in Hard Drives</p>
    <p>Drives fail!</p>
    <p>Bad sector!</p>
    <p>Latent sector errors (LSEs)  Discovered only when sector is read</p>
    <p>Total Crash</p>
  </div>
  <div class="page">
    <p>RAID and LSEs</p>
    <p>Parity block Data block</p>
    <p>RAID-5 protects against one disk failure  Butone disk failure + one LSE result in data loss  Impact of LSEs on RAID reliability</p>
    <p>[Elerath and Pecht 2007], [Baker et al. 2007]</p>
    <p>RAID-5</p>
  </div>
  <div class="page">
    <p>Mitigations Within a Single Drive</p>
    <p>Disk scrubbing [Schwartz et al. 2004]  Background process that reads disk sectors during disk idle time to</p>
    <p>proactively discover LSEs</p>
    <p>Intra-disk redundancy [Dholakia et al. 2008]  Erasure code over consecutive disk sectors  Parity blocks stored on the same drive  Incurs write overhead</p>
    <p>Comparison of scrubbing and intra-disk redundancy  [Iliadis et al. 2008], [Mi et al. 2008], [Schroeder et al. 2010]</p>
  </div>
  <div class="page">
    <p>Disk Scrubbing</p>
    <p>Today: sequential reading of disk sectors, usually with a fixed pre-determined rate</p>
    <p>But LSEs do not occur with a fixed rate and uniformly across disk sectors (Sigmetrics 2007 study)</p>
    <p>Temporal decay: subsequent errors develop after first LSE  Temporal locality: most errors occur within a short interval of</p>
    <p>previous error  Spatial locality: 50% of LSEs are at a logical distance of 10MB</p>
    <p>Idea: enlarged design space of scrubbing strategies to account for distribution of LSEs and disk history</p>
    <p>Adaptively change scrubbing rate following error event  Sample across disk regions for discovering errors faster</p>
    <p>than by sequential reading (staggering)</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Motivation for more intelligent disk scrubbing techniques  Our LSE model</p>
    <p>Use known facts about LSE distribution (spatial and temporal locality)  New assumptions for usage error development</p>
    <p>Enlarged design space of scrubbing strategies  Staggered strategies  Strategies with adaptive rates</p>
    <p>Simulation model and evaluation  New metric for single drive reliability (MLET)  Reliability dependence on various disk parameters, and disk</p>
    <p>workloads</p>
  </div>
  <div class="page">
    <p>Methodology for our LSE model</p>
    <p>Published facts on LSE distribution  [Bairavasundaram et al. 2007] study on 1.53 million drives from</p>
    <p>various models and manufacturers over 24 month period  Two disk categories: nearline and enterprise  Consider only enterprise disks in our work  Data is not published, only some statistics on it  Translate known facts into scrubbing principles</p>
    <p>Need new assumptions to generate LSE model  Parameterized model aimed at capturing disks with various</p>
    <p>characteristics  Actual disk parameters are currently not transparent</p>
    <p>Validate LSE model against data published by Bairavasundaram et al.</p>
  </div>
  <div class="page">
    <p>Scrubbing principles</p>
    <p>[Bairavasundaram et al. 2007]</p>
    <p>LSE rate is fairly low and constant in first 2 months of drive operation</p>
    <p>LSEs rate increases after 2 months, but is fairly constant before the first LSE develops</p>
    <p>Scrubbing principles</p>
    <p>Keep scrubbing rate low and constant during first 2 months</p>
    <p>Increase scrubbing rate after 2 months, and keep it constant before the first LSE develops</p>
    <p>Almost constant LSE rates</p>
  </div>
  <div class="page">
    <p>Scrubbing principles</p>
    <p>[Bairavasundaram et al. 2007]</p>
    <p>LSEs exhibit temporal locality  inter-arrival time distribution has very long tails</p>
    <p>LSEs exhibit decay  more LSEs develop shortly after a first LSE</p>
    <p>Scrubbing principles</p>
    <p>Use adaptive scrubbing rates  Increase scrubbing rate</p>
    <p>temporarily in a short interval after LSE detection</p>
    <p>Temporal locality and decay of LSEs</p>
  </div>
  <div class="page">
    <p>Scrubbing principles</p>
    <p>[Bairavasundaram et al. 2007]</p>
    <p>LSEs develop clustered on disk at block logical level</p>
    <p>Scrubbing principles</p>
    <p>Staggering detects errors faster than sequential scrubbing</p>
    <p>Spatial locality of LSEs</p>
    <p>Region 1 Region 2</p>
    <p>r segments</p>
    <p>Region 3 Region 4</p>
    <p>r segments r segments r segments</p>
  </div>
  <div class="page">
    <p>Staggered strategy</p>
    <p>Region 1 Region 2</p>
    <p>r segments</p>
    <p>Region 3 Region 4</p>
    <p>r segments r segments r segments</p>
    <p>Performance overhead compared to sequential scrubbing  Small segment sizes (32-64KB): a factor of 5  Large segment sizes (1MB): only 2% overhead</p>
    <p>Parameter choices  Segment size 1MB  Region size 128MB: most LSEs are at distance lower than 128MB</p>
  </div>
  <div class="page">
    <p>Staggered Adaptive Strategies</p>
    <p>Error detected</p>
    <p>Rate_PreLSE</p>
    <p>Rate_Acc</p>
    <p>Rate_PostLSE</p>
    <p>Staggered</p>
    <p>Sequential in regions</p>
    <p>centered at detected</p>
    <p>error Staggered</p>
    <p>Error trigger</p>
    <p>Rate_Acc</p>
    <p>Error detected</p>
    <p>Sequential in regions</p>
    <p>centered at detected</p>
    <p>error</p>
    <p>Rate_PostLSE</p>
    <p>Staggered</p>
    <p>Disk lifetime</p>
    <p>Scrub rate</p>
    <p>End Int_Acc</p>
    <p>End Int_Acc</p>
  </div>
  <div class="page">
    <p>Assumptions on LSE development</p>
    <p>Usage error development  Bairavasundaram et al. study only characterizes age errors  Usage errors exhibit same spatial and temporal locality  Usage errors develop due to both reads and writes, albeit with</p>
    <p>different weights given by a parameter RW_Weight  Increase RW_Weight to minimize effect of reads on LSE development</p>
    <p>Usage errors are triggered when number of bytes accessed (weighted by RW_Weight) exceeds on average 1/BER</p>
    <p>BER: byte-error rate, between [10-15,10-13]</p>
    <p>Error distribution on disk  Errors are clustered on disk around a cluster centroid  Clusters of errors are uniformly distributed on disk</p>
    <p>Assumptions validated against Bairavasundaram et al. results</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Motivation for more intelligent disk scrubbing techniques  Our LSE model</p>
    <p>Use known facts about LSE distribution (spatial and temporal locality)  New assumptions for usage error development</p>
    <p>Enlarged design space of scrubbing strategies  Staggered strategies  Strategies with adaptive rates</p>
    <p>Simulation model and evaluation  New metric for single drive reliability (MLET)  Reliability dependence on various disk parameters, and disk</p>
    <p>workloads</p>
  </div>
  <div class="page">
    <p>Simulation Model</p>
    <p>24 months, interval of one hour  100,000 disks, 500GB each  LSE model includes both age</p>
    <p>and usage errors</p>
    <p>Scrubbing rates from 0 to one full disk scrub per day (in GB/ hour)</p>
    <p>Length of accelerated interval from 3 hours to time to scrub the full disk</p>
    <p>Disk Model Staggered adaptive space</p>
    <p>Exhaustive search for optimized scrubbing</p>
    <p>Optimized: Min MLET (Mean Latent Error Time) Fraction of time disk has latent sector errors</p>
  </div>
  <div class="page">
    <p>Dependence on BER</p>
    <p>More reliable drives</p>
  </div>
  <div class="page">
    <p>High number usage errors</p>
    <p>Scrub infrequently</p>
    <p>Staggered adaptive vs sequential</p>
  </div>
  <div class="page">
    <p>Staggered adaptive vs sequential</p>
    <p>Scrub every two weeks</p>
    <p>Medium number usage</p>
    <p>errors</p>
  </div>
  <div class="page">
    <p>Staggered adaptive vs sequential</p>
    <p>Scrub every two days</p>
    <p>Low number usage errors</p>
  </div>
  <div class="page">
    <p>Relative improvement of staggering and adaptive rates</p>
    <p>Staggering shows steady improvement</p>
    <p>High benefit of adaptive rates</p>
  </div>
  <div class="page">
    <p>Dependence on disk workload</p>
    <p>MLET is independent</p>
    <p>on usage</p>
    <p>MLET increases by usage factor</p>
  </div>
  <div class="page">
    <p>Discussion</p>
    <p>More intelligent scrubbing strategies by taking into account disk characteristics and the history of error development</p>
    <p>Optimal strategies are highly dependent on disk BER and disk workloads</p>
    <p>High sensitivity to disk parameters that are not always public</p>
    <p>Staggering improves resilience to LSEs for all disks  Adaptively changing scrubbing rates in a short interval after</p>
    <p>detecting an LSE benefits most disks that develop a high number of usage errors</p>
    <p>Optimized adaptive staggered strategies can reduce MLET by several orders of magnitude compared to fixed-rate sequential strategies used today</p>
  </div>
  <div class="page">
    <p>Future work</p>
    <p>Expansion of search space for scrubbing strategies  Use more sophisticated search heuristics</p>
    <p>E.g., hill-climbing or simulated annealing</p>
    <p>Performance overhead of real scrubbers in conjunction with typical workloads</p>
    <p>Translation of results to FLASH  Extension of results to replication and RAID systems  Questions?</p>
    <p>Alina Oprea (aoprea@rsa.com)  Ari Juels (ajuels@rsa.com)</p>
  </div>
</Presentation>
