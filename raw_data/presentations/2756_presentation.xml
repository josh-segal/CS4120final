<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>SnailTrail</p>
    <p>Generalizing Critical Paths for Online</p>
    <p>Analysis of Distributed Dataflows</p>
    <p>Moritz Hoffmann, Andrea Lattuada, John Liagouris, Vasiliki</p>
    <p>Kalavri, Desislava Dimitrova, Sebastian Wicki, Zaheer</p>
    <p>Chothia, and Timothy Roscoe</p>
    <p>Supported by</p>
  </div>
  <div class="page">
    <p>Reference Application SnailTrail</p>
    <p>Trace ingestion</p>
    <p>Performance</p>
    <p>summaries</p>
    <p>Program activity graph</p>
    <p>construction</p>
    <p>Critical participation</p>
    <p>computation and</p>
    <p>activity ranking</p>
    <p>trace streams</p>
    <p>Profiling data</p>
    <p>Flink,</p>
    <p>Spark,</p>
    <p>TensorFlow,</p>
    <p>Heron,</p>
    <p>Timely dataflow, ...</p>
    <p>SnailTrail: Diagnosing latency issues in dataflows</p>
    <p>Where is the latency bottleneck in my computation?</p>
  </div>
  <div class="page">
    <p>SnailTrail works online with minimal instrumentation</p>
    <p>Instrumentation complexity</p>
    <p>Online</p>
    <p>SnailTrail</p>
    <p>Coz:</p>
    <p>Causal</p>
    <p>Profiling</p>
    <p>SOSP15</p>
    <p>Pivot</p>
    <p>Tracing</p>
    <p>SOSP15</p>
    <p>Offline Less More</p>
    <p>Vscope</p>
    <p>Middleware</p>
    <p>12</p>
    <p>Stitch</p>
    <p>OSDI16</p>
  </div>
  <div class="page">
    <p>Example 1: Metrics in Flinks dashboard</p>
  </div>
  <div class="page">
    <p>Example 2: Task Scheduling in Spark</p>
    <p>Driver</p>
    <p>W1</p>
    <p>W2</p>
    <p>W3</p>
    <p>SnailTrail, critical participation</p>
    <p>Window</p>
    <p>Conventional profiling</p>
    <p>Window</p>
    <p>% t im</p>
    <p>e</p>
  </div>
  <div class="page">
    <p>The real-world is more complex</p>
    <p>Many tasks, activities, operators,</p>
    <p>dependencies</p>
    <p>Long-running, dynamic workloads</p>
    <p>Bottlenecks not isolated</p>
  </div>
  <div class="page">
    <p>Conventional profiling can indicate wrong bottleneck</p>
    <p>W1</p>
    <p>W2</p>
    <p>W3 serialization</p>
    <p>waiting</p>
    <p>deserializationprocessing</p>
    <p>processing</p>
  </div>
  <div class="page">
    <p>Conventional profiling can indicate wrong bottleneck</p>
    <p>W1</p>
    <p>W2</p>
    <p>W3 serialization</p>
    <p>waiting</p>
    <p>deserializationprocessing</p>
    <p>processing</p>
  </div>
  <div class="page">
    <p>A quick review of</p>
    <p>critical path analysis</p>
  </div>
  <div class="page">
    <p>The program activity graph</p>
    <p>W1</p>
    <p>W2</p>
    <p>W3</p>
    <p>u v</p>
    <p>Nodes are timestamped events:</p>
    <p>start or end of a worker activity</p>
    <p>u = { timestamp: t, worker: 2</p>
    <p>}</p>
  </div>
  <div class="page">
    <p>The program activity graph</p>
    <p>W1</p>
    <p>W2</p>
    <p>W3 d</p>
    <p>u v</p>
    <p>Edges represent typed</p>
    <p>activities</p>
    <p>(u, v) = { type: serialization, operator: map,</p>
    <p>}</p>
  </div>
  <div class="page">
    <p>The program activity graph</p>
    <p>W1</p>
    <p>W2</p>
    <p>W3</p>
    <p>Waiting activities</p>
    <p>are never on a</p>
    <p>critical path</p>
    <p>Activities express</p>
    <p>dependencies</p>
    <p>All workers</p>
    <p>terminate</p>
  </div>
  <div class="page">
    <p>The program activity graph</p>
    <p>W1</p>
    <p>W2</p>
    <p>W3</p>
    <p>Which activities delay the overall execution?</p>
  </div>
  <div class="page">
    <p>Classical critical path analysis</p>
    <p>W1</p>
    <p>W2</p>
    <p>W3</p>
  </div>
  <div class="page">
    <p>What is the equivalent</p>
    <p>of a critical path for</p>
    <p>continuously running,</p>
    <p>distributed streaming</p>
    <p>applications,</p>
    <p>with potentially</p>
    <p>unbounded input?</p>
    <p>There might be no job end</p>
    <p>The program activity graph and</p>
    <p>critical paths change continuously</p>
    <p>Profiling information can quickly</p>
    <p>become stale</p>
  </div>
  <div class="page">
    <p>Online critical path analysis</p>
  </div>
  <div class="page">
    <p>SnailTrail: Online analysis of trace windows</p>
    <p>Input stream Output stream</p>
    <p>Periodic</p>
    <p>windows</p>
    <p>Trace stream</p>
    <p>SnailTrail</p>
    <p>Windowed</p>
    <p>performance</p>
    <p>summaries</p>
  </div>
  <div class="page">
    <p>Program activity graph window</p>
    <p>W1</p>
    <p>W2</p>
    <p>W3</p>
    <p>ts te</p>
    <p>All critical paths have equal length</p>
  </div>
  <div class="page">
    <p>W1</p>
    <p>W2</p>
    <p>W3</p>
    <p>ts te</p>
    <p>Cannot enumerate</p>
    <p>all critical paths</p>
    <p>Impractical!</p>
    <p>Spark trace: 1021 critical paths</p>
    <p>in 10 second window</p>
  </div>
  <div class="page">
    <p>Sampling critical paths misses critical activities</p>
    <p>W1</p>
    <p>W2</p>
    <p>W3</p>
    <p>ts te</p>
  </div>
  <div class="page">
    <p>We rank activities</p>
    <p>across all critical paths</p>
    <p>to capture their</p>
    <p>relative importance.</p>
    <p>Intuition: The more critical paths go</p>
    <p>through an activity, the more critical</p>
    <p>it might be</p>
  </div>
  <div class="page">
    <p>Counting over enumerating</p>
    <p>W1</p>
    <p>W2</p>
    <p>W3</p>
    <p>ts te</p>
  </div>
  <div class="page">
    <p>The Critical Participation metric</p>
    <p>Fraction of an edges time contribution across all critical paths</p>
    <p>Critical paths</p>
    <p>through edge Edge weight</p>
    <p>Total number of</p>
    <p>critical paths Can be computed without</p>
    <p>critical path enumeration!</p>
  </div>
  <div class="page">
    <p>Reference Application SnailTrail</p>
    <p>Trace ingestion</p>
    <p>Performance</p>
    <p>summaries</p>
    <p>Program activity graph</p>
    <p>construction</p>
    <p>Critical participation</p>
    <p>computation and</p>
    <p>activity ranking</p>
    <p>trace streams</p>
    <p>Profiling data</p>
    <p>Flink,</p>
    <p>Spark,</p>
    <p>TensorFlow,</p>
    <p>Heron,</p>
    <p>Timely dataflow, ...</p>
    <p>SnailTrail in action</p>
  </div>
  <div class="page">
    <p>SnailTrail</p>
    <p>Trace ingestion</p>
    <p>Performance</p>
    <p>summaries</p>
    <p>Program activity graph</p>
    <p>construction</p>
    <p>Critical participation</p>
    <p>computation and</p>
    <p>activity ranking</p>
    <p>trace streams</p>
    <p>Interpreting critical participation-based summaries</p>
    <p>Stream of tuples:</p>
    <p>(Activity type, Operator, Worker, , Critical</p>
    <p>participation)</p>
    <p>Examples:</p>
    <p>Activity type bottleneck analysis</p>
    <p>Operator bottleneck analysis</p>
    <p>(More in the paper!)</p>
  </div>
  <div class="page">
    <p>Activity type bottleneck analysis (Spark)</p>
    <p>Apache Spark: Yahoo! Streaming Benchmark, 16 workers, 8s windows</p>
    <p>Conventional profiling SnailTrail, critical participation</p>
    <p>Window Window</p>
    <p>% t im</p>
    <p>e</p>
  </div>
  <div class="page">
    <p>Operator bottleneck analysis (Flink)</p>
    <p>Conventional profiling SnailTrail, critical participation Read</p>
    <p>sentences</p>
    <p>Flatmap:</p>
    <p>Split words</p>
    <p>Count words</p>
    <p>Increase flatmaps</p>
    <p>parallelism!</p>
    <p>Apache Flink: Dhalion WordCount Benchmark, 10 workers, 1s windows</p>
    <p>% t im</p>
    <p>e p</p>
    <p>ro c e</p>
    <p>s s in</p>
    <p>g</p>
    <p>Seconds Seconds</p>
  </div>
  <div class="page">
    <p>SnailTrail performance</p>
    <p>Low instrumentation overhead</p>
    <p>Spark, TensorFlow</p>
    <p>No observed overhead</p>
    <p>Flink, Timely</p>
    <p>~10% overhead compared to</p>
    <p>logging disabled</p>
    <p>High throughput</p>
    <p>Always online</p>
    <p>SnailTrail on Intel Xeon E5-4640, 2.40GHz, 32</p>
    <p>cores, 512GiB RAM</p>
    <p>Trace: Apache Flink Sessionization, 48 workers,</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Conventional profiling is misleading</p>
    <p>CP-metric: online critical path analysis</p>
    <p>SnailTrail: online CP-based summaries</p>
  </div>
</Presentation>
