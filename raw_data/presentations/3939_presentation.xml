<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Improving Scalability and FaultImproving Scalability and Fault Tolerance in an ApplicationTolerance in an Application Management InfrastructureManagement Infrastructure</p>
    <p>Nikolay Topilski , Jeannie Albrecht, and Amin Vahdat</p>
    <p>Williams College &amp; UC San Diego</p>
  </div>
  <div class="page">
    <p>Large-Scale ComputingLarge-Scale Computing</p>
    <p>Large-scale computing has many advantages  Increased computing power leads to improved</p>
    <p>performance, scalability, and fault tolerance</p>
    <p>Also introduces many new challenges  Building and managing distributed applications to</p>
    <p>leverage full potential of large-scale environments is difficult</p>
  </div>
  <div class="page">
    <p>Distributed Application ManagementDistributed Application Management</p>
    <p>Develop-Deploy-Debug cycle  Develop software  Deploy on distributed machines  Debug code when problems arise</p>
    <p>Management challenges in large-scale environments  Configuring resources  Detecting and recovering from failures  Achieving scalability and fault tolerance</p>
    <p>Research goal: Build an application management infrastructure that addresses these challenges</p>
    <p>Develop</p>
    <p>Deploy</p>
    <p>Debug</p>
  </div>
  <div class="page">
    <p>Deploying an ApplicationDeploying an Application</p>
    <p>Steps required to deploy an application 1. Connect to each resource 2. Download software</p>
    <p>A better alternative: Plush Develop</p>
    <p>Deploy</p>
    <p>Debug</p>
  </div>
  <div class="page">
    <p>PlushPlush</p>
    <p>Distributed application management infrastructure  Designed to simplify management of distributed</p>
    <p>applications  Help software developers cope with the challenges of</p>
    <p>large-scale computing  Support most applications in most environments</p>
    <p>Talk overview  Give brief overview of Plush architecture  Discuss scalability and fault tolerance limitations in</p>
    <p>original design  Investigate ways to improve limitations</p>
  </div>
  <div class="page">
    <p>Plush OverviewPlush Overview  Plush consists of two main components:</p>
    <p>Controller - runs on users Desktop  Client - runs on distributed resources</p>
    <p>To start application, user provides controller with application specification and resource directory (XML)</p>
    <p>Controller</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>XML</p>
  </div>
  <div class="page">
    <p>Plush OverviewPlush Overview  Controller makes direct TCP connection to</p>
    <p>each client process running remotely  Communication mesh forms star topology</p>
    <p>Controller instructs clients to download and install software (described in app spec)</p>
    <p>Controller</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>XML</p>
  </div>
  <div class="page">
    <p>When all resources have been configured, controller instructs clients to begin execution</p>
    <p>Clients monitor processes for errors  Notify controller if failure occurs</p>
    <p>Controller</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>XML</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Restart process.</p>
    <p>Client</p>
    <p>Process failed!</p>
    <p>Plush OverviewPlush Overview</p>
  </div>
  <div class="page">
    <p>Plush OverviewPlush Overview</p>
    <p>Once execution completes, controller instructs clients to clean up  Stop any remaining processes  Remove log files  Disconnect TCP connections</p>
    <p>Controller</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>XML</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>Plush User InterfacesPlush User Interfaces  Command-line interface used to interact with applications  Nebula (GUI) allows users to describe, run, &amp; visualize applications  XML-RPC interface for managing applications programmatically</p>
  </div>
  <div class="page">
    <p>LimitationsLimitations</p>
    <p>Plush was designed with PlanetLab in mind   in 2004!  PlanetLab grew from 300 machines to 800+</p>
    <p>Plush now supports execution in a variety of environments in addition to PlanetLab  Some have 1000+ resources</p>
    <p>Problems  Star topology does not scale beyond ~300 resources  Tree topology scales but is not resilient to failure</p>
  </div>
  <div class="page">
    <p>InsightsInsights  We need a resilient overlay tree in place of the star  Lots of people have already studied overlay tree</p>
    <p>building algorithms  Mace is a framework for building overlays</p>
    <p>Developed at UCSD  Simplifies development through code reuse</p>
    <p>Solution: Combine Plush with overlay tree provided by Mace!  Allow us to explore different tree building protocols  Leverage existing research in overlay networks without</p>
    <p>reinventing the wheel  Improve scalability and fault tolerance of Plush</p>
  </div>
  <div class="page">
    <p>Introducing PlushMIntroducing PlushM  We extended the existing communication fabric in</p>
    <p>Plush to allow interaction with Mace ( PlushM)  PlushM still uses same abstractions for application</p>
    <p>management as Plush  We chose RandTree as our initial overlay topology</p>
    <p>Random overlay tree that reconfigures when failure occurs</p>
    <p>Controller</p>
    <p>Client</p>
    <p>XML</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>Evaluating ScalabilityEvaluating Scalability  Overlay tree construction time</p>
  </div>
  <div class="page">
    <p>Evaluating ScalabilityEvaluating Scalability  Message propagation time</p>
  </div>
  <div class="page">
    <p>Evaluating Fault ToleranceEvaluating Fault Tolerance  Reconfiguration time after disconnect (ModelNet)</p>
  </div>
  <div class="page">
    <p>Plush provides distributed application management in a variety of environments  Original design has scalability/fault tolerance limitations in</p>
    <p>large-scale clusters</p>
    <p>PlushM replaces Plushs communication infrastructure with Mace overlay to provide better scalability (1000 resources) and fault tolerance</p>
    <p>Future work  Evaluate PlushM on larger topologies  Investigate the user of other Mace overlays in addition to</p>
    <p>RandTree  Explore ways to improve PlushM performance</p>
    <p>Conclusions and Future WorkConclusions and Future Work</p>
  </div>
  <div class="page">
    <p>Thank you!Thank you!</p>
    <p>Plush http://plush.cs.williams.edu Mace http://mace.ucsd.edu</p>
    <p>Email ntopilsk@cs.ucsd.edu</p>
    <p>jeannie@cs.williams.edu</p>
    <p>vahdat@cs.ucsd.edu</p>
  </div>
</Presentation>
