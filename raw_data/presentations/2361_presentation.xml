<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>The The PhoenixPhoenix Recovery System: Recovery System: Rebuilding from the ashes of anRebuilding from the ashes of an Internet catastropheInternet catastrophe</p>
    <p>Flavio Junqueira, Ranjita Bhagwan, Keith Marzullo, Stefan Savage, and Geoffrey M. Voelker</p>
    <p>University of California, San Diego</p>
    <p>Hot Topics in Operating Systems - HotOS03</p>
  </div>
  <div class="page">
    <p>MotivationMotivation</p>
    <p>Operating systems and applications have vulnerabilities</p>
    <p>Some major outbreaks  Code Red: over 360,000 hosts</p>
    <p>Sapphire: over 75,000 hosts</p>
    <p>It is a matter of time until a major incident corrupting data on a large number of hosts happens</p>
    <p>Our goal: build a system resilient to major Internet incidents</p>
    <p>A large number of hosts may share the same vulnerability</p>
  </div>
  <div class="page">
    <p>IntroductionIntroduction</p>
    <p>Possible approaches  Contain Internet pathogens: very challenging [Moore03]</p>
    <p>Recover from catastrophes: replicate data</p>
    <p>Typical replication strategy  Assume independent host failures</p>
    <p>Compute a threshold t on the number of failures</p>
    <p>Replicate to this degree</p>
    <p>Shared vulnerabilities Dependent host failures</p>
    <p>Independent host failures is not a suitable assumption</p>
    <p>Threshold t on the number of host failures  From previous events, t can be large</p>
    <p>Code Red worm infected over 360,000 hosts</p>
  </div>
  <div class="page">
    <p>What is a good replication strategy?What is a good replication strategy?</p>
    <p>Desirable properties  Enable recovery of data after an Internet catastrophe</p>
    <p>Small replica sets</p>
    <p>Informed strategy for replica placement  Sets of hosts that fail independently</p>
    <p>Hosts executing different sets of software systems</p>
  </div>
  <div class="page">
    <p>Our replication strategyOur replication strategy</p>
    <p>Classes of software systems: attributes  E.g. Operating system</p>
    <p>Potentially vulnerable software systems: attribute values  E.g. Linux, Windows</p>
    <p>Replicate data on a set of hosts that have different values for each attribute: cores</p>
    <p>Tolerating the failure of k values  No permutation of k attribute values covers all the hosts in a core</p>
    <p>Current assumption: k=1 O At least two distinct values per attribute in a core</p>
    <p>Definitions  Attribute configuration: attribute values of a host</p>
    <p>Diversity: distribution of attribute configurations</p>
  </div>
  <div class="page">
    <p>An exampleAn example</p>
    <p>Attributes  Operating system:{ , }</p>
    <p>Web server:{ , }</p>
    <p>Web browser:{ , }</p>
    <p>Cores  Red and Green</p>
    <p>(orthogonal core)</p>
    <p>Red, Yellow, and Blue</p>
    <p>{ , , }{ , , }</p>
    <p>{ , , }</p>
    <p>Attribute configurations Attribute configurationsPhoenix</p>
    <p>{ , , }</p>
  </div>
  <div class="page">
    <p>In this workIn this work</p>
    <p>Feasibility of this approach  What is the impact of diversity on storage overhead and</p>
    <p>load?</p>
    <p>Simulations  Levels of diversity</p>
    <p>Attribute sets</p>
    <p>Reminder  Storage overhead: size of the replica set (core)</p>
    <p>Storage load: given a host h, number of cores h participates</p>
  </div>
  <div class="page">
    <p>System modelSystem model</p>
    <p>A set H of hosts</p>
    <p>A set A of attributes</p>
    <p>Every attribute has the same cardinality y</p>
    <p>A mapping M from hosts to attribute configurations</p>
    <p>Diversity  Determined by M</p>
    <p>Often skewed in practice (93% Windows) [OneStat]</p>
    <p>Modeling diversity  Single parameter f  [0.5,1)</p>
    <p>A share f of the hosts has a share (1-f) of the attribute configurations</p>
    <p>Example 1:</p>
    <p>Example 2:</p>
    <p>f = 0.5</p>
    <p>f = 0.75</p>
    <p>Attribute configurations:</p>
  </div>
  <div class="page">
    <p>Choosing a coreChoosing a core</p>
    <p>Decision problem is NP-Complete (Set cover)</p>
    <p>Finding a core for host hi 1. Make a list L of hosts orthogonal to hi 2. If L is not empty</p>
  </div>
  <div class="page">
    <p>Back to the first exampleBack to the first example</p>
    <p>Attributes  Operating system:{ , }</p>
    <p>Web server:{ , }</p>
    <p>Web browser:{ , }</p>
    <p>Cores  Red and Green</p>
    <p>Red, Yellow, and Blue</p>
    <p>{ , , }{ , , }</p>
    <p>{ , , }</p>
    <p>Attribute configurations Attribute configurationsPhoenix</p>
    <p>{ , , }</p>
    <p>{ , , }{ , , }</p>
    <p>Attribute configurations Attribute configurationPhoenix</p>
    <p>{ , , }</p>
  </div>
  <div class="page">
    <p>Core size for scenario 8/2Core size for scenario 8/2</p>
    <p>1,000 hosts</p>
    <p>8 attributes</p>
    <p>2 values per attribute</p>
    <p>Linux vs. Windows</p>
    <p>Average core size is small even for highly skewed diversity</p>
  </div>
  <div class="page">
    <p>Core size for scenario 8/4Core size for scenario 8/4</p>
    <p>1,000 hosts</p>
    <p>8 attributes</p>
    <p>4 values per attribute</p>
    <p>More attribute values reduces core size variation</p>
  </div>
  <div class="page">
    <p>Storage loadStorage load</p>
    <p>1,000 hosts</p>
    <p>For highly skewed diversity, storage load can be high</p>
  </div>
  <div class="page">
    <p>System design issuesSystem design issues</p>
    <p>Fully-distributed system  No single point of failure</p>
    <p>Leverage research on P2P systems</p>
    <p>Announcing available configurations  DHT-based approach</p>
    <p>Encryption scheme to protect against data corruption</p>
    <p>Recovering from a catastrophe  Time to recover is not critical</p>
    <p>Coping with a large number of requests O Threshold on the number of accepted requests</p>
    <p>O Exponential backoff</p>
  </div>
  <div class="page">
    <p>ConclusionsConclusions</p>
    <p>Failures are not independent</p>
    <p>Computing a threshold is not practical</p>
    <p>Model of dependent failures based on shared vulnerabilities</p>
    <p>Storage overhead is small even for highly skewed diversity</p>
    <p>Storage load can be large  Has to be considered by the heuristic that finds cores</p>
    <p>Increase average core size</p>
  </div>
  <div class="page">
    <p>Future workFuture work</p>
    <p>How do we determine the attributes?  Resilience depends on the attributes</p>
    <p>Vulnerability databases</p>
    <p>Dynamic attributes:new attributes and values</p>
    <p>How many attributes do we need?  The number of attributes impact on storage overhead</p>
    <p>What is a good level of granularity for the attributes?  E.g. {Windows} vs. {Win_95, Win_98, Win_2000, Win_XP}</p>
    <p>Other challenges  Heuristics for finding cores: storage overhead and storage load</p>
    <p>Efficacy O How do we assess the efficacy of a prototype?</p>
    <p>O Major Internet incidents are not so frequent</p>
  </div>
  <div class="page">
    <p>Possible attributesPossible attributes</p>
    <p>Classes of exposed from the ICAT vulnerability database (http://icat.nist.gov) - 05/13/2003</p>
  </div>
  <div class="page">
    <p>IntroductionIntroduction</p>
    <p>Backup systems  Local techniques: tapes and CDs</p>
    <p>Commercial remote backup</p>
    <p>Cooperative remote backup</p>
    <p>Cooperative remote backup  A host h relinquishes a fraction x of its disk</p>
    <p>x/k per user, if h serves k other hosts</p>
    <p>Threshold model  Worst-case scenario</p>
    <p>For dependent host failures O Threshold possibly very large</p>
    <p>O k possibly very large and x/k very small</p>
    <p>Infeasible for such scenarios</p>
  </div>
  <div class="page">
    <p>IntroductionIntroduction</p>
    <p>Software</p>
    <p>Worms and viruses exploit these vulnerabilities</p>
    <p>Several hosts share the same vulnerability</p>
    <p>E.g. Code Red worm (360,000); Saphire worm (75,000)</p>
    <p>None of these caused any major damage on computers connected to the Internet</p>
    <p>but It is a matter of time until a major Internet incident occurs</p>
  </div>
  <div class="page">
    <p>Replication strategyReplication strategy</p>
    <p>Replicate on hosts that fail independently</p>
    <p>Assumption  Hosts executing the same program are likely to fail dependently</p>
    <p>E.g. Hosts executing the same OS version</p>
    <p>Rationale  Shared vulnerabilities</p>
    <p>Derived strategy  Replicate on hosts that run distinct sets of programs</p>
  </div>
  <div class="page">
    <p>A simple model of diversityA simple model of diversity</p>
    <p>Rationale:  distribution of attribute configurations is often skewed</p>
    <p>Assess the tradeoffs as diversity becomes more skewed</p>
    <p>f  [0.5,1): single parameter of the model  A share f of the hosts has a share (1-f) of the attribute</p>
    <p>configurations</p>
    <p>Given a value of f, find the value of a that satisfies the following:</p>
    <p>Generating a mapping M  Fix the value of a attributes</p>
    <p>Choose values randomly for the other |A| - a attributes</p>
    <p>f y</p>
  </div>
  <div class="page">
    <p>Another exampleAnother example</p>
    <p>H7</p>
    <p>H6</p>
    <p>H5</p>
    <p>H4</p>
    <p>H8</p>
    <p>H3</p>
    <p>H2</p>
    <p>H1</p>
    <p>Operating system and Web browser: most skewed attributes</p>
    <p>75% of the hosts (6) have 25% of the attribute configurations (2)</p>
    <p>f = 0.75</p>
    <p>y = 2  a = 2</p>
    <p>{ , , }</p>
    <p>{ , , }</p>
    <p>{ , , }</p>
    <p>{ , , }</p>
    <p>{ , , }</p>
    <p>{ , , }</p>
    <p>{ , , }</p>
    <p>{ , , }</p>
    <p>Attributes  Operating system:{ , }</p>
    <p>Web server:{ , }</p>
    <p>Web browser:{ , }</p>
  </div>
  <div class="page">
    <p>An exampleAn example</p>
    <p>Attributes  Operating system:{Windows,Unix}</p>
    <p>Web server:{Apache, IIS}</p>
    <p>Web browser:{Netscape, Explorer}</p>
    <p>Cores  Red and Green</p>
    <p>Red, Orange, and Blue</p>
    <p>{Unix, Apache, Netscape}</p>
    <p>{Windows,IIS,Netscape}</p>
    <p>{Windows,Apache,Explorer}</p>
    <p>{Windows,IIS,Explorer}</p>
    <p>Attribute configurations Attribute configurationsPhoenix</p>
  </div>
  <div class="page">
    <p>Back to the first exampleBack to the first example</p>
    <p>Attributes  Operating system:{ , }</p>
    <p>Web server:{ , }</p>
    <p>Web browser:{ , }</p>
    <p>Cores  Red and Green</p>
    <p>Red, Yellow, and Blue</p>
    <p>{ , , }</p>
    <p>{ , , }</p>
    <p>{ , , }</p>
    <p>Attribute configurationsPhoenix</p>
    <p>{ , , }</p>
    <p>Attribute configurations</p>
    <p>{ , , }</p>
    <p>{ , , }</p>
    <p>Attribute configurationsPhoenixAttribute configuration</p>
    <p>{ , , }</p>
  </div>
</Presentation>
