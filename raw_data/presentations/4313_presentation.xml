<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Measurement and Modeling of the Origins of Starvation in Congestion</p>
    <p>Controlled Mesh Networks</p>
    <p>Jingpu Shi, Omer Gurewitz, Vincenzo Mancuso, Joseph Camp, and Edward W. Knightly</p>
    <p>vincenzo.mancuso@ieee.org</p>
    <p>Rice Networks Group</p>
  </div>
  <div class="page">
    <p>Objectives</p>
    <p>Origins of starvation  Demonstrate analytically as well as experimentally</p>
    <p>that the basic scenario of any CSMA-based Mesh Networks is sufficient to induce starvation</p>
    <p>Counter-Starvation Policy  Suggest a simple solution which is supported by</p>
    <p>standard 802.11 protocols</p>
    <p>Fair Share</p>
    <p>Mine Yours</p>
  </div>
  <div class="page">
    <p>Previous work showed that severe unfairness can occur in multihop wireless networks due to MAC behavior  e.g., M. Garetto, J. Shi, and E. Knightly, Modeling Media Access in Embedded</p>
    <p>Two-Flow Topologies of Multi-hop Wireless Networks. ACM MobiCom 2005.</p>
    <p>It has been shown that TCP magnifies MAC unfair contention  e.g., S. Lee K. Xu, S. Bae and M. Gerla, Tcp behavior across multihop wireless</p>
    <p>networks and the wired internet, WOWMOM 2002.</p>
    <p>Solutions were suggested  Z. Fu, P. Zerfos, H. Luo, S. Lu, L. Zhang, and M. Gerla,</p>
    <p>INFOCOM03  LRED, Fixed window based on the hop count  K. Sundaresan, V. Anantharaman, H. Hsieh, and</p>
    <p>R. Sivakumar, MobiHoc03  ATP  T. Jimenez and E. Altman, PWC03  delayed TCP ack</p>
    <p>Overview</p>
    <p>The Book of Starvation</p>
  </div>
  <div class="page">
    <p>However</p>
    <p>Our prior understanding of why starvation occurs is incorrect and has yielded solutions that are not effective e.g.,  it is believed that TCP pacing/smart dropping with the optimal pacing rate solves this but</p>
    <p>we will show that any rate yields starvation  it is also believed that limiting or fixing TCP window to a small value is sufficient to induce fairness and</p>
    <p>we will show that even a fixed TCP window of one packet can be enough for severe throughput imbalance</p>
    <p>The Boo k of</p>
    <p>Starvatio n</p>
    <p>I went through the book but I am still</p>
    <p>starving</p>
  </div>
  <div class="page">
    <p>Basic Scenario of Mesh Network</p>
    <p>At least one Mesh Point for packet relay  Three node network</p>
    <p>Node GW - Wired gateway  Node A and Node B  Mesh Points</p>
    <p>At least two TCP flows</p>
    <p>A B GW</p>
    <p>TCP ACK</p>
    <p>TCP DATA</p>
  </div>
  <div class="page">
    <p>Severe Throughput Imbalance Measurements in an operational 802.11 Mesh Network (TFA, Houston TX)</p>
    <p>Potential for starvation in operational mesh networks  under saturation conditions  i.e., artificial traffic is injected to A and B</p>
    <p>B-&gt;GW A-&gt;GW</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut (</p>
    <p>kb ps</p>
    <p>)</p>
    <p>Flow</p>
    <p>Achievable TCP Throughput TCP Throughput (Contention)</p>
    <p>RTS/CTS Disabled</p>
    <p>A B GW</p>
    <p>TCP ACK</p>
    <p>TCP DATA</p>
  </div>
  <div class="page">
    <p>Severe Throughput Imbalance Measurements in an operational 802.11 Mesh Network (TFA, Houston TX)</p>
    <p>Potential for starvation in operational mesh networks  under saturation conditions  i.e., artificial traffic is injected to A and B</p>
    <p>B-&gt;GW A-&gt;GW</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut (</p>
    <p>kb ps</p>
    <p>)</p>
    <p>Flow</p>
    <p>Achievable TCP Throughput TCP Throughput (Contention)</p>
    <p>RTS/CTS Enabled</p>
    <p>B-&gt;GW A-&gt;GW</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut (</p>
    <p>kb ps</p>
    <p>)</p>
    <p>Flow</p>
    <p>Achievable TCP Throughput TCP Throughput (Contention)</p>
    <p>RTS/CTS Disabled</p>
    <p>A B GW</p>
    <p>TCP ACK</p>
    <p>TCP DATA</p>
    <p>The two-hop node starves when contending with the one-hop node</p>
  </div>
  <div class="page">
    <p>Origins of starvation Compounding effect of three factors: (i) The collision avoidance in medium access protocol</p>
    <p>induces bi-stability in which pairs of nodes symmetrically alternate in capturing system resources</p>
    <p>(ii) The congestion control in transport protocol induces asymmetry in the time spent in each state and favors the one-hop flow</p>
    <p>(iii) High penalty due to cross-layer effects in terms of loss, delay, and consequently, throughput, in order to recapture system resources</p>
    <p>I am starving</p>
    <p>Texas-size Starvation</p>
  </div>
  <div class="page">
    <p>Due to lack of coordination:  Bi-stable state: either A transmits and GW is in high backoff, or GW</p>
    <p>transmits and A is in high backoff  Success state and fail state alternate  Symmetric behavior</p>
    <p>CW=2CWmin CW=22CWmin</p>
    <p>CW=2CWmin CW=CWminCW=22CWmin</p>
    <p>CW=2kCWmin</p>
    <p>CW=CWmin CW=CWmin CW=CWmin CW=CWmin</p>
    <p>DATA Aggregate ACK A B GW</p>
    <p>Origins of starvation I) Medium Access and MAC Bi-stability</p>
  </div>
  <div class="page">
    <p>Origins of starvation II) Asymmetry Induced by TCP</p>
    <p>Two nested transport loops and sliding windows</p>
    <p>ACK</p>
    <p>Asymmetric impact of multipacket capture</p>
    <p>(A, B) burst: the burst size is limited by:  TCP window size</p>
    <p>(GW, B) burst: self-sustaining loop:  TCP ACK are generated</p>
    <p>GWBA ACK</p>
    <p>DATA</p>
    <p>DATA</p>
    <p>Inner loop Outer loop</p>
    <p>GWBA</p>
    <p>DATA</p>
    <p>DATA</p>
    <p>GWBA ACK</p>
    <p>DATA</p>
  </div>
  <div class="page">
    <p>Origins of starvation III) Severe Penalties</p>
    <p>First time segment is transmitted TCP retransmissions</p>
    <p>TCP Congestion Window</p>
    <p>TCP Timeouts</p>
    <p>TCP ACK received (Cumulated ACK)</p>
    <p>MAC Packet drop (Max Retry Limit reached)</p>
    <p>Time [sec]</p>
    <p>T C</p>
    <p>P s</p>
    <p>eq ue</p>
    <p>nc e</p>
    <p>nu m</p>
    <p>be r</p>
    <p>[k B</p>
    <p>]</p>
    <p>Asymmetric impact of multipacket capture  Node GW incurs small penalty:</p>
    <p>short duration of fail state but long packet bursts  Node A incurs high penalty:</p>
    <p>long duration of fail state and low offered load high backoff &amp; multiple TCP timeouts</p>
    <p>Of course you are starving the sniffer ate all your packets</p>
    <p>A B GW</p>
    <p>TCP ACK</p>
    <p>TCP DATA</p>
    <p>Node A</p>
  </div>
  <div class="page">
    <p>Analytical Model</p>
    <p>Objectives  Isolate and capture the root cause of starvation  Only model one aspect of congestion control</p>
    <p>sliding window  Technique</p>
    <p>Embedded Markov chain model</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>A-&gt;GW B-&gt;GW</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut (</p>
    <p>M bp</p>
    <p>s)</p>
    <p>Model NS2-Fixed TCP win. NS2 TFA</p>
    <p>Model  static sliding window</p>
    <p>congestion control mechanism</p>
    <p>NS2  fixed TCP congestion</p>
    <p>window (TCP mechanisms including timeouts and cumulative ACKs)</p>
    <p>NS2  legacy TCP New Reno</p>
    <p>(dynamic congestion window)  TFA</p>
    <p>legacy TCP New Reno (dynamic congestion window +MAC and PHY influences)</p>
  </div>
  <div class="page">
    <p>Solution: increase first hop contention window</p>
    <p>Counter-Starvation Policy</p>
    <p>CWmin of B (minislots)</p>
    <p>T hr</p>
    <p>ou gh</p>
    <p>pu t</p>
    <p>(M bp</p>
    <p>s)</p>
    <p>Model A&gt;GW Model B&gt;GW Simulation A&gt;GW Simulation B&gt;GW UrbanMesh A&gt;GW UrbanMesh B&gt;GW</p>
    <p>Default CWmin</p>
    <p>Varying CWmin</p>
    <p>Default CWmin</p>
    <p>A B GW</p>
    <p>When CWmin increases, fairness is improved/achieved</p>
  </div>
  <div class="page">
    <p>Counter-Starvation Policy</p>
    <p>All nodes that are directly connected to the gateway should increase their minimum contention window to a value significantly greater than that of all other nodes</p>
    <p>Simple to implement- no overhead or message exchange between nodes</p>
    <p>Compliant with IEEE 802.11e EDCA</p>
    <p>Fair Share</p>
    <p>Mine</p>
    <p>Yours</p>
  </div>
  <div class="page">
    <p>Policy Validation on Mirror Mesh</p>
    <p>Linux Operating System (kernel 2.6) Atheros wireless card (Madwifi v.0.9.2 driver) MAC IEEE 802.11b Data rate fixed to 11Mbps Default CWmin = 16 Data packet size = 1500 Bytes</p>
  </div>
  <div class="page">
    <p>Experimental Validation</p>
    <p>A</p>
    <p>B</p>
    <p>GW</p>
    <p>RTS/CTS Enabled</p>
    <p>Fairness can be achieved (under different definitions)</p>
  </div>
  <div class="page">
    <p>Broader Scenarios</p>
    <p>RTS/CTS disabled  Different packet size  Downstream  UDP traffic  Parking lot topology (longer chain topologies)  Multi-branch topologies  Multiple TCP flows</p>
    <p>Validate and evaluate the effect of the solution on more general scenarios:</p>
    <p>Confirms that the starvation phenomenon exists in much broader scenarios</p>
    <p>Proposed solution is effective in more general topologies</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Analytically show that one-hop TCP flows interacting with multi-hop TCP flows is sufficient to induce starvation</p>
    <p>Demonstrate potential starvation in an operational multitier urban mesh network</p>
    <p>Analyze the joint effect of MAC and transport layers congestion control on unfairness</p>
    <p>Suggest a simple Counter-Starvation Policy  Implement and empirically validate the solution on</p>
    <p>MirrorMesh, a network re-deployment within the same urban environment</p>
  </div>
  <div class="page">
    <p>Questions</p>
  </div>
</Presentation>
