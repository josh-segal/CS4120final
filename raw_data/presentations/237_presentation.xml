<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Autonomous FPGA Fault HandlingAutonomous FPGA Fault Handling through</p>
    <p>Competitive Runtime ReconfigurationCompetitive Runtime Reconfiguration</p>
    <p>Ronald F. DeMara Ronald F. DeMara and and Kening Zhang Kening Zhang University of Central FloridaUniversity of Central Florida</p>
    <p>Ronald F. DeMara Ronald F. DeMara and and Kening Zhang Kening Zhang University of Central FloridaUniversity of Central Florida</p>
  </div>
  <div class="page">
    <p>Reprogrammable Device Failure</p>
    <p>Duration:</p>
    <p>Target:</p>
    <p>Detection:</p>
    <p>Isolation:</p>
    <p>Diagnosis:</p>
    <p>Recovery:</p>
    <p>Transient: SEU Permanent: SEL, Oxide Breakdown, Electron Migration, LPD</p>
    <p>Repetitive Readback [Wells00]</p>
    <p>Device Configuration</p>
    <p>Approach: TMR (conventional</p>
    <p>spatial redundancy)</p>
    <p>BIST</p>
    <p>Processing Datapath</p>
    <p>Device Configuration</p>
    <p>Processing Datapath</p>
    <p>Evolutionary</p>
    <p>Bitwise Comparison</p>
    <p>Invert Bit Value</p>
    <p>Ignore Discrepancy</p>
    <p>Majority Vote</p>
    <p>STARS [Abramovici01]</p>
    <p>Supplementary Testbench</p>
    <p>Cartesian Intersection</p>
    <p>Worst-case Clock Period</p>
    <p>Dilation</p>
    <p>Replicate in Spare Resource</p>
    <p>Characteristics</p>
    <p>Methods CED</p>
    <p>[McCluskey04]</p>
    <p>Duplex Output</p>
    <p>Comparison</p>
    <p>Fast Run-time Location</p>
    <p>Select Spare Resource</p>
    <p>Sussex [Vigander01]</p>
    <p>Duplex Output</p>
    <p>Comparison</p>
    <p>(not addressed)</p>
    <p>(not addressed)</p>
    <p>unnecessary unnecessary</p>
    <p>unnecessary</p>
    <p>Population-based GA using</p>
    <p>Extrinsic Fitness Evaluation</p>
    <p>Evolutionary Algorithm using Intrinsic Fitness</p>
    <p>Evaluation</p>
    <p>Fault-Handling Techniques for SRAM-based FPGAs</p>
    <p>CRR [DeMara05]</p>
  </div>
  <div class="page">
    <p>Previous Work Detection Characteristics of FPGA Fault-Handling Schemes</p>
    <p>StrategiesStrategies: 1) Evolve redundancy into design before anticipated failure 2) Redesign after detection of failure 3) Combine desirable aspects of both strategies 1) + 2)</p>
  </div>
  <div class="page">
    <p>CRR Arrangement in SRAM FPGA</p>
    <p>Configurations in PopulationConfigurations in Population  C = CL CR</p>
    <p>CL = subset of left-half configurations  CR = subset of right-half configurations  |CL|=|CR |= |C|/2</p>
    <p>Discrepancy OperatorDiscrepancy Operator  Baseline Discrepancy Operator  is dyadic operator with binary output:</p>
    <p>Z(Ci) is FPGA data throughput output of configuration Ci</p>
    <p>Each half-configuration evaluates  using embedded checker (XNOR gate) within each individual</p>
    <p>Any fault in checker lowers that individuals fitness so that individual is no longer preferred and eventually undergoes repair</p>
    <p>Othewise</p>
    <p>CZCZ CC</p>
    <p>R i</p>
    <p>L iR</p>
    <p>i L i</p>
    <p>)()(</p>
    <p>Reconfiguration Algorithm</p>
    <p>`</p>
    <p>S R A M -bas ed F P G A</p>
    <p>L Half-Co nfig uration</p>
    <p>Discrepancy Check L Discrepancy Check R</p>
    <p>Function Logic L</p>
    <p>CONFIGURA TION BIT STREA M</p>
    <p>INPUT DA TA</p>
    <p>Function Logic R</p>
    <p>DATA OUTPUT</p>
    <p>F E</p>
    <p>E D</p>
    <p>B A</p>
    <p>C K</p>
    <p>R Half-Config uration</p>
    <p>CONTROL</p>
    <p>O F F -C</p>
    <p>H IP</p>
    <p>E E</p>
    <p>P R</p>
    <p>O M</p>
    <p>( N</p>
    <p>O T E : a n</p>
    <p>o n -v</p>
    <p>o la</p>
    <p>ti le</p>
    <p>m e m</p>
    <p>o ry</p>
    <p>i s a</p>
    <p>lr e a d y r</p>
    <p>e q u ir e d t o b</p>
    <p>o o t a n y S</p>
    <p>R A M</p>
    <p>F P G</p>
    <p>A f ro</p>
    <p>m c</p>
    <p>o ld</p>
    <p>s ta</p>
    <p>rt . .. t h is</p>
    <p>i s n</p>
    <p>o t a n a</p>
    <p>d d it io</p>
    <p>n a l c</p>
    <p>h ip</p>
    <p>)</p>
    <p>R ji</p>
    <p>L jii CEORC ,,j  =RS:</p>
    <p>(Hamming Distance)</p>
    <p>R ji</p>
    <p>L jii CEORC ,,j ^ =WTA:</p>
    <p>(Equivalence)</p>
  </div>
  <div class="page">
    <p>Terminology and Characteristics</p>
    <p>Pristine Pool: Pristine Pool: CP. For any CiC, is member of CP at generation G if and only if</p>
    <p>Suspect Pool:Suspect Pool: CS. For any CiC, is member of CS at generation G if and only if</p>
    <p>at least one of</p>
    <p>Under Repair Pool:Under Repair Pool: CU: For any CiC, is member of CU at generation G if and</p>
    <p>only if</p>
    <p>Refurbished Pool:Refurbished Pool: CR: after Genetic Operator applied, the new generated individual is member of CR at generation G if and only if</p>
    <p>G</p>
    <p>K</p>
    <p>R K</p>
    <p>L K CC</p>
    <p>)1(0 GKCC RK L K</p>
    <p>G</p>
    <p>K</p>
    <p>R K</p>
    <p>L K CC</p>
    <p>G</p>
    <p>K</p>
    <p>R K</p>
    <p>L K CC</p>
    <p>ED is Discrepancy CountDiscrepancy Count of Ci and E C is Correctness CountCorrectness Count of Ci</p>
    <p>Length of Evaluation Fitness Window:Length of Evaluation Fitness Window: W = ED+ EC</p>
    <p>Fitness Metric:Fitness Metric: f(Ci) =E C/ EW</p>
  </div>
  <div class="page">
    <p>e.g. size |P|/2 to designate physical FPGA left-half or right-half resource utilization</p>
    <p>bitwise agreement between each halfs output</p>
    <p>Four Fitness States defined for Configurations as {CP,CS,CU,CR} with transitions, respectively:</p>
    <p>Pristine Suspect Under Repair Refurbished</p>
    <p>Fitness Evaluation Window W determines comparison interval</p>
    <p>Operators only applied once then offspring returned to service without for concern about increasing fitness</p>
    <p>Sketch of CRR Approach Premise: Recovery Complexity &lt;&lt; Design Complexity</p>
    <p>fitness assessment viafitness assessment via</p>
    <p>pairwise discrepancypairwise discrepancy (temporal voting vs. (temporal voting vs.</p>
    <p>spatial voting)spatial voting)</p>
  </div>
  <div class="page">
    <p>States Transitions during lifetime of iStates Transitions during lifetime of ithth Half-Configuration Half-Configuration</p>
    <p>Configuration Health States</p>
    <p>pristine</p>
    <p>suspec t</p>
    <p>refurbished</p>
    <p>under repair</p>
    <p>partial repair</p>
    <p>L R</p>
    <p>L = R</p>
    <p>complete repair</p>
    <p>primordial</p>
    <p>L = R</p>
    <p>L R</p>
    <p>L R</p>
    <p>L = R</p>
    <p>L = R</p>
    <p>LR</p>
    <p>fi fOT :</p>
    <p>L = R</p>
    <p>: fi fOT</p>
    <p>fi &lt; fRT</p>
    <p>L R :</p>
    <p>fi &lt; fRT</p>
    <p>L R :</p>
    <p>integral w ith</p>
    <p>: fi fRT</p>
    <p>: fi &lt; fOT</p>
    <p>C O M P E T I T I O N</p>
    <p>C O M P E T I T I O N</p>
    <p>E V O L U T I O N</p>
  </div>
  <div class="page">
    <p>Procedural Flow under Competitive Runtime Reconfiguration</p>
    <p>Initialization Population partitioned into</p>
    <p>functionally-identical yet physically-distinct half-configurations</p>
    <p>Fitness Adjustment</p>
    <p>update fitness of only L and R based on detection results</p>
    <p>either L's or R's fitness &lt; Repair</p>
    <p>Threshold?</p>
    <p>Selection choose</p>
    <p>FPGA configuration(s) labeled L and R</p>
    <p>Detection apply functional inputs</p>
    <p>to compute FPGA outputs using L, R</p>
    <p>Adjust Controls detection mode, overlap interval, ...</p>
    <p>invoke</p>
    <p>Genetic Operators only once</p>
    <p>and only on L or R</p>
    <p>L=R</p>
    <p>L=R</p>
    <p>PRIMARY LOOP</p>
    <p>discrepancy free</p>
    <p>L, R results</p>
    <p>NO</p>
    <p>YES</p>
    <p>is</p>
    <p>Integrates all fault handling stages using EC strategyIntegrates all fault handling stages using EC strategy  Detects faults by the occurrence of discrepancy  Isolates faults by accumulation of discrepancies  Failure-specific refurbishment using Genetic Operators:</p>
    <p>Intra-Module-Crossover, Inter-Module-Crossover, Intra-Module-Mutation</p>
    <p>Realize online device refurbishmentRealize online device refurbishment  Refurbished online without additional function or resource test vectors  Repair during the normal data throughput process</p>
  </div>
  <div class="page">
    <p>Selection Process</p>
    <p>Any Pristine individuals?</p>
    <p>Any Suspect individuals?</p>
    <p>Select* one Pristine individual as L half-configuration</p>
    <p>Choose random number X on [0..1]</p>
    <p>X &gt; Re-introduction</p>
    <p>rate?</p>
    <p>YES</p>
    <p>YES</p>
    <p>YES</p>
    <p>NO</p>
    <p>NO</p>
    <p>NO</p>
    <p>* = selection that favors inventory rotation</p>
    <p>**= selection based on fitness ranking that favors correctness</p>
    <p>*** = selection based on fitness ranking that favors correctness with optional second-order metric such as routing delay (to automatically evolve better throughput performance at no additional cost)</p>
    <p>Select** one Suspect individual as L half-configuration</p>
    <p>Select*** one Refurbished individual as L half-configuration</p>
    <p>Select*** one Under Repair individual as R half-configuration</p>
    <p>Select one Operational (Pristine*, Suspect**, or Refurbished***)</p>
    <p>individual as R half-configuration</p>
    <p>goto Detection process</p>
    <p>X &gt; R</p>
  </div>
  <div class="page">
    <p>Fitness Adjustment Procedure</p>
    <p>Discrepancy?</p>
    <p>Increase L's &amp; R's fitness according to fitness up-adjustment process</p>
    <p>Decrease L's &amp; R 's fitness according to fitness down-adjustment process</p>
    <p>Is the individual Pristine?</p>
    <p>Mark individual as Suspect</p>
    <p>Is its fitness &lt; Repair</p>
    <p>Threshold?</p>
    <p>YES</p>
    <p>YES</p>
    <p>NO</p>
    <p>YES</p>
    <p>NO</p>
    <p>YES</p>
    <p>Mark individual as Under Repair</p>
    <p>Invoke Genetic Operators only once and only on L or RMark individual as Refurbished</p>
    <p>Is individual Under</p>
    <p>Repair?</p>
    <p>Is its fitness &gt; Operational</p>
    <p>Threshold?</p>
    <p>YES</p>
    <p>adjust controls &amp; goto Selection process</p>
    <p>fL,R&gt;fOT</p>
    <p>fL,R&lt;fRT</p>
  </div>
  <div class="page">
    <p>Fitness Evaluation Window</p>
    <p>Fitness Evaluation WindowFitness Evaluation Window: W  denotes number of iterations used to evaluate fitness before the state of</p>
    <p>an individual is determined</p>
    <p>Determination ofDetermination of W for 3x3 multiplierfor 3x3 multiplier  6 input pins articulating 26=64 possible inputs  W should be selected so that all possible inputs appear  More formally,</p>
    <p>Let rand(X) return some xi  X at random</p>
    <p>Seek W : [  rand(X) ] = X with high probability i=1</p>
    <p>W</p>
    <p>..... 1</p>
    <p>m</p>
    <p>K</p>
    <p>m</p>
    <p>KK</p>
    <p>D KK</p>
    <p>P m</p>
    <p>K</p>
    <p>x K</p>
    <p>P K</p>
    <p>P K</p>
    <p>K P</p>
    <p>K</p>
    <p>K</p>
    <p>Kx K</p>
    <p>x K</p>
    <p>x K</p>
    <p>K x</p>
    <p>K</p>
    <p>K xK = distinct orderings of K inputs showing in D trials</p>
    <p>if D constant, can calculate Pk&gt;1 successively</p>
    <p>probability PK of K inputs showing after D trials is ratio of xK / K</p>
    <p>D</p>
  </div>
  <div class="page">
    <p>When K=64:</p>
    <p>W Determination</p>
  </div>
  <div class="page">
    <p>Impact of Fault on Viable Individuals</p>
    <p>Existence of Positive Test VectorExistence of Positive Test Vector  Input Ip comprises a articulating test iff Ci(Ip)  Cji(Ip) = 1  So if a discrepancy is detected then some Ip exists which manifests the fault</p>
    <p>Minimal Case whenMinimal Case when Ip is Uniqueis Unique</p>
    <p>Ip is unique if fault is observable under exactly one input pattern</p>
    <p>Probability Mass Function for Encountering Minimal CaseProbability Mass Function for Encountering Minimal Case Ip  Consider W=600 yielding 99.5% coverage for a module with input space X=64</p>
    <p>The number of input occurrences, 0  i  600, that randomly encounter Ip to</p>
    <p>identify the fault is governed by the probability density function:</p>
    <p>p.m.f. = where</p>
    <p>W</p>
    <p>iW</p>
    <p>X</p>
    <p>nX</p>
    <p>i</p>
    <p>W</p>
  </div>
  <div class="page">
    <p>Integer Multiplier Case Study</p>
    <p>3bit x 3bit unsigned multiplier3bit x 3bit unsigned multiplier automated design:esign:  Building blocks</p>
    <p>Half-Adder: 18 templates created  Full-Adder: 24 templates  Parallel-And : 1 template created</p>
    <p>Randomly select templates for instantiation in modules</p>
    <p>GA operatorsGA operators External-Module-Crossover Internal-Module-Crossover Internal-Module-Mutation</p>
    <p>GA parametersGA parameters Population size : 20 individuals Crossover rate : 5% Mutation rate : up to 80% per bit</p>
    <p>Experimental EvaluationExperimental Evaluation Xilinx Virtex II Pro on Avnet PCI board</p>
    <p>Objective fitness function replaced by Objective fitness function replaced by the Consensus-based Evaluation the Consensus-based Evaluation Approach and Relative FitnessApproach and Relative Fitness</p>
    <p>Elimination of additional test vectorsElimination of additional test vectors  Temporal Assessment processTemporal Assessment process</p>
    <p>Experiments Demonstrate Experiments Demonstrate</p>
  </div>
  <div class="page">
    <p>Template Fault Coverage</p>
    <p>Half-Adder Template A</p>
    <p>Half-Adder Template B</p>
    <p>Template ATemplate A  Gate3 is an AND gate  Will lose correctness if a Stuck-At-Zero fault occurs in second</p>
    <p>input line of the Gate3, an AND gate</p>
    <p>Template BTemplate B  Gate3 is a NOT gate and only uses the first input line  Will work correctly even if second input line is stuck at Zero or</p>
    <p>One</p>
    <p>Half-Adder Template A</p>
  </div>
  <div class="page">
    <p>Regeneration PerformanceRegeneration Performance</p>
    <p>Difference (vs. Hamming Distance) Evaluation Window, Ew = 600 Suspect Threshold: S = 1-6/600=99% Repair Threshold: R = 1-4/600 = 99.3% Re-introduction rate: r = 0.1</p>
    <p>ParametersParameters:</p>
    <p>Repairs evolvedRepairs evolved in-situ, in real-time, without additional test in-situ, in real-time, without additional test vectors, vectors, while allowing device to remainwhile allowing device to remain partially online. partially online.</p>
  </div>
  <div class="page">
    <p>Discrepancy Mirror</p>
    <p>Fault CoverageFault Coverage</p>
    <p>Mechanism for Checking-the-Checker (golden element problem)</p>
    <p>Makes checker part of configuration that competes for correctness [DeMara PDPTA-05]</p>
  </div>
  <div class="page">
    <p>Discrepancy Mirror Circuit</p>
    <p>Fault CoverageFault Coverage Component Fault Scenarios Fault-Free</p>
    <p>Function Output A Fault Correct Correct Correct Correct</p>
    <p>Function Output B Correct Fault Correct Correct Correct</p>
    <p>XNORA Disagree (0) Disagree (0) Fault : Disagree(0) Agree (1) Agree (1)</p>
    <p>XNORB Disagree (0) Disagree (0) Agree (1) Fault : Disagree(0) Agree (1)</p>
    <p>BufferA 0 0 High-Z 0 1</p>
    <p>BufferB 0 0 0 High-Z 1</p>
    <p>Match Output 0 0 0 0 1</p>
  </div>
  <div class="page">
    <p>Influence of LUT utilizationInfluence of LUT utilization</p>
    <p>Perpetually Articulating InputsPerpetually Articulating Inputs with Equiprobable Distributionwith Equiprobable Distribution</p>
    <p>Intermittently Articulating InputsIntermittently Articulating Inputs with Equiprobable Distributionwith Equiprobable Distribution</p>
    <p>expected number of pairings grows sub-linearly in number of resources</p>
    <p>utilization below 20% or above 80% implicates (or exonerates) a smaller sub-set of resources</p>
    <p>50% utilization, the expected number of pairings for 1,000, 10,000, and 100,000 resources are 11.1, 14.9, and 17.6</p>
    <p>at 90% utilization mean value of 258 pairings are required to isolate the faulty resource.</p>
  </div>
  <div class="page">
    <p>Future Work: Development Board to Self-Contained FPGA</p>
    <p>Year 1 Year 3Year 2</p>
    <p>CRR on a Chip (Xilinx Virtex-II Pro)</p>
    <p>Control via on-chip</p>
    <p>Power PC</p>
    <p>Reconfig</p>
    <p>C o n f i g</p>
    <p>D a t a</p>
    <p>Configurations in On Chip RAM Blocks</p>
    <p>Functional CLBs</p>
    <p>ICAP</p>
    <p>Bit file</p>
    <p>D a t a</p>
    <p>O u t p u t</p>
    <p>R e q u e s t</p>
    <p>Avnet FPGA Development Board</p>
    <p>PCI Interface</p>
    <p>Virtex-II Pro FPGA</p>
    <p>Off Chip RAM</p>
    <p>Control hosted on</p>
    <p>PC O u t p u t</p>
    <p>B i t f i l e</p>
    <p>I n p u t D a t a</p>
    <p>CRR on a Chip (Xilinx Virtex-II Pro)</p>
    <p>Device Fault</p>
    <p>Qualitative Analysis of CRR modelQualitative Analysis of CRR model  Number of iterations and completeness of regeneration repair  Percentage of time the device remains online despite physical resource</p>
    <p>fault (availability) Hardware Resource ManagementHardware Resource Management</p>
    <p>Optimization of hardware profile for Xilinx Virtex II Pro Field Testing on SRAM-based FPGA in a Cubesat missionField Testing on SRAM-based FPGA in a Cubesat mission</p>
  </div>
  <div class="page">
    <p>Backup Slides</p>
    <p>On following pages</p>
  </div>
  <div class="page">
    <p>Isolation: Block Duelling</p>
    <p>Algorithm based on group testingAlgorithm based on group testing methodsmethods  Successive intersection to assess health of resourcesSuccessive intersection to assess health of resources</p>
    <p>Each configuration kk has a binary Usage Matrix UUk[i,j][i,j] 1  i  m and 1  j  n  m, n are the number of rows and columns of resources in the device  Elements Uk[i,j] = 1 are resources used in k</p>
    <p>History Matrix H H [i,j][i,j] 1  i  m and 1  j  n, initially all zero, exists in which :  entries represent the fitness of resources (i, j)  Information regarding the fitness of resources over time is stored</p>
    <p>A discrepant output will lead to an increase in the value of H[i,j],  Uk[i,j] = 1 ,k  S</p>
    <p>All elements of H, corresponding to resources used by discrepant configuration will be incremented by one.</p>
    <p>At any point in time, H[i,j] will be a record the outcomes of competitions  m successive intersections among are performed</p>
    <p>until |S|=1</p>
  </div>
  <div class="page">
    <p>Dueling Example</p>
    <p>H H [i,j][i,j] @ t = 0</p>
    <p>H H [i,j][i,j] @ t = 2</p>
    <p>UU11 UU22</p>
    <p>H H [i,j] changes after [i,j] changes after CC1 1 andand C C2 2 are loadedare loaded  UU11 and and UU22 are corresponding are corresponding Usage MatricesUsage Matrices</p>
    <p>(3,3) is identified as the faulty resource(3,3) is identified as the faulty resource</p>
    <p>Fitness of configuration Fitness of configuration kk</p>
    <p>k</p>
    <p>k</p>
  </div>
  <div class="page">
    <p>Isolation of a single faulty individual with 1-out-of-64 impact</p>
    <p>Outliers are identified after W iterations elapsed  E.V. = (1/64)*600 = 9.375 from minimum impact faulty individual  Isolated individuals f differs from the average DV by 33 after 1 or more observation intervals of length W</p>
  </div>
  <div class="page">
    <p>Isolation of a single faulty L individual with 10-out-of-64 impact</p>
    <p>Compare with 1-out-of-64 fault impact  E.V. of (10/64)*600 = 93.75 discrepancies for faulty configuration  One isolation will be complete approx. once in every 93.75/5 = 19 Observation Intervals  Fault Isolation demonstrated in 100% of case</p>
  </div>
  <div class="page">
    <p>Isolation of 8 faulty individuals L4&amp;R4 with 1-out-of-64 impact</p>
    <p>Expected isolations do not occur approximately 40% of the time  Average discrepancy value of the population is higher  Outlier isolation difficult  Multiple faulty individual, Discrepancies scattered</p>
  </div>
  <div class="page">
    <p>Online Dueling Evaluation</p>
    <p>ObjectiveObjective  Isolate faults by successive intersection between sets of FPGA</p>
    <p>resources used by configurations  Analyze complexity of Isolation process</p>
    <p>VariablesVariables  Total resources available</p>
    <p>Measured in number of LUTs  Number of Competing Configurations</p>
    <p>Number of initial Seed designs in CRR process  Degree of Articulation</p>
    <p>Some inputs may not manifest faults, even if faulty resource used by individual</p>
    <p>Resource Utilization Factor  Percentage of FPGA resources required by target application/design</p>
    <p>Number of Iterations for Isolation  Measure of complexity and time involved in isolating fault</p>
  </div>
  <div class="page">
    <p>Isolation of Faulty Resource at the FPGA resource (LUT) granularity</p>
    <p>50625 LUTs50625 LUTs comparable to LUTs on a Xilinx Virtex II Pro FPGAXilinx Virtex II Pro FPGA  Xilinx Virtex II Pro has approximately</p>
    <p>67 columns, 78 rows  4 slices per CLB  2 LUTs per slice</p>
  </div>
  <div class="page">
    <p>Isolation of Faulty Resource: Effect of Articulation</p>
    <p>No direct, uniform relation between % Articulation and Number of Isolations!  Performance best when Articulation (%) = 50% 50%  10% 10%</p>
    <p>Each successive intersection provides maximal information  Greatest number of resources are intersected out of suspect pool.</p>
  </div>
  <div class="page">
    <p>For further info  EH Website http://cal.ucf.edu</p>
  </div>
  <div class="page">
    <p>Fast Reconfiguration for Fast Reconfiguration for Autonomously Reprogrammable LogicAutonomously Reprogrammable Logic</p>
    <p>MotivationMotivation  Dynamic reconfiguration required by application  Exploit architectural &amp; performance improvements fully  Reconfiguration delay  a major performance barrier</p>
    <p>Previous WorkPrevious Work  MethodologyMethodology</p>
    <p>Multilayer Runtime Reconfiguration Architecture (MRRA)  Spatial Management</p>
    <p>Prototype DevelopmentPrototype Development  Loosely-Coupled solution  Timing Analysis  System-On-Chip solution</p>
  </div>
  <div class="page">
    <p>Reconfiguration Demand during CRRReconfiguration Demand during CRR</p>
    <p>For a complete repairFor a complete repair  Approximately 2,000 generations ( ) may be required  For each generation, # evaluations may be up to 100 evaluations  Yielding the Cumulative Number of Reconfigurations (CNR) up to</p>
    <p>For each reconfiguration task )()()( iTiTiTL EDRTTATi</p>
    <p>CNR</p>
    <p>i itot LL</p>
    <p>Even if reconfiguration delay alone is assumed to be in the order of tens or hundreds of milliseconds  Ltot &gt;= 5.5 hours</p>
    <p>Therefore, the total delay</p>
    <p>CRG</p>
    <p>newO</p>
  </div>
  <div class="page">
    <p>Previous Work - Tool LevelPrevious Work - Tool Level</p>
    <p>Approach FPGA</p>
    <p>Supported On-chip System</p>
    <p>Bit Stream Reuse</p>
    <p>System Coupling Degree</p>
    <p>Potential Limitations</p>
    <p>Moraes, Mesquita,</p>
    <p>Palma, Moller</p>
    <p>Virtex XCV300 devices</p>
    <p>No N Loose Lack of Area Relocation Capability</p>
    <p>Raghavan, Sutton</p>
    <p>Xilinx Virtex</p>
    <p>devices No N Loose</p>
    <p>Cumbersome CAD flow</p>
    <p>Blodget, McMillan</p>
    <p>Virtex II devices</p>
    <p>Partial Y Medium</p>
    <p>Limited hardware speed and capacity. Lack of</p>
    <p>information for bit stream</p>
    <p>reuse</p>
  </div>
  <div class="page">
    <p>Previous Work - Algorithm LevelPrevious Work - Algorithm Level</p>
    <p>Approach Method Partial</p>
    <p>Reconfig Spatial</p>
    <p>Relocation Temporal</p>
    <p>Parallelism Area</p>
    <p>shape RunTime</p>
    <p>Potential Limitations</p>
    <p>Hauck, Li, Schwabe</p>
    <p>Bit file compression</p>
    <p>N/A No N/A N/A No Full</p>
    <p>reconfiguratio n required</p>
    <p>Shirazi, Luk, Cheung</p>
    <p>Identifying common</p>
    <p>components Yes No Yes N/A No</p>
    <p>Design time work required</p>
    <p>Mak, Young Dynamic</p>
    <p>Partitioning Yes No Yes N/A Yes</p>
    <p>Only desirable for large designs</p>
    <p>Ganesan, Vemuri</p>
    <p>Pipelining Yes No Yes N/A Yes Limited</p>
    <p>pipeline depth</p>
    <p>Compton, Li, Knol, Hauck</p>
    <p>Relocation and Defragmentatio</p>
    <p>n with new FPGA</p>
    <p>architecture</p>
    <p>Yes Yes No Row-based Yes Special FPGA architecture</p>
    <p>required</p>
    <p>Diessel, Middendorf Schmeck, Schmidt</p>
    <p>Task Remapped and Relocated</p>
    <p>Yes Yes No Rectangle Yes Overhead for remapping</p>
    <p>calculations</p>
    <p>Herbert, Christoph,</p>
    <p>Macro</p>
    <p>Partitioning and 2D Hashing</p>
    <p>Yes Yes Yes Rectangle Yes Rigid task modeling</p>
    <p>assumptions</p>
    <p>compression method temporal method spatial method</p>
  </div>
  <div class="page">
    <p>Multilayer Runtime Reconfiguration Architecture Multilayer Runtime Reconfiguration Architecture</p>
    <p>(MRRA)(MRRA)</p>
    <p>Fault-Repair Genetic Algorithm</p>
    <p>Reconfiguration EngineM</p>
    <p>ic ro</p>
    <p>p ro</p>
    <p>c e s s o r</p>
    <p>System Bus</p>
    <p>Virtex-II Pro FPGA</p>
    <p>RAM C</p>
    <p>o n tro</p>
    <p>l S y s te</p>
    <p>m</p>
    <p>Develop MRRA fast Develop MRRA fast reconfiguration paradigm for the reconfiguration paradigm for the CRR approachCRR approach</p>
    <p>Validate with real hardware Validate with real hardware platform along with detailed platform along with detailed performance analysis performance analysis</p>
    <p>First general-purpose framework First general-purpose framework for a wide variety of applications for a wide variety of applications requiring dynamic reconfiguration requiring dynamic reconfiguration</p>
    <p>Extend existing theories on Extend existing theories on reconfiguration reconfiguration</p>
  </div>
  <div class="page">
    <p>Avnet FPGA Development Board</p>
    <p>PCI I nt er f ace</p>
    <p>Virtex-II Pro FPGA</p>
    <p>Off Chip RAM</p>
    <p>Control hosted on</p>
    <p>PC</p>
    <p>F P</p>
    <p>G A</p>
    <p>O u t</p>
    <p>p u</p>
    <p>t</p>
    <p>B i t f i l e</p>
    <p>I n p u t D a t a</p>
    <p>Loosely Coupled SolutionLoosely Coupled Solution</p>
    <p>The entire system operates on a The entire system operates on a 32-bit basis32-bit basis</p>
    <p>The The Virtex-II ProVirtex-II Pro is mounted on a is mounted on a development board which can then development board which can then</p>
    <p>be interfaced with a WorkStation be interfaced with a WorkStation running running XilinxXilinx EDK and ISE. EDK and ISE.</p>
  </div>
  <div class="page">
    <p>Result AssessmentResult Assessment</p>
    <p>Establish full functional framework of both prototypesEstablish full functional framework of both prototypes</p>
    <p>Communication overhead, throughput and overall speed-up Communication overhead, throughput and overall speed-up</p>
    <p>analysisanalysis  Communication overhead for SOC solution is decreased to micro or sub</p>
    <p>micro second order Vs. milliseconds order of Loosely Coupled solution</p>
    <p>Up to 5-fold speedup is expected compared to the Loosely Coupled solution</p>
    <p>Translation Complexity AnalysisTranslation Complexity Analysis  The quantity of information that needs to be translated to generate the</p>
    <p>reconfiguration bitstream</p>
    <p>Simplification from file level to bit level is expected</p>
    <p>Storage Complexity AnalysisStorage Complexity Analysis  The memory space required for the run-time algorithms  Decreased memory requirement is expected due to the translation</p>
    <p>complexity improvement</p>
  </div>
  <div class="page">
    <p>Project Milestones</p>
    <p>Nov 2004</p>
    <p>Start</p>
    <p>Jan 2005</p>
    <p>Mar 2005</p>
    <p>May 2005</p>
    <p>Jul 2005</p>
    <p>Sep 2005</p>
    <p>Nov 2005</p>
    <p>Jan 2006</p>
    <p>Mar 2006</p>
    <p>May 2006</p>
    <p>Jul 2006</p>
    <p>Sep 2006</p>
    <p>Nov 2006</p>
    <p>Jan 2007</p>
    <p>Mar 2007</p>
    <p>Jul 2007</p>
    <p>API &amp; SEC</p>
    <p>circuit</p>
    <p>Scripts GA representation for prototype 1</p>
    <p>Performance analysis for prototype 1</p>
    <p>on 3*3 multiplier</p>
    <p>OS for the</p>
    <p>SOC</p>
    <p>ICAP circuit</p>
    <p>Reconfig. Peformance</p>
    <p>Report</p>
    <p>SOC Final</p>
    <p>Report</p>
    <p>Performance analysis for</p>
    <p>prototype 1 on Quad Decoder</p>
    <p>circuit</p>
    <p>HWHW Schedule:Schedule:</p>
    <p>SW Schedule:SW Schedule: Nov 2004</p>
    <p>Start</p>
    <p>Jan 2005</p>
    <p>Mar 2005</p>
    <p>May 2005</p>
    <p>Jul 2005</p>
    <p>Sep 2005</p>
    <p>Nov 2005</p>
    <p>Jan 2006</p>
    <p>Mar 2006</p>
    <p>May 2006</p>
    <p>Jul 2006</p>
    <p>Sep 2006</p>
    <p>Nov 2006</p>
    <p>Jan 2007</p>
    <p>Mar 2007</p>
    <p>Jul 2007</p>
    <p>Evaluate CRR Parameters in 3x3 multiplier</p>
    <p>design</p>
    <p>Design GUI of 3X3</p>
    <p>multiplier</p>
    <p>Build VHDL module and</p>
    <p>incorporate into the hardware</p>
    <p>prototype</p>
    <p>FPGAresident</p>
    <p>CRR</p>
    <p>Implement the SEC circuit design</p>
    <p>Optimized Parameters for layered comb/seq designs</p>
    <p>Regen. Final</p>
    <p>Report</p>
    <p>Performance analysis for</p>
    <p>prototype 1 on Quad Decoder</p>
    <p>circuit</p>
  </div>
  <div class="page">
    <p>Publications</p>
    <p>AcceptedAccepted ManuscriptsManuscripts 1. R. F. DeMara and K. Zhang, Autonomous FPGA Fault Handling through Competitive Runtime</p>
    <p>Reconfiguration, to appear in NASA/DoD Conference on Evolvable Hardware(EH05), Washington D.C., U.S.A., June 29  July 1, 2005.</p>
    <p>SubmittedSubmitted ManuscriptsManuscripts 1. R. F. DeMara and K. Zhang, Populational Fault Tolerance Analysis Under CRR Approach,</p>
    <p>submitted to International Conference on Evolvable Systems (ICES05), Barcelona, Sept. 12  14, 2005.</p>
    <p>Manuscripts In-preparationManuscripts In-preparation 1. R. F. DeMara and K. Zhang, Autonomous Fault Occlusion through Competitive Runtime</p>
    <p>Reconfiguration, submission planned to IEEE Transactions on Evolutionary Computation.</p>
    <p>Field TestingField Testing Implementation of CRR on-board SRAM-based FPGA in a Cubesat mission</p>
  </div>
  <div class="page">
    <p>EHW Environments</p>
    <p>Evolvable Hardware (EHW) Environments enable experimental methods to research soft computing intelligent search techniques</p>
    <p>EHW operates by repetitive reprogramming of real-world physical devices using an iterative refinement process:</p>
    <p>Genetic</p>
    <p>Algorithm</p>
    <p>Hardware in the loop</p>
    <p>or Two</p>
    <p>modes</p>
    <p>of</p>
    <p>Evolvabl</p>
    <p>e</p>
    <p>Hardwar</p>
    <p>e</p>
    <p>Extrinsic Evolution</p>
    <p>Genetic</p>
    <p>Algorithm</p>
    <p>software model Done? Build it</p>
    <p>device design-time refinement</p>
    <p>Simulation in the loop</p>
    <p>Intrinsic Evolution</p>
    <p>device run-time refinement</p>
    <p>new approach to</p>
    <p>Autonomous Repair of failed devices</p>
    <p>Stardust Satellite:  &gt;100 FPGAs onboard  hostile environment: radiation, thermal stress  How to achieve reliability to avoid mission failure???</p>
    <p>Applic ation</p>
  </div>
  <div class="page">
    <p>Genetic Algorithms (GAs)</p>
    <p>Mechanism coarsely modeled after neo-Darwinism (natural selection + genetics)</p>
    <p>selection of</p>
    <p>parents</p>
    <p>population of candidate solutions</p>
    <p>parents</p>
    <p>offspring</p>
    <p>crossover</p>
    <p>mutation</p>
    <p>evaluate fitness</p>
    <p>of individuals</p>
    <p>replacement</p>
    <p>start</p>
    <p>Fitness function</p>
    <p>Goal reached</p>
  </div>
  <div class="page">
    <p>Genetic Mechanisms</p>
    <p>Guided trial-and-error search techniques using principles of Darwinian evolution  iterative selection, survival of the fittest  genetic operators -- mutation, crossover,   implementor must define fitness function</p>
    <p>GAs frequently use strings of 1s and 0s to represent candidate solutions  if 100101 is better than 010001 it will have more chance to breed and</p>
    <p>influence future population</p>
    <p>GAs cast a net over entire solution space to find regions of high fitness</p>
    <p>Can invoke Elitism Operator (E=1, E=2 )  guarantees monotonically increasing fitness of best individual over all</p>
    <p>generations</p>
  </div>
  <div class="page">
    <p>Commercial Applications:  Nextel: frequency allocation for cellular phone networks -- $15M</p>
    <p>predicted savings in NY market  Pratt &amp; Whitney: turbine engine design --- engineer: 8 weeks;</p>
    <p>GA: 2 days w/3x improvement</p>
    <p>International Truck: production scheduling improved by 90% in 5 plants</p>
    <p>NASA: superior Jupiter trajectory optimization, antennas, FPGAs</p>
    <p>Koza: 25 instances showing human-competitive performance such as analog circuit design, amplifiers, filters</p>
    <p>GA Success Stories</p>
  </div>
  <div class="page">
    <p>Representing Candidate Solutions</p>
    <p>IndividualIndividual (Chromosome)(Chromosome)</p>
    <p>GENEGENE</p>
    <p>Representation of an individual can be using discrete values (binary, integer, or any other system with a discrete set of values)</p>
    <p>Example of Binary DNA Encoding:</p>
  </div>
  <div class="page">
    <p>Genetic Operators</p>
    <p>t t + 1</p>
    <p>mutation</p>
    <p>recombination (crossover)</p>
    <p>reproduction</p>
    <p>selection</p>
  </div>
  <div class="page">
    <p>Crossover Operator</p>
    <p>Population: . . .</p>
  </div>
</Presentation>
