<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Facility Location with Service Installation</p>
    <p>Costs</p>
    <p>Chaitanya Swamy</p>
    <p>Joint work with David Shmoys and Retsef Levi</p>
    <p>Cornell University</p>
  </div>
  <div class="page">
    <p>Facility Location</p>
    <p>F : set of facilities. D : set of clients.</p>
    <p>Facility i has facility cost fi.</p>
    <p>cij : distance between points i and j.</p>
    <p>client</p>
    <p>facility</p>
  </div>
  <div class="page">
    <p>Facility Location with Services</p>
    <p>F : set of facilities. D : set of clients. S : set of services={tan, green,</p>
    <p>pink}.</p>
    <p>Facility i has facility cost fi.</p>
    <p>cij : distance between points i and j.</p>
    <p>Client j requires service s(j). fi,s : cost of installing service s at</p>
    <p>fac. i.</p>
    <p>facility</p>
    <p>client</p>
    <p>services</p>
  </div>
  <div class="page">
    <p>We want to:</p>
    <p>Cost = iA fi + iA, sS(i) fi,s + jD ci(j)j</p>
    <p>= facility opening cost + service installation cost + client assignment cost</p>
    <p>facility</p>
    <p>client</p>
    <p>services</p>
    <p>open facility</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Only one service  uncapacitated facility location  LP rounding: Shmoys, Tardos &amp; Aardal;</p>
    <p>Chudak &amp; Shmoys; Sviridenko.</p>
    <p>Primal-dual algorithms: Jain &amp; Vazirani; Jain, Mahdian, Markakis, Saberi &amp; Vazirani.</p>
    <p>Best approx. - Mahdian, Ye &amp; Zhang: 1.52</p>
    <p>Baev &amp; Rajaraman consider related caching problem: No facility costs, capacity on the number of services that may be installed at a facility. Gave a 20.5-approx. algorithm, improved to 10 by (S).</p>
    <p>Ravi &amp; Sinha consider similar model  multicommodity facility location. Give a log(|S|)-approx. algorithm.</p>
  </div>
  <div class="page">
    <p>Our Results</p>
    <p>Give a 6-approx. primal-dual algorithm. Assume facilities can be ordered s.t. if i  i, then fi,s  fi,s for all services s. Special cases:  fi,s = hs  depends only on s  fi,s = gi  depends only on i</p>
    <p>General problem is set-cover hard.</p>
    <p>When fi,s = hs primal-dual gives a 5-approx. Improve ratio to 2.391 using LP rounding.</p>
    <p>Consider k-median variant: give a 11.6-approx. when fi,s = hs using primal-dual+Lagrangian relaxation.</p>
  </div>
  <div class="page">
    <p>LP formulation</p>
    <p>Minimize i fiyi+i,s fi,syi,s+j,i cijxij</p>
    <p>(Primal)</p>
    <p>subject toi xij  1 j</p>
    <p>xij  yi,s(j) i, j</p>
    <p>xij  yi i, j</p>
    <p>xij, yi  0 i, j</p>
    <p>yi : indicates if facility i is open.</p>
    <p>yi,s : indicates if service s is installed on facility i.</p>
    <p>xij : indicates if client j is assigned to facility i.</p>
    <p>s(j) : service required by j.</p>
  </div>
  <div class="page">
    <p>i,jD(s) zij  fi,s i, s</p>
    <p>The Dual</p>
    <p>D(s) = clients requiring service s</p>
    <p>i,j wij  fi i</p>
    <p>cij</p>
    <p>zij</p>
    <p>wij</p>
    <p>vj, wij, zij  0 i, j</p>
    <p>Maximize j vj</p>
    <p>subject tovj  cij + wij + zij i, j</p>
    <p>vj</p>
    <p>j</p>
  </div>
  <div class="page">
    <p>Algorithm Outline</p>
    <p>Based on the primal-dual method.</p>
    <p>Any feasible dual solution is a lower bound on OPT - Weak Duality.1) Construct primal solution and</p>
    <p>dual solution simultaneously.</p>
    <p>Algorithm strongly motivated by the Jain-Vazirani algorithm.</p>
    <p>Notion of time, t. Initially, t=0, all dual variables vj, zij, wij are 0. No facility is open, no service is installed.</p>
  </div>
  <div class="page">
    <p>fd,s = 2 for all services s.</p>
    <p>fc,green = 2.</p>
    <p>t=0</p>
    <p>unfrozen client</p>
    <p>not open facility</p>
    <p>a</p>
    <p>c</p>
    <p>d</p>
    <p>b</p>
  </div>
  <div class="page">
    <p>Raise all vj at rate 1.</p>
    <p>t=0</p>
    <p>unfrozen client</p>
    <p>not open facility</p>
    <p>a</p>
    <p>c</p>
    <p>d</p>
    <p>b</p>
  </div>
  <div class="page">
    <p>t=1</p>
    <p>unfrozen client</p>
    <p>not open facility</p>
    <p>fd,s = 2 for all services s.</p>
    <p>fc,green = 2.</p>
  </div>
  <div class="page">
    <p>t=2</p>
    <p>unfrozen client</p>
    <p>not open facility</p>
    <p>fd,s = 2 for all services s.</p>
    <p>fc,green = 2.</p>
    <p>If vj  cij say that j is tight with i.</p>
    <p>j becomes tight with i and s(j) is not installed on i: start increasing zij.</p>
  </div>
  <div class="page">
    <p>t=3</p>
    <p>unfrozen client</p>
    <p>not open facility</p>
    <p>fd,s = 2 for all services s.</p>
    <p>fc,green = 2.</p>
    <p>For some i, service s, i,jD(s) zij = fi,s: tentatively install s on i, start raising wij for all j in D(s) tight with i.</p>
  </div>
  <div class="page">
    <p>unfrozen client</p>
    <p>not open facility</p>
    <p>t=4</p>
    <p>unfrozen client</p>
    <p>not open facility tentatively open facility</p>
    <p>frozen client</p>
    <p>fd,s = 2 for all services s.</p>
    <p>fc,green = 2.</p>
    <p>For some i, i,j wij = fi : tentatively open i, if j is tight with i and s(j) is tentatively installed at i, freeze j.</p>
  </div>
  <div class="page">
    <p>t=5</p>
    <p>unfrozen client</p>
    <p>not open facility tentatively open facility</p>
    <p>frozen client</p>
    <p>fd,s = 2 for all services s.</p>
    <p>fc,green = 2.</p>
    <p>When all demands are frozen, process stops.</p>
  </div>
  <div class="page">
    <p>The Primal-Dual process</p>
    <p>Keep raising all vj at rate 1 until:</p>
    <p>Now only raise vj of unfrozen demands. Continue until all demands are frozen.</p>
  </div>
  <div class="page">
    <p>Opening facilities</p>
    <p>a</p>
    <p>c</p>
    <p>d</p>
    <p>b</p>
    <p>X</p>
    <p>X</p>
    <p>Say i, i are dependent if there is client j s.t. wij, wij &gt; 0.</p>
    <p>Suppose O is a  b  c  d. Consider tentatively open facilities in this order, pick a maximal independent subset.</p>
    <p>Open all these facilities  call this set F.</p>
    <p>Let O: ordering on facilities.</p>
    <p>i tentatively open, not opened  there is i s.t. i  i and i, i are dependent.</p>
    <p>Denote i = nbr(i).</p>
  </div>
  <div class="page">
    <p>Installing services</p>
    <p>X</p>
    <p>X F = facilities opened.</p>
  </div>
  <div class="page">
    <p>X</p>
    <p>X</p>
    <p>Installing services</p>
    <p>Consider service s. Let Fs = tentatively open facilities where service s is tentatively installed.</p>
    <p>Say i, i are s-dependent if there is a client jD(s) s.t. zij, zij &gt; 0. Carefully pick a maximal independent set Fs  Fs.</p>
    <p>F = facilities opened.</p>
  </div>
  <div class="page">
    <p>X</p>
    <p>X</p>
    <p>Installing services</p>
    <p>For each i in Fs, if iF install service s on i, otherwise install s on nbr(i).</p>
    <p>F = facilities opened.</p>
    <p>Consider service s. Let Fs = tentatively open facilities where service s is tentatively installed.</p>
    <p>Say i, i are s-dependent if there is a client jD(s) s.t. zij, zij &gt; 0. Carefully pick a maximal independent set Fs  Fs.</p>
  </div>
  <div class="page">
    <p>Installing services</p>
    <p>For each i in Fs, if iF install service s on i, otherwise install s on nbr(i).</p>
    <p>F = facilities opened.</p>
    <p>Consider service s. Let Fs = tentatively open facilities where service s is tentatively installed.</p>
    <p>Say i, i are s-dependent if there is a client jD(s) s.t. zij, zij &gt; 0. Carefully pick a maximal independent set Fs  Fs.</p>
    <p>X</p>
    <p>X</p>
  </div>
  <div class="page">
    <p>Installing services</p>
    <p>For each i in Fs, if iF install service s on i, otherwise install s on nbr(i).</p>
    <p>F = facilities opened.</p>
    <p>Consider service s. Let Fs = tentatively open facilities where service s is tentatively installed.</p>
    <p>Say i, i are s-dependent if there is a client jD(s) s.t. zij, zij &gt; 0. Carefully pick a maximal independent set Fs  Fs.</p>
    <p>X</p>
    <p>X</p>
  </div>
  <div class="page">
    <p>Installing services</p>
    <p>F = facilities opened.</p>
    <p>For each i in Fs, if iF install service s on i, otherwise install s on nbr(i).</p>
    <p>Consider service s. Let Fs = tentatively open facilities where service s is tentatively installed.</p>
    <p>Say i, i are s-dependent if there is a client jD(s) s.t. zij, zij &gt; 0. Carefully pick a maximal independent set Fs  Fs.</p>
    <p>X</p>
    <p>X</p>
  </div>
  <div class="page">
    <p>X</p>
    <p>X</p>
    <p>Installing services</p>
    <p>For each i in Fs, if iF install service s on i, otherwise install s on nbr(i).</p>
    <p>F = facilities opened.</p>
    <p>Consider service s. Let Fs = tentatively open facilities where service s is tentatively installed.</p>
    <p>Say i, i are s-dependent if there is a client jD(s) s.t. zij, zij &gt; 0. Carefully pick a maximal independent set Fs  Fs.</p>
  </div>
  <div class="page">
    <p>X</p>
    <p>X</p>
    <p>Installing services</p>
    <p>For each i in Fs, if iF install service s on i, otherwise install s on nbr(i).</p>
    <p>F = facilities opened.</p>
    <p>Consider service s. Let Fs = tentatively open facilities where service s is tentatively installed.</p>
    <p>Say i, i are s-dependent if there is a client jD(s) s.t. zij, zij &gt; 0. Carefully pick a maximal independent set Fs  Fs.</p>
  </div>
  <div class="page">
    <p>Finally,</p>
    <p>Client j is assigned to the nearest open facility on which service s(j) is installed.</p>
  </div>
  <div class="page">
    <p>Analysis sketch</p>
    <p>Let D = {j: i in F s.t. wij &gt; 0}.</p>
    <p>Facility opening cost  jD vj.</p>
    <p>Service installation cost  j vj.</p>
    <p>Can show that the assignment cost of j is at most 3vj if jD and at most 5vj otherwise.</p>
  </div>
  <div class="page">
    <p>Analysis sketch</p>
    <p>Let D = {j: i in F s.t. wij &gt; 0}.</p>
    <p>Facility opening cost  jD vj.</p>
    <p>Service installation cost  j vj.</p>
    <p>Can show that the assignment cost of j is at most 3vj if jD and at most 5vj otherwise.</p>
    <p>Theorem: Total cost  6j vj  6OPT.</p>
  </div>
  <div class="page">
    <p>Thank You.</p>
  </div>
</Presentation>
