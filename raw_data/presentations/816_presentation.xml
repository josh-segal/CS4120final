<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Rivet: Browser-agnostic Remote Debugging for Web Applications</p>
    <p>James Mickens</p>
  </div>
  <div class="page">
    <p>JAVASCRIPT IS HORRENDOUS</p>
    <p>SO MANY BROWSERS</p>
    <p>MOBILE IS A HATEFUL ADJECTIVE</p>
    <p>THE NETWORK SCOFFS AT MORTAL DREAMS</p>
    <p>Web development is a miasma of pain and confusion.</p>
  </div>
  <div class="page">
    <p>Motivation: What Happens When Things Go Wrong?</p>
    <p>Built-in IE debugger</p>
    <p>Built-in FF debugger</p>
  </div>
  <div class="page">
    <p>Whats the problem with current browser debuggers?</p>
    <p>Cant examine real bugs in the wild, only local ones!</p>
    <p>Tied to one browser!</p>
  </div>
  <div class="page">
    <p>What Youd Like</p>
    <p>A browser-agnostic remote debugger for web applications.</p>
  </div>
  <div class="page">
    <p>Worst day ever</p>
  </div>
  <div class="page">
    <p>Rivet: Remote Debugging for Web Apps</p>
  </div>
  <div class="page">
    <p>Awesome! Rivet lets you remotely debug</p>
    <p>web pages!</p>
  </div>
  <div class="page">
    <p>Whats the technical challenge?</p>
  </div>
  <div class="page">
    <p>How do we pause a web page?</p>
    <p>How do we interactively traverse</p>
    <p>object graphs?</p>
    <p>How do we make a WAN debugging</p>
    <p>protocol efficient?</p>
    <p>How do we implement breakpoints?</p>
  </div>
  <div class="page">
    <p>Pausing A Single Frame</p>
    <p>Queued Events</p>
    <p>Event Loop</p>
    <p>Key Press</p>
    <p>KeyPressCallback()</p>
    <p>Ajax Data</p>
    <p>AjaxCallback()</p>
    <p>Mouse Click</p>
    <p>ClickCallback()</p>
  </div>
  <div class="page">
    <p>Pausing A Single Frame</p>
    <p>Event Loop</p>
    <p>Queued Events</p>
    <p>Key Press</p>
    <p>RivetCallback()</p>
    <p>Mouse Click</p>
    <p>ClickCallback()</p>
    <p>Mouse Click</p>
    <p>ClickCallback()</p>
    <p>Synchronous AJAX connection</p>
  </div>
  <div class="page">
    <p>Pausing a Multi-frame Web Page</p>
  </div>
  <div class="page">
    <p>PAUSE REQ</p>
    <p>llll</p>
    <p>ACK ll</p>
    <p>llll</p>
    <p>PAUSE REQ PAUSE REQ</p>
    <p>ACK</p>
  </div>
  <div class="page">
    <p>FROZ EN</p>
  </div>
  <div class="page">
    <p>Inspecting Object Graphs  JavaScript has a powerful</p>
    <p>reflection interface  An object is just a dictionary!  Globals are properties of special window object!</p>
    <p>Get f()s source via f.toString()!</p>
    <p>ll</p>
    <p>Paused App IDEDebug server Im paused! Session ready!</p>
    <p>Get globals.</p>
    <p>Values of globals.</p>
    <p>Expand X. Properties for X.</p>
    <p>No session . . .Attached to remote page!</p>
    <p>Name Value -------- -------+X object Y 42 Z red</p>
    <p>Name Value -------- --------X object foo false Y 42 Z red</p>
  </div>
  <div class="page">
    <p>All network traffic uses JSON  To make debugging protocol efficient:  Compress messages  Fetch object data on-demand</p>
    <p>Can use WER-style automated test scripts</p>
  </div>
  <div class="page">
    <p>Breakpoints</p>
    <p>function f(x){ return x + 42; }</p>
    <p>function f(x){ var dbgCmd,result; while(dbgCmd = Rivet.getDbgCmd(result)){ result = eval(dbgCmd); }</p>
    <p>return x + 42; }</p>
    <p>Put breakpoint here</p>
  </div>
  <div class="page">
    <p>Breakpoints</p>
    <p>Create source code for f()</p>
    <p>eval() that source code to get a JavaScript function object Traverse the heap, replace refs to f() with refs to f()</p>
    <p>Unpause the application</p>
  </div>
  <div class="page">
    <p>Live Patching</p>
    <p>Breakpoints are just an example!  Can use live patching to . . .  Dynamically install a bug fix  Create chat windows between user and developer  Implement stack traces</p>
    <p>See paper for details</p>
  </div>
  <div class="page">
    <p>ITS JUDGMENT DAY.</p>
    <p>STATISTICAL SIGNIFICANCE EXPECTED.</p>
  </div>
  <div class="page">
    <p>Rivet Overheads: Normal Operation</p>
  </div>
  <div class="page">
    <p>Time to Pause an Application</p>
  </div>
  <div class="page">
    <p>Time to Pause an Application</p>
  </div>
  <div class="page">
    <p>Size of Interactive Debugging Messages</p>
  </div>
  <div class="page">
    <p>Serializing the DOM Tree</p>
  </div>
  <div class="page">
    <p>Related Work</p>
  </div>
  <div class="page">
    <p>Related Work: Built-in Debuggers</p>
    <p>The ones that do only support:  A single web engine thats . . .  Configured by a guru and which . . .  Isnt constrained by the same-origin</p>
    <p>policy!</p>
    <p>Most dont have native support for remote debugging  Could add support using a plugin . . .</p>
    <p>BUT THAT IS GROSS</p>
  </div>
  <div class="page">
    <p>Related Work: Mugshot  A JavaScript logging+replay</p>
    <p>framework  Rivet uses some Mugshot-style</p>
    <p>trickeration . . .  . . . but has three advantages:  Rivet doesnt need a proxy server  Rivets in situ exploration is less fragile  Rivet performs less runtime shimming</p>
    <p>Jam es m</p>
    <p>icke ns</p>
    <p>Wro te t</p>
    <p>he</p>
    <p>mug sho</p>
    <p>t pa per</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>The way web pages used to be HOLLYWOOD HAS</p>
    <p>RUINED EVERYTHING</p>
  </div>
  <div class="page">
    <p>Conclusion  Rivet: a browser-agnostic remote debugger  Runs on unmodified browsers (no plugins!)  Doesnt require context proxy  Supports interactive debugging, automatic diagnostics</p>
    <p>Rivet had good performance!  Negligible slowdown during normal operation  Pausing applications is fast  Debugging messages are small</p>
    <p>Rivet can perform non-trivial diagnostics</p>
  </div>
</Presentation>
