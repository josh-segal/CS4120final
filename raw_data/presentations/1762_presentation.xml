<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>The Case of the Fake Picasso! Preven&amp;ng History Forgery with</p>
    <p>Secure Provenance</p>
    <p>Ragib Hasan* , Radu Sion+ , Marianne Winsle&gt; * Dept. of Computer Science * University of Illinois at UrbanaChampaign + Stony Brook University</p>
    <p>USENIX FAST 2009 February 25, 2009</p>
  </div>
  <div class="page">
    <p>Lets play a game</p>
    <p>Can you spot the fake Picasso?</p>
    <p>Real, worth $101.8 million Fake, listed at eBay, worth nothing</p>
  </div>
  <div class="page">
    <p>So, how do art buyers authen&amp;cate art? Among other things, they look at provenance records</p>
    <p>Provenance: from LaIn provenire come from, defined as</p>
    <p>(i) the fact of coming from some par1cular source or quarter; origin, deriva1on.</p>
    <p>(ii) the history or pedigree of a work of art, manuscript, rare book, etc.; a record of the ul1mate deriva1on and passage of an item through its various owners (Oxford English DicIonary)</p>
    <p>In other words, who owned it, what was done to it, how was it transferred</p>
    <p>Widely used in arts, archives, and archeology, called the Fundamental Principle of Archival.</p>
    <p>hXp://moma.org/collecIon/provenance/items/644.67.html L'ar&amp;ste et son modle (1928), at Museum of Modern Art</p>
  </div>
  <div class="page">
    <p>Data is generated, processed, and transmi&gt;ed between different systems and principals, and stored in database/</p>
    <p>storage</p>
    <p>Unlike data processing in the past, digital data can be rapidly copied, modified, and</p>
    <p>erased To trust data we receive from others or retrieve from storage, we need to look into the integrity of both the present state and</p>
    <p>the past history of data</p>
    <p>Lets consider the digital world Am I ge`ng back untampered data?</p>
    <p>Was this data created and processed by persons I</p>
    <p>trust?</p>
    <p>Our life today has become increasingly dependent on digital data Our Most Valuable Asset is Data</p>
  </div>
  <div class="page">
    <p>What exactly is data provenance? DefiniIon*</p>
    <p>DescripIon of the origins of data and the process by which it arrived at the database. [Buneman et al.]</p>
    <p>InformaIon describing materials and transforma&amp;ons applied to derive the data. [Lanter]</p>
    <p>InformaIon that helps determine the deriva&amp;on history of a data product, starIng from its original sources. [Simmhan et al.]</p>
    <p>*Simmhan et al. A Survey of Provenance in EScience. SIGMOD Record, 2005.</p>
  </div>
  <div class="page">
    <p>Example provenance systems</p>
    <p>Simmhan et al., 2005</p>
  </div>
  <div class="page">
    <p>What was the common theme of all those systems?</p>
    <p>They were all scienIfic compuIng systems  And scienIsts trust people (more or less)</p>
    <p>Previous research covers provenance collecIon, annotaIon, querying, and workflow, but security issues are not handled</p>
    <p>For provenance in untrusted environments, we need integrity, confiden&amp;ality and privacy guarantees</p>
    <p>So, we need provenance of provenance, i.e. a model for Secure Provenance</p>
    <p>Data</p>
  </div>
  <div class="page">
    <p>Secure provenance means preven&amp;ng undetectable history rewri&amp;ng</p>
    <p>Adversaries cannot insert fake events, remove genuine events from a documents provenance</p>
    <p>No one can deny history of own acIons</p>
    <p>Allow fine grained preservaIon of privacy and confidenIality of acIons  Users can choose which auditors can see details of their work  AXributes can be selecIvely disclosed or hidden without harming integrity check</p>
  </div>
  <div class="page">
    <p>Usage and threat model  Users: Edit documents on their</p>
    <p>machines</p>
    <p>Documents: Are edited, transmiXed to other users</p>
    <p>Provenance entry = record of a users modificaIons and related context</p>
    <p>Provenance chain = chronologically sorted list of entries; accompanies the document PAlice PBob PCharlie</p>
    <p>Marvin</p>
    <p>Alice Bob Charlie</p>
    <p>Audrey</p>
    <p>PAlice PBob PCharlie</p>
    <p>PMarvin</p>
    <p>Auditors: semitrusted principals  All auditors can verify chain integrity  Only certain auditors can read each entry</p>
    <p>Adversaries: insiders or outsiders who  Add or remove history entries  Collude with others to add/</p>
    <p>remove entries  Claim a chain belongs to another</p>
    <p>document  Repudiate an entry</p>
    <p>Ragib Hasan, Radu Sion, and Marianne WinsleX, Introducing Secure Provenance: Problems and Challenges, ACM StorageSS 2007</p>
  </div>
  <div class="page">
    <p>Previous work on integrity assurances  (Logically) centralized repository (CVS, Subversion, GIT)</p>
    <p>Changes to files recorded  Not applicable to mobile documents</p>
    <p>File systems with integrity assurances (SUNDR, PASIS, TCFS)  Provide local integrity checking  Do not apply to data that traverses systems</p>
    <p>System state entanglement (Baker 02)  Entangle one systems state with another, so others can serve as witness to a systems state</p>
    <p>Not applicable to mobile data  Secure audit logs / trails (Schneier and Kelsey 99), LogCrypt (Holt 2004), (Peterson et al. 2006)  Trusted notary cerIfies logs, or trusted third party given hash chain seed</p>
  </div>
  <div class="page">
    <p>Our solu&amp;on: Overview</p>
    <p>Ui = idenIty of the principal (lineage)</p>
    <p>Ki = confidenIality locks for Wi</p>
    <p>Wi = Encrypted modificaIon log</p>
    <p>Ci = integrity checksum(s)</p>
    <p>P1 P2 P3 P4 Pn1 Pn</p>
    <p>U3 W3 K3 C3 Pub3</p>
    <p>Uid3 Pid3 Host3 IP3 Ime3</p>
    <p>Provenance Chain</p>
    <p>Provenance Entry</p>
  </div>
  <div class="page">
    <p>Our solu&amp;on: Confiden&amp;ality</p>
    <p>ModificaIon log Encrypted ModificaIon log</p>
    <p>A single auditor</p>
    <p>ModificaIon log Encrypted ModificaIon log</p>
    <p>Mul&amp;ple auditors</p>
    <p>Encrypted ModificaIon log</p>
    <p>ModificaIon log Encrypted ModificaIon log</p>
    <p>Op&amp;miza&amp;on: Use broadcast encrypIon tree to reduce number of required keys</p>
    <p>Issues</p>
    <p>Each user trusts a subset of the auditors</p>
    <p>Only the auditor(s) trusted by the user can see the users acIons on the document</p>
  </div>
  <div class="page">
    <p>Our solu&amp;on: Confiden&amp;ality</p>
    <p>ki is a secret key that authorized auditors can retrieve from the field Ki</p>
    <p>wi is either the diff or the set of acIons taken on the file</p>
    <p>P1 P2 P3 P4 Pn1 Pn</p>
    <p>U3 W3 K3 C3 Pub3</p>
    <p>Wi = Eki (wi)|hash(D) Ki = {Eka (ki) }</p>
    <p>ka is the key of a trusted auditor</p>
  </div>
  <div class="page">
    <p>Our solu&amp;on: Integrity</p>
    <p>Ci = Sprivate_i (hash(Ui,Wi,Ki)|Ci1)</p>
    <p>Old Provenance Entry Old Checksum New Provenance Entry New Checksum</p>
    <p>Hash</p>
    <p>Sign</p>
  </div>
  <div class="page">
    <p>Fine grained control over confiden&amp;ality</p>
    <p>NonsensiIve InformaIon SensiIve InformaIon</p>
    <p>commitment</p>
    <p>NonsensiIve Info SensiIve info Commit(sensiIve info)</p>
    <p>Checksum calculaIon</p>
    <p>NonsensiIve Info Commit(sensiIve info)</p>
    <p>Original aXributes</p>
    <p>Disclosable provenance entry</p>
    <p>Blinded entry disclosed to third party</p>
    <p>Classified Document Redacted (unclassified) Document</p>
    <p>P1 P2 P3 P4 P1 P2 P3 P4</p>
    <p>Declassify / release Provenance chain has sensi&amp;ve info</p>
    <p>Dele&amp;ng sensi&amp;ve informa&amp;on will break integrity checks</p>
  </div>
  <div class="page">
    <p>We can summarize provenance chains to save space, make audits fast</p>
    <p>We can systemaIcally remove entries from the chain while sIll being able to prove integrity of chain</p>
    <p>n:1 chain</p>
    <p>Each entry has 1 checksum, calculated from 1 previous checksum</p>
    <p>Each entry has n checksums, each of them calculated from 1 previous checksum</p>
  </div>
  <div class="page">
    <p>Our Sprov applica&amp;onlevel library requires almost no applica&amp;on changes</p>
    <p>Sprov provides the file system APIs from stdio.h</p>
    <p>To add secure provenance, simply relink applicaIons with Sprov library instead of stdio.h</p>
  </div>
  <div class="page">
    <p>Experimental sekngs</p>
    <p>Crypto sekngs  1024 bit DSA signatures  128 bit AES encrypIon  SHA1 for hashes</p>
    <p>Experiment plalorm  Linux 2.6.11 with ext3  PenIum 3.4 GHz, 2GB RAM,  Disks: Seagate Barracuda 7200 rpm, WD Caviar SE16 7200 rpm</p>
    <p>Modes  ConfigDisk : Provenance chains stored on Disk  ConfigRD: Provenance chains stored on RAM Disk buffer, and periodically saved to disk</p>
  </div>
  <div class="page">
    <p>Postmark small file benchmark: Overhead &lt; 5% for realis&amp;c workloads</p>
    <p>20,000 small files (8KB64KB) subjected to 100% to 0% write load with the Postmark benchmark</p>
    <p>At 100% write load, execuIon Ime overhead of using secure provenance over the no provenance case is approx. 27% (12% with RD)</p>
    <p>At 50% write load, overheads go down to 16% (3% with RD)</p>
    <p>Overheads are less than 5% with 20% or less write load</p>
    <p>ConfigRD</p>
  </div>
  <div class="page">
    <p>Hybrid workloads: Simula&amp;ng real file systems</p>
    <p>File system distribu&amp;on:  File size distribuIon in real file systems follows the log normal</p>
    <p>distribuIon [Bolosky and Douceur 99]  Median file size = 4KB , mean file size = 80KB  We created a file system with 20,000 files, using the lognormal</p>
    <p>parameters mu = 8.46, sigma = 2.4  In addiIon, we included a few large (1GB+) files</p>
    <p>Workload  INS: InstrucIonal lab (1.1% writes) [Roselli 00]  RES: A research lab (2.9% writes) [Roselli 00]  CIFSCorp: (15% writes) [Leung 08]  CIFSEng: (17% writes) [Leung 08]  EECS: (82% writes) [Ellard 03]</p>
  </div>
  <div class="page">
    <p>Typical real life workloads: 1  13% overhead</p>
    <p>INS and RES are readintensive (80%+ reads), so overheads are very low in both cases.  CIFScorp and CIFSeng have 2:1 raIo of reads and writes, overheads are sIll low (range</p>
    <p>from 12% to 2.5%)  EECS has very high write load (82%+), so the overhead is higher, but sIll less than 35% for</p>
    <p>ConfigDisk, and less than 7% for ConfigRD</p>
    <p>ConfigDisk ConfigRD</p>
    <p>EECS</p>
    <p>CIFScorp/eng</p>
    <p>INS, RES INS, RES</p>
    <p>EECS</p>
    <p>CIFScorp/eng</p>
  </div>
  <div class="page">
    <p>Summary: Secure provenance possible at low cost</p>
    <p>Yes, We CAN achieve secure provenance with integrity and confidenIality assurances with reasonable overheads</p>
    <p>For most reallife workloads, overheads are between 1% and 15% only</p>
    <p>More info at h&gt;p://&amp;nyurl.com/secprov</p>
  </div>
</Presentation>
