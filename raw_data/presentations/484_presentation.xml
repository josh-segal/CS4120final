<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>The Platform as a Service</p>
    <p>Model for Networking</p>
    <p>Eric Keller, Jennifer Rexford</p>
    <p>Princeton University</p>
    <p>INM/WREN 2010</p>
  </div>
  <div class="page">
    <p>Hosted Infrastructures</p>
    <p>Shift towards hosted and shared infrastructures  Cloud computing</p>
    <p>Benefits:  Dynamically scale up/down</p>
    <p>Cost benefits</p>
  </div>
  <div class="page">
    <p>Hosted Network Infrastructure</p>
    <p>Poised to happen for networking</p>
    <p>Similar benefits</p>
    <p>Additional driver: in-network inaccessibility</p>
    <p>? 3</p>
  </div>
  <div class="page">
    <p>Old News</p>
    <p>Im not the first to believe this</p>
    <p>Large body of research in Network Virtualization  Run multiple virtual networks concurrently on a shared</p>
    <p>infrastructure</p>
  </div>
  <div class="page">
    <p>Thats the Wrong Approach</p>
    <p>Instead abstraction should be a platform  Customers can focus on their application/service</p>
    <p>Single Router Platform</p>
  </div>
  <div class="page">
    <p>Whats the problem</p>
    <p>with network virtualization?</p>
  </div>
  <div class="page">
    <p>Undesirable Business Model (for infrastructure provider)</p>
    <p>Infrastructure</p>
    <p>Providers</p>
    <p>Applications</p>
    <p>End Users</p>
    <p>Service</p>
    <p>Providers</p>
    <p>Owns and maintains physical routers/links</p>
    <p>Builds application which uses in-network functionality</p>
    <p>(e.g., Virtual Worlds provider using a multi-cast service)</p>
    <p>Leases slices of virtualized routers to create network</p>
    <p>Runs custom software/protocols/configurations</p>
    <p>(e.g., a multi-cast or reliable connectivity)</p>
  </div>
  <div class="page">
    <p>Infrastructure</p>
    <p>Providers</p>
    <p>Applications</p>
    <p>End Users</p>
    <p>Service</p>
    <p>Providers</p>
    <p>Owns and maintains physical routers/links</p>
    <p>Builds application which uses in-network functionality</p>
    <p>(e.g., Virtual Worlds provider using a multi-cast service)</p>
    <p>Leases slices of virtualized routers to create network</p>
    <p>Runs custom software/protocols/configurations</p>
    <p>(e.g., a multi-cast or reliable connectivity)</p>
    <p>Commodity Service (unappealing to traditional ISPs)</p>
    <p>Undesirable Business Model (for infrastructure provider)</p>
  </div>
  <div class="page">
    <p>Difficult to Manage (for application providers)</p>
    <p>Same as managing physical network  Traffic engineering</p>
    <p>Configuring a distributed collection of routers</p>
    <p>Deal with failure</p>
    <p>Managing resources to meet demand</p>
    <p>Yes, but wont service providers deal with that?</p>
  </div>
  <div class="page">
    <p>Limited Market Opportunity (for service providers)</p>
    <p>Applications just want some control  Either service provider provides it or develop themselves</p>
    <p>Services must be general to have a large market  Are there really that many generic services?</p>
    <p>Dont count on infrastructure providers  Thats todays model</p>
  </div>
  <div class="page">
    <p>If not network virtualization, then what?</p>
  </div>
  <div class="page">
    <p>Cloud Computing Landscape</p>
    <p>Infrastructure as a Service (IaaS)  e.g., Amazon EC2, Rackspace Cloud</p>
    <p>Abstraction is managing set of virtual machines</p>
    <p>Freedom: run any software you want</p>
    <p>Effort: manage redundancy, all software</p>
    <p>Platform as a Service (PaaS)  e.g., Google App Engine, Heroku</p>
    <p>Write application using libraries and</p>
    <p>without worrying about actual servers</p>
    <p>Freedom: tied to specific platform capabilities</p>
    <p>Effort: apps scale automatically, build on the platform</p>
    <p>(And everything in between) 12</p>
  </div>
  <div class="page">
    <p>Key Differences (why IaaS makes sense for computing)</p>
    <p>Compute:  Legacy applications</p>
    <p>Workflow used to writing applications on servers</p>
    <p>Network:  Limited developer community</p>
    <p>Not the end application</p>
    <p>Platform enabling in-network functionality,</p>
    <p>without having to manage a network</p>
    <p>Goal</p>
  </div>
  <div class="page">
    <p>The Router Platform (PaaS)</p>
    <p>Present customers (application developers) with</p>
    <p>platform  Decoupled from physical infrastructure</p>
    <p>Customers can focus on their application/service</p>
    <p>Infrastructure owner has freedom in managing the</p>
    <p>infrastructure</p>
  </div>
  <div class="page">
    <p>The Single Router Abstraction</p>
    <p>Router abstraction covers functionality, doesnt</p>
    <p>bother with physical infrastructure  Router more than just routing</p>
    <p>Note: this is preliminary thinking</p>
    <p>Data Plane</p>
    <p>Routing</p>
    <p>Software</p>
    <p>General</p>
    <p>purpose</p>
    <p>functions</p>
    <p>Customer Program</p>
    <p>API</p>
  </div>
  <div class="page">
    <p>Interactive Program</p>
    <p>Customer provides executable script</p>
    <p>(rather than static configuration file)  Initialization routine</p>
    <p>Dynamic modification to configuration</p>
    <p>Driven by events (control message, event notification)</p>
    <p>Data Plane</p>
    <p>Routing</p>
    <p>Software</p>
    <p>General</p>
    <p>purpose</p>
    <p>functions</p>
    <p>Customer Program</p>
    <p>API</p>
  </div>
  <div class="page">
    <p>Routing</p>
    <p>Specify sessions with neighboring routers  Customers routers or infrastructure providers neighbors</p>
    <p>Know what links are available  Interface to query, metrics, callback when change</p>
    <p>Data Plane</p>
    <p>Routing</p>
    <p>Software</p>
    <p>General</p>
    <p>purpose</p>
    <p>functions</p>
    <p>Customer Program</p>
    <p>API</p>
  </div>
  <div class="page">
    <p>Data Plane</p>
    <p>Direct configuration of data plane functions  Setting up multi-cast groups, access control lists, etc.</p>
    <p>Data Plane</p>
    <p>Routing</p>
    <p>Software</p>
    <p>General</p>
    <p>purpose</p>
    <p>functions</p>
    <p>Customer Program</p>
    <p>API</p>
  </div>
  <div class="page">
    <p>General-Purpose Processing</p>
    <p>As name suggest, can be anything</p>
    <p>Can be written by customer as well</p>
    <p>Data Plane</p>
    <p>Routing</p>
    <p>Software</p>
    <p>General</p>
    <p>purpose</p>
    <p>functions</p>
    <p>Customer Program</p>
    <p>API</p>
  </div>
  <div class="page">
    <p>Customer Controlled Routing</p>
    <p>ISP chooses one route, no choice to customers</p>
    <p>Customer: Configure Router in ISP</p>
    <p>Dest.</p>
    <p>C1</p>
    <p>C2</p>
    <p>ISP</p>
    <p>X</p>
    <p>Y</p>
    <p>Low cost route</p>
    <p>Low latency route</p>
  </div>
  <div class="page">
    <p>Cloud Computing</p>
    <p>IaaS offerings give you servers and connectivity</p>
    <p>Customer: configure middlebox (firewall, load</p>
    <p>balancer), VPN, route selection</p>
    <p>21</p>
  </div>
  <div class="page">
    <p>Gaming/Live Video Streaming</p>
    <p>Limited ability to setup multi-cast, perform update</p>
    <p>aggregation</p>
    <p>Customer: configure router to manage multi-cast</p>
    <p>group, add custom software</p>
    <p>update</p>
  </div>
  <div class="page">
    <p>Gaming/Live Video Streaming</p>
    <p>Limited ability to setup multi-cast, perform update</p>
    <p>aggregation</p>
    <p>Customer: configure router to manage multi-cast</p>
    <p>group, add custom software</p>
    <p>update</p>
  </div>
  <div class="page">
    <p>Challenge: The Physical Reality</p>
  </div>
  <div class="page">
    <p>Challenge: The Physical Reality</p>
    <p>Physical Infrastructure is Distributed</p>
  </div>
  <div class="page">
    <p>Challenge: The Physical Reality</p>
    <p>Physical Infrastructure is Distributed</p>
    <p>Physical Infrastructure is Shared</p>
    <p>Customer 1 Customer 2 Customer 3</p>
  </div>
  <div class="page">
    <p>Distributed Router Workload</p>
    <p>Network virtualization  specify exact topology</p>
    <p>Single router platform  specify work to be done</p>
    <p>Leeway to distribute this workload  Some tied to physical router (e.g., BGP session)</p>
    <p>Some can be replicated (for latency or to handle work)</p>
    <p>Configure inter-processor communication</p>
  </div>
  <div class="page">
    <p>Dynamically Adjust Distribution</p>
    <p>Estimates are used to choose how to distribute</p>
    <p>Monitor the routers  CPU, update freq., traffic</p>
    <p>Re-distribute workload as necessary  e.g., migrate BGP session</p>
    <p>e.g., add replicated instances</p>
    <p>Comes at cost</p>
  </div>
  <div class="page">
    <p>Shared Infrastructure</p>
    <p>Virtualization is part of solution</p>
    <p>Routing sessions can be shared  Tag message, process it, send out based on tag</p>
    <p>C1</p>
    <p>C2</p>
    <p>Inf</p>
    <p>Prov</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Shift towards hosted and shared infrastructure  Can help management of private infrastructures</p>
    <p>Worth exploring an alternate to the IaaS model</p>
    <p>Some challenges in the single router platform</p>
  </div>
  <div class="page">
    <p>Questions?</p>
    <p>Contact info:</p>
    <p>ekeller@princeton.edu</p>
    <p>http://www.princeton.edu/~ekeller</p>
  </div>
</Presentation>
