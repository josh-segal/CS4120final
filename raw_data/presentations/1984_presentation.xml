<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>An Edge Datastore Architecture For Latency-Critical Distributed Machine</p>
    <p>Vision Applications Arun Ravindran and Anjus George</p>
    <p>UNC Charlotte</p>
  </div>
  <div class="page">
    <p>Distributed Vision at the Edge - Smart City Warn pedestrian about potential accidents</p>
    <p>Automatically detect and alert drunk driving</p>
    <p>Effective bias free law enforcement</p>
    <p>Source: YouTube 2</p>
  </div>
  <div class="page">
    <p>System Architecture</p>
    <p>Cameras</p>
    <p>End nodes</p>
    <p>Edge Servers</p>
    <p>Cloud</p>
  </div>
  <div class="page">
    <p>Vision Edge Datastore  Applications at Edge</p>
    <p>analyzes data collected by End nodes to detect events  Need data store that persists data</p>
    <p>gathered from multiple end nodes  Able to specify latency required</p>
    <p>Challenge - how to maintain low latency at edge ?  Latency sources - wireless</p>
    <p>channel, bufferbloat, read/write latency 4</p>
    <p>Latency CDF witn node scaling</p>
  </div>
  <div class="page">
    <p>Cloud vs Edge  Data Center vs. Field</p>
    <p>Security, Fault tolerance</p>
    <p>Wired vs. Wireless  Bandwidth, latency</p>
    <p>Homogeneous vs. Heterogeneous  ARM/x86 SoCs, Multiple storage and networking technologies</p>
    <p>Distributed data storage vs. Distributed data at source  Big, fast, distributed data  latency critical/sensitive applications</p>
  </div>
  <div class="page">
    <p>Prior Work at Edge Storage</p>
    <p>VisFlow Project (Microsoft)  PathStore Project (Toronto)  Cachier Project (CMU)</p>
  </div>
  <div class="page">
    <p>Our Design philosophy at Edge</p>
    <p>Application specific systems  Tension between specificity and generality</p>
    <p>Autonomous operation  Techniques from Control Theory and AI (ML, Deep Learning,</p>
    <p>Reinforcement Learning)</p>
  </div>
  <div class="page">
    <p>Key idea - Exploit application characteristics</p>
    <p>Two type of data - image feature vectors (1-10 kB) and image keyframes (100 - 500 MB)</p>
    <p>Feature vectors - latency critical  Tracking, behavioral analysis</p>
    <p>Keyframes - latency sensitive  Archival</p>
    <p>Feature vector latency by sacrificing keyframe accuracy  Need to do this dynamically since channel interference and scene</p>
    <p>content is dynamic</p>
  </div>
  <div class="page">
    <p>Key idea - Latency control knobs</p>
    <p>Control knob 1: Keyframe TX  Controls the rate at which keyframes are transmitted  Low egress rates could result in bufferbloat</p>
    <p>Control knob 2: Keyframe Sim  Drops similar keyframes to maintain buffer length  Accuracy vs. Latency trade off  Needs a similarity metric</p>
  </div>
  <div class="page">
    <p>Vision Edge Data Store - Design</p>
    <p>End node processing generates key frames feature and feature vectors</p>
    <p>Inserted with timestamp and node ID into transmit buffer  Data transmitted to Edge server  Aggregate and persist data at Edge server</p>
    <p>Low latency store (RocksDB, RAMCloud)</p>
    <p>End node controls keyframe Tx rate and buffer length  Scalable since controllers are independent</p>
  </div>
  <div class="page">
    <p>Prototype Evaluation Platform  Emulation platform</p>
    <p>LXC containers for nodes  NS3 network simulator for WiFi channel  Client/Servers implemented in Golang  Image similarity (SSIM) with Python sckit-image  qperf for latency measurements</p>
    <p>Controller  Bang-bang (on/off) control</p>
    <p>Data  500kB keyframes, 4 kB feature vectors  External interference simulated via Poisson process (5s TX,  = 30s)</p>
  </div>
  <div class="page">
    <p>Results</p>
    <p>Latency CDF - Keyframe TX control Latency CDF - Keyframe Sim control</p>
  </div>
  <div class="page">
    <p>Keyframe similarity (SSIM) - Pedestrian crash video</p>
    <p>Accuracy vs. Latency tradeoffs</p>
  </div>
  <div class="page">
    <p>On going work</p>
    <p>Experimental characterization of interference, keyframe similarity, application requirements</p>
    <p>Internal interference - scheduling problem?  Distributed - client-server vs. peer-to-peer  Dependence on scene dynamics</p>
    <p>Control / Learning algorithms</p>
  </div>
  <div class="page">
    <p>Request Feedback</p>
    <p>On use of WiFi at Edge for latency critical apps?  On differences between cloud and edge storage?  What would you like to see experimentally validated?  How should latency/accuracy requirements be</p>
    <p>communicated from Edge app. to camera end nodes?  Are there other edge applications that are similar?  What edge specific security issues should we consider?  Any experience with simulating NS3 802.11ac with</p>
    <p>containers? 15</p>
  </div>
</Presentation>
