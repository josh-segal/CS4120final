<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>SALSA: Analyzing Logs as</p>
    <p>StAte Machines</p>
    <p>Jiaqi Tan</p>
    <p>Xinghao Pan, Soila Kavulya,</p>
    <p>Rajeev Gandhi, Priya Narasimhan</p>
    <p>PARALLEL DATA LABORATORY Carnegie Mellon University</p>
  </div>
  <div class="page">
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 2</p>
    <p>Motivation</p>
    <p>&quot; Ubiquitous, rich logs</p>
    <p>&quot; Many software systems generate logs</p>
    <p>&quot; Semantically-rich data, but difficult to analyze:</p>
    <p>Typically unstructured text</p>
    <p>&quot; Current techniques</p>
    <p>&quot; Study statistical properties of log events</p>
    <p>&quot; Adds little application semantics to analysis</p>
    <p>&quot; Want to incorporate semantics in analysis</p>
  </div>
  <div class="page">
    <p>SALSA</p>
    <p>&quot; General technique to extract execution views</p>
    <p>from system event logs</p>
    <p>&quot; Execution structure: a priori knowledge</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 3</p>
    <p>System Logs</p>
    <p>(from all nodes)</p>
    <p>Control-flow event traces</p>
    <p>Failure diagnosis</p>
    <p>Visualization</p>
    <p>: : : :</p>
    <p>Data-flow event traces</p>
    <p>Derived state-machine views of systems control- &amp; data-flows</p>
    <p>System Logs</p>
    <p>(from all nodes)</p>
    <p>Control-flow event traces</p>
    <p>Failure diagnosis</p>
    <p>Visualization</p>
    <p>: : : :</p>
    <p>Data-flow event traces</p>
    <p>Derived state-machine views of systems control- &amp; data-flows</p>
    <p>System Logs</p>
    <p>(from all nodes)</p>
    <p>Control-flow event traces</p>
    <p>Failure diagnosis</p>
    <p>Visualization</p>
    <p>: : : :</p>
    <p>Data-flow event traces</p>
    <p>Derived state-machine views of systems control- &amp; data-flows</p>
    <p>System Logs</p>
    <p>(from all nodes)</p>
    <p>Control-flow event traces</p>
    <p>Failure diagnosis</p>
    <p>Visualization</p>
    <p>: : : :</p>
    <p>Data-flow event traces</p>
    <p>Derived state-machine views of systems control- &amp; data-flows</p>
    <p>System</p>
    <p>event logs</p>
    <p>Derived execution views of</p>
    <p>Systems control- &amp; data-flows</p>
    <p>Fault</p>
    <p>Diagnosis</p>
    <p>Visualization</p>
    <p>etc</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>&quot; SALSA: Log Analysis Technique</p>
    <p>&quot; Applying SALSA: Analyzing Hadoop Logs</p>
    <p>&quot; Use-case 1: Visualization</p>
    <p>&quot; Use-case 2: Diagnosis</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 4</p>
  </div>
  <div class="page">
    <p>SALSA: State Extraction (1)</p>
    <p>&quot; Technique to extract</p>
    <p>state-machine views</p>
    <p>from logs</p>
    <p>&quot; Assumptions :</p>
    <p>&quot; System has multiple</p>
    <p>concurrent, activities</p>
    <p>&quot; Each activity emits log</p>
    <p>messages</p>
    <p>&quot; Consider tasks as</p>
    <p>producers and</p>
    <p>consumers</p>
    <p>&quot; Extracts control-flow</p>
    <p>and data-flow views</p>
    <p>of execution</p>
    <p>&quot; Sample idealized log:</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 5</p>
    <p>[ t1 ] Begin Task P1 !</p>
    <p>[ t2 ] Begin Task C1 !</p>
    <p>[ t3 ] Task P1 does some work !</p>
    <p>[ t4 ] Task C1 waits for data from</p>
    <p>P1 and P2 !</p>
    <p>[ t5 ] Task P1 produces data !</p>
    <p>[ t6 ] Task C1 consumes data from</p>
    <p>P1 on host X !</p>
    <p>[ t7 ] Task P1 ends !</p>
    <p>[ t8 ] Task C1 consumes data from</p>
    <p>P2 on host Y !</p>
    <p>[ t9 ] Task C1 ends!</p>
  </div>
  <div class="page">
    <p>SALSA: State Extraction (2)</p>
    <p>&quot; Model control-flow:</p>
    <p>states extracted</p>
    <p>from log messages</p>
    <p>&quot; Interpret each log</p>
    <p>message as an</p>
    <p>event</p>
    <p>&quot; Impose semantics:</p>
    <p>Interpret events as</p>
    <p>starts/ends of</p>
    <p>execution states</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 6</p>
    <p>[ t1 ] Begin Task P1 !</p>
    <p>[ t2 ] Begin Task C1 !</p>
    <p>[ t3 ] Task P1 does some work !</p>
    <p>[ t4 ] Task C1 waits for data from</p>
    <p>P1 and P2 !</p>
    <p>[ t5 ] Task P1 produces data !</p>
    <p>[ t6 ] Task C1 consumes data from P1</p>
    <p>on host X ! [ t7 ] Task P1 ends !</p>
    <p>[ t9 ] Task C1 ends!</p>
    <p>[ t8 ] Task C1 consumes data from P2</p>
    <p>on host Y !</p>
  </div>
  <div class="page">
    <p>SALSA: State Extraction (3)</p>
    <p>&quot;Model data-flow: &quot; Extract producer</p>
    <p>consumer</p>
    <p>interactions</p>
    <p>e.g. when log</p>
    <p>messages indicate</p>
    <p>source for</p>
    <p>consumer</p>
    <p>&quot; Can extract inter</p>
    <p>node data-flows</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 7</p>
    <p>[ t1 ] Begin Task P1 !</p>
    <p>[ t2 ] Begin Task C1 !</p>
    <p>[ t3 ] Task P1 does some work !</p>
    <p>[ t4 ] Task C1 waits for data from</p>
    <p>P1 and P2 !</p>
    <p>[ t5 ] Task P1 produces data !</p>
    <p>[ t6 ] Task C1 consumes data from</p>
    <p>P1 on host X !</p>
    <p>[ t7 ] Task P1 ends !</p>
    <p>[ t8 ] Task C1 consumes data from</p>
    <p>P2 on host Y !</p>
    <p>[ t9 ] Task C1 ends!</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>&quot; SALSA: Log Analysis Technique</p>
    <p>&quot; Applying SALSA: Analyzing Hadoop Logs</p>
    <p>&quot; Use-case 1: Visualization</p>
    <p>&quot; Use-case 2: Diagnosis</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 8</p>
  </div>
  <div class="page">
    <p>Architecture of Hadoop</p>
    <p>&quot; MapReduce Runtime + Distributed Filesystem</p>
    <p>&quot; Master/Slave architecture</p>
    <p>&quot; Focus on slave node logs:</p>
    <p>&quot; One log for each TaskTracker and DataNode</p>
    <p>&quot; Logs record processing activities</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 9</p>
    <p>Legend</p>
    <p>Cluster nodes</p>
    <p>Runtime</p>
    <p>Distrib. FS</p>
    <p>NameNode</p>
    <p>JobTracker</p>
    <p>DataNode</p>
    <p>TaskTracker</p>
    <p>Slave nodes</p>
    <p>Master</p>
    <p>node</p>
    <p>DataNode</p>
    <p>TaskTracker</p>
    <p>DataNode</p>
    <p>TaskTracker</p>
  </div>
  <div class="page">
    <p>SALSA for Hadoop</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 10</p>
    <p>Legend</p>
    <p>Cluster nodes</p>
    <p>Runtime</p>
    <p>Distrib. FS</p>
    <p>NameNode</p>
    <p>JobTracker</p>
    <p>Slave nodes</p>
    <p>Master</p>
    <p>node</p>
    <p>DataNode</p>
    <p>TaskTracker System</p>
    <p>Logs (from all nodes)</p>
    <p>Control-flow event traces</p>
    <p>Failure diagnosis</p>
    <p>Visualization</p>
    <p>: : : :</p>
    <p>Data-flow event traces</p>
    <p>Derived state-machine views of systems control- &amp; data-flows</p>
    <p>System Logs</p>
    <p>(from all nodes)</p>
    <p>Control-flow event traces</p>
    <p>Failure diagnosis</p>
    <p>Visualization</p>
    <p>: : : :</p>
    <p>Data-flow event traces</p>
    <p>Derived state-machine views of systems control- &amp; data-flows</p>
    <p>DataNode</p>
    <p>TaskTracker System</p>
    <p>Logs (from all nodes)</p>
    <p>Control-flow event traces</p>
    <p>Failure diagnosis</p>
    <p>Visualization</p>
    <p>: : : :</p>
    <p>Data-flow event traces</p>
    <p>Derived state-machine views of systems control- &amp; data-flows</p>
    <p>System Logs</p>
    <p>(from all nodes)</p>
    <p>Control-flow event traces</p>
    <p>Failure diagnosis</p>
    <p>Visualization</p>
    <p>: : : :</p>
    <p>Data-flow event traces</p>
    <p>Derived state-machine views of systems control- &amp; data-flows</p>
    <p>DataNode</p>
    <p>TaskTracker System</p>
    <p>Logs (from all nodes)</p>
    <p>Control-flow event traces</p>
    <p>Failure diagnosis</p>
    <p>Visualization</p>
    <p>: : : :</p>
    <p>Data-flow event traces</p>
    <p>Derived state-machine views of systems control- &amp; data-flows</p>
    <p>System Logs</p>
    <p>(from all nodes)</p>
    <p>Control-flow event traces</p>
    <p>Failure diagnosis</p>
    <p>Visualization</p>
    <p>: : : :</p>
    <p>Data-flow event traces</p>
    <p>Derived state-machine views of systems control- &amp; data-flows</p>
    <p>SALSA</p>
    <p>System Logs</p>
    <p>(from all nodes)</p>
    <p>Control-flow event traces</p>
    <p>Failure diagnosis</p>
    <p>Visualization</p>
    <p>: : : :</p>
    <p>Data-flow event traces</p>
    <p>Derived state-machine views of systems control- &amp; data-flows</p>
    <p>System Logs</p>
    <p>(from all nodes)</p>
    <p>Control-flow event traces</p>
    <p>Failure diagnosis</p>
    <p>Visualization</p>
    <p>: : : :</p>
    <p>Data-flow event traces</p>
    <p>Derived state-machine views of systems control- &amp; data-flows</p>
    <p>System Logs</p>
    <p>(from all nodes)</p>
    <p>Control-flow event traces</p>
    <p>Failure diagnosis</p>
    <p>Visualization</p>
    <p>: : : :</p>
    <p>Data-flow event traces</p>
    <p>Derived state-machine views of systems control- &amp; data-flows</p>
    <p>System Logs</p>
    <p>(from all nodes)</p>
    <p>Control-flow event traces</p>
    <p>Failure diagnosis</p>
    <p>Visualization</p>
    <p>: : : :</p>
    <p>Data-flow event traces</p>
    <p>Derived state-machine views of systems control- &amp; data-flows</p>
    <p>System Logs</p>
    <p>(from all nodes)</p>
    <p>Control-flow event traces</p>
    <p>Failure diagnosis</p>
    <p>Visualization</p>
    <p>: : : :</p>
    <p>Data-flow event traces</p>
    <p>Derived state-machine views of systems control- &amp; data-flows</p>
    <p>System Logs</p>
    <p>(from all nodes)</p>
    <p>Control-flow event traces</p>
    <p>Failure diagnosis</p>
    <p>Visualization</p>
    <p>: : : :</p>
    <p>Data-flow event traces</p>
    <p>Derived state-machine views of systems control- &amp; data-flows</p>
    <p>Fault Diagnosis</p>
    <p>Visualization</p>
  </div>
  <div class="page">
    <p>Hadoop-specific Semantics</p>
    <p>&quot; Identify events from log messages</p>
    <p>&quot; Match tokens in message</p>
    <p>&quot; Map events to starts/ends of execution states</p>
    <p>&quot; Using mapping from a priori knowledge, e.g.:</p>
    <p>&quot; Inputs: Hadoop application semantics</p>
    <p>&quot; Message token ! event mapping</p>
    <p>&quot; Event ! State start/end mapping</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 11</p>
    <p>Activity/State Start Token End Token</p>
    <p>Map LaunchTaskAction [MapID] Task [MapId] is done.</p>
    <p>ReduceCopy [ReduceID] Copying [MapID] output</p>
    <p>from [Hostname]</p>
    <p>[ReduceID] done copying [MapID]</p>
    <p>output from [Hostname].</p>
  </div>
  <div class="page">
    <p>Applying SALSA to Hadoop</p>
    <p>http://www.pdl.cmu.edu/!</p>
    <p>Reduce Idle</p>
    <p>TaskTracker Log</p>
    <p>Records events for all Maps and Reduce tasks on</p>
    <p>its node</p>
    <p>Each Map tasks control flow</p>
    <p>Each Reduce tasks control flow</p>
    <p>Map</p>
    <p>Map outputs</p>
    <p>to Reduce tasks on</p>
    <p>this or other nodes</p>
    <p>Reduce Copy</p>
    <p>Reduce Sort</p>
    <p>Reduce Merge Copy</p>
    <p>User Reduce</p>
    <p>c a n</p>
    <p>b e</p>
    <p>in te</p>
    <p>rl e a v e d</p>
    <p>[t] Launch Reduce Task : : [t] Reduce is idling, waiting for Map outputs : : [t] Repeat until all Map outputs copied</p>
    <p>[t] Start Reduce Copy (of completed Map output) : : [t] Finish Reduce Copy</p>
    <p>[t] Reduce Merge Copy : : [t] Reduce Merge Sort : : [t] Reduce Reduce (User Reduce) : : [t] Reduce Task Done</p>
    <p>[t] Launch Map Task : : [t] Copy Map outputs : : [t] Map Task Done</p>
    <p>Incoming Map</p>
    <p>outputs for this Reduce</p>
    <p>task</p>
    <p>Reduce Idle</p>
    <p>TaskTracker Log</p>
    <p>Records events for all Maps and Reduce tasks on</p>
    <p>its node</p>
    <p>Each Map tasks control flow</p>
    <p>Each Reduce tasks control flow</p>
    <p>Map</p>
    <p>Map outputs</p>
    <p>to Reduce tasks on</p>
    <p>this or other nodes</p>
    <p>Reduce Copy</p>
    <p>Reduce Sort</p>
    <p>Reduce Merge Copy</p>
    <p>User Reduce</p>
    <p>c a n</p>
    <p>b e</p>
    <p>in te</p>
    <p>rl e a v e d</p>
    <p>[t] Launch Reduce Task : : [t] Reduce is idling, waiting for Map outputs : : [t] Repeat until all Map outputs copied</p>
    <p>[t] Start Reduce Copy (of completed Map output) : : [t] Finish Reduce Copy</p>
    <p>[t] Reduce Merge Copy : : [t] Reduce Merge Sort : : [t] Reduce Reduce (User Reduce) : : [t] Reduce Task Done</p>
    <p>[t] Launch Map Task : : [t] Copy Map outputs : : [t] Map Task Done</p>
    <p>Incoming Map</p>
    <p>outputs for this Reduce</p>
    <p>task</p>
    <p>Reduce Idle</p>
    <p>TaskTracker Log</p>
    <p>Records events for all Maps and Reduce tasks on</p>
    <p>its node</p>
    <p>Each Map tasks control flow</p>
    <p>Each Reduce tasks control flow</p>
    <p>Map</p>
    <p>Map outputs</p>
    <p>to Reduce tasks on</p>
    <p>this or other nodes</p>
    <p>Reduce Copy</p>
    <p>Reduce Sort</p>
    <p>Reduce Merge Copy</p>
    <p>User Reduce</p>
    <p>c a</p>
    <p>n b</p>
    <p>e in</p>
    <p>te rl e</p>
    <p>a v e</p>
    <p>d</p>
    <p>[t] Launch Reduce Task : : [t] Reduce is idling, waiting for Map outputs : : [t] Repeat until all Map outputs copied</p>
    <p>[t] Start Reduce Copy (of completed Map output) : : [t] Finish Reduce Copy</p>
    <p>[t] Reduce Merge Copy : : [t] Reduce Merge Sort : : [t] Reduce Reduce (User Reduce) : : [t] Reduce Task Done</p>
    <p>[t] Launch Map Task : : [t] Copy Map outputs : : [t] Map Task Done</p>
    <p>Incoming Map</p>
    <p>outputs for this Reduce</p>
    <p>task</p>
    <p>Reduce Idle</p>
    <p>TaskTracker Log</p>
    <p>Records events for all Maps and Reduce tasks on</p>
    <p>its node</p>
    <p>Each Map tasks control flow</p>
    <p>Each Reduce tasks control flow</p>
    <p>Map</p>
    <p>Map outputs</p>
    <p>to Reduce tasks on</p>
    <p>this or other nodes</p>
    <p>Reduce Copy</p>
    <p>Reduce Sort</p>
    <p>Reduce Merge Copy</p>
    <p>User Reduce</p>
    <p>c a n</p>
    <p>b e</p>
    <p>in te</p>
    <p>rl e a v e d</p>
    <p>[t] Launch Reduce Task : : [t] Reduce is idling, waiting for Map outputs : : [t] Repeat until all Map outputs copied</p>
    <p>[t] Start Reduce Copy (of completed Map output) : : [t] Finish Reduce Copy</p>
    <p>[t] Reduce Merge Copy : : [t] Reduce Merge Sort : : [t] Reduce Reduce (User Reduce) : : [t] Reduce Task Done</p>
    <p>[t] Launch Map Task : : [t] Copy Map outputs : : [t] Map Task Done</p>
    <p>Incoming Map</p>
    <p>outputs for this Reduce</p>
    <p>task</p>
    <p>Reduce Idle</p>
    <p>TaskTracker Log</p>
    <p>Records events for all Maps and Reduce tasks on</p>
    <p>its node</p>
    <p>Each Map tasks control flow</p>
    <p>Each Reduce tasks control flow</p>
    <p>Map</p>
    <p>Map outputs</p>
    <p>to Reduce tasks on</p>
    <p>this or other nodes</p>
    <p>Reduce Copy</p>
    <p>Reduce Sort</p>
    <p>Reduce Merge Copy</p>
    <p>User Reduce</p>
    <p>c a n</p>
    <p>b e</p>
    <p>in te</p>
    <p>rl e a v e d</p>
    <p>[t] Launch Reduce Task : : [t] Reduce is idling, waiting for Map outputs : : [t] Repeat until all Map outputs copied</p>
    <p>[t] Start Reduce Copy (of completed Map output) : : [t] Finish Reduce Copy</p>
    <p>[t] Reduce Merge Copy : : [t] Reduce Merge Sort : : [t] Reduce Reduce (User Reduce) : : [t] Reduce Task Done</p>
    <p>[t] Launch Map Task : : [t] Copy Map outputs : : [t] Map Task Done</p>
    <p>Incoming Map</p>
    <p>outputs for this Reduce</p>
    <p>task</p>
    <p>Reduce Idle</p>
    <p>TaskTracker Log</p>
    <p>Records events for all Maps and Reduce tasks on</p>
    <p>its node</p>
    <p>Each Map tasks control flow</p>
    <p>Each Reduce tasks control flow</p>
    <p>Map</p>
    <p>Map outputs</p>
    <p>to Reduce tasks on</p>
    <p>this or other nodes</p>
    <p>Reduce Copy</p>
    <p>Reduce Sort</p>
    <p>Reduce Merge Copy</p>
    <p>User Reduce</p>
    <p>c a</p>
    <p>n b</p>
    <p>e in</p>
    <p>te rl e</p>
    <p>a v e</p>
    <p>d</p>
    <p>[t] Launch Reduce Task : : [t] Reduce is idling, waiting for Map outputs : : [t] Repeat until all Map outputs copied</p>
    <p>[t] Start Reduce Copy (of completed Map output) : : [t] Finish Reduce Copy</p>
    <p>[t] Reduce Merge Copy : : [t] Reduce Merge Sort : : [t] Reduce Reduce (User Reduce) : : [t] Reduce Task Done</p>
    <p>[t] Launch Map Task : : [t] Copy Map outputs : : [t] Map Task Done</p>
    <p>Incoming Map</p>
    <p>outputs for this Reduce</p>
    <p>task</p>
    <p>Reduce Idle</p>
    <p>TaskTracker Log</p>
    <p>Records events for all Maps and Reduce tasks on</p>
    <p>its node</p>
    <p>Each Map tasks control flow</p>
    <p>Each Reduce tasks control flow</p>
    <p>Map</p>
    <p>Map outputs</p>
    <p>to Reduce tasks on</p>
    <p>this or other nodes</p>
    <p>Reduce Copy</p>
    <p>Reduce Sort</p>
    <p>Reduce Merge Copy</p>
    <p>User Reduce</p>
    <p>c a</p>
    <p>n b</p>
    <p>e in</p>
    <p>te rl e</p>
    <p>a v e</p>
    <p>d</p>
    <p>[t] Launch Reduce Task : : [t] Reduce is idling, waiting for Map outputs : : [t] Repeat until all Map outputs copied</p>
    <p>[t] Start Reduce Copy (of completed Map output) : : [t] Finish Reduce Copy</p>
    <p>[t] Reduce Merge Copy : : [t] Reduce Merge Sort : : [t] Reduce Reduce (User Reduce) : : [t] Reduce Task Done</p>
    <p>[t] Launch Map Task : : [t] Copy Map outputs : : [t] Map Task Done</p>
    <p>Incoming Map</p>
    <p>outputs for this Reduce</p>
    <p>task</p>
    <p>Reduce Idle</p>
    <p>TaskTracker Log</p>
    <p>Records events for all Maps and Reduce tasks on</p>
    <p>its node</p>
    <p>Each Map tasks control flow</p>
    <p>Each Reduce tasks control flow</p>
    <p>Map</p>
    <p>Map outputs</p>
    <p>to Reduce tasks on</p>
    <p>this or other nodes</p>
    <p>Reduce Copy</p>
    <p>Reduce Sort</p>
    <p>Reduce Merge Copy</p>
    <p>User Reduce</p>
    <p>c a n</p>
    <p>b e</p>
    <p>in te</p>
    <p>rl e a v e d</p>
    <p>[t] Launch Reduce Task : : [t] Reduce is idling, waiting for Map outputs : : [t] Repeat until all Map outputs copied</p>
    <p>[t] Start Reduce Copy (of completed Map output) : : [t] Finish Reduce Copy</p>
    <p>[t] Reduce Merge Copy : : [t] Reduce Merge Sort : : [t] Reduce Reduce (User Reduce) : : [t] Reduce Task Done</p>
    <p>[t] Launch Map Task : : [t] Copy Map outputs : : [t] Map Task Done</p>
    <p>Incoming Map</p>
    <p>outputs for this Reduce</p>
    <p>task</p>
    <p>Reduce Idle</p>
    <p>TaskTracker Log</p>
    <p>Records events for all Maps and Reduce tasks on</p>
    <p>its node</p>
    <p>Each Map tasks control flow</p>
    <p>Each Reduce tasks control flow</p>
    <p>Map</p>
    <p>Map outputs</p>
    <p>to Reduce tasks on</p>
    <p>this or other nodes</p>
    <p>Reduce Copy</p>
    <p>Reduce Sort</p>
    <p>Reduce Merge Copy</p>
    <p>User Reduce</p>
    <p>c a n</p>
    <p>b e</p>
    <p>in te</p>
    <p>rl e a v e d</p>
    <p>[t] Launch Reduce Task : : [t] Reduce is idling, waiting for Map outputs : : [t] Repeat until all Map outputs copied</p>
    <p>[t] Start Reduce Copy (of completed Map output) : : [t] Finish Reduce Copy</p>
    <p>[t] Reduce Merge Copy : : [t] Reduce Merge Sort : : [t] Reduce Reduce (User Reduce) : : [t] Reduce Task Done</p>
    <p>[t] Launch Map Task : : [t] Copy Map outputs : : [t] Map Task Done</p>
    <p>Incoming Map</p>
    <p>outputs for this Reduce</p>
    <p>task</p>
    <p>Reduce Idle</p>
    <p>TaskTracker Log</p>
    <p>Records events for all Maps and Reduce tasks on</p>
    <p>its node</p>
    <p>Each Map tasks control flow</p>
    <p>Each Reduce tasks control flow</p>
    <p>Map</p>
    <p>Map outputs</p>
    <p>to Reduce tasks on</p>
    <p>this or other nodes</p>
    <p>Reduce Copy</p>
    <p>Reduce Sort</p>
    <p>Reduce Merge Copy</p>
    <p>User Reduce</p>
    <p>c a n</p>
    <p>b e</p>
    <p>in te</p>
    <p>rl e a v e d</p>
    <p>[t] Launch Reduce Task : : [t] Reduce is idling, waiting for Map outputs : : [t] Repeat until all Map outputs copied</p>
    <p>[t] Start Reduce Copy (of completed Map output) : : [t] Finish Reduce Copy</p>
    <p>[t] Reduce Merge Copy : : [t] Reduce Merge Sort : : [t] Reduce Reduce (User Reduce) : : [t] Reduce Task Done</p>
    <p>[t] Launch Map Task : : [t] Copy Map outputs : : [t] Map Task Done</p>
    <p>Incoming Map</p>
    <p>outputs for this Reduce</p>
    <p>taskReduce Idle</p>
    <p>TaskTracker Log</p>
    <p>Records events for all Maps and Reduce tasks on</p>
    <p>its node</p>
    <p>Each Map tasks control flow</p>
    <p>Each Reduce tasks control flow</p>
    <p>Map</p>
    <p>Map outputs</p>
    <p>to Reduce tasks on</p>
    <p>this or other nodes</p>
    <p>Reduce Copy</p>
    <p>Reduce Sort</p>
    <p>Reduce Merge Copy</p>
    <p>User Reduce</p>
    <p>c a</p>
    <p>n b</p>
    <p>e in</p>
    <p>te rl e</p>
    <p>a v e</p>
    <p>d</p>
    <p>[t] Launch Reduce Task : : [t] Reduce is idling, waiting for Map outputs : : [t] Repeat until all Map outputs copied</p>
    <p>[t] Start Reduce Copy (of completed Map output) : : [t] Finish Reduce Copy</p>
    <p>[t] Reduce Merge Copy : : [t] Reduce Merge Sort : : [t] Reduce Reduce (User Reduce) : : [t] Reduce Task Done</p>
    <p>[t] Launch Map Task : : [t] Copy Map outputs : : [t] Map Task Done</p>
    <p>Incoming Map</p>
    <p>outputs for this Reduce</p>
    <p>task</p>
    <p>Reduce Idle</p>
    <p>TaskTracker Log</p>
    <p>Records events for all Maps and Reduce tasks on</p>
    <p>its node</p>
    <p>Each Map tasks control flow</p>
    <p>Each Reduce tasks control flow</p>
    <p>Map</p>
    <p>Map outputs</p>
    <p>to Reduce tasks on</p>
    <p>this or other nodes</p>
    <p>Reduce Copy</p>
    <p>Reduce Sort</p>
    <p>Reduce Merge Copy</p>
    <p>User Reduce</p>
    <p>c a</p>
    <p>n b</p>
    <p>e in</p>
    <p>te rl e</p>
    <p>a v e</p>
    <p>d</p>
    <p>[t] Launch Reduce Task : : [t] Reduce is idling, waiting for Map outputs : : [t] Repeat until all Map outputs copied</p>
    <p>[t] Start Reduce Copy (of completed Map output) : : [t] Finish Reduce Copy</p>
    <p>[t] Reduce Merge Copy : : [t] Reduce Merge Sort : : [t] Reduce Reduce (User Reduce) : : [t] Reduce Task Done</p>
    <p>[t] Launch Map Task : : [t] Copy Map outputs : : [t] Map Task Done</p>
    <p>Incoming Map</p>
    <p>outputs for this Reduce</p>
    <p>task</p>
    <p>Reduce Idle</p>
    <p>TaskTracker Log</p>
    <p>Records events for all Maps and Reduce tasks on</p>
    <p>its node</p>
    <p>Each Map tasks control flow</p>
    <p>Each Reduce tasks control flow</p>
    <p>Map</p>
    <p>Map outputs</p>
    <p>to Reduce tasks on</p>
    <p>this or other nodes</p>
    <p>Reduce Copy</p>
    <p>Reduce Sort</p>
    <p>Reduce Merge Copy</p>
    <p>User Reduce</p>
    <p>c a n</p>
    <p>b e</p>
    <p>in te</p>
    <p>rl e a v e d</p>
    <p>[t] Launch Reduce Task : : [t] Reduce is idling, waiting for Map outputs : : [t] Repeat until all Map outputs copied</p>
    <p>[t] Start Reduce Copy (of completed Map output) : : [t] Finish Reduce Copy</p>
    <p>[t] Reduce Merge Copy : : [t] Reduce Merge Sort : : [t] Reduce Reduce (User Reduce) : : [t] Reduce Task Done</p>
    <p>[t] Launch Map Task : : [t] Copy Map outputs : : [t] Map Task Done</p>
    <p>Incoming Map</p>
    <p>outputs for this Reduce</p>
    <p>task</p>
    <p>Reduce Idle</p>
    <p>TaskTracker Log</p>
    <p>Records events for all Maps and Reduce tasks on</p>
    <p>its node</p>
    <p>Each Map tasks control flow</p>
    <p>Each Reduce tasks control flow</p>
    <p>Map</p>
    <p>Map outputs</p>
    <p>to Reduce tasks on</p>
    <p>this or other nodes</p>
    <p>Reduce Copy</p>
    <p>Reduce Sort</p>
    <p>Reduce Merge Copy</p>
    <p>User Reduce</p>
    <p>c a</p>
    <p>n b</p>
    <p>e in</p>
    <p>te rl e</p>
    <p>a v e</p>
    <p>d</p>
    <p>[t] Launch Reduce Task : : [t] Reduce is idling, waiting for Map outputs : : [t] Repeat until all Map outputs copied</p>
    <p>[t] Start Reduce Copy (of completed Map output) : : [t] Finish Reduce Copy</p>
    <p>[t] Reduce Merge Copy : : [t] Reduce Merge Sort : : [t] Reduce Reduce (User Reduce) : : [t] Reduce Task Done</p>
    <p>[t] Launch Map Task : : [t] Copy Map outputs : : [t] Map Task Done</p>
    <p>Incoming Map</p>
    <p>outputs for this Reduce</p>
    <p>task</p>
    <p>Reduce Idle</p>
    <p>TaskTracker Log</p>
    <p>Records events for all Maps and Reduce tasks on</p>
    <p>its node</p>
    <p>Each Map tasks control flow</p>
    <p>Each Reduce tasks control flow</p>
    <p>Map</p>
    <p>Map outputs</p>
    <p>to Reduce tasks on</p>
    <p>this or other nodes</p>
    <p>Reduce Copy</p>
    <p>Reduce Sort</p>
    <p>Reduce Merge Copy</p>
    <p>User Reduce</p>
    <p>c a n</p>
    <p>b e</p>
    <p>in te</p>
    <p>rl e a v e d</p>
    <p>[t] Launch Reduce Task : : [t] Reduce is idling, waiting for Map outputs : : [t] Repeat until all Map outputs copied</p>
    <p>[t] Start Reduce Copy (of completed Map output) : : [t] Finish Reduce Copy</p>
    <p>[t] Reduce Merge Copy : : [t] Reduce Merge Sort : : [t] Reduce Reduce (User Reduce) : : [t] Reduce Task Done</p>
    <p>[t] Launch Map Task : : [t] Copy Map outputs : : [t] Map Task Done</p>
    <p>Incoming Map</p>
    <p>outputs for this Reduce</p>
    <p>task</p>
    <p>Local</p>
    <p>control-flow</p>
    <p>view: state</p>
    <p>orders,</p>
    <p>durations</p>
    <p>Distributed</p>
    <p>data-flow</p>
    <p>view: transfer</p>
    <p>of data to</p>
    <p>other nodes</p>
    <p>Jiaqi Tan  December 08!12</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>&quot; SALSA: Log Analysis Technique</p>
    <p>&quot; Applying SALSA: Analyzing Hadoop Logs</p>
    <p>&quot; Use-case 1: Visualization</p>
    <p>&quot; Use-case 2: Diagnosis</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 13</p>
  </div>
  <div class="page">
    <p>Control-flow Visualization</p>
    <p>&quot; Modeled execution of Hadoop TaskTracker:</p>
    <p>state machine view of logs</p>
    <p>&quot; Can be augmented to show data-flows</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 14</p>
    <p>All Map outputs required by Reduce are now gathered</p>
    <p>All Maps and all Reduces related to</p>
    <p>this Job have completed</p>
    <p>Start of a State</p>
    <p>Within the Reduce-related State XxYyZz Within the Map-related State AaBbCc</p>
    <p>End of a State</p>
    <p>Map and Reduce tasks created as a part of the Job</p>
    <p>Map outputs required by Reduce</p>
    <p>start to become available</p>
    <p>Job</p>
    <p>Map Map</p>
    <p>ReduceIdle</p>
    <p>MapCopy</p>
    <p>ReduceCopy</p>
    <p>XxYyZz</p>
    <p>AaBbCc</p>
    <p>ReduceMergeCopy ReduceSort UserReduce</p>
    <p>ReduceCopy</p>
    <p>ReduceCopy</p>
    <p>Reduce</p>
    <p>T1 T2 T3 T4</p>
    <p>MapCopy</p>
    <p>MapCopy</p>
    <p>Required Map outputs from other nodes O</p>
    <p>n th</p>
    <p>e sa</p>
    <p>m e</p>
    <p>n o d e</p>
    <p>O n</p>
    <p>o th</p>
    <p>e r</p>
    <p>n o d e s</p>
    <p>Map output from same node (if required){</p>
    <p>{</p>
    <p>! ! ! !</p>
    <p>All Map outputs required by Reduce are now gathered</p>
    <p>All Maps and all Reduces related to</p>
    <p>this Job have completed</p>
    <p>Start of a State</p>
    <p>Within the Reduce-related State XxYyZz Within the Map-related State AaBbCc</p>
    <p>End of a State</p>
    <p>Map and Reduce tasks created as a part of the Job</p>
    <p>Map outputs required by Reduce</p>
    <p>start to become available</p>
    <p>Job</p>
    <p>Map Map</p>
    <p>ReduceIdle</p>
    <p>MapCopy</p>
    <p>ReduceCopy</p>
    <p>XxYyZz</p>
    <p>AaBbCc</p>
    <p>ReduceMergeCopy ReduceSort UserReduce</p>
    <p>ReduceCopy</p>
    <p>ReduceCopy</p>
    <p>Reduce</p>
    <p>T1 T2 T3 T4</p>
    <p>MapCopy</p>
    <p>MapCopy</p>
    <p>Required Map outputs from other nodes O</p>
    <p>n th</p>
    <p>e sa</p>
    <p>m e</p>
    <p>n o d e</p>
    <p>O n</p>
    <p>o th</p>
    <p>e r</p>
    <p>n o d e s</p>
    <p>Map output from same node (if required){</p>
    <p>{</p>
    <p>! ! ! !</p>
    <p>All Map outputs required by Reduce are now gathered</p>
    <p>All Maps and all Reduces related to</p>
    <p>this Job have completed</p>
    <p>Start of a State</p>
    <p>Within the Reduce-related State XxYyZz Within the Map-related State AaBbCc</p>
    <p>End of a State</p>
    <p>Map and Reduce tasks created as a part of the Job</p>
    <p>Map outputs required by Reduce</p>
    <p>start to become available</p>
    <p>Job</p>
    <p>Map Map</p>
    <p>ReduceIdle</p>
    <p>MapCopy</p>
    <p>ReduceCopy</p>
    <p>XxYyZz</p>
    <p>AaBbCc</p>
    <p>ReduceMergeCopy ReduceSort UserReduce</p>
    <p>ReduceCopy</p>
    <p>ReduceCopy</p>
    <p>Reduce</p>
    <p>T1 T2 T3 T4</p>
    <p>MapCopy</p>
    <p>MapCopy</p>
    <p>Required Map outputs from other nodes O</p>
    <p>n th</p>
    <p>e sa</p>
    <p>m e</p>
    <p>n o d e</p>
    <p>O n</p>
    <p>o th</p>
    <p>e r</p>
    <p>n o d e s</p>
    <p>Map output from same node (if required){</p>
    <p>{</p>
    <p>! ! ! !</p>
    <p>All Map outputs required by Reduce are now gathered</p>
    <p>All Maps and all Reduces related to</p>
    <p>this Job have completed</p>
    <p>Start of a State</p>
    <p>Within the Reduce-related State XxYyZz Within the Map-related State AaBbCc</p>
    <p>End of a State</p>
    <p>Map and Reduce tasks created as a part of the Job</p>
    <p>Map outputs required by Reduce</p>
    <p>start to become available</p>
    <p>Job</p>
    <p>Map Map</p>
    <p>ReduceIdle</p>
    <p>MapCopy</p>
    <p>ReduceCopy</p>
    <p>XxYyZz</p>
    <p>AaBbCc</p>
    <p>ReduceMergeCopy ReduceSort UserReduce</p>
    <p>ReduceCopy</p>
    <p>ReduceCopy</p>
    <p>Reduce</p>
    <p>T1 T2 T3 T4</p>
    <p>MapCopy</p>
    <p>MapCopy</p>
    <p>Required Map outputs from other nodes O</p>
    <p>n th</p>
    <p>e sa</p>
    <p>m e</p>
    <p>n o d e</p>
    <p>O n</p>
    <p>o th</p>
    <p>e r</p>
    <p>n o d e s</p>
    <p>Map output from same node (if required){</p>
    <p>{</p>
    <p>! ! ! !</p>
    <p>All Map outputs required by Reduce are now gathered</p>
    <p>All Maps and all Reduces related to</p>
    <p>this Job have completed</p>
    <p>Start of a State</p>
    <p>Within the Reduce-related State XxYyZz Within the Map-related State AaBbCc</p>
    <p>End of a State</p>
    <p>Map and Reduce tasks created as a part of the Job</p>
    <p>Map outputs required by Reduce</p>
    <p>start to become available</p>
    <p>Job</p>
    <p>Map Map</p>
    <p>ReduceIdle</p>
    <p>MapCopy</p>
    <p>ReduceCopy</p>
    <p>XxYyZz</p>
    <p>AaBbCc</p>
    <p>ReduceMergeCopy ReduceSort UserReduce</p>
    <p>ReduceCopy</p>
    <p>ReduceCopy</p>
    <p>Reduce</p>
    <p>T1 T2 T3 T4</p>
    <p>MapCopy</p>
    <p>MapCopy</p>
    <p>Required Map outputs from other nodes O</p>
    <p>n th</p>
    <p>e sa</p>
    <p>m e</p>
    <p>n o d e</p>
    <p>O n</p>
    <p>o th</p>
    <p>e r</p>
    <p>n o d e s</p>
    <p>Map output from same node (if required){</p>
    <p>{</p>
    <p>! ! ! !</p>
    <p>Time</p>
  </div>
  <div class="page">
    <p>Data-flow Visualization</p>
    <p>&quot; Aggregate DataNode data-flows</p>
    <p>&quot; Each node: one DataNode</p>
    <p>&quot; Each edge: annotated with number of blocks</p>
    <p>flowing</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 15</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>&quot; SALSA: Log Analysis Technique</p>
    <p>&quot; Applying SALSA: Analyzing Hadoop Logs</p>
    <p>&quot; Use-case 1: Visualization</p>
    <p>&quot; Use-case 2: Diagnosis</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 16</p>
  </div>
  <div class="page">
    <p>Durations of States</p>
    <p>&quot; Expressing aggregate control-flow: Build a</p>
    <p>histogram of state-durations for each node</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 17</p>
    <p>Histogram (distributions) of durations of the</p>
    <p>WriteBlock state over a 30-second window</p>
    <p>! &quot;!! #!!! #&quot;!! !</p>
    <p>!$!&quot;</p>
    <p>!$#</p>
    <p>!$#&quot;</p>
    <p>!$%</p>
    <p>!$%&quot;</p>
    <p>&amp;'(')*+,-('./0*12&amp;3</p>
    <p>N o</p>
    <p>rm a li z e d c</p>
    <p>o u n ts</p>
    <p>( to</p>
    <p>ta l 1 .0</p>
    <p>)</p>
  </div>
  <div class="page">
    <p>Intuition: Peer Comparison</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 18</p>
    <p>&quot; In fault-free conditions, durations of a state</p>
    <p>are similar across nodes</p>
    <p>&quot; Faulty nodes: durations of the state are</p>
    <p>different than non-faulty nodes</p>
    <p>Faulty node</p>
    <p>! &quot;!! #!!! #&quot;!! !</p>
    <p>!$!&quot;</p>
    <p>!$#</p>
    <p>!$#&quot;</p>
    <p>!$%</p>
    <p>!$%&quot;</p>
    <p>&amp;'(')*+,-('./0*12&amp;3</p>
    <p>+.&amp;'-.5,'./0*('* 8(,6'!8-))*0/+)</p>
    <p>! &quot;!! #!!! #&quot;!! !</p>
    <p>!$!&quot;</p>
    <p>!$#</p>
    <p>!$#&quot;</p>
    <p>!$%</p>
    <p>!$%&quot;</p>
    <p>&amp;'(')*+,-('./0*12&amp;3 4 -/ 5 ( 5 .6 .' 7 *+ ) 0 &amp;. '7</p>
    <p>+.&amp;'-.5,'./0*('* 8(,6'!8-))*0/+)</p>
    <p>Histograms (distributions) of durations of the</p>
    <p>WriteBlock state over a 30-second window</p>
    <p>Normal node Normal node</p>
    <p>N o</p>
    <p>rm a</p>
    <p>li z e d c</p>
    <p>o u n ts</p>
    <p>( to</p>
    <p>ta l 1 .0</p>
    <p>)</p>
    <p>N o</p>
    <p>rm a li z e</p>
    <p>d c</p>
    <p>o u n ts</p>
    <p>( to</p>
    <p>ta l 1 .0</p>
    <p>)</p>
    <p>N o</p>
    <p>rm a li z e</p>
    <p>d c</p>
    <p>o u n ts</p>
    <p>( to</p>
    <p>ta l 1 .0</p>
    <p>)</p>
  </div>
  <div class="page">
    <p>Diagnosis Algorithm</p>
    <p>&quot; Diagnosis metrics: State durations of:</p>
    <p>&quot; TaskTracker: Map, ReduceMergeCopy!</p>
    <p>&quot; DataNode: ReadBlock, WriteBlock!</p>
    <p>&quot; Build a histogram of durations per node</p>
    <p>&quot; One histogram in every window</p>
    <p>&quot; Compare histograms across nodes</p>
    <p>&quot; Compute statistical measure of distance (Jensen</p>
    <p>Shannon Divergence) between histograms</p>
    <p>&quot; Indict nodes whose histograms have distances</p>
    <p>greater than threshold to more than half the other</p>
    <p>nodes</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 19</p>
  </div>
  <div class="page">
    <p>Experimentation</p>
    <p>&quot; Hadoop 0.12.3 cluster</p>
    <p>&quot; 5-slaves, 1-master, identically configured nodes</p>
    <p>&quot; Workloads:</p>
    <p>&quot; RandWriter: writes 32GB random data to disk</p>
    <p>&quot; Sort: sorts 3GB of records of random data</p>
    <p>&quot; Nutch: distributed web crawler for Hadoop</p>
    <p>&quot; Data Collection</p>
    <p>&quot; Hadoop logs harvested and processed offline</p>
    <p>&quot; Faults Injected: External resource hogs</p>
    <p>&quot; Disk Hog, CPU Hog</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 20</p>
  </div>
  <div class="page">
    <p>Selected Diagnosis Results</p>
    <p>&quot; Different states effective at diagnosing</p>
    <p>different classes of faults</p>
    <p>&quot; Dependent on type of activity of state</p>
    <p>&quot;Map state: effective for CPU and Disk Hogs</p>
    <p>&quot; (TP &gt; 0.8, FP &lt; 0.25)</p>
    <p>&quot;ReduceMergeCopy: primarily disk activity</p>
    <p>&quot; Disk Hog: TP = 1.0, FP &lt; 0.05</p>
    <p>&quot;Less effective on CPU-related issues</p>
    <p>&quot; CPU Hog: TP &gt; 0.3, FP &lt; 0.15</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 21</p>
    <p>TP = True-positive rate [0.0,1.0]</p>
    <p>FP = False-positive rate [0.0,1.0]</p>
    <p>Perfect diagnosis: TP=1.0, FP=0.0</p>
  </div>
  <div class="page">
    <p>Correlated Fault-Manifestations</p>
    <p>&quot; Correlated fault-manifestations</p>
    <p>&quot; Fault originates on one node</p>
    <p>&quot; Other non-faulty nodes exhibit manifestations</p>
    <p>&quot; Symmetric behavioral change: need technique</p>
    <p>other than peer-comparison</p>
    <p>&quot; Example: Disk Hog injected on one node</p>
    <p>&quot; Reads from affected node slowed down</p>
    <p>&quot; Show up as slower reads on other nodes</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 22</p>
    <p>Node A</p>
    <p>Slow</p>
    <p>Disk</p>
    <p>Node B</p>
    <p>Remote read</p>
    <p>Origin</p>
    <p>of fault</p>
    <p>Correlated-fault</p>
    <p>manifestation</p>
  </div>
  <div class="page">
    <p>Data-flow Augmented Diagnosis</p>
    <p>&quot; Key idea:</p>
    <p>&quot; Non-faulty nodes must somehow interact with</p>
    <p>faulty node for fault-manifestation to spread</p>
    <p>&quot; SALSA extracts data-flow from logs</p>
    <p>&quot; Localizing correlated fault-manifestations</p>
    <p>&quot; Compare nodes histogram of phase durations</p>
    <p>with its own past histograms</p>
    <p>&quot; Identify outliers in current histogram</p>
    <p>&quot; If majority of outlier phases associated with single</p>
    <p>node, indict that node</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 23</p>
  </div>
  <div class="page">
    <p>Historical Comparison</p>
    <p>&quot; Detect outlier phases as compared to past</p>
    <p>&quot; Indict node associated with many outliers</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 24</p>
    <p>Histograms (distributions) of durations of the</p>
    <p>ReadBlock phase over a 30-second window</p>
    <p>x 10 4</p>
    <p>state duration (ms)</p>
    <p>p ro</p>
    <p>b a b</p>
    <p>il it</p>
    <p>y d</p>
    <p>e n</p>
    <p>si ty outliersOutliers</p>
    <p>N o rm</p>
    <p>a li z e d c</p>
    <p>o u n ts</p>
    <p>( to</p>
    <p>ta l 1 .0</p>
    <p>)</p>
  </div>
  <div class="page">
    <p>Correlated Fault-Manifestation: Results</p>
    <p>&quot; Improved Disk Hog diagnosis using</p>
    <p>ReadBlock on Sort workload</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 25</p>
    <p>Control-flow</p>
    <p>Diagnosis</p>
    <p>Control-flow +</p>
    <p>Data-flow</p>
    <p>Diagnosis</p>
    <p>True-positive Rate</p>
    <p>False-positive Rate</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>&quot; SALSA: Log Analysis Technique</p>
    <p>&quot; Extract state-machine views of execution</p>
    <p>&quot; Augment analysis with application semantics</p>
    <p>&quot; Provides control-flow and data-flow views</p>
    <p>&quot; Applying SALSA: Analyzing Hadoop Logs</p>
    <p>&quot; Use-case 1: Visualization</p>
    <p>&quot; Use-case 2: Diagnosis</p>
    <p>&quot; Peer comparison of state durations for Hadoop</p>
    <p>&quot; Detected resource hogs</p>
    <p>&quot; Detected source of correlated-fault manifestation</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 26</p>
  </div>
  <div class="page">
    <p>Reaching us</p>
    <p>&quot; Our Hadoop diagnosis efforts:</p>
    <p>&quot; ASDF: Automated, Online Fingerpointing for</p>
    <p>Hadoop: CMU-PDL-08-104</p>
    <p>&quot; Ganesha: Black-box Fault Diagnosis for</p>
    <p>MapReduce Environments: CMU-PDL-08-112, Also a poster at SysML 08: Come talk to us!</p>
    <p>&quot; SALSA: Analyzing Logs as State Machines:</p>
    <p>Longer version as CMU-PDL-08-111</p>
    <p>&quot; My email: jiaqit at andrew dot cmu dot edu</p>
    <p>&quot; Our website:</p>
    <p>http://www.ece.cmu.edu/~fingerpointing</p>
    <p>Jiaqi Tan  December 08!http://www.pdl.cmu.edu/ 27</p>
  </div>
</Presentation>
