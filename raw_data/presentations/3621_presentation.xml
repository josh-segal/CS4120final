<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>SEAL1:Mitigating Attacks on Encrypted Databases via Adjustable Leakage</p>
    <p>Ioannis Demertzis</p>
    <p>yannis@umd.edu University of Maryland</p>
    <p>Saurabh Shintre NortonLifeLock Research Group</p>
    <p>saurabh.shintre@nortonlifelock.com</p>
    <p>Charalampos Papamanthou</p>
    <p>cpap@umd.edu University of Maryland</p>
    <p>Dimitrios Papadopoulos HKUST</p>
    <p>dipapado@cse.ust.hk</p>
  </div>
  <div class="page">
    <p>What is Searchable Encryption (SE)? Client</p>
    <p>+</p>
    <p>+</p>
    <p>Untrusted Cloud</p>
    <p>T1 T2</p>
    <p>TN</p>
    <p>John Smith CMU $3,000</p>
    <p>Alice Lu UCLA $4,000</p>
    <p>...</p>
    <p>Bruce Don UMD $2,000</p>
    <p>T1 T2</p>
    <p>TN</p>
    <p>John Smith CMU $3,000</p>
    <p>Alice Lu UCLA $4,000</p>
    <p>...</p>
    <p>Bruce Don UMD $2,000</p>
  </div>
  <div class="page">
    <p>What is Searchable Encryption (SE)? Client</p>
    <p>+</p>
    <p>Untrusted Cloud</p>
    <p>T1 T2</p>
    <p>TN</p>
    <p>John Smith CMU $3,000</p>
    <p>Alice Lu UCLA $4,000</p>
    <p>...</p>
    <p>Bruce Don UMD $2,000</p>
    <p>search query: Bruce</p>
    <p>Search pattern: whether a search query is repeated</p>
    <p>Access pattern: encrypted tuples that satisfy the search query</p>
    <p>Leakage is the amount of information that the untrusted cloud learns ?</p>
    <p>Setup leakage: total leakage prior to query execution, e.g. size of the encrypted database</p>
  </div>
  <div class="page">
    <p>What is Searchable Encryption (SE)? Client</p>
    <p>+</p>
    <p>Untrusted Cloud</p>
    <p>T1 T2</p>
    <p>TN</p>
    <p>John Smith CMU $3,000</p>
    <p>Alice Lu UCLA $4,000</p>
    <p>...</p>
    <p>Bruce Don UMD $2,000</p>
    <p>search query: Bruce</p>
    <p>Search pattern: whether a search query is repeated</p>
    <p>Access pattern: encrypted tuples that satisfy the search query</p>
    <p>Security (informal): The adversary does not learn anything beyond the above leakages!</p>
    <p>?</p>
    <p>Volume pattern: result size</p>
    <p>Overlapping pattern: the tuple overlaps between previous queries</p>
    <p>Setup leakage: total leakage prior to query execution, e.g. size of the encrypted database</p>
  </div>
  <div class="page">
    <p>Keyword/Email Search</p>
    <p>Attacks on SE Search/ Overlapping</p>
    <p>Pattern +</p>
    <p>Volume Pattern</p>
    <p>Search/ Overlapping Volume Pattern</p>
    <p>Islam et al. NDSS 2012 Cash et al. CCS 2015</p>
    <p>Lacharit et al. S&amp;P 2018 Zhang et al. USENIX 2016 Kellaris et al. CCS 2016</p>
    <p>Grubbs et al. CCS 2018</p>
    <p>Keyword/Email Search</p>
    <p>Range Search</p>
    <p>Dautrich et al. EDBT13 Islam et al. CODAPSY14 Kellaris et al. CCS 2016</p>
    <p>Lacharite et al. S&amp;P 2018 Grubbs et al. S&amp;P 2019</p>
    <p>Range Search</p>
    <p>Assume that the adversary knows a fraction N (  [0,1]) of the plaintext input</p>
    <p>kNN queries</p>
    <p>Kornaropoulos et al. S&amp;P 2019</p>
    <p>Kornaropoulos et al. S&amp;P 2020</p>
  </div>
  <div class="page">
    <p>Keyword/Email Search</p>
    <p>Attacks on SE Search/ Overlapping</p>
    <p>Pattern +</p>
    <p>Volume Pattern</p>
    <p>Search/ Overlapping</p>
    <p>Islam et al. NDSS 2012 Cash et al. CCS 2015</p>
    <p>Zhang et al. USENIX 2016Keyword/Email Search</p>
    <p>Range Search</p>
    <p>Dautrich et al. EDBT13 Islam et al. CODAPSY14 Kellaris et al. CCS 2016</p>
    <p>Lacharite et al. S&amp;P 2018 Grubbs et al. S&amp;P 2019</p>
    <p>Assume that the adversary knows a fraction N (  [0,1]) of the plaintext input</p>
    <p>kNN queries</p>
    <p>Kornaropoulos et al. S&amp;P 2019</p>
    <p>Volume Pattern</p>
    <p>Lacharit et al. S&amp;P 2018 Kellaris et al. CCS 2016</p>
    <p>Grubbs et al. CCS 2018</p>
    <p>Range Search</p>
    <p>Kornaropoulos et al. S&amp;P 2020</p>
    <p>Limitations of prior attacks: i) Do not attack state-of-the-art schemes (e.g., range attacks) ii) Assume that the attacker knows a great percentage of the input</p>
    <p>distribution iii) Assume that the query distribution is known to the attacker iv) Assume that the input database has a specific structure</p>
  </div>
  <div class="page">
    <p>Keyword/Email Search</p>
    <p>Attacks on SE Search/ Overlapping</p>
    <p>Pattern +</p>
    <p>Volume Pattern</p>
    <p>Search/ Overlapping</p>
    <p>Islam et al. NDSS 2012 Cash et al. CCS 2015</p>
    <p>Zhang et al. USENIX 2016Keyword/Email Search</p>
    <p>Range Search</p>
    <p>Dautrich et al. EDBT13 Islam et al. CODAPSY14 Kellaris et al. CCS 2016</p>
    <p>Lacharite et al. S&amp;P 2018 Grubbs et al. S&amp;P 2019</p>
    <p>Assume that the adversary knows a fraction N (  [0,1]) of the plaintext input</p>
    <p>kNN queries</p>
    <p>Kornaropoulos et al. S&amp;P 2019</p>
    <p>?? Defenses ?? Volume Pattern</p>
    <p>Lacharit et al. S&amp;P 2018 Kellaris et al. CCS 2016</p>
    <p>Grubbs et al. CCS 2018</p>
    <p>Range Search</p>
    <p>Kornaropoulos et al. S&amp;P 2020</p>
  </div>
  <div class="page">
    <p>SEAL: Searchable Encryption with Adjustable Leakage</p>
    <p>Efficiency</p>
    <p>Security</p>
    <p>High</p>
    <p>Low High</p>
    <p>SE</p>
    <p>ORAM</p>
    <p>ORAM +</p>
    <p>Worst Case Padding</p>
    <p>Hides the search and overlapping patterns</p>
    <p>Hides the volume pattern</p>
    <p>Our experimental results</p>
    <p>Applies to point, range, group-by and join queries</p>
  </div>
  <div class="page">
    <p>Contribution</p>
    <p>SEAL: Searchable Encryption with Adjustable Leakages</p>
    <p>ADJable-ORAM- (hides search and overlapping leakages)</p>
    <p>ADJable-Padding-x (hides volume leakage)</p>
    <p>Attacks for point, range, join and group-by queries</p>
    <p>First attack sketch for state-of-the-art range schemes</p>
    <p>New constructions for point, range, join, group-by queries</p>
    <p>Using SEAL as black-box</p>
    <p>New customized Range Scheme, robust against attacks</p>
    <p>Experimental adjustment of search/overlapping/volume leakages</p>
  </div>
  <div class="page">
    <p>Focus of this talk</p>
    <p>SEAL: Searchable Encryption with Adjustable Leakages</p>
    <p>ADJable-ORAM- (hides search and overlapping leakages)</p>
    <p>ADJable-Padding-x (hides volume leakage)</p>
    <p>Attacks for point, range, join and group-by queries</p>
    <p>First attack sketch for state-of-the-art range schemes</p>
    <p>New constructions for point, range, join, group-by queries</p>
    <p>Using SEAL as black-box</p>
    <p>New customized Range Scheme, robust against attacks</p>
    <p>Experimental adjustment of search/overlapping/volume leakages</p>
  </div>
  <div class="page">
    <p>Adjustable-ORAM- (ADJ-ORAM-)</p>
    <p>v1 v2 v3 v4 v5  vi vi+1  vn-1 vn</p>
    <p>Retrieve the i-th tuple without revealing the value i to the server</p>
    <p>i1 2 n</p>
    <p>logn bits</p>
    <p>ADJ-ORAM-: Leak  bits of the accessed memory locations!</p>
    <p>Client Untrusted</p>
    <p>Cloud</p>
  </div>
  <div class="page">
    <p>ADJ-ORAM-</p>
    <p>ADJ-ORAM-1</p>
    <p>ORAM-0</p>
    <p>ORAM-1</p>
    <p>(i1,v1) (i2,v2)</p>
    <p>(in,vn)</p>
    <p>(i3,v3)</p>
    <p>SB1((i)) 0</p>
    <p>ORAM</p>
    <p>(i1,v1) (i2,v2)</p>
    <p>(in,vn)</p>
    <p>(i3,v3)</p>
    <p>ADJ-ORAM-0</p>
    <p>Cost per access = (n)</p>
    <p>Cost per access = T( ) 2 n</p>
  </div>
  <div class="page">
    <p>ADJ-ORAM-</p>
    <p>(i1,v1) (i2,v2)</p>
    <p>(in,vn)</p>
    <p>(i3,v3) ORAM</p>
    <p>ADJ-ORAM-0</p>
    <p>ADJ-ORAM- ORAM-0..0</p>
    <p>ORAM-1..1</p>
    <p>SB((i))</p>
    <p>(i1,v1) (i2,v2)</p>
    <p>(in,vn)</p>
    <p>(i3,v3)</p>
    <p>Cost per access = T( ) 2 n</p>
    <p>Cost per access = (n)</p>
  </div>
  <div class="page">
    <p>Adjustable-Padding-x</p>
    <p>Observation 1: In a dataset of size N a query result can have up to N different sizes</p>
    <p>Observation 2: We can perform worst-case padding to eliminate the volume pattern leakage (1 unique size)</p>
    <p>Adjustable Padding: Pad all the query results to the closest power of x.  The server can observe up to logxN + 1 different sizes  Volume Pattern leakage loglogxN + 1 bits</p>
    <p>At the end, we pad the dataset to have x*N entries to avoid leaking extra information</p>
  </div>
  <div class="page">
    <p>SEAL(,x)</p>
    <p>Uses ADJ-ORAM-, ADJ-Padding-x and an oblivious dictionary as black-boxes</p>
    <p>Parameter  is defined in the range [0,log N]  =0 all the search/overlapping pattern bits are protected  =logN all the search/overlapping pattern bits are leaked</p>
    <p>For larger x values less volume pattern bits are leaked  x=N no volume pattern bits are leaked</p>
    <p>SEAL(,x) can be used as a building block for point/range/join/group-by queries providing a security/efficiency trade-off</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>SEAL: Searchable Encryption with Adjustable Leakages</p>
    <p>ADJable-ORAM- (hides search and overlapping pattern leakages)</p>
    <p>ADJable-Padding-x (hides volume pattern leakage)</p>
    <p>Attacks for point, range, join and group-by queries</p>
    <p>First attack-sketch for the state-of-the-art range schemes</p>
    <p>New constructions for point, range, join, group-by queries</p>
    <p>Using SEAL as black-box</p>
    <p>New more efficient customized Range Scheme robust against attacks</p>
    <p>Experimentally adjusting these leakages</p>
  </div>
  <div class="page">
    <p>Threat Model and Attacks</p>
    <p>Attackers Power: Has access to the server observing</p>
    <p>all the possible encrypted queries</p>
    <p>Has plaintext access to the input dataset</p>
    <p>Attackers Goals: (i) Decrypt the clients encrypted queries (Query Recovery attack) (ii) Decrypt the encrypted database (Database Recovery attack)</p>
    <p>Untrusted CloudClient</p>
    <p>Database Recovery-Success Rate (DRSR)= Correctly Decrypted Tuples / N</p>
    <p>Query Recovery-Success Rate (QRSR)= Correctly Decrypted Queries /|Q|</p>
  </div>
  <div class="page">
    <p>Attack Configuration</p>
    <p>Modified Frequency Analysis Attack proposed by Naveed et al. [CCS2016]</p>
    <p>1 real dataset with 6,123,276 records of reported crime incidents  22 attributes with different distributions:</p>
    <p>ID, Case Number, Date, Block, ICR, Primary Type, Description, Location Description, Arrest, Domestic, Beat, District, Ward,</p>
    <p>Community Area, FBI Code, X Coordinate, Y Coordinate, Year,  Updated On, Latitude, Longitude, Location.</p>
    <p>TPC-H Benchmark  8 tables (61 different attributes)</p>
    <p>PART, SUPPLIER,PARTSUPP, CUSTOMER, NATION, LINEITEM, REGION,ORDERS</p>
  </div>
  <div class="page">
    <p>Database Recovery Attack for Point Queries (Crime Dataset) Parameter  controls the search/overlapping pattern leakage (=[0logN]) Parameter x controls the volume pattern leakage (x=[No padding, 2,  N])</p>
  </div>
  <div class="page">
    <p>Database Recovery Attack for Join Queries Parameter  controls the search/overlapping pattern leakage (=[0logN]) Parameter x controls the volume pattern leakage (x=[No padding, 2,  N])</p>
  </div>
  <div class="page">
    <p>Adjusting Parameters  and x in Practice Finding appropriate parameter values is data-dependent:</p>
    <p>Size of the database</p>
    <p>Number of distinct values</p>
    <p>Distribution of the searchable attribute</p>
    <p>Approach: Before outsourcing the database, for a given attribute, use</p>
    <p>existing/our all-powerful attacks and try different values of a and x</p>
    <p>General Guidelines:</p>
    <p>Point/Join/Group-by queries: =logN-3 and x=4 (~32x overhead)</p>
    <p>Range Queries: x=8 (~12x overhead)</p>
  </div>
  <div class="page">
    <p>Thank you!! Questions?</p>
    <p>Efficiency</p>
    <p>Security</p>
    <p>High</p>
    <p>Low High</p>
    <p>SE</p>
    <p>ORAM</p>
    <p>ORAM +</p>
    <p>Worst Case Padding</p>
    <p>Hides the search and overlapping patterns</p>
    <p>Hides the volume pattern</p>
    <p>S E A L</p>
  </div>
</Presentation>
