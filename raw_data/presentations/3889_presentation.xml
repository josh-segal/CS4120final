<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Automatically Generating Predicates and Solutions for Configuration Troubleshooting</p>
    <p>* Ya-Yunn Su NEC Laboratories</p>
    <p>America</p>
    <p>Jason Flinn University of</p>
    <p>Michigan</p>
  </div>
  <div class="page">
    <p>Troubleshooting misconfigurations is hard!</p>
    <p>Users may have to  Edit configuration files  Resolve library dependencies  Change environment variables</p>
    <p>Automated troubleshooting tools can help  Chronus: finds when a misconfiguration entered  AutoBash: automatically resolves misconfigurations  Both assume test cases or solutions exist</p>
  </div>
  <div class="page">
    <p>Current method: manual predicate creation</p>
    <p>Predicates  Test if an application works or not  Returns true/false if the test passes/fails</p>
    <p>E.g. test if an Apache Web server is working</p>
    <p>Manually writing predicates requires  Experts and time  Domain knowledge</p>
    <p>Can we automatically generate predicates? 3</p>
    <p>wget http://localhost</p>
  </div>
  <div class="page">
    <p>Limitations in existing approaches</p>
    <p>Automatic test case generation requires  Program source code or specifications</p>
    <p>Automatic solution generation requires  Golden state as a reference</p>
    <p>Users already troubleshoot misconfigurations  They try potential solutions  They test if a solution works</p>
    <p>Valuable source to generate predicates/solutions for others to use</p>
  </div>
  <div class="page">
    <p>Generating predicates from user traces</p>
    <p>Users troubleshoot using our modified shell  Our modified shell generates:</p>
    <p>Which command is a predicate  If a predicate succeeds/fails  Which commands are solutions</p>
    <p>% command A</p>
    <p>% command B</p>
    <p>% command C</p>
    <p>% command D</p>
    <p>Commands A &amp; B Predicate</p>
    <p>True or False</p>
    <p>Solution Command D</p>
    <p>test result</p>
  </div>
  <div class="page">
    <p>Goals</p>
    <p>Minimize false positives  A false positive is worse than a false negative  Aggregate across multiple user traces</p>
    <p>Be as unobtrusive as possible  Users do not need to provide extra input</p>
    <p>Generate complete predicates  Predicates may contain multiple steps</p>
  </div>
  <div class="page">
    <p>Minimizing false positives</p>
    <p>Observation: troubleshooting pattern  Users test the system state multiple times  Users rely on output to know test outcome</p>
    <p>Generate predicates following this pattern</p>
    <p>Command C0 = False Command C1 = True Time Command C Command C</p>
  </div>
  <div class="page">
    <p>Predicates  Repeated commands  Differ in more than two out of three output features</p>
    <p>Output features for a command:  exit code: the return value of a process  screen output contains error message  output set: kernel objects a command modifies</p>
    <p>Our approach</p>
  </div>
  <div class="page">
    <p>Tracking output sets</p>
    <p>Output set: kernel objects a command causally affects</p>
    <p>Command: echo hi &gt; foo</p>
    <p>echo</p>
    <p>foo</p>
    <p>create</p>
    <p>Process echo</p>
    <p>File metadata foo</p>
    <p>File content foo</p>
    <p>Directory entry foo</p>
    <p>Output set = {file foo}</p>
    <p>Output set</p>
    <p>echo exits</p>
    <p>Process forked</p>
  </div>
  <div class="page">
    <p>% cvs d /home/cvsroot import test_project cvs [import aborted]: /home/cvsroot/CVSROOT: No such file or directory</p>
    <p>% cvs d /home/cvsroot init</p>
    <p>% cvs d /home/cvsroot import test_project</p>
    <p>N test_project/testfile</p>
    <p>No conflicts created by this import</p>
    <p>Example</p>
    <p>Problem: CVS repository not initialized</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>exit code = 1</p>
    <p>% cvs d /home/cvsroot import test_project cvs [import aborted]: /home/cvsroot/CVSROOT: No such file or directory</p>
    <p>% cvs d /home/cvsroot init</p>
    <p>% cvs d /home/cvsroot import test_project</p>
    <p>N test_project/testfile</p>
    <p>No conflicts created by this import</p>
    <p>Find repeated commands</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>% cvs d /home/cvsroot import test_project cvs [import aborted]: /home/cvsroot/CVSROOT: No such file or directory</p>
    <p>% cvs d /home/cvsroot init</p>
    <p>% cvs d /home/cvsroot import test_project</p>
    <p>N test_project/testfile</p>
    <p>No conflicts created by this import</p>
    <p>Compare output features of repeated commands</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>% cvs d /home/cvsroot import test_project cvs [import aborted]: /home/cvsroot/CVSROOT: No such file or directory</p>
    <p>% cvs d /home/cvsroot init</p>
    <p>% cvs d /home/cvsroot import test_project</p>
    <p>N test_project/testfile</p>
    <p>No conflicts created by this import</p>
    <p>exit code = 0</p>
    <p>exit code = 1</p>
    <p>Output feature: exit codes differ</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>% cvs d /home/cvsroot import test_project cvs [import aborted]: /home/cvsroot/CVSROOT: No such file or directory</p>
    <p>% cvs d /home/cvsroot init</p>
    <p>% cvs d /home/cvsroot import test_project</p>
    <p>N test_project/testfile</p>
    <p>No conflicts created by this import</p>
    <p>No error message</p>
    <p>Output feature: screen outputs differ  First execution prints error message  Second execution does not contain error msg</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>% cvs d /home/cvsroot import test_project cvs [import aborted]: /home/cvsroot/CVSROOT: No such file or directory</p>
    <p>% cvs d /home/cvsroot init</p>
    <p>% cvs d /home/cvsroot import test_project</p>
    <p>N test_project/testfile</p>
    <p>No conflicts created by this import</p>
    <p>Output feature: output sets differ  First execution: output set is empty  Second execution: output set contains created files</p>
    <p>=&gt; Output set = {}</p>
    <p>=&gt; Output set = {file:/home/cvsroot/ test_project, }</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>exit code = 1</p>
    <p>% cvs d /home/cvsroot import test_project cvs [import aborted]: /home/cvsroot/CVSROOT: No such file or directory</p>
    <p>% cvs d /home/cvsroot init</p>
    <p>% cvs d /home/cvsroot import test_project</p>
    <p>N test_project/testfile</p>
    <p>No conflicts created by this import</p>
    <p>Repeated commands differ in three output features  First execution considered to be a failed predicate</p>
    <p>=&gt; predicate succeeds</p>
    <p>=&gt; predicate fails</p>
  </div>
  <div class="page">
    <p>Generating complete predicates</p>
    <p>Some predicates depend on preconditions to be executed first to work correctly</p>
    <p>user1 % cvs d /home/cvsroot import test_project</p>
    <p>user2 % cvs d /home/cvsroot checkout test_project</p>
    <p>root % usermod G cvsgroup user2</p>
    <p>user2 % cvs d /home/cvsroot checkout test_project =&gt; Predicate kkkksucceeds</p>
    <p>=&gt; Predicate fails</p>
    <p>Problem: user2 is not in CVS group</p>
    <p>Initial state: CVS repository is empty</p>
    <p>Precondition</p>
    <p>Solution</p>
    <p>How?</p>
  </div>
  <div class="page">
    <p>Causal relationships between commands</p>
    <p>foo</p>
    <p>read</p>
    <p>echo exited Output set</p>
    <p>% echo hi &gt; foo</p>
    <p>% cat foo</p>
    <p>cat</p>
    <p>File metadata foo</p>
    <p>File content foo</p>
    <p>Directory entry foo</p>
    <p>echo hi &gt; foo</p>
    <p>Process cat  cat foo causally depends on echo cat is in echos output set</p>
    <p>Output set</p>
  </div>
  <div class="page">
    <p>Applying causality to find preconditions</p>
    <p>Candidate preconditions: find  All commands a predicate depends on  All commands whose output set a predicate is in</p>
    <p>cvs co as user2</p>
    <p>succeeds</p>
    <p>cvs co as user2 fails</p>
    <p>cvs import as user1</p>
    <p>Add user2 to CVS group</p>
    <p>modifies modifies File:</p>
    <p>test_project File: /etc/</p>
    <p>group</p>
    <p>Time We also find solution!</p>
  </div>
  <div class="page">
    <p>Heuristic to differentiate them</p>
    <p>Solutions: occurred after all failed predicates  Preconditions:</p>
    <p>occurred before any failed predicate</p>
    <p>Time cvs import as user1</p>
    <p>cvs co as user2</p>
    <p>succeeds</p>
    <p>cvs co as user2 fails</p>
    <p>Add user2 to CVS group</p>
    <p>Solution Precondition</p>
    <p>File: test_project</p>
    <p>File: /etc/ group</p>
  </div>
  <div class="page">
    <p>Ranking solutions</p>
    <p>Users solve the same problem differently</p>
    <p>Goal: better solutions are ranked higher  Heuristic: solutions applied by more users are better  Aggregate solutions among traces and rank them</p>
    <p>Ex. Apache not having search permission  chmod 777 /home/USERID  chmod 755 USERID/  chmod 755 /home/USERID</p>
    <p>Different commands can be used to do the same thing.</p>
  </div>
  <div class="page">
    <p>State delta: the difference in system state caused by the execution of a command  Track output set for that command  Compute diff for each entity in the output set</p>
    <p>Solution ranking results:</p>
    <p>Group 1 (size = 2) Group 2 (size = 1)</p>
    <p>Group solutions by state delta</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Questions:  How well can we generate predicates?  How well does the solution ranking heuristic work?</p>
    <p>Methodology  Conducted a user study of user troubleshooting  Generate predicates/solutions from traces  Manually verify predicate correctness</p>
  </div>
  <div class="page">
    <p>User study procedure</p>
    <p>12 participants:  graduate students  system administrators</p>
    <p>Each given four configuration problems  Two CVS and two Apache configuration problems  Each problem runs in a virtual machine</p>
    <p>Collected traces of users troubleshooting  All commands a user typed  Collect exit code, screen output, and output set</p>
  </div>
  <div class="page">
    <p>Predicate result summary</p>
    <p>CVS problem 1</p>
    <p>CVS problem 2</p>
    <p>Apache problem 1</p>
    <p>Apache problem2</p>
    <p># of correct predicates</p>
    <p># of wrong predicates</p>
    <p>Total # of traces</p>
    <p>All correct predicates are complete  Very few wrong predicates (false positives)  Both false positives come from traces of user not solving the problem  Why were no predicates generated for some traces?</p>
  </div>
  <div class="page">
    <p>Apache problem: predicate results</p>
    <p>Problem: Apache process not having search permission on /home/USERID</p>
    <p>Solution: give /home/USERID search permission Predicates Generated Number of traces</p>
    <p>No predicate generated (User did not use repeated commands)</p>
    <p>No predicate generated (User did not fix the problem)</p>
    <p>Incorrect predicate (User did not fix the problem)</p>
    <p>To minimize FP, we compare current directory and user id  User executed commands in different directories</p>
  </div>
  <div class="page">
    <p>Apache problem: predicate results</p>
    <p>Problem: Apache process not having search permission on /home/USERID</p>
    <p>Solution: give /home/USERID search permission Predicates Generated Number of traces</p>
    <p>No predicate generated (User did not use repeated commands)</p>
    <p>No predicate generated (User did not fix the problem)</p>
    <p>Incorrect predicate (User did not fix the problem)</p>
    <p>User did not fix the problem =&gt; output features did not differ</p>
  </div>
  <div class="page">
    <p>Apache problem: predicate results</p>
    <p>Problem: Apache process not having search permission on /home/USERID</p>
    <p>Solution: give /home/USERID search permission Predicates Generated Number of traces</p>
    <p>No predicate generated (User did not use repeated commands)</p>
    <p>No predicate generated (User did not fix the problem)</p>
    <p>Incorrect predicate (User did not fix the problem)</p>
    <p>Predicate: open configuration file in an editor  Could be eliminated if we asked user whether problem was fixed</p>
  </div>
  <div class="page">
    <p>Apache problem: solution ranking results</p>
    <p>Why is editing configuration file a solution?</p>
    <p>Predicate: apachectl stop  User-introduced errors in conf file caused apachectl stop fail</p>
    <p>Solution Number of Traces</p>
    <p>chmod 755 /home/USERID 2</p>
    <p>chmod R 777 USERID/ 1</p>
    <p>chmod o+rx /home/USERID 1</p>
    <p>chmod 777 /home/USERID 1</p>
    <p>vim /etc/httpd/conf/httpd.conf 1</p>
  </div>
  <div class="page">
    <p>Future work</p>
    <p>Extend this work to handle GUI applications  Challenges:</p>
    <p>identifying individual tasks, finding repeated tasks  exit code does not map to each task</p>
    <p>Advantages: more semantic information</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Automatically generate predicates and solutions from user troubleshooting traces</p>
    <p>Our approach  Minimizes false positives  Is unobtrusive to users  Generates complete predicates</p>
    <p>Thank you!</p>
  </div>
</Presentation>
