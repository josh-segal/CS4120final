<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>TrustBase Repairing and Strengthening Certificate-based Authentication</p>
    <p>Mark ONeill, Scott Heidbrink, Scott Ruoti, Jordan Whitehead, Dan Bunker,</p>
    <p>Luke Dickinson, Travis Hendershot, Joshua Reynolds, Kent Seamons, and Daniel Zappala</p>
  </div>
  <div class="page">
    <p>client</p>
  </div>
  <div class="page">
    <p>certificate validation problems</p>
  </div>
  <div class="page">
    <p>certificate authorities (CAs)</p>
    <p>generally can sign certificates for any host (Eckersley et al.)</p>
    <p>have been hacked, sometimes repeatedly (Marlinspike)</p>
    <p>can be influenced and operated by governments (Soghoian et al.)</p>
    <p>dont always follow best practices (see CNNIC)</p>
  </div>
  <div class="page">
    <p>for application developers</p>
    <p>mobile and desktop apps have validation problems  Brubaker et al., Georgiev et al., Onwuzurike et al., Fahl et al.</p>
    <p>security libraries are complicated</p>
    <p>security may not be a priority</p>
  </div>
  <div class="page">
    <p>threat model</p>
    <p>client</p>
    <p>Bad guys, Inc.</p>
  </div>
  <div class="page">
    <p>alternate and reinforcing strategies</p>
    <p>mitigate many of these issues</p>
    <p>have no common platform or API</p>
    <p>have difficulty being adopted</p>
  </div>
  <div class="page">
    <p>trust decisions are outsourced</p>
  </div>
  <div class="page">
    <p>how do we enable admins to control trust decisions for their own machines?</p>
  </div>
  <div class="page">
    <p>TrustBase</p>
    <p>motivating principles  centralize authentication as an OS service</p>
    <p>empower system admins to dictate how trust decisions are made</p>
    <p>design goals  secure all existing applications</p>
    <p>prohibit unprivileged applications from acting against administrator rules</p>
    <p>provide easy deployment of authentication systems</p>
    <p>negligible overhead</p>
  </div>
  <div class="page">
    <p>API</p>
    <p>TrustBase</p>
    <p>Transport</p>
    <p>Network</p>
    <p>Application</p>
    <p>Validation</p>
    <p>Plugins</p>
    <p>Prototypes for  Linux  Android (nonrooted)  Windows</p>
    <p>moving trust to the OS</p>
  </div>
  <div class="page">
    <p>TrustBase architecture</p>
  </div>
  <div class="page">
    <p>TrustBase architecture</p>
  </div>
  <div class="page">
    <p>traffic interception (Linux)</p>
    <p>S o</p>
    <p>ck e</p>
    <p>t A</p>
    <p>P I</p>
    <p>T C</p>
    <p>P H</p>
    <p>a n</p>
    <p>d li</p>
    <p>n g</p>
    <p>connect</p>
    <p>write send</p>
    <p>sendmsg sendmmsg</p>
    <p>read recv</p>
    <p>recvmsg recvmmsg</p>
    <p>close shutdown</p>
    <p>Handler API</p>
    <p>loadable kernel module</p>
    <p>hooks into native transport protocol functionality</p>
    <p>provides generic inspection/modification API</p>
  </div>
  <div class="page">
    <p>TrustBase architecture</p>
  </div>
  <div class="page">
    <p>TLS handler</p>
    <p>stop tracking TLS/SSL?</p>
    <p>start tracking</p>
    <p>yes</p>
    <p>no</p>
    <p>full handshake?</p>
    <p>no yes</p>
  </div>
  <div class="page">
    <p>TrustBase architecture</p>
  </div>
  <div class="page">
    <p>policy engine</p>
    <p>receives queries via Netlink</p>
    <p>implements basic CA validation</p>
    <p>aggregates decisions from plugins  necessary</p>
    <p>voting</p>
    <p>provides native API  Linux capabilities</p>
  </div>
  <div class="page">
    <p>TrustBase architecture</p>
  </div>
  <div class="page">
    <p>plugins  API allows synchronous and asynchronous plugins</p>
    <p>openssl STACK_OF(X509) or ASN.1 DER</p>
    <p>can report back yes/no/abstain/error for each chain</p>
    <p>have access to all handshake info (and more)</p>
    <p>addons  provide additional language support for plugins</p>
    <p>currently have native C and python addons</p>
    <p>API to add additional language support</p>
  </div>
  <div class="page">
    <p>included plugins and uses</p>
    <p>CA validation (builtin)</p>
    <p>certificate pinning</p>
    <p>OSCP checking</p>
    <p>CRLSet blocking</p>
    <p>DANE</p>
    <p>notary</p>
    <p>cipher suite auditor</p>
  </div>
  <div class="page">
    <p>evaluation</p>
  </div>
  <div class="page">
    <p>centralization and coverage</p>
    <p>con</p>
    <p>single point of failure</p>
    <p>pro</p>
    <p>updates are global</p>
    <p>benefit of many eyes</p>
    <p>TrustBase makes connection security an OS service, like TCP, IP</p>
  </div>
  <div class="page">
    <p>hardening</p>
    <p>unprivileged malware cannot unload interception</p>
    <p>CAP_NET_RAW is required to use raw sockets (default) and to bypass TrustBase interception</p>
    <p>CAP_NET_ADMIN required to receive and respond to queries</p>
    <p>configuration is writable only by privileged users</p>
    <p>daemons run nonroot with only required permissions</p>
  </div>
  <div class="page">
    <p>performance</p>
  </div>
  <div class="page">
    <p>future work</p>
    <p>POSIX-based secure socket API</p>
    <p>push all of TLS to admin/OS control</p>
    <p>ease developer burden further</p>
    <p>call TrustBase validation natively</p>
    <p>wouldnt this be nice?</p>
    <p>int socket = socket(PF_INET, SOCK_STREAM, IPPROTO_TLS);</p>
  </div>
  <div class="page">
    <p>trustbase lets you trust</p>
    <p>who you want</p>
    <p>how you want</p>
  </div>
  <div class="page">
    <p>Thank You</p>
    <p>source code: https://github.com/markoneill/trustbase-linux</p>
    <p>pull requests welcome!</p>
    <p>project website: https://owntrust.org</p>
    <p>contact me: mto@byu.edu</p>
    <p>thanks to our sponsors:</p>
    <p>Linux Android Win10</p>
  </div>
</Presentation>
