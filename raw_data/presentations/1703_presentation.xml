<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Remembrance: The Unbearable Sentience of Being Digital Ragib Hasan*, Radu Sion, and Marianne Winslet</p>
    <p>University of Illinois at Urbana-Champaign Stony Brook University</p>
    <p>January 4-7, 2009</p>
  </div>
  <div class="page">
    <p>What is the difference between</p>
    <p>A file, or a database tuple, is a dumb container of values Data, the robot, can remember, has sentience</p>
    <p>Data, the android from Star Trek</p>
    <p>and</p>
    <p>Data, stored in databases or file cabinets</p>
  </div>
  <div class="page">
    <p>Our Data objects suffer from Amnesia Since the early days, our data processing model has assumed data containers (tuples, files, variables) to be oblivious of their past</p>
    <p>We assume a data object to know only its present value, and not recall its old values, states, or context information</p>
  </div>
  <div class="page">
    <p>Our current data objects are not sentient  Database tuples returned in query results only</p>
    <p>show their latest values</p>
    <p>Data processing, evaluation is based on only the current state of variables</p>
    <p>Data objects do not tell us their historical states, or how they were created, processed, transmitted</p>
    <p>We cannot pick a system, turn a knob, and time-travel to 5 minutes in the past</p>
  </div>
  <div class="page">
    <p>Exploring remembrance in various forms Databases  Time-travel/Transaction time</p>
    <p>databases  Temporal SQL  Checkpointing</p>
    <p>Scientific computing  Provenance  Lineage</p>
    <p>File systems  Versioning file systems  CVS and other SCMs  WORM storage</p>
    <p>Web  WayBack archive  gMail</p>
    <p>Systems &amp; languages  Reflective systems, self-managed systems  Time traveling virtual machines</p>
  </div>
  <div class="page">
    <p>However   Most of these systems are in essence,</p>
    <p>versioning systems  Memory / history is not an intrinsic</p>
    <p>property of data  Association between a data value and its</p>
    <p>history is kept externally</p>
    <p>These solutions are also isolated, piecemeal, and glued together by our original single-valued, oblivious data paradigm</p>
  </div>
  <div class="page">
    <p>Remembrant Computing  We propose a new data paradigm, where</p>
    <p>Data objects retain their memories as an intrinsic property  History, context, temporal events can be recalled  Past (memory) and present (value) are considered as an atomic unit of</p>
    <p>data</p>
    <p>Files recall their past contents</p>
    <p>x = 5 x = 10</p>
    <p>Variables remember their past values and context</p>
    <p>Hard disk blocks recall past content</p>
    <p>Queries return tuple objects which remember their past</p>
    <p>context , value, states</p>
  </div>
  <div class="page">
    <p>Remembrant Computing  When data objects are transferred, they</p>
    <p>retain their old memories</p>
    <p>Copies retain memory of the original, along with copying context</p>
    <p>Deletions remove the value from container, but the memories may live on</p>
  </div>
  <div class="page">
    <p>But, whats the point of remembering?  Time-aware knowledge  Associative memories  More expressivity in data processing</p>
    <p>Compute based on not only present value, but historic information, derivation, lineage, provenance</p>
    <p>Mine useful patterns  Taint analysis / information flow checking  Recover from transient errors at arbitrary</p>
    <p>granularities  Time-travel seamlessly to any point in an</p>
    <p>application, system, or website</p>
  </div>
  <div class="page">
    <p>Is this possible, viable, desirable?  Physical limitations</p>
    <p>Only limited amount of memory possible in primary and secondary data storage</p>
    <p>Not all memories can be retained forever  Problem of Recursion</p>
    <p>Will the system to store memories also have its own memory objects?</p>
    <p>Performance  Handling large amount of history for every</p>
    <p>data object can cause performance bottleneck</p>
  </div>
  <div class="page">
    <p>Is this possible, viable, desirable?  Security / privacy</p>
    <p>How do we control access to old memories?  Would remembering states/values violate</p>
    <p>privacy?  Legal issues</p>
    <p>Various regulations limit how long data can be retained</p>
    <p>Privacy laws limit contextual information that can be recorded</p>
  </div>
  <div class="page">
    <p>Is this possible, viable, desirable?  Scalability: How do we recall, and when</p>
    <p>do we forget?  Remembering everything can be undesirable</p>
    <p>Some humans suffer from Hyperthymesia or total recall</p>
    <p>Too many unimportant details can overwhelm functionality</p>
    <p>How to decide what memories to forget is an issue</p>
    <p>Management, searching, indexing all need to scale with large number of memories</p>
  </div>
  <div class="page">
    <p>Where we are today   MyLifeBits:</p>
    <p>Recording all of Gordon Bells personal interactions requires 18GB/year, or 1.1 TB over a lifetime</p>
    <p>Provenance:  16% overhead in recording all information</p>
    <p>flows for files (PASS [Seltzer et al, Usenix Technical 06])</p>
    <p>3%-15% overhead in secure, tamper evident provenance for files [Hasan et al, Usenix FAST09]</p>
  </div>
  <div class="page">
    <p>Epilogue  Ability to recall the past memories, and</p>
    <p>contextual information differentiates sentient beings from simpler organisms</p>
    <p>Augmenting data objects with memory as an intrinsic property will introduce sentience for digital objects</p>
  </div>
</Presentation>
