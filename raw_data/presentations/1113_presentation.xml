<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Semantic-Driven Enforcement of Rights Delegation Policies via the Combination of Rules and Ontologies</p>
    <p>Prof.(Dr.) Yuh-Jong Hu</p>
    <p>December-13-2007</p>
    <p>hu@cs.nccu.edu.tw Emerging Network Technology(ENT) Lab.</p>
    <p>Department of Computer Science National Chengchi University, Taipei, Taiwan</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Research Goal</p>
    <p>Our Approach</p>
    <p>Related Work</p>
    <p>License Agreement for Usage (or Transfer) Rights</p>
    <p>Usage Rights Delegation</p>
    <p>A Rights Delegation Ontology</p>
    <p>Transfer Rights Delegation</p>
    <p>Prerequisites Expressions</p>
    <p>Rights Transfer Delegation Rules</p>
    <p>A Usage Rights Delegation Scenario</p>
    <p>Discussion</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>XML-based digital right expression (or preference) languages, such as ODRL, XrML, P3P, lack machine understandable formal semantics of license agreements for automatic agent processing.</p>
    <p>Generic First Order Logic (FOL) provides formal semantics for the above underlying XML-based standards but it is machine unfriendly.</p>
    <p>Several Ontologies+Rules combinations provide semantic-driven enforcement of ac</p>
    <p>cess rights control and delegation policies for the permissible service agreements but</p>
    <p>which is the right one?</p>
  </div>
  <div class="page">
    <p>Research Goal</p>
    <p>To resolve the problem of license agreements written in XML-based ODRL rights expression language that lacks of formal semantics.</p>
    <p>To construct an abstract formal semantic layer overlaid on ODRL for license agreement semantics instead of using semantic ambiguity natural language, such as English.</p>
    <p>To explore the possible semantic-driven enforcement of digital rights management (DRM) access control and delegation policies via one of the ontologies+rules combinations, i.e., SWRL.</p>
    <p>To generalize our results to other digital access rights control and delegation domains</p>
    <p>, such as privacy protection.</p>
  </div>
  <div class="page">
    <p>Our Approach</p>
    <p>Exploiting XML-based ODRL specifications, including expression language, data dictionary elements, and XML syntax.</p>
    <p>Designing rights expression and delegation ontology overlaid on ODRL specifications.</p>
    <p>Proposing usage rights and transfer rights delegation policies as SWRL rules.</p>
    <p>How about the other hybrid integration approaches, such as AL-log, CARIN, hybrid</p>
    <p>M KN F , etc instead of SWRL?</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>A Formal Foundation for ODRL [Pucella04] = pure FOL semantics</p>
    <p>A Formal Semantics for P3P [Yu04] = data-centric relational semantics</p>
    <p>Flexible Authorization Framework (FAF)[Jajodia01] = LP semantics</p>
    <p>E-P3P and its successor EPAL [Ashley03] = FAF semantics</p>
    <p>Rei, KAoS[Tonti03] = DL-based FOL semantics</p>
    <p>XACML[OASIS] = XML so no semantics</p>
  </div>
  <div class="page">
    <p>Semantic Web Well-Known Layer Cake (2007/03)</p>
  </div>
  <div class="page">
    <p>License Agreement for Usage (Transfer) Rights</p>
    <p>A license agreement indicates the policies (rules) under which a principal P rino allows another principal P rinui to use an asset r presumably owned by P rino, where P rino is an asset owner, P rinui is one of n asset users, where i  (1,    , n).</p>
    <p>A license agreement refers as a policy set showing any number of prerequisites and</p>
    <p>policies. A prerequisite is either a constraint, a requirement, or a condition. If all of</p>
    <p>the prerequisites are met, then policies say that the agreements users may perform</p>
    <p>the action for the license agreements assets.</p>
  </div>
  <div class="page">
    <p>Usage Rights Delegation</p>
    <p>We define hasU sageRights as an abstract property describing the generic usage rights for a principal x to use an asset r.</p>
    <p>The domain class of hasU sageRights property is P arty, and the range class is Asset.</p>
    <p>The domain class of delegate property is P rino and the range class is P rinu, where the delegate does have subP ropertyOf (delegateg, delegatet,    ).</p>
    <p>The delegateg represents generic usage rights delegation property and the delegatet</p>
    <p>represents rights transfer delegation property.</p>
  </div>
  <div class="page">
    <p>Usage Rights Delegation (conti.)</p>
    <p>ODRL does not enforce or mandate any policies for DRM, but provides mechanisms to express such policies.</p>
    <p>Using ODRL expression language and data dictionary elements as rights delegation ontologys entities.</p>
    <p>The class and property terms in this rights delegation ontology will be considered as</p>
    <p>antecedents or conclusion(s) in the usage and tranfer rights delegation policies (or</p>
    <p>rules) to enforce real rights delegation inference.</p>
  </div>
  <div class="page">
    <p>A Rights Delegation Ontology</p>
  </div>
  <div class="page">
    <p>A Rights Delegation Snapshot</p>
  </div>
  <div class="page">
    <p>Transfer Rights Delegation</p>
    <p>The hasT ransf erRights is an abstract property describing the transfer rights delegation of usage rights for a principal x for an asset r.</p>
    <p>The domain class of property hasT ransf erRights is P arty and the range class is Asset.</p>
    <p>P rino might use delegateg to transfer usage rights only to P rinui, where i  (1,    , n), but does not delegate his transfer rights to P rinui, where transfer rights  (hasSelltRights,    ).</p>
    <p>P rino might use delegatet property, then any one of the transfer rights permissions</p>
    <p>(hasSelltRights,    ) and usage rights can be further propagated.</p>
  </div>
  <div class="page">
    <p>Prerequisites Expressions</p>
    <p>MaxCardinality:u hasU sageCountp.Asset</p>
    <p>MaxCardinality: t hasT ransf erCountp.Asset</p>
    <p>Cardinality: =a hasP repaidp.P arty</p>
    <p>Validity of time interval T ime  (t1, t2): t1 hasDateT imep.T ime   t2 hasDateT imep.T ime</p>
  </div>
  <div class="page">
    <p>Rights Transfer Delegation Rules</p>
    <p>hasU sageRights(?x, ?r)  hasT ransf erRights(?x, ?r) = hasU sageT ransf erRights(?x, ?r)  (o1)</p>
    <p>hasU sageT ransf erRights(?x, ?r)  delegateg(?x, ?y)  hasP repaid(?y, ?a)  &lt;u hasU sageCount(?r) = hasU sageRights(?y, ?r)  (o2)</p>
    <p>hasU sageRights(?x, ?r) &lt;u hasU sageCount(?r) t1 hasDateT ime(?t)  t2 hasDateT ime(?t) = P ermitted(U sage, ?r)  (o3)</p>
    <p>hasU sageT ransf erRights(?x, ?r)  delegatet(?x, ?y)  hasP repaid(?y, ?a)  1 hasT ransf erCount(?r) = hasU sageT ransf erRights(?y, ?r)  (o4)</p>
  </div>
  <div class="page">
    <p>A Usage Rights Delegation Scenario</p>
    <p>Natural Language for license agreement:</p>
    <p>Content distributor Charlie c makes an agreement with two content consumers,</p>
    <p>Alice a and Bob b. After each paying five dollars, and then both receiving acknowl</p>
    <p>edgement from Charlie, Alice and Bob are given the usage rights and may each</p>
    <p>display an eBook asset, Harry Potter and the Deathly Hallows, up to five times. They</p>
    <p>may each print it only once. However, the total number of actions, either displays or</p>
    <p>prints done by Alice and Bob, may be at most ten. The usage rights validity period</p>
    <p>is between 2007/05/07/09:00 - 2007/05/10/24:00.</p>
  </div>
  <div class="page">
    <p>A Usage Rights Delegation Scenario</p>
    <p>Abstract Syntax for license agreement:</p>
    <p>agreement</p>
    <p>between Charlie and {Alice,Bob} about Harry Potter and the Deathly Hallows</p>
    <p>with inSequence[prePay[5.00],attribution[Charlie]]</p>
    <p>= not[and[Time &lt; 2007/05/07/09:00,Time &gt; 2007/05/10/24:00]] = with count[10] = and[forEachMember[Alice,Bob;count[5]] = display, forEachMember[Alice,Bob;count[1]] = print]</p>
  </div>
  <div class="page">
    <p>A Usage Rights Delegation Scenario</p>
    <p>First Order Logic (FOL) for license agreement:</p>
    <p>x((x = Alice  x = Bob) = t1t2(t1 &lt; t2  P aid(5, t1)  Attributed(Charlie, t2))) = t  hasDateT ime(t)  2007/05/07/09 : 00  hasDateT ime(t)  2007/05/10/24 : 00 = count(Alice, id1) + count(Alice, id2) + count(Bob, id1)</p>
    <p>+ count(Bob, id2) &lt; 10 = (count(Alice, id1) &lt; 5count(Bob, id1) &lt; 5 = Permitted(x, display, ebook))  (count(Alice, id2) &lt; 1count(Bob, id2) &lt; 1 = Permitted(x, print, ebook)))</p>
  </div>
  <div class="page">
    <p>A Usage Rights Delegation Scenario</p>
    <p>Ontologies+Rules(SWRL) for license agreement:</p>
    <p>Ontology for content distributor Charlies:</p>
    <p>hasDisplayRights v hasU sageRights hasP rintRights v hasU sageRights  (hasDisplayCount{a,b}.eBook, hasU sageCountc.eBook)  (hasP rintCount{a,b}.eBook, hasU sageCountc.eBook) {Alice, Bob} domain hasU sageRights range R1, where R1 =10 hasU sageCountc  2007/05/07/0900 hasDateT imec.T ime  2007/05/10/2400 hasDateT imec.T ime  =  = sum( 5 hasDisplayCounti.{HarryP otter}), i  {a, b}, where : hasDisplayCountc.{HarryP otter}  (c1)  =  = sum( 1 hasP rintCounti.{HarryP otter}), i  {a, b}, where : hasP rintCountc.{HarryP otter}  (c2)  = sum(, ), where  : hasU sageCountc{HarryP otter}  (c3)</p>
  </div>
  <div class="page">
    <p>A Usage Rights Delegation Scenario</p>
    <p>Ontologies+Rules(SWRL) for license agreement:</p>
    <p>Rules for content distributor Charlies:</p>
    <p>hasDisplayRights(?x, ?r)  hasSelldRights(?x, ?r) = hasDisplaySelldRights(?x, ?r)  (c4) hasP rintRights(?x, ?r)  hasSelldRights(?x, ?r) = hasP rintSelldRights(?x, ?r)  (c5) hasDisplaySelldRights(?x, ?r)  delegateg(?x, ?y)  hasP repaid(?y, ?a) = hasDisplayRights(?y, ?r)  (c6) hasP rintSelldRights(?x, ?r)  delegateg(?x, ?y)  hasP repaid(?y, ?a) = hasP rintRights(?y, ?r)  (c7)</p>
  </div>
  <div class="page">
    <p>A Usage Rights Delegation Scenario</p>
    <p>Ontologies+Rules(SWRL) for license agreement:</p>
    <p>Facts for content distributor Charlies:</p>
    <p>eBook(HarryP otter)</p>
    <p>hasDisplayRights(Charlie, HarryP otter)</p>
    <p>hasP rintRights(Charlie, HarryP otter)</p>
    <p>hasSelldRights(Charlie, HarryP otter)</p>
    <p>hasDisplaySelldRights(Charlie, HarryP otter)</p>
    <p>hasP rintSelldRights(Charlie, HarryP otter)</p>
    <p>=5 hasP repaid(Alice) hasDisplayRights(Alice, HarryP otter)  (c8) hasP rintRights(Alice, HarryP otter)  (c9)  =5 hasP repaid(Bob) hasDisplayRights(Bob, HarryP otter)  (c10) hasP rintRights(Bob, HarryP otter)  (c11)</p>
  </div>
  <div class="page">
    <p>Discussion</p>
    <p>The Pros and Cons of different license agreement expression languages:</p>
    <p>Natural Language: Pros human readable and understandable but Cons machine unfriendly, no formal semantics.</p>
    <p>Pure FOL: Pros formal and clear syntax and semantics but Cons machine unfriendly, possibly undecidable computation complexity, and policy writer (reader) needs to be a logician.</p>
    <p>Ontologies+Rules: Pros formal semantics for automatic machine processing and understanding but Cons limited expressing power, such as negation-free, functionfree, and with limited number of parameter parities.</p>
    <p>Rights Expression Languages: Pros XML-based for machine processing but</p>
    <p>Cons no formal semantics.</p>
  </div>
  <div class="page">
    <p>Policy Languages for Access Rights Permission</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>The semantic formal model for a license agreement is an ODRL-based rights delegation policy that can be enforced as a combination of ontologies and rules.</p>
    <p>A rights delegation ontology is proposed based on ODRLs expressions and data dictionary,</p>
    <p>The rights delegation policies are proposed as a set of rules for usage and transfer (or duplicate) rights delegations.</p>
    <p>A real usage rights delegation scenario is demonstrated to justify our formal semantic</p>
    <p>model.</p>
  </div>
</Presentation>
