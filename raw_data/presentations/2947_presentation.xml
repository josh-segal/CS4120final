<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Optimal Parsing Strategies for Linear Context-Free Rewriting Systems</p>
    <p>Daniel Gildea</p>
    <p>Computer Science Department</p>
    <p>University of Rochester</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>Factorization lowers rank of LCFRS rules</p>
    <p>Binarization minimizes parsing complexity</p>
    <p>Minimizing fan-out does not minimize parsing</p>
    <p>complexity</p>
  </div>
  <div class="page">
    <p>Linear Context-Free Rewriting Systems</p>
    <p>LCFRS generalizes CFG, TAG, CCG, SCFG, STAG.</p>
    <p>Productions p  P take the form:</p>
    <p>p : A  g(B1, B2, . . . , Br )</p>
    <p>where A, B1, . . . Br  VN , and g is a linear,</p>
    <p>non-erasing function</p>
    <p>g(x1,1, . . . , x1,(B1), . . . ,x1,1, . . . , x1,(Br ))</p>
    <p>= t1, . . . , t(A)</p>
    <p>(Vijay-Shankar et al. ACL 1987)</p>
  </div>
  <div class="page">
    <p>Context-Free Grammar</p>
    <p>g(xB,xC) = xBxC</p>
    <p>A  B C</p>
    <p>B</p>
    <p>C</p>
    <p>A</p>
  </div>
  <div class="page">
    <p>Tree-Adjoining Grammar</p>
    <p>B</p>
    <p>C</p>
    <p>A</p>
  </div>
  <div class="page">
    <p>Inversion Transduction Grammar</p>
    <p>B</p>
    <p>C</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>A</p>
  </div>
  <div class="page">
    <p>Synchronous Context-Free Grammar (SCFG)</p>
    <p>E</p>
    <p>D</p>
    <p>C</p>
    <p>B</p>
    <p>A</p>
  </div>
  <div class="page">
    <p>Fan-Out</p>
    <p>Number of spans in nonterminal.</p>
    <p>CFG: fan-out 1 B C</p>
    <p>A</p>
    <p>TAG: fan-out 2 B C</p>
    <p>A</p>
    <p>ITG: fan-out 2 B C</p>
    <p>A</p>
    <p>SCFG: fan-out 2 E D</p>
    <p>C</p>
    <p>B</p>
    <p>A</p>
    <p>(G) = max NG</p>
    <p>(N) (Rambow &amp; Satta, 1999)</p>
  </div>
  <div class="page">
    <p>Rank</p>
    <p>Number of nonterminals on righthand side of rule.</p>
    <p>CFG: rank 2 B C</p>
    <p>A</p>
    <p>TAG: rank 2 B C</p>
    <p>A</p>
    <p>ITG: rank 2 B C</p>
    <p>A</p>
    <p>SCFG: rank r E D</p>
    <p>C</p>
    <p>B</p>
    <p>A</p>
    <p>(G) = max PG</p>
    <p>(P)</p>
  </div>
  <div class="page">
    <p>Factorization</p>
    <p>Reduces rank</p>
    <p>E</p>
    <p>D</p>
    <p>C</p>
    <p>B</p>
    <p>A</p>
    <p>A  B C D E</p>
    <p>C</p>
    <p>B</p>
    <p>X</p>
    <p>D</p>
    <p>X</p>
    <p>Y</p>
    <p>E</p>
    <p>Y</p>
    <p>A</p>
    <p>X  B C Y  X D A  Y E</p>
  </div>
  <div class="page">
    <p>Factorization</p>
    <p>Reduces rank, may increase fan-out</p>
    <p>E</p>
    <p>D</p>
    <p>C</p>
    <p>B</p>
    <p>A</p>
    <p>C</p>
    <p>B</p>
    <p>X</p>
  </div>
  <div class="page">
    <p>Factorization Algorithms</p>
    <p>SCFG  rank 2 (Zhang et al., NAACL 2006)</p>
    <p>SCFG  minimum rank in O(n)</p>
    <p>(Zhang &amp; Gildea, SSST 2007)</p>
    <p>LCRFS fan-out 2  rank 2, fan-out 2 in O(n)</p>
    <p>(Sagot &amp; Satta, ACL 2010)</p>
    <p>LCRFS  rank 2, min fan-out in O(n)</p>
    <p>(Gomez-Rodriguez et al., NAACL 2009)</p>
  </div>
  <div class="page">
    <p>Parsing Complexity</p>
    <p>B</p>
    <p>C</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>A</p>
    <p>O(n3) O(n6)</p>
    <p>For p : A  g(B1, . . . Br ), O(n c(p))</p>
    <p>c(p) = (A) + r</p>
    <p>i =1 (Bi ) (Seki et al. 1991)</p>
  </div>
  <div class="page">
    <p>Parsing Complexity</p>
    <p>c(p) = (A) +</p>
    <p>r</p>
    <p>i =1</p>
    <p>(Bi )</p>
    <p>c(G) = max pG</p>
    <p>c(p)</p>
    <p>c(G)  ((G) + 1)(G)</p>
  </div>
  <div class="page">
    <p>Factorization</p>
    <p>Never increases parsing complexity. E</p>
    <p>D</p>
    <p>C</p>
    <p>B</p>
    <p>A</p>
    <p>C</p>
    <p>B</p>
    <p>X</p>
    <p>Binarization minimizes parsing complexity.</p>
  </div>
  <div class="page">
    <p>Among binarizations,</p>
    <p>minimizing fan-out and</p>
    <p>minimizing parsing complexity</p>
    <p>are INCONSISTENT.</p>
  </div>
  <div class="page">
    <p>Parsing complexity 14 w/ fan-out 6.</p>
    <p>Minimum fan-out among binarization = 5.</p>
  </div>
  <div class="page">
    <p>Dependency Treebank Experiments</p>
    <p>nmod sbj root vc pp nmod np tmp</p>
    <p>A hearing is scheduled on the issue today</p>
    <p>nmod  g1 g1 = A</p>
    <p>sbj  g2(nmod, pp) g2(x1,1,x2,1) = x1,1 hearing , x2,1</p>
    <p>root  g3(sbj, vc) g3(x1,1, x1,2,x2,1, x2,2) = x1,1 is x2,1x1,2x2,2</p>
    <p>vc  g4(tmp) g4(x1,1) = scheduled , x1,1</p>
    <p>pp  g5(tmp) g5(x1,1) = on x1,1</p>
    <p>nmod  g6 g6 =  the</p>
    <p>np  g7(nmod) g7(x1,1) = x1,1 issue</p>
    <p>tmp  g8 g8 =  today</p>
  </div>
  <div class="page">
    <p>Dependency Treebank Experiments</p>
    <p>Kuhlmann and Nivre (ACL 2006) define mildly</p>
    <p>non-projective dependency structures.</p>
    <p>Gomez-Rodriguez et al. (ACL 2009) define mildly</p>
    <p>ill-nested dependency structures parsed in O(n3k +4).</p>
  </div>
  <div class="page">
    <p>Treebank Parsing Complexity</p>
    <p>complexity arabic czech danish dutch german port swedish</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Parsing complexity 6= fan-out</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Parsing complexity 6= fan-out</p>
    <p>Parsing complexity = 20</p>
  </div>
  <div class="page">
    <p>Space Complexity</p>
    <p>space complexity = O(n2(G))</p>
    <p>Factorization never improves space complexity.</p>
  </div>
  <div class="page"/>
</Presentation>
