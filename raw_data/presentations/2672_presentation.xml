<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Exploring Cross-Application Cellular Traffic Optimization with Baidu TrafficGuard</p>
    <p>Zhenhua Li, Weiwei Wang, Tianyin Xu, Xin Zhong,</p>
    <p>Xiang-Yang Li, Yunhao Liu, Christo Wilson, and Ben Y. Zhao</p>
  </div>
  <div class="page">
    <p>China has the worlds largest population of mobile cellular users.</p>
    <p>Smartphone Users, 2011 -2015 (millions)</p>
    <p>China USA</p>
    <p>Source: www.eMarketer.com</p>
  </div>
  <div class="page">
    <p>Chinas mobile users have notably small cellular data plan.</p>
    <p>Monthly data plan of Chinas cellular users (2015)</p>
    <p>Source: iiMedia Research</p>
  </div>
  <div class="page">
    <p>Traffic overage is pervasive in China.</p>
    <p>Data plan status (2015)</p>
    <p>Severe (25.8%)</p>
    <p>Slight (33.3%)</p>
    <p>Not at all (23.7%)</p>
    <p>Balanced (15.1%)</p>
    <p>Unknown(2.1%)</p>
    <p>Source: iiMedia Research</p>
  </div>
  <div class="page">
    <p>Efforts towards optimizing mobile traffic</p>
    <p>Application-specific data compression</p>
    <p>Flywheel: Googles data compression proxy (NSDI15)</p>
    <p>Chrome browser Flywheel HTTP sites</p>
    <p>transcode images to the WebP format  minify and gzip text content</p>
  </div>
  <div class="page">
    <p>Mobile web browser traffic is only a (small) portion of todays cellular traffic.</p>
  </div>
  <div class="page">
    <p>Baidu TrafficGuard</p>
    <p>Optimizing cross-app cellular traffic - data compression</p>
    <p>- content validation</p>
    <p>- cross-app caching</p>
    <p>Filtering out unwanted traffic - malicious/ads/overnight traffic</p>
    <p>Two years of deployment experience - 10 millions of users &amp; 0.2 millions of active users daily</p>
    <p>- support all Android 4.0+ devices</p>
  </div>
  <div class="page">
    <p>Backend</p>
    <p>Proxy Software</p>
    <p>middlebox +</p>
    <p>TG mobile app</p>
    <p>TrafficGuard Overview</p>
  </div>
  <div class="page">
    <p>Backend</p>
    <p>Proxy Software</p>
    <p>middlebox +</p>
    <p>TG mobile app</p>
    <p>TrafficGuard Overview</p>
    <p>In China, HTTP requests dominate the mobile web requests (80%).</p>
    <p>Handle all cellular traffic across all apps</p>
    <p>Filter out unwanted traffic (e.g., malicious)</p>
  </div>
  <div class="page">
    <p>TG mobile app (client-side support)</p>
    <p>Customized VPN</p>
    <p>- based on TUN</p>
    <p>- manipulate layer-3 packets at user space</p>
    <p>- no root privilege required</p>
    <p>Cooperation w/ the backend</p>
    <p>- Local filter for malicious links</p>
    <p>- Value-based cross-app caching</p>
    <p>Apps</p>
    <p>TCP/IP</p>
    <p>TUN</p>
    <p>NIC</p>
    <p>Cellular network</p>
    <p>User space</p>
    <p>Kernel</p>
  </div>
  <div class="page">
    <p>Backend: web proxy + software middleboxes</p>
    <p>Traffic filtering*</p>
    <p>Content validation</p>
    <p>Cross-app caching*</p>
    <p>Data compression</p>
    <p>Traffic reduction mechanisms</p>
    <p>*cooperate w/ the client-side TG mobile app</p>
  </div>
  <div class="page">
    <p>Backend: web proxy + software middleboxes</p>
    <p>Traffic filtering*</p>
    <p>Content validation</p>
    <p>Cross-app caching*</p>
    <p>Data compression</p>
    <p>Traffic reduction mechanisms</p>
    <p>*cooperate w/ the client-side TG mobile app</p>
  </div>
  <div class="page">
    <p>Data compression</p>
    <p>Characteristics of HTTP content types</p>
    <p>Content Type % HTTP Requests % HTTP Traffic Size (KB)</p>
    <p>Median Mean</p>
    <p>Text 49.0% 15.7% 0.2 2.2</p>
    <p>Image 32.0% 71.0% 5.7 15.5</p>
    <p>Octet-stream 10.0% 5.5% 0.4 3.8</p>
    <p>Zip 8.1% 5.1% 0.5 4.3</p>
    <p>Audio &amp; video 0.03% 2.6% 407 614</p>
    <p>Other 0.87% 0.1% 0.3 0.7</p>
    <p>*Text: HTML, CSS, JSON, XML, JS, etc</p>
  </div>
  <div class="page">
    <p>Text compression</p>
    <p>Text compression is not worthwhile.  very small in size (mean: 0.2KB)</p>
    <p>reduce HTTP traffic by 1.4%</p>
    <p>considerable computation overhead at both client and cloud side.</p>
    <p>TrafficGuard does not compress text objects.</p>
  </div>
  <div class="page">
    <p>Image compression</p>
    <p>71% of HTTP traffic are images, and 40% of these images are oversized.</p>
    <p>Challenges:  cannot transcode all the images to WebP (Flywheels</p>
    <p>approach) because not all existing apps support WebP</p>
    <p>cannot use WebP as the transfer format as the client-side transcoding overhead is not acceptable</p>
    <p>cannot simply rescale images which may distort UI layout and degrade UX</p>
  </div>
  <div class="page">
    <p>Image compression</p>
    <p>QF 30 15</p>
    <p>JPEG: 500375</p>
    <p>Adjusting the quality of the images by tuning QF (Quality Factors) of JPEG images</p>
  </div>
  <div class="page">
    <p>Image compression</p>
    <p>QF 30 15</p>
    <p>JPEG: 500375</p>
    <p>Median QF = 80</p>
    <p>Adjusting the quality of the images by tuning QF (Quality Factors) of JPEG images</p>
  </div>
  <div class="page">
    <p>Image compression</p>
    <p>Adjusting the quality of the images by tuning QF (Quality Factors) of JPEG images</p>
    <p>categorize images into Large, Medium, Small &amp; Tiny - based on the Ziproxy standard</p>
    <p>tune QF to balance compression ratio and quality - quality is measured by SSIM (Structural Similarity)</p>
    <p>transcode PNG &amp; GIF to JPEG if possible - 59.9% of the images are in JPEG - 8-10 times smaller overhead than WebP transcoding</p>
  </div>
  <div class="page">
    <p>Traffic filtering</p>
    <p>Two-lever filtering cooperated by both the clientside mobile app and the backend</p>
    <p>malicious &amp; ad</p>
    <p>links are filtered</p>
    <p>out locally.</p>
  </div>
  <div class="page">
    <p>ORIGINAL TRAFFIC FILTERING</p>
    <p>CONTENT VALIDATION</p>
    <p>IMAGE COMPRESSION</p>
    <p>VALUE-BASED WEB CACHING</p>
    <p>HTTP HTTPS</p>
    <p>Total cellular traffic reduction</p>
  </div>
  <div class="page">
    <p>Per-user traffic saving</p>
    <p>Saving ratio of users cellular traffic</p>
    <p>C D</p>
    <p>F</p>
    <p>Reduce overage instances by 10.7 times!!</p>
  </div>
  <div class="page">
    <p>Latency penalty &amp; battery overhead</p>
    <p>End-to-end latency penalty - worst case: 474ms - mean: 282ms &amp; median: 53ms</p>
    <p>Battery consumption - negligible (93mW on average)</p>
    <p>- sometimes reduce battery consumption</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>TrafficGuard achieves 36% of cellular traffic reduction across different apps without degrading user experiences.</p>
    <p>Baidu is working on integrating TrafficGuard with cellular carrier infrastructure, which can further reduce end-to-end latency.</p>
  </div>
</Presentation>
