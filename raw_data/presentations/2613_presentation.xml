<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>C3: INTERNET-SCALE CONTROL PLANE FOR VIDEO QUALITY OPTIMIZATION Aditya Ganjam, Jibin Zhan, Xi Liu, Faisal Siddiqi, Conviva Junchen Jiang, Vyas Sekar, Carnegie Mellon University Ion Stoica, University of California, Berkeley, Conviva Hui Zhang, Carnegie Mellon University, Conviva</p>
  </div>
  <div class="page">
    <p>Need to optimize video quality through the lifetime of a session 2</p>
    <p>HIGH EXPECTATIONS ON VIDEO QUALITY</p>
    <p>Interruption-free</p>
    <p>High bitrate/resolution</p>
    <p>Fast start</p>
    <p>Television</p>
  </div>
  <div class="page">
    <p>WHERE TO IMPLEMENT OPTIMIZATION?</p>
    <p>Multiple choices for actuation  Client-side actuation most favorable to incremental deployment</p>
    <p>CDN 1&quot;</p>
    <p>Backbone Network&quot;</p>
    <p>CDN 2&quot;</p>
    <p>ISP 1&quot; Video Origin &quot;</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>MANY CHOICES &amp; NEED QUICK DECISION Optimization parameters</p>
    <p>Bitrate x CDN (over time) Existing approaches are reactive, apply a probe and update method</p>
    <p>Too slow to find optimal choice</p>
    <p>Resource</p>
    <p>Bitrate</p>
    <p>Time</p>
    <p>Bitrate</p>
    <p>CDN</p>
  </div>
  <div class="page">
    <p>Logically Centralized Controller</p>
    <p>Prediction model based</p>
    <p>on global view</p>
    <p>Per-client decisions in</p>
    <p>real-time</p>
    <p>CENTRALIZED PREDICTIVE CONTROL Ideal solution</p>
    <p>Predict outcome of each parameter choice in real-time</p>
    <p>Continuously select optimal choice</p>
    <p>Achieving ideal solution requires</p>
    <p>Collect global quality information  Build a prediction model  Make per-client predictions and</p>
    <p>parameter decisions at Internet-scale 5</p>
    <p>Quality Information</p>
    <p>Decisions Sub-second</p>
    <p>response</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>CHALLENGE: CLIENT HETEROGENEITY  Strawman: implement 100 times  Heterogeneous software</p>
    <p>environments and interfaces</p>
    <p>Slow software update cycle</p>
    <p>&gt;100 unique client pla/orms</p>
    <p>Logically Centralized Controller</p>
    <p>Prediction model based</p>
    <p>on global view</p>
    <p>Per-client decisions in</p>
    <p>real-time</p>
    <p>Quality Information</p>
    <p>Decisions Sub-second</p>
    <p>response</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>DESIGN CHOICE: THIN SENSING/ACTUATION LAYER</p>
    <p>Minimal client footprint  Move computation to controller</p>
    <p>Define a narrow waist interface</p>
    <p>Logically Centralized Controller</p>
    <p>Prediction model based</p>
    <p>on global view</p>
    <p>Per-client decisions in</p>
    <p>real-time</p>
    <p>Quality Information</p>
    <p>Decisions Sub-second</p>
    <p>response</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>CHALLENGE: REAL-TIME PREDICTIONS AT INTERNET SCALE Internet scale?  Geographic scale - all continents  Network scale - all network types  Client scale  10s to 100s of</p>
    <p>millions concurrent</p>
    <p>Logically Centralized Controller</p>
    <p>Prediction model based</p>
    <p>on global view</p>
    <p>Per-client decisions in</p>
    <p>real-time</p>
    <p>Quality Information</p>
    <p>Decisions Sub-second</p>
    <p>response</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>Achieving real-time response, with the most recent global view at Internet-scale is not feasible based on todays technologies</p>
    <p>Strawman solutions  Centralized global controller</p>
    <p>not real-time  Partitioned controller</p>
    <p>no global view 9</p>
    <p>Logically Centralized Controller</p>
    <p>Prediction model based</p>
    <p>on global view</p>
    <p>Per-client decisions in</p>
    <p>real-time</p>
    <p>Quality Information</p>
    <p>Decisions Sub-second</p>
    <p>response</p>
    <p>Client</p>
    <p>CHALLENGE: REAL-TIME PREDICTIONS AT INTERNET SCALE</p>
  </div>
  <div class="page">
    <p>DESIGN CHOICE: SPLIT CONTROL PLANE</p>
    <p>Create a global prediction model in near real-time (minutes)</p>
    <p>Make per-client decisions in real-time (sub-second) based on global model and most recent per-client local information</p>
    <p>Logically Centralized Controller</p>
    <p>Prediction model based</p>
    <p>on global view</p>
    <p>Per-client decisions in</p>
    <p>real-time</p>
    <p>Quality Information</p>
    <p>Decisions Sub-second</p>
    <p>response</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>C3 ARCHITECTURE</p>
    <p>C3 Controller</p>
    <p>Decision Layer  real-time per-client decisions</p>
    <p>Modeling Layer  near real-time global prediction modeling</p>
    <p>Control Decisions</p>
    <p>Adaptor</p>
    <p>Narrow waist device API ConvivaStreamerProxy (CSP)</p>
    <p>C3 Sensing/Actuation Layer Diverse Client Platforms</p>
    <p>Narrow waist protocol Session Data Model (SDM)</p>
  </div>
  <div class="page">
    <p>C3 ARCHITECTURE</p>
    <p>C3 Controller</p>
    <p>Decision Layer  real-time per-client decisions</p>
    <p>Modeling Layer  near real-time global prediction modeling</p>
    <p>Control Decisions</p>
    <p>Adaptor</p>
    <p>Narrow waist device API ConvivaStreamerProxy (CSP)</p>
    <p>C3 Sensing/Actuation Layer Diverse Client Platforms</p>
    <p>Narrow waist protocol Session Data Model (SDM)</p>
  </div>
  <div class="page">
    <p>MOTIVATING EXAMPLE</p>
    <p>Compute Video Startup Time metric</p>
    <p>Ad start Ad end Session start Play start</p>
    <p>Startup Time1 = T(play start)  T(session start) Startup Time2 = T(play start)  T(session start)  (T(Ad end)  T(Ad start))</p>
    <p>Default Op&lt;on: Compute Video Startup Time in the client, send to controller</p>
    <p>How do we adapt to changes?</p>
  </div>
  <div class="page">
    <p>IDEA: EXPOSE LOW-LEVEL ACTIONS</p>
    <p>Stopped/</p>
    <p>Exit</p>
    <p>Player</p>
    <p>States Joining Playing Buffering Playing</p>
    <p>Network/</p>
    <p>stream</p>
    <p>connection</p>
    <p>established</p>
    <p>Video</p>
    <p>buffer</p>
    <p>filled up Video</p>
    <p>buffer</p>
    <p>empty</p>
    <p>Buffer</p>
    <p>replenished</p>
    <p>sufficiently</p>
    <p>time</p>
    <p>User</p>
    <p>action</p>
    <p>Events</p>
    <p>Player</p>
    <p>Monitoring</p>
    <p>Video download rate,</p>
    <p>Available bandwidth,</p>
    <p>Dropped frames,</p>
    <p>Frame rendering rate, etc.</p>
    <p>Metric calculation pushed to the controller  Session Data Model (SDM)  Events, States, Measurements  States  robustness to message loss</p>
  </div>
  <div class="page">
    <p>C3 ARCHITECTURE</p>
    <p>C3 Controller</p>
    <p>Decision Layer  real-time per-client decisions</p>
    <p>Modeling Layer  near real-time global prediction modeling</p>
    <p>Control Decisions</p>
    <p>Adaptor</p>
    <p>Narrow waist device API ConvivaStreamerProxy (CSP)</p>
    <p>C3 Sensing/Actuation Layer Diverse Client Platforms</p>
    <p>Narrow waist protocol Session Data Model (SDM)</p>
  </div>
  <div class="page">
    <p>Modeling Layer</p>
    <p>SDM</p>
    <p>Aggregation across Clients</p>
    <p>SPLIT CONTROL-PLANE</p>
    <p>Dual-loop control  Client-driven real-time</p>
    <p>loop (red)  Periodic global model</p>
    <p>learning and dissemination loop (blue)</p>
    <p>Intelligent Decision Layer  Per-client decisions</p>
    <p>based on global model and client quality info</p>
    <p>Decision Layer</p>
    <p>Sensing/ Actuation Layer</p>
    <p>SDM Control Decisions</p>
    <p>Metric Computation &amp;</p>
    <p>Per-client Decisions</p>
    <p>Prediction Model</p>
    <p>Prediction Model Training</p>
  </div>
  <div class="page">
    <p>WHY SPLIT CONTROL CAN ACHIEVE NEAR OPTIMAL PERFORMANCE  Domain specific insight</p>
    <p>globally optimal decisions tend to be persistent on minute-level timescales</p>
    <p>Persistence results do not hold for individual clients still need per-client up-todate state</p>
    <p>C D</p>
    <p>F</p>
    <p>Persistence(min)</p>
    <p>CP A CP B CP C</p>
    <p>Figure shows the distribu&lt;on of persistence of the best CDN for three content providers</p>
  </div>
  <div class="page">
    <p>Physical View of C3 Controller</p>
    <p>Clients</p>
    <p>Frontend Data Centers</p>
    <p>Aggregation/ Compute Cluster</p>
    <p>RESPONSIVENESS &amp; SCALE</p>
    <p>Sub-second response time  Geographically distributed</p>
    <p>decision layer  Geo-distribution using cloud</p>
    <p>Controller scale  Horizontally scaled decision</p>
    <p>layer  Burst scaling using cloud  Big-data technologies</p>
    <p>including Spark for modeling layer</p>
  </div>
  <div class="page">
    <p>FAULT TOLERANCE</p>
    <p>Decision layer gracefully degrades due to stale or missing global model</p>
    <p>Client-side failover and decision layer state reconstruction to handle instance failure</p>
    <p>Physical View of C3 Controller</p>
    <p>Clients</p>
    <p>Frontend Data Centers</p>
    <p>Aggregation/ Compute Cluster</p>
  </div>
  <div class="page">
    <p>REAL-WORLD DEPLOYMENT &amp; EVOLUTION  Earlier phases explored alternate architectures</p>
    <p>Partitioning  Heavy client (client offload of computation and decision logic)</p>
    <p>C3 platform used by premium video publishers over 8 years  Over 1 billion unique devices  Over 3 million concurrent devices during major events</p>
    <p>E.g., World Cup, Super Bowl</p>
    <p>Significant quality improvement results 20</p>
  </div>
  <div class="page">
    <p>QUALITY IMPROVEMENT: REBUFFERING</p>
    <p>Premium content publisher</p>
    <p>One month A/B test  Result: Greater</p>
    <p>then 50% reduction in Buffering Ratio</p>
    <p>uf R</p>
    <p>at io</p>
    <p>( %</p>
    <p>) Time (mm/dd/yy)</p>
    <p>Native control C3 control</p>
  </div>
  <div class="page">
    <p>QUALITY IMPROVEMENT: START FAILURES</p>
    <p>Premium content publisher</p>
    <p>One month A/B test  Result: Greater then</p>
    <p>S F</p>
    <p>( %</p>
    <p>) TIme (mm/dd/yy)</p>
    <p>Native control C3 control</p>
  </div>
  <div class="page">
    <p>QUALITY IMPROVEMENT ACROSS PROVIDERS</p>
    <p>Rebuffering Ratio improvement consistent results across 5 different content providers</p>
    <p>uf R</p>
    <p>at io</p>
    <p>( %</p>
    <p>) Content Providers</p>
    <p>Native control C3 control</p>
  </div>
  <div class="page">
    <p>LESSONS  Validates centralized control at an unprecedented scale  Reinforces the case for centralized control</p>
    <p>Drivers: client heterogeneity, global policies, real-time monitoring  Enablers: big-data, cloud, application-level resilience</p>
    <p>Unique challenges driving new ideas  Split control balances global view and real-time  Minimal client critical to handle heterogeneity</p>
    <p>Broader applicability of C3 architecture  Other applications (e.g., gaming, voice, conferencing)  Network layer control (e.g., SDN, CDN)</p>
  </div>
  <div class="page">
    <p>CONCLUSIONS  Television is coming to the Internet, high expectations on quality  Large optimization space for video quality</p>
    <p>Drives the need for a proactive approach  C3 is a centralized predictive control approach  Solves key challenges: (a) client heterogeneity, (b) Internet-scale</p>
    <p>Minimal sensing/actuation layer &amp; move all computation to the controller  Split control-plane scale-out solution exploiting application-level resilience</p>
    <p>C3 used by many content providers with quality improvement results</p>
  </div>
</Presentation>
