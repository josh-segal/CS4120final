<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>The HCl Scheduler Going all-in on Heterogeneity</p>
    <p>Michael Kaufmann, Kornilios Kourtis USENIX HotCloud17</p>
    <p>Karlsruhe Institute of Technology Institute of Telematics IBM Research - Zurich</p>
  </div>
  <div class="page">
    <p>Evolution of Clusters - Past</p>
    <p>Mostly homogeneous hardware</p>
  </div>
  <div class="page">
    <p>Evolution of Clusters</p>
    <p>Heterogeneity occurs because serversare gradually provisioned and replacedover the typical 15-year lifetime of a DC. At any point in time, a DC may host 3-5 server generations with a few hardware configurations per generation C. Delimitrou and C. Kozyrakis. Paragon: QoS-aware scheduling for heterogeneous datacenters. ACM SIGPLAN 2013.</p>
  </div>
  <div class="page">
    <p>Evolution of Clusters - Today &amp; Future</p>
    <p>The Next Platform, 2016-05-19</p>
    <p>TechCrunch, 2016-11-30</p>
    <p>TechCrunch, 2017-02-21</p>
    <p>TechGenix, 2017-06-09</p>
  </div>
  <div class="page">
    <p>What about Applications?</p>
    <p>Homogeneous View Heterogeneous View</p>
    <p>Spark stage graph of TPC-DS Query #44</p>
    <p>Applications are heterogeneous as well  Runtime and resource requirements vary  I/O volumes vary</p>
    <p>.</p>
  </div>
  <div class="page">
    <p>What about Applications?</p>
    <p>Homogeneous View Heterogeneous View</p>
    <p>Spark stage graph of TPC-DS Query #44</p>
    <p>Applications are heterogeneous as well  Runtime and resource requirements vary  I/O volumes vary</p>
    <p>.</p>
  </div>
  <div class="page">
    <p>Consequences</p>
    <p>Ignoring heterogeneity can lead to significant inefficiencies,assomeworkloadsaresensitivetohardwareconfigurations.C.DelimitrouandC.Kozyrakis. Paragon: QoS-awareschedulingforheterogeneousdatacenters. ACM SIGPLAN 2013.   We leave a lot of potential untapped, not least due to</p>
    <p>inefficient task scheduling.</p>
  </div>
  <div class="page">
    <p>The HCl Scheduler - Goals, Starting Point &amp; Approach</p>
    <p>Goals 1. Efficient utilization &amp; sharing of (heterogeneous) resources. 2. Minimize application (vs. task) runtime. 3. Reduce costs for clients and operators.</p>
    <p>Starting Point We primarily aim for maximizing scheduling quality and secondarily for maximizing scaling &amp; throughput and minimizing latency.</p>
    <p>Approach Exploitdetailedresourceandapplicationinformationinordertofind globally optimal application schedules.</p>
  </div>
  <div class="page">
    <p>The HCl Scheduler - Goals, Starting Point &amp; Approach</p>
    <p>Goals 1. Efficient utilization &amp; sharing of (heterogeneous) resources. 2. Minimize application (vs. task) runtime. 3. Reduce costs for clients and operators.</p>
    <p>Starting Point We primarily aim for maximizing scheduling quality and secondarily for maximizing scaling &amp; throughput and minimizing latency.</p>
    <p>Approach Exploitdetailedresourceandapplicationinformationinordertofind globally optimal application schedules.</p>
  </div>
  <div class="page">
    <p>The HCl Scheduler - Goals, Starting Point &amp; Approach</p>
    <p>Goals 1. Efficient utilization &amp; sharing of (heterogeneous) resources. 2. Minimize application (vs. task) runtime. 3. Reduce costs for clients and operators.</p>
    <p>Starting Point We primarily aim for maximizing scheduling quality and secondarily for maximizing scaling &amp; throughput and minimizing latency.</p>
    <p>Approach Exploitdetailedresourceandapplicationinformationinordertofind globally optimal application schedules.</p>
  </div>
  <div class="page">
    <p>Closer Look at the Problems</p>
    <p>P1. Stragglers due to h/w selection</p>
    <p>P2. Priority inversion</p>
    <p>P3. Non-beneficial stealing of preferred resources</p>
    <p>P4. Dominating I/O costs</p>
  </div>
  <div class="page">
    <p>Closer Look at the Problems</p>
    <p>P1. Stragglers due to h/w selection P2. Priority inversion</p>
    <p>P3. Non-beneficial stealing of preferred resources</p>
    <p>P4. Dominating I/O costs</p>
  </div>
  <div class="page">
    <p>Closer Look at the Problems</p>
    <p>P1. Stragglers due to h/w selection P2. Priority inversion</p>
    <p>P3. Non-beneficial stealing of preferred resources</p>
    <p>P4. Dominating I/O costs</p>
  </div>
  <div class="page">
    <p>Closer Look at the Problems</p>
    <p>P1. Stragglers due to h/w selection P2. Priority inversion</p>
    <p>P3. Non-beneficial stealing of preferred resources</p>
    <p>P4. Dominating I/O costs 6</p>
  </div>
  <div class="page">
    <p>Closer Look at the Problems</p>
    <p>P1. Stragglers due to h/w selection P2. Priority inversion</p>
    <p>P3. Non-beneficial stealing of preferred resources</p>
    <p>P4. Dominating I/O costs 6</p>
  </div>
  <div class="page">
    <p>The HCl Scheduler - Related Work</p>
    <p>Scheduler Year H/W App Task P1 P2 P3 P4 LHEFT 2010 ( ) - - ( ) Mesos 2011 ( ) - - - - - Paragon 2013 - - - -</p>
    <p>Kubernetes 2014 ( ) - ( ) - - - Tetris 2014 - ( ) ( ) ( ) - -</p>
    <p>TetriSched 2016 ( ) (-) ( ) ( ) ( ) - Graphene 2016 ( ) ( ) ( ) ( ) - ( ) Carbyne 2016 ( ) (-) - ( ) HCl 2017</p>
    <p>Heterogeneityofapplicationsandresources israrelyaprimaryconcern. 7</p>
  </div>
  <div class="page">
    <p>The HCl Scheduler - Related Work</p>
    <p>Scheduler Year H/W App Task P1 P2 P3 P4 LHEFT 2010 ( ) - - ( ) Mesos 2011 ( ) - - - - - Paragon 2013 - - - -</p>
    <p>Kubernetes 2014 ( ) - ( ) - - - Tetris 2014 - ( ) ( ) ( ) - -</p>
    <p>TetriSched 2016 ( ) (-) ( ) ( ) ( ) - Graphene 2016 ( ) ( ) ( ) ( ) - ( ) Carbyne 2016 ( ) (-) - ( ) HCl 2017</p>
    <p>Heterogeneityofapplicationsandresources israrelyaprimaryconcern. 7</p>
  </div>
  <div class="page">
    <p>The HCl Scheduler - Overview</p>
    <p>HCl combines 3 sources of information that are usually separated.</p>
    <p>Detailed Cluster Model Annotated Application DAG Performance Database Switch</p>
    <p>Intra-node I/O GPUNetwork Interface CPU</p>
    <p>N0 N1</p>
    <p>t0 t1</p>
    <p>t2 t3</p>
    <p>t4</p>
    <p>Task N0cpu N1cpu N1gpu t0 4.0s 5.0s 2.0s</p>
    <p>t1 4.0s 5.0s 2.0s</p>
    <p>t2 1.0s 1.5s</p>
    <p>t3 8.0s 10.0s 5.0s</p>
    <p>t4 1.0s 1.5s</p>
    <p>Extracted from OS / Resource Manager</p>
    <p>Extracted from App Framework (e.g. Spark)</p>
    <p>Soft/hard constraints 8</p>
  </div>
  <div class="page">
    <p>The HCl Scheduler - 10,000 Foot View</p>
  </div>
  <div class="page">
    <p>The HCl Scheduler - Heuristics</p>
    <p>DAG scheduling is an NP-complete problem, hence heuristics are necessary to reduce the cost of scheduling to desired levels.</p>
    <p>Termination*</p>
    <p>(...)  (...)</p>
    <p>(...)  (...)</p>
    <p>(...)  (...)</p>
    <p>* = Not a heuristic</p>
  </div>
  <div class="page">
    <p>Evaluation - Preliminary TPC-DS Benchmark Results (Excerpt)</p>
    <p>Single-application, model-based evaluation (extracted from Spark) on an 8 node cluster (2 fast, 6 slow nodes, factor 1.5).</p>
    <p>TPC-DS Query 41 TPC-DS Query 44</p>
    <p>% o</p>
    <p>f cr</p>
    <p>iti ca</p>
    <p>l p a</p>
    <p>th</p>
    <p>% o</p>
    <p>f cr</p>
    <p>iti ca</p>
    <p>l p a</p>
    <p>th</p>
    <p>H/W-oblivious H/W-aware HCl max depth 1 HCl max depth 2 HCl max depth 3</p>
    <p>HCl schedules are within 15% of the critical path on average.  HCl schedules are 48% shorter on average. 11</p>
  </div>
  <div class="page">
    <p>Evaluation - Preliminary TPC-DS Benchmark Results (Excerpt)</p>
    <p>Single-application, model-based evaluation (extracted from Spark) on an 8 node cluster (2 fast, 6 slow nodes, factor 1.5).</p>
    <p>TPC-DS Query 41 TPC-DS Query 44</p>
    <p>% o</p>
    <p>f cr</p>
    <p>iti ca</p>
    <p>l p a</p>
    <p>th</p>
    <p>% o</p>
    <p>f cr</p>
    <p>iti ca</p>
    <p>l p a</p>
    <p>th</p>
    <p>H/W-oblivious H/W-aware HCl max depth 1 HCl max depth 2 HCl max depth 3</p>
    <p>HCl schedules are within 15% of the critical path on average.  HCl schedules are 48% shorter on average. 11</p>
  </div>
  <div class="page">
    <p>Evaluation - Preliminary TPC-DS Benchmark Results (Excerpt)</p>
    <p>Single-application, model-based evaluation (extracted from Spark) on an 8 node cluster (2 fast, 6 slow nodes, factor 1.5).</p>
    <p>TPC-DS Query 41 TPC-DS Query 44</p>
    <p>% o</p>
    <p>f cr</p>
    <p>iti ca</p>
    <p>l p a</p>
    <p>th</p>
    <p>% o</p>
    <p>f cr</p>
    <p>iti ca</p>
    <p>l p a</p>
    <p>th</p>
    <p>H/W-oblivious H/W-aware HCl max depth 1 HCl max depth 2 HCl max depth 3</p>
    <p>HCl schedules are within 15% of the critical path on average.  HCl schedules are 48% shorter on average. 11</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Current cluster schedulers leave potential untapped.  We need to consider H/W and S/W heterogeneity in order to solve scheduling problems.</p>
    <p>The HCl Scheduler is our attempt at exploring the potential of a fully heterogeneity-aware scheduler.  Preliminary evaluation shows that we can significantly shorten schedules.</p>
    <p>Few additionail faster resources can help to speed up applications significantly.</p>
    <p>Lots of work left to be done. 12</p>
  </div>
  <div class="page">
    <p>Outlook</p>
    <p>Thank you! Questions?</p>
  </div>
  <div class="page">
    <p>Outlook</p>
    <p>Ongoing &amp; Future Work  Improve performance (heuristics &amp; implementation)  Implement multiple resources support  Integrate into distributed application framework (Apache Spark, TensorFlow)</p>
    <p>Evaluate opportunities at edge between scheduling, I/O (Crail Store integration) and H/W acceleration.</p>
  </div>
  <div class="page">
    <p>Backup</p>
  </div>
  <div class="page">
    <p>The HCl Scheduler - Example (Problem 3: Non-beneficial stealing of preferred resources)</p>
    <p>ta0</p>
    <p>ta1 ta2</p>
    <p>ta3</p>
    <p>= 2 = 2 = 1s on = 2s on</p>
    <p>Sa1</p>
    <p>ta1</p>
    <p>ta2 ta3</p>
    <p>Sa2 ta0 ta1</p>
    <p>ta2 ta3</p>
    <p>Sa3 ta0</p>
    <p>ta1</p>
    <p>ta2 ta3</p>
    <p>tb0</p>
    <p>tb1 tb2</p>
    <p>tb3</p>
    <p>= 2 = 1s on = 2s on</p>
    <p>Sb1</p>
    <p>ta0 ta1</p>
    <p>ta2 ta3 tb0</p>
    <p>tb1 tb2</p>
    <p>tb3</p>
    <p>Sb2 ta0</p>
    <p>ta1</p>
    <p>ta2 ta3 tb0</p>
    <p>tb1</p>
    <p>tb2 tb3</p>
  </div>
</Presentation>
