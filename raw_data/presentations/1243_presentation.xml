<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>OPTIMUSCLOUD: Heterogeneous</p>
    <p>Configuration Optimization for</p>
    <p>Distributed Databases in the Cloud</p>
    <p>Ashraf Mahgoub1, Alexander Medoff1 , Rakesh Kumar2, Subrata Mitra3, Ana Klimovic4, Somali Chaterji1, Saurabh Bagchi1</p>
    <p>Supported by NIH R01 AI123037-01 (2016-21), WHIN center (2018-22)</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Introduction</p>
    <p>Challenges in Key-Value Stores Online Tuning</p>
    <p>Dynamic Workloads</p>
    <p>Prior work</p>
    <p>Proposed Approach</p>
    <p>Heterogeneous Configurations Benefits</p>
    <p>Use cases and Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>OPTIMUSCLOUDs Goal: Achieving cost and performance</p>
    <p>efficiency for cloud-hosted distributed key-value store using online</p>
    <p>configuration tuning</p>
    <p>OPTIMUSCLOUD considers two set of configuration parameters:</p>
    <p>Key-value store parameters: Cloud VM parameters:</p>
    <p>Cache size,</p>
    <p># Reading\Writing threads,</p>
    <p>Compaction</p>
    <p>method/throughput</p>
    <p>etc.</p>
    <p>VM size/type which controls:</p>
    <p>Number of cores</p>
    <p>Memory Size</p>
    <p>Network Bandwidth,</p>
    <p>etc.</p>
  </div>
  <div class="page">
    <p>Challenges in Online Tuning for Key-Value Stores</p>
    <p>Combining both sets of configuration parameters (Key-Value store + VM</p>
    <p>type/size) produces a large configuration space</p>
    <p>Dependency between key-value store and VM configurations:</p>
    <p>For example, the cache size of Cassandra is limited by the available RAM in</p>
    <p>the cloud VM</p>
    <p>Tuning Parameters</p>
    <p>Prices vary by a factor of 5,000X</p>
    <p>OPTIMUSCLOUD performs joint optimization</p>
    <p>while taking into account the dependencies</p>
    <p>between the two spaces to achieve globally</p>
    <p>optimized performance</p>
  </div>
  <div class="page">
    <p>Cassandras Performance on different VM types/sizes</p>
    <p>Takeaways:</p>
    <p>Best configurations vary across different VM types/sizes</p>
    <p>Therefore, jointly tuning key-value store and cloud VM</p>
    <p>parameters is crucial to achieve cost-optimal performance</p>
  </div>
  <div class="page">
    <p>OPTIMUSCLOUDS OVERVIEW</p>
  </div>
  <div class="page">
    <p>Dynamic workloads and online reconfiguration</p>
    <p>Dynamic workloads:</p>
    <p>Workload characteristics (e.g. Read-to-Write ratio, Request-rate, etc.)</p>
    <p>change over time, sometimes unpredictably</p>
    <p>New characteristics causes current configurations to perform sub-optimally,</p>
    <p>necessitating reconfigurations</p>
    <p>Impact of online reconfiguration :</p>
    <p>Changing configurations at runtime usually requires a server-restart, causing</p>
    <p>a downtime and a degradation in performance</p>
    <p>For fast changing workloads, frequent reconfiguration of the overall cluster</p>
    <p>could severely degrade performance</p>
    <p>Q: Can we reconfigure only a subset of the</p>
    <p>nodes in the cluster? Which subset?</p>
    <p>This will lead to heterogenous configuration</p>
  </div>
  <div class="page">
    <p>Why heterogeneous configurations is beneficial?</p>
    <p>Best Configurations To optimize Perf/$:</p>
    <p>Write-Heavy -&gt; All C4.L</p>
    <p>Read-Heavy -&gt; 2 C4.L &amp; 2 R4.XL</p>
  </div>
  <div class="page">
    <p>OPTIMUSCLOUDS Solution</p>
    <p>Heterogeneous configurations: Reduce reconfiguration downtime &amp; avoids overprovisioning</p>
    <p>However, heterogeneity increases the configuration space size</p>
    <p>Consider a cluster of N=20 nodes and I=15 configurations</p>
    <p>Homogeneous: We have I=15 possible configurations</p>
    <p>Heterogeneous: We have +1 I1 = 1.310</p>
    <p>OPTIMUSCLOUD uses the concept of Complete-Sets to reduce the</p>
    <p>size of the search space</p>
    <p>Complete-Set: the minimum subset of nodes for which the union of their</p>
    <p>data records covers all the records in the database at least once</p>
  </div>
  <div class="page">
    <p>Complete-Sets  This concept of Complete-Set relies on selecting the fastest replica for a</p>
    <p>given request</p>
    <p>Dynamic Snitch (Cassandra) or Adaptive Replica Selection (Elasticsearch)</p>
    <p>Consistency-Level (CL) defines how many replicas need to reply to a</p>
    <p>request before it is satisfied</p>
    <p>Therefore, the slow replica will dominate the response latency</p>
    <p>The servers within a Complete-Set must be upgraded to the faster</p>
    <p>configuration upon a workload change for the cluster performance to</p>
    <p>improve</p>
    <p>OPTIMUSCLOUD keeps the configurations homogeneous within the same</p>
    <p>Complete-Set, while allowing different Complete-Sets to have different</p>
    <p>configurations</p>
  </div>
  <div class="page">
    <p>How partitioning the cluster into Complete-Sets reduces</p>
    <p>the search space?</p>
    <p>First, we show that we have at most #Complete-Sets =</p>
    <p>Replication-Factor for any cluster (proof is given in the paper)</p>
    <p>RF is practically low (3 or 5)</p>
    <p>Second, reconfiguring #Complete-Sets = Consistency-Level</p>
    <p>(CL&lt;=RF), all requests are served from nodes with optimized</p>
    <p>configurations</p>
    <p>With S Complete-Sets, the size space is reduces to +1 I1 = 680</p>
    <p>possible configurations for a cluster with RF=3</p>
    <p>(Compared to 1.3109)</p>
  </div>
  <div class="page">
    <p>Using data-placement info to identify Complete-Sets</p>
    <p>First,</p>
  </div>
  <div class="page">
    <p>Applications 1. MG-RAST:</p>
    <p>Real workload traces from the largest metagenomics analysis portal</p>
    <p>Its workload does not have any discernible daily or weekly pattern, as the requests</p>
    <p>come from all across the globe</p>
    <p>Workload can change drastically over a few minutes (accurately predictable for 5min)</p>
    <p>Real workload traces from a bus-tracking mobile application</p>
    <p>Traces show a daily pattern of workload switches.</p>
    <p>Workload is accurately predictable for longer look-ahead periods (e.g. 2 hours)</p>
    <p>Simulated workload traces from data analytics jobs submitted to a shared HPC queue.</p>
    <p>Using profiling techniques, job execution times can be predicted with high accuracy</p>
    <p>and for long look-ahead periods.</p>
  </div>
  <div class="page">
    <p>Performance Prediction Accuracy</p>
  </div>
  <div class="page">
    <p>Baselines</p>
    <p>of the predicted workload. Impractical because assumes perfect knowledge of</p>
    <p>future workload</p>
    <p>cloud configuration for a representative job/phase of the workload</p>
    <p>cloud configuration for different jobs/phases of the workload</p>
    <p>find optimized homogeneous configurations for Key-Value store parameters</p>
  </div>
  <div class="page">
    <p>Evaluation: Cassandra</p>
    <p>Homo</p>
    <p>Static</p>
    <p>Cherry</p>
    <p>Pick</p>
    <p>Selecta SOPHIA Optimus</p>
    <p>Cloud</p>
    <p>L a te</p>
    <p>n c y (</p>
    <p>se c )</p>
    <p>N o r m</p>
    <p>a li</p>
    <p>z e d</p>
    <p>O p</p>
    <p>s/ s/</p>
    <p>$ MG-RAST (Cluster-Size=6, RF=3, CL=1, 16GB/server)</p>
    <p>Normalized Ops/s/$ Latency (P99)</p>
    <p>+212%</p>
    <p>Homo</p>
    <p>Static</p>
    <p>Cherry</p>
    <p>-Pick</p>
    <p>Selecta SOPHIA Optimus</p>
    <p>Cloud</p>
    <p>L a te</p>
    <p>n c y (</p>
    <p>se c )</p>
    <p>N o r m</p>
    <p>a li</p>
    <p>z e d</p>
    <p>O p</p>
    <p>s/ s/</p>
    <p>$ HPC (Cluster-Size=6, RF=3, CL=1, 16GB/server)</p>
    <p>Normalized Ops/s/$ Latency (P99)</p>
    <p>+143%</p>
    <p>+20% +23.2%</p>
    <p>+130%</p>
    <p>Homo</p>
    <p>Static</p>
    <p>Cherry</p>
    <p>-Pick</p>
    <p>Selecta SOPHIA Optimus</p>
    <p>Cloud</p>
    <p>L a te</p>
    <p>n c y (</p>
    <p>se c )</p>
    <p>N o r m</p>
    <p>a li</p>
    <p>z e d</p>
    <p>O p</p>
    <p>s/ s/</p>
    <p>$</p>
    <p>Bus-Tracking (Cluster-Size=6, RF=3, CL=1, 16GB/server)</p>
    <p>Normalized Ops/s/$ Latency (P99)</p>
    <p>+173%</p>
    <p>OPTIMUSCLOUD</p>
    <p>achieves up-to 86%</p>
    <p>better Perf/$ over the</p>
    <p>homogeneous</p>
    <p>configuration due to its</p>
    <p>online reconfiguration</p>
    <p>capability.</p>
    <p>OptimusCloud achieves</p>
    <p>up to 173% and 130%</p>
    <p>over CherryPick and</p>
    <p>Selecta due to its ability</p>
    <p>to find heterogeneous</p>
    <p>configurations which</p>
    <p>minimizes the</p>
    <p>reconfiguration</p>
    <p>downtime and avoids</p>
    <p>overprovisioning.</p>
    <p>Compared to SOPHIA,</p>
    <p>OPTIMUSCLOUD</p>
    <p>achieves up to 212%</p>
    <p>better Perf/$ as Sophia</p>
    <p>considers only</p>
    <p>homogeneous</p>
    <p>configurations for key</p>
    <p>value store parameters</p>
    <p>without considering</p>
    <p>online reconfiguration</p>
    <p>for the cloud VM</p>
    <p>type/size.</p>
  </div>
  <div class="page">
    <p>Tolerance to Prediction Errors</p>
    <p>% I</p>
    <p>m p</p>
    <p>r o v e m</p>
    <p>e n</p>
    <p>t o v e r</p>
    <p>H o m</p>
    <p>o g e n</p>
    <p>e o u</p>
    <p>sS</p>
    <p>ta ti</p>
    <p>c</p>
    <p>% Noise</p>
    <p>HPC (RF=3, CL=1,Cluster-Size=6, 16GB/server)</p>
    <p>Noisy Workload Predictor Noisy Throughput Predictor</p>
    <p>OPTIMUSCLOUDs improvement over</p>
    <p>Homogeneous-Static decreases with</p>
    <p>increasing levels of noise, as the</p>
    <p>selected configurations deviate from</p>
    <p>the best configurations.</p>
    <p>OPTIMUSCLOUDs is more sensitive</p>
    <p>to errors in the throughput predictor</p>
    <p>compared to errors in the workload</p>
    <p>predictor, which is demonstrated in</p>
    <p>the steeper downward slope in the</p>
    <p>noisy throughput predictor curve.</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>For cost-optimal performance of a distributed Key-Value store in the cloud, it is</p>
    <p>critical to jointly tune Key-Value store and cloud configurations.</p>
    <p>OPTIMUSCLOUD provides the insight that it is optimal to create</p>
    <p>heterogeneous configurations and for this, it determines at runtime the minimum</p>
    <p>number of servers to reconfigure.</p>
    <p>Using a novel concept of Complete-Sets, OPTIMUSCLOUD provides a technique</p>
    <p>to reduce the large search space that is brought out by heterogeneity</p>
    <p>Configurations found by OPTIMUSCLOUD</p>
    <p>outperform those by prior works, CherryPick,</p>
    <p>Selecta, and SOPHIA, in both Perf/$ and Tail</p>
    <p>Latency (P99)</p>
  </div>
  <div class="page"/>
</Presentation>
