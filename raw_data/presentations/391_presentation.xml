<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Exploring the Relationship</p>
    <p>Between Web Application</p>
    <p>Development Tools and</p>
    <p>Security</p>
    <p>Matthew Finifter and David Wagner</p>
    <p>University of California, Berkeley</p>
  </div>
  <div class="page">
    <p>Its a great time to be a developer!</p>
    <p>Languages</p>
    <p>PHP JAVA RUBY</p>
    <p>PERL PYTHON SCALA</p>
    <p>HASKELL COLD</p>
    <p>FUSION</p>
  </div>
  <div class="page">
    <p>Its a great time to be a developer!</p>
    <p>Languages Frameworks</p>
    <p>Yii, ASP.NET, Zend, Struts,</p>
    <p>Django, Snap, GWT, RoR,</p>
    <p>Mason, Sinatra, CakePHP,</p>
    <p>Fusebox, Catalyst, Spring,</p>
    <p>Grails, Dancer, CodeIgniter,</p>
    <p>Tapestry, Pyjamas, Symfony</p>
    <p>PHP JAVA RUBY</p>
    <p>PERL PYTHON SCALA</p>
    <p>HASKELL COLD</p>
    <p>FUSION</p>
  </div>
  <div class="page">
    <p>Its a great time to be a developer!</p>
    <p>Languages Frameworks</p>
    <p>Yii, ASP.NET, Zend, Struts,</p>
    <p>Django, Snap, GWT, RoR,</p>
    <p>Mason, Sinatra, CakePHP,</p>
    <p>Fusebox, Catalyst, Spring,</p>
    <p>Grails, Dancer, CodeIgniter,</p>
    <p>Tapestry, Pyjamas, Symfony</p>
    <p>PHP JAVA RUBY</p>
    <p>PERL PYTHON SCALA</p>
    <p>HASKELL COLD</p>
    <p>FUSION</p>
    <p>Object Relational Model (ORM) Framework</p>
    <p>Templating Language</p>
    <p>Libraries</p>
    <p>Vulnerability Remediation Tools or Services</p>
    <p>Client-side framework</p>
    <p>Meta-framework</p>
    <p>Content Management System (CMS)</p>
  </div>
  <div class="page">
    <p>Choice is great, but</p>
    <p>How should a developer or project manager choose?</p>
    <p>Is there any observable difference between different tools we</p>
    <p>might choose?</p>
    <p>What should you optimize for?</p>
    <p>How will you know youve made the right choices?</p>
    <p>We need meaningful comparisons between tools so that</p>
    <p>developers can make informed decisions.</p>
  </div>
  <div class="page">
    <p>Talk Outline</p>
    <p>Introduction</p>
    <p>Goals</p>
    <p>Methodology</p>
    <p>Results</p>
    <p>Conclusion and Future Work</p>
  </div>
  <div class="page">
    <p>Goals</p>
    <p>Encourage future work in this problem space</p>
    <p>Introduce methodology for evaluating differences between</p>
    <p>tools</p>
    <p>Evaluate security differences between different tools</p>
    <p>Programming Language</p>
    <p>Web Application Development Framework</p>
    <p>Process for Finding Vulnerabilities</p>
  </div>
  <div class="page">
    <p>Methodology</p>
    <p>Secondary data set from [Prechelt 2010]</p>
    <p>Different groups of developers use different tools to</p>
    <p>implement the same functionality</p>
    <p>Control for differences in specifications, human variability</p>
    <p>Measure the security of the developed programs</p>
    <p>Black-box penetration testing (Burp Suite Pro)</p>
    <p>Manual security review</p>
    <p>Use statistical hypothesis testing to look for associations</p>
  </div>
  <div class="page">
    <p>Limitations</p>
    <p>Experimental design</p>
    <p>Only one security reviewer (me)</p>
    <p>Application not necessarily representative</p>
    <p>Small sample size</p>
    <p>and more (see the paper)</p>
  </div>
  <div class="page">
    <p>Programming Language</p>
    <p>3 Java teams, 3 Perl teams, 3 PHP teams</p>
    <p>Look for association between programming language and:</p>
    <p>Total number of vulnerabilities found in the implementation</p>
    <p>Number of vulnerabilities for each vulnerability class</p>
    <p>Main conclusion: 9 samples is too few to find these</p>
    <p>associations.</p>
    <p>Maybe there is no association</p>
    <p>Maybe we need more data</p>
  </div>
  <div class="page">
    <p>Results: Total Vulnerabilities</p>
  </div>
  <div class="page">
    <p>Results: Stored XSS</p>
  </div>
  <div class="page">
    <p>Results: Reflected XSS</p>
  </div>
  <div class="page">
    <p>Results: SQL Injection</p>
  </div>
  <div class="page">
    <p>Results: Auth. Bypass</p>
  </div>
  <div class="page">
    <p>Results: Binary Vulnerabilities</p>
    <p>CSRF Session Management Password Storage</p>
    <p>N o</p>
    <p>. V</p>
    <p>u ln</p>
    <p>e ra</p>
    <p>b le</p>
    <p>I m</p>
    <p>p le</p>
    <p>m e</p>
    <p>n ta</p>
    <p>o n</p>
    <p>s</p>
    <p>Perl Java PHP</p>
  </div>
  <div class="page">
    <p>Framework Support</p>
    <p>Different frameworks offer different features</p>
    <p>Taxonomy of framework support</p>
    <p>None</p>
    <p>Manual</p>
    <p>Opt-in</p>
    <p>Opt-out</p>
    <p>Always on</p>
  </div>
  <div class="page">
    <p>Framework Support</p>
    <p>Labeled each (team number, vulnerability class) with a</p>
    <p>framework support level</p>
    <p>E.g., team 4 had always-on CSRF protection</p>
    <p>This data set allows us to consider association between level</p>
    <p>of framework support and vulnerabilities.</p>
    <p>In other words, does a higher level of framework support</p>
    <p>help?</p>
  </div>
  <div class="page">
    <p>Framework Support</p>
    <p>No associations found for XSS, SQL injection, auth. bypass,</p>
    <p>or secure password storage.</p>
    <p>Statistically significant associations found for CSRF and</p>
    <p>session management.</p>
  </div>
  <div class="page">
    <p>Individual Vulnerability</p>
    <p>Data</p>
    <p>More data to shed light on frameworks</p>
    <p>How far away from chosen tools to find framework support?</p>
    <p>Framework used</p>
    <p>Newer version of framework used</p>
    <p>Another framework for language used</p>
    <p>Some framework for some language</p>
    <p>No known support</p>
    <p>For both automatic and manual framework support</p>
  </div>
  <div class="page">
    <p>Individual Vulnerability Data</p>
    <p>(Manual Support)</p>
    <p>Java3 Java4 Java9 PHP6 PHP7 PHP8 Perl1 Perl2 Perl5</p>
    <p>Where manual support exists to prevent vulnerabilities</p>
    <p>No known framework</p>
    <p>Some fwk. for some language</p>
    <p>Diff. fwk. for language used</p>
    <p>Newer version of fwk. used</p>
    <p>Framework used</p>
    <p>Reflected XSS in JavaScript context</p>
  </div>
  <div class="page">
    <p>Individual Vulnerability Data</p>
    <p>(Automatic Support)</p>
    <p>Java3 Java4 Java9 PHP6 PHP7 PHP8 Perl1 Perl2 Perl5</p>
    <p>Where automatic support exists to prevent vulnerabilities</p>
    <p>No known framework</p>
    <p>Some fwk. for some language</p>
    <p>Diff. fwk. for language used</p>
    <p>Newer version of fwk. used</p>
    <p>Framework used</p>
    <p>Reflected XSS in JavaScript context</p>
    <p>Authorization bypass</p>
    <p>Authorization bypass</p>
    <p>Secure password storage</p>
  </div>
  <div class="page">
    <p>Method of Finding</p>
    <p>Vulnerabilities</p>
    <p>Automated black-box penetration testing</p>
    <p>Manual source code review</p>
  </div>
  <div class="page">
    <p>Method of Finding</p>
    <p>Vulnerabilities</p>
    <p>Black-box Manual</p>
  </div>
  <div class="page">
    <p>Results: Stored XSS</p>
  </div>
  <div class="page">
    <p>Results: Reflected XSS</p>
  </div>
  <div class="page">
    <p>Results: SQL Injection</p>
  </div>
  <div class="page">
    <p>Results: Auth. Bypass</p>
  </div>
  <div class="page">
    <p>Results: Binary Vulnerabilities</p>
    <p>CSRF Session Management Password Storage</p>
    <p>N o</p>
    <p>. V</p>
    <p>u ln</p>
    <p>e ra</p>
    <p>b le</p>
    <p>I m</p>
    <p>p le</p>
    <p>m e</p>
    <p>n ta</p>
    <p>o n</p>
    <p>s</p>
    <p>Perl Java PHP</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>BAU ET AL. State of the Art: Automated Black-box Web Application Vulnerability Testing.</p>
    <p>DOUP ET AL. Why Johnny Cant Pentest: An Analysis of Black-Box Web Vulnerability Scanners.</p>
    <p>PRECHELT ET AL. Plat_Forms: A Web Development Platform Comparison by an Exploratory Experiment Searching for Emergent Platform Properties.</p>
    <p>WAGNER ET AL. Comparing Bug Finding Tools with Reviews and Tests.</p>
    <p>WALDEN ET AL. Java vs. PHP: Security Implications of Language Choice for Web Applications.</p>
    <p>WhiteHat Website Security Statistic Report, 9th Edition.</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>We should quantify our tools along various dimensions</p>
    <p>This study started (but did not finish!) that task for security</p>
    <p>Language, framework, vulnerability-finding method</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Web security is still hard; each implementation had at least</p>
    <p>one vulnerability.</p>
    <p>Level of framework support appears to influence security</p>
    <p>Manual framework support is ineffective</p>
    <p>Manual code review more effective than black-box testing</p>
    <p>But they are complementary.</p>
    <p>And they perform differently for different vulnerability classes</p>
  </div>
  <div class="page">
    <p>Future Work</p>
    <p>Gathering and analyzing larger data sets</p>
    <p>Other dimensions: reliability, performance, maintainability,</p>
    <p>etc.</p>
    <p>Deeper understanding of why some tools fare better than</p>
    <p>others</p>
    <p>Not just web applications!</p>
  </div>
  <div class="page">
    <p>Thank you!</p>
    <p>Matthew Finifter</p>
    <p>finifter@cs.berkeley.edu</p>
  </div>
</Presentation>
