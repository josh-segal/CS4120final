<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Dynamic Index Coding</p>
    <p>Broadcast Station</p>
    <p>Michael J. Neely , Arash Saber Tehrani , Zhen Zhang University of Southern California http://www-bcf.usc.edu/~mjneely/ Proc. INFOCOM, Orlando, FL, March 2012</p>
    <p>User set N</p>
    <p>Packet set P</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Want to expand wireless throughput.  Wireless users download popular files.  Some users already have the files in cache.  Can we push information theory and network theory to exploit this side info?</p>
    <p>BS</p>
    <p>Packet set P 1 2 3 4 5</p>
  </div>
  <div class="page">
    <p>Simple Model</p>
    <p>BS</p>
    <p>N users. P packets in Broadcast Station (BS).  Each user wants a different subset of packets.  Each user already has a different subset of packets in its cache.  BS can transmit 1 packet/slot.  All users successfully hear all BS transmissions.</p>
    <p>User set N</p>
    <p>Packet set P 1 2 3 4 5</p>
  </div>
  <div class="page">
    <p>Can we finish in less than P slots?  Example 1:</p>
    <p>Want: A</p>
    <p>User 1</p>
    <p>Have: B</p>
    <p>Want: B</p>
    <p>User 2</p>
    <p>Have: A</p>
    <p>BSBS</p>
  </div>
  <div class="page">
    <p>+</p>
    <p>Can we finish in less than P slots?  Example 1:</p>
    <p>Want: A</p>
    <p>User 1</p>
    <p>Have: B</p>
    <p>Want: B</p>
    <p>User 2</p>
    <p>Have: A</p>
    <p>BSBS</p>
    <p>AA BB</p>
    <p>Efficiency Ratio = 2:1</p>
    <p>Related to Wireless Net Coding:  Wu, Chou, Kung 2005  Katti et. Al. 2005, 2006.</p>
  </div>
  <div class="page">
    <p>Have: B C</p>
    <p>Want: A Want: C</p>
    <p>Have: A B</p>
    <p>Can we finish in less than P slots?  Example 2:</p>
    <p>User 1</p>
    <p>BSBS</p>
    <p>Want: B</p>
    <p>User 2</p>
    <p>Have: A C</p>
    <p>User 3</p>
  </div>
  <div class="page">
    <p>Have: B C</p>
    <p>Want: A Want: C</p>
    <p>Have: A B</p>
    <p>+</p>
    <p>Can we finish in less than P slots?  Example 2:</p>
    <p>User 1</p>
    <p>BSBS</p>
    <p>AA BB Efficiency Ratio = 3:1</p>
    <p>Want: B</p>
    <p>User 2</p>
    <p>Have: A C</p>
    <p>User 3</p>
    <p>CC+</p>
  </div>
  <div class="page">
    <p>K-Cycle Coding Actions</p>
    <p>Message 1: A + B</p>
    <p>Message 2: B + C</p>
    <p>Message 3: C + D</p>
    <p>Want: D Have: A</p>
    <p>Want: A Have: B</p>
    <p>Want: B Have: C</p>
    <p>Want: C Have: D</p>
    <p>User 1</p>
    <p>User 2</p>
    <p>User 3</p>
    <p>User 4</p>
    <p>Clears K packets in K-1 slots (efficiency ratio = K : K-1 )</p>
  </div>
  <div class="page">
    <p>Minimum Clearance Time Tmin</p>
    <p>Unsolved Info Theory Problem!</p>
    <p>Even Restricting to Linear Codes is NP Hard! [Birk, Kol 2006] [Bar-Yossef, Birk, Jayram, Kol 2011]</p>
    <p>What can we say?</p>
  </div>
  <div class="page">
    <p>Information Theory Result</p>
    <p>*Theorem 1: If the bipartite demand graph is acyclic, then Tmin= P.</p>
    <p>User set N</p>
    <p>Packet set P 1 2 3 4 5</p>
    <p>*Extends [Bar-Yossef, Birk, Jayram, Kol 2011] to the case of general demand graphs.</p>
  </div>
  <div class="page">
    <p>Information Theory Result</p>
    <p>*Theorem 1: If the bipartite demand graph is acyclic, then Tmin= P.</p>
    <p>User set N</p>
    <p>Packet set P 1 2 3 4 5</p>
    <p>Cor 1: Need cycles for coding to help.</p>
    <p>Cor 2: Max acyclic subgraph bound.</p>
    <p>*Extends [Bar-Yossef, Birk, Jayram, Kol 2011] to the case of general demand graphs.</p>
  </div>
  <div class="page">
    <p>Packets arrive randomly, rates (1, , M).</p>
    <p>A = Abstract space of coding options. example: A = {Cyclic coding actions}.  Each code action  in A has:</p>
    <p>T() = frame size of action .</p>
    <p>(1(), , M()) = clearance vector of action .</p>
    <p>Dynamic Index Coding</p>
    <p>time</p>
    <p>Frame 1Frame 1 Frame 2Frame 2 Frame 3Frame 3</p>
    <p>T([1]) T([2]) T([3])</p>
  </div>
  <div class="page">
    <p>Every new frame k, observe queues (Q1[k], , QM[k])</p>
    <p>Then choose code action [k] in A to maximize:</p>
    <p>m Qm[k] [m([k])/T([k])]</p>
    <p>Max-Weight Code Selection Algorithm</p>
    <p>Theorem 2: This alg supports any rate vector (1, , M) in the Code-Constrained Capacity region A.</p>
    <p>(where A is optimal region subject to using codes in set A).</p>
  </div>
  <div class="page">
    <p>Simulation of Max-Weight Code Selection</p>
    <p>Details: 3 user system. Each user has packets arriving rate . Each packet is independently in cache of another user with prob . Total number of traffic types = M = 12.</p>
    <p>Max-Weight</p>
  </div>
  <div class="page">
    <p>Question</p>
    <p>When does A =  ?</p>
    <p>A = Code constrained capacity region  = Capacity region (info theory)</p>
  </div>
  <div class="page">
    <p>Special case of Broadcast Relay Networks:</p>
    <p>Users want to send to other users via Broadcast Relay.  Each packet contained as side info in exactly one user.</p>
    <p>Each packet has exactly one user as destination.  Admits a simplified graphical structure with user nodes</p>
    <p>only. We can often compute Tmin.</p>
  </div>
  <div class="page">
    <p>Results for N-user Broadcast Relay Nets:</p>
    <p>N=2 ( is 2-dimensional)</p>
    <p>N=3 (is 6-dimensional)</p>
    <p>Any N, provided that either: (i) Each user sends to at most one other user. (ii) Each user receives from at most one other user.</p>
    <p>Algorithm: Max-Weight Code Selection with Cyclic Coding.</p>
    <p>This is information-theoretically optimal in these cases:</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>BS</p>
    <p>Packet set P 1 2 3 4 5</p>
    <p>Acyclic Graph Theorem.  Dynamic Index Coding Exploits Cycles.  Achieves Code Constrained Capacity Region.  Achieves Info Theory Capacity Region for Classes of</p>
    <p>Broadcast Relay Networks.  This is a new example of a consummated union</p>
    <p>between Information Theory and Networking.</p>
  </div>
  <div class="page">
    <p>Special case of Broadcast Relay Networks:</p>
    <p>Admits a simplified graphical structure, can often compute Tmin. (nodes = users, links labeled by # packets)</p>
    <p>Graph with 3 disjoint cycles Max Acyclic Subgraph</p>
  </div>
</Presentation>
