<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 1</p>
    <p>Babak Falsafi, Rachid Guerraoui, Javier Picorel, Vasileios Trigonakis</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 2</p>
    <p>Conference Dilemma : To Sleep or Not to Sleep?</p>
    <p>For the next 25 minutes</p>
    <p>Do not sleep for such short duration</p>
    <p>Motivation</p>
    <p>sleep</p>
    <p>busy wait</p>
    <p>locking</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 3</p>
    <p>Energy Efficiency Through Synchronization ( Locking)</p>
    <p>Why lock-based synchronization?</p>
    <p>lock() / unlock()</p>
    <p>Motivation</p>
    <p>busy lock</p>
    <p>lock() wait! (waste time</p>
    <p>and energy)</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 4</p>
    <p>Power Energy Efficiency</p>
    <p>N o</p>
    <p>rm a li ze</p>
    <p>d t</p>
    <p>o S</p>
    <p>le e p</p>
    <p>in g</p>
    <p>sleeping spinning</p>
    <p>Lock Waiting Techniques</p>
    <p>Locking is a good candidate for reducing energy consumption</p>
    <p>Motivation</p>
    <p>busy lock</p>
    <p>sleeping</p>
    <p>(blocking)</p>
    <p>busy waiting</p>
    <p>(spinning)</p>
    <p>Java CopyOnWriteArrayList</p>
    <p>Energy Efficiency</p>
    <p>Throughput / Power</p>
    <p>Q. Is sleeping energy-friendly?</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 5</p>
    <p>Energy Efficiency By Improving Locking</p>
    <p>POLY</p>
    <p>Energy efficiency and throughput go hand in hand</p>
    <p>in the context of lock algorithms</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 6</p>
    <p>Outline</p>
    <p>Motivation</p>
    <p>Improving the energy efficiency of systems</p>
    <p>Target platform 2-socket Intel Ivy Bridge</p>
    <p>busy lock</p>
    <p>busy waiting  hurts power consumption</p>
    <p>sleeping  saves power, but hurts throughput</p>
    <p>spin-then-sleep cleverly</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 7</p>
    <p>Observations</p>
    <p>Power Consumption of Waiting</p>
    <p>Busy waiting is very power hungry</p>
    <p>Waiting</p>
    <p>while (*lock != FREE) {}</p>
    <p>P o</p>
    <p>w e r</p>
    <p>(W a tt</p>
    <p>s )</p>
    <p># Threads</p>
    <p>sleeping busy waiting</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 8</p>
    <p>Observations</p>
    <p>Reducing Power of Busy Waiting</p>
    <p>Power consumption of busy waiting cannot be practically reduced</p>
    <p>Busy Waiting</p>
    <p>are not practical</p>
    <p>(details in the paper)</p>
    <p>while (*lock != FREE) { ?? }</p>
    <p>P o</p>
    <p>w e r</p>
    <p>(W a tt</p>
    <p>s )</p>
    <p># Threads</p>
    <p>empty pause mfence DVFS mwait</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 9</p>
    <p>Outline</p>
    <p>Motivation</p>
    <p>Improving the energy efficiency of systems</p>
    <p>busy lock</p>
    <p>busy waiting  hurts power consumption</p>
    <p>sleeping  saves power, but hurts throughput</p>
    <p>spin-then-sleep cleverly</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 10</p>
    <p>sleeping unfair spin fair spin</p>
    <p>N o</p>
    <p>rm a li ze</p>
    <p>d T</p>
    <p>h ro</p>
    <p>u g</p>
    <p>h p</p>
    <p>u t</p>
    <p>MySQL In-Memory</p>
    <p>Sleeping Might Be Necessary ( For Two Reasons)</p>
    <p>Sleeping can reduce power consumption (and more)</p>
    <p>Sleeping</p>
    <p>Power ConsumptionWaiting Locks with Multiprogramming 1 2</p>
    <p># threads &gt;</p>
    <p>hw contexts</p>
    <p>P o</p>
    <p>w e r</p>
    <p>(W a tt</p>
    <p>s )</p>
    <p># Threads</p>
    <p>sleeping busy waiting</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 11</p>
    <p>Observations</p>
    <p>Latency: The Price of Sleeping</p>
    <p>Frequent sleep/wake-up calls reduce throughput without saving energy</p>
    <p>Sleeping</p>
    <p>release context</p>
    <p>to handover the lock</p>
    <p>lock handover latency</p>
    <p>sleep call wake-up call turnaround</p>
    <p>L a te</p>
    <p>n c y (</p>
    <p>c y c le</p>
    <p>s )</p>
    <p>large critical section</p>
    <p>small critical section</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 12</p>
    <p>Outline</p>
    <p>Motivation</p>
    <p>Improving the energy efficiency of systems</p>
    <p>busy lock</p>
    <p>busy waiting  hurts power consumption</p>
    <p>sleeping  saves power, but hurts throughput</p>
    <p>spin-then-sleep cleverly</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 13</p>
    <p>Reducing Fairness: Sleeping for Long Durations</p>
    <p>Trade fairness for energy efficiency</p>
    <p>Power Consumption Communication Throughput</p>
    <p>Passing a token</p>
    <p>from thread to thread</p>
    <p>Sping-then-sleep</p>
    <p>P o</p>
    <p>w e r</p>
    <p>(W a tt</p>
    <p>s )</p>
    <p># Threads</p>
    <p>sleep spin unfair</p>
    <p>ro u</p>
    <p>g h</p>
    <p>p u</p>
    <p>t (O</p>
    <p>p s /s</p>
    <p>)</p>
    <p>M ill</p>
    <p>io n s</p>
    <p># Threads</p>
    <p>sleep spin unfair</p>
    <p>unfair: 1000:1 spin-to-sleep ratio (while 2 threads spin, the rest sleep)</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 14</p>
    <p>How can we use these results in designing locks?</p>
    <p>Design locks</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 15</p>
    <p>Problems of Pthread MUTEX lock</p>
    <p>Pthread MUTEX does not take into account the sleep overheads</p>
    <p>MUTEX</p>
    <p>MUTEX</p>
    <p>For up to 100 attempts</p>
    <p>spin with pause</p>
    <p>if still busy, sleep</p>
    <p>MUTEX</p>
    <p>release in user space</p>
    <p>wake up a thread</p>
    <p>lock()</p>
    <p>unlock()</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 16</p>
    <p>MUTEXEE: An Optimized MUTEX Lock</p>
    <p>MUTEXEE</p>
    <p>MUTEX MUTEXEE</p>
    <p>For up to 100 attempts For up to ~8000 cycles</p>
    <p>spin with pause spin with mfence</p>
    <p>if still busy, sleep</p>
    <p>MUTEX MUTEXEE</p>
    <p>release in user space (lock-&gt;locked = 0)</p>
    <p>wait in user space (~300 cycles)</p>
    <p>wake up a thread</p>
    <p>lock()</p>
    <p>unlock()</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 17</p>
    <p>Performance of MUTEXEE over MUTEX</p>
    <p>MUTEXEE fixes the problematic cases of MUTEX</p>
    <p>One lock</p>
    <p>MUTEXEE</p>
    <p>T h</p>
    <p>re a</p>
    <p>d s</p>
    <p>Critical Section (cycles)</p>
    <p>T h</p>
    <p>re a</p>
    <p>d s</p>
    <p>Critical Section (cycles)</p>
    <p>Fairness: results and analysis in the paper</p>
    <p>Throughput Energy Efficiency</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 18</p>
    <p>Outline</p>
    <p>Motivation</p>
    <p>Improving the energy efficiency of systems</p>
    <p>busy lock</p>
    <p>busy waiting  hurts power consumption</p>
    <p>sleeping  saves power, but hurts throughput</p>
    <p>spin-then-sleep cleverly</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 19</p>
    <p>Evaluation: Improving Energy Efficiency of Systems Through Locks</p>
    <p>Six modern software systems</p>
    <p>Overload pthread mutex</p>
    <p>Average Throughput and Energy Efficiency</p>
    <p>Locking can indeed be used to improve the energy efficiency of systems</p>
    <p>Systems</p>
    <p>Kyoto Cabinet</p>
    <p>Throughput Energy Efficiency</p>
    <p>N o</p>
    <p>rm a li ze</p>
    <p>d t</p>
    <p>o</p>
    <p>M U</p>
    <p>T E</p>
    <p>X</p>
    <p>TICKET MUTEXEE</p>
    <p>Results</p>
  </div>
  <div class="page">
    <p>Vasileios Trigonakis | 06.2016 20</p>
    <p>Concluding Remarks</p>
    <p>An analysis of the energy efficiency of lock-based synchronization</p>
    <p>Energy efficiency of locks goes hand in hand with throughput</p>
    <p>MUTEXEE: an optimized MUTEX lock</p>
    <p>LOCKIN: https://github.com/LPD-EPFL/lockin</p>
    <p>THANK YOU! QUESTIONS?</p>
    <p>Conclusions</p>
    <p>Locking can be used to improve the energy efficiency of systems</p>
  </div>
</Presentation>
