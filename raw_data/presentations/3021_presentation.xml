<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Ratchet Intermittent Computation without Hardware Support or</p>
    <p>Programmer Intervention</p>
    <p>Joel Van Der Woude Sandia</p>
    <p>Ma&gt;hew Hicks MIT/LL</p>
    <p>University of Michigan</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Batteries are bulky and inconvenient</p>
  </div>
  <div class="page">
    <p>Energy harvesting</p>
  </div>
  <div class="page">
    <p>Hardware monitoring vs. programmer insight</p>
    <p>or</p>
  </div>
  <div class="page">
    <p>Goals of Ratchet</p>
    <p>Burden the compiler not the programmer  Without hardware to measure voltage  Ensure forward progress under frequent</p>
    <p>power failures (~100ms)</p>
  </div>
  <div class="page">
    <p>Checkpointing</p>
    <p>Save volatile state to non-volatile memory</p>
    <p>After a power fail  restart  restore  continue Time</p>
    <p>Pr og re ss</p>
  </div>
  <div class="page">
    <p>Initial Correct At Fail Error a x y y 42</p>
    <p>b y 42 42 42</p>
    <p>Re-execution causes incorrectness</p>
    <p>mem[a] = mem[b] mem[b] = 42</p>
    <p>return a</p>
    <p>Write a(er Read (WAR)</p>
    <p>Initial Correct At Fail a x y y</p>
    <p>b y 42 42</p>
    <p>Initial Correct a x y</p>
    <p>b y 42</p>
    <p>Initial mem[a] x</p>
    <p>mem[b] y</p>
  </div>
  <div class="page">
    <p>What is idempotence?  Re-execution generates semantically</p>
    <p>correct result  A section of code that does not overwrite/</p>
    <p>update inputs</p>
  </div>
  <div class="page">
    <p>Initial Correct At Fail Error a x y y y</p>
    <p>b y 42 42 42</p>
    <p>Idempotence enabling re-execution</p>
    <p>mem[a] = mem[b] mem[b] = 42</p>
    <p>return a</p>
    <p>Initial Correct At Fail a x y y</p>
    <p>b y 42 42</p>
    <p>Initial Correct a x y</p>
    <p>b y 42</p>
    <p>Initial a x</p>
    <p>b y</p>
  </div>
  <div class="page">
    <p>Ratchet system overview</p>
    <p>Ratchet Ratchet .o file .c file</p>
    <p>Frontend</p>
    <p>Instruction Selection</p>
    <p>&amp; Register Allocation</p>
    <p>Finalize</p>
    <p>Idempotence Analysis</p>
    <p>Insert Checkpoints</p>
    <p>Fix-up</p>
    <p>Combine Redundant Checkpoints</p>
    <p>Emit Minimum Checkpoint</p>
    <p>IR IR ASM ASM Function Entry</p>
  </div>
  <div class="page">
    <p>Idempotence analysis</p>
    <p>Ratchet Ratchet .o file .c file</p>
    <p>Frontend</p>
    <p>Instruction Selection</p>
    <p>&amp; Register Allocation</p>
    <p>Finalize</p>
    <p>Idempotence Analysis</p>
    <p>Insert Checkpoints</p>
    <p>Fix-up</p>
    <p>Combine Redundant Checkpoints</p>
    <p>Emit Minimum Checkpoint</p>
    <p>IR IR ASM ASM Function Entry</p>
  </div>
  <div class="page">
    <p>mem[a] = mem[b] mem[b] = 42</p>
    <p>return a</p>
    <p>Identifying WARs</p>
  </div>
  <div class="page">
    <p>Insert checkpoints</p>
    <p>Ratchet Ratchet .o file .c file</p>
    <p>Frontend</p>
    <p>Instruction Selection</p>
    <p>&amp; Register Allocation</p>
    <p>Finalize</p>
    <p>Idempotence Analysis</p>
    <p>Insert Checkpoints</p>
    <p>Fix-up</p>
    <p>Combine Redundant Checkpoints</p>
    <p>Emit Minimum Checkpoint</p>
    <p>IR IR ASM ASM Function Entry</p>
  </div>
  <div class="page">
    <p>Seperating WARs with checkpoints</p>
    <p>Weighted with  Loop depth  # of WAR cut</p>
    <p>mem[c] = 42 r0 = mem[a] r1 = mem[b]</p>
    <p>r3 = (r0,r2) mem[a] = r3+1 mem[c] = r1</p>
    <p>mem[b] = r1+1</p>
    <p>r2 = mem[c] r2 = mem[c] checkpoint()</p>
    <p>checkpoint() mem[b] = r1+1</p>
  </div>
  <div class="page">
    <p>Fix-up</p>
    <p>Ratchet Ratchet .o file .c file</p>
    <p>Frontend</p>
    <p>Instruction Selection</p>
    <p>&amp; Register Allocation</p>
    <p>Finalize</p>
    <p>Idempotence Analysis</p>
    <p>Insert Checkpoints</p>
    <p>Fix-up</p>
    <p>Combine Redundant Checkpoints</p>
    <p>Emit Minimum Checkpoint</p>
    <p>IR IR ASM ASM Function Entry</p>
  </div>
  <div class="page">
    <p>The backend may create WARs</p>
    <p>Stack Teardown</p>
    <p>Register Spilling</p>
    <p>return addr</p>
    <p>r0-r3</p>
    <p>locals</p>
    <p>SP new addr</p>
    <p>new regs</p>
  </div>
  <div class="page">
    <p>Redundant checkpoints</p>
    <p>Ratchet Ratchet .o file .c file</p>
    <p>Frontend</p>
    <p>Instruction Selection</p>
    <p>&amp; Register Allocation</p>
    <p>Finalize</p>
    <p>Idempotence Analysis</p>
    <p>Insert Checkpoints</p>
    <p>Fix-up</p>
    <p>Combine Redundant Checkpoints</p>
    <p>Emit Minimum Checkpoint</p>
    <p>IR IR ASM ASM Function Entry</p>
  </div>
  <div class="page">
    <p>Relocating checkpoints to combine  Redundant checkpoints</p>
    <p>caused by  Optimizations  Scheduling Decisions  Register Spills</p>
    <p>r0 = mem[a] r1 = mem[b] r3 = r0+r1 r4 = r3+1 checkpoint() R5 = r3+r4 mem[a] = r3 checkpoint() mem[b] = r5</p>
    <p>r0 = mem[a] r1 = mem[b] r3 = r0+r1 r4 = r3+1 checkpoint() r5 = r3+r4 mem[a] = r3 mem[b] = r5</p>
    <p>jvdw@umich.edu</p>
  </div>
  <div class="page">
    <p>Minimum checkpoint</p>
    <p>Ratchet Ratchet .o file .c file</p>
    <p>Frontend</p>
    <p>Instruction Selection</p>
    <p>&amp; Register Allocation</p>
    <p>Finalize</p>
    <p>Idempotence Analysis</p>
    <p>Insert Checkpoints</p>
    <p>Fix-up</p>
    <p>Combine Redundant Checkpoints</p>
    <p>Emit Minimum Checkpoint</p>
    <p>IR IR ASM ASM Function Entry</p>
  </div>
  <div class="page">
    <p>Optimizing Ratchet</p>
    <p>Ratchet Unoptimized  RatchetFE Function Entry  RatchetFE+RD +Remove Duplicates  RatchetFE+RD+LR +Live Registers  Ideal Single Checkpoint</p>
  </div>
  <div class="page">
    <p>How we evaluated Ratchet  Simulator  Cycle accurate  Random power failures  Dynamically track idempotence  https://github.com/impedimentToProgress/thumbulator</p>
    <p>Benchmarks  MIBench  newlib  https://github.com/impedimentToProgress/MiBench2</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Questions?</p>
  </div>
</Presentation>
