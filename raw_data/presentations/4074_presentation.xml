<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>This Aint Your Dose: Sensor Spoofing Attack on Medical</p>
    <p>Infusion Pump</p>
    <p>Youngseok Park1,2, Yunmok Son2, Hocheol Shin2, Dohyun Kim2, and Yongdae Kim2</p>
    <p>Aug.09.2016</p>
  </div>
  <div class="page">
    <p>Sensor</p>
    <p>v Sensing changes in physical property and converting to electric signal</p>
    <p>v Gyroscope, Accelerometer, Radar, Sonar, Infrared sensor, etc.</p>
  </div>
  <div class="page">
    <p>Sensing and Actuation System</p>
    <p>Real World</p>
    <p>Processor</p>
    <p>Sensor Actuator</p>
    <p>Sensing Actuation</p>
    <p>System</p>
    <p>ADC</p>
    <p>ADC: Analog-to-Digital Converter</p>
    <p>Converting Processing</p>
    <p>GyroscopeRadar Flight control</p>
    <p>Crash avoidance</p>
  </div>
  <div class="page">
    <p>Sensing and Actuation System</p>
    <p>Real World</p>
    <p>Processor</p>
    <p>Sensor Actuator</p>
    <p>Sensing Actuation</p>
    <p>System</p>
    <p>ADC</p>
    <p>ADC: Analog-to-Digital Converter</p>
    <p>Converting Processing</p>
    <p>GyroscopeRadar Flight control</p>
    <p>Crash avoidance</p>
    <p>No Authentication</p>
    <p>Vulnerable to sensor spoofing attack</p>
    <p>Spoofing!</p>
  </div>
  <div class="page">
    <p>Sensor Spoofing Attack</p>
    <p>v Manipulating sensors with a malicious signal</p>
    <p>v Previous works - Attacking Circuit using EMI: Injecting EMI into a wire of a defibrillator (S&amp;P13) - Canceling and injecting Active Sensor Signal: magnetic signal on ABS sensor (CHES13) - Generating Resonance (DoS): Injecting sound noise into a gyroscope of a drone (SEC15)</p>
    <p>EMI: Electromagnetic Interference ABS: Anti-lock Braking System</p>
  </div>
  <div class="page">
    <p>This Work: Manipulating Sensing Values by Saturating Receiver</p>
  </div>
  <div class="page">
    <p>Target: Medical Infusion Pump</p>
    <p>v Controlling infused volume of medicine to patients</p>
    <p>v Sometimes using a drop sensor for accuracy</p>
    <p>Display</p>
    <p>Control panel</p>
    <p>Actuator (Peristaltic Fingers)</p>
    <p>IV Tube</p>
    <p>To humans body</p>
    <p>From drop sensor Medicine</p>
    <p>IR receiver</p>
    <p>IR emitter</p>
    <p>To infusion pump body</p>
    <p>Drop sensor</p>
    <p>Drop</p>
    <p>IV Tube Drip</p>
    <p>chamber</p>
    <p>Output</p>
    <p>~</p>
  </div>
  <div class="page">
    <p>Infusion Pump Operation</p>
    <p>Light</p>
  </div>
  <div class="page">
    <p>Sensor Saturation</p>
    <p>v New type of sensor spoofing attack using saturation - Sensors have typical operating region - Output is saturated when exceeding a saturation point - Blinding sensors</p>
    <p>In case of the infusion pump</p>
  </div>
  <div class="page">
    <p>Medical Infusion Pump</p>
    <p>v Two infusion pumps with drop sensors</p>
    <p>Infusion pump Drop sensor</p>
    <p>JSB-1200 (Pump1)</p>
    <p>BYS-820 (Pump2)</p>
  </div>
  <div class="page">
    <p>Hardware Analysis</p>
    <p>v Pump1 (JSB-1200)</p>
    <p>Peristaltic fingers</p>
    <p>Tube</p>
    <p>Infusion pump</p>
    <p>LED</p>
    <p>Drop sensor</p>
    <p>IR emitter</p>
    <p>IR receiver</p>
    <p>IR Filter</p>
  </div>
  <div class="page">
    <p>Hardware Analysis</p>
    <p>v Measuring signal with oscilloscope - Connector = 4 pins: VCC, GND, LED, and IN (signal)</p>
    <p>Connector (Device side)</p>
    <p>Four pins (Sensor side)</p>
    <p>Normal drop</p>
  </div>
  <div class="page">
    <p>Simple Test (Saturation, w/o filter)</p>
  </div>
  <div class="page">
    <p>Simple Test (Saturation, w/o filter)</p>
  </div>
  <div class="page">
    <p>Hardware Analysis</p>
    <p>v Mainboard (2 MCUs)</p>
    <p>W78E516D (MCU2)</p>
    <p>AT89S52 (MCU1)</p>
    <p>Internal structure</p>
    <p>SPI Port</p>
    <p>Drop sensor port</p>
  </div>
  <div class="page">
    <p>Hardware Analysis</p>
    <p>v Sensor output is inserted to MCU1 after ADC - 8-bit ADC (0 to 255) - Digital signal indicates voltage level of the drop sensor</p>
    <p>Output of ADC</p>
    <p>IN (sensor output)</p>
    <p>MCU1</p>
  </div>
  <div class="page">
    <p>Firmware Extraction</p>
    <p>v Extracting firmware of MCU1 via SPI port - Reading Flash memory using USBISP and AVR Studio - Data section -&gt; 8051 assembly -&gt; IDA Pro</p>
    <p>USBISP</p>
    <p>AVR Studio 4 Intel HEX format</p>
    <p>Data section AT89S52 (MCU1)</p>
    <p>SPI Port</p>
  </div>
  <div class="page">
    <p>Firmware Analysis</p>
    <p>v Finding sensor output in Timer interrupt function</p>
    <p>Put 8-bit sensor output to RAM</p>
  </div>
  <div class="page">
    <p>Firmware Analysis</p>
  </div>
  <div class="page">
    <p>Drop Detection Algorithm</p>
    <p>Sensing drop when voltage decreases by .</p>
    <p>Send command (0x11) through serial port, connected to MCU2</p>
  </div>
  <div class="page">
    <p>Pump1 Structure</p>
  </div>
  <div class="page">
    <p>Vulnerability</p>
    <p>v Drop sensor - Saturated with an external source - Cannot sense drops in saturation</p>
    <p>v Drop detection algorithm - Counting drops based on a relative change in voltage - Making a voltage drop to sensor output</p>
    <p>Saturation</p>
    <p>Fake drop</p>
  </div>
  <div class="page">
    <p>Experimental Setting</p>
    <p>Measuring cylinder</p>
    <p>IR Laser (905nm, 30mW)</p>
    <p>Drop sensor</p>
    <p>Arduino</p>
    <p>Infusion pump</p>
  </div>
  <div class="page">
    <p>Experiment</p>
    <p>v Performed on both infusion pumps (Pump1, Pump2)</p>
    <p>v Saturation (failed in Pump2) - Sensor is saturated when injecting IR laser to receiver - Drop sensor cannot sense real drops -&gt; Over-infusion</p>
    <p>v Fake drops - Sensor is deceived by fake drops with external IR - Pump perceives that there are drops already -&gt; Under-infusion</p>
    <p>v Both cases cause an alarm</p>
  </div>
  <div class="page">
    <p>Spoofing Pattern</p>
    <p>v Over-infusion - Alarm: No drop is detected - Inject some period and compensate insufficient drops</p>
    <p>v Under-infusion - Alarm: Too many drops are detected - Find properly interval of fake drops experimentally</p>
    <p>v Example (60mL/h setting) - 1 drop per 3 seconds</p>
    <p>Normal operation</p>
    <p>Continuous saturation</p>
    <p>Over-infusion</p>
    <p>Saturation time (13s)</p>
    <p>Real drop interval (3s) drop fake drop</p>
    <p>Alarm</p>
    <p>Under-infusion</p>
    <p>Fake drop interval</p>
  </div>
  <div class="page">
    <p>Demo (Over-infusion)</p>
  </div>
  <div class="page">
    <p>Demo (Under-infusion)</p>
  </div>
  <div class="page">
    <p>Spoofing Pattern</p>
    <p>v Over-infusion - Alarm: No drop is detected - Inject some period and compensate insufficient drops</p>
    <p>v Under-infusion - Alarm: Too many drops are detected - Find properly interval of fake drops experimentally</p>
    <p>Normal operation</p>
    <p>Continuous saturation</p>
    <p>Over-infusion</p>
    <p>Saturation time</p>
    <p>Real drop interval drop fake drop</p>
    <p>Alarm</p>
    <p>Under-infusion</p>
    <p>Fake drop interval</p>
  </div>
  <div class="page">
    <p>Results</p>
    <p>v Controlling infused volume is possible - By adjusting saturation time or fake drops - Measured in 10 minutes and 5 times each (No alarm rings over 30 minutes) - Over-infusion fails on Pump2</p>
  </div>
  <div class="page">
    <p>Discussion</p>
    <p>v Attack distance - Related to power of source - Possible in the range of 12m with 30mW IR laser</p>
    <p>v Mitigation - Authentication between emitter and receiver</p>
    <p>PyCRA (CCS 15)  Generate random zero signal in an emitter</p>
    <p>- Voltage level detection  Checking boundary of legitimate signal</p>
    <p>- Physical isolation</p>
    <p>Saturation (by spoofing)</p>
    <p>Sensor output</p>
    <p>Real drops (without spoofing)</p>
    <p>Boundary check</p>
    <p>Detect!</p>
    <p>Concept of PyCRA</p>
    <p>Voltage level detection</p>
  </div>
  <div class="page">
    <p>Discussion</p>
    <p>v Attack distance - Related to power of source - Possible in the range of 12m with 30mW IR laser</p>
    <p>v Mitigation - Authentication between emitter and receiver</p>
    <p>PyCRA (CCS 15)  Generate random zero signal in an emitter</p>
    <p>- Voltage level detection  Checking boundary of legitimate signal</p>
    <p>- Physical isolation</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>v Presenting a new type of sensor spoofing attack - Deceiving a sensor by saturation</p>
    <p>v Analysis on medical infusion pumps - Finding vulnerability in drop detection algorithm</p>
    <p>v Controlling infused fluid from 65% to 330%</p>
    <p>v Note - Infusion pump was not communicating at all. - IR lay is invisible to human eyes. - FDA approved US devices?</p>
    <p>v Sensor security - Most sensors are exposed to receive signal - Must be considered for safety</p>
  </div>
  <div class="page">
    <p>Thank You!</p>
    <p>E-mail: ys.park@navercorp.com</p>
  </div>
</Presentation>
