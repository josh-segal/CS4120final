<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Greening The Video Transcoding Service With Low-Cost Hardware</p>
    <p>Transcoders Peng Liu, Jongwon Yoon, Lance Johnson,</p>
    <p>Suman Banerjee University of Wisconsin-Madison</p>
  </div>
  <div class="page">
    <p>Video Streaming Service Is Popular</p>
    <p>Mobile Video Will Generate Three-Quarters of Mobile Data Traffic by 2020. Source: Cisco VNI Mobile, 2016</p>
  </div>
  <div class="page">
    <p>Wireless Live Video Streaming</p>
    <p>Challenges to stream live video to mobile devices</p>
    <p>Glitch/JiUer InterrupVon Buffering</p>
  </div>
  <div class="page">
    <p>A TV Streaming Service On Campus  We have a deployment based on UDP mulVcast</p>
    <p>We developed a new system based on AdapVve BitRate (ABR) streaming over HTTP</p>
  </div>
  <div class="page">
    <p>ABR Streaming Over HTTP</p>
    <p>Transcoder 3</p>
    <p>Transcoder 2</p>
    <p>Transcoder 1</p>
    <p>Source Video Media Server</p>
    <p>Index File</p>
    <p>Video Player</p>
    <p>Video chunks with the same content and duraVon but</p>
    <p>different bitrates and qualiVes</p>
    <p>HTTP</p>
  </div>
  <div class="page">
    <p>Challenges Of Video Transcoding</p>
    <p>High power consumpVon</p>
    <p>on GPP</p>
    <p>High computaVonal complexity</p>
    <p>High throughput does not help for live video</p>
    <p>Video quality is criVcal</p>
  </div>
  <div class="page">
    <p>Goal A low-cost, highly efficient transcoder</p>
    <p>cluster to provide reliable service for a live video streaming service.</p>
  </div>
  <div class="page">
    <p>Outline  Video transcoding overview  Video decoder and encoder selecVon  VideoCoreCluster architecture  ImplementaVon  EvaluaVon  Deployment and summary</p>
  </div>
  <div class="page">
    <p>Outline  Video transcoding overview  Video decoder and encoder selecVon  VideoCoreCluster architecture  ImplementaVon  EvaluaVon  Deployment and summary</p>
  </div>
  <div class="page">
    <p>Video Transcoder ImplementaVons</p>
    <p>H.264 Decoder</p>
    <p>H.264 Encoder</p>
    <p>VS</p>
    <p>Flexible Efficient</p>
    <p>+</p>
    <p>MoVon PredicVon</p>
    <p>Entropy Decoding</p>
    <p>Entropy Encoding</p>
    <p>MoVon CompensaVon</p>
    <p>Transform</p>
    <p>MoVon EsVmaVon</p>
    <p>CombinaVon of decoder and encoder Specialized H.264 to H.264 transcoder</p>
  </div>
  <div class="page">
    <p>Outline  Video transcoding overview  Video decoder and encoder selecVon  VideoCoreCluster architecture  ImplementaVon  EvaluaVon  Deployment and summary</p>
  </div>
  <div class="page">
    <p>Available Video Decoder/Encoder Implementa)ons Advantages Disadvantages</p>
    <p>Sojware on GPP Flexible, good video quality High power consumpVon</p>
    <p>GPU-based Medium power consumpVon</p>
    <p>Expensive, inflexible</p>
    <p>FPGA-based Medium power consumpVon, flexible</p>
    <p>Expensive</p>
    <p>Hardware (ASIC or hardware IP in</p>
    <p>SoCs)</p>
    <p>Low power consumpVon Inflexible, medium video quality</p>
  </div>
  <div class="page">
    <p>Decoder &amp; Encoder In Our System  The GPU (VideoCore IV) of BCM2835 has high performance hardware H.264 video encoder and decoder.</p>
    <p>BCM2835 Raspberry Pi</p>
  </div>
  <div class="page">
    <p>Outline  Video transcoding overview  Video decoder and encoder selecVon  VideoCoreCluster architecture  ImplementaVon  EvaluaVon  Deployment and summary</p>
  </div>
  <div class="page">
    <p>VideoCoreCluster Architecture</p>
    <p>Cluster Manager</p>
    <p>Transcoder</p>
    <p>Dashboard</p>
    <p>MQTT Broker</p>
    <p>Transcoder Transcoder</p>
    <p>Media Server</p>
    <p>Player</p>
    <p>MQTT</p>
    <p>MQTT RTMP</p>
    <p>HTTP</p>
    <p>HTTP</p>
    <p>. . . . .</p>
  </div>
  <div class="page">
    <p>Outline  Video transcoding overview  Video decoder and encoder selecVon  VideoCoreCluster architecture  ImplementaVon  EvaluaVon  Deployment and summary</p>
  </div>
  <div class="page">
    <p>Media Server  Receives RTMP pushes  Cuts the video stream to chunks  Generates the index files on the fly  Supports both HLS and MPEG-DASH</p>
  </div>
  <div class="page">
    <p>Cluster Manager</p>
    <p>Scheduler</p>
    <p>task0 0 1</p>
    <p>task1 task2 task3 task4 task5 task0 task1 task2 task3 task0 task1 task2 task3 task4</p>
    <p>transcoder1</p>
    <p>Task lists with different prioriVes</p>
    <p>Transcoder List</p>
    <p>Assign Job</p>
    <p>Reclaim Job</p>
    <p>transcoder2 transcoder3</p>
    <p>Triggered by events</p>
  </div>
  <div class="page">
    <p>Transcoder Sojware Overview</p>
    <p>Cluster Agent</p>
    <p>Transcoding Worker 1</p>
    <p>Transcoding Worker 3</p>
    <p>Transcoding Worker 2</p>
    <p>MQTT</p>
    <p>RTMP RTMP RTMP</p>
  </div>
  <div class="page">
    <p>Transcoding Worker ImplementaVon</p>
    <p>VideoCore IV GPU</p>
    <p>Linux Kernel and Driver</p>
    <p>OpenMAX IL</p>
    <p>gst-omx plugins</p>
    <p>Demux plugins</p>
    <p>GStreamer Framework Mux</p>
    <p>plugins RTMP plugins</p>
    <p>Transcoding Worker</p>
    <p>Ethernet Controller</p>
    <p>ARM . . .</p>
  </div>
  <div class="page">
    <p>Transcoder SynchronizaVon</p>
    <p>.</p>
    <p>.</p>
    <p>Transcoder A</p>
    <p>Transcoder B</p>
    <p>Channel 1 (1.2Mbps)</p>
    <p>IDR IDR</p>
    <p>chunk</p>
    <p>Chunk numbers are generated from frames Vmestamps</p>
  </div>
  <div class="page">
    <p>Transcoder Failure Handling</p>
    <p>Task migraVon</p>
    <p>Rest RTMP connecVons to reset Vmestamps</p>
    <p>ABC_1200kbps</p>
    <p>ABC_800kbps</p>
    <p>ABC_600kbps</p>
    <p>ABC_400kbps</p>
    <p>Chunk Number</p>
  </div>
  <div class="page">
    <p>Outline  Video transcoding overview  Video decoder and encoder selecVon  VideoCoreCluster architecture  ImplementaVon  EvaluaVon  Deployment and summary</p>
  </div>
  <div class="page">
    <p>EvaluaVon Setup</p>
    <p>Transcoding worker on Raspberry Pi Model B</p>
    <p>FFmpeg H.264 decoder + x264 H.264 encoder Intel i5 processor with all the CPU capabiliVes (MMX, SSE2, AVX etc.) enabled</p>
    <p>vs.</p>
  </div>
  <div class="page">
    <p>Video Quality EvaluaVon</p>
    <p>PS N</p>
    <p>R (d</p>
    <p>B )</p>
    <p>Bitrate (kbps)</p>
    <p>PSNR vs Bitrate</p>
    <p>VideoCore IV x264-ultrafast x264-superfast x264-veryfast x264-medium x264-veryslow</p>
    <p>SS IM</p>
    <p>Bitrate (kbps)</p>
    <p>SSIM vs Bitrate</p>
    <p>VideoCore IV x264-ultrafast x264-superfast x264-veryfast x264-medium x264-veryslow</p>
    <p>Source: An HD channel (1280x720, 30fps) with bitrate 4Mbps</p>
  </div>
  <div class="page">
    <p>Transcoding Speed And Efficiency EvaluaVon</p>
    <p>VideoCore IV</p>
    <p>x264-superfast</p>
    <p>x264-medium</p>
    <p>Fr am</p>
    <p>er at</p>
    <p>e (f</p>
    <p>ps )</p>
    <p>Transcoders</p>
    <p>SD</p>
    <p>HD</p>
    <p>Video Sources: SD: 720x480, 30fps, 1.2Mbps HD: 1280x720, 30fps, 4Mbps</p>
    <p>Speed(fps) Power Consump)on</p>
    <p>(W)</p>
    <p>Efficiency</p>
    <p>VideoCore IV 120 2.5 7</p>
    <p>x264- superfast</p>
    <p>Transcoding Speed</p>
    <p>Transcoding Efficiency EsVmaVon (SD)</p>
  </div>
  <div class="page">
    <p>Outline  Video transcoding overview  Video decoder and encoder selecVon  VideoCoreCluster architecture  ImplementaVon  EvaluaVon  Deployment and summary</p>
  </div>
  <div class="page">
    <p>Deployment  We are deploying VideoCoreCluster in a hybrid and incremental way</p>
    <p>Currently 27 channels are being transcoded  More than 4000 sessions and about 480 total watching hours in a month (April 2016)</p>
  </div>
  <div class="page">
    <p>Summary  A low-cost, highly efficient video transcoder cluster (VideoCoreCluster) for a live video streaming service</p>
  </div>
  <div class="page">
    <p>Thanks! Q&amp;A</p>
  </div>
</Presentation>
