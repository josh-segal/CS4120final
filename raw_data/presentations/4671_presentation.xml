<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Optimal Power-Down Strategies</p>
    <p>Chaitanya Swamy Caltech</p>
    <p>John Augustine Sandy Irani University of California, Irvine</p>
  </div>
  <div class="page">
    <p>Dynamic Power Management</p>
    <p>Machine/server serving jobs/requests  in active state with high power consumption rate</p>
    <p>Idle period between requests  length is apriori unknown</p>
    <p>During idle period  can transition to low power state  incur power-down cost</p>
    <p>Idle power management: Determine when to transition so as to minimize total power consumed</p>
    <p>Request i</p>
    <p>Request i+1</p>
    <p>Idle period</p>
  </div>
  <div class="page">
    <p>Active state s0 : power consumption rate = 1 Sleep state s1 : power consumption rate = 0 Transition cost = d0,1 = cost to power-down from s0 to s1 Idle period length = t (not known in advance)</p>
    <p>Decide when to transition from active state to sleep state.</p>
    <p>Simply a continuous version of the ski-rental problem.</p>
    <p>d0,1</p>
    <p>OPT</p>
    <p>t</p>
    <p>Power consume</p>
    <p>d</p>
    <p>d0,1</p>
    <p>A(t), OPT(t): total power consumed when idle period length is tA</p>
    <p>Suppose t is generated by a probability distribution. Expected power ratio (e.p.r.) of A</p>
    <p>= Et [A(t)] / Et [OPT(t)]</p>
    <p>Competitive ratio (c.r.) of A = maxt A(t)/OPT(t) = 2</p>
  </div>
  <div class="page">
    <p>DPM with multiple sleep states</p>
    <p>Set of states S = (s0, s1,, sk) s0 : active state, rest are sleep states</p>
    <p>ri : power consumption rate of si r0 &gt; r1 &gt;  &gt; rk</p>
    <p>di,j : cost of transitioning from si to sj</p>
    <p>Power-down strategy is a tuple (S,T)</p>
    <p>S : sequence of states of S starting at s0 T : transition time sequence for S starting at t = 0</p>
  </div>
  <div class="page">
    <p>t = idle period length</p>
    <p>Power consume</p>
    <p>d</p>
    <p>d0,1</p>
    <p>s 0</p>
    <p>s 1</p>
    <p>s 2</p>
    <p>s 3</p>
    <p>d0,2</p>
    <p>d0,3</p>
  </div>
  <div class="page">
    <p>OPT is lower envelop of lines</p>
    <p>t = idle period length</p>
    <p>Power consume</p>
    <p>d</p>
    <p>d0,1</p>
    <p>s</p>
    <p>s 1</p>
    <p>s 2</p>
    <p>s 3</p>
    <p>d0,2</p>
    <p>d0,3</p>
    <p>Follow-OPT Strategy</p>
    <p>d0,1</p>
    <p>d1,2</p>
    <p>d2,3</p>
  </div>
  <div class="page">
    <p>Two Types of Bounds</p>
    <p>Global bound: what is the smallest c.r. (e.p.r.) * such that every DPM instance has a powerdown strategy of c.r. (or e.p.r.) at most * ?</p>
    <p>Instance-wise bound: Given a DPM instance I, what is the best c.r. (or e.p.r.) (I) for that instance?</p>
    <p>Clearly * = maxinstances I (I)</p>
    <p>Would like an algorithm that given instance I, computes strategy with c.r. (or e.p.r.) = (I).</p>
  </div>
  <div class="page">
    <p>Related Work  2-state DPM  ski-rental problem</p>
    <p>Karlin, Manasse, Rudolph &amp; Slater: global bound of 2 for c.r.</p>
    <p>Karlin, Manasse, McGeoch &amp; Owicki: global bound of e/(e-1) for expected power ratio.</p>
    <p>easy to give instance-wise optimal strategies.</p>
    <p>Multi-state DPM  Irani, Gupta &amp; Shukla: global bounds for additive</p>
    <p>transition costs, di,k = di,j + dj,k for all i&gt;j&gt;k  called DPM-A (additive). Show that Follow-OPT has c.r. = 2, give strategy with expected power ratio = e/(e-1).</p>
    <p>Other extensions  capital investment problem (Azar et al.)</p>
    <p>can view as DPM where states arrive over time, but with more restrictive transition costs.</p>
  </div>
  <div class="page">
    <p>Our Results</p>
    <p>Give the first bounds for (general) multi-state DPM.</p>
    <p>Global bounds: give a simple algorithm that computes strategy with competitive ratio *  5.83.</p>
    <p>Instance-wise bounds: Given instance I  find strategy with c.r. (I)+ in time O(k2log</p>
    <p>k.log(1/)). Use this to show a lower bound of *  2.45.</p>
    <p>find strategy with optimal expected power ratio for the instance.</p>
  </div>
  <div class="page">
    <p>Finding the Optimal Strategy</p>
    <p>DPM instance I is given.</p>
    <p>Want to find strategy with optimal competitive ratio for I.</p>
    <p>Decision procedure: given , find a strategy with c.r.   or say that none exists.</p>
    <p>Need to determine a) state sequence, and</p>
    <p>b) transition times.</p>
  </div>
  <div class="page">
    <p>Claim: For any strategy A, c.r.(A) = maxt=transition time of A A(t)/OPT(t).</p>
    <p>t = idle period length</p>
    <p>Power consume</p>
    <p>d</p>
    <p>OPT</p>
    <p>A</p>
  </div>
  <div class="page">
    <p>t = idle period length</p>
    <p>Power consume</p>
    <p>d</p>
    <p>OPT</p>
    <p>A</p>
    <p>Suppose A=(S,T) has c.r.  , and transitions to sS at time t1T s.t. A(t) &lt;</p>
    <p>.OPT(t).</p>
    <p>Then, can find new transition times T' such that a) A' = (S,T') has c.r.  , b) A' transitions to s at time t' &lt; t1.</p>
    <p>.OPT</p>
    <p>t1</p>
  </div>
  <div class="page">
    <p>tA(s) = transition time of s in strategy A</p>
    <p>Strat(s) = set of (partial) strategies A ending at s such that</p>
    <p>c.r.(A)   in [0,tA(s)]</p>
    <p>E(s) = minA' Strat(s) tA' (s) = early transition time of s Let A = strategy attaining above minimum.Properties of A:</p>
    <p>a) A(E(s)) = .OPT(E(s))</p>
    <p>b) All transitions before s are at early transition times  states q before s,</p>
    <p>tA(q) = E(q)</p>
    <p>t = idle period length</p>
    <p>Power</p>
    <p>OPT</p>
    <p>.OPT</p>
    <p>tA(s) = E(s)</p>
    <p>A</p>
  </div>
  <div class="page">
    <p>Dynamic Programming</p>
    <p>Compute E(s) values using dynamic programming.</p>
    <p>Suppose we know E(s') for all states s' &lt; s.</p>
    <p>Then, E(s) = mins' before s (time when s' transitions to s).</p>
    <p>To calculate quantity in brackets, use that:  Transition to s' was at t' = E(s') with A(t') = .OPT(t'),</p>
    <p>Transition to s must be at time t s.t. A(t) = .OPT(t).</p>
    <p>Finally, if E(s) is finite for state s with power consumption rate rS  .rk, then we have a strategy ending at s with c.r.  .</p>
  </div>
  <div class="page">
    <p>Global Bound</p>
    <p>OPT</p>
    <p>t = idle period length</p>
    <p>Power</p>
    <p>d0,1</p>
    <p>s 0</p>
    <p>s 1</p>
    <p>s 2</p>
    <p>s 3</p>
    <p>d0,2</p>
    <p>d0,3</p>
    <p>Follow-OPT Strategy</p>
    <p>d0,1</p>
    <p>d1,2</p>
    <p>d2,3</p>
    <p>May assume that there are no power-up costs and di,j  d0,j.</p>
    <p>Scaling to ensure that d0,i / d0,i+1  c where c &lt; 1.</p>
    <p>Theorem: Get a 5.83 competitive ratio.</p>
  </div>
  <div class="page">
    <p>Open Questions</p>
    <p>Randomized strategies: global or instance-wise bounds for randomized strategies.</p>
    <p>Better lower bounds.</p>
  </div>
  <div class="page">
    <p>Thank You.</p>
  </div>
</Presentation>
