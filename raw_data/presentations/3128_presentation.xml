<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Flexible and Fine-Grained Mandatory Access Control on Android for Diverse Security and Privacy Policies</p>
    <p>Sven Bugiel Joint work with Stephan Heuser and Ahmad-Reza Sadeghi</p>
    <p>System Security Lab Technische Universitt Darmstadt</p>
    <p>Cyber-physical Systems Security Fraunhofer SIT, Darmstadt</p>
    <p>Cryptography and InformaAon Security Group Saarland University</p>
  </div>
  <div class="page">
    <p>FlaskDroid: Generic security architecture for Android</p>
    <p>Policy language and example use-cases</p>
    <p>Design of FlaskDroid</p>
    <p>MoFvaFon for building a generic security architecture</p>
    <p>This talk is about:</p>
  </div>
  <div class="page">
    <p>Androids Security Architecture Shown To Be Insufficient</p>
  </div>
  <div class="page">
    <p>Example ALacks on Android</p>
    <p>Privacy</p>
    <p>ViolaFons</p>
    <p>Root Exploits Confused Deputy ALacks</p>
    <p>Collusion ALacks</p>
  </div>
  <div class="page">
    <p>Academic Security Extensions</p>
  </div>
  <div class="page">
    <p>Key ObservaGons</p>
  </div>
  <div class="page">
    <p>OBSERVATION #1: MOST SECURITY EXTENSIONS ARE MANDATORY ACCESS CONTROL SOLUTIONS TAILORED TO A SPECIFIC PROBLEM</p>
  </div>
  <div class="page">
    <p>Linux Kernel</p>
    <p>Middleware</p>
    <p>App A App B</p>
    <p>Saint [Ongtang et al., 2009]</p>
    <p>AcFvity Manager Service</p>
    <p>Package Manager Service</p>
    <p>RunFme policy: (expose|access) (source app, type, acFon) (desFnaFon app, component) condiFons</p>
    <p>Intents</p>
  </div>
  <div class="page">
    <p>Linux Kernel</p>
    <p>Middleware</p>
    <p>App A</p>
    <p>System Server</p>
    <p>Intents</p>
    <p>XManDroid / TrustDroid [Bugiel et al., 2012/2011]</p>
    <p>App B</p>
    <p>AMS</p>
    <p>Cont.Provider / Service</p>
    <p>Files/Sockets</p>
    <p>System Resources</p>
    <p>VALID policy language with Android-specific extensions</p>
  </div>
  <div class="page">
    <p>Linux Kernel</p>
    <p>Middleware</p>
    <p>Process A</p>
    <p>SE Android [Smalley and Craig, 2013]</p>
    <p>Files/Sockets</p>
    <p>Process B</p>
    <p>Binder</p>
    <p>System Resources</p>
    <p>SELinux policy language (kernel) and MMAC extensions (middleware)</p>
    <p>Package Manager Service</p>
    <p>AcFvity Manager Service</p>
  </div>
  <div class="page">
    <p>New use-cases (e.g. Phone Booth Mode)</p>
    <p>ExisFng work (e.g. Saint, TrustDroid,)</p>
    <p>Generic security architecture</p>
    <p>Nice to have: Policy-driven instanFaFons of use-cases</p>
  </div>
  <div class="page">
    <p>OBSERVATION #2: ACCESS CONTROL REQUIRED AT BOTH USER-SPACE AND KERNEL LEVEL</p>
  </div>
  <div class="page">
    <p>Service/ ContentProvider</p>
    <p>(Sensor, LocaFon, Contacts)</p>
    <p>ObservaFon #2: Access Control required at user-space and kernel level</p>
    <p>Kernel MAC</p>
    <p>App</p>
    <p>System Resources (File system, radio, GPS, )</p>
    <p>API</p>
    <p>Root Exploit</p>
    <p>Kernel</p>
    <p>User-space</p>
    <p>Permission Check</p>
    <p>Enforcement Hook</p>
  </div>
  <div class="page">
    <p>FlaskDroid</p>
  </div>
  <div class="page">
    <p>System-wide security framework operaFng on both middleware and kernel layer</p>
    <p>Policy language specifically designed for the rich semanFcs at middleware layer</p>
    <p>Policy-driven instanFaFons of use-cases and related work</p>
    <p>Main ContribuFons</p>
  </div>
  <div class="page">
    <p>Design App</p>
    <p>System Components (Objects)</p>
    <p>User-space Object</p>
    <p>Managers</p>
    <p>App Policies</p>
    <p>Security Server</p>
    <p>Kernel Resources (Objects)</p>
    <p>Kernel-space Object</p>
    <p>Managers</p>
    <p>Security Server</p>
    <p>Dynamic, system-state aware policies</p>
    <p>Support mulFple stakeholder</p>
    <p>Preserve security invariants (e.g., no root)</p>
    <p>Low-level enforcement in alignment with middleware</p>
    <p>AccessControlCheck(Subject, Object, OperaFon, System State) Policy provisioning/sync</p>
    <p>Middleware</p>
    <p>Kernel</p>
    <p>User Policy</p>
  </div>
  <div class="page">
    <p>ImplementaFon</p>
    <p>Services / AMS (LocaFon, Telephony,)</p>
    <p>ContentProviders (Contacts, SMS,)</p>
    <p>A PI</p>
    <p>A PI</p>
    <p>H ook</p>
    <p>H ook</p>
    <p>API access</p>
    <p>SE Android 4.0.4 Resource</p>
    <p>(Filesystem,)</p>
    <p>API Hook</p>
    <p>Low-Level MAC queries</p>
    <p>User-space Kernel space</p>
    <p>SysCall</p>
    <p>Context Providers</p>
    <p>Policy Database</p>
    <p>User System Apps</p>
    <p>User-Space Security Server</p>
    <p>App Policy</p>
    <p>App</p>
    <p>Rules update</p>
    <p>MAC queries</p>
    <p>User Policy App</p>
    <p>FlaskDroid component Modified component SE Android module Standard Android</p>
    <p>U pdate boolean flags</p>
    <p>GeolocaFon Network state</p>
    <p>Set acFve context Feedback</p>
    <p>Package Manager Service</p>
    <p>H ook A PI</p>
  </div>
  <div class="page">
    <p>Policy Language</p>
    <p>type android_t;! type contacts_email_v2_t;! ! ! ! class contentProvider_c! {! query insert update delete! readAccess writeAccess! };! ! class contactsProvider_c ! inherits contentProvider_c;!</p>
    <p>Type definFons for Type Enforcement</p>
    <p>New classes for middleware-specific objects</p>
  </div>
  <div class="page">
    <p>Policy Language (cont.)</p>
    <p>bool phoneBooth_b = false;! kbool app_network;! ! if(~phoneBooth_b)! {! allow app_telephony_t any: contactsProvider_c {query};! };! ! context phoneBooth_con;! switchBoolean! {! context=phoneBooth_con;! auto_reverse=true;! phoneBooth_b=true;! };! ! !</p>
    <p>Boolean definiFons for middleware and kernel</p>
    <p>CondiFonal policies</p>
    <p>Context definiFons and mapping to boolean values</p>
  </div>
  <div class="page">
    <p>Policy Language (cont.)</p>
    <p>appType app_contacts_t! {! Package:package_name=com.android.contacts;! };! ! intentType intentLaunchHome_t! {! Action:hasAction=android.intent.action.MAIN;! Categories:hasCategory=android.intent.category.HOME;! };! ! !</p>
    <p>Metrics for dyanmically assigning applicaFon and Intent types</p>
  </div>
  <div class="page">
    <p>Base Policy</p>
    <p>Policy #Types #Classes #Rules</p>
    <p>FlaskDroid Middleware MAC (base policy from 12/04/2012)</p>
    <p>SE Android 4.0.4 (master branch, 12/04/2012)</p>
    <p>SELinux Fedora 17 (targeted, policy.27 from 12/04/2012)</p>
  </div>
  <div class="page">
    <p>Use-case: Phone booth mode</p>
    <p>Home Calllog</p>
    <p>Contacts</p>
    <p>Calllog Provider Contacts Provider</p>
    <p>Query Query</p>
  </div>
  <div class="page">
    <p>Use-case: Phone booth mode</p>
    <p>Home Calllog</p>
    <p>Contacts</p>
    <p>Calllog Provider Contacts Provider</p>
    <p>Query Query User acFvates phone booth mode (Context)</p>
  </div>
  <div class="page">
    <p>Use-case: Fine-grained Access to Contacts Data</p>
    <p>Do these apps really need all my contacts data? Or are just the telephone numbers or email addresses enough?</p>
  </div>
  <div class="page">
    <p>Use-case: Fine-grained Access to Contacts Data</p>
    <p>User Policy App App</p>
  </div>
  <div class="page">
    <p>Use-case: Fine-grained Access to Contacts Data</p>
    <p>User Policy App App</p>
  </div>
  <div class="page">
    <p>Further use-cases  App developer policies</p>
    <p>(Saint)</p>
    <p>Secure integraAon of higher privileged 3rd party apps (Firewall and AnF-Virus apps, no root required)</p>
    <p>MulA-level security (private vs. business domain)</p>
    <p>Context-aware policies (prevent reading sensor data while keyboard in foreground)</p>
  </div>
  <div class="page">
    <p>Quo Vadis?  Port to SE Android 4.3  IntegraFon with SE Android MMAC</p>
    <p>Towards completeness  StaFc analysis of API for hook placement  Formal analysis of policy subspaces</p>
    <p>More fine-grained types  Currently assigned to applicaFon sandboxes</p>
  </div>
  <div class="page">
    <p>Thank You! QuesGons?</p>
    <p>www.flaskdroid.org</p>
  </div>
  <div class="page">
    <p>References  [Ongtang et al., 2009] M. Ongtang, S. McLaughlin, W.</p>
    <p>Enck, and P. McDaniel, SemanAcally Rich ApplicaAon- Centric Security in Android, in ACSAC 2009</p>
    <p>[Bugiel et al., 2011] S. Bugiel, L. Davi, A. Dmitrienko, S. Heuser, A.-R. Sadeghi, and B. Shastry, PracAcal and lightweight domain isolaAon on Android, in SPSM 2011</p>
    <p>[Bugiel et al., 2012] S. Bugiel, L. Davi, A. Dmitrienko, T. Fischer, A.-R. Sadeghi, and B. Shastry, Towards taming privilege-escalaAon aOacks on Android, in NDSS 2012</p>
    <p>[Smalley and Craig, 2013] S. Smalley and R. Craig, Security Enhanced (SE) Android: Bringing Flexible MAC to Android, in NDSS 2013.</p>
  </div>
</Presentation>
