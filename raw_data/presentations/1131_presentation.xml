<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>USENIX ATC 2018</p>
  </div>
  <div class="page">
    <p>CGraph: A Correlations-aware Approach for Efficient Concurrent</p>
    <p>Iterative Graph Processing</p>
  </div>
  <div class="page">
    <p>Part 1</p>
    <p>Background and Challenges</p>
  </div>
  <div class="page">
    <p>What is CGP Job</p>
    <p>PageRank k-means SSSP</p>
    <p>Graph Data</p>
    <p>Platform</p>
    <p>Shared</p>
    <p>Many concurrent graph processing jobs are daily executed over the same graph</p>
    <p>(or its different snapshots) to provide various information for different products</p>
  </div>
  <div class="page">
    <p>What is CGP Job</p>
    <p>PageRank k-means SSSP</p>
    <p>Graph Data</p>
    <p>Platform</p>
    <p>Shared</p>
  </div>
  <div class="page">
    <p>What is CGP Job</p>
    <p>(a) Number of the CGP jobs</p>
    <p>(b) Ratio of shared graph data</p>
    <p>R a ti</p>
    <p>o s</p>
    <p>h a re</p>
    <p>d b</p>
    <p>y #</p>
    <p>j o</p>
    <p>b s</p>
    <p>(% )</p>
    <p>Time (hours)</p>
    <p>#&gt;16 #&gt;8 #&gt;4</p>
    <p>#&gt;2 #&gt;1</p>
    <p>N u</p>
    <p>m b</p>
    <p>e r</p>
    <p>o f</p>
    <p>C G</p>
    <p>P j</p>
    <p>o b</p>
    <p>s</p>
    <p>Time (hours)</p>
    <p>The information traced over a large social network</p>
  </div>
  <div class="page">
    <p>What is CGP Job</p>
    <p>More than 20 CGP jobs</p>
    <p>to concurrently analyze the</p>
    <p>same graph at the peak time(a) Number of the CGP jobs</p>
    <p>(b) Ratio of shared graph data</p>
    <p>R a ti</p>
    <p>o s</p>
    <p>h a re</p>
    <p>d b</p>
    <p>y #</p>
    <p>j o</p>
    <p>b s</p>
    <p>(% )</p>
    <p>Time (hours)</p>
    <p>#&gt;16 #&gt;8 #&gt;4</p>
    <p>#&gt;2 #&gt;1</p>
    <p>N u</p>
    <p>m b</p>
    <p>e r</p>
    <p>o f</p>
    <p>C G</p>
    <p>P j</p>
    <p>o b</p>
    <p>s</p>
    <p>Time (hours)</p>
    <p>The information traced over a large social network</p>
  </div>
  <div class="page">
    <p>What is CGP Job</p>
    <p>Serious cache interference</p>
    <p>and memory wall(a) Number of the CGP jobs</p>
    <p>(b) Ratio of shared graph data</p>
    <p>R a ti</p>
    <p>o s</p>
    <p>h a re</p>
    <p>d b</p>
    <p>y #</p>
    <p>j o</p>
    <p>b s</p>
    <p>(% )</p>
    <p>Time (hours)</p>
    <p>#&gt;16 #&gt;8 #&gt;4</p>
    <p>#&gt;2 #&gt;1</p>
    <p>N u</p>
    <p>m b</p>
    <p>e r</p>
    <p>o f</p>
    <p>C G</p>
    <p>P j</p>
    <p>o b</p>
    <p>s</p>
    <p>Time (hours)</p>
    <p>The information traced over a large social network</p>
  </div>
  <div class="page">
    <p>Challenges: Data Access Problems in the CGP Jobs</p>
    <p>(a) Average execution time (b) Average data access time</p>
    <p>E x e c u ti</p>
    <p>o n t</p>
    <p>im e o</p>
    <p>f e a c h j</p>
    <p>o b</p>
    <p>Number of jobs</p>
    <p>PageRank</p>
    <p>SSSP</p>
    <p>SCC</p>
    <p>BFS</p>
    <p>D a ta</p>
    <p>a c c e ss</p>
    <p>t im</p>
    <p>e o</p>
    <p>f e a c h j</p>
    <p>o b</p>
    <p>Number of jobs</p>
    <p>PageRank</p>
    <p>SSSP</p>
    <p>SCC</p>
    <p>BFS</p>
    <p>The average execution time of each job is significantly prolonged as the number</p>
    <p>of jobs increases due to higher data access cost</p>
  </div>
  <div class="page">
    <p>Challenges: An Example</p>
    <p>Reason: The CGP jobs</p>
    <p>contend for data access</p>
    <p>channel, memory and cache</p>
    <p>P1</p>
    <p>J3:</p>
    <p>P2 P3 P4</p>
    <p>Time</p>
    <p>J2:</p>
    <p>J1:</p>
    <p>Iteration n3 for J3</p>
    <p>P4 P3 P2 P1</p>
    <p>P2 P4 P1 P3</p>
    <p>Iteration n2 for J2</p>
    <p>Iteration n1 for J1</p>
    <p>An Iteration of Graph Processing</p>
    <p>The CGP jobs access the shared graph</p>
    <p>partitions in an individual manner along</p>
    <p>different graph paths</p>
    <p>The processing time of each partition is</p>
    <p>various for different jobs</p>
  </div>
  <div class="page">
    <p>Motivations</p>
    <p>R a ti</p>
    <p>o s</p>
    <p>h a re</p>
    <p>d b</p>
    <p>y #</p>
    <p>j o</p>
    <p>b s</p>
    <p>(% )</p>
    <p>Time (hours)</p>
    <p>#&gt;16 #&gt;8 #&gt;4</p>
    <p>#&gt;2 #&gt;1</p>
    <p>Observations:</p>
    <p>-Spatial correlation</p>
    <p>-Temporal correlation</p>
  </div>
  <div class="page">
    <p>Motivations</p>
    <p>Observations:</p>
    <p>-Spatial correlation: The intersections of the set of graph partitions to be</p>
    <p>handled by different CGP jobs in each iteration are large (more than 75% of all</p>
    <p>active partitions on average).</p>
    <p>R a ti</p>
    <p>o s</p>
    <p>h a re</p>
    <p>d b</p>
    <p>y #</p>
    <p>j o</p>
    <p>b s</p>
    <p>(% )</p>
    <p>Time (hours)</p>
    <p>#&gt;16 #&gt;8 #&gt;4</p>
    <p>#&gt;2 #&gt;1</p>
    <p>-Temporal correlation</p>
  </div>
  <div class="page">
    <p>Motivations</p>
    <p>Observations:</p>
    <p>-Spatial correlation: The intersections of the set of graph partitions to be</p>
    <p>handled by different CGP jobs in each iteration are large (more than 75% of all</p>
    <p>active partitions on average).</p>
    <p>-Temporal correlation: Some graph partitions may be accessed by multiple</p>
    <p>CGP jobs (may be more than 16 jobs) within a short time duration.</p>
    <p>R a ti</p>
    <p>o s</p>
    <p>h a re</p>
    <p>d b</p>
    <p>y #</p>
    <p>j o</p>
    <p>b s</p>
    <p>(% )</p>
    <p>Time (hours)</p>
    <p>#&gt;16 #&gt;8 #&gt;4</p>
    <p>#&gt;2 #&gt;1</p>
  </div>
  <div class="page">
    <p>Motivations</p>
    <p>Develop a solution for efficient use of cache/memory and the data access channel</p>
    <p>to achieve a higher throughput by fully exploiting the spatial/temporal correlations</p>
    <p>Observations:</p>
    <p>-Spatial correlation: The intersections of the set of graph partitions to be</p>
    <p>handled by different CGP jobs in each iteration are large (more than 75% of all</p>
    <p>active partitions on average).</p>
    <p>-Temporal correlation: Some graph partitions may be accessed by multiple</p>
    <p>CGP jobs (may be more than 16 jobs) within a short time duration.</p>
    <p>R a ti</p>
    <p>o s</p>
    <p>h a re</p>
    <p>d b</p>
    <p>y #</p>
    <p>j o</p>
    <p>b s</p>
    <p>(% )</p>
    <p>Time (hours)</p>
    <p>#&gt;16 #&gt;8 #&gt;4</p>
    <p>#&gt;2 #&gt;1</p>
  </div>
  <div class="page">
    <p>Motivations: An Example</p>
    <p>Load the shared partitions for the</p>
    <p>related jobs along a common</p>
    <p>order to provide opportunity to</p>
    <p>consolidate the accesses to the</p>
    <p>shared graph structure and store</p>
    <p>a single copy of the shared data</p>
    <p>in the cache to serve multiple</p>
    <p>CGP jobs at the same time.</p>
    <p>Spatial Correlations</p>
    <p>Temporal Correlations</p>
    <p>P1</p>
    <p>J3:</p>
    <p>P2 P3 P4</p>
    <p>Time</p>
    <p>J2:</p>
    <p>J1:</p>
    <p>An Iteration of Graph Processing</p>
    <p>P1 P2 P3 P4</p>
    <p>P1 P2 P3 P4</p>
    <p>J4: P2 P4</p>
    <p>J5: P1 P3 P4</p>
    <p>Iteration n5 for J5</p>
    <p>Iteration n4 for J4</p>
    <p>Iteration n3 for J3</p>
    <p>Iteration n2 for J2</p>
    <p>Iteration n1 for J1</p>
  </div>
  <div class="page">
    <p>Motivations: An Example</p>
    <p>Load the shared partitions for the</p>
    <p>related jobs along a common</p>
    <p>order to provide opportunity to</p>
    <p>consolidate the accesses to the</p>
    <p>shared graph structure and store</p>
    <p>a single copy of the shared data</p>
    <p>in the cache to serve multiple</p>
    <p>CGP jobs at the same time.</p>
    <p>Spatial Correlations</p>
    <p>Temporal Correlations</p>
    <p>Take into account the temporal</p>
    <p>correlations, e.g., the usage</p>
    <p>frequency of the graph partitions,</p>
    <p>when loading them into the cache</p>
    <p>P1</p>
    <p>J3:</p>
    <p>P2 P3 P4</p>
    <p>Time</p>
    <p>J2:</p>
    <p>J1:</p>
    <p>An Iteration of Graph Processing</p>
    <p>P1 P2 P3 P4</p>
    <p>P1 P2 P3 P4</p>
    <p>J4: P2 P4</p>
    <p>J5: P1 P3 P4</p>
    <p>Iteration n5 for J5</p>
    <p>Iteration n4 for J4</p>
    <p>Iteration n3 for J3</p>
    <p>Iteration n2 for J2</p>
    <p>Iteration n1 for J1</p>
  </div>
  <div class="page">
    <p>Part 2</p>
    <p>Related Work</p>
  </div>
  <div class="page">
    <p>Existing Graph Processing Systems</p>
    <p>GraphChi X-Stream GridGraph NXgraph CLIP</p>
    <p>Single graph processing</p>
  </div>
  <div class="page">
    <p>Existing Graph Processing Systems</p>
    <p>Mainly focus on</p>
    <p>single graph</p>
    <p>processing job</p>
    <p>GraphChi X-Stream GridGraph NXgraph CLIP</p>
    <p>Single graph processing</p>
    <p>Higher sequential memory bandwidth</p>
    <p>Better data locality</p>
    <p>Less redundant data accesses</p>
    <p>Less memory consumption</p>
  </div>
  <div class="page">
    <p>Existing Graph Processing Systems</p>
    <p>GraphChi X-Stream GridGraph NXgraph CLIP</p>
    <p>Single graph processing Concurrent graph processing</p>
    <p>Mainly focus on</p>
    <p>single graph</p>
    <p>processing job</p>
    <p>Higher sequential memory bandwidth</p>
    <p>Better data locality</p>
    <p>Less redundant data accesses</p>
    <p>Less memory consumption</p>
  </div>
  <div class="page">
    <p>Part 3</p>
    <p>Our Approach:</p>
    <p>A Correlations-aware Data-centric</p>
    <p>Execution Model</p>
  </div>
  <div class="page">
    <p>Main Goals</p>
    <p>Minimize the redundant accessing and storing cost of the</p>
    <p>shared graph structure dataoccupies more than 70% of the total memory of each jobby fully exploiting the spatial/temporal correlations between the CGP jobs</p>
  </div>
  <div class="page">
    <p>Data-centric LTP Execution Model</p>
    <p>Traditional approach:</p>
    <p>Most graph structure data G=(V, E, W) is the same</p>
    <p>for different CGP jobs</p>
  </div>
  <div class="page">
    <p>Data-centric LTP Execution Model</p>
    <p>Traditional approach:</p>
    <p>D = (V, S, E, W)</p>
    <p>G = (V, E, W), where</p>
    <p>Load-Trigger-Pushing (denoted by LTP) model:</p>
    <p>Most graph structure data G=(V, E, W) is the same</p>
    <p>for different CGP jobs</p>
  </div>
  <div class="page">
    <p>Data-centric LTP Execution Model</p>
    <p>Graph Loading:</p>
    <p>Memory/Disk</p>
    <p>Load of graph structure data</p>
    <p>Global Space (Storing the shared graph structure data)</p>
    <p>Load-Trigger-Pushing (denoted by LTP) model:</p>
  </div>
  <div class="page">
    <p>Data-centric LTP Execution Model</p>
    <p>Trigger and Parallel Execution:</p>
    <p>Memory/Disk</p>
    <p>Load of graph structure data</p>
    <p>Global Space (Storing the shared graph structure data)</p>
    <p>...</p>
    <p>Parallel trigger</p>
    <p>Graph Loading:</p>
    <p>Load-Trigger-Pushing (denoted by LTP) model:</p>
  </div>
  <div class="page">
    <p>Data-centric LTP Execution Model</p>
    <p>State Pushing:</p>
    <p>Memory/Disk</p>
    <p>Load of graph structure data</p>
    <p>Global Space (Storing the shared graph structure data)</p>
    <p>...</p>
    <p>Parallel trigger</p>
    <p>State push State push State push</p>
    <p>Trigger and Parallel Execution:</p>
    <p>Graph Loading:</p>
    <p>Load-Trigger-Pushing (denoted by LTP) model:</p>
  </div>
  <div class="page">
    <p>Illustration of Our LTP Model</p>
    <p>Memory/Disk</p>
    <p>Partition 1 Partition 2</p>
    <p>... Scheduler(Arranging the</p>
    <p>Loading order of graph</p>
    <p>structure partitions)</p>
    <p>Global Space</p>
    <p>v1</p>
    <p>v2 v3 2.9</p>
    <p>Partition 1</p>
    <p>PageRank job</p>
    <p>Job specific space of</p>
    <p>PageRank Job</p>
    <p>SSSP job</p>
    <p>Job specific space of</p>
    <p>SSSP Job</p>
    <p>...</p>
    <p>IsNotConvergent (vh):</p>
    <p>return |vh.value|&gt;</p>
    <p>Acc(value1, value2):</p>
    <p>return value1+value2</p>
    <p>Compute(Gi, vh)://Processing of each vertex</p>
    <p>vh.value Acc(vh.value, vh.value)</p>
    <p>&lt;links&gt; look up outlinks of vh from Gi</p>
    <p>for(each link &lt;vh, ve&gt; &lt;links&gt;){</p>
    <p>value d vh.value/Gi[vh].OutDegree</p>
    <p>ve.value Acc(ve.value, value)</p>
    <p>}</p>
    <p>IsNotConvergent (vh):</p>
    <p>return |vh.value| 0</p>
    <p>Acc(value1, value2):</p>
    <p>return min(value1, value2)</p>
    <p>Compute(Gi, vh)://Processing of each vertex</p>
    <p>vh.value Acc(vh.value, vh.value)</p>
    <p>&lt;links&gt; look up outlinks of vh from Gi</p>
    <p>for(each link &lt;vh, ve&gt; &lt;links&gt;){</p>
    <p>value vh.value+&lt;vh, ve&gt;.distance</p>
    <p>ve.value Acc(ve.value, value)</p>
    <p>}</p>
    <p>Cache</p>
    <p>v1</p>
    <p>v2 v3 2.9</p>
    <p>v3</p>
    <p>v4</p>
    <p>v5 1.5</p>
    <p>Vertex ID Value</p>
    <p>v1 0.2</p>
    <p>v2 0.1</p>
    <p>v3 0.25</p>
    <p>Vertex ID Value</p>
    <p>v1 1.2</p>
    <p>v2 0</p>
    <p>v3 2.9</p>
  </div>
  <div class="page">
    <p>Implementations: Graph Storage for Multiple CGP Jobs</p>
    <p>Vertex ID Value</p>
    <p>v1 0.2</p>
    <p>v2 0.1</p>
    <p>v3 0.25</p>
    <p>PageRank Job</p>
    <p>Vertex ID Edge List Flag Master Location Information Associated with Its Edges</p>
    <p>v1 v3 Master Partition 1 1.1</p>
    <p>v2 v1, v3 Master Partition 1 1.2, 2.9</p>
    <p>v3  Master Partition 1</p>
    <p>Private Table Partitions</p>
    <p>Graph Structure Partitions</p>
    <p>Vertex ID Value</p>
    <p>v3 0.05</p>
    <p>v4 0.1</p>
    <p>v5 0.3</p>
    <p>Vertex ID Value</p>
    <p>v1 1.2</p>
    <p>v2 0</p>
    <p>v3 2.9</p>
    <p>SSSP Job</p>
    <p>Private Table Partitions</p>
    <p>Vertex ID Value</p>
    <p>v3</p>
    <p>v4</p>
    <p>v5</p>
    <p>Vertex ID Edge List Flag Master Location Information Associated with Its Edges</p>
    <p>v3 v5 Mirror Partition 1 1.5</p>
    <p>v4 v3, v5 Master Partition 2 0.9, 2.5</p>
    <p>v5  Master Partition 2</p>
    <p>v1</p>
    <p>v2 v3</p>
    <p>v4</p>
    <p>v5 2.9 1.5</p>
    <p>Partition 1 Partition 2</p>
  </div>
  <div class="page">
    <p>ImplementationsDetails to Store Evolving Graph Structure</p>
    <p>Timestamp 1 Timestamp 2 Timestamp3</p>
    <p>Job 1 Job 2 Job 3</p>
    <p>Partition 4</p>
    <p>Partition 2</p>
    <p>Partition 4</p>
    <p>Partition 1</p>
    <p>Partition 2</p>
    <p>Partition 3</p>
    <p>Partition 4</p>
    <p>Time</p>
  </div>
  <div class="page">
    <p>ImplementationsLoad of Partitions</p>
    <p>Partition 1</p>
    <p>Partition 2</p>
    <p>Partition 3</p>
    <p>Partition 4</p>
    <p>J1</p>
    <p>J1</p>
    <p>J1</p>
    <p>J1</p>
    <p>J1 J2</p>
    <p>J2</p>
    <p>J1</p>
    <p>J1</p>
    <p>J1 J2 J3</p>
    <p>J1 J2 J3</p>
    <p>J1</p>
    <p>J1</p>
    <p>(a) There is only one job J1</p>
    <p>Partition 1</p>
    <p>Partition 2</p>
    <p>Partition 3</p>
    <p>Partition 4</p>
    <p>Partition 1</p>
    <p>Partition 2</p>
    <p>Partition 3</p>
    <p>Partition 4</p>
    <p>(b) J2 has been submitted</p>
    <p>(c) J3 has been submitted</p>
  </div>
  <div class="page">
    <p>ImplementationsLoad of Partitions</p>
    <p>A core-subgraph based scheduling algorithm can be used to maximize the</p>
    <p>utilization ratio of each partition loaded into the cache</p>
    <p>B</p>
    <p>D</p>
    <p>C</p>
    <p>A</p>
    <p>E</p>
  </div>
  <div class="page">
    <p>ImplementationsParallel Processing of Graph Partition</p>
    <p>Cache</p>
    <p>Private Partition 1 of Job 1 Private Partition</p>
    <p>Private Partition</p>
    <p>Graph Structure Partition 1</p>
    <p>Core 1</p>
    <p>Job 1</p>
    <p>Core 2 Core 3</p>
    <p>Job 2</p>
    <p>Core 4</p>
    <p>Job 3</p>
  </div>
  <div class="page">
    <p>ImplementationsParallel Processing of Graph Partition</p>
    <p>Cache</p>
    <p>Private Partition 1 of Job 1 Private Partition</p>
    <p>Private Partition</p>
    <p>Graph Structure Partition 1</p>
    <p>Core 1</p>
    <p>Job 1</p>
    <p>Core 2</p>
    <p>Job 1</p>
    <p>Core 3</p>
    <p>Job 2</p>
    <p>Core 4</p>
    <p>Job 3</p>
  </div>
  <div class="page">
    <p>ImplementationsVertex State Synchronization</p>
    <p>Synchronization</p>
    <p>from Master to</p>
    <p>Mirrors</p>
    <p>v1</p>
    <p>v2 v3</p>
    <p>v3</p>
    <p>v4</p>
    <p>v5</p>
    <p>Partition 1 Partition 2</p>
    <p>v1</p>
    <p>v6 v3</p>
    <p>Partition 3</p>
    <p>v4</p>
    <p>v4</p>
    <p>v5</p>
    <p>v6</p>
    <p>P1:v3-&gt;P2:v3</p>
    <p>P1:v4-&gt;P2:v4</p>
    <p>P1:v6-&gt;P3:v6</p>
    <p>P1:v3-&gt;P2:v3</p>
    <p>P1:v4-&gt;P2:v4</p>
    <p>P1:v6-&gt;P3:v6</p>
    <p>P2:v3-&gt;P1:v3</p>
    <p>P2:v4-&gt;P1:v4</p>
    <p>P2:v3-&gt;P3:v3</p>
    <p>P2:v4-&gt;P3:v4</p>
    <p>P2:v3-&gt;P1:v3</p>
    <p>P2:v4-&gt;P1:v4</p>
    <p>P2:v3-&gt;P3:v3</p>
    <p>P2:v4-&gt;P3:v4</p>
    <p>Non-optimized:</p>
    <p>Non-optimized:</p>
    <p>Optimized:</p>
    <p>Optimized:</p>
    <p>Synchronization</p>
    <p>from Mirrors to</p>
    <p>Master</p>
  </div>
  <div class="page">
    <p>Part 4</p>
    <p>Performance Evaluation</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Experimental setup</p>
    <p>Data sets Vertices Edges Sizes</p>
    <p>Twitter 41.7 M 1.4 B 17.5 GB</p>
    <p>Friendster 65 M 1.8 B 22.7 GB</p>
    <p>uk2007 105.9 M 3.7 B 46.2 GB</p>
    <p>uk-union 133.6 M 5.5 B 68.3 GB</p>
    <p>hyperlink14 1.7 B 64.4 B 480.0 GB</p>
    <p>Properties of data sets</p>
    <p>Machine information</p>
    <p>-CPU: 4-way 8-core Intel Xeon CPU E5-2670; each CPU has 20 MB LLC</p>
    <p>-Main Memory: 64 GB</p>
    <p>Typical graph algorithms</p>
    <p>-PageRank, SSSP, SCC, BFS</p>
    <p>Data sets</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>PageRank SSSP SCC BFS</p>
    <p>PageRank SSSP SCC BFS</p>
    <p>PageRank SSSP SCC BFS</p>
    <p>PageRank SSSP SCC BFS</p>
    <p>................................................................................................</p>
    <p>................................................................................................</p>
    <p>................................................................................................</p>
    <p>CGraph</p>
    <p>Seraph</p>
    <p>Nxgraph</p>
    <p>CLIP</p>
    <p>Execution time breakdown (%) D</p>
    <p>if fe</p>
    <p>re n</p>
    <p>t J o</p>
    <p>b s</p>
    <p>Vertex processing time</p>
    <p>Time for data accessing</p>
    <p>T w itt er</p>
    <p>F rie</p>
    <p>nd st er</p>
    <p>uk 20</p>
    <p>uk -u</p>
    <p>ni on</p>
    <p>hy pe</p>
    <p>rli nk</p>
    <p>.......................................................................</p>
    <p>N o</p>
    <p>rm a</p>
    <p>li z e</p>
    <p>d e</p>
    <p>x e</p>
    <p>c u ti o</p>
    <p>n t</p>
    <p>im e</p>
    <p>Data sets</p>
    <p>CLIP Nxgraph</p>
    <p>Seraph CGraph</p>
    <p>Total execution time for the four jobs</p>
    <p>with different solutions Execution time breakdown of</p>
    <p>different jobs on hyperlink14</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>T w itt er</p>
    <p>F rie</p>
    <p>nd st er</p>
    <p>uk 20</p>
    <p>uk -u</p>
    <p>ni on</p>
    <p>hy pe</p>
    <p>rli nk</p>
    <p>.......................................................................</p>
    <p>N o</p>
    <p>rm a</p>
    <p>li z e</p>
    <p>d V</p>
    <p>o lu</p>
    <p>m e</p>
    <p>Data sets</p>
    <p>CLIP Nxgraph</p>
    <p>Seraph CGraph</p>
    <p>Volume of data swapped</p>
    <p>into the cache for the four jobs</p>
    <p>T w itt er</p>
    <p>F rie</p>
    <p>nd st er</p>
    <p>uk 20</p>
    <p>uk -u</p>
    <p>ni on</p>
    <p>hy pe</p>
    <p>rli nk</p>
    <p>......................................................................</p>
    <p>N o</p>
    <p>rm a</p>
    <p>li z e</p>
    <p>d I</p>
    <p>/O o</p>
    <p>v e</p>
    <p>rh e</p>
    <p>a d</p>
    <p>Data sets</p>
    <p>CLIP Nxgraph</p>
    <p>Seraph CGraph</p>
    <p>I/O overhead for the four jobs with</p>
    <p>different solutions</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>R a</p>
    <p>ti o o</p>
    <p>f s p a re</p>
    <p>d a</p>
    <p>c c e s s e s (</p>
    <p>% )</p>
    <p>Number of jobs</p>
    <p>Seraph-VT</p>
    <p>Seraph</p>
    <p>CGraph</p>
    <p>Ratio of spared accessed data on</p>
    <p>hyperlink14</p>
    <p>T w itt er</p>
    <p>F rie</p>
    <p>nd st er</p>
    <p>uk 20</p>
    <p>uk -u</p>
    <p>ni on</p>
    <p>hy pe</p>
    <p>rli nk</p>
    <p>N o rm</p>
    <p>a li z e d e</p>
    <p>x e c u ti o n t</p>
    <p>im e (</p>
    <p>% )</p>
    <p>Data sets</p>
    <p>CGraph-without CGraph</p>
    <p>Execution time for the four jobs</p>
    <p>without/with our scheduler</p>
  </div>
  <div class="page">
    <p>Part 5</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>What CGraph brings in graph processing  Analysis of temporal/spatial correlations in concurrent graph processing</p>
    <p>A novel data-centric LTP model for concurrent graph processing</p>
    <p>A core-subgraph based scheduling scheme</p>
    <p>Future work  How to further optimize the approach for evolving graph analysis</p>
    <p>How to ensure QoS for some real-time CGP jobs</p>
    <p>How to extend it to a distributed platform and also heterogeneous platform</p>
    <p>consisting of GPU, FPGA and even ASIC for higher throughput.</p>
  </div>
  <div class="page">
    <p>Thanks!</p>
    <p>Service Computing Technology and System Lab., MoE (SCTS)</p>
    <p>Cluster and Grid Computing Lab., Hubei Province (CGCL)</p>
  </div>
</Presentation>
