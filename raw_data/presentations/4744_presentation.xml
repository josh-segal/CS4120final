<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Synthesizing View Definitions from Data</p>
    <p>Aditya Parameswaran Stanford University</p>
    <p>(Joint work with A. Das Sarma, H. Garcia-Molina and J. Widom)</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>?? complex process</p>
    <p>?? complex process</p>
    <p>DatabaseDatabase</p>
    <p>ViewView</p>
    <p>SQL Query SQL Query</p>
    <p>Similar Database</p>
    <p>Similar Database</p>
    <p>SQL Query</p>
    <p>SQL Query</p>
    <p>View View</p>
    <p>View Inspector</p>
    <p>Programs / Manual Selection</p>
    <p>Programs / Manual Selection</p>
  </div>
  <div class="page">
    <p>Database Triplets</p>
    <p>D, Q  V : Query Proc. and Optimization  V, Q  D : (Loosely) Data Integration  D, V  Q : ??</p>
  </div>
  <div class="page">
    <p>View Definitions Problem (VDP)</p>
    <p>View Definitions Problem Input: Database D, View V Output: Find Q such that:</p>
    <p>(1) Closeness: Q(D) V (level of approximation)</p>
    <p>(2) Succinctness: Q is succinct</p>
    <p>(1) What class of queries?</p>
    <p>(2) What is Closeness?</p>
    <p>(3) What is Succinctness?</p>
    <p>Q ?Q ?</p>
    <p>DatabaseDatabase</p>
    <p>ViewView</p>
  </div>
  <div class="page">
    <p>R,V Q ; Q(R)V</p>
    <p>o Single Predicate o Conjunctive Query (CQ) o Unions of CQs o At most unions of k CQs</p>
    <p>Equality Predicates  Range Predicates</p>
  </div>
  <div class="page">
    <p>Exact View Definition. Given R,V, find Q s.t. Q(R)=V.</p>
    <p>R,V Q ; Q(R)V3. Succinctness o Conjunctive Query: s = Number of predicates o Unions of CQs: s = Number of unions</p>
    <p>Best View Definition. Given R,V, find Q s.t. (1) Q, d(Q(R),V)  d(Q(R),V) (2) Q, d(Q(R),V) = d(Q(R),V)  s(Q)  s(Q)</p>
    <p>Approximate View Definition. Given R,V, , find Q s.t. (1) d(Q(R),V)   (2) Q, d(Q(R),V)    s(Q)  s(Q)</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>Movie Genre Box Office</p>
    <p>Kill Bill Action Hit</p>
    <p>Pulp Fiction</p>
    <p>Comedy Hit</p>
    <p>Snatch Comedy Hit</p>
    <p>The Godfather</p>
    <p>Action Hit</p>
    <p>Movie Genre Box Office</p>
    <p>Kill Bill Action Hit</p>
    <p>Pulp Fiction</p>
    <p>Comedy Hit</p>
    <p>Snatch Comedy Hit</p>
    <p>R V</p>
    <p>Q</p>
    <p>CQ: (Box office = Hit) Dist = 1</p>
    <p>CQ: (Box office = Hit) Dist = 1</p>
    <p>UCQ: ((Box office = Hit)(Genre=Comedy))  (Movie=Kill Bill)</p>
    <p>Dist = 0</p>
    <p>UCQ: ((Box office = Hit)(Genre=Comedy))  (Movie=Kill Bill)</p>
    <p>Dist = 0</p>
  </div>
  <div class="page">
    <p>Summary of Results</p>
  </div>
  <div class="page">
    <p>Conjunctive Queries: BVD  Finding best view definition is NP-hard  Reduction from Set Cover</p>
    <p>Set Cover Instance: Universe: U = {1, 2, , n} Sets: S1 ,S2 ,..., Sm Fewest sets covering U</p>
    <p>VDP: R(A1 ,A2 ,, Am ) t0, t1, , tn  R. V= {t0} Find smallest CQ: Q(R)=V</p>
    <p>R A1 A2 Aj Am</p>
    <p>t0 t1 .. ti tn</p>
    <p>Step-1: 0 if i not in Sj</p>
    <p>Step-2: t0 .Aj = 0 0 0 0 0</p>
    <p>Step-3: all distinct</p>
  </div>
  <div class="page">
    <p>Conjunctive Queries  Set Cover</p>
    <p>V</p>
    <p>R P1P1</p>
    <p>P2P2</p>
    <p>P3P3</p>
    <p>PkPk</p>
    <p>All Pi(R) V|U</p>
    <p>U=R-V</p>
    <p>Cover U with fewest setsIf EVD exists =&gt; Exact BVD Else Approximate (BVD/AVD)</p>
  </div>
  <div class="page">
    <p>K-Unions: Greedy Pickings</p>
    <p>C1C1</p>
    <p>C2C2</p>
    <p>C3C3</p>
    <p>CrCr</p>
    <p>V</p>
    <p>R-V</p>
    <p>goo d</p>
    <p>bad</p>
    <p>Greedy Pickings algorithm:</p>
    <p>At each step, pick Ci with max (good  bad)</p>
    <p>R(A1, A2, , Am), V  Find k-unions Q s.t. d(Q(R),V) minimized</p>
  </div>
  <div class="page">
    <p>K-Unions</p>
    <p>Distance metrics: d: X+Z gb: Y-X</p>
    <p>QQ goo</p>
    <p>d</p>
    <p>bad</p>
    <p>V</p>
    <p>R-V</p>
    <p>Y</p>
    <p>Z</p>
    <p>X No greedy algorithm can achieve sub-linear (in |V|) approximation ratio Rd or Rgb</p>
    <p>Approximation ratios: Rd = d*/do Rgb = gbo/gb*</p>
    <p>Proof Idea: (bad case) Greedy algorithms pick Ci do well on a greedy f  but have distinct bad tuples Optimal solution picks Ci that do less well  but share bad tuples</p>
    <p>Good News: Greedy Pickings ensures min (Rd,Rgb)  2k</p>
  </div>
  <div class="page">
    <p>QoptQopt goo</p>
    <p>d</p>
    <p>bad</p>
    <p>V</p>
    <p>R-V</p>
    <p>Y</p>
    <p>Z</p>
    <p>X</p>
    <p>do=X+Z; gbo=Y-X</p>
    <p>Exists Ci* with Y/k good and  X bad tuples d*  (X + Y + Z - Y/k) gb* (Y/k - X) Setting  = (Y-X)/(Y/k-X): Rgb   Rd  1 + (k-1)(-1)/(-k) For all : min (Rgb, Rd)  2k</p>
  </div>
  <div class="page">
    <p>Better algorithms?  Multiple relations: joins, , , union,   Multiple instances: (V1,D1), , (Vn,Dn)  Incremental or interactive VDP</p>
    <p>20 questions for View Synthesis</p>
    <p>Future Work</p>
    <p>Q ??Q ??</p>
    <p>DatabaseDatabase</p>
    <p>ViewView</p>
  </div>
  <div class="page">
    <p>Thanks!</p>
    <p>Aditya Parameswaran adityagp@cs.stanford.edu</p>
    <p>View Inspector</p>
  </div>
</Presentation>
