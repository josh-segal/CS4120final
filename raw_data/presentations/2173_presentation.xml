<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Non-Volatile Memory Through Customized Key-Value Stores</p>
    <p>Leonardo Marmol 1 Jorge Guerra 2 Marcos K. Aguilera 2</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 1 / 17</p>
  </div>
  <div class="page">
    <p>Characteristics of NVM</p>
    <p>Non-volatile I Memory survives power cycles I No need to restore from slow disks or flash</p>
    <p>High density</p>
    <p>Low latency</p>
    <p>Fine granularity updates I Operates on individual words I Access through load and store instructions</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 2 / 17</p>
  </div>
  <div class="page">
    <p>NVM Challenges</p>
    <p>Non-persistent caching</p>
    <p>Out-of-order flushes I write-back caches</p>
    <p>Torn writes I Updates bigger than 8 bytes are not</p>
    <p>atomic</p>
    <p>Complex interfaces I flushing cache lines, using memory</p>
    <p>fences, etc.</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 3 / 17</p>
  </div>
  <div class="page">
    <p>Approaches to use NVM</p>
    <p>NVM</p>
    <p>High-Density</p>
    <p>Persistent Byte</p>
    <p>Addressable</p>
    <p>Low-Latency</p>
    <p>Storage</p>
    <p>Block Dev.</p>
    <p>Filesystem</p>
    <p>Memory</p>
    <p>Namespace</p>
    <p>Pointers</p>
    <p>Sharing</p>
    <p>Transactions</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 4 / 17</p>
  </div>
  <div class="page">
    <p>Application Specific Solution</p>
    <p>We argue for consuming NVM through a transactional key-value store.</p>
    <p>Flexible</p>
    <p>Simple</p>
    <p>Performant</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 5 / 17</p>
  </div>
  <div class="page">
    <p>Case Study: VMware R Virtual San</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 6 / 17</p>
  </div>
  <div class="page">
    <p>metradb: Specialized KV Store for VSAN</p>
    <p>Organizes objects in Containers</p>
    <p>Provides a flat namespace for Containers</p>
    <p>Provides transactional update containers I Only one active transaction per container I Transactions do not expand to multiple containers</p>
    <p>Provides KV-Store like interface</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 7 / 17</p>
  </div>
  <div class="page">
    <p>metradb API</p>
    <p>Operation Description open(name,flags ) open/create container, get handle remove(name) remove container close(h) close a handle</p>
    <p>put (h,k,buf ,len) put key-value pair get (h,k,buf ,len) get key-value pair delete(h,k ) delete key-value pair</p>
    <p>commit (h) commit transaction abort (h) abort transaction</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 8 / 17</p>
  </div>
  <div class="page">
    <p>Transactions: How to do them?</p>
    <p>Undo Logging</p>
    <p>Update in-place</p>
    <p>Adds latency to critical path</p>
    <p>No easy way to batch and flush (poor cache locality)</p>
    <p>Data can be read from its original location</p>
    <p>Easy to implement</p>
    <p>Redo Logging</p>
    <p>Updates are buffered and applied at commit</p>
    <p>Batch flushes and sync (better cache locality)</p>
    <p>No latency added to the critical path</p>
    <p>Data may need to be read from the log</p>
    <p>Implementation is more complicated</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 9 / 17</p>
  </div>
  <div class="page">
    <p>Shadow Bitmaps: Handling Allocations</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 10 / 17</p>
  </div>
  <div class="page">
    <p>Shadow Bitmaps: Handling Allocations</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 10 / 17</p>
  </div>
  <div class="page">
    <p>Shadow Bitmaps: Handling Allocations</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 10 / 17</p>
  </div>
  <div class="page">
    <p>Shadow Bitmaps: Handling Allocations</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 10 / 17</p>
  </div>
  <div class="page">
    <p>Shadow Bitmaps: Handling Allocations</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 10 / 17</p>
  </div>
  <div class="page">
    <p>Shadow Bitmaps: Handling Allocations</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 10 / 17</p>
  </div>
  <div class="page">
    <p>Shadow Bitmaps: Handling Allocations</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 10 / 17</p>
  </div>
  <div class="page">
    <p>Implementing Transactions</p>
    <p>Redo logging</p>
    <p>Out-of-place updates</p>
    <p>Shadow data structures</p>
    <p>Idempotent commits I Volatile metadata can be reconstructed from the logs</p>
    <p>Implicit start transaction I Move the state of the KV Store from one consistent state to the next</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 11 / 17</p>
  </div>
  <div class="page">
    <p>Indexing: Which data structure to use?</p>
    <p>B+ Tree</p>
    <p>Higher latency for average operations</p>
    <p>Higher write amplification</p>
    <p>Predictable performance</p>
    <p>More difficult to implement</p>
    <p>Maintain key order</p>
    <p>Hash Table</p>
    <p>Low latency for average operation</p>
    <p>Lower write amplification</p>
    <p>Less predictable performance</p>
    <p>Easy to implement</p>
    <p>Does not maintain key order</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 12 / 17</p>
  </div>
  <div class="page">
    <p>Experimental Setup</p>
    <p>metradb is a user space library for GNU/Linux</p>
    <p>Linux Kernel v4.4</p>
    <p>Intel XeonE5-2440 v2 1.90GHz CPU I 8 cores each with 2 hyper-threads</p>
    <p>NVM was simulated with memory mapped files I EXT4 with DAX support</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 13 / 17</p>
  </div>
  <div class="page">
    <p>Comparison with NVML</p>
    <p>Get 1.45 1.50 1.44</p>
    <p>A v g L</p>
    <p>a te</p>
    <p>n c y (  s )</p>
    <p>Put 33.6</p>
    <p>metr adb ctree btre</p>
    <p>e rbtre</p>
    <p>e htbl_</p>
    <p>atom ic htbl_</p>
    <p>tx 0 5</p>
    <p>Delete 59.8 58.4 L</p>
    <p>o w</p>
    <p>er is</p>
    <p>b et</p>
    <p>te r</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 14 / 17</p>
  </div>
  <div class="page">
    <p>Comparison with NVML</p>
    <p>Get 1.45 1.50 1.44</p>
    <p>A v g L</p>
    <p>a te</p>
    <p>n c y (  s )</p>
    <p>Put 33.6</p>
    <p>metr adb ctree btre</p>
    <p>e rbtre</p>
    <p>e htbl_</p>
    <p>atom ic htbl_</p>
    <p>tx 0 5</p>
    <p>Delete 59.8 58.4 L</p>
    <p>o w</p>
    <p>er is</p>
    <p>b et</p>
    <p>te r</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 14 / 17</p>
  </div>
  <div class="page">
    <p>Comparison with NVML</p>
    <p>Get 1.45 1.50 1.44</p>
    <p>A v g L</p>
    <p>a te</p>
    <p>n c y (  s )</p>
    <p>Put 33.6</p>
    <p>metr adb ctree btre</p>
    <p>e rbtre</p>
    <p>e htbl_</p>
    <p>atom ic htbl_</p>
    <p>tx 0 5</p>
    <p>Delete 59.8 58.4 L</p>
    <p>o w</p>
    <p>er is</p>
    <p>b et</p>
    <p>te r</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 14 / 17</p>
  </div>
  <div class="page">
    <p>Comparison with NVML</p>
    <p>Get 1.45 1.50 1.44</p>
    <p>A v g L</p>
    <p>a te</p>
    <p>n c y (  s )</p>
    <p>Put 33.6</p>
    <p>metr adb ctree btre</p>
    <p>e rbtre</p>
    <p>e htbl_</p>
    <p>atom ic htbl_</p>
    <p>tx 0 5</p>
    <p>Delete 59.8 58.4 L</p>
    <p>o w</p>
    <p>er is</p>
    <p>b et</p>
    <p>te r</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 14 / 17</p>
  </div>
  <div class="page">
    <p>Comparison with NVML</p>
    <p>Get 1.45 1.50 1.44</p>
    <p>A v g L</p>
    <p>a te</p>
    <p>n c y (  s )</p>
    <p>Put 33.6</p>
    <p>metr adb ctree btre</p>
    <p>e rbtre</p>
    <p>e htbl_</p>
    <p>atom ic htbl_</p>
    <p>tx 0 5</p>
    <p>Delete 59.8 58.4 L</p>
    <p>o w</p>
    <p>er is</p>
    <p>b et</p>
    <p>te r</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 14 / 17</p>
  </div>
  <div class="page">
    <p>Comparison with NVML</p>
    <p>Get 1.45 1.50 1.44</p>
    <p>A v g L</p>
    <p>a te</p>
    <p>n c y (  s )</p>
    <p>Put 33.6</p>
    <p>metr adb ctree btre</p>
    <p>e rbtre</p>
    <p>e htbl_</p>
    <p>atom ic htbl_</p>
    <p>tx 0 5</p>
    <p>Delete 59.8 58.4 L</p>
    <p>o w</p>
    <p>er is</p>
    <p>b et</p>
    <p>te r</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 14 / 17</p>
  </div>
  <div class="page">
    <p>Throughput Scalability of metradb</p>
    <p>ti v e T</p>
    <p>h ro</p>
    <p>u g p u t (O</p>
    <p>p s)</p>
    <p>Ideal</p>
    <p>Get</p>
    <p>Put</p>
    <p>Delete</p>
    <p>H ig</p>
    <p>h er</p>
    <p>is b</p>
    <p>et te</p>
    <p>r</p>
    <p>Number of cores</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 15 / 17</p>
  </div>
  <div class="page">
    <p>Throughput Scalability of metradb</p>
    <p>ti v e T</p>
    <p>h ro</p>
    <p>u g p u t (O</p>
    <p>p s)</p>
    <p>Ideal</p>
    <p>Get</p>
    <p>Put</p>
    <p>Delete</p>
    <p>H ig</p>
    <p>h er</p>
    <p>is b</p>
    <p>et te</p>
    <p>r</p>
    <p>Number of cores</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 15 / 17</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>We propose application to consume NVM through a middle layer I For our application a key-value interface was sufficient</p>
    <p>This approach allows simplicity, easy adoptions of different NVM technologies, and fast development</p>
    <p>I About 2.3K LOC</p>
    <p>Because our solution was tailored to our application, we achieved higher performance than more general solutions</p>
    <p>L. Marmol, J. Guerra, M. K. Aguilera (FIU and VMware)NVM Through Customized KV-Stores 16 / 17</p>
  </div>
  <div class="page">
    <p>Thank you!</p>
    <p>Leonardo Marmol &lt;marmol@cs.fiu.edu&gt;</p>
  </div>
</Presentation>
