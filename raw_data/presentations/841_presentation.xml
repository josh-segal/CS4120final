<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Gdev: First-Class GPU Resource</p>
    <p>Management in the Operating System</p>
    <p>Shinpei Kato</p>
    <p>Nagoya University</p>
    <p>Michael McThrow Carlos Maltzahn Scott Brandt</p>
    <p>UC Santa Cruz</p>
  </div>
  <div class="page">
    <p>GPUs embrace many cores.</p>
    <p>OS</p>
  </div>
  <div class="page">
    <p>Graphics Processing Unit (GPU)</p>
    <p>L2 Cache</p>
    <p>L1 L1 L1 L1 L1 L1 L1</p>
    <p>Device Memory</p>
    <p>Main Memory CPU</p>
    <p>(Kepler)</p>
    <p>(Fermi)</p>
    <p>(Tesla)</p>
  </div>
  <div class="page">
    <p>Performance Trend</p>
    <p>Single Precision Performance Performance per Watt</p>
    <p>GTX 280 GTX 285</p>
    <p>GTX 480 GTX 580</p>
    <p>GTX 680</p>
    <p>E4300 E6850 Q9650</p>
    <p>X7460 980 XE</p>
    <p>E7-8870</p>
    <p>G F</p>
    <p>LO P</p>
    <p>S</p>
    <p>NVIDIA GPU</p>
    <p>Intel CPU</p>
    <p>GTX 280</p>
    <p>GTX 285 GTX 480 GTX 580</p>
    <p>GTX 680</p>
    <p>E4300 E6850</p>
    <p>Q9650</p>
    <p>X7460 980XE</p>
    <p>E7-8870</p>
    <p>F LO</p>
    <p>P S</p>
    <p>/ W</p>
    <p>a tt</p>
    <p>NVIDIA GPU</p>
    <p>Intel CPU</p>
  </div>
  <div class="page">
    <p>GPUs Suit Science</p>
    <p>S im</p>
    <p>u la</p>
    <p>ti o</p>
    <p>n t</p>
    <p>im e</p>
    <p>( m</p>
    <p>s)</p>
    <p>The number of agents</p>
    <p>GPU (simple)</p>
    <p>GPU (data optimized)</p>
    <p>GPU (fully optimized)</p>
    <p>CPU</p>
    <p>GTX 560 Ti (192 cores)</p>
    <p>Traffic Simulation</p>
  </div>
  <div class="page">
    <p>Not Yet General-Purpose</p>
    <p>App App App</p>
    <p>User User User</p>
    <p>OS</p>
    <p>App App</p>
    <p>Task Task Task Task Task Task</p>
    <p>GPU Resource Management</p>
    <p>Module</p>
    <p>Module</p>
    <p>Module</p>
    <p>Module</p>
  </div>
  <div class="page">
    <p>Gdev</p>
    <p>New approach to GPU resource management</p>
    <p>Allows the OS as well as user-space applications to use GPUs.</p>
    <p>New functions of GPU resource management</p>
    <p>Shared device memory (IPC)</p>
    <p>Data swapping</p>
    <p>System-level virtualization</p>
    <p>Open-source implementation</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Motivation</p>
    <p>Approach</p>
    <p>GPU Resource Management</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Application</p>
    <p>Runtime</p>
    <p>Device Driver OS</p>
    <p>Device</p>
    <p>User</p>
    <p>Space</p>
    <p>Traditional Nave Approach</p>
    <p>GPU</p>
    <p>API</p>
    <p>Command (ioctl)</p>
    <p>I/O Request</p>
    <p>Non-privileged</p>
    <p>Applications</p>
    <p>Command (ioctl)</p>
    <p>Other</p>
    <p>Runtimes</p>
    <p>Command (ioctl)</p>
    <p>Intelligence</p>
  </div>
  <div class="page">
    <p>Application</p>
    <p>Runtime</p>
    <p>OS</p>
    <p>Device</p>
    <p>User</p>
    <p>Space</p>
    <p>Gdev Approach</p>
    <p>GPU</p>
    <p>API</p>
    <p>Command (ioctl)</p>
    <p>I/O Request</p>
    <p>Device Driver Runtime Command</p>
    <p>Wrapper Library</p>
    <p>API</p>
    <p>API (ioctl)</p>
    <p>MM IPC Sched</p>
    <p>OS Module</p>
    <p>API</p>
    <p>Other</p>
    <p>Libraries</p>
    <p>API (ioctl)</p>
    <p>Unified, OS-oriented approach</p>
    <p>to GPU resource management!</p>
    <p>Intelligence</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Motivation</p>
    <p>Approach</p>
    <p>GPU Resource Management</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Shared Device Memory</p>
    <p>Context 1 Virtual Address Space</p>
    <p>Context 2 Virtual Address Space</p>
    <p>Context 3 Virtual Address Space</p>
    <p>addr A</p>
    <p>addr B</p>
    <p>addr C</p>
    <p>Physical Device Memory Space</p>
    <p>addr S</p>
    <p>New API:</p>
    <p>- cuShmGet()</p>
    <p>- cuShmAt()</p>
    <p>- cuShmDt()</p>
    <p>- cuShmCtl()</p>
  </div>
  <div class="page">
    <p>E.g., Dataflow (2x2 Tree)</p>
    <p>Context 1 A[]xB[]=P[]</p>
    <p>Context 2 C[]xD[]=Q[]</p>
    <p>Context 3 P[]xQ[]=X[]</p>
    <p>No Shared Memory</p>
    <p>A[] B[] C[] D[]</p>
    <p>Context 1 Context 2</p>
    <p>Host</p>
    <p>Memory</p>
    <p>P[] Q[]</p>
    <p>P[] Q[]</p>
    <p>copy copy</p>
    <p>Context 3</p>
    <p>P[] Q[]</p>
    <p>copy copy</p>
    <p>X[]</p>
    <p>Shared Memory IPC</p>
    <p>A[] B[] C[] D[]</p>
    <p>Context 1 Context 2</p>
    <p>P[] Q[]</p>
    <p>Device</p>
    <p>Memory</p>
    <p>Context 3</p>
    <p>X[]</p>
  </div>
  <div class="page">
    <p>Device Memory Host Memory</p>
    <p>I/O</p>
    <p>New Data</p>
    <p>Evicted</p>
    <p>Stall</p>
    <p>New Data</p>
    <p>Data Swapping</p>
  </div>
  <div class="page">
    <p>Temporal Swap</p>
    <p>Data Swapping (Enhanced)</p>
    <p>Device Memory Host Memory</p>
    <p>I/O</p>
    <p>New Data</p>
    <p>New Data</p>
    <p>Evicted Evicted</p>
  </div>
  <div class="page">
    <p>GPU Virtualization</p>
    <p>Virtual GPU</p>
    <p>Virtual GPU</p>
    <p>Virtual GPU</p>
    <p>Virtual GPU</p>
    <p>Physical GPU</p>
    <p>/dev/gdev0 /dev/gdev1 /dev/gdev2 /dev/gdev3 ...</p>
    <p>/dev/dri/card0 (real device file)</p>
  </div>
  <div class="page">
    <p>Existing GPU Schedulers</p>
    <p>Queue and dispatch [Kato ATC11] [Kato RTSS11]</p>
    <p>vGPU1 Execution vGPU2 Execution</p>
    <p>Compute Offload</p>
    <p>GPU Scheduler</p>
    <p>CPU</p>
    <p>GPU</p>
    <p>Time</p>
    <p>Time</p>
    <p>vGPU1 Request vGPU2 Request vGPU1 vGPU2</p>
    <p>Ctx 1 Ctx 2</p>
    <p>ISR ISR ISR ISR</p>
    <p>Load unbalanced!</p>
  </div>
  <div class="page">
    <p>Bandwidth-aware non-preemptive</p>
    <p>device (BAND) Scheduler</p>
    <p>vGPU1 Execution vGPU2 Execution</p>
    <p>Compute Offload</p>
    <p>GPU Scheduler</p>
    <p>CPU</p>
    <p>GPU</p>
    <p>vGPU1 Request vGPU2 Request vGPU1 vGPU2</p>
    <p>Ctx 1 Ctx 2</p>
    <p>ISR ISR ISR ISR</p>
    <p>Load balanced</p>
    <p>&gt;50%?</p>
    <p>ISR</p>
    <p>&gt;50%?</p>
    <p>wait wait</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Motivation</p>
    <p>Approach</p>
    <p>GPU Resource Management</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Experimental Setup</p>
    <p>Linux kernel 2.6.39</p>
    <p>NVIDIA GeForce GTX 480</p>
    <p>Intel Core 2 Extreme QX9650</p>
    <p>NVIDIA CUDA Compiler 4.0 and GCC 4.4.6</p>
    <p>Benchmarks &amp; Applications:  Rodinia benchmark [Che et al, IISWC09]</p>
    <p>eCryptfs encrypted filesystem</p>
    <p>FAST database search [Kim et al, SIGMOD10]</p>
    <p>PTask dataflow benchmarks [Rossbach et al, SOSP11]</p>
  </div>
  <div class="page">
    <p>Runtime and Driver Choice</p>
    <p>NVIDIA</p>
    <p>Driver</p>
    <p>NVIDIA</p>
    <p>Runtime</p>
    <p>NVIDIA</p>
    <p>Driver</p>
    <p>Gdev</p>
    <p>Runtime</p>
    <p>Gdev</p>
    <p>Driver</p>
    <p>Gdev</p>
    <p>Runtime</p>
    <p>OS</p>
    <p>User</p>
    <p>Space</p>
    <p>Gdev</p>
    <p>Runtime</p>
    <p>Gdev</p>
    <p>Driver</p>
    <p>Gdev</p>
    <p>Library</p>
    <p>NVIDIA Gdev/User Gdev</p>
  </div>
  <div class="page">
    <p>Basic Performance</p>
    <p>R e</p>
    <p>la ti</p>
    <p>v e</p>
    <p>S p</p>
    <p>e e</p>
    <p>d</p>
    <p>Benchmarks</p>
    <p>NVIDIA Gdev/User Gdev</p>
    <p>~29% ~25%</p>
  </div>
  <div class="page">
    <p>eCryptfs Read&amp;Write Throughput</p>
    <p>ro u</p>
    <p>g h</p>
    <p>tp u</p>
    <p>t (M</p>
    <p>B /s</p>
    <p>)</p>
    <p>Data Size (bytes)</p>
    <p>CPU KGPU &amp; NVIDIA KGPU &amp; Gdev/User Gdev</p>
    <p>ro u</p>
    <p>g h</p>
    <p>tp u</p>
    <p>t (M</p>
    <p>B /s</p>
    <p>)</p>
    <p>Data Size (bytes)</p>
    <p>CPU KGPU &amp; NVIDIA KGPU &amp; Gdev/User Gdev</p>
    <p>Read throughput</p>
    <p>Write throughput</p>
    <p>KGPU Sun et. al.</p>
    <p>Daemon Runtime</p>
    <p>Driver</p>
    <p>Gdev Module Runtime</p>
    <p>Driver</p>
    <p>upcall CUDA ioctl</p>
    <p>CUDA</p>
  </div>
  <div class="page">
    <p>Impact of Shared Device Memory</p>
    <p>x6 4</p>
    <p>x6 4</p>
    <p>x1 0</p>
    <p>x1 0</p>
    <p>x1 0</p>
    <p>x1 0</p>
    <p>mmul_tree mmul_rect madd_tree madd_rect mcopy_tree mcopy_rect</p>
    <p>R e</p>
    <p>la ti</p>
    <p>v e</p>
    <p>S p</p>
    <p>e e</p>
    <p>d</p>
    <p>Benchmarks</p>
    <p>NVIDIA Gdev w/o shm Gdev</p>
    <p>~50%</p>
  </div>
  <div class="page">
    <p>Impact of Data Swapping</p>
    <p>M a</p>
    <p>k e</p>
    <p>sp a</p>
    <p>n (</p>
    <p>m s)</p>
    <p>Number of Competing Contexts</p>
    <p>NVIDIA</p>
    <p>Gdev/User</p>
    <p>Gdev w/o swp</p>
    <p>Gdev</p>
    <p>NVIDIA fails</p>
    <p>Gdev/User fails</p>
    <p>~500ms Multiple DB search tasks</p>
  </div>
  <div class="page">
    <p>Virtual GPU Isolation</p>
    <p>G P</p>
    <p>U U</p>
    <p>ti li</p>
    <p>za ti</p>
    <p>o n</p>
    <p>( %</p>
    <p>)</p>
    <p>Time (seconds)</p>
    <p>VGPU 0</p>
    <p>VGPU 1</p>
    <p>G P</p>
    <p>U U</p>
    <p>ti li</p>
    <p>za ti</p>
    <p>o n</p>
    <p>( %</p>
    <p>)</p>
    <p>Time (seconds)</p>
    <p>VGPU 0</p>
    <p>VGPU 1</p>
    <p>G P</p>
    <p>U U</p>
    <p>ti li</p>
    <p>za ti</p>
    <p>o n</p>
    <p>( %</p>
    <p>)</p>
    <p>Time (seconds)</p>
    <p>VGPU 0</p>
    <p>VGPU 1</p>
    <p>No scheduling</p>
    <p>(FIFO) Xen VM Policy</p>
    <p>(Credit)</p>
    <p>Gdev Policy</p>
    <p>(BAND)</p>
    <p>~7%</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Motivation</p>
    <p>Approach</p>
    <p>GPU Resource Management</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Concluding Remarks</p>
    <p>Gdev is an OS approach to first-class</p>
    <p>GPU resource management. GPUs can be used by the OS.</p>
    <p>GPUs can be protected by the OS.</p>
    <p>GPUs can be multi-tasked by the OS.</p>
    <p>Compromising basic performance to some extent.</p>
  </div>
  <div class="page">
    <p>Concluding Remarks</p>
    <p>Gdev is open-source. Facilitate systems research.</p>
    <p>Visit http://sys.ertl.jp/gdev/.</p>
    <p>Whats up-to-date: - RAID6 erasure coding acceleration.</p>
    <p>- Dynamic power management.</p>
    <p>- Zero-copy between I/O devices and GPUs.</p>
  </div>
  <div class="page">
    <p>Thank You!</p>
    <p>Questions?</p>
  </div>
</Presentation>
