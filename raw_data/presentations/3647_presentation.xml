<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Adding Capacity Points to a Wireless Mesh Network Using Local Search</p>
    <p>Joshua Robinson, Mustafa Uysal, Ram Swaminathan, Edward Knightly Rice University &amp; HP Labs</p>
    <p>INFOCOM 2008</p>
  </div>
  <div class="page">
    <p>Multi-Tier Mesh Architecture</p>
    <p>Goal: provide Internet connections with low cost  Access tier: clients connect to a mesh node  Backhaul tier: mesh nodes multi-hop to a capacity point  Capacity tier: traffic aggregates to wired Internet</p>
    <p>Capacity tier utilizes directional wireless, WiMAX, or fibers  Capacity points (gateways) co-located with mesh nodes</p>
    <p>Capacity TierBackhaul TierAccess Tier</p>
    <p>Internet QuickTime and a</p>
    <p>TIFF (Uncompressed) decompressor are needed to see this picture.</p>
    <p>capacity point</p>
  </div>
  <div class="page">
    <p>Wireless Network Evolution  Network capacity needs to</p>
    <p>increase over time  New users, increasing traffic,</p>
    <p>changing usage patterns  Increasing capacity of a</p>
    <p>mesh network  Nodes: increase coverage</p>
    <p>area of the network  Capacity points: increase</p>
    <p>overall throughput with Internet</p>
    <p>Radios: increase throughput  Our focus: incremental</p>
    <p>deployment of capacity points</p>
  </div>
  <div class="page">
    <p>Capacity points: mesh nodes connecting wireless mesh to the Internet</p>
    <p>Capacity point placement determines:  Path lengths of the wireless routes  Amount of wireless contention  Available bandwidth to/from Internet</p>
    <p>Two main challenges: 1. How do we define and compute capacity? 2. How do we best place new capacity points</p>
    <p>at a subset of the existing mesh nodes?</p>
    <p>Formulation: For a given budget constraint, deploy new gateways to maximize the gain in network capacity</p>
    <p>Choosing Capacity Point Locations</p>
  </div>
  <div class="page">
    <p>Capacity Term to Maximize?</p>
    <p>Need: to compare potential placements  Challenges: different link speeds, population density, and</p>
    <p>contention matrices  Gateway-limited fair capacity is the aggregate rate at</p>
    <p>which data flows through capacity points</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>Gateway-limited Fair Capacity  Wireless interfaces on gateways are bottleneck</p>
    <p>resource  We focus on access networks without peer traffic  Traffic aggregates to gateways</p>
    <p>Constraints on gateway interfaces  Per-user fairness ensures equal time for longer flows  Gateway airtime balances between tx/rx and defer  How often contending links are active --&gt; gateway</p>
    <p>defer time</p>
    <p>We formalize efficient technique to calculate capacity which is suitable for local searching</p>
  </div>
  <div class="page">
    <p>Solving Gateway Placement</p>
    <p>To maximize network capacity  Three coupled sub-problems:</p>
    <p>Adapt two local search algorithms Allows incremental deployment without full recalculation Solves (2) and (3) as assignment problem From algorithms for Facility Location problems Incorporate wireless contention effects</p>
  </div>
  <div class="page">
    <p>Solving Gateway Placement</p>
    <p>To maximize network capacity  Three coupled sub-problems:</p>
    <p>Adapt two local search algorithms Allows incremental deployment without full recalculation Solves (2) and (3) as assignment problem From algorithms for Facility Location problems Incorporate wireless contention effects</p>
  </div>
  <div class="page">
    <p>Solving Gateway Placement</p>
    <p>To maximize network capacity  Three coupled sub-problems:</p>
    <p>Adapt two local search algorithms Allows incremental deployment without full recalculation Solves (2) and (3) as assignment problem From algorithms for Facility Location problems Incorporate wireless contention effects</p>
  </div>
  <div class="page">
    <p>Solving Gateway Placement</p>
    <p>To maximize network capacity  Three coupled sub-problems:</p>
    <p>Adapt two local search algorithms Allows incremental deployment without full recalculation Solves (2) and (3) as assignment problem From algorithms for Facility Location problems Incorporate wireless contention effects</p>
  </div>
  <div class="page">
    <p>Solving Gateway Placement</p>
    <p>To maximize network capacity  Three coupled sub-problems:</p>
    <p>Present two local search algorithms  Use local search to test good choices for (1)  Solves (2) and (3) as an assignment problem  Build on algorithms for Facility Location problems  Incorporate wireless contention effects</p>
  </div>
  <div class="page">
    <p>Gateway Placement and Facility Location</p>
    <p>* k-Median problem fixes number of facilities at k Local search algorithms well-suited for facility location</p>
    <p>Facility Location Gateway Placement Objective: Choose facility locations to</p>
    <p>minimize sum of facility cost and service cost*</p>
    <p>Choose gateway locations to maximize capacity or minimize gateway cost Per-user fairness constraint Gateway wireless capacities not exceeded, but are unknown a priori due to dependence on routing Capacity does not satisfy triangle inequality</p>
    <p>Demand constraint:</p>
    <p>All client demand is served by facilities</p>
    <p>Capacity constraint:</p>
    <p>Facility capacities are not exceeded</p>
    <p>Cost function:</p>
    <p>Service costs in metric space</p>
  </div>
  <div class="page">
    <p>Gateway Placement and Facility Location</p>
    <p>k-Median problem fixes number of facilities at k Local search algorithms well-suited for facility location</p>
    <p>Facility Location Gateway Placement Objective: Choose facility locations to</p>
    <p>minimize sum of facility cost and service cost</p>
    <p>Choose gateway locations to maximize capacity or minimize gateway cost Per-user fairness constraint Gateway wireless capacities not exceeded, but are unknown a priori due to dependence on routing Capacity does not satisfy triangle inequality</p>
    <p>Demand constraint:</p>
    <p>All client demand is served by facilities</p>
    <p>Capacity constraint:</p>
    <p>Facility capacities are not exceeded</p>
    <p>Cost function:</p>
    <p>Service costs in metric space</p>
  </div>
  <div class="page">
    <p>Gateway Placement and Facility Location</p>
    <p>k-Median problem fixes number of facilities at k Local search algorithms well-suited for facility location</p>
    <p>Facility Location Gateway Placement Objective: Choose facility locations to</p>
    <p>minimize sum of facility cost and service cost</p>
    <p>Choose gateway locations to maximize capacity or minimize gateway cost Per-user fairness constraint Gateway wireless capacities not exceeded, but are unknown a priori due to dependence on routing Capacity does not satisfy triangle inequality</p>
    <p>Demand constraint:</p>
    <p>All client demand is served by facilities</p>
    <p>Capacity constraint:</p>
    <p>Facility capacities are not exceeded</p>
    <p>Cost function:</p>
    <p>Service costs in metric space</p>
  </div>
  <div class="page">
    <p>Gateway Placement and Facility Location</p>
    <p>k-Median problem fixes number of facilities at k Local search algorithms well-suited for facility location</p>
    <p>Facility Location Gateway Placement Objective: Choose facility locations to</p>
    <p>minimize sum of facility cost and service cost</p>
    <p>Choose gateway locations to maximize capacity or minimize gateway cost Per-user fairness constraint Gateway wireless capacities not exceeded, but are unknown a priori due to dependence on routing Capacity does not satisfy triangle inequality</p>
    <p>Demand constraint:</p>
    <p>All client demand is served by facilities</p>
    <p>Capacity constraint:</p>
    <p>Facility capacities are not exceeded</p>
    <p>Cost function:</p>
    <p>Service costs in metric space</p>
  </div>
  <div class="page">
    <p>Gateway Placement and Facility Location</p>
    <p>Both problems are NP-hard  Local search algorithms well-suited for facility location</p>
    <p>Facility Location Gateway Placement Objective: Choose facility locations to</p>
    <p>minimize sum of facility cost and service cost</p>
    <p>Choose gateway locations to maximize capacity or minimize gateway cost Per-user fairness constraint Gateway wireless capacities not exceeded, but are unknown a priori due to dependence on routing Capacity does not satisfy triangle inequality</p>
    <p>Demand constraint:</p>
    <p>All client demand is served by facilities</p>
    <p>Capacity constraint:</p>
    <p>Facility capacities are not exceeded</p>
    <p>Cost function:</p>
    <p>Service costs in metric space</p>
  </div>
  <div class="page">
    <p>Local Search Operation: Primitives</p>
    <p>open(s,T) - open gateway at mesh node s and close gateways at mesh nodes in set T</p>
    <p>add(s) close(s,T) swap(S,T)</p>
    <p>Current best placement</p>
  </div>
  <div class="page">
    <p>Local Search Operation: Search</p>
    <p>Current best placement</p>
    <p>add(s1) add(s2) add(s3) add(s4) add(s5) open(s1,T) open(s2,T) open(s3,T) open(s4,T) open(s5,T) - Largest Gain! close(s1,T) close(s2,T) close(s3,T) close(s4,T) close(s5,T)</p>
    <p>Search and evaluate:</p>
    <p>s5</p>
  </div>
  <div class="page">
    <p>Local Search Operation: Update</p>
    <p>Current best placement</p>
    <p>s5</p>
    <p>New best placement</p>
    <p>And repeat.</p>
  </div>
  <div class="page">
    <p>MinHopCount Algorithm  Uses add(), open(), close() local operations to maximize</p>
    <p>capacity  Challenge: metric service cost function</p>
    <p>Exponential number of open(s,T) and close(s,T) operations  Use wireless hop count as cost function to find good values of T  Employs results on (9 + ) algorithm by Pl et al (2001) for</p>
    <p>Capacitated Facility Location to find set T</p>
    <p>Configurations violating budget constraint not allowed  Makes the gateway placement problem harder  No provable optimality bounds</p>
    <p>Challenge: unknown gateway capacities  Iteratively improve estimate of gateway wireless capacities</p>
  </div>
  <div class="page">
    <p>MinContention Algorithm</p>
    <p>Uses swap() local operation to minimize networkwide contention</p>
    <p>Challenge: metric service cost function  Link weight as contention region size obeys triangle</p>
    <p>inequality  Exploits results on (3 + ) algorithm by Arya et al (2001)</p>
    <p>from Uncapacitated k-Median problem  Minimizes the average size of contention regions for all</p>
    <p>nodes with constant-factor approximation</p>
  </div>
  <div class="page">
    <p>Houston Neighborhood Deployment  Evaluate algorithms on Technology For All (TFA) network</p>
    <p>topology  Multi-hop IEEE 802.11 wireless mesh network covering</p>
    <p>QuickTime and a TIFF (Uncompressed) decompressor</p>
    <p>are needed to see this picture.</p>
    <p>One wired aggregation point</p>
    <p>Plus new virtual gateways</p>
  </div>
  <div class="page">
    <p>TFA Expansion Scenario  Placing 4 new gateways in</p>
    <p>All placements evaluated via brute force</p>
    <p>MinHopCount performs better with smaller budgets  Inter-gateway contention</p>
    <p>limitation  MinContention performs</p>
    <p>better in regular topologies  Irregular contention</p>
    <p>throughout network  Up to 50% gains available</p>
    <p>from our algorithms</p>
  </div>
  <div class="page">
    <p>Conclusions  We define an efficient</p>
    <p>technique for calculating gatewaylimited fair capacity</p>
    <p>We present two polynomial-time local search algorithms for gateway deployment  Incorporating wireless</p>
    <p>contention effects</p>
  </div>
  <div class="page">
    <p>Questions? Joshua Robinson jpr@rice.edu</p>
  </div>
</Presentation>
