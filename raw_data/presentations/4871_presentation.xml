<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Similarity Search for Adaptive Ellipsoid Queries Using Spatial Transformation</p>
    <p>Yasushi Sakurai (NTT Cyber Space Laboratories) Masatoshi Yoshikawa (Nara Institute of Science and Technology)</p>
    <p>Ryoji Kataoka (NTT Cyber Space Laboratories) Shunsuke Uemura (Nara Institute of Science and Technology)</p>
  </div>
  <div class="page">
    <p>Outline  Introduction  STT (spatial transformation technique)</p>
    <p>Definition of spatial transformation</p>
    <p>Spatial transformation of rectangles</p>
    <p>Search algorithm</p>
    <p>MSTT (multiple STT)  Index structure construction</p>
    <p>Query processing</p>
    <p>Dissimilarity of matrices</p>
    <p>Performance test  Conclusion</p>
  </div>
  <div class="page">
    <p>Ellipsoid query  Search processing is performed by using quadratic</p>
    <p>form distance functions  Distance of p and q for a query matrix M :</p>
    <p>represents correlations between dimensions</p>
    <p>Introduction</p>
    <p>t M qpMqpqpd )()(),( 2</p>
    <p>Euclidean circles for isosurfaces</p>
    <p>weighted Euclidean iso-oriented ellipsoids</p>
    <p>quadratic form Ellipsoids</p>
    <p>(Not necessarily aligned to the coordinate axis)</p>
  </div>
  <div class="page">
    <p>An application of a quadratic form distance function  represent the similarity between colors i and j</p>
    <p>Introduction</p>
    <p>color histograms</p>
    <p>Euclidean distance</p>
    <p>p</p>
    <p>q</p>
    <p>Dim. 1 2 3 d</p>
    <p>color histograms</p>
    <p>Quadratic form distance</p>
    <p>p</p>
    <p>q</p>
  </div>
  <div class="page">
    <p>Spatial indices  e.g. R-tree family (R*-tree, X-tree, SR-tree, A-tree)</p>
    <p>Based on the Euclidean distance function</p>
    <p>Cannot be applied to ellipsoid queries</p>
    <p>Efficient search methods for user-adaptive ellipsoid queries  Query matrix M is variable</p>
    <p>Introduction</p>
  </div>
  <div class="page">
    <p>Search method based on the steepest descent method  Works on spatial indices of R-tree family  Calculates the exact distance of a query point and</p>
    <p>an MBR in an index structure  but requires high CPU cost which exceeds disk</p>
    <p>access cost</p>
    <p>R1</p>
    <p>q</p>
    <p>p</p>
    <p>M p</p>
    <p>CPU time O(d2) number of iterations ddimensionality</p>
    <p>Moves p toward p iteratively</p>
    <p>Related Work : Seidl and Kriegel, VLDB97</p>
  </div>
  <div class="page">
    <p>Technique that uses the MBB and MBS distance functions to reduce CPU time  MBB and MBS distance functions</p>
    <p>Related Work : Ankerst et al., VLDB98</p>
    <p>iiiidiMMBB Mqpqpd )()(max),( 1212 )(</p>
    <p>q M</p>
    <p>q M</p>
    <p>MBB(M) MBS(M)</p>
  </div>
  <div class="page">
    <p>Approximation technique by using the MBB and MBS distance functions  approximation distance  uses either MBB or</p>
    <p>MBS distance for better approximation quality  Calculates the exact distances only if data objects</p>
    <p>or MBRs cannot be filtered by their approximation distances</p>
    <p>Saves CPU time by reducing the number of exact distance calculations</p>
    <p>but cannot reduce the number of exact distance calculations if its approximation quality is low</p>
    <p>Related Work : Ankerst et al., VLDB98</p>
  </div>
  <div class="page">
    <p>Our Contributions  STT (Spatial Transformation Technique)</p>
    <p>Ellipsoid queries incur a high CPU cost  The efficiency depends on approximation quality  STT efficiently processes ellipsoid queries</p>
    <p>because of high approximation quality  MSTT (Multiple Spatial Transformation Technique)</p>
    <p>Does not use only the Euclidean distance function to make index structures</p>
    <p>Ellipsoid queries give various distance functions  In MSTT, various index structures are created; the</p>
    <p>search algorithm utilizes a structure well suited to a query matrix</p>
  </div>
  <div class="page">
    <p>Outline  Introduction  STT (spatial transformation technique)</p>
    <p>Definition of spatial transformation</p>
    <p>Spatial transformation of rectangles</p>
    <p>Search algorithm</p>
    <p>MSTT (multiple STT)  Index structure construction</p>
    <p>Query processing</p>
    <p>Dissimilarity of matrices</p>
    <p>Performance test  Conclusion</p>
  </div>
  <div class="page">
    <p>High approximation quality  STT consumes less CPU time</p>
    <p>Spatial transformation  MBRs in a quadratic form distance space are</p>
    <p>transformed into rectangles in the Euclidean distance space</p>
    <p>Spatial Transformation Technique (STT)</p>
    <p>q (2, 2) P</p>
    <p>O</p>
    <p>P</p>
    <p>R</p>
    <p>S S</p>
  </div>
  <div class="page">
    <p>Definition of spatial transformation  p : a point in the quadratic form distance space S  p: a point in the Euclidean distance space S  The distance between q and p in S is equal to the</p>
    <p>distance between p and O in S  Spatial transformation of p into p</p>
    <p>Spatial Transformation</p>
    <p>q (2, 2) p (4, 2)</p>
    <p>p (-2, 1)</p>
    <p>O</p>
    <p>S S</p>
  </div>
  <div class="page">
    <p>Definition of spatial transformation  dM2(p, q) : the distance of p and q in S</p>
    <p>EM: the eigenvector of M, M: the eigenvalues of M</p>
    <p>Spatial transformation of p into p</p>
    <p>Spatial Transformation</p>
    <p>t M qpMqpqpd )()(),( 2</p>
    <p>t MMM EEM</p>
    <p>),(),( 22 Opdppqpd tM</p>
    <p>MAqpp  )(</p>
    <p>tt MMMM qpEEqpqpd )()(),(</p>
  </div>
  <div class="page">
    <p>The calculation of distance between the origin and polygons in high-dimensional spaces incurs a high CPU cost</p>
    <p>Approximation Rectangles</p>
    <p>q (2, 2) pa</p>
    <p>P pc</p>
    <p>pbpd pc</p>
    <p>O</p>
    <p>P</p>
    <p>pb</p>
    <p>pd</p>
    <p>pa</p>
    <p>R</p>
    <p>ra</p>
    <p>rb</p>
    <p>S S),(),( 22 qPdORd M</p>
    <p>low CPU cost</p>
  </div>
  <div class="page">
    <p>aij of AM</p>
    <p>li : the edge length of P for the i-th dimension 4. R can be used for search since R totally</p>
    <p>contains P, that is</p>
    <p>Approximation Rectangles Maa Aqpp  )(</p>
    <p>)(0</p>
    <p>)0(</p>
    <p>),(0</p>
    <p>)0(</p>
    <p>otherwise</p>
    <p>aa</p>
    <p>otherwise</p>
    <p>aa ijij ij</p>
    <p>ijij ij</p>
    <p>d</p>
    <p>i ijiab</p>
    <p>d</p>
    <p>i ijiaa lprlpr</p>
    <p>jjjj 11 ,</p>
    <p>),(),( 22 qPdORd M</p>
    <p>),,( ba rrR</p>
  </div>
  <div class="page">
    <p>Search Algorithm</p>
    <p>q p</p>
    <p>S</p>
    <p>[ Data nodes ]</p>
    <p>Calculates dMBB-MBS(M)(p, q)</p>
  </div>
  <div class="page">
    <p>Search Algorithm</p>
    <p>S</p>
    <p>q p</p>
    <p>[ Data nodes ]</p>
    <p>Calculates dMBB-MBS(M)(p, q)</p>
  </div>
  <div class="page">
    <p>Search Algorithm</p>
    <p>S</p>
    <p>[ Data nodes ]</p>
    <p>Calculates dMBB-MBS(M)(p, q)</p>
    <p>Calculates dM(P, q) if dMBB-MBS(M)(p, q) d(M)(k-NN, q)</p>
    <p>q p</p>
  </div>
  <div class="page">
    <p>Search Algorithm</p>
    <p>S</p>
    <p>P q</p>
    <p>[ Directory nodes ]</p>
    <p>Calculates dMBB-MBS(M)(P, q)</p>
  </div>
  <div class="page">
    <p>Search Algorithm</p>
    <p>S</p>
    <p>P q</p>
    <p>[ Directory nodes ]</p>
    <p>Calculates dMBB-MBS(M)(P, q)</p>
  </div>
  <div class="page">
    <p>Search Algorithm 1. Calculates the transformation matrix of M</p>
    <p>[ Directory nodes ]</p>
    <p>Calculates dMBB-MBS(M)(P, q)</p>
    <p>Calculates d(R, O) if dMBB-MBS(M)(P, q) d(M)(k-NN, q)</p>
    <p>O</p>
    <p>P</p>
    <p>R</p>
    <p>S</p>
  </div>
  <div class="page">
    <p>Search Algorithm 1. Calculates the transformation matrix of M</p>
    <p>[ Directory nodes ]</p>
    <p>Calculates dMBB-MBS(M)(P, q)</p>
    <p>Calculates d(R, O) if dMBB-MBS(M)(P, q) d(M)(k-NN, q)</p>
    <p>Calculates dM(P, q) if d(R, O) d(M)(k-NN, q)</p>
    <p>S</p>
    <p>q P</p>
  </div>
  <div class="page">
    <p>Outline  Introduction  STT (spatial transformation technique)</p>
    <p>Definition of spatial transformation</p>
    <p>Spatial transformation of rectangles</p>
    <p>Search algorithm</p>
    <p>MSTT (multiple STT)  Index structure construction</p>
    <p>Query processing</p>
    <p>Dissimilarity of matrices</p>
    <p>Performance test  Conclusion</p>
  </div>
  <div class="page">
    <p>Node access problem  If a query matrix is NOT similar to the unit matrix,</p>
    <p>it causes a large number of node accesses  Index structures are constructed by the Euclidean</p>
    <p>distance function  Constructs various index structures by using</p>
    <p>quadratic form distance functions  Chooses a structure that gives sufficient search</p>
    <p>performance in query processing  Reduces both CPU time and number of page</p>
    <p>accesses for ellipsoid queries</p>
    <p>Multiple Spatial Transformation Technique (MSTT)</p>
  </div>
  <div class="page">
    <p>Similarity of matrices  High search performance can be expected when</p>
    <p>the query matrix and the matrix of selected index are similar.</p>
    <p>Basic Idea</p>
    <p>Indices based on Xi</p>
    <p>Matrices XiX1 Xj X</p>
  </div>
  <div class="page">
    <p>Similarity of matrices  High search performance can be expected when</p>
    <p>the query matrix and the matrix of selected index are similar.</p>
    <p>Basic Idea</p>
    <p>Indices based on Xi</p>
    <p>Matrices XiX1 Xsimilar X</p>
    <p>query (q, M) M</p>
  </div>
  <div class="page">
    <p>Similarity of matrices  High search performance can be expected when</p>
    <p>the query matrix and the matrix of selected index are similar.</p>
    <p>Basic Idea</p>
    <p>Xsimilar</p>
    <p>query (q, M) MM</p>
  </div>
  <div class="page">
    <p>Index structure construction  C : the matrix for constructing the index IC  Transformation matrix</p>
    <p>All data points in a data set are transformed</p>
    <p>IC is constructed using transformed data points</p>
    <p>Indexing and Retrieval Mechanism</p>
    <p>CApp</p>
  </div>
  <div class="page">
    <p>Indexing and Retrieval Mechanism</p>
    <p>t CC AMAM )(</p>
    <p>CAqq   Query processing</p>
    <p>The query of M can be processed by using IC</p>
    <p>t</p>
    <p>tt CC</p>
    <p>t M</p>
    <p>qpMqp</p>
    <p>qpAMAqp</p>
    <p>qpMqpqpd</p>
    <p>)()(</p>
    <p>)()()(</p>
    <p>)()(),( 11</p>
  </div>
  <div class="page">
    <p>Flatness of a query matrix  The variance M of the eigenvalues of M is called</p>
    <p>the flatness of M:</p>
    <p>: the i-th dimensional eigenvalue</p>
    <p>: the average of the eigenvalues of M</p>
    <p>The flatness of the unit matrix is 0 (search of the Euclidean space).</p>
    <p>,)( 1</p>
    <p>d</p>
    <p>i MMM i</p>
    <p>d</p>
    <p>j MM d</p>
    <p>j0</p>
    <p>iM</p>
    <p>M</p>
    <p>Similarity of Matrices</p>
  </div>
  <div class="page">
    <p>Dissimilarity of M and IC  MSTT employs M as the measure of the</p>
    <p>dissimilarity between M and IC</p>
    <p>M : the flatness of M</p>
    <p>The effectiveness of Ic relative to M improves as M decreases</p>
    <p>Similarity of Matrices</p>
    <p>t CC AMAM )(</p>
  </div>
  <div class="page">
    <p>Outline  Introduction  STT (spatial transformation technique)</p>
    <p>Definition of spatial transformation</p>
    <p>Spatial transformation of rectangles</p>
    <p>Search algorithm</p>
    <p>MSTT (multiple STT)  Index structure construction</p>
    <p>Query processing</p>
    <p>Dissimilarity of matrices</p>
    <p>Performance test  Conclusion</p>
  </div>
  <div class="page">
    <p>Performance Test  Data sets: real data set (rgb histogram of</p>
    <p>images)  Data size: 100,000  Dimensionality: 8 and 27  Page size: 8 KB  20-nearest neighbor queries  Evaluation is based on the average for 100</p>
    <p>query points  Index structure : A-tree (Sakurai et al.,</p>
    <p>VLDB2000)  CPU: SUN UltraSPARC-II 450MHz</p>
  </div>
  <div class="page">
    <p>Performance Test</p>
    <p>Query matrices for experiments  [HSE+95] : the components of M</p>
    <p>: positive constant,</p>
    <p>dw(ci ,cj ) : the weighted Euclidean distance</p>
    <p>between the color ci and cj,</p>
    <p>w=(wr , wg , wb ) : the weightings of the red, green</p>
    <p>and blue components in RGB color space</p>
    <p>=10, wg=wb=1</p>
    <p>wr was varied from 1 to 1,000</p>
    <p>The flatness of M increases as wr becomes large</p>
    <p>))),((exp( 2maxdccdm jiwij</p>
  </div>
  <div class="page">
    <p>Performance of STT</p>
    <p>Comparison of STT and MBB-MBS (8D)  Both methods require the same number of page accesses</p>
    <p>since they utilize exact distance functions</p>
    <p>Low CPU cost : STT increases approximation quality, and reduces the number of exact calculations</p>
    <p>The effectiveness of STT increases with matrix flatness</p>
    <p>CPU time (d = 8) Number of page accesses (d = 8)</p>
  </div>
  <div class="page">
    <p>Performance of STT</p>
    <p>CPU time (d = 27) Number of page accesses (d = 27)</p>
    <p>Comparison of STT and MBB-MBS (27D)  The effectiveness of STT increases as either dimensionality</p>
    <p>or matrix flatness grows  STT achieves a 74% reduction in CPU cost for high</p>
    <p>dimensionality and matrix flatness</p>
  </div>
  <div class="page">
    <p>Performance of MSTT</p>
    <p>Three structures  structure constructed by the unit matrix (Unit)  structure constructed by the matrix wr=10  structure constructed by the matrix wr=1000</p>
    <p>Performance of MSTT  Dissimilarity : the cost of search using a structure chosen by the</p>
    <p>dissimilarity function  Dissimilarity is not optimal, but provides good performance</p>
    <p>CPU time (d = 8) Number of page accesses (d = 8)</p>
  </div>
  <div class="page">
    <p>Search methods for user-adaptive ellipsoid queries</p>
    <p>STT (Spatial Transformation Technique)  Spatial transformation  MBRs in the quadratic</p>
    <p>form distance space are transformed into rectangles in the Euclidean distance space</p>
    <p>STT performs ellipsoid queries efficiently even when dimensionality or matrix flatness is high</p>
    <p>MSTT (Multiple Spatial Transformation Technique)  MSTT creates various index structures; the search</p>
    <p>algorithm utilizes a structure well suited to a query matrix</p>
    <p>MSTT reduces both CPU time and the number of page accesses</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Dimensionality Reduction</p>
    <p>Eigenvalues of a query matrix  Dimensions corresponding to small eigenvalues</p>
    <p>contribute less to approximation quality</p>
    <p>These dimensions are eliminated to save on CPU costs</p>
    <p>Calculation time for the spatial transformation of rectangles is reduced to n/d</p>
    <p>n : the number of dimensions used</p>
    <p>The effect of D.R. grows as matrix flatness increases</p>
    <p>)( dn</p>
  </div>
  <div class="page">
    <p>Performance of STT (2)</p>
    <p>Percentage of filtered exact distance calculations  The efficiency of MBB-MBS decreases as matrix flatness</p>
    <p>grows  STT effectively filters exact distance calculations for all</p>
    <p>queries</p>
    <p>Rate of filtered exact calculations</p>
    <p>d = 8 d = 27</p>
  </div>
  <div class="page">
    <p>Performance of MSTT</p>
    <p>CPU time (d = 27) Number of page accesses (d = 27)</p>
    <p>Low search cost  Compared with the structure by the Euclidean distance</p>
    <p>function, MSTT reduces both CPU time and the number of page accesses</p>
    <p>MSTT constructs various structures  Dissimilarity function chooses structures well suited to the</p>
    <p>query matrix.</p>
  </div>
</Presentation>
