<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Scalable Web Object Inspec0on and Malfease Collec0on</p>
    <p>Charalampos Andrianakis</p>
    <p>Paul Seymer</p>
    <p>Angelos Stavrou</p>
  </div>
  <div class="page">
    <p>The Problem</p>
    <p>Driveby download aEacks infect thousands of computers daily</p>
    <p>Millions of URLs spread the aEacks</p>
    <p>Current technologies based on full system virtualiza0on cant scale</p>
  </div>
  <div class="page">
    <p>Our Solu0on</p>
    <p>A URL analysis framework using lightweight virtualiza0on and a modified WINE engine  Scans thousands of URLs in parallel  Minimizes resource consump0on (VM uses less than 300MB of disk, 3MB of memory)</p>
    <p>Extracts the offending payload and use it for further analysis</p>
  </div>
  <div class="page">
    <p>Framework Architecture</p>
  </div>
  <div class="page">
    <p>Framework Architecture</p>
    <p>OpenVZ containers with Debian Linux and WINE</p>
    <p>Execute Internet Explorer inside WINE and visit malicious URL</p>
    <p>NOP Sled detector inside WINE detects the aEack (heap spray) and extracts the payload</p>
  </div>
  <div class="page">
    <p>Framework Architecture</p>
    <p>The payload is executed inside WINE with the payload loader</p>
    <p>Malware contacts a remote server and downloads zero day malware binaries</p>
  </div>
  <div class="page">
    <p>Framework Architecture</p>
  </div>
  <div class="page">
    <p>Scalability</p>
  </div>
  <div class="page">
    <p>Scalability</p>
  </div>
  <div class="page">
    <p>Limita0ons</p>
    <p>Our solu0on is limited to detec0ng heap spray aEacks only</p>
    <p>If the offending payload references func0ons or data in the address space of the browser it can evade detec0on</p>
  </div>
  <div class="page">
    <p>Ques0ons ?</p>
    <p>Thank you!</p>
  </div>
</Presentation>
