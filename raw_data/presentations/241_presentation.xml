<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.1 Copyright 2010 Hewlett-Packard Development Company, L.P.</p>
    <p>Eric Anderson, Xiaozhou (Steve) Li, Mehul Shah, Joseph Tucek, and Jay Wylie</p>
    <p>HP Labs</p>
    <p>HotDep 2010</p>
    <p>October 3, 2010</p>
    <p>What consistency does your key-value store actually provide?</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.2  Copyright 2010 Hewlett-Packard Development Company, L.P.2</p>
    <p>Outline</p>
    <p>Key-value stores  Consistencies  Checking consistencies  Algorithms  Findings</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.3</p>
    <p>KEY-VALUE STORES</p>
    <p>Simple Storage Service (S3), Dynamo</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.4</p>
    <p>CONSISTENCIES</p>
    <p>Eventually consistent</p>
    <p>Read-your-writes</p>
    <p>Quorum-based, multiple levels</p>
    <p>Read-repair, vector clocks, hinted hand-off</p>
    <p>Sequential writes</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.5</p>
    <p>Why not?</p>
    <p>DO YOU BELIEVE THEM?</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.6</p>
    <p>Verify SLAs that may contain consistency guarantees</p>
    <p>WHY DO YOU WANT TO KNOW?</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.7</p>
    <p>Choose the one that meets your consistency requirements</p>
    <p>WHY DO YOU WANT TO KNOW?</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.8</p>
    <p>Choose a proper service level for own workload</p>
    <p>WHY DO YOU WANT TO KNOW?</p>
    <p>What you pay is what you get</p>
    <p>What you get depends on your workload</p>
    <p>Tough workloads &amp; failures: Worse than</p>
    <p>expected / promised</p>
    <p>Benign workload &amp; good operating</p>
    <p>conditions: Better than minimal guarantee</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.9</p>
    <p>If we know the internal protocols</p>
    <p>WHAT CAN A USER DO?</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.10</p>
    <p>If we dont know the internal protocols</p>
    <p>WHAT CAN A USER DO?</p>
    <p>Key-value store</p>
    <p>User machine get(key) put(key, value)</p>
    <p>User machine</p>
    <p>User machine</p>
    <p>User machine</p>
    <p>User machine</p>
    <p>User machine</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.11</p>
    <p>CLIENT TRACES</p>
    <p>get/putMachine 1</p>
    <p>Machine 2</p>
    <p>Machine 3</p>
    <p>time</p>
    <p>request sent reply received</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.12</p>
    <p>[Lamport, Distributed Computing, 1986]</p>
    <p>REGISTER-BASED CONSISTENCY</p>
    <p>Atomic</p>
    <p>Safe</p>
    <p>Regular</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.13</p>
    <p>ATOMIC/REGULAR/SAFE</p>
    <p>W(0)</p>
    <p>R(0)</p>
    <p>W(1)</p>
    <p>R(1)</p>
    <p>R(0)</p>
    <p>Atomic</p>
    <p>Regular</p>
    <p>Safe</p>
    <p>W(0)</p>
    <p>R(1)</p>
    <p>W(1)</p>
    <p>R(0)</p>
    <p>W(0)</p>
    <p>R(2)</p>
    <p>W(1)</p>
    <p>R(0)</p>
    <p>Unsafe W(0)</p>
    <p>R(2)</p>
    <p>W(1)</p>
    <p>R(0)</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.14</p>
    <p>For all three: safe, regular, atomic</p>
    <p>OVERALL APPROACH</p>
    <p>Vertices = operations</p>
    <p>Edges = precedence</p>
    <p>Time</p>
    <p>Data</p>
    <p>Hybrid</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.15</p>
    <p>ASSUMPTIONS</p>
    <p>Client timestamps are reasonably synchronized</p>
    <p>Or they are calibrated during merge  Chirp [Anderson et al., MASCOTS, 2009]</p>
    <p>All writes write a distinct value</p>
    <p>There is a default value for each key</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.16</p>
    <p>ADDING TIME EDGES</p>
    <p>W(0) W(1)</p>
    <p>R(1) R(0)</p>
    <p>W(0)</p>
    <p>W(1)</p>
    <p>R(1) R(0)</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.17</p>
    <p>ADDING DATA EDGES</p>
    <p>W(0) W(1)</p>
    <p>R(1) R(0)</p>
    <p>W(0)</p>
    <p>W(1)</p>
    <p>R(1) R(0)</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.18</p>
    <p>ADDING HYBRID EDGES</p>
    <p>W(0) W(1)</p>
    <p>R(1) R(0)</p>
    <p>W(0)</p>
    <p>W(1)</p>
    <p>R(1) R(0)</p>
    <p>W</p>
    <p>RW</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.19</p>
    <p>DFS</p>
    <p>DETECTING CYCLES</p>
    <p>W(0)</p>
    <p>W(1)</p>
    <p>R(1) R(0)</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.20</p>
    <p>Number of cyles found in DFS</p>
    <p>COUNTING VIOLATIONS</p>
    <p>cycles=1</p>
    <p>cycles=2</p>
    <p>Feedback arc set Feedback vertex set</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.21</p>
    <p>CHECKING REGULARITY AND SAFETY</p>
    <p>Atomicity Regularity Safety</p>
    <p>Remove reads that read a concurrent writes value</p>
    <p>Remove all reads that are concurrent with some writes</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.22</p>
    <p>REDUCING NUMBER OF TIME EDGES</p>
    <p>W</p>
    <p>RW</p>
    <p>Edges m=n2 even in typical cases; all-pair reachability takes mn=n3 time.</p>
    <p>Reduced to mn=n2 time in typical cases.</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.23</p>
    <p>[Anderson et al., DSN, 2010]</p>
    <p>PAHOEHOE</p>
    <p>A key-value store</p>
    <p>prototype</p>
    <p>Erasure-coded</p>
    <p>Multi-datacenter</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.24</p>
    <p>EXPERIMENT SETUP</p>
    <p>Proxy</p>
    <p>get(key) put(key, value)</p>
    <p>KLS</p>
    <p>FS</p>
    <p>KLS</p>
    <p>FS</p>
    <p>Emulated wide-area link between datacenters</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.25</p>
    <p>EXPERIMENT SETUP</p>
    <p>Proxy is in data center and shares NTP w/ servers</p>
    <p>1000 operations</p>
    <p>Similar to YCSB microbenchmark  Larger object size: 128KB</p>
    <p>40% gets + 60% updates = 70% gets + 30% puts</p>
    <p>Varying  Number of keys</p>
    <p>Number of processes</p>
    <p>Distribution (uniform, Zipfian)</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.26</p>
    <p>Concurrency = 128</p>
    <p>VIOLATIONS VS. KEYS</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.27</p>
    <p>Keys = 8</p>
    <p>VIOLATIONS VS. CONCURRENCY</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.28</p>
    <p>[Misra, TOPLAS, 1986]</p>
    <p>RELATED WORK</p>
    <p>Misras algorithm</p>
    <p>Reasons about values</p>
    <p>Only for atomicity</p>
    <p>Probably can be extended</p>
    <p>for safety and regularity</p>
    <p>Harder to quantify violation</p>
    <p>severity</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.29</p>
    <p>ONLINE CONSISTENCY CHECKING</p>
    <p>failures</p>
    <p>time</p>
  </div>
  <div class="page">
    <p>Copyright 2010 Hewlett-Packard Development Company, L.P.30</p>
    <p>CONCLUSIONS</p>
    <p>Independent checking useful</p>
    <p>Algorithms for checking three semantics</p>
    <p>Eventually consistent may perform atomically</p>
    <p>Future work</p>
    <p>Other semantics</p>
    <p>Implement online checking</p>
    <p>Monitor key-value stores</p>
  </div>
</Presentation>
