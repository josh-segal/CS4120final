<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Building a 100K log/sec system</p>
    <p>David Lang Intuit</p>
    <p>david@lang.hm Talk materials available at</p>
    <p>http://talks.lang.hm/talks/topics/Logging</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 2</p>
    <p>Starting Conditions</p>
    <p>In 2006 we had logging that had evolved  135 networks connected by 100 sets of</p>
    <p>firewalls  Proxies, no routes between networks</p>
    <p>100% growth for 7 of the prior 10 years  Current logs estimated at ~12k logs/sec</p>
    <p>3 years of growth ~100K logs/sec</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 3</p>
    <p>Design goals</p>
    <p>Gather all logs generated by any software or hardware in the company.</p>
    <p>Have an alerting engine that generates alerts based on individual or combinations of log messages</p>
    <p>Allow for rapid ad-hoc searching of the logs, both for Fraud investigations and for Troubleshooting.</p>
    <p>Maintain an archive of logs for many years (data retention policy set by the Legal department and driven by the need to provide logs of financial transactions to Banks)</p>
    <p>Generate periodic reports summarizing data in the logs</p>
    <p>Be able to run for at least three years without needing any architectural changes. Proactively identify what the expected bottlenecks, and produce plans to address them</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 4</p>
    <p>Architecture</p>
    <p>Gathering logs</p>
    <p>Transporting logs</p>
    <p>Delivering logs</p>
    <p>Analyzing logs</p>
    <p>Archiving</p>
    <p>Alerting</p>
    <p>Reporting</p>
    <p>Searching</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 5</p>
    <p>Transporting Logs</p>
    <p>Standards Based  Most existing logs syslog  Evaluated performance of syslog options</p>
    <p>Selected rsyslog  Performance  Flexibility</p>
    <p>Fixing logs during transport  Example: Cisco</p>
    <p>&lt;pri&gt;timestamp IP tag: message</p>
    <p>&lt;pri&gt;timestamp NAME : tag: message</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 6</p>
    <p>Gathering Logs</p>
    <p>Syslog  Logger  Rsyslog imfile  Custom scripts</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 7</p>
    <p>Delivering Logs</p>
    <p>100K logs/sec</p>
    <p>average of ~250 Bytes/log</p>
    <p>Four (or more) destinations for each log message</p>
    <p>Gig-E wire speed 125MB/sec (theoretical)</p>
    <p>Gig-E likely to be a limiting factor</p>
    <p>Solution: Multicast MAC (CLUSTERIP on linux)</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 8</p>
    <p>Multicast MAC Intro</p>
    <p>Part of Ethernet spec, NOT IP multicast  Transparent to applications, firewalls, routers</p>
    <p>Configure in IPTABLES  Designed for load balancing  Sends one copy of the packet</p>
    <p>Received by multiple machines</p>
    <p>Processed by one machine</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 9</p>
    <p>Multicast MAC Example</p>
    <p>/sbin/iptables -I INPUT -d 192.168.1.5 -i eth0 \</p>
    <p>-j CLUSTERIP --new \</p>
    <p>--clustermac 01:02:03:04:05:06 \</p>
    <p>--total-nodes 3 --local-node 1 \</p>
    <p>--hashmode sourceip-sourceport</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 10</p>
    <p>Multicast MAC</p>
    <p>hashes to 13 13%3 = node 1</p>
    <p>hashes to 14 14%3 = node 2</p>
    <p>hashes to 15 15%3 = node 3</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 11</p>
    <p>Multiple Recipients</p>
    <p>With connectionless protocols you can have more than one machine process a packet</p>
    <p>Configure two machines to receive all packets /sbin/iptables -I INPUT -d 192.168.1.5 -i eth0 -j CLUSTERIP new \</p>
    <p>clustermac 01:02:03:04:05:06 total-nodes 1 local-node 1 \</p>
    <p>hashmode sourceip</p>
    <p>This also works with one system being 1 of 4 and another being 1 of 1</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 12</p>
    <p>Multicast MAC pros/cons</p>
    <p>Pros  Speed limit now receiving port speed</p>
    <p>Add/Remove clusters without configuring senders</p>
    <p>Add/Remove members of clusters without configuring senders</p>
    <p>Cons  UDP only</p>
    <p>Log length limited to packet size</p>
    <p>unreliable delivery  Must use Linux/BSD for receiving systems</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 13</p>
    <p>Analyzing Logs: Archiving</p>
    <p>Rsyslog writing to traditional flat files rotated every minute.</p>
    <p>Logs split by rsyslog into type categories  File rotation into directories</p>
    <p>year/month/day/type-messages.HHMM</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 14</p>
    <p>Analyzing Logs: Alerting</p>
    <p>Initially two implementations  Nitro Security Appliances (commercial)</p>
    <p>Could not handle load  Could not handle syslog relays</p>
    <p>Simple Event Correlator (Open Source)  Works well, but single threaded.  See 2010 LISA paper by Paul Krizak Log Analysis and Event</p>
    <p>Correlation Using Variable Temporal Event Correlator (VTEC) for a great concept for scaling.</p>
    <p>Split logs by type, have a single process look for things within that type of logs, and when it finds things, generate log messages back into the system.</p>
    <p>Have a Master process just looking for log messages from the sub-processes and alert on combinations of those</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 15</p>
    <p>Analyzing Logs: Reporting</p>
    <p>Artificial Ignorance  Filter out but count messages that are known to be</p>
    <p>uninteresting</p>
    <p>Split logs that you recognize off to separate scripts to summarize them</p>
    <p>Sort the remaining messages by the most common messages (filter out minor differences)</p>
    <p>Report each hour on that hour's logs  Report each day on that day's logs</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 16</p>
    <p>Analyzing Logs: Reporting</p>
    <p>Reporting scripts run on Archive server  Summary scripts are Bash, Awk, Perl</p>
    <p>Start simple and optimize/re-write as needed</p>
    <p>Example of final summary command |cut -c 17- |sed s/&quot;port [0-9]* &quot;/&quot;port PORT &quot;/g</p>
    <p>|sed s/\[[0-9]*\]/&quot;[PID]&quot;/g|sed s/&quot;pid=[0-9]*&quot;/pid=PID/g</p>
    <p>|sed s/&quot;FIFO threshold to [0-9]* bytes&quot;/&quot;FIFO threshold to BYTES bytes&quot;/g</p>
    <p>|sort -S 2G -T $TMPDIR |uniq -c |sort -S 2G -T $TMPDIR -rn</p>
    <p>&gt;other-logs</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 17</p>
    <p>Analyzing Logs: Searching</p>
    <p>Investigated SenSage, Splunk, and homebrew with Greenplum (Postgres derived cluster DB)  Sensage: Very Expensive, no front-end</p>
    <p>Splunk: Expensive, nice front-end</p>
    <p>Greenplum: Cheap, no front-end</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 18</p>
    <p>Analyzing Logs: Searching</p>
    <p>Initial Splunk cluster by-the-book with 4 indexer systems plus two forwarder systems</p>
    <p>Each indexer 2x 2 core CPU, 16G ram, RAID 1 2x300G 15K SCSI + RAID 10 10x1TB SATA</p>
    <p>After one year, a query could take 15 minutes</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 19</p>
    <p>Analyzing Logs: Searching</p>
    <p>After testing many things, re-architected Splunk</p>
    <p>Eliminated forwarders  Went to a raid 10 set of forwarders</p>
    <p>Distributed load across 10 pairs of indexers</p>
    <p>Upgraded indexers  2x 4 core CPU, 64G ram, X25E SSD + RAID 6 16x1TB SATA</p>
  </div>
  <div class="page">
    <p>High Capacity Logging LISA 2012 20</p>
    <p>Analyzing Logs: Searching</p>
  </div>
</Presentation>
