<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>On the Structure of Industrial SAT Instances</p>
    <p>Carlos Ansotegui DIEI, UdL, Lleida, Spain</p>
    <p>Mara Luisa Bonet LSI, UPC, Barcelona, Spain</p>
    <p>Jordi Levy IIIA, CSIC, Barcelona, Spain</p>
    <p>CP09, Lisbon, Portugal</p>
  </div>
  <div class="page">
    <p>SAT</p>
    <p>SAT is a central problem in computer science and AI</p>
    <p>The problem is NP-complete</p>
    <p>State-of-the-art solvers (heuristics, backjumping, learning, restarts, . . . ) are of practical use with real-world SAT instances</p>
    <p>Objective: Design solvers that perform well on real-world SAT instances</p>
  </div>
  <div class="page">
    <p>SAT</p>
    <p>SAT is a central problem in computer science and AI</p>
    <p>The problem is NP-complete</p>
    <p>State-of-the-art solvers (heuristics, backjumping, learning, restarts, . . . ) are of practical use with real-world SAT instances</p>
    <p>Objective: Design solvers that perform well on real-world SAT instances</p>
    <p>What is a real-world SAT instance?</p>
  </div>
  <div class="page">
    <p>Exponential vs Powerlaw Distributions</p>
    <p>Human Height</p>
    <p># p</p>
    <p>e rs</p>
    <p>o n s</p>
    <p>inches</p>
    <p>height</p>
    <p>Human heights follows a normal distribution with mean 70 inches</p>
  </div>
  <div class="page">
    <p>Exponential vs Powerlaw Distributions</p>
    <p>Human Height</p>
    <p>% p</p>
    <p>e rs</p>
    <p>o n s</p>
    <p>inches</p>
    <p>height</p>
    <p>Cumulative Distribution: F (x) =% persons with height  x</p>
    <p>F (x) =</p>
    <p>x</p>
    <p>f (x)dx</p>
    <p>How decays the tail: Exponentially: f exp(x)  e x F exp(x)  e x</p>
    <p>Powerlaw: f pow (x)  x F pow (x)  x+1</p>
  </div>
  <div class="page">
    <p>Exponential vs Powerlaw Distributions</p>
    <p>Human Height</p>
    <p>% p</p>
    <p>e rs</p>
    <p>o n s</p>
    <p>inches</p>
    <p>height =0.53</p>
    <p>How decays the tail: Exponentially: f exp(x)  e x F exp(x)  e x</p>
    <p>Powerlaw: f pow (x)  x F pow (x)  x+1</p>
    <p>Modify the scale:</p>
    <p>Exponential: we get a line in the logarithmic scale Powerlaw: we get a line in the double-logarithmic scale</p>
  </div>
  <div class="page">
    <p>Exponential vs Powerlaw Distributions</p>
    <p>Human Height</p>
    <p>% p</p>
    <p>e rs</p>
    <p>o n s</p>
    <p>inches</p>
    <p>height =0.53</p>
    <p>logarithmic scale</p>
    <p>Decay as</p>
    <p>F exp(x)  e0.53 x</p>
    <p>Giants are very rare</p>
  </div>
  <div class="page">
    <p>Exponential vs Powerlaw Distributions</p>
    <p>Human Height Personal Income</p>
    <p>% p</p>
    <p>e rs</p>
    <p>o n s</p>
    <p>inches</p>
    <p>height =0.53</p>
    <p>% p</p>
    <p>e rs</p>
    <p>o n s</p>
    <p>dollars</p>
    <p>income</p>
    <p>logarithmic scale</p>
    <p>Decay as</p>
    <p>F exp(x)  e0.53 x</p>
    <p>Giants are very rare</p>
    <p>logarithmic scale</p>
  </div>
  <div class="page">
    <p>Exponential vs Powerlaw Distributions</p>
    <p>Human Height Personal Income</p>
    <p>% p</p>
    <p>e rs</p>
    <p>o n s</p>
    <p>inches</p>
    <p>height =0.53</p>
    <p>% p</p>
    <p>e rs</p>
    <p>o n s</p>
    <p>dollars</p>
    <p>income =3.5</p>
    <p>logarithmic scale</p>
    <p>Decay as</p>
    <p>F exp(x)  e0.53 x</p>
    <p>Giants are very rare</p>
    <p>double-logarithmic scale</p>
    <p>Decay as</p>
    <p>F pow (x)  x2.5</p>
    <p>Riches are not so rare</p>
  </div>
  <div class="page">
    <p>Estimation of the Parameters , ,  and kmin</p>
    <p>Empirical data k1, . . . , kn,</p>
    <p>Estimate  (or ) maximizing P(k1, . . . , kn | )</p>
  </div>
  <div class="page">
    <p>Estimation of the Parameters , ,  and kmin</p>
    <p>Empirical data k1, . . . , kn,</p>
    <p>Estimate  (or ) maximizing P(k1, . . . , kn | )</p>
    <p>P pow (k1, . . . , kn | ) =</p>
    <p>n Y</p>
    <p>i=1</p>
    <p>1 kmin</p>
    <p>ki kmin</p>
    <p>log Ppow (x1, . . . , xn | ) =</p>
    <p>= n 1</p>
    <p>n</p>
    <p>X</p>
    <p>i=1</p>
    <p>log ki</p>
    <p>kmin = 0</p>
    <p>We get</p>
    <p>= 1 + n</p>
    <p>P</p>
    <p>n</p>
    <p>i=1 log(ki /kmin)</p>
    <p>For the discrete case, a good approx. for larges kmin is</p>
    <p>= 1 + n</p>
    <p>P</p>
    <p>n</p>
    <p>i=1 log</p>
    <p>ki kmin1/2</p>
  </div>
  <div class="page">
    <p>Estimation of the Parameters , ,  and kmin</p>
    <p>Empirical data k1, . . . , kn,</p>
    <p>Estimate  (or ) maximizing P(k1, . . . , kn | )</p>
    <p>P pow (k1, . . . , kn | ) =</p>
    <p>n Y</p>
    <p>i=1</p>
    <p>1 kmin</p>
    <p>ki kmin</p>
    <p>log Ppow (x1, . . . , xn | ) =</p>
    <p>= n 1</p>
    <p>n</p>
    <p>X</p>
    <p>i=1</p>
    <p>log ki</p>
    <p>kmin = 0</p>
    <p>We get</p>
    <p>= 1 + n</p>
    <p>P</p>
    <p>n</p>
    <p>i=1 log(ki /kmin)</p>
    <p>For the discrete case, a good approx. for larges kmin is</p>
    <p>= 1 + n</p>
    <p>P</p>
    <p>n</p>
    <p>i=1 log</p>
    <p>ki kmin1/2</p>
    <p>P exp(k1, . . . , kn | ) =</p>
    <p>n Y</p>
    <p>i=1</p>
    <p>(1  e ) e(ki kmin)</p>
    <p>log Pexp(k1, . . . , kn | ) =</p>
    <p>= n e</p>
    <p>n X</p>
    <p>i=1</p>
    <p>(ki  kmin) = 0</p>
    <p>We get</p>
    <p>= log</p>
    <p>n P</p>
    <p>n</p>
    <p>i=1 (ki  kmin)</p>
    <p>+ 1</p>
  </div>
  <div class="page">
    <p>Estimation of the Parameters , ,  and kmin</p>
    <p>Empirical data k1, . . . , kn,</p>
    <p>Estimate  (or ) maximizing P(k1, . . . , kn | )</p>
    <p>= 1 + n</p>
    <p>n i=1 log</p>
    <p>ki kmin1/2</p>
    <p>= log</p>
    <p>(</p>
    <p>n n</p>
    <p>i=1(ki  kmin) + 1</p>
    <p>)</p>
    <p>Compute the error for every possible kmin as</p>
    <p>pow (kmin) = max kkmin</p>
    <p>{|F emp(k)  F pow (k; , kmin)|}</p>
  </div>
  <div class="page">
    <p>Estimation of the Parameters , ,  and kmin</p>
    <p>Empirical data k1, . . . , kn,</p>
    <p>Estimate  (or ) maximizing P(k1, . . . , kn | )</p>
    <p>= 1 + n</p>
    <p>n i=1 log</p>
    <p>ki kmin1/2</p>
    <p>= log</p>
    <p>(</p>
    <p>n n</p>
    <p>i=1(ki  kmin) + 1</p>
    <p>)</p>
    <p>Compute the error for every possible kmin as</p>
    <p>pow (kmin) = max kkmin</p>
    <p>{|F emp(k)  F pow (k; , kmin)|}</p>
    <p>Estimate kmin as the value resulting into the smallest error</p>
    <p>pow = min kmin1</p>
    <p>(kmin)</p>
    <p>If pow &gt; exp the distribution is powerlaw</p>
  </div>
  <div class="page">
    <p>Two Models of Graphs</p>
    <p>Erdos-Renyi Graphs</p>
    <p>For every pair &lt; vi , vj &gt;, put an edge with probability p</p>
    <p>Arity of nodes follows a binomial distribution</p>
    <p>P(k) =</p>
    <p>(</p>
    <p>n  1</p>
    <p>k</p>
    <p>)</p>
    <p>p k (1p)n1k</p>
    <p>Scalefree Graphs</p>
    <p>There is not a formal definition</p>
    <p>Arity of nodes follows a powerlaw distribution</p>
    <p>P(k) = C k</p>
    <p>They are also self-similar</p>
  </div>
  <div class="page">
    <p>SAT Formulas as Bi-partite Graphs</p>
    <p>Bi-partite graph: Nodes: are variables v and clauses c Edges: v  c if clause c contains variable v</p>
  </div>
  <div class="page">
    <p>SAT Formulas as Bi-partite Graphs</p>
    <p>Bi-partite graph: Nodes: are variables v and clauses c Edges: v  c if clause c contains variable v</p>
    <p>Arity of nodes: v number of occurrences c size</p>
  </div>
  <div class="page">
    <p>SAT Formulas as Bi-partite Graphs</p>
    <p>Bi-partite graph: Nodes: are variables v and clauses c Edges: v  c if clause c contains variable v</p>
    <p>Arity of nodes: v number of occurrences  4.25  3 = 12.75 c size = 3</p>
    <p>Random 3-CNF</p>
    <p>Number of var occurrences very close to the mean</p>
  </div>
  <div class="page">
    <p>SAT Formulas as Bi-partite Graphs</p>
    <p>Bi-partite graph: Nodes: are variables v and clauses c Edges: v  c if clause c contains variable v</p>
    <p>Hubs: v very frequent variables c very large clauses Random 3-CNF Industrial Instance</p>
  </div>
  <div class="page">
    <p>Study of some Families (Variables)</p>
    <p>Powerlaw Exponential Family inst n E [V ] Var [V ]  k</p>
    <p>pow</p>
    <p>min pow  k</p>
    <p>exp</p>
    <p>min exp</p>
    <p>cmu 3 16678 7.95 12.11 3.49 5 0.072 0.224 4 0.176 een 12 739744 7.60 13.26 2.67 10 0.043 0.054 15 0.136 fuhs 2 73486 9.05 14.56 2.79 62 0.075 0.181 4 0.158 goldb 11 114038 21.02 88.71 2.05 21 0.042 0.003 100 0.204 grieu 9 6914 364.21 42.23 1.77 100 0.577 0.004 100 0.538 ibm 38 4985723 10.75 23.97 2.63 7 0.027 0.017 45 0.083 manol 59 7827736 6.93 16.24 2.95 57 0.059 0.017 76 0.033 mizh 13 725644 12.49 148.12 4.09 15 0.172 0.034 22 0.247 narai 6 9642548 9.72 16.38 3.85 5 0.152 0.109 1 0.347 palac 2 298266 10.82 60.55 1.84 20 0.087 0.003 100 0.074 post 10 12906872 7.90 44.15 2.57 12 0.132 0.135 1 0.334 schup 7 2196731 8.09 12.40 2.59 41 0.120 0.063 9 0.182 simon 12 798804 7.78 11.96 2.53 14 0.028 0.022 50 0.065 uts 10 1420464 13.01 74.70 1.76 69 0.111 0.003 75 0.088 velev 60 8442829 88.31 379.04 1.82 13 0.030 0.003 87 0.287</p>
    <p>random 40 400000 12.75 3.57 18.65 24 0.019 0.777 25 0.008</p>
    <p>SAT08 100 27964721 13.30 113.48 2.29 12 0.051 0.003 73 0.254</p>
  </div>
  <div class="page">
    <p>Study of some Families (Clauses)</p>
    <p>Powerlaw Exponential Family inst m E [C ] Var [C ]  k</p>
    <p>pow</p>
    <p>min pow  k</p>
    <p>exp</p>
    <p>min exp</p>
    <p>cmu 3 53769 2.46 1.21 5.35 3 0.126 1.778 3 0.048 een 12 2278059 2.47 0.69 3.80 4 0.044 2.420 3 0.046 fuhs 2 256742 2.59 0.82 4.89 5 0.041 2.182 3 0.020 goldb 11 710559 3.37 1.46 10.48 5 0.158 4.803 5 0.008 grieu 9 961030 2.62 0.76 8.54 26 0.108 3.878 3 0.020 ibm 38 21084555 2.54 1.57 3.77 6 0.023 0.375 4 0.032 manol 59 23244626 2.33 0.47 mizh 13 3036234 2.98 0.91 1.58 1 0.328 0.408 1 0.334 narai 6 37639556 2.49 2.05 3.33 2 0.088 1.113 2 0.090 palac 2 1274356 2.53 9.33 1.71 4 0.116 1.055 2 0.116 post 10 42441234 2.40 1.39 3.33 2 0.143 2.884 33 0.053 schup 7 6947242 2.56 1.36 4.30 4 0.093 2.585 3 0.046 simon 12 2675233 2.32 0.90 3.76 4 0.033 0.498 5 0.026 uts 10 7101806 2.60 11.56 3.63 2 0.114 0.004 35 0.116 velev 60 253221473 2.94 9.01 3.35 72 0.042 0.021 28 0.040</p>
    <p>random 40 1700000 3.00 0.00 SAT08 100 140942860 2.64 5.68 3.03 17 0.054 0.074 10 0.068</p>
  </div>
  <div class="page">
    <p>Cumulative Distributions for some Families (1)</p>
    <p>IBM EEN</p>
    <p>variables =2.63</p>
    <p>=0.017 clauses =3.77</p>
    <p>=0.375</p>
    <p>variables =2.67</p>
    <p>=0.054 clauses =3.80</p>
    <p>=2.420</p>
    <p>Vars follows a powerlaw with   2.6</p>
    <p>Clauses follows a powerlaw with   3.8</p>
  </div>
  <div class="page">
    <p>Cumulative Distributions for some Families (2)</p>
    <p>VELEV SIMON</p>
    <p>variables =1.82</p>
    <p>=0.003 clauses =3.35</p>
    <p>=0.021</p>
    <p>variables =2.53</p>
    <p>=0.022 clauses =3.76</p>
    <p>=0.498</p>
    <p>Vars follows a powerlaw with 1.8    3.5</p>
    <p>Clauses follows an exponential</p>
  </div>
  <div class="page">
    <p>Cumulative Distributions for some Families (3)</p>
    <p>MANOL POST</p>
    <p>variables =2.95</p>
    <p>=0.017</p>
    <p>variables =2.57</p>
    <p>=0.135 clauses =3.33</p>
    <p>=2.884</p>
    <p>Vars does not seem to follow any simple distribution</p>
    <p>neither Clauses, or there are very few values</p>
  </div>
  <div class="page">
    <p>Cumulative Distributions for some Families (4)</p>
    <p>Random 3CNF SAT Race08</p>
    <p>variables =18.65 =0.777</p>
    <p>variables =2.29</p>
    <p>=0.003 clauses =3.03</p>
    <p>=0.074</p>
    <p>In general:</p>
    <p>Vars follows a powerlaw distribution in more cases than clauses</p>
    <p>is bigger for clauses than for vars</p>
  </div>
  <div class="page">
    <p>Instantiating Variables: How Formula Decreases</p>
    <p>% f o rm</p>
    <p>u la</p>
    <p>p re</p>
    <p>se rv</p>
    <p>e d</p>
    <p>% variables instantiated</p>
    <p>Random 3CNF IBM</p>
    <p>EEN MANOL</p>
  </div>
  <div class="page">
    <p>Instantiating Variables: How Formula Decreases</p>
    <p>% f o rm</p>
    <p>u la</p>
    <p>p re</p>
    <p>se rv</p>
    <p>e d</p>
    <p>% variables instantiated</p>
    <p>Random 3CNF IBM</p>
    <p>EEN MANOL</p>
  </div>
  <div class="page">
    <p>Instantiating Variables: How Formula Decreases</p>
    <p>% f o rm</p>
    <p>u la</p>
    <p>p re</p>
    <p>se rv</p>
    <p>e d</p>
    <p>% variables instantiated</p>
    <p>Random 3CNF IBM</p>
    <p>EEN MANOL</p>
  </div>
  <div class="page">
    <p>Instantiating Variables: How Formula is Modified</p>
    <p>IBM orig. random 10%</p>
    <p>Experiments with the IBM family</p>
    <p>RH preserve the scalefree structure</p>
  </div>
  <div class="page">
    <p>Instantiating Variables: How Formula is Modified</p>
    <p>IBM orig. random 10% Jeroslaw 1%</p>
    <p>Most freq. 1% Jeroslaw 2%</p>
    <p>Most freq. 2% Jeroslaw 5%</p>
    <p>Most freq. 5% Jeroslaw 10%</p>
    <p>Most freq. 10%</p>
    <p>Experiments with the IBM family</p>
    <p>RH preserve the scalefree structure</p>
    <p>JW and MF instantiate frequent variables and could destroy the scalefree structure</p>
  </div>
  <div class="page">
    <p>Instantiating Variables: How Formula is Modified</p>
    <p>Jeroslaw 5% Most freq. 5% Jeroslaw 10%</p>
    <p>Most freq. 10%</p>
    <p>Experiments with the IBM family</p>
    <p>RH preserve the scalefree structure</p>
    <p>JW and MF instantiate frequent variables and could destroy the scalefree structure</p>
  </div>
  <div class="page">
    <p>Instantiating Variables: How Formula is Modified</p>
    <p>random Jeroslow-Wang Most freq. Powerlaw Exponential Powerlaw Exponential Powerlaw Exponential</p>
    <p>pow  exp  pow  exp  pow  exp</p>
    <p>Experiments with the IBM family</p>
    <p>RH preserve the scalefree structure  is preserved</p>
    <p>JW and MF destroy the structure after instantiating 5% of the variables  is increased</p>
  </div>
  <div class="page">
    <p>Instantiating Variables: How Formula is Modified</p>
    <p>random Jeroslow-Wang Most freq. Powerlaw Exponential Powerlaw Exponential Powerlaw Exponential</p>
    <p>pow  exp  pow  exp  pow  exp</p>
    <p>Experiments with the IBM family</p>
    <p>RH preserve the scalefree structure</p>
    <p>JW and MF destroy the structure after instantiating 5% of the variables</p>
    <p>After instantiating 5% vars the assignment is inconsistent</p>
  </div>
  <div class="page">
    <p>Experiments with Real SAT Solvers</p>
    <p>IBM orig. =2.63</p>
    <p>satz at max depth =2.90</p>
    <p>Solver: Satz Family: IBM</p>
    <p>Formula under the longest assignment found after 1h of search:  is increased but the formula is still scalefree</p>
  </div>
  <div class="page">
    <p>Experiments with Real SAT Solvers</p>
    <p>IBM orig. max. depth</p>
    <p>Solver: Minisat Family: IBM</p>
    <p>Formula under the longest assignment found after 1000s of search:  is increased but the formula is still scalefree</p>
  </div>
  <div class="page">
    <p>Experiments with Real SAT Solvers</p>
    <p>IBM orig. max. depth</p>
    <p>orig. + learned orig + learned instant.</p>
    <p>Solver: Minisat Family: IBM Formula under the longest assignment found after 1000s of search:  is increased but the formula is still scalefree Original formula plus clauses learned after 200000 decisions:  is decreased substantially Instantiated or working formula (plus learned clauses) after 200000 decisions:  is approximately as in the original formula</p>
  </div>
  <div class="page">
    <p>Experiments with Random 3CNF Formulas</p>
    <p>RANDOM orig. =0.566</p>
    <p>max depth =0.571</p>
    <p>orig. + learned =1.70</p>
    <p>orig. + learned instant. =3.09</p>
    <p>Solver: Minisat Family: Random 3CNF</p>
    <p>Learned clauses makes the formula scalefree</p>
    <p>For the working formula   3</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Most industrial SAT formulas seems to be scalefree</p>
    <p>Contrarily to what one could expect formulas does not loose scalefree structure after instantiating most frequent variables</p>
    <p>Learning seems to help to preserve scalefree structure</p>
    <p>Even more, learning seems to make random 3CNF formulas scalefree</p>
    <p>Solvers specialized in industrial instances seem to take profit of their scalefree structure</p>
    <p>Open Question:</p>
    <p>Why many industrial SAT instances are scalefree? Preferential attachment?</p>
    <p>Why the scalefree structure helps? Is it true?</p>
    <p>How we can take more advantage of the structure?</p>
  </div>
</Presentation>
