<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>DATA  Differential Address Trace Analysis: Finding Address-based Side-Channels in Binaries</p>
    <p>Samuel Weiser, Andreas Zankl?, Raphael Spreitzer, Katja Miller?, Stefan Mangard, and Georg Sigl?</p>
    <p>August 16th 2018  27th USENIX Security Symposium</p>
  </div>
  <div class="page">
    <p>Motivation Side-channel Leakage</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 2</p>
  </div>
  <div class="page">
    <p>What is Address Leakage?</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 3</p>
  </div>
  <div class="page">
    <p>Motivation Address Leakage</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 4</p>
    <p>Secret information somehow leaked through Memory access pattern</p>
    <p>Secret-dependency</p>
    <p>Data leakage</p>
    <p>Control-flow leakage</p>
  </div>
  <div class="page">
    <p>Motivation Address Leakage</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 5</p>
    <p>Data leakage</p>
    <p>Control-flow leakage</p>
  </div>
  <div class="page">
    <p>Motivation Address Leakage</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 6</p>
    <p>Data leakage</p>
    <p>Control-flow leakage</p>
    <p>Capture all such attacks by Address leakage</p>
  </div>
  <div class="page">
    <p>Our Objective:</p>
    <p>Analyze program Find many address leaks</p>
    <p>Be efficient</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 7</p>
  </div>
  <div class="page">
    <p>Methodology</p>
    <p>Static analysis  Symbolic execution</p>
    <p>Upper leakage bound (zero false negatives)</p>
    <p>Problems:</p>
    <p>Imprecision (false positives)  Interpreted code  Performance</p>
    <p>Dynamic analysis  Concrete execution</p>
    <p>Real leaks (zero false positives)</p>
    <p>Problem</p>
    <p>Coverage (false negatives)</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 8</p>
  </div>
  <div class="page">
    <p>DATA  Differential Address-Trace Analysis</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 9</p>
  </div>
  <div class="page">
    <p>DATA Our Contribution</p>
    <p>User specifies what is secret  Tool finds secret-dependent address leaks  Tool analyzes severity of leaks</p>
    <p>Data and control-flow leaks  Low false positives &amp; negatives  Non-determinism</p>
    <p>Fully automated  Fast and openly available  Found and fixed critical vulnerabilities in OpenSSL  Analyzed interpreted code (PyCrypto)</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 10</p>
  </div>
  <div class="page">
    <p>DATA Overview</p>
    <p>Find irregularities Is it a leak? How severe?</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 11</p>
  </div>
  <div class="page">
    <p>DATA Phase 1: Difference Detection</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 12</p>
  </div>
  <div class="page">
    <p>DATA Phase 1: Difference Detection</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 13</p>
  </div>
  <div class="page">
    <p>DATA Phase 1: Difference Detection</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 14</p>
    <p>Reduce false negatives  Binary instrumentation  Capture all address leakage  Sequential trace comparison  Trace re-alignment on CF-leaks</p>
  </div>
  <div class="page">
    <p>DATA Phase 2: Leakage Detection</p>
    <p>Trace recording</p>
    <p>Only instrument code with address differences  Execute with fixed and varying input set  Record short traces for each input set</p>
    <p>Generic leakage test</p>
    <p>Build address distributions  If not similar  leak!  Accumulate in leak report</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 15</p>
  </div>
  <div class="page">
    <p>DATA Phase 3: Leakage Classification</p>
    <p>Preparation</p>
    <p>Collect list of addresses per leak  Leakage model: property or part of secret inputs  Build pairs: Addresslist  LeakageModel(inputs)</p>
    <p>Specific leakage test</p>
    <p>Test pairs for (non-)linear relations  If related: model  info loss  Accumulate in final report</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 16</p>
  </div>
  <div class="page">
    <p>Practical Results</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 17</p>
  </div>
  <div class="page">
    <p>Practical Results Overview</p>
    <p>Confirmed Known Leaks</p>
    <p>Symmetric ciphers  lookup tables  AES bit-sliced  key schedule  ECDSA  wNAF point multiplication</p>
    <p>Found New Leaks</p>
    <p>DSA  bypass constant-time mod. inv.  RSA  bypass constant-time mod. exp.  AES-NI &amp; PEM keys  hex parsing</p>
    <p>Performance: &lt; 4 CPU hours, &lt; 4.5GB RAM, &lt; 1GB storage</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 18</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 19</p>
  </div>
  <div class="page">
    <p>Conclusion Takeaways</p>
    <p>DATA - Differential Address Trace Analysis  Any address-based leaks . . . . . . . . . . . . . . . . . . . . . . . . . . . caches, DRAM, etc.  Low false positives / negatives . . . . . . . . . . . . . . . . . . . guarantees / strategies  Severity . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . leakage models</p>
    <p>Benefits for developers  Automated . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . easy to use/no annotations  Efficient . . . . . . . . . . . . . . . . . . . . . . . . . . . . interpreters, commodity hardware  Practical . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . new vulnerabilities in OpenSSL</p>
    <p>Work in progress: GUI, improved performance, your ideas...</p>
    <p>https://github.com/Fraunhofer-AISEC/DATA</p>
    <p>DATA  Differential Address Trace Analysis | Weiser et al. | USENIX Security 2018 | 20</p>
  </div>
</Presentation>
