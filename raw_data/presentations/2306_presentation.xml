<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Power-Aware Computer Systems (PACS) Lab</p>
    <p>Power-Aware Throughput Control for Database Management Systems</p>
    <p>Zichen Xu, Xiaorui Wang, Yi-Cheng Tu* The Ohio State University</p>
    <p>* The University of South Florida</p>
  </div>
  <div class="page">
    <p>Problem Overview and Motivation  Data centers are energy starving  Database management system (DBMS) is one of the</p>
    <p>major services in data centers  Control the DBMS throughput to save energy</p>
    <p>Setpoint</p>
    <p>Max Load</p>
    <p>Lo ad</p>
    <p>t</p>
    <p>Power saving to the setpoint: low power hardware states  Balanced performance: performance control</p>
  </div>
  <div class="page">
    <p>Power-Aware Throughput Control (PAT)  Goal: minimize power consumption of a database system</p>
    <p>while maintaining its desired performance</p>
    <p>Challenges  Energy and DBMS: power consumption minimization  Control and DBMS: performance guarantee</p>
    <p>A ct</p>
    <p>iv e</p>
    <p>Po w</p>
    <p>er</p>
    <p>t  Contributions:</p>
    <p>Energy profiling in DBMS  Feedback control design in DBMS</p>
    <p>Setpoint L oa</p>
    <p>d</p>
    <p>t</p>
    <p>Energy</p>
  </div>
  <div class="page">
    <p>Power-Aware Throughput Control (PAT)  Goal: minimize power consumption of a database system</p>
    <p>while maintaining its desired performance</p>
    <p>Challenges  Energy and DBMS: power consumption minimization  Control and DBMS: performance guarantee</p>
    <p>A ct</p>
    <p>iv e</p>
    <p>Po w</p>
    <p>er</p>
    <p>t  Contributions:</p>
    <p>Energy profiling in DBMS  Feedback control design in DBMS</p>
    <p>Setpoint L oa</p>
    <p>d</p>
    <p>t</p>
    <p>Energy</p>
  </div>
  <div class="page">
    <p>Characterization Study  Memory</p>
    <p>Low power state in memory may not be a good choice for power saving in DBMS workloads</p>
  </div>
  <div class="page">
    <p>Characterization Study  Memory</p>
    <p>Low power state in memory may not be a good choice for power saving in DBMS workloads</p>
    <p>At least 90% performance degradation</p>
    <p>Less than 20% power savings</p>
  </div>
  <div class="page">
    <p>Characterization Study  CPU</p>
    <p>CPU provides great power-saving and the relationship can be approximated as a linear model</p>
  </div>
  <div class="page">
    <p>Characterization Study  DBMS Workloads</p>
    <p>The ratio of I/O intensive queries () is the key in the workload statistics for power control</p>
  </div>
  <div class="page">
    <p>Characterization Study  DBMS Workloads</p>
    <p>The ratio of I/O intensive queries () is the key in the workload statistics for power control</p>
  </div>
  <div class="page">
    <p>Characterization Study  DBMS Workloads</p>
    <p>The ratio of I/O intensive queries () is the key in the workload statistics for power control</p>
  </div>
  <div class="page">
    <p>Characterization Study  Insights  Low power state in CPU provides great</p>
    <p>opportunities for power-saving</p>
    <p>DBMS throughput and CPU frequency can be approximated as a linear model   =    +</p>
    <p>The ratio of I/O intensive queries () is the key in</p>
    <p>the workload statistics for power control   =  +</p>
  </div>
  <div class="page">
    <p>Framework Query Workload</p>
    <p>Query Queue Query Resource</p>
    <p>Estimator Workload Classifier (Input Module)</p>
    <p>DBMS</p>
    <p>RS</p>
    <p>CPU Power State Modulator</p>
    <p>System Util. Monitor</p>
    <p>Throughput Monitor</p>
    <p>PI Controller</p>
    <p>Plant Actuator</p>
    <p>Controller )(ir</p>
    <p>)1( ir</p>
    <p>+</p>
    <p>)(if New CPU State</p>
    <p>PAT Control</p>
    <p>Workload Statistics</p>
  </div>
  <div class="page">
    <p>Fuzzy Workload Classifier  One fuzzy rule base  Compute the membership of query to each learnt cluster</p>
    <p>The procedure of workload classification  Evaluation of antecedents  Implication calculation of consequents  Aggregation result of consequents</p>
    <p>Query Statistic Vector</p>
    <p>Evaluation Cluster Weight</p>
    <p>Implication</p>
    <p>Aggregation</p>
    <p>Implication Confidence</p>
    <p>yes</p>
    <p>no</p>
    <p>Update the ratio of I/O intensive queries ( )</p>
  </div>
  <div class="page">
    <p>The Controller Design  System model</p>
    <p>=   +   Control model (PI control)  Zero steady-state error  Short settling time  Stability a System Model</p>
    <p>Control Model</p>
    <p>Transfer Function</p>
    <p>Pole Placement</p>
    <p>Control Period t, Max Overshoot, etc.</p>
    <p>Kp KI</p>
  </div>
  <div class="page">
    <p>Methodology  Testbed</p>
    <p>Hardware: a DELL PowerEdge R710 with 12-core Intel Xeon E5645, 16GB memory and 1TB storage</p>
    <p>Software: Redhat 5 (V3.0.0) + PostgreSQL (V8.3.18)  Workload: TPC and SDSS  Power measurement: WattsUp power meter</p>
    <p>System Contention  Ideal: running DBMS alone  Competing: running DBMS with other processes with</p>
    <p>equal priority.  Preemptive: running DBMS with other processes with</p>
    <p>higher priority.</p>
  </div>
  <div class="page">
    <p>Baselines  State-of-the-Practice Baselines</p>
    <p>NORMAL: no power management, performance first  SPEEDSTEP: IntelTM build-in power management</p>
    <p>State-of-the-Art Baselines  TRADITION: Open-loop control based on known</p>
    <p>workload statistics  HEURISTIC: Ad-hoc control based on performance</p>
    <p>power model  SCTRL: System-level power control for DBMS</p>
    <p>performance</p>
  </div>
  <div class="page">
    <p>A Snapshot of PAT in Competing Setup Th</p>
    <p>ro ug</p>
    <p>hp ut</p>
    <p>Po</p>
    <p>w er</p>
  </div>
  <div class="page">
    <p>How PAT Performs in All Scenarios</p>
    <p>PAT saves energy cost (15% more than the SPEEDSTEP, 51.3% more than NORMAL)</p>
  </div>
  <div class="page">
    <p>A Snapshot of Comparison Th</p>
    <p>ro ug</p>
    <p>hp ut</p>
    <p>Po</p>
    <p>w er</p>
  </div>
  <div class="page">
    <p>Comparison with Other Control Methods</p>
    <p>PAT has the smallest overshoot and the best energy saving</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut</p>
    <p>Po w</p>
    <p>er</p>
  </div>
  <div class="page">
    <p>Conclusion  Minimizing power consumption of DBMS under a</p>
    <p>user-specified performance bound  Controller design on the system characteristics is the</p>
    <p>solution  Empirically study the relationship between energy</p>
    <p>and DBMS processing  PAT: a feedback control framework with system</p>
    <p>characteristics</p>
    <p>Thanks</p>
  </div>
  <div class="page">
    <p>Acknowledge  This research was supported by the US National Science</p>
    <p>Foundation (NSF) grants IIS-1117699, IIS-1156435, and CSR-1143607</p>
  </div>
  <div class="page">
    <p>Related Work  Control in DBMS  Feedback Control in DBMS [Tu et al. VLDB 2007]</p>
    <p>Other Applications  Power Shaving  Power Over-commitment  Proportional Energy Consumption</p>
  </div>
  <div class="page">
    <p>A Snapshot of PAT in Ideal Setup Th</p>
    <p>ro ug</p>
    <p>hp ut</p>
    <p>Po</p>
    <p>w er</p>
  </div>
  <div class="page">
    <p>A Snapshot of PAT in Competing Setup Th</p>
    <p>ro ug</p>
    <p>hp ut</p>
    <p>Po</p>
    <p>w er</p>
  </div>
  <div class="page">
    <p>Backup: Errors From Modeling</p>
    <p>FWC could produce almost 10% error in the system, The designed maximum overshoot is 40% in PAT.</p>
  </div>
  <div class="page">
    <p>Backup Characterization Study  Energy and DBMS</p>
    <p>DBMS throughput and CPU frequency can be approximated as a linear model</p>
  </div>
  <div class="page">
    <p>Backup: Rule-based Workload Classifier</p>
  </div>
  <div class="page">
    <p>Outline  Problem Overview &amp; Motivation  Characterization Study: DBMS and Energy  Overall Framework  Fuzzy Workload Classifier  The Controller Design  Evaluation  Conclusion</p>
  </div>
  <div class="page">
    <p>Fuzzy Workload Classifier  One fuzzy rule base  If [diCPU , diI/O]  cluster Xj , then [uiCPU , uiI/O] = Mj [diCPU , diI/O] + Nj</p>
    <p>The procedure of workload classification  Evaluation: [diCPU , diI/O] -&gt; [uiCPU , uiI/O] per Xj</p>
    <p>Implication calculation: (pj)pj</p>
    <p>(pj) -&gt; tij of Xj</p>
    <p>Aggregation result: [tij uiCPU ,  tij uiI/O]T</p>
  </div>
</Presentation>
