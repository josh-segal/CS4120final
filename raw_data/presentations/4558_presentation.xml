<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>DIMPLE: DynamIc Membership ProtocoL for Epidemic protocols</p>
    <p>Jin Sun, Paul Weber, Byung Choi, Roger Kieckhafer bkchoi@mtu.edu</p>
    <p>Michigan Technological University</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Epidemic Protocols: Reliable Broadcasting</p>
    <p>K. Birman, M. Hayden, O. Ozkasap, Z. Xiao, M. Budiu, Y. Minsky, Bimodal Multicast, ACM Transactions on Computer Systems, 17(2), 41-88, May 1999.</p>
  </div>
  <div class="page">
    <p>Background</p>
    <p>Two fundamental assumptions of epidemic protocols  Random selection of next forwarders</p>
    <p>Randomly at uniform from the entire membership</p>
    <p>Nodes know the network size (N)  Two approaches</p>
    <p>Centralized  Distributed</p>
    <p>Entire membership at each and every node  Different partial membership at different nodes</p>
  </div>
  <div class="page">
    <p>Epidemic protocols on P2P systems?</p>
    <p>P2P systems can be very large in size, and very dynamic in membership</p>
    <p>Difficult to maintain a copy of the entire membership at each node  Inconsistency  Overhead</p>
    <p>Partial membership at each node?</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>How to maintain partial membership at each node chosen randomly at uniform from the entire membership?</p>
    <p>How to provide different partial membership at different cycles?</p>
    <p>How to handle dangling pointers caused by churn?</p>
  </div>
  <div class="page">
    <p>General Approach</p>
    <p>Exchange part of partial membership with part of another partial membership such that, from the nodes perspective, the partial membership is always a random selection of the entire membership at uniform</p>
  </div>
  <div class="page">
    <p>Shuffle!</p>
    <p>A well known randomization method in gambling</p>
    <p>A practical and easy way of randomization</p>
    <p>Is it really random at uniform?  What should happen if not perfectly random?</p>
    <p>Network partitioning!</p>
  </div>
  <div class="page">
    <p>Resilience of Shuffle</p>
    <p>Probability of network partitioning is diminishingly small, practically zero!</p>
    <p>With reasonable sizes of  Partial membership (O(log(N))  Shuffle length log(N)  Regardless of frequencies</p>
    <p>A. Allavena, A. Demers, and J.E. Hopcroft. Correctness of a gossip based membership protocol , 24th ACM Symposium on Principles of Distributed Computing (PODC 05).</p>
  </div>
  <div class="page">
    <p>Shuffle Properties</p>
    <p>Convergence  Global randomness, comparable to random</p>
    <p>networks  Average shortest path length  Clustering coefficient  Regardless of frequencies</p>
    <p>S. Voulgaris, D. Gavidia, and M. van Steen. Cyclon: Inexpensive membership management for unstructured p2p overlays. Journal of Network and Systems Management, 13(2):197217, June 2005.</p>
  </div>
  <div class="page">
    <p>Shuffle with Churn?</p>
    <p>Not addressed in the previous work, huh?  Network partition and churn are different!  Measurement study on P2P systems shows:</p>
    <p>Average stay time under 10 minutes!</p>
    <p>S. Rhea, D. Geels, T. Roscoe, and J. Kubiatowicz, Handling Churn in a DHT, USENIX Technical Conference, 2004.</p>
  </div>
  <div class="page">
    <p>Shuffle with Churn?</p>
    <p>Found not effective  Produces a large portion of dangling pointers  Would result in poor quality broadcasting  Major reasons:</p>
    <p>Time delay to detect dangling pointers  Time delay in join procedures</p>
  </div>
  <div class="page">
    <p>DIMPLE Improves Shuffle</p>
    <p>Reinforcement  At the end of each shuffle</p>
    <p>Quick Join  Use a list of visited nodes</p>
  </div>
  <div class="page">
    <p>DIMPLE-Shuffle works with churn!</p>
  </div>
  <div class="page">
    <p>DIMPLE-Shuffle works with churn!</p>
  </div>
  <div class="page">
    <p>DIMPLE-Shuffle works with churn!</p>
  </div>
  <div class="page">
    <p>DIMPLE-Shuffle works with churn!</p>
  </div>
  <div class="page">
    <p>DIMPLE: detects dangling pointers fast</p>
  </div>
  <div class="page">
    <p>In-Degree Distribution</p>
  </div>
  <div class="page">
    <p>Out-Degree Distribution</p>
  </div>
  <div class="page">
    <p>DIMPLE: better quality of in-degrees</p>
  </div>
  <div class="page">
    <p>DIMPLE: better quality of out-degrees</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Contributions:  DIMPLE makes shuffle to work with churn  A good practical solution to dynamic membership</p>
    <p>service (for epidemic protocols)</p>
    <p>Future work:  DIMPLE algorithms are improvable  Network size (N) estimation utilizing shuffle is next!</p>
    <p>Self-organizing epidemic protocols</p>
  </div>
</Presentation>
