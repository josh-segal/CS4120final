<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Super solutions for combinatorial auctions</p>
    <p>Alan Holland &amp; Barry OSullivan</p>
    <p>{a.holland, b.osullivan}@cs.ucc.ie</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>Combinatorial Auctions (CAs)  Motivation  Auction scenarios  Implications of unreliable bidders</p>
    <p>Super solutions (SS)  Solution robustness  simple example</p>
    <p>SS &amp; CAs  SS for different types of auctions  Experimental Results  Extensions to framework</p>
  </div>
  <div class="page">
    <p>Combinatorial Auctions</p>
    <p>Motivation  Multiple distinguishable items  Bidders have preferences over combinations of</p>
    <p>items  Facilitates expression of complementarities /</p>
    <p>substitutabilities</p>
    <p>Improves economic efficiency  Removes exposure problem from multiple single-item</p>
    <p>auctions</p>
  </div>
  <div class="page">
    <p>Combinatorial Auction Example</p>
    <p>Two parcels of land for sale  Three bidders valuations</p>
    <p>A B</p>
    <p>Bidder A B AB</p>
  </div>
  <div class="page">
    <p>Exposure Problem</p>
    <p>Single-item auctions  Consider previous example</p>
    <p>Two items (A,B) are sold in two separate auctions  Bidder 3 values the pair AB @ $2m  But either X or Y on its own is valueless ($0)  If she bids $1m for each and wins only one item she has</p>
    <p>lost $1m  This induces depressed bidding</p>
    <p>Solution: Allow bids on XY  combinatorial bids</p>
  </div>
  <div class="page">
    <p>Combinatorial Auctions</p>
    <p>Bids on all combinations of items are allowed  Forward Auction  selling items</p>
    <p>Maximize revenue  Weighted Set Packing problem</p>
    <p>Reverse Auction  buying items  Minimize cost  Set Covering Problem  No Free Disposal =&gt; Set Partitioning Problem</p>
    <p>Gaining in popularity  FCC spectrum auctions  Mars, Home-Base, London Transport Authority</p>
  </div>
  <div class="page">
    <p>Complexity</p>
    <p>Potentially 2#items bids to consider  Winner Determination</p>
    <p>NP-Complete [Rothkopf 98]  Inapproximable  State of the art algorithms work well in practice</p>
    <p>CABOB - 1,000s of bids for 100s of items in seconds [Sandholm 03]</p>
  </div>
  <div class="page">
    <p>Full commitment contracts</p>
    <p>Auction solutions assume binding contracts (full commitment)</p>
    <p>a contract might be profitable to an agent when viewed ex ante, it need not be profitable when viewed ex post [Sandholm&amp;Lesser02]</p>
    <p>The converse is also true  De-committing</p>
    <p>Bidders receive better offers/renege on unprofitable agreements/go bankrupt/disqualified</p>
    <p>Levelled-commitment contracts offer de-commitment penalties</p>
  </div>
  <div class="page">
    <p>De-commitment in auctions</p>
    <p>Single item auction  A winning bid is withdrawn =&gt; give the item to 2nd highest</p>
    <p>bidder  Combinatorial auction</p>
    <p>A winning bid is withdrawn =&gt; next best solution may require changing all winning bids</p>
    <p>Highly undesirable in many circumstances (e.g. SCM)  Auctioneer may be left with a bundle of items that are</p>
    <p>valueless (Auctioneers exposure problem)  Prevention is better than cure</p>
    <p>Robust solutions =&gt; a small break can be repaired with a small number of changes</p>
  </div>
  <div class="page">
    <p>CA solution robustness</p>
    <p>Solution robustness  Unreliable bidders are present  Solution stability paramount  E.g. Supply chain formation</p>
    <p>Bid withdrawal/disqualification  Next best solution may require changing all</p>
    <p>winning bids (infeasible in many situations)  Potentially severe implications for revenue</p>
  </div>
  <div class="page">
    <p>(a,b)-super solutions [Hebrard,Hnich&amp;Walsh 04]</p>
    <p>An (a,b)-super solution  Guarantees that when a variables are broken in a</p>
    <p>solution, only b other changes are required to find a new solution</p>
    <p>Thus providing solution robustness</p>
    <p>Example  Solutions to a CSP are &lt;0,1&gt;&lt;1,0&gt;&lt;1,1&gt;  &lt;1,1&gt; is a (1,0)-super solution  &lt;0,1&gt; &amp; &lt;1,0&gt; are (1,1)-super solutions</p>
  </div>
  <div class="page">
    <p>(1,b)-super solution algorithm</p>
    <p>MAC-based repair algorithm [Hebrard et al ECAI04]  Value assigned to the kth variable  AC &amp; Repairability check on the first k-1 variables  If more than b changes are required =&gt; unrepairable</p>
    <p>assignment</p>
    <p>Our approach  Solve the problem optimally using any ILP solver</p>
    <p>(CPLEX etc) &amp; optimal revenue = Ropt</p>
    <p>Add a sum constraint s.t. revenue &gt; Ropt X k%</p>
  </div>
  <div class="page">
    <p>(1,b)-super solutions for CAs</p>
    <p>Zero values may be considered robust  Withdrawal of losing bids is immaterial (when a=1)</p>
    <p>Example CA  valid solutions  &lt;1,1,0,0&gt;: (1,1)-super solution: $1.2m  &lt;0,0,1,0&gt;: (1,0)-super solution: $1.15m  &lt;0,0,0,1&gt;: (1,0)-super solution: $1.1m</p>
  </div>
  <div class="page">
    <p>(1,b)-super solutions for CAs</p>
    <p>Zero values may be considered robust  Withdrawal of losing bids is immaterial (when a=1)</p>
    <p>Example CA  Valid solutions  &lt;1,1,0,0&gt;: (1,1)-super solution: $1.2m  &lt;0,0,1,0&gt;: (1,0)-super solution: $1.15m  &lt;0,0,0,1&gt;: (1,0)-super solution: $1.1m</p>
    <p>2nd &amp; 3rd solutions are more robust  Less revenue however  2nd solution dominates 3rd  Trade-off ensues between 1st &amp; 2nd solution</p>
  </div>
  <div class="page">
    <p>Experiments</p>
    <p>Aim  Examine trade-off between revenue &amp; robustness  Different economically motivated scenarios</p>
    <p>Auctions  Generated by bid simulation tool (CATS) [Leyton</p>
    <p>Brown et al]</p>
    <p>Scenarios exhibit differing complementarity effects</p>
  </div>
  <div class="page">
    <p>Bid distributions</p>
    <p>arbitrary  arbitrary complementarity between items for different bidders,</p>
    <p>(Simulates electronic component auctions)</p>
    <p>regions  complementarity between items in 2-D space (e.g. spectrum</p>
    <p>auctions, property)</p>
    <p>scheduling  Auctions for airport landing/take-off slots</p>
  </div>
  <div class="page">
    <p>Bid distributions</p>
    <p>arbitrary  Random synergies =&gt; more varied series of items in bids</p>
    <p>=&gt; more overlap constraints  More pruning =&gt; lower search times</p>
    <p>regions  More mutually exclusive bids  Less pruning =&gt; higher search times</p>
    <p>scheduling  Bids contain few items =&gt; less constraints  More pruning =&gt; longer search times</p>
  </div>
  <div class="page">
    <p>Constraint Satisfaction</p>
    <p>Is a super solution possible?  (given b &amp; min revenue)   Sample auctions - 20 items &amp; 100 bids (v. small)</p>
    <p>Robust solutions   arbitrary: super solns unlikely - unless min revenue &lt;</p>
    <p>unless tolerable revenue ~ 85% of optimum  scheduling: super solns likely - unless min revenue &gt;</p>
    <p>(See paper for full set of results)</p>
  </div>
  <div class="page">
    <p>Constraint Satisfaction</p>
    <p>Running times  Distributions least likely to have a super soln are quickest to</p>
    <p>solve  Dense solution space implies deeper tree search</p>
  </div>
  <div class="page">
    <p>Constraint Optimization</p>
    <p>If no (1,b)-super solution  Optimize robustness &amp; maintain revenue</p>
    <p>constraint  Minimize number of variables that do not have a</p>
    <p>repair</p>
    <p>Else if many (1,b)-super solutions  Find super soln with optimal revenue</p>
  </div>
  <div class="page">
    <p>Constraint Optimization</p>
    <p>Optimizing Robustness  BnB search  Find a solution with the minimum</p>
    <p>number of irreparable bids</p>
    <p>Results  For sched. distribution, no repairs</p>
    <p>are allowed (b=0), min revenue for a solution is 86% of opt, on average 2.2 bids are irreparable in the most robust solution</p>
    <p>Scheduling distribution most difficult to find repairs for all bids (more bids in solution)</p>
  </div>
  <div class="page">
    <p>Constraint Optimization</p>
    <p>Optimizing Revenue  Many super solutions  find revenue maximizing SS</p>
    <p>Guarantees a robust solution with maximum revenue</p>
    <p>Optimal/Near optimal solutions achievable for scheduling  Computationally expensive (esp. scheduling)  Pure CP approach needs to be augmented with hybrid</p>
    <p>techniques to improve performance  Continuous (LP) relaxation provides tighter bounds</p>
  </div>
  <div class="page">
    <p>Proposed Extensions to Super Solutions</p>
    <p>More flexibility required  True cost of repair may not just be measured by number of</p>
    <p>variables changed  E.g. Changing a winning bid to a losing one is more costly than</p>
    <p>vice versa  Introduce a metric for the cost of repair</p>
    <p>Break-dependant cost of repair  E.g. If an agent withdraws a bid, changing his other winning</p>
    <p>bids may be considered a cheap operation  Variable values may have degrees of brittleness</p>
    <p>E.g. Various bidders may have differing probabilities of failure</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Combinatorial Auctions  Improve economic efficiency  NP-complete (although very efficient tailored algorithms</p>
    <p>exist in practise)  Application domains are expanding</p>
    <p>Some applications require robustness  Potential exposure problem for the auctioneer</p>
    <p>Super solutions for CAs  Framework for establishing robust solutions  CAs motivate useful extensions to the framework</p>
  </div>
</Presentation>
