<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Protego: Cloud-Scale Multitenant IPsec Gateway</p>
    <p>Jeongseok Son, Yongqiang Xiong, Kun Tan, Paul Wang, Ze Gan, Sue Moon</p>
  </div>
  <div class="page">
    <p>Enterprises are Moving to the Cloud</p>
    <p>$ 58B  $ 202B Public cloud services revenue</p>
    <p>from 2009 to 2016</p>
    <p>have announced cloud adoption</p>
  </div>
  <div class="page">
    <p>Connect ?</p>
    <p>Cloud Services Provide Virtual Networks for Enterprises</p>
    <p>VM VM</p>
    <p>VM VM</p>
    <p>Virtual Network</p>
    <p>Public Cloud On-premises Network</p>
  </div>
  <div class="page">
    <p>VPN tunnel</p>
    <p>VPN Tunnels Connect Cloud and On-premises Data Center</p>
    <p>VM VM</p>
    <p>VM VM</p>
    <p>Virtual Network</p>
    <p>Public Cloud On-premises Network</p>
    <p>IPsec GW</p>
  </div>
  <div class="page">
    <p>Tunnel</p>
    <p>Tunnel</p>
    <p>Tunnel</p>
    <p>Current IPsec GW Deployment: Assign VM to Each Virtual Network</p>
    <p>Advantages:</p>
    <p>No additional HW installation</p>
    <p>Performance isolation</p>
    <p>Dynamic scaling</p>
    <p>Virtual Network</p>
    <p>Virtual Network</p>
    <p>Virtual Network</p>
    <p>IPsec VM</p>
    <p>IPsec VM</p>
    <p>IPsec VM</p>
    <p>Public Cloud</p>
    <p>Internet</p>
  </div>
  <div class="page">
    <p>Problem: IPsec GW VMs Are Under-utilized</p>
    <p>In 90% of DCs,</p>
    <p>Daily peak IPsec traffic &lt; One GW capacity</p>
    <p>If GW is shared,</p>
    <p>Figure: CDF of the peak IPsec traffic of data centers</p>
  </div>
  <div class="page">
    <p>How to serve multiple tunnels with shared resources for elasticity?</p>
  </div>
  <div class="page">
    <p>IPsec Tunnel</p>
    <p>IPsec Tunnel</p>
    <p>IPsec Tunnel</p>
    <p>Current IPsec GW Deployment</p>
    <p>Virtual Network</p>
    <p>Virtual Network</p>
    <p>Virtual Network</p>
    <p>IPsec VM</p>
    <p>IPsec VM</p>
    <p>IPsec VM</p>
    <p>Public Cloud</p>
    <p>Internet</p>
  </div>
  <div class="page">
    <p>IPsec Tunnel</p>
    <p>IPsec Tunnel</p>
    <p>IPsec Tunnel</p>
    <p>Cloud-Scale Multitenant IPsec Gateway</p>
    <p>Virtual Network</p>
    <p>Virtual Network</p>
    <p>Virtual Network</p>
    <p>Public Cloud</p>
    <p>Internet</p>
    <p>VM VM</p>
    <p>VM</p>
    <p>VM</p>
    <p>VM</p>
    <p>IPsec GW</p>
  </div>
  <div class="page">
    <p>Seamless Migration of IPsec Tunnel is the Key to Elasticity</p>
    <p>To achieve elasticity</p>
    <p>When GWs are overloaded as the IPsec traffic increases</p>
    <p>Add more VMs and migrate some tunnels to new VMs</p>
    <p>When GWs are under-utilized as the IPsec traffic decreases</p>
    <p>Migrate tunnels from some VMs and return the idle VMs</p>
    <p>Quick migration scheme with minimal overhead is a key enabler of elasticity</p>
  </div>
  <div class="page">
    <p>Statefulness of IPsec Hinders Seamless Migration</p>
    <p>Strawman approach: Redirect IPsec packets to a different GW</p>
    <p>IPsec GW</p>
    <p>IPsec GW</p>
    <p>IPsec GW</p>
    <p>External VIP</p>
    <p>State</p>
    <p>Leads to tunnel destruction</p>
    <p>How to move or share</p>
    <p>state between gateways?</p>
  </div>
  <div class="page">
    <p>Core Ideas of Protego</p>
    <p>Separation of control and data planes</p>
    <p>Control Plane: Single control node</p>
    <p>Data Plane: Set of data nodes</p>
    <p>Make IPsec (nearly) stateless in the data plane</p>
    <p>Tunnel migration by IPsec rekeying</p>
    <p>Migrate tunnels without packet loss and buffering</p>
    <p>Elastic provisioning algorithm</p>
  </div>
  <div class="page">
    <p>Breakdown of IPsec Protocol</p>
    <p>Internet Key Exchange</p>
    <p>Setup Shared Attributes</p>
    <p>(Security Association)</p>
    <p>Carries control traffic</p>
    <p>Encapsulating Security</p>
    <p>Payload</p>
    <p>Encryption/Decryption</p>
    <p>Carries data traffic</p>
  </div>
  <div class="page">
    <p>Separation of Control and Data Plane</p>
    <p>ESP</p>
    <p>IKE</p>
    <p>ESP</p>
    <p>IKE</p>
    <p>ESP</p>
    <p>IKELoad Balancer</p>
    <p>ESP</p>
    <p>ESP</p>
    <p>ESP</p>
    <p>Load Balancer</p>
    <p>IKE IKE</p>
  </div>
  <div class="page">
    <p>Rationale Behind the Separation</p>
    <p>Infrequent IKE state update and tiny IKE traffic compared to ESP traffic</p>
    <p>Stored in a central control node</p>
    <p>Data nodes do not maintain IKE state</p>
    <p>Frequent ESP state changes (every packet sent/received) but quick re-initialization</p>
    <p>Reconstructed whenever necessary by rekeying</p>
    <p>Data nodes do not have to preserve ESP state</p>
    <p>Any data node can process any IPsec tunnel traffic</p>
  </div>
  <div class="page">
    <p>Protego Architecture Overview</p>
  </div>
  <div class="page">
    <p>Gateway Management Node</p>
  </div>
  <div class="page">
    <p>Gateway Management Node</p>
    <p>IKE packet processing  Negotiate a shared symmetric key for ESP</p>
    <p>Distribute the key to one of GPNs</p>
    <p>Save updated state to the standby GMN (High availability)</p>
    <p>Resource management  Adjust the number of GPNs by migrating tunnels</p>
    <p>Traffic steering  Insert forwarding rules to load balancers (GIN and GEN)</p>
  </div>
  <div class="page">
    <p>Gateway Ingress and Egress Node</p>
  </div>
  <div class="page">
    <p>Gateway Ingress and Egress Node</p>
    <p>Traffic forwarding  Rewrite the destination address to the address of a GPN</p>
    <p>Rate limiting  Enforce per-tunnel performance isolation</p>
    <p>GPN failure detection  Adaptive heartbeat by sampling and tagging</p>
  </div>
  <div class="page">
    <p>Gateway Processing Node</p>
  </div>
  <div class="page">
    <p>Gateway Processing Node</p>
    <p>ESP packet processing</p>
    <p>Encryption and decryption of ESP packets</p>
    <p>ESP processing is tricky to parallelize due to sequence number</p>
    <p>Designed lock-free ESP processor (Check out the paper)</p>
  </div>
  <div class="page">
    <p>Leverage Rekeying Process to Migrate IPsec Tunnels Seamlessly</p>
    <p>Original purpose of rekeying</p>
    <p>IPsec gateways use keys for a limited amount of time/data</p>
    <p>Quickly re-negotiates ESP SA in single RTT</p>
    <p>Leverage rekeying to quickly construct ESP state</p>
    <p>Create new ESP SA in the destination node</p>
    <p>Old ESP SA is alive until new ESP SA is used</p>
    <p>No packet loss and buffering during migration process</p>
  </div>
  <div class="page">
    <p>IPsec Tunnel Migration Process</p>
    <p>GIN</p>
    <p>GMN</p>
    <p>GPN</p>
    <p>GPN</p>
    <p>IKE:</p>
    <p>CREATE_CHILD_SA</p>
    <p>ESP</p>
  </div>
  <div class="page">
    <p>IPsec Tunnel Migration Process</p>
    <p>GIN</p>
    <p>GMN</p>
    <p>GPN</p>
    <p>GPN</p>
    <p>IKE:</p>
    <p>CREATE_CHILD_SA</p>
  </div>
  <div class="page">
    <p>IPsec Tunnel Migration Process</p>
    <p>GIN</p>
    <p>GMN</p>
    <p>GPN</p>
    <p>GPN</p>
    <p>Traffic steering 1. GMN sends the</p>
    <p>CREATE_CHILD_SA request</p>
  </div>
  <div class="page">
    <p>IPsec Tunnel Migration Process</p>
    <p>GIN</p>
    <p>GMN</p>
    <p>GPN</p>
    <p>GPN Outbound ESP</p>
  </div>
  <div class="page">
    <p>IPsec Tunnel Migration Process</p>
    <p>GIN</p>
    <p>GMN</p>
    <p>GPN</p>
    <p>GPN</p>
    <p>New ESP traffic</p>
  </div>
  <div class="page">
    <p>Elastic Resource Provisioning Algorithm</p>
    <p>Objectives  Minimize the resource usage</p>
    <p>Satisfying the throughput requirement of tenants</p>
    <p>Model: 1-D bin packing (CPU usage)  Item: IPsec tunnel</p>
    <p>Bin: GPN</p>
    <p>Consolidation &amp; Load Balancing  Periodically consolidate GPNs (Consolidation interval)</p>
    <p>Instantly mitigate hotspots by migrating tunnels</p>
  </div>
  <div class="page">
    <p>Implementation</p>
    <p>Gateway Ingress &amp; Egress Node  Extended Mux of Ananta load balancer (SIGCOMM 13)</p>
    <p>Packet filtering based on Windows NDIS Lightweight filter driver</p>
    <p>Gateway Management Node  Based on the IPsec service module of the Routing and Remote Access</p>
    <p>Service in Windows Server 2012 R2.</p>
    <p>Gateway Processing Node Refer to the paper for details</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Server specification  16-core Intel Xeon</p>
    <p>E5-2650 v2 at 2.6Ghz</p>
    <p>Mellanox Connect3 Pro 40Gbps</p>
    <p>Windows Server 2012 R2</p>
    <p>Hyper-V</p>
  </div>
  <div class="page">
    <p>Migration Does Not Degrade Throughput</p>
    <p>Rekeying:</p>
    <p>Key Distribution:</p>
  </div>
  <div class="page">
    <p>GPN Throughput Scales Linearly</p>
    <p>To achieve 10 Gbps,</p>
    <p>AES256-CBC/SHA1:</p>
    <p>AES256-CBC/SHA2:</p>
  </div>
  <div class="page">
    <p>Provisioning Simulation</p>
    <p>Measured the average throughput of IPsec gateways every minute in one data center for a day</p>
    <p>Collected the throughput trace of 170 tunnels and injected to our simulator, which replay the traffic trace</p>
    <p>Simulated our provisioning algorithm with different consolidation intervals</p>
  </div>
  <div class="page">
    <p>Protego Saves a Large Amount of Resources</p>
    <p>Consolidation Interval: 3 min  60 min</p>
    <p>Throughput Guarantee (99% of tunnels):</p>
    <p>Resource Saving: 81.72 %  88.00 %</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>IPsec gateway is an essential and common component for cloud providers to offer virtual network services</p>
    <p>Protego is a software IPsec Gateway that serves multiple IPsec tunnels using shared resources for better resource utilization</p>
    <p>Protego saves a significant amount of resources with the separation of control and data plane and seamless tunnel migration by rekeying</p>
  </div>
</Presentation>
