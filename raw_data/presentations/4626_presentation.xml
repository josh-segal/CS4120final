<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>LogSig: Generating System Events from Raw Textual Logs</p>
    <p>Liang Tang1, Tao Li1, Chang-Shing Perng2</p>
  </div>
  <div class="page">
    <p>Raw Textual System Logs</p>
    <p>Most system logs are textual logs  Describing the system internal operations,</p>
    <p>software configuration modifications, execution errors.</p>
    <p>Features of Textual System Logs  Textual and not fully structured.  Short message, but large vocabulary (including</p>
    <p>parameter terms/words)</p>
    <p>Hadoop logs generated by Log4J: 2011-01-26 13:02:28,335 INFO org.apache.hadoop.ipc. Server: IPC Server Responder: starting; 2011-01-27 09:24:17,057 INFO org.apache.hadoop.ipc. Server: IPC Server listener on 9000: starting; 2011-01-27 23:46:21,883 INFO org.apache.hadoop.ipc. Server: IPC Server handler 1 on 9000: starting;</p>
  </div>
  <div class="page">
    <p>Converting Raw Textual Logs to Events  Goal</p>
    <p>Separate logs by different event types.</p>
    <p>Extract message signature for each event type.</p>
    <p>[Thu Apr 01 00:07:31 2010] [error] [client 131.94.104.150] File does not exist: /opt/website/sites/users.cs.fiu.edu/data/favicon.ico</p>
    <p>[Thu Apr 01 03:47:47 2010] [crit] [client 61.135.249.68] (13)Permission denied: /home/public_html/ke/.htaccess pcfg_openfile: unable to check htaccess file, ensure it is readable</p>
    <p>[Thu Apr 01 01:41:18 2010] [error] [client 66.249.65.17] Premature end of script headers: preferences.pl</p>
    <p>[Thu Apr 01 01:44:43 2010] [error] [client 207.46.13.87] File does not exist: /home/bear-011/users/giri/public_html/teach/6936/F03</p>
    <p>File does not</p>
    <p>exist</p>
    <p>Permission denied</p>
    <p>Bad script</p>
    <p>Message signature</p>
  </div>
  <div class="page">
    <p>Why Need to Convert Raw Textual Logs to Events</p>
    <p>A data preprocessing  Lots of event mining, temporal mining algorithms</p>
    <p>can NOT handle textual messages.</p>
    <p>Building a universal log parser is difficult  Different systems have different log formats.  Many existing systems have NO manual for their</p>
    <p>log formats.  Analyzing source code is an approach to know log</p>
    <p>format, but many systems are not open-source or source code is too complex.</p>
  </div>
  <div class="page">
    <p>Message signature  Each log message is composed of a message signature and</p>
    <p>parameter terms.</p>
    <p>Message signature is hard coded in source code, it can be seen as a Signature for one type of log messages.</p>
    <p>It excludes the parameters. Parameters are not helpful to identify the event type.</p>
    <p>A good representation for an event type.</p>
    <p>Message Signature</p>
    <p>[Thu Apr 01 03:47:47 2010] [crit] [client 61.135.249.68] (13)Permission denied: /home/public_html/ke/.htaccess pcfg_openfile: unable to check htaccess file, ensure it is readable</p>
    <p>Message signature  Parameters</p>
  </div>
  <div class="page">
    <p>Match Score for Message Signature</p>
    <p>Definition:  Given a message X and a message signature S, the match</p>
    <p>score is the number of matched terms minus the number of unmatched terms.</p>
    <p>match(X,S) = |LCS(X,S)| - (|S| - |LCS(X,S)|) =2| LCS(X,S)|- |S|, LCS=Longest Common Subsequence.</p>
    <p>Example:  X=abcdef, S=axcey, match(X,S)=|ace| - |xy| = 1</p>
    <p>X a b c d e f</p>
    <p>S a x c e y</p>
  </div>
  <div class="page">
    <p>Problem Statement</p>
    <p>Given a set of log messages D and an integer k, find k message signature S = {S1,,Sk} and a k-partition C1,,Ck of D to maximize:</p>
  </div>
  <div class="page">
    <p>About Problem Statement</p>
    <p>Similar to k-means problem, but NOT really.  For example, X1=abcdef, X2=abghij, X3=xygphef.</p>
    <p>LCS(X1,X2)=2, LCS(X2,X3)=2, LCS(X1,X3)=2. But there is NO common subsequence among X1,X2 and X3. Are they the same event type?</p>
    <p>It is NP-Hard, even if k=1.  Multiple Longest Common Subsequence Problem can be</p>
    <p>reduced to our problem.</p>
  </div>
  <div class="page">
    <p>Approximated Problem</p>
    <p>Convert each log message into Term Pairs:</p>
    <p>Maximize</p>
    <p>Lemma: If F(C,D)  y, then</p>
    <p>R(Xj): the set of term pairs of log message Xj.</p>
  </div>
  <div class="page">
    <p>Local Search Algorithm</p>
    <p>Local search : iteratively changes each log messages assignment to improve the objective function.</p>
    <p>F(C,D) is not good to guide local search. Why?  F(C,D) is NOT smooth.  F(C,D) does not change for each single change.  Therefore, F(C,D) is easy to lead the local search</p>
    <p>into a local optimum.</p>
  </div>
  <div class="page">
    <p>Potential Function</p>
    <p>Potential for one message group  Given a message group C, the potential of C is defined as</p>
    <p>N(r,C) is the number messages in C that contain pair r. p(r,C)= N(r,C)/|C| is the portion of messages in C having r.</p>
    <p>Overall Potential  Sum of all message groups potentials.</p>
  </div>
  <div class="page">
    <p>Message Signature Construction</p>
    <p>Once the partition is known, the optimal message signature can be extract from frequent terms in each partition.</p>
    <p>Lemma : These terms of the optimal message signature at least appear one half of the messages in the message group.</p>
  </div>
  <div class="page">
    <p>Incorporating Domain Knowledge</p>
    <p>Use category of terms/phrases to replace</p>
    <p>Sensitive Terms/Phrases.  Define a set of sensitive terms/phrases, such as</p>
    <p>Error, Transfer, Failed</p>
    <p>Sensitive terms/phrases have higher probabilities to be included in Message Signature.</p>
  </div>
  <div class="page">
    <p>Experimental Log data</p>
    <p>Vocabulary sizes of Apache and ThunderBird are almost infinte, because lots of parameter terms.</p>
  </div>
  <div class="page">
    <p>Compared Algorithm</p>
    <p>IPLoM  Clustering log messages by some format features, such</p>
    <p>as the number of tokens.  StringMatch</p>
    <p>Clustering log message by the number of common token at each token position.</p>
    <p>VectorModel (In information retrieval)  Jaccard Index  StringKernel</p>
    <p>Convert each log message into a vector of term pairs.</p>
  </div>
  <div class="page">
    <p>Accuracy Results  No algorithm can always be the best. LogSig is generally the</p>
    <p>best one.</p>
    <p>IPLoM is good for special type of system log.</p>
  </div>
  <div class="page">
    <p>Message Signature Results</p>
  </div>
  <div class="page">
    <p>IPLoM is the most efficient algorithm, but its accuracy is not good.</p>
    <p>StringKernel, StringMatch and Jaccard are slow to converge, because of the curse of dimensionality (Large vocabulary size).</p>
    <p>Efficiency Results</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Converting Raw Textual Logs to Events  A preprocessing for event mining</p>
    <p>LogSig Algorithm  Traditional text mining algorithms do not work</p>
    <p>well for log messages.</p>
    <p>Extract Message Signatures and exclude parameter terms.</p>
    <p>Be able to handle various types of system logs.</p>
  </div>
  <div class="page">
    <p>Thanks!</p>
    <p>Any questions?</p>
  </div>
</Presentation>
