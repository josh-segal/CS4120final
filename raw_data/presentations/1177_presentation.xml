<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>SIMD-X: Programming and Processing of Graph Algorithms on GPUs</p>
    <p>Hang Liu H. Howie Huang</p>
    <p>University of Massachusetts Lowell George Washington University</p>
    <p>GPU</p>
    <p>June 21, 2019</p>
  </div>
  <div class="page">
    <p>Graphs are Everywhere</p>
    <p>!2</p>
  </div>
  <div class="page">
    <p>Graph Algorithms are Insightful</p>
    <p>!3</p>
    <p>Algorithm Functionality Graph</p>
    <p>Triangle completing Friend recommendation</p>
    <p>Shortest path Navigation</p>
    <p>PageRank Webpage searching</p>
    <p>Matrix factorization Product recommendation</p>
  </div>
  <div class="page">
    <p>Graph computation is NOT easy</p>
    <p>!4</p>
    <p>Algorithm Complexity Runtime</p>
    <p>Triangle completing |E| * Dmax2 20 mins</p>
    <p>Shortest path |E| + |V| ~ |V| * |E| 17 mins</p>
    <p>PageRank n * |E| 41 mins</p>
    <p>Matrix factorization n* L * |E| 2 hours</p>
    <p>* PowerGraph [OSDI 12] on Twitter dataset</p>
    <p>53M vertices  2B edges</p>
    <p>* V and E: vertex and edge count n: #iterations to converge L: #latent factors</p>
  </div>
  <div class="page">
    <p>GPU</p>
    <p>General Purpose GPUs (Tesla V100) Multiprocessor (SMX) 0</p>
    <p>Massive parallelism and high bandwidth  22.5/120 TFLOPS and 900 GB/s.</p>
    <p>5,120 cores, supporting ~millions of threads.</p>
    <p>L2 Cache</p>
    <p>Global Memory</p>
    <p>Register Files</p>
    <p>Shared Memory</p>
    <p>Core Core Core</p>
    <p>Core Core Core  Thread granularity  Warp: consecutive 32 threads, executed in SIMD.</p>
    <p>Lack of inter-SMX communication support.</p>
    <p>Memory access pattern  900 GB/s: consecutive threads access adjacent data.</p>
    <p>Random/stride access is ~10x slower.</p>
    <p>!5 [Ref]. NVIDIA TESLA V100 GPU ACCELERATOR. 2018.</p>
    <p>(0 Cycle)</p>
    <p>(10 Cycles)</p>
    <p>(70 Cycles)</p>
    <p>(400 Cycles)</p>
  </div>
  <div class="page">
    <p>Mapping Graph Computing on GPUs</p>
    <p>!6</p>
    <p>GPU</p>
    <p>Dense matrix</p>
    <p>GPU</p>
    <p>GPU: SIMD</p>
    <p>Graph: CompleX</p>
    <p>SIMD-X bridges the gap!</p>
    <p>Graph</p>
  </div>
  <div class="page">
    <p>SIMD-X Approaches</p>
    <p>SIMD-X  up to 10x faster than state-of-the-art Gunrock&quot; [PPoPP 16]  Data-parallel ACC programming abstraction</p>
    <p>Just-in-time task management</p>
    <p>Push-pull based kernel fusion</p>
    <p>!7</p>
  </div>
  <div class="page">
    <p>SIMD-X: Programming and Processing of Graph Algorithms on GPUs</p>
    <p>Hang Liu H. Howie Huang</p>
    <p>University of Massachusetts Lowell George Washington University</p>
    <p>GPU</p>
  </div>
</Presentation>
