<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>STRATUM: A Serverless Framework for the</p>
    <p>Lifecycle Management of Machine Learning-based</p>
    <p>Data Analytics Tasks</p>
    <p>v Anirban Bhattacharjee v Yogesh Barve</p>
    <p>v Shweta Khare</p>
    <p>v Shunxing Bao</p>
    <p>v Aniruddha Gokhale</p>
    <p>v Thomas Damiano</p>
    <p>2019 USENIX Conference on Operational Machine Learning  MAY 20, 2019</p>
    <p>Acknowledgments This work was supported in part by NSF US Ignite CNS 1531079, AFOSR DDDAS FA9550-18-1-0126 and AFRL/Lockheed Martin StreamlinedML program. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of NSF, AFOSR or AFRL.</p>
  </div>
  <div class="page">
    <p>Data Analytics Trends</p>
    <p>The world is changing and accelerating Internet of Things (IoT) applications, such as cognitive assistance, voice assistance, patient health monitoring, and connected vehicles are increasingly using the cloud and edge analytics.</p>
    <p>Smart IoT devices generates data in volume and velocity, which needs to be analyzed to get valuable insight.</p>
  </div>
  <div class="page">
    <p>Big Data Value Model 3</p>
  </div>
  <div class="page">
    <p>ML-based Predictive Analytics 4</p>
    <p>Trained Model Deployment</p>
    <p>Application</p>
    <p>Training Dataset Machine Learning Model Design</p>
    <p>Trained Model</p>
    <p>Training</p>
    <p>Prediction Result</p>
    <p>Prediction Request</p>
    <p>Golden Retriever</p>
    <p>Prediction</p>
    <p>Predictive analytics  It uses various statistical modelling and machine learning techniques to</p>
    <p>analyze past data and predict the future outcomes.</p>
  </div>
  <div class="page">
    <p>ML-based Predictive Analytics 5</p>
    <p>Predictive analytics  It uses various statistical modelling and machine learning techniques to</p>
    <p>analyze past data and predict the future outcomes.</p>
  </div>
  <div class="page">
    <p>Requirement  Automation of Machine Learning (ML) Model Development and Deployment</p>
    <p>Alleviate ML developers from writing the code from scratch  ML Library and Framework Agnostic</p>
  </div>
  <div class="page">
    <p>ML-based Predictive Analytics 7</p>
    <p>Predictive analytics  It uses various statistical modelling and machine learning techniques to</p>
    <p>analyze past data and predict the future outcomes.</p>
    <p>Challenge 1: Flexible ML Pipeline Development Challenge 2 :ML Model Evaluation</p>
  </div>
  <div class="page">
    <p>Challenges[1/3] 8</p>
    <p>Flexible ML Pipeline Development o A diverse set of ML algorithms</p>
    <p>classification (logistic regression, naive Bayes), regression, decision trees, random forests, and gradient-boosted trees, recommendation (ALS), clustering (Kmeans, GMMs), and many others.</p>
    <p>o A diverse set of different ML libraries and frameworks   Scikit-learn, Spark MLlib, TensorFlow etc.</p>
    <p>o ML pipeline capabilities needs to be captured, and abstracted in the metamodel.  Attributes of ML algorithms, data</p>
    <p>preprocessing strategies, evaluation methods etc.</p>
  </div>
  <div class="page">
    <p>Challenges[2/3] 9</p>
    <p>ML Model Evaluation o After training the ML models with</p>
    <p>the diverse set of ML algorithms, the best model for the dataset needs to selected. o save it for prediction jobs.</p>
    <p>o The model can be evaluated based on different scoring methods such accuracy, f1 score, precision, r2 score, mean square error which is captured in metamodel.</p>
    <p>o To speedup the training process, the ML models with different algorithms can be distributed.</p>
    <p>ML Trained Model with all the software dependencies needs to be encapsulated in a container on the specific hardware.</p>
  </div>
  <div class="page">
    <p>ML-based Predictive Analytics 10</p>
    <p>Predictive analytics  It uses various statistical modelling and machine learning techniques to</p>
    <p>analyze past data and predict the future outcomes.</p>
    <p>Challenge 3: Auto-completion for ML Pipeline Deployment during Development and Production Phase</p>
  </div>
  <div class="page">
    <p>Challenges[3/3] 11</p>
    <p>Auto-completion for ML Pipeline Deployment</p>
  </div>
  <div class="page">
    <p>Challenges[3/3] 12</p>
    <p>Auto-completion for ML Pipeline Deployment</p>
    <p>How to deploy and maintain the application components with ease to increase productivity and usability while reducing the time-to-market?</p>
    <p>Service Providers Concerns</p>
  </div>
  <div class="page">
    <p>STRATUM: ML Pipeline Automation 13</p>
    <p>FRAMEWORK DESIGN EVALUATION RESULTS</p>
  </div>
  <div class="page">
    <p>STRATUM: ML Pipeline Automation 14</p>
    <p>FRAMEWORK DESIGN EVALUATION RESULTS</p>
  </div>
  <div class="page">
    <p>ML Model Evaluation 16</p>
    <p>Sample Machine Learning Pipeline</p>
    <p>Sample generative capabilities of Stratum</p>
    <p>The framework provide the GUI for ML pipeline construction, model evaluation, and hyperparameter tuning capabilities, which forms the basis for continuous evaluation.</p>
    <p>We also integrated Jupyter Notebook (notebookbased environment) to provide data-scientists the ability to train their models interactively.</p>
    <p>The ML execution pipeline needs to be bind with a specific library or framework such as Scikit-learn or TensorFlow.</p>
  </div>
  <div class="page">
    <p>DSML for STRATUM Deployment Framework 17</p>
    <p>Abstraction of Model: Deployers provision by selecting only business-relevant components.</p>
    <p>Configurator: Transforms abstract service components to Ansible-specific automation tasks using DSML.</p>
    <p>Enactor: Generates IAC by integrating automation code, cloud-specs &amp; inter-component connection types.</p>
    <p>Knowledge Base: Software dependencies for service component types are stored in RDBMS table.</p>
  </div>
  <div class="page">
    <p>STRATUM: ML Pipeline Automation 18</p>
    <p>FRAMEWORK DESIGN EVALUATION RESULTS</p>
  </div>
  <div class="page">
    <p>Usability of STRATUM Framework</p>
    <p>Random Forest</p>
    <p>Regression</p>
    <p>Principal Component Regression</p>
    <p>Input DataPreprocessing</p>
    <p>Ridge Regression</p>
    <p>Evaluate Model</p>
    <p>Best Model</p>
    <p>Linear Regression</p>
    <p>Support Vector</p>
    <p>Regression</p>
    <p>The ML model can be developed by dragging and dropping the build blocks (from box 12).</p>
    <p>All the attributes of the selected ML algorithms such as max_depth, criteria need to be specified by the user (box 3).</p>
    <p>The Erudite model transformer can distribute different jobs with different ML techniques over a cluster of connected machines.</p>
    <p>It aids the developer to select the best model or ensemble of models based on the users choice of evaluation methods.Flexible ML Pipeline Development and Model Evaluation</p>
  </div>
  <div class="page">
    <p>Performance Monitoring 20</p>
    <p>a</p>
    <p>b</p>
    <p>c</p>
    <p>Performance Monitoring of the prediction services (a)The execution latency of InceptionResnetV2 and Xception model on different ML containers with variable configurations, (b) Host CPU utilization of the ML containers (c) Host Memory utilization of ML containers (in MB).</p>
    <p>Sample Deep Learning Training on GPU Machine</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>We presented a model-driven engineering and generative programming approach for automated development of ML pipeline.</p>
    <p>We integrated a monitoring framework to analyze the performance of ML pipeline during training and prediction phase.</p>
    <p>We proposed a ML pipeline deployment methodology across cloud-fog-edge spectrum.</p>
    <p>https://doc-vu.github.io/Stratum/</p>
  </div>
</Presentation>
