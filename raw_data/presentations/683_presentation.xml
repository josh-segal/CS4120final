<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>CiteSeerx: A Cloud Perspective</p>
    <p>Pradeep Teregowda, Bhuvan Urgaonkar, C. Lee Giles Pennsylvania State University</p>
  </div>
  <div class="page">
    <p>Problem Definition</p>
    <p>Question: How to effectively move a digital library, CiteSeerx, into the cloud</p>
    <p>Which sections, components, or subset of CiteSeerx could be most cost effective to move?</p>
    <p>Our contribution  analysis from an economic perspective.</p>
    <p>Solve by decomposing the application across  Components  Content  Peak load hosting</p>
  </div>
  <div class="page">
    <p>SeerSuite - CiteSeerx</p>
    <p>SeerSuite  Framework for digital libraries  Flexible, Scalable, Robust, Portable, state of the art machine</p>
    <p>learning extractors, open source  use.</p>
    <p>CiteSeerx</p>
    <p>Instance/Application of SeerSuite.  Collection of  &gt; 1.6 million documents  &gt; 30 million citations  Approximately 2 million hits per day</p>
  </div>
  <div class="page">
    <p>SeerSuite Architecture</p>
    <p>Web Application  Focused Crawler  Document</p>
    <p>Conversion and Extraction</p>
    <p>Document Ingestion  Data Storage  Maintenance</p>
    <p>Services</p>
    <p>Federated Services</p>
  </div>
  <div class="page">
    <p>Hosting models</p>
    <p>Component hosting  SeerSuite is modular by design and architecture, host</p>
    <p>individual components across available infrastructure.</p>
    <p>Content hosting  CiteSeerx provides access to document metadata,</p>
    <p>copies and application content</p>
    <p>Host parts or complete set.  Peak load loading  Support the application during peak loads  Support growth of traffic.</p>
  </div>
  <div class="page">
    <p>Component Hosting</p>
    <p>SeerSuite/CiteSeerx is modular by design, composed of services which can be hosted in the cloud.</p>
    <p>Expense of hosting the whole of CiteSeerx is prohibitive.</p>
    <p>Solution: Host a component or service i.e.,  Component/service code  Data on which the component acts  Interfaces, etc. associated with the component  Goal: Identify optimal subset/components.</p>
  </div>
  <div class="page">
    <p>Component Hosting - Costs</p>
    <p>Least expensive option - host the index for cases.  Most expensive - host web services.</p>
    <p>Component Amazon EC2 Google App Engine</p>
    <p>Initial Monthly Costs</p>
    <p>Initial Monthly Costs</p>
    <p>Web Services 0 1448.18 0 942.53</p>
    <p>Repository 0 1011.88 163.8 593.21</p>
    <p>Database 0 858.89 12 348.05</p>
    <p>Index 0 527.08 3.1 83.48</p>
    <p>Extraction 0 499.02 0 90.6</p>
    <p>Crawler 0 513.4 0 105</p>
  </div>
  <div class="page">
    <p>Component Hosting  Lessons Learned</p>
    <p>Hosting components is reasonable  Having a service oriented architecture helps</p>
    <p>Amazon EC2  Computation costs dominate.</p>
    <p>Google App Engine  Refactoring costs ?</p>
    <p>Refactoring required not just for component, but other services.  Storage and transfer costs maybe optimized  A study of data transfer in the application gives insights to costs.</p>
    <p>Approach suitable for meeting fixed budgets  How many components of an application can be hosted for a fixed budget.</p>
  </div>
  <div class="page">
    <p>Content Hosting</p>
    <p>Approach: Identify specific content  Static Web Application content  Javascript  Stylesheets  Images/Graphs.  Repository content  PDF files  Current Size: 1 terabyte</p>
    <p>Database content  Partition database  Current size: 120 gigabytes</p>
  </div>
  <div class="page">
    <p>Analysis of Content Hosting</p>
    <p>Examining the traffic (requests) at peak loads.  Requests for stylesheets, images, javascript account</p>
    <p>for most of the requests.</p>
    <p>The size of these files is 2.2 MB  Since these files are embedded in almost every web page, bandwidth consumed 390.3 GB.</p>
    <p>Costs &lt; 142 dollars.  Simpler to deploy  Move files to the cloud, update references to them in</p>
    <p>the presentation layer.</p>
  </div>
  <div class="page">
    <p>Content Hosting  Lessons Learned</p>
    <p>Hosting specific content relevant to peak load scenarios</p>
    <p>Easy to do  minimal refactoring required, affects a minimal set of components (presentation layer).</p>
    <p>More complex scenarios need to be examined  Hosting papers from the repository  Hosting shards of the index  Database</p>
  </div>
  <div class="page">
    <p>Peak Load Hosting  Part of the load can be handled by an instance hosted in the cloud</p>
    <p>Approach  Look at various percentiles of the load (90%)  Consider utilizing the cloud instance only at loads</p>
    <p>exceeding these percentiles.</p>
  </div>
  <div class="page">
    <p>Peak Load Hosting - Costs</p>
    <p>CPU and Data Transfer costs dominate.</p>
    <p>Costs Quantity Amazon Google</p>
    <p>Initial Setup Data In 1820.4 GB 0 182</p>
    <p>Monthy Stored 1820.4 GB 182.4 273.06</p>
    <p>Data In 14.78 GB 0 1.48</p>
    <p>Data Out 298.7 GB 44.8 35.84</p>
    <p>Transaction 368 TPS 9.27 0</p>
    <p>CPU 70 HRS 285.6 7</p>
    <p>Total (Montly) 521.7 317.38</p>
  </div>
  <div class="page">
    <p>Peak Load  Lessons Learned</p>
    <p>Hosting only during peak load conditions is economically feasible.</p>
    <p>Growth potential  Can be used to handle growth in traffic, instead of</p>
    <p>procuring new hardware.</p>
    <p>Hosting a specific component under stress; such as a database  In such a case it will cost 385 dollars to host the database in</p>
    <p>Amazon EC2.</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>SeerSuite/CiteSeerx and different approaches were proposed for hosting CiteSeerx .</p>
    <p>Investigated cost of hosting for  Component  Economically reasonable  Refactoring costs</p>
    <p>Content  Simplest approach  More complex scenarios require deeper study</p>
    <p>Peak load  Very reasonable  Support for growth and scalability.</p>
  </div>
  <div class="page">
    <p>Future Work</p>
    <p>Cost of refactoring  particularly for Google App Engine.</p>
    <p>Cost comparisons for other cloud offerings  Azure, Eucalyptus.</p>
    <p>Privacy and user issues  myCiteSeer and private clouds.</p>
    <p>Technical issues with cross hosting  load balancing, latency needed to be addressed.</p>
    <p>Virtualization in SeerSuite, components built with cloud hosting in mind (Federated Services).</p>
  </div>
  <div class="page">
    <p>Q &amp; A</p>
  </div>
  <div class="page">
    <p>Appendix</p>
  </div>
  <div class="page">
    <p>Assumptions</p>
    <p>Instance sizes are larger then expected load (15% average usage for current infrastructure).</p>
    <p>Instances include libraries and or allow these libraries to be included.</p>
    <p>Maintenance traffic is not accounted (&lt; %1).</p>
    <p>Effort required to maintain  extra personnel costs are not included (Assumed to be the same as existing).</p>
    <p>Nave clustering and load balancing.</p>
  </div>
  <div class="page">
    <p>DB Amazo n</p>
    <p>Google Initial REP Amazo n</p>
    <p>Google</p>
    <p>Stored 120 12 18 12 Stored 1638.4 163.84 245.76 163.84 Data In 0 0 0 Data In 30 0 3</p>
    <p>Data Out</p>
    <p>Transa ctions</p>
    <p>CPU 489.6 72 CPU 489.6 72 858.89 348.05 1011.8</p>
    <p>INDEX Amazo n</p>
    <p>Google WS Amazo n</p>
    <p>Google</p>
    <p>Stored 32 3.2 4.8 3.2 Stored 30 3 4.5 3 Data In 2 0 0.2 Data In 4253.9 0 425.39</p>
    <p>Data Out</p>
    <p>Transa ctions</p>
    <p>CPU 489.6 72 CPU 489.6 72 527.08 83.48 1448.1</p>
    <p>EX Amazo n</p>
    <p>Google CR Amazo n</p>
    <p>Google</p>
    <p>Stored 0 0 0 0 Stored 0 0 0 0 Data In 150 0 15 Data In 150 0 15</p>
    <p>Data Out</p>
    <p>Transa ctions</p>
    <p>CPU 489.6 72 CPU 489.6 72 499.02 90.6 513.40 105</p>
  </div>
  <div class="page">
    <p>SeerSuite Architecture  Web Application</p>
    <p>User interaction, supports various interfaces.  Built using the java Spring framework.</p>
    <p>Focused Crawler  Acquire documents from the web specific to a</p>
    <p>particular topic</p>
    <p>Document Conversion and Extraction  Process acquired documents to enable ingestion</p>
    <p>into the collection.</p>
    <p>Document Ingestion  Add processed documents to the collection.</p>
  </div>
  <div class="page">
    <p>SeerSuite Architecture</p>
    <p>Data Storage  Store acquired documents  persistence, faster</p>
    <p>access and use.</p>
    <p>Maintenance Services  Processes, which help maintain freshness</p>
    <p>statistics, index, graphs.</p>
    <p>Federated Services  Services, not yet completely part of SeerSuite, but</p>
    <p>may share the same framework, infrastructure.</p>
  </div>
  <div class="page">
    <p>Appendix - Digital Libraries</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Outline  HotCloud 2010</p>
    <p>Introduction  Motivation/Our Contributions  SeerSuite  Component Hosting  Content Hosting  Peak Load Hosting  Future Work  Conclusions</p>
  </div>
</Presentation>
