<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Midgress-aware traffic provisioning for content delivery</p>
    <p>Aditya Sundarrajan, Mangesh Kasbekar, Ramesh K. Sitaraman, Samta Shukla</p>
  </div>
  <div class="page">
    <p>CDNs serve more than 50% of content</p>
    <p>Origin Users</p>
    <p>CDN 2</p>
    <p>Request / Response</p>
    <p>EgressMidgress</p>
  </div>
  <div class="page">
    <p>Performance and cost metrics</p>
    <p>End-user latency</p>
    <p>Origin offload ratio</p>
    <p>Bandwidth cost</p>
    <p>Cache hit rate</p>
  </div>
  <div class="page">
    <p>Millions of users</p>
  </div>
  <div class="page">
    <p>Traffic classes</p>
    <p>Requests</p>
    <p>Users</p>
    <p>Traffic provisioning</p>
    <p>Cache management</p>
  </div>
  <div class="page">
    <p>Traffic classes</p>
    <p>Requests</p>
    <p>Users</p>
    <p>Past work has focused on cache management</p>
    <p>Traffic provisioning</p>
    <p>Cache management</p>
  </div>
  <div class="page">
    <p>Traffic classes</p>
    <p>Requests</p>
    <p>Users</p>
    <p>How can we assign traffic classes to reduce midgress?</p>
    <p>Traffic provisioning</p>
    <p>Cache management</p>
  </div>
  <div class="page">
    <p>S1</p>
    <p>S2</p>
    <p>Midgress</p>
    <p>+</p>
    <p>x 1/2</p>
    <p>x 1/2</p>
    <p>+</p>
    <p>Traffic provisioning to reduce midgress</p>
  </div>
  <div class="page">
    <p>Traffic provisioning to minimize midgress</p>
    <p>CDN</p>
    <p>Min. miss traffic to origin</p>
    <p>Origin Users</p>
    <p>Traffic classes</p>
    <p>Optimize traffic class assignment</p>
  </div>
  <div class="page">
    <p>Eviction age equality</p>
    <p>Head Tail</p>
    <p>Eviction age</p>
    <p>EvictInsert o1 o2 o3 o4</p>
  </div>
  <div class="page">
    <p>Footprint descriptors*</p>
    <p>St ac</p>
    <p>k di</p>
    <p>st an</p>
    <p>ce Inter-arrival time</p>
    <p>Spatial locality: How many unique bytes are requested between successive requests of an object?</p>
    <p>Temporal locality: How often is an object requested?</p>
    <p>Joint probability distribution</p>
    <p>P(s,t)</p>
    <p>* Footprint descriptors: Theory and practice of cache provisioning in a global CDN, A. Sundarrajan et al. in ACM CoNEXT 2017</p>
  </div>
  <div class="page">
    <p>St ac</p>
    <p>k di</p>
    <p>st an</p>
    <p>ce Inter-arrival time</p>
    <p>Joint probability distribution</p>
    <p>P(s,t)Cache size</p>
    <p>H it</p>
    <p>ra te</p>
    <p>Eviction age</p>
    <p>H it</p>
    <p>ra te</p>
    <p>Eviction age</p>
    <p>Ca ch</p>
    <p>e si</p>
    <p>ze</p>
    <p>Hit rate = f (size)</p>
    <p>Hit rate = f (eviction age)</p>
    <p>Cache size = f (eviction age)</p>
    <p>Caching properties from FDs</p>
    <p>* Footprint descriptors: Theory and practice of cache provisioning in a global CDN, A. Sundarrajan et al. in ACM CoNEXT 2017</p>
  </div>
  <div class="page">
    <p>Traffic mixing using FD calculus</p>
    <p>+</p>
    <p>FD1</p>
    <p>FD2</p>
    <p>FD1+2</p>
    <p>The addition operation is the convolution of joint pdfs which can be efficiently computed using FFT</p>
    <p>* Footprint descriptors: Theory and practice of cache provisioning in a global CDN, A. Sundarrajan et al. in ACM CoNEXT 2017</p>
  </div>
  <div class="page">
    <p>Traffic provisioning to minimize midgress</p>
    <p>CDN</p>
    <p>Min. miss traffic to origin</p>
    <p>Origin Users</p>
    <p>FD of traffic classes</p>
    <p>FD calculus to optimize traffic class assignment</p>
  </div>
  <div class="page">
    <p>1, 2,, T T traffic classes</p>
    <p>N servers</p>
    <p>Min. ij xij j mj(cij)</p>
    <p>Total miss traffic from cluster</p>
    <p>j x1jj  j xNjj</p>
    <p>Traffic provisioning as an optimization problem</p>
    <p>Estimate miss rate of traffic mix using FD calculus</p>
    <p>Cache size, C</p>
    <p>Traffic capacity, B</p>
    <p>MILP  NP Hard!!</p>
  </div>
  <div class="page">
    <p>FD-based local search is faster than MILP</p>
    <p>Servers</p>
    <p>Predict midgress of traffic mix using FD calculus</p>
    <p>Traffic classes 1. Randomly assign traffic classes</p>
  </div>
  <div class="page">
    <p>FD-based local search is faster than MILP</p>
    <p>Servers</p>
    <p>Predict midgress of traffic mix using FD calculus</p>
    <p>Traffic classes</p>
  </div>
  <div class="page">
    <p>Metro-level traffic provisioning</p>
    <p>Cluster 1</p>
    <p>Midgress of metro area</p>
    <p>Traffic classes</p>
    <p>Servers</p>
    <p>Cluster N</p>
    <p>Servers</p>
  </div>
  <div class="page">
    <p>Trace characteristics</p>
    <p>Number of traffic classes 25</p>
    <p>Length of trace 16 days</p>
    <p>Traffic types Web, media, download</p>
  </div>
  <div class="page">
    <p>Metro-level midgress reduced by 20%</p>
    <p>Ca ch</p>
    <p>e m</p>
    <p>is s r</p>
    <p>at e,</p>
    <p>%</p>
    <p>Cache size, TB</p>
    <p>OPT</p>
    <p>local search</p>
    <p>baseline fit</p>
  </div>
  <div class="page">
    <p>Traffic provisioning in partitioned caches</p>
    <p>Ca ch</p>
    <p>e m</p>
    <p>is s</p>
    <p>ra te</p>
    <p>, %</p>
    <p>Cache size, TB</p>
    <p>OPT-share baseline fit-share OPT-part baseline fit-part</p>
    <p>OPT baseline fit OPT  part baseline fit  part</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Midgress-aware traffic provisioning reduced midgress by almost 20% in metro area</p>
    <p>Midgress-aware heuristic performs within 1.1% of OPT but is much faster</p>
    <p>Midgress-aware traffic provisioning can be extended to work with additional constraints such as minimum redundancy and maximum midgress, any cache management algorithm, and with partitioned caches</p>
  </div>
  <div class="page">
    <p>Thank you!</p>
    <p>Email: asundar@cs.umass.edu</p>
  </div>
</Presentation>
