<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>FlowCog: Context-aware Semantics Extraction</p>
    <p>and Analysis of Information Flow Leaks</p>
    <p>in Android Apps</p>
    <p>Xiang Pan, Yinzhi Cao, Xuechao Du, Boyuan He, Gan Fang, Yan Chen.</p>
    <p>Northwestern University, Johns Hopkins University Zhejiang University, Google</p>
  </div>
  <div class="page">
    <p>Roadmap 1. Motivating Example 2. FlowCog Overview 3. Design</p>
    <p>a. View Dependency Explorer b. Flow and Semantics Correlation Inference</p>
  </div>
  <div class="page">
    <p>MainActivity:onCreate userLocation = getLastKnownLocation(...) allowShareLoc = (CheckBox) findViewById(...)</p>
    <p>Main_activity.xml &lt;Button android:onClick= perfomUpdateWeather&gt;</p>
    <p>MainActivity:performUpdateWeather() task=new UpdateWeatherAsyncTask(userLocation, allowShareLoc.isChecked()) task.execute()</p>
    <p>UpdateWeatherAsyncTask:doInBackground()</p>
    <p>if (allowShareLoc) ServerApi.postData(location) else showDialogForPermission();</p>
    <p>Share location to automatically update city</p>
    <p>Update Weather</p>
    <p>ServerApi.postData(location) req = prepareWeatherUpdateReq(location) HttpClient.execute(req) ServerApi.postData(location)</p>
    <p>PosBtnListener:onClick()</p>
    <p>Let our app provide accurate weather information based on your current location, this ...</p>
    <p>(1)Source</p>
    <p>(2)</p>
    <p>(3)</p>
    <p>(3)(4) Sink</p>
  </div>
  <div class="page">
    <p>[MockDroid] Beresford, Alastair R., et al. &quot;Mockdroid: trading privacy for application functionality on smartphones.&quot; Proceedings of the 12th workshop on mobile computing systems and applications. ACM, 2011.</p>
    <p>[SmartDroid] Zheng, Cong, et al. &quot;Smartdroid: an automatic system for revealing ui-based trigger conditions in android applications.&quot; Proceedings of the second ACM workshop on Security and privacy in smartphones and mobile devices. ACM, 2012.</p>
    <p>[AppIntent] Yang, Zhemin, et al. &quot;Appintent: Analyzing sensitive data transmission in android for privacy leakage detection.&quot; Proceedings of the 2013 ACM SIGSAC conference on Computer &amp; communications security. ACM, 2013.</p>
    <p>[Epicc] Octeau, Damien, et al. &quot;Effective inter-component communication mapping in android with epicc: An essential step towards holistic security analysis.&quot; Effective Inter-Component Communication Mapping in Android with Epicc: An Essential Step Towards Holistic Security Analysis (2013).</p>
    <p>[AmanDroid] Wei, Fengguo, Sankardas Roy, and Xinming Ou. &quot;Amandroid: A precise and general inter-component data flow analysis framework for security vetting of android apps.&quot; Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security. ACM, 2014.</p>
    <p>[TaintDroid] Enck, William, et al. &quot;TaintDroid: an information-flow tracking system for realtime privacy monitoring on smartphones.&quot; ACM Transactions on Computer Systems (TOCS) 32.2 (2014): 5.</p>
    <p>[FlowDroid] Arzt, Steven, et al. &quot;Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps.&quot; Acm Sigplan Notices49.6 (2014): 259-269.</p>
    <p>[IccTA] Li, Li, et al. &quot;Iccta: Detecting inter-component privacy leaks in android apps.&quot; Proceedings of the 37th International Conference on Software Engineering-Volume 1. IEEE Press, 2015.</p>
    <p>[Apparecium] Titze, Dennis, and Julian Schtte. &quot;Apparecium: Revealing data flows in android applications.&quot; Advanced Information Networking and Applications (AINA), 2015 IEEE 29th International Conference on. IEEE, 2015.</p>
    <p>[Droidsafe] Gordon, Michael I., et al. &quot;Information Flow Analysis of Android Applications in DroidSafe.&quot; NDSS. Vol. 15. 2015.</p>
    <p>[VetDroid] Pravin, Ms Nigam Paridhi. &quot;Vetdroid: Analysis using permission for vetting undesirable behaviours in android applications.&quot; International Journal of Innovative and Emerging Research in Engineering 2.3 (2015): 131-136.</p>
    <p>Cannot tell which flow is legitimate!</p>
    <p>Big burden on users!</p>
  </div>
  <div class="page">
    <p>Roadmap 1. Motivating Example 2. FlowCog Overview 3. Design</p>
    <p>a. View Dependency Explorer b. Flow and Semantics Correlation Inference</p>
  </div>
  <div class="page">
    <p>FlowCog Overview  First system to extract Android apps flow-specific</p>
    <p>semantics.  Associate the semantics with flows behavior.</p>
    <p>High level steps:  Associate each flow with its related views via static</p>
    <p>analysis and an optional dynamic analysis.  Extract view semantics. (e.g., Update Weather)  Determine if semantics provides information about</p>
    <p>flow behavior.</p>
  </div>
  <div class="page">
    <p>FlowCog Architecture: Semantics Extraction (1/2)</p>
    <p>App</p>
    <p>Ap p</p>
    <p>Flow</p>
    <p>Flow path</p>
    <p>Dynamic Analysis</p>
    <p>App 4. Semantic Extractor.</p>
    <p>Views</p>
    <p>Share location to automatically update city</p>
    <p>Activation Event.</p>
    <p>UpdateWeatherAsyncTask:doInBackground</p>
    <p>if (allowShareLoc) sendData else ...</p>
    <p>Guarding Condition</p>
  </div>
  <div class="page">
    <p>FlowCog: Flow and Semantics Correlation Inference (2/2)</p>
    <p>Semantic Extractor</p>
    <p>Classifier</p>
    <p>Learning classifier.</p>
    <p>Learning-free classifier</p>
    <p>Ex: Share location to automatically update city =&gt; &lt;update, city&gt;, &lt;share, location&gt;</p>
    <p>FilterFlow -sp</p>
    <p>ecif ic</p>
    <p>tex ts.</p>
    <p>App description. [&lt;Verb, Noun&gt;, &lt;Verb, Noun&gt;, ,]</p>
  </div>
  <div class="page">
    <p>Roadmap 1. Motivating Example 2. FlowCog Overview 3. Design</p>
    <p>a. View Dependency Explorer b. Flow and Semantics Correlation Inference</p>
  </div>
  <div class="page">
    <p>Design: View Dependency Explorer  Formalized into taint analysis problem.</p>
    <p>Source: all the views.  findViewById(...) call statements.  All new statements that create classes (and their builders)</p>
    <p>extending View and Dialog classes.</p>
    <p>Sink:  Statements in given data flow.  Guarding condition statements.  All the activation events registration statements.</p>
    <p>Use IFDS framework provided by FlowDroid.</p>
  </div>
  <div class="page">
    <p>Design: Flow and Semantics Correlation Inference</p>
    <p>Flow-s pecific</p>
    <p>texts.</p>
    <p>App description. Classifier</p>
    <p>Learning Classifier</p>
    <p>Learning-free Classifier</p>
    <p>Filter</p>
    <p>Vectorize input using TF-IDF. Classify using SVM and Gradient Boosting.</p>
    <p>Use Word2Vec to convert two inputs into two vector lists, and then compute their similarity score.</p>
    <p>Docu ment</p>
    <p>ation of</p>
    <p>sourc e and</p>
    <p>sink</p>
    <p>meth ods.</p>
  </div>
  <div class="page">
    <p>Roadmap 1. Motivating Example 2. FlowCog Overview 3. Design</p>
    <p>a. View Dependency Explorer b. Flow and Semantics Correlation Inference</p>
  </div>
  <div class="page">
    <p>Implementation Component Language Loc</p>
    <p>Flow-related Semantics Extraction</p>
    <p>Java ~12,000</p>
    <p>Classifier Python ~3,000</p>
    <p>Dynamic Analysis Python, Java ~1,000</p>
    <p>Total Python, Java ~16,000</p>
  </div>
  <div class="page">
    <p>Roadmap 1. Motivating Example 2. FlowCog Overview 3. Design</p>
    <p>a. View Dependency Explorer b. Flow and Semantics Correlation Inference</p>
  </div>
  <div class="page">
    <p>Evaluation: Ground Truth Type Apps Apps</p>
    <p>with Flows</p>
    <p>Legitimate Flows</p>
    <p>Maliciou s Flows</p>
    <p>Total Flows</p>
    <p>Benign 1,299/4,500 361 688 355 1,043</p>
    <p>Malicious [Drebin dataset]</p>
    <p>Overall 1,885/6,000 616 1,363 979 2,342</p>
  </div>
  <div class="page">
    <p>Evaluation: FlowCog Achieves High Accuracy.</p>
    <p>Type Flows Precision Recall Accuracy</p>
    <p>Benign 1,043 90.3% 95.1% 90.7%</p>
    <p>Malicious 1,299 89.9% 91.0% 89.6%</p>
    <p>Overall 2,342 90.1% 93.1% 90.2%</p>
  </div>
  <div class="page">
    <p>Evaluation: Size of Data Set Matters. Type # of Flows Accuracy</p>
    <p>Credential 443 96.2%</p>
    <p>Device/Card Id 373 91.4%</p>
    <p>Phone number 103 94.2%</p>
    <p>Internet 1,009 91.7%</p>
    <p>SMS 233 83.7%</p>
    <p>Location 173 79.2%</p>
    <p>Contact 132 79.5%</p>
    <p>Calendar 12 66.7%</p>
    <p>Less accurate flow types can be improved with more training data.</p>
  </div>
  <div class="page">
    <p>Case Study: Home of Ocarina  Leaks out users geo-location.  Labeled as legitimate because of</p>
    <p>extracted semantics.</p>
    <p>Map, The location of home of Ocarina</p>
  </div>
  <div class="page">
    <p>Case Study: SMS Irritate  Leaks out user-specific</p>
    <p>information via SMS.  Labeled as legitimate.</p>
    <p>Send SMS, Number of SMS to flood, Message</p>
  </div>
  <div class="page">
    <p>Case Study: Merry Christmas  Leaks out users</p>
    <p>information to Internet.  Labeled as malicious.</p>
    <p>Move the box to the target empty position...</p>
  </div>
  <div class="page">
    <p>Conclusion  FlowCog is the first system to extract flow-specific semantics.  FlowCog adopts NLP techniques to associate flow-specific</p>
    <p>semantics with flow behaviors.  Our evaluation results show that FlowCog can achieve a precision</p>
    <p>of 90.1% and a recall of 93.1%.</p>
  </div>
  <div class="page">
    <p>Thanks!</p>
    <p>FlowCog open-source at: https: //github.com/SocietyMaster/FlowCog</p>
  </div>
</Presentation>
