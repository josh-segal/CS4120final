<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Skylight  A Window on Shingled Disk Operation</p>
    <p>Abutalib Aghayev, Peter Desnoyers Northeastern University</p>
  </div>
  <div class="page">
    <p>What is Shingled Magnetic Recording (SMR)?</p>
    <p>A new way of recording tracks on the disk platter.  Evolutionary  uses existing infrastructure.  Fits more tracks onto platter  increases capacity.  Disallows random writes  increases complexity.</p>
  </div>
  <div class="page">
    <p>Disk Drive Internals</p>
    <p>Platter</p>
    <p>Head Assembly</p>
    <p>Tracks</p>
    <p>Write Head</p>
    <p>Read Head</p>
    <p>Actuator</p>
  </div>
  <div class="page">
    <p>Conventional Magnetic Recording</p>
    <p>Write Head</p>
    <p>Read Head</p>
    <p>Platter</p>
  </div>
  <div class="page">
    <p>Shingled Magnetic Recording</p>
    <p>Write Head</p>
    <p>Read Head</p>
    <p>Platter</p>
  </div>
  <div class="page">
    <p>Shingled Magnetic Recording</p>
    <p>Write Head</p>
    <p>Read Head</p>
    <p>Block</p>
    <p>Platter</p>
  </div>
  <div class="page">
    <p>Shingled Magnetic Recording</p>
    <p>PlatterMemory</p>
  </div>
  <div class="page">
    <p>Shingled Magnetic Recording</p>
    <p>Write Head</p>
    <p>Read Head</p>
    <p>Guard Region</p>
    <p>Platter</p>
  </div>
  <div class="page">
    <p>SMR Drive Implementations</p>
    <p>Host-Managed  Reports band to host.</p>
    <p>Bands must be written sequentially.</p>
    <p>Random writes or reads before writes will fail.</p>
    <p>Host-Aware  Reports band to host.</p>
    <p>Also handles random writes  backward compatible.</p>
    <p>Drive-Managed  Hides SMR details.</p>
    <p>Drop-in replacement for existing drives.</p>
    <p>This talk is about characterizing Drive-Managed SMR drives.</p>
  </div>
  <div class="page">
    <p>Drive-Managed SMR</p>
    <p>Read arbitrary block that was written</p>
    <p>Sequentially write arbitrary band</p>
    <p>Shingled Magnetic Recording</p>
    <p>Read arbitrary block Write arbitrary block</p>
    <p>Shingle Translation Layer (STL)</p>
  </div>
  <div class="page">
    <p>Drive-Managed SMR</p>
    <p>Small region of disk, called persistent cache, used for staging random writes.</p>
    <p>Other non-volatile memory like flash can also be used for persistent cache.</p>
    <p>Disk is mapped at band granularity; persistent cache uses extent mapping.</p>
  </div>
  <div class="page">
    <p>Drive-Managed SMR</p>
    <p>Bands are shown in green. Persistent Cache is shown in orange.</p>
    <p>Persistent Cache Map</p>
    <p>Aggressive Cleaning starts when idleness is detected.</p>
    <p>Lazy Cleaning starts when the cache is almost full</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction to SMR  Characterization goals and test setup  Test results</p>
  </div>
  <div class="page">
    <p>Characterization Goals</p>
    <p>Drive Type  Persistent Cache Type  Cache Location and</p>
    <p>Layout  Cache Size  Cache Map Size  Band Size</p>
    <p>Block Mapping  Cleaning Type  Cleaning Algorithm  Band Cleaning Time  Zone Structure  Shingling Direction</p>
  </div>
  <div class="page">
    <p>Skylight Components</p>
    <p>Software part:  Launch crafted I/O operations using fio.</p>
    <p>Disable kernel read-ahead, drive look-ahead, on-board volatile cache.</p>
    <p>Use latency to infer drive properties.</p>
    <p>Hardware part:  Install a transparent window on the</p>
    <p>drive.</p>
    <p>Track the head movements using a high-speed camera.</p>
    <p>Convert movements to head position graphs.</p>
  </div>
  <div class="page">
    <p>Emulation Strategy</p>
    <p>STLs from the literature implemented as Linux device-mapper targets.</p>
    <p>STL target</p>
    <p>Drive-Managed SMR with persistent disk cache</p>
    <p>Drive-Managed SMR with persistent flash cache</p>
    <p>STL target</p>
    <p>Linear target</p>
  </div>
  <div class="page">
    <p>Tested Drives</p>
    <p>Emulated Drives</p>
    <p>All were emulated using a 4TB conventional Seagate drive.</p>
    <p>Real Drives  5TB and 8TB Seagate drive-managed SMR drives.</p>
    <p>We only show 5TB results  labeled as Seagate-CMR.</p>
    <p>All disk drives are 5900RPM =&gt; ~10 ms rotation time.</p>
    <p>Drive Name Cache Type Cache Location Band Size Capacity</p>
    <p>Emulated-SMR-1 Disk Single at ID 40 MiB 3.9 TB</p>
    <p>Emulated-SMR-2 Flash N/A 25 MiB 3.9 TB</p>
    <p>Emulated-SMR-3 Disk Multiple 20 MiB 3.9 TB</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction to SMR  Characterization goals and test setup  Test results</p>
  </div>
  <div class="page">
    <p>Test 1: Discovering the drive type and the persistent cache type</p>
    <p>Test exploits unusual random write behavior in SMR drives.</p>
    <p>Write blocks in the first 1GiB in random order.  If latency is fixed then the drive is SMR, otherwise it</p>
    <p>is a conventional magnetic recording (CMR).  Sub-millisecond latency indicates a drive with a</p>
    <p>persistent flash cache.</p>
  </div>
  <div class="page">
    <p>Random Write latency</p>
    <p>Y-axis varies in each graph.  Conventional drive (Seagate-CMR) stands out from the rest.  Emulated drive with persistent flash cache has sub-ms latency.  Latency is high for the real SMR drive.</p>
  </div>
  <div class="page">
    <p>Random Write Latency + Head Position</p>
    <p>There is a persistent cache at the outer diameter (OD).  Writes are (likely) piggy backed with out-of-band data.  There is (likely) a persistent cache map stored at the middle diameter.</p>
  </div>
  <div class="page">
    <p>Random Writes with Max Queue Depth</p>
    <p>Different write sizes produce equal latencies.  Latency increases in ~5ms jumps.  Given ~10ms rotation time, ~5ms is ~ half-track increase in write size.</p>
  </div>
  <div class="page">
    <p>Host Write vs Internal Write</p>
    <p>One Track One Track Half Track</p>
    <p>Out-of-band Data Journal Entry</p>
    <p>Wasted Space</p>
  </div>
  <div class="page">
    <p>Journal Entries with Quantized Sizes</p>
    <p>Host Writes</p>
  </div>
  <div class="page">
    <p>Test 2: Discovering Disk Cache Location and Structure</p>
    <p>Test exploits a phenomenon called fragmented reads.</p>
    <p>Fragmented read: during sequential read, seek to the persistent cache and back to read an updated block.</p>
    <p>Force fragmented reads at different offsets to infer persistent cache location based on seek time.</p>
    <p>Skip Write</p>
    <p>Sequential Read</p>
  </div>
  <div class="page">
    <p>Fragmented Read at 5TB Offset</p>
    <p>Head seeks back and forth between a track and persistent cache.  Persistent Cache is at OD, therefore, 5TB offset is at ID.  Block numbering convention starts at OD proceeds towards ID.</p>
  </div>
  <div class="page">
    <p>Fragmented Read Latency at Low, Middle, and High Offsets</p>
    <p>Emulated-SMR-1: avg. latency high at low offset =&gt; cache at ID.  Seagate-SMR: avg. latency is high at high offset =&gt; cache at OD.  Emulated-SMR-3: avg. latency is roughly fixed =&gt; distributed cache.</p>
  </div>
  <div class="page">
    <p>Test 3: Discovering the Band Size</p>
    <p>Test relies on the fact that cleaning proceeds at a band granularity.</p>
    <p>Choose a small region (~1GiB) and write blocks in random order.</p>
    <p>Pause for a short (~3-5s) period, letting the cleaner to clean a few bands.</p>
    <p>Sequentially read the blocks in the region.  Most latencies will be random  a streak of flat</p>
    <p>latencies will identify a band.</p>
  </div>
  <div class="page">
    <p>Sequential Read of Random Writes</p>
    <p>Emulated-SMR-1 band size is 40MiB.  Emulated-SMR-2 band size is 25MiB, cache reads are sub-ms due to</p>
    <p>persistent flash cache.  Emulated-SMR-3 band size is 20 MiB.  Seagate-SMR band size is 36MiB, becomes smaller towards the ID.</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Drive-Managed SMR drives have different performance characteristics.</p>
    <p>Using them efficiently will require changes to software stack.</p>
    <p>Skylight aims to guide these changes.  We aim for generality, more work may be needed.  Tests, STL source code, video clips are available at</p>
    <p>http://sssl.ccs.neu.edu/skylight</p>
  </div>
</Presentation>
