<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Gabriele DAngelo</p>
    <p>joint work with</p>
    <p>Luciano Bononi Michele Bracuto</p>
    <p>Lorenzo Donatiello</p>
    <p>University of Bologna Department of Computer Science</p>
    <p>Workshop FIRB Perf 2005  Torino</p>
    <p>Scalable and Efficient Parallel and Distributed Simulation of Complex,</p>
    <p>Dynamic and Mobile Systems</p>
  </div>
  <div class="page">
    <p>Presentation outline</p>
    <p>Simulation of large scale and complex models</p>
    <p>The ARTS software architecture</p>
    <p>Simulation of massive, complex and dynamic systems</p>
    <p>High Performance Computing (HPC)</p>
    <p>The CR-PADS logical structure and implementation</p>
    <p>Further optimizations for PADS:</p>
    <p>Hyper-Threading / Multi-Core support</p>
    <p>Data Marshalling</p>
    <p>Conclusions and future work</p>
  </div>
  <div class="page">
    <p>Simulation of large scale and complex models</p>
    <p>Simulation models currently of interest may include a potentially</p>
    <p>huge number of simulated objects</p>
    <p>Large scale and complex simulation models may be unpractical to</p>
    <p>simulate on a single-processor execution unit: huge memory</p>
    <p>requirements, large amount of time required to complete the</p>
    <p>simulation runs</p>
    <p>The memory bottleneck reduction, scalability and speed-up can</p>
    <p>be achieved by using parallel/distributed models and execution</p>
    <p>architectures</p>
    <p>Goal: to increase the simulation speed, reduce the Wall Clock</p>
    <p>Time (WCT) required to complete the simulation runs</p>
  </div>
  <div class="page">
    <p>The ARTS software architecture</p>
    <p>Advanced RTI System (ARTS), parallel and distributed simulation</p>
    <p>middleware:</p>
    <p>Model components heterogeneity, distribution and reuse</p>
    <p>Adaptive evaluation of the communication bottlenecks and</p>
    <p>dynamic adaptation of the inter-process communication layer</p>
    <p>Generic Adaptive Interaction Architecture (GAIA): model</p>
    <p>components migration mechanism to support load balancing and</p>
    <p>data distribution management (DDM) overhead reduction</p>
    <p>Support for High Performance Computing clusters (HPC):</p>
    <p>scalability evaluation of the middleware</p>
    <p>Concurrent Replication of Parallel and Distributed Simulation (CR</p>
    <p>PADS) and cloning</p>
  </div>
  <div class="page">
    <p>ARTS: logical architecture</p>
    <p>Shared Memory TCP/IP R-UDP</p>
    <p>Multicast</p>
    <p>DDM Time Man.</p>
    <p>Federation Man.</p>
    <p>Declaration Man.</p>
    <p>Object Man.</p>
    <p>Own. Man.</p>
    <p>Gaming API</p>
    <p>HLA IEEE 1516</p>
    <p>User Simulation Level</p>
    <p>Unibo API</p>
    <p>TCP/IP C/C++ Real-Time Introspection</p>
    <p>Logging</p>
    <p>PerformanceCommunicationLayer</p>
    <p>RTI Core</p>
    <p>RTI Interfaces (API)</p>
    <p>Cloning &amp; Replication</p>
    <p>MPI</p>
    <p>JAVA</p>
    <p>GAIA</p>
  </div>
  <div class="page">
    <p>Performance evaluation: Ad-Hoc wireless network model</p>
    <p>Simulated model:</p>
    <p>A set of Simulated Mobile Hosts (SMHs)</p>
    <p>Mobility model:</p>
    <p>Random Mobility Motion model (RMM)</p>
    <p>uncorrelated SMHs mobility</p>
    <p>Traffic model:</p>
    <p>ping messages (CBR) by every SMH to all neighbors within</p>
    <p>the wireless communication range (250 m)</p>
    <p>Propagation model</p>
    <p>open space (neighbor-SMHs within detection range)</p>
  </div>
  <div class="page">
    <p>Ad-Hoc network model characterization</p>
    <p>Computation and communication issues:</p>
    <p>The computation required for each SMH per time-step is in the</p>
    <p>order of O(#SMH^2): to determine the neighbor set</p>
    <p>The communication required among SMHs is in the order of</p>
    <p>O(K*#SMH) per time-step, with K defined as a constant value</p>
    <p>based on SMHs density (assumed as constant)</p>
  </div>
  <div class="page">
    <p>Scalability evaluation: High Performance Computing</p>
    <p>IBM CLX/1024  IBM Linux cluster 1350 - CINECA</p>
    <p>Global peak performance: 6.1 TFlops</p>
    <p>All the nodes are interconnected by a low latency Myrinet network,</p>
    <p>maximum bandwidth between each pair of nodes: 256 MB/s</p>
  </div>
  <div class="page">
    <p>ARTS on High Performance Computing (HPC)</p>
    <p>ARTS on HPC Cluster</p>
    <p>LPs (CPUs)</p>
    <p>W al</p>
    <p>l C lo</p>
    <p>ck T</p>
    <p>im e</p>
    <p>(s )</p>
    <p>ARTS Speedup on HPC Cluster</p>
    <p>LPs (CPUs) S</p>
    <p>pe ed</p>
    <p>up</p>
  </div>
  <div class="page">
    <p>Typical PDES + PADS problems</p>
    <p>A typical simulation-based investigation requires to collect many</p>
    <p>independent observations for a correct and significant statistical analysis of</p>
    <p>results</p>
    <p>In the PADS environment frequent synchronizations are required among</p>
    <p>the model components</p>
    <p>Each simulation component swings between computation and</p>
    <p>communication phases</p>
    <p>The whole set of processes advance with the speed of the slowest</p>
    <p>Some phases (usually before the synchronization barriers) could be</p>
    <p>communication intensive and may led to network congestions (further</p>
    <p>increasing the communication overhead)</p>
    <p>Our idea is to obtain a more fluent computation and communication by</p>
    <p>concurrently merging the execution of more PADS replicas</p>
  </div>
  <div class="page">
    <p>Concurrent Replication of PADS (CR-PADS)</p>
    <p>The CR-PADS is a mechanism that duplicates the logical</p>
    <p>processes (LPs) of PADS runs starting from the initialization</p>
    <p>phase of every single run</p>
    <p>Every replica is based on the same model definition, realizes an</p>
    <p>independent execution based on local initial parameters,</p>
    <p>variable factors of the analysis and different random number</p>
    <p>generator seeds</p>
    <p>CR-PADS is absolutely different from simulation cloning</p>
    <p>The risk of this mechanism is to spend too much time in switching</p>
    <p>processes execution, in the creation of communication bottlenecks</p>
    <p>and live-locks, resulting in trashing effects</p>
  </div>
  <div class="page">
    <p>The CR-PADS approach</p>
  </div>
  <div class="page">
    <p>Simulation test-beds</p>
    <p>Two different environments:</p>
    <p>Parallel: a single Physical Execution Unit (PEU)</p>
    <p>Distributed: a set of PEU, interconnected by a Fast Ethernet LAN</p>
    <p>(100 Mb/sec)</p>
    <p>Each PEU is an Intel Dual Xeon Pentium IV 2800 MHz, with 3 GB</p>
    <p>RAM, Debian GNU/Linux OS with kernel version 2.6.x</p>
    <p>Conservative time-stepped simulation: 300 time-steps</p>
  </div>
  <div class="page">
    <p>Parallel environment: 500 and 1000 SMHs</p>
    <p>M=#PEU</p>
    <p>N=#LP</p>
  </div>
  <div class="page">
    <p>Distributed environment: 500 and 1000 SMHs</p>
    <p>M=#PEU</p>
    <p>N=#LP</p>
  </div>
  <div class="page">
    <p>Optimizations: Hyper-Threading (HT) support</p>
    <p>The Hyper-Threading technology (HT) is a new processor</p>
    <p>architecture recently introduced by Intel</p>
    <p>The HT technology duplicates the high level portion of the</p>
    <p>architecture state on each logical processor, while logical</p>
    <p>processors share a subset of the physical processor execution</p>
    <p>resources</p>
    <p>HT technology makes a single physical processor appearing as</p>
    <p>two logical processors at the user level: one physical execution</p>
    <p>resource (CPU) is shared between two logical processors</p>
    <p>The influence of HT technology on PADS architectures and</p>
    <p>frameworks has not been investigated in detail</p>
  </div>
  <div class="page">
    <p>ARTS and Hyper-Threading</p>
    <p>ARTS Multi Thread (Timed Wait)</p>
    <p>LPs</p>
    <p>W al</p>
    <p>l C lo</p>
    <p>ck T</p>
    <p>im e</p>
    <p>(s )</p>
    <p>HT OFF HT ON</p>
  </div>
  <div class="page">
    <p>ARTS and Hyper-Threading</p>
    <p>ARTS Multi Thread (Signal Based)</p>
    <p>LPs</p>
    <p>W al</p>
    <p>l C lo</p>
    <p>ck T</p>
    <p>im e</p>
    <p>(s )</p>
    <p>HT OFF HT ON</p>
  </div>
  <div class="page">
    <p>Optimizations: communication marshalling</p>
    <p>The communication efficiency is one of the main factors</p>
    <p>determining the efficiency of a parallel or distributed simulation</p>
    <p>The data marshalling approach consists in the concatenation of</p>
    <p>more than one logical message in the same communication</p>
    <p>messages</p>
    <p>The data marshalling process is controlled by a timer: once every</p>
    <p>a maximum time limit the messages buffered on the LP are sent in</p>
    <p>a data marshalling packet (or frame)</p>
    <p>Inverse trade-off: degradation in the average communication</p>
    <p>latency</p>
    <p>The proposed optimization has been applied both to shared</p>
    <p>memory and TCP/IP communications</p>
  </div>
  <div class="page">
    <p>Communication Marshalling: distributed environment</p>
    <p>al l C</p>
    <p>lo ck</p>
    <p>T im</p>
    <p>e (s</p>
    <p>)</p>
    <p>SMHs</p>
    <p>Marshalling ON vs Marshalling OFF</p>
    <p>Marshalling ON Marshalling OFF</p>
  </div>
  <div class="page">
    <p>Conclusion and Future work</p>
    <p>ARTS is a scalable, optimized parallel and distributed simulation</p>
    <p>middleware, used to simulate dynamic complex systems</p>
    <p>Careful and enhanced evaluation of the proposed optimizations</p>
    <p>Further improve the ARTS middleware</p>
    <p>Data structures optimization (event-management)</p>
    <p>SCTP support (IP based communication protocol)</p>
    <p>IEEE 1516 full compatibility</p>
    <p>New models (es. Detailed MAC protocols)</p>
    <p>Migration based middleware for Internet games</p>
  </div>
  <div class="page">
    <p>References</p>
    <p>and Computation Solutions for Parallel and Distributed Simulation. Proc. Of HPCC 2005</p>
    <p>Distributed Simulations. Proc. of ACM/IEEE/SCS PADS 2005</p>
    <p>Architecture for Massively Populated Internet Games. Proc. of IEEE NIME 2004</p>
    <p>Middleware for Performance Evaluation. Proc. of ISCIS 2004</p>
    <p>Distributed Simulation of Dynamically Interacting Systems. Proc. of IEEE DS-RT 2004</p>
    <p>Distributed Framework for Large Scale Systems Simulation. Proc. of ACM/IEEE MSWiM</p>
    <p>Systems. Proc. of IFIP-TC6 PWC 2003</p>
    <p>Mobile Systems. Proc. of ACM/IEEE/SCS PADS 2003</p>
  </div>
  <div class="page">
    <p>Gabriele DAngelo &lt;gda@cs.unibo.it&gt;</p>
    <p>joint work with</p>
    <p>Luciano Bononi Michele Bracuto</p>
    <p>Lorenzo Donatiello</p>
    <p>University of Bologna Department of Computer Science</p>
    <p>Workshop FIRB Perf 2005  Torino</p>
    <p>Scalable and Efficient Parallel and Distributed Simulation of Complex,</p>
    <p>Dynamic and Mobile Systems</p>
  </div>
</Presentation>
