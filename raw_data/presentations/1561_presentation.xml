<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>File Systems Fated for Senescence? Nonsense,</p>
    <p>Says Science! Alex Conway , Ainesh Bakshi, Yizheng Jiao, Yang Zhan, Michael</p>
    <p>A. Bender, William Jannen, Rob Johnson, Bradley C. Kuszmaul, Donald E. Porter, Jun Yuan and Martin Farach-Colton</p>
    <p>Rutgers University, The University of North Carolina at Chapel Hill, Stony Brook University, Oracle Corporation and Massachusetts Institute of Technology,</p>
    <p>Farmingdale State College of SUNY</p>
  </div>
  <div class="page">
    <p>File Systems Fated for Senescence? Nonsense,</p>
    <p>Says Science; The Essence of</p>
    <p>Semperjuvenescense is Coalescence!</p>
  </div>
  <div class="page">
    <p>File Systems Fated for Senescence? Nonsense,</p>
    <p>Says Science; The Essence of</p>
    <p>Semperjuvenescense is Coalescence!</p>
    <p>old age</p>
    <p>being young forever merging together</p>
  </div>
  <div class="page">
    <p>File System Aging</p>
    <p>Aging is fragmentation over time</p>
    <p>Performance</p>
  </div>
  <div class="page">
    <p>In this talk</p>
    <p>Do file systems age?</p>
    <p>What can we do about it?</p>
  </div>
  <div class="page">
    <p>Is aging a problem?</p>
  </div>
  <div class="page">
    <p>Is aging a problem?</p>
  </div>
  <div class="page">
    <p>Chris Hoffman at howtogeek.com says:</p>
    <p>Linuxs ext2, ext3, and ext4 file systems [are] designed to avoid fragmentation in normal use.</p>
    <p>If you do have problems with fragmentation on Linux, you probably need a larger hard disk.</p>
    <p>Is aging a problem?</p>
  </div>
  <div class="page">
    <p>Chris Hoffman at howtogeek.com says:</p>
    <p>Linuxs ext2, ext3, and ext4 file systems [are] designed to avoid fragmentation in normal use.</p>
    <p>If you do have problems with fragmentation on Linux, you probably need a larger hard disk.</p>
    <p>Modern Linux filesystems keep fragmentation at a minimumTherefore it</p>
    <p>is not necessary to worry about fragmentation in a Linux system.</p>
    <p>Is aging a problem?</p>
  </div>
  <div class="page">
    <p>Chris Hoffman at howtogeek.com says:</p>
    <p>Linuxs ext2, ext3, and ext4 file systems [are] designed to avoid fragmentation in normal use.</p>
    <p>If you do have problems with fragmentation on Linux, you probably need a larger hard disk.</p>
    <p>Modern Linux filesystems keep fragmentation at a minimumTherefore it</p>
    <p>is not necessary to worry about fragmentation in a Linux system.</p>
    <p>Nope</p>
    <p>Is aging a problem?</p>
  </div>
  <div class="page">
    <p>Is aging a problem?</p>
  </div>
  <div class="page">
    <p>Is aging a problem?</p>
    <p>Aging happens in real filesystems  Smith and Seltzer (97)</p>
    <p>Benchmarks should incorporate aging  Zhu, Chen and Chiueh (05)  Agrawal, A. Arpaci-Dusseau and R. Arpaci-Dusseau (09)</p>
    <p>Yep</p>
  </div>
  <div class="page">
    <p>Is aging a problem?</p>
    <p>YepNope</p>
  </div>
  <div class="page">
    <p>Lets do some science!</p>
  </div>
  <div class="page">
    <p>Inducing Aging</p>
    <p>Developer workload</p>
    <p>Server workload</p>
    <p>Synthetic workloads</p>
    <p>We use three different workloads</p>
  </div>
  <div class="page">
    <p>Developer workload</p>
    <p>Server workload</p>
    <p>Synthetic workloads</p>
    <p>We use three different workloads</p>
    <p>See the paper</p>
    <p>Inducing Aging</p>
  </div>
  <div class="page">
    <p>Simulating a Developer</p>
  </div>
  <div class="page">
    <p>Simulating a Developer</p>
    <p>get coffee</p>
  </div>
  <div class="page">
    <p>Simulating a Developer</p>
    <p>get coffee</p>
    <p>git pull</p>
    <p>git pull</p>
  </div>
  <div class="page">
    <p>Simulating a Developer</p>
    <p>get coffee</p>
    <p>git pull</p>
    <p>git pull</p>
    <p>make</p>
    <p>make</p>
  </div>
  <div class="page">
    <p>Simulating a Developer</p>
    <p>get coffee</p>
    <p>git pull</p>
    <p>git pull</p>
    <p>make</p>
    <p>make get coffee</p>
  </div>
  <div class="page">
    <p>Simulating a Developer</p>
    <p>get coffee</p>
    <p>git pull</p>
    <p>git pull</p>
    <p>make</p>
    <p>make get coffee git pull</p>
  </div>
  <div class="page">
    <p>Simulating a Developer</p>
    <p>get coffee</p>
    <p>git pull</p>
    <p>git pull make get coffee git pull add awesome features</p>
  </div>
  <div class="page">
    <p>Simulating a Developer</p>
    <p>get coffee</p>
    <p>git pull</p>
    <p>git pull make get coffee git pull add awesome features get coffee</p>
  </div>
  <div class="page">
    <p>Simulating a Developer</p>
    <p>get coffee</p>
    <p>git pull</p>
    <p>git pull make get coffee git pull add awesome features get coffee git pull</p>
  </div>
  <div class="page">
    <p>Simulating a Developer</p>
    <p>get coffee</p>
    <p>git pull</p>
    <p>git pull make get coffee git pull add awesome features get coffee git pull fix bugs</p>
  </div>
  <div class="page">
    <p>Simulating a Developer</p>
    <p>get coffee</p>
    <p>git pull</p>
    <p>git pull make get coffee git pull add awesome features get coffee git pull fix bugs ...</p>
  </div>
  <div class="page">
    <p>Simulating a Developer</p>
    <p>get coffee</p>
    <p>git pull</p>
    <p>git pull make get coffee git pull add awesome features get coffee git pull fix bugs ...</p>
    <p>We can simulate a developer by replaying Git histories</p>
  </div>
  <div class="page">
    <p>Simulating a Developer</p>
  </div>
  <div class="page">
    <p>Simulating a Developer</p>
    <p>Use the Linux kernel repo from github.com</p>
    <p>Do 100 git pulls</p>
    <p>Measure Performance</p>
  </div>
  <div class="page">
    <p>Measuring Aging time grep -r random_string /path/to/filesystem</p>
    <p>dir</p>
    <p>file1 file2 file3 file4</p>
  </div>
  <div class="page">
    <p>Measuring Aging time grep -r random_string /path/to/filesystem</p>
    <p>dir</p>
    <p>file1 file2 file3 file4</p>
  </div>
  <div class="page">
    <p>Measuring Aging time grep -r random_string /path/to/filesystem</p>
    <p>dir</p>
    <p>file1 file2 file3 file4</p>
  </div>
  <div class="page">
    <p>Measuring Aging time grep -r random_string /path/to/filesystem</p>
    <p>dir</p>
    <p>file1 file2 file3 file4</p>
  </div>
  <div class="page">
    <p>Measuring Aging time grep -r random_string /path/to/filesystem</p>
    <p>dir</p>
    <p>file1 file2 file3 file4</p>
  </div>
  <div class="page">
    <p>Measuring Aging time grep -r random_string /path/to/filesystem</p>
    <p>dir</p>
    <p>file1 file2 file3 file4</p>
    <p>Intrafile Fragmentation</p>
  </div>
  <div class="page">
    <p>Measuring Aging time grep -r random_string /path/to/filesystem</p>
    <p>dir</p>
    <p>file1 file2 file3 file4</p>
    <p>Intrafile Fragmentation</p>
  </div>
  <div class="page">
    <p>Measuring Aging time grep -r random_string /path/to/filesystem</p>
    <p>dir</p>
    <p>file1 file2 file3 file4</p>
    <p>Intrafile Fragmentation</p>
  </div>
  <div class="page">
    <p>Measuring Aging time grep -r random_string /path/to/filesystem</p>
    <p>dir</p>
    <p>file1 file2 file3 file4</p>
    <p>Interfile Fragmentation</p>
    <p>Intrafile Fragmentation</p>
  </div>
  <div class="page">
    <p>Measuring Aging time grep -r random_string /path/to/filesystem</p>
    <p>dir</p>
    <p>file1 file2 file3 file4</p>
    <p>Interfile Fragmentation</p>
    <p>Intrafile Fragmentation</p>
  </div>
  <div class="page">
    <p>Measuring Aging time grep -r random_string /path/to/filesystem</p>
    <p>dir</p>
    <p>file1 file2 file3 file4</p>
    <p>Interfile Fragmentation</p>
    <p>Intrafile Fragmentation</p>
    <p>Then normalize per gigabyte read</p>
  </div>
  <div class="page">
    <p>Do modern file systems age?</p>
  </div>
  <div class="page">
    <p>Ti m</p>
    <p>e in</p>
    <p>s ec</p>
    <p>on ds</p>
    <p>/ G</p>
    <p>iB</p>
    <p>Git pulls performed</p>
    <p>Lower is better</p>
    <p>Our Setup: Cold Cache, 3.4 GHz Quad Core, 4GiB RAM, 20 GiB HDD partition - SATA 7200 RPM</p>
    <p>Git Workload on ext4 on HDD</p>
  </div>
  <div class="page">
    <p>Ti m</p>
    <p>e in</p>
    <p>s ec</p>
    <p>on ds</p>
    <p>/ G</p>
    <p>iB</p>
    <p>Git pulls performed</p>
    <p>Lower is better</p>
    <p>Our Setup: Cold Cache, 3.4 GHz Quad Core, 4GiB RAM, 20 GiB HDD partition - SATA 7200 RPM</p>
    <p>Git Workload on ext4 on HDD</p>
  </div>
  <div class="page">
    <p>Ti m</p>
    <p>e in</p>
    <p>s ec</p>
    <p>on ds</p>
    <p>/ G</p>
    <p>iB</p>
    <p>Git pulls performed</p>
    <p>Lower is better</p>
    <p>Our Setup: Cold Cache, 3.4 GHz Quad Core, 4GiB RAM, 20 GiB HDD partition - SATA 7200 RPM</p>
    <p>Git Workload on ext4 on HDD</p>
  </div>
  <div class="page">
    <p>Ti m</p>
    <p>e in</p>
    <p>s ec</p>
    <p>on ds</p>
    <p>/ G</p>
    <p>iB</p>
    <p>Git pulls performed</p>
    <p>Lower is better</p>
    <p>Our Setup: Cold Cache, 3.4 GHz Quad Core, 4GiB RAM, 20 GiB HDD partition - SATA 7200 RPM</p>
    <p>Git Workload on ext4 on HDD</p>
  </div>
  <div class="page">
    <p>How can we be sure this slowdown is due to aging?</p>
  </div>
  <div class="page">
    <p>Im not old. My directory structure</p>
    <p>is different!</p>
    <p>How can we be sure this slowdown is due to aging?</p>
  </div>
  <div class="page">
    <p>File System Rejuvenation</p>
    <p>Idea: Copy same logical state to a new file system  After each 100 pulls  Compare grep cost</p>
  </div>
  <div class="page">
    <p>Aging ext4 with Git on HDD</p>
    <p>Ti m</p>
    <p>e in</p>
    <p>s ec</p>
    <p>on ds</p>
    <p>/ G</p>
    <p>iB</p>
    <p>Git pulls performed</p>
    <p>Aged</p>
    <p>Unaged</p>
    <p>Lower is better</p>
  </div>
  <div class="page">
    <p>Ti m</p>
    <p>e in</p>
    <p>s ec</p>
    <p>on ds</p>
    <p>/ G</p>
    <p>iB</p>
    <p>Git pulls performed</p>
    <p>Aged</p>
    <p>Unaged</p>
    <p>Smaller average file size makes the unaged 60% slower</p>
    <p>Lower is better</p>
    <p>Aging ext4 with Git on HDD</p>
  </div>
  <div class="page">
    <p>Is this specific to ext4?</p>
  </div>
  <div class="page">
    <p>Btrfs</p>
    <p>F2FS</p>
    <p>ZFS</p>
    <p>XFS</p>
    <p>weird unaged behavior on XFS</p>
    <p>Lower is better</p>
    <p>Aging other file systems with Git on HDD</p>
  </div>
  <div class="page">
    <p>Will SSDs save us?</p>
  </div>
  <div class="page">
    <p>Git Workload on XFS on SSD</p>
    <p>Ti m</p>
    <p>e in</p>
    <p>s ec</p>
    <p>on ds</p>
    <p>/ G</p>
    <p>iB</p>
    <p>Git pulls performed</p>
    <p>Aged</p>
    <p>Unaged</p>
    <p>Lower is better</p>
  </div>
  <div class="page">
    <p>Git Workload on SSD Btrfs</p>
    <p>ext4</p>
    <p>ZFS</p>
    <p>F2FS</p>
    <p>Lower is better</p>
  </div>
  <div class="page">
    <p>Btrfs</p>
    <p>ext4</p>
    <p>ZFS</p>
    <p>F2FS</p>
    <p>Lower is better</p>
    <p>ZFS and ext4 slow down with smaller average file size</p>
    <p>Git Workload on SSD</p>
  </div>
  <div class="page">
    <p>Btrfs</p>
    <p>ext4</p>
    <p>ZFS</p>
    <p>F2FS</p>
    <p>Lower is better</p>
    <p>ZFS and ext4 slow down with smaller average file size</p>
    <p>Git Workload on SSD</p>
  </div>
  <div class="page">
    <p>Aging is real</p>
    <p>Btrfs, ext4, F2FS, XFS, ZFS all age  Up to 22x on HDD  Up to 2x on SSD</p>
    <p>Git lets us replay a real development history  Induce aging by simulating years of use  Takes between 5 hours and 2 days  Download these scripts from betrfs.org</p>
  </div>
  <div class="page">
    <p>How can we prevent aging?</p>
  </div>
  <div class="page">
    <p>Intrafile Fragmentation: Avoid breaking large files into small fragments</p>
    <p>Design goals to address fragmentation</p>
  </div>
  <div class="page">
    <p>Intrafile Fragmentation: Avoid breaking large files into small fragments</p>
    <p>Interfile Fragmentation: Cluster logically related small files</p>
    <p>Design goals to address fragmentation</p>
  </div>
  <div class="page">
    <p>Intrafile Fragmentation: Avoid breaking large files into small fragments</p>
    <p>Interfile Fragmentation: Cluster logically related small files</p>
    <p>Design goals to address fragmentation</p>
    <p>What do we mean by small?</p>
  </div>
  <div class="page">
    <p>Read Length vs Bandwidth</p>
    <p>B an</p>
    <p>dw id</p>
    <p>th in</p>
    <p>M iB</p>
    <p>/s ec</p>
    <p>Sequential Read Length</p>
    <p>iB</p>
    <p>iB</p>
    <p>iB 1M</p>
    <p>iB 2M</p>
    <p>iB 4M</p>
    <p>iB 8M</p>
    <p>iB 16</p>
    <p>Mi B</p>
    <p>B 64</p>
    <p>Mi B</p>
    <p>iB</p>
    <p>iB</p>
    <p>HDD</p>
    <p>Higher is better</p>
    <p>I/O Size vs Effective Bandwidth</p>
  </div>
  <div class="page">
    <p>Read Length vs Bandwidth</p>
    <p>B an</p>
    <p>dw id</p>
    <p>th in</p>
    <p>M iB</p>
    <p>/s ec</p>
    <p>Sequential Read Length</p>
    <p>iB</p>
    <p>iB</p>
    <p>iB 1M</p>
    <p>iB 2M</p>
    <p>iB 4M</p>
    <p>iB 8M</p>
    <p>iB 16</p>
    <p>Mi B</p>
    <p>B 64</p>
    <p>Mi B</p>
    <p>iB</p>
    <p>iB</p>
    <p>SSD</p>
    <p>HDD</p>
    <p>Higher is better</p>
    <p>I/O Size vs Effective Bandwidth</p>
  </div>
  <div class="page">
    <p>Read Length vs Bandwidth</p>
    <p>B an</p>
    <p>dw id</p>
    <p>th in</p>
    <p>M iB</p>
    <p>/s ec</p>
    <p>Sequential Read Length</p>
    <p>iB</p>
    <p>iB</p>
    <p>iB 1M</p>
    <p>iB 2M</p>
    <p>iB 4M</p>
    <p>iB 8M</p>
    <p>iB 16</p>
    <p>Mi B</p>
    <p>B 64</p>
    <p>Mi B</p>
    <p>iB</p>
    <p>iB</p>
    <p>SSD</p>
    <p>HDD</p>
    <p>Higher is better</p>
    <p>I/O Size vs Effective Bandwidth</p>
  </div>
  <div class="page">
    <p>Intrafile Fragmentation: Avoid breaking large files into small fragments</p>
    <p>Interfile Fragmentation: Cluster logically related small files</p>
    <p>Design goals to address fragmentation</p>
    <p>Prediction: 4MiB chunks will substantially reduce aging</p>
  </div>
  <div class="page">
    <p>Testing this with Btrfs</p>
  </div>
  <div class="page">
    <p>Metadata and small files are stored in a B-tree</p>
    <p>Large files get written elsewhere</p>
    <p>Big File Bigger File Large File</p>
    <p>Btrfs: Larger leaves = less aging?</p>
  </div>
  <div class="page">
    <p>Ti m</p>
    <p>e in</p>
    <p>s ec</p>
    <p>on ds</p>
    <p>/ G</p>
    <p>iB</p>
    <p>Git pulls performed</p>
    <p>Bigger leaves does mean less aging!</p>
    <p>Btrfs allows leaf size to be configured between 4KiB and 64KiB.</p>
    <p>lower is better</p>
    <p>Btrfs Leaf Size Performance</p>
  </div>
  <div class="page">
    <p>Cost of large leaves</p>
    <p>Why dont B-tree usually have big leaves?</p>
    <p>Because making small changes to big leaves causes a lot of writing</p>
  </div>
  <div class="page">
    <p>Btrfs Leaf Size Writing</p>
    <p>B lo</p>
    <p>ck s</p>
    <p>W rit</p>
    <p>te n</p>
    <p>in T</p>
    <p>ho us</p>
    <p>an ds</p>
    <p>Git pulls performed</p>
    <p>more writing</p>
    <p>lower is better</p>
    <p>Btrfs allows leaf size to be configured between 4KiB and 64KiB.</p>
  </div>
  <div class="page">
    <p>B-Tree Performance Tradeoff</p>
    <p>More Aging</p>
    <p>Less Writing</p>
    <p>Large LeavesSmall Leaves</p>
    <p>Less Aging</p>
    <p>More Writing</p>
  </div>
  <div class="page">
    <p>B-Tree Performance Tradeoff</p>
    <p>More Aging</p>
    <p>Less Writing</p>
    <p>Large LeavesSmall Leaves</p>
    <p>Less Aging</p>
    <p>More Writing</p>
    <p>This tradeoff is inherent to B-trees</p>
  </div>
  <div class="page">
    <p>Other File System Types</p>
    <p>Update-in-place</p>
    <p>Log-structured</p>
    <p>Write-Optimized</p>
    <p>Must other types of file systems age?</p>
    <p>See the paper</p>
    <p>BtrFS</p>
  </div>
  <div class="page">
    <p>BtrFS</p>
    <p>BtrFS packs small logically related data in a B-tree with 4MiB nodes.</p>
  </div>
  <div class="page">
    <p>BtrFS</p>
    <p>BtrFS packs small logically related data in a B-tree with 4MiB nodes.</p>
  </div>
  <div class="page">
    <p>BtrFS</p>
    <p>BtrFS packs small logically related data in a B-tree with 4MiB nodes.</p>
    <p>B-trees batch updates which allows leaves to be big without</p>
    <p>increasing the amount of writing</p>
  </div>
  <div class="page">
    <p>Ti m</p>
    <p>e in</p>
    <p>s ec</p>
    <p>on ds</p>
    <p>/ G</p>
    <p>iB</p>
    <p>Git pulls performed</p>
    <p>Git on BetrFS on HDD</p>
    <p>Lower is better</p>
    <p>BetrFS</p>
    <p>XFS</p>
    <p>ext4/F2FS/ZFS Btrfs</p>
    <p>F2FS</p>
    <p>ZFS</p>
    <p>ext4 Btrfs</p>
    <p>XFS</p>
    <p>Aged  Unaged</p>
  </div>
  <div class="page">
    <p>Ti m</p>
    <p>e in</p>
    <p>s ec</p>
    <p>on ds</p>
    <p>/ G</p>
    <p>iB</p>
    <p>Git pulls performed</p>
    <p>Lower is better</p>
    <p>BetrFS</p>
    <p>Git on BetrFS on HDD</p>
    <p>Aged  Unaged</p>
    <p>Btrfs</p>
    <p>F2FS ext4</p>
    <p>ZFS</p>
  </div>
  <div class="page">
    <p>Ti m</p>
    <p>e in</p>
    <p>s ec</p>
    <p>on ds</p>
    <p>/ G</p>
    <p>iB</p>
    <p>Git pulls performed</p>
    <p>Lower is better</p>
    <p>BetrFS</p>
    <p>Git on BetrFS on HDD</p>
    <p>Aged  Unaged</p>
    <p>Btrfs</p>
    <p>F2FS ext4</p>
    <p>ZFS</p>
  </div>
  <div class="page">
    <p>And SSDs?</p>
  </div>
  <div class="page">
    <p>Ti m</p>
    <p>e in</p>
    <p>s ec</p>
    <p>on ds</p>
    <p>/ G</p>
    <p>iB</p>
    <p>Git pulls performed</p>
    <p>Lower is better</p>
    <p>Btrfs</p>
    <p>Aged  Unaged</p>
    <p>BetrFS</p>
    <p>ZFS</p>
    <p>ext4</p>
    <p>XFS F2FS</p>
    <p>Btrfs</p>
    <p>ZFS</p>
    <p>F2FS/XFS/ext4</p>
    <p>Git on BetrFS on SSD</p>
  </div>
  <div class="page">
    <p>How to prevent aging</p>
    <p>Batch updates to avoid too much writing</p>
    <p>Rewrite to keep related data in large blocks</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Aging is avoidable</p>
    <p>Its easy to age file systems quickly and substantially</p>
  </div>
  <div class="page">
    <p>Thank you!</p>
    <p>Alex Conway</p>
    <p>alexander.conway@rutgers.edu</p>
    <p>betrfs.org</p>
  </div>
</Presentation>
