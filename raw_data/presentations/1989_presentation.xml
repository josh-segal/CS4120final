<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Intel</p>
    <p>Navigating the Visual Fog: Analyzing and Managing Visual Data from Edge to Cloud</p>
    <p>Ragaad Altarawneh, Christina Strong, Luis Remis, Pablo Muoz, Addicam Sanjay, Srikanth Kambhatla</p>
  </div>
  <div class="page">
    <p>Intel Labs Intel Confidential  Internal Use Only</p>
    <p>Why Visual Data</p>
    <p>Motivation:</p>
    <p>Over 70 exabytes of live video expected to be flowing over the Internet by 2021</p>
    <p>Video analytics is becoming an increasingly important source for deriving actionable insights in various use cases like digital surveillance, retail analytics, factory automation, and smart cities.</p>
    <p>Challenges:</p>
    <p>Despite of its abundance and ubiquity, visual data is still significantly under-utilized due to the computational requirements and the outstanding volume of collected data.</p>
    <p>Todays solutions have made advances in converting video data into actionable information at scale, these solutions often have fixed function capabilities and are limited to the use of cloud infrastructure</p>
  </div>
  <div class="page">
    <p>Intel Labs Intel Confidential  Internal Use Only 3</p>
    <p>Clouds vs Edge Processing ( Retail Analytics as an example)  Providing shopper insights requires far more functionality, as well as flexibility, than simply</p>
    <p>counting people ( e.g. summarize a list of interesting areas for a certain group of people. E.g. females vs males).</p>
    <p>However, because of the limited bandwidth from edge data sources such as cameras, it is often not feasible to send all video streams to the cloud.</p>
    <p>While this presents a problem in using cloud infrastructure alone, it is also impractical to rely solely on edge devices, due to the significant computational resource requirements of visual data.</p>
    <p>Edge computing has the additional drawback of not being economically scalable, as having on-premise servers translates to recurring expenses to the users.</p>
  </div>
  <div class="page">
    <p>Edge-to-cloud design of E2E streaming data management framework.</p>
    <p>Edge Processing Cloud Processing</p>
  </div>
  <div class="page">
    <p>Edge Side : Streaming Analytics Framework (SAF) https://github.com/viscloud/saf</p>
    <p>SAF is an open source framework for creating and running video analytics workloads that provides low-latency video processing by incorporating edge-to-cloud deployment with E2E scheduling.</p>
    <p>Bottom up programming for easy workload partitioning and scheduling</p>
    <p>Processor modules based on OpenVINO (aka CVSDK), Caffe, TensorFlow, etc.</p>
    <p>Build on CVSDK, NCSDK, MKL, etc. for optimized Intel hardware utilization</p>
  </div>
  <div class="page">
    <p>Cloud Side: Visual Data Management System (VDMS) https://github.com/IntelLabs/vdms</p>
    <p>Efficient completion of complex metadata queries</p>
    <p>Using our in-house Graph Database</p>
    <p>Metadata stored in (persistent) memory</p>
    <p>Efficient visual data retrieval + pre-processing</p>
    <p>Images</p>
    <p>Threshold, crop, resize, or basic augmentation on images on the server side</p>
    <p>Visual Descriptors</p>
    <p>Similarity search performed on the fly</p>
    <p>Videos</p>
    <p>Straightforward client API to enable both metadata and data retrieval</p>
    <p>Queries submitted as JSON (using Python or C++)</p>
    <p>General Purpose Original image (left) and the result of query</p>
  </div>
  <div class="page">
    <p>Edge + Clouds: E2E Context Aware Application</p>
    <p>While SAF can perform analytics and VDMS can store data and metadata, it is also necessary to have an application that provides context to the analyzed data.</p>
    <p>For SAF, the application should be responsible for indicating which operators are needed and how they should be connected in order to achieve its objective.</p>
    <p>The application should identify what its metadata schema would be in order to add entities with appropriate labels and properties to VDMS (e.g. Customer, Product)</p>
    <p>Further, the application can provide additional functionality that the basic versions of SAF and VDMS may not support ( FV summarizations, FV filteration)</p>
  </div>
  <div class="page">
    <p>Smart Retail Application Logic ( User Queries)</p>
    <p>We start the project by identifying a list of queries that drive the implementation</p>
    <p>This step was important because we aimed to define the required schema in which we will store the data.</p>
    <p>Examples of such queries:</p>
    <p>Visits per Store: provides retailers with information on how many people visited the store in a given time range.</p>
    <p>Trip Summary: lists all the areas a customer visited in a given trip. This can help with more targeted advertisements or understanding behaviors</p>
    <p>Hotspot Identification: identifies areas in which the largest number of customers have gathered. This can help store managers with ways to rearrange the store and spread out products to enable ease of viewing.</p>
    <p>Returned Customer Identification: based on a given FV, identify if this person is a returned customer or not.</p>
  </div>
  <div class="page">
    <p>End to End Context Aware Application- Data Types</p>
    <p>Constructed Data : related to the store configuration, number of cameras, and list of areas, association between cameras and areas.</p>
    <p>Dynamic Data: this is the data that being generated by the SAF pipeline. The data will be fed to VDMS in real-time. It is the job of the retail application logic to make sense of this data and build the schema that VDMS understands.</p>
    <p>Enhanced Data: this data is created by the application logic. It is very important to link between the contextual data and the dynamic data. Example of that is the Visit node in our schema.</p>
  </div>
  <div class="page">
    <p>Retail Smart Application Logic: Building the Schema</p>
    <p>#Store --------Name: Walmart Location: 2111 NE</p>
    <p>#Area --------</p>
    <p>Name: Food</p>
    <p>#Product --------</p>
    <p>#Area --------Name: Sport</p>
    <p>#Camera --------</p>
    <p>CamID: 23</p>
    <p>Person ID:</p>
    <p>FV ID:1234ABCDEFR</p>
    <p>S1234 +Blob</p>
    <p>Bounding Box X: Y:</p>
    <p>Width: Height</p>
    <p>Visit Starting Time Ending Time</p>
    <p># H</p>
    <p>a s</p>
    <p># R</p>
    <p>e p re</p>
    <p>s e n ts</p>
    <p># C</p>
    <p>o n</p>
    <p>d u</p>
    <p>cts</p>
    <p>#To</p>
    <p>#To</p>
  </div>
  <div class="page">
    <p>Visit Node Building through Re-Identification of a Person</p>
    <p>Re-identification is the process by which a collection of feature vectors is searched for a query feature vector, usually corresponding to a person or object, to establish if there is a similar feature vector in the collection.</p>
    <p>The similarity is usually expressed and measured in terms of geometric distances (euclidean distance, inner product, etc). This operation is also called feature matching, and the similarity search is often performed using a k-nearest neighbor (knn) algorithm.</p>
    <p>VDMS natively supports the ability to perform efficient feature matching, thus enabling this application to perform re-identification of a person based on extracted feature vectors from SAF</p>
  </div>
  <div class="page">
    <p>Re-Identification of a Person</p>
    <p>For each new FV, find_Fv similar(Saf_FV)</p>
    <p>If (_distance &lt;=threshold)</p>
    <p>Add FV as alias to the stored person</p>
    <p>If( _distance&gt;threshold)</p>
    <p>Add new person and new FV node</p>
  </div>
  <div class="page">
    <p>Intel Labs Intel Confidential  Internal Use Only</p>
    <p>Area 1: Entranc e</p>
    <p>Area 2: Children clothes</p>
    <p>Area n: Women clothes</p>
    <p>Area 3: Men clothes</p>
    <p>Camera 1 Covering range</p>
    <p>Camera 2 Covering range</p>
    <p>Camera 5 Covering range</p>
    <p>Camera 3 Covering range</p>
    <p>Camera 4 Covering range</p>
    <p>Area 4: Exit location : x, y</p>
    <p>Store configured</p>
    <p>Shoppers are tracked by SAF</p>
    <p>Store and Customers metadata in VDMS</p>
    <p>Feature vectors as data in VDMS</p>
    <p>Shopper Insights: SAF &amp; VDMS</p>
  </div>
  <div class="page">
    <p>Retail PoC  Currnet Evaluation Results</p>
    <p>30 SAF pipelines running simultaneously for 2 hours, and writing metadata and extracted FV blob to VDMS.</p>
  </div>
  <div class="page">
    <p>Intel Labs Intel Confidential  Internal Use Only</p>
    <p>Results:</p>
    <p>*Platform: Broadwell  2x Xeon Processor E5-2699 v4  22 Core per processor</p>
    <p>Transaction from the edge to cloud/sec</p>
    <p>M a</p>
    <p>tc h</p>
    <p>in g</p>
    <p>T h</p>
    <p>ro u</p>
    <p>g h</p>
    <p>p u</p>
    <p>t</p>
    <p>Number of Cameras</p>
    <p>Matching FV from Edge to the cloud/second</p>
  </div>
  <div class="page">
    <p>Discussion and Open Issues</p>
    <p>Feature vector summarizing techniques, where it should happen?</p>
    <p>Re-identification of a person identity based on changing feature vectors</p>
    <p>Preserve privacy: collecting meta-data about people including there feature vectors together with the actual frame of the person might expose extra information about the person</p>
  </div>
  <div class="page">
    <p>Intel Confidential  Internal Use Only</p>
  </div>
</Presentation>
