<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Rahul Singh, David Irwin, Prashant Shenoy University of Massachusetts Amherst</p>
    <p>K.K. Ramakrishnan</p>
    <p>AT&amp;T Research</p>
    <p>Yank: Enabling Green Data Centers to Pull the Plug</p>
  </div>
  <div class="page">
    <p>Data Center Reliability</p>
    <p>q Infrastructure designed to be highly available  Applications expect stable servers</p>
    <p>Highly redundant power infrastructure  Availability is expensive</p>
    <p>q Alternative approach  Relax strict stability assumption  Design low-cost HA techniques to compensate</p>
  </div>
  <div class="page">
    <p>Transient Servers</p>
    <p>q Transiency Scenarios  Spot instances in Amazon Cloud  Server downtime due to power outage  Use of intermittent renewables</p>
    <p>q New abstraction: Transient Server  Unpredictable availability  Receive advance warning of termination</p>
  </div>
  <div class="page">
    <p>Yank Problem Statement</p>
    <p>q Introduce Transient Server Abstraction q Design Yank: System Support for Transient Servers q Apply Yank to Green Data Centers</p>
    <p>How to maintain application availability while allowing data centers to transparently</p>
    <p>use transient servers?</p>
  </div>
  <div class="page">
    <p>Supporting Transient Servers</p>
    <p>Transient Server</p>
    <p>Application</p>
    <p>Transient VM 1</p>
    <p>Transient VM 2</p>
    <p>Stable Server</p>
    <p>Transient VM 1</p>
    <p>Transient VM 2</p>
    <p>q Two Ways of Using Transient Servers  Modify Application</p>
    <p>Easy  Batch Applications  Hard  Interactive (Web) Applications</p>
    <p>System Support q Yank: System Support for Transiency</p>
    <p>Given warning, transfer transient VMs to stable server  Must complete transfer within warning time</p>
    <p>Application Application Application</p>
  </div>
  <div class="page">
    <p>Strawman Approaches</p>
    <p>q Live Migration  Xen Live Migration [NSDI 2005]  Pros: Low Overhead  Cons: Large Warning Time (~70-100secs)</p>
    <p>q High Availability (HA) Solutions  Remus [NSDI 2008]  Pros: Low Warning Time  Cons: High Overhead, High Hardware Cost</p>
    <p>Low Warning Time High Warning Time</p>
    <p>HA Live Migration</p>
    <p>High Overhead Low Overhead</p>
  </div>
  <div class="page">
    <p>Yanks Approach</p>
    <p>q Yank Covers Entire Spectrum of Warning Time  Low Warning Time -&gt; Equivalent to HA  High Warning Time -&gt; Equivalent to Live Migration</p>
    <p>q Adapts to Warning Time  Overhead depends on the warning time</p>
    <p>Low Warning Time High Warning Time</p>
    <p>HA Live Migration Yank</p>
    <p>High Overhead Low Overhead</p>
  </div>
  <div class="page">
    <p>Yank High-Level Design</p>
    <p>Snapshot Manager</p>
    <p>Transient VM2</p>
    <p>Transient Server</p>
    <p>Backup Server</p>
    <p>Backup Engine</p>
    <p>In-Memory Queues</p>
    <p>Snapshots on Disk</p>
    <p>Stable Server</p>
    <p>Restoration Service</p>
    <p>Snapshot Manager</p>
    <p>Transient VM1</p>
    <p>Transient Server Stable Server</p>
    <p>Restoration Service</p>
    <p>Warning</p>
    <p>Warning</p>
  </div>
  <div class="page">
    <p>Snapshot Manager</p>
    <p>q Limit on dirty state sent within warning time q One option: one threshold</p>
    <p>Send when [size of dirty state &lt; limit] q Alternative: two thresholds</p>
    <p>Upper threshold -&gt; Synchronous send with buffering  Lower threshold -&gt; Asynchronous send with no buffering</p>
    <p>Transient VM</p>
    <p>Upper Threshold</p>
    <p>Lower Threshold</p>
    <p>Snapshot Manager</p>
  </div>
  <div class="page">
    <p>Backup Engine</p>
    <p>q Per-VM in-memory queues for receiving updates  Enables fast acknowledgements  Write VM memory state to disk in background</p>
    <p>q Highly multiplexed  Reduces extra hardware/power required for Yank</p>
    <p>Transient VM</p>
    <p>Transient VM</p>
    <p>Backup Server</p>
  </div>
  <div class="page">
    <p>Restoration Service</p>
    <p>q Restoration service on stable server 1. Receives in-memory queue+snapshot in parallel 2. Applies in-memory queue to snapshot 3. Restores VM using hypervisors restoration command</p>
    <p>Backup Server</p>
    <p>Stable Server</p>
    <p>Restoration Service</p>
    <p>Restored VM</p>
  </div>
  <div class="page">
    <p>Transient Servers in Green Data Centers</p>
    <p>On-Site Renewables Grid Energy</p>
    <p>ATS ATS</p>
    <p>UPS ( Smaller Capacity ) UPS</p>
    <p>Transient Servers Stable Servers</p>
  </div>
  <div class="page">
    <p>Experimental Setup</p>
    <p>q Implementation  Snapshot Manager  modification to Remus in Xen  Backup Engine  user level Python and C code  Restoration Service  C code</p>
    <p>q Cluster of Blade Servers  4GB RAM, 2.13 GHz Processor</p>
    <p>q Benchmark Applications  TPC-W: Online bookstore</p>
    <p>q Renewable Energy generation  Solar/Wind Generation Traces from UMass Deployment</p>
  </div>
  <div class="page">
    <p>Exploiting Warning Time</p>
    <p>TPC-W Data Transferred TPC-W Response Time</p>
    <p>with just 5 second warning</p>
    <p>q 4GB backup server supports 15 transient VMS</p>
  </div>
  <div class="page">
    <p>Solar Power Driven Transiency</p>
    <p>q Yank masks applications from transiency due to changing power availability</p>
    <p>Transition to Stable Server</p>
    <p>Transition to Transient</p>
    <p>Server</p>
    <p>Re sp on</p>
    <p>se T im</p>
    <p>e (m</p>
    <p>se cs )</p>
    <p>Time (seconds)</p>
    <p>Grid</p>
    <p>Solar</p>
    <p>Ba5ery</p>
    <p>Down;me</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>q Transient Servers  Servers that terminate after a warning  Applicable to many scenarios</p>
    <p>q Yank  System support for transient servers  Virtualization-layer solution</p>
    <p>q Evaluation</p>
    <p>Low overheads  performance, hardware, power  Hide transiency due to renewable power  Ongoing Work: Apply to Amazon spot instances</p>
  </div>
  <div class="page">
    <p>Questions?</p>
  </div>
</Presentation>
