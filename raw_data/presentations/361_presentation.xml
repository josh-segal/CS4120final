<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>USENIX WebApps 2011</p>
    <p>Resource Provisioning of Web Applications in Heterogeneous Clouds</p>
    <p>Jiang Dejun Vrije University &amp; Tsinghua University Guillaume Pierre Vrije University Chi-Hung Chi Tsinghua University</p>
  </div>
  <div class="page">
    <p>USENIX WebApps 2011 2</p>
    <p>Background  Web applications play an important role in our</p>
    <p>daily life.  Web application performance is one primary</p>
    <p>concern of application providers.  Users leave a website if it responds slowly  Application providers define Service Level Objectives</p>
    <p>(e.g. average maximum response time)  Dynamic resource provisioning helps to guarantee</p>
    <p>Web application performance  Web application hosting moves to Cloud for elastic</p>
    <p>resource usage</p>
  </div>
  <div class="page">
    <p>USENIX WebApps 2011 3</p>
    <p>Motivation  Cloud resource is heterogeneous</p>
    <p>Heterogeneous virtual machine types  Heterogeneous performance of same type</p>
  </div>
  <div class="page">
    <p>USENIX WebApps 2011 4</p>
    <p>Motivation(cont.)  Cloud resource is heterogeneous</p>
    <p>Resource heterogeneity is a long-term observation</p>
    <p>Resource heterogeneity is observed cross Clouds (e.g. EC2, Rackspace )</p>
  </div>
  <div class="page">
    <p>USENIX WebApps 2011 5</p>
    <p>Motivation(cont.)  Cloud resource is heterogeneous</p>
    <p>Current resource provisioning in Clouds (e.g. EC2)</p>
  </div>
  <div class="page">
    <p>USENIX WebApps 2011 6</p>
    <p>Problem statement  How to provision Web applications in Clouds</p>
    <p>If an instance with fast CPU, it may be better to use it as an application server</p>
    <p>If an instance with fast IO, it may be better to use it as a database server</p>
    <p>We do not know how to use the new instance but we need to make a decision</p>
    <p>Difficulties  Unpredictable performance of new instances  Different performance benefits on different tiers of</p>
    <p>a new instance</p>
  </div>
  <div class="page">
    <p>USENIX WebApps 2011 7</p>
    <p>Intuitive solutions  Ignore the heterogeneous resource feature</p>
    <p>Apply current resource provisioning algorithm to make decision</p>
    <p>Profile new instances at each tier to make decision</p>
    <p>Deploy new instance as application server is fast  Deploy new instance as database server costs.</p>
    <p>e.g. DB size: 1.6GB. Dump: 190s; Transfer: 64s; Import 1530s. Total 30 min</p>
    <p>This approach is inefficient and time-consuming</p>
  </div>
  <div class="page">
    <p>USENIX WebApps 2011 8</p>
    <p>Outline  Background  Motivation  Problem statement  Intuitive solutions  Our proposal  Experimental evaluation  Conclusion</p>
  </div>
  <div class="page">
    <p>USENIX WebApps 2011 9</p>
    <p>Our proposal  Performance correlation</p>
    <p>Performance profile of a given tier is related to its resource utilization</p>
    <p>Performance profiles of two different tiers (with same type resource demand) can be highly correlated</p>
  </div>
  <div class="page">
    <p>USENIX WebApps 2011 10</p>
    <p>Our proposal(cont.)  Performance prediction</p>
    <p>Step 1: Employ reference applications as the calibration base</p>
    <p>Step 2: Correlate resource demands of reference applications and tier services on the calibration instance</p>
    <p>Step 3: Profile new instances with reference applications</p>
    <p>Step 4: Derive performance of tier services on new instance</p>
  </div>
  <div class="page">
    <p>USENIX WebApps 2011 11</p>
    <p>Our proposal (cont.)  Resource provisioning</p>
    <p>Obtain performance profiles of new instances</p>
    <p>Apply ''what-if'' analysis to predict the performance of the whole application if a new instance is added to a tier</p>
  </div>
  <div class="page">
    <p>USENIX WebApps 2011 12</p>
    <p>Experimental evaluation  Experiment setup</p>
    <p>Reference applications</p>
    <p>a CPU-intensive application: CPU(ref)</p>
    <p>an IO-intensive application: IO(ref)</p>
    <p>Tested application: TPC-W (a benchmark modeling the online bookstore)</p>
    <p>Weighted round-robin load balancer</p>
    <p>All experiments run on Amazon EC2</p>
  </div>
  <div class="page">
    <p>USENIX WebApps 2011 13</p>
    <p>Experimental evaluation  Weighted round-robin load balancer</p>
    <p>Dispatch requests among virtual instances</p>
    <p>Support sticky sessions</p>
  </div>
  <div class="page">
    <p>USENIX WebApps 2011 14</p>
    <p>Experimental evaluation  Exp1: importance of adaptive load balancing</p>
    <p>Adaptive load balancing can adapt to heterogeneous capacities of instances and enable equal response times</p>
  </div>
  <div class="page">
    <p>USENIX WebApps 2011 15</p>
    <p>Experimental evaluation  Exp2: effectiveness of provisioning TPC-W</p>
    <p>We have different adaptions in two groups of experiments when provisioning TPC-W on EC2 due to resource heterogeneity</p>
  </div>
  <div class="page">
    <p>USENIX WebApps 2011 16</p>
    <p>Experimental evaluation  Exp3: comparison with other techniques</p>
    <p>Our system achieves higher throughput using the same instances compared with other provisioning techniques</p>
  </div>
  <div class="page">
    <p>USENIX WebApps 2011 17</p>
    <p>Conclusion  Performance guarantees for Web applications are</p>
    <p>important  Cloud is heterogeneous: current resource</p>
    <p>provisioning techniques are not suitable  We propose to correlate resource demands of hosted</p>
    <p>applications with reference applications.  One can derive the performance of Web application on</p>
    <p>new instances by just profiling new ones with reference applications.</p>
    <p>Thank you!</p>
  </div>
</Presentation>
