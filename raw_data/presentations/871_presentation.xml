<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>FlexECC: Partially Relaxing ECC of MLC SSD for Better Cache Performance</p>
    <p>Ping Huang, Pradeep Subedi, Xubin He, Shuang He and Ke Zhou</p>
    <p>Department of Electrical and Computer Engineering, Virginia Commonwealth University</p>
    <p>Richmond, VA, USA</p>
    <p>Wuhan National Lab for Optoelectronics, Huazhong University of Science and Technology Wuhan, Hubei, China</p>
    <p>Presentation at the 2014 USENIX ATC</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background and Motivation  Cache-oriented SSD Design</p>
    <p>Experimental Results</p>
    <p>Conclusion</p>
    <p>USENIX ATC'2014</p>
  </div>
  <div class="page">
    <p>USENIX ATC'2014 3</p>
    <p>SSDs are intruding:</p>
    <p>performance</p>
    <p>energy</p>
    <p>feature size</p>
    <p>features:</p>
  </div>
  <div class="page">
    <p>The Main Enabling Factors:</p>
    <p>Technology Scaling: flash cells are becoming smaller, coming to 20nm</p>
    <p>Multi-bit technique: each cell is designed to hold</p>
    <p>multi bits information. SLCMLCTLC (6 bits per cell)</p>
    <p>We have witnessed the Moores law in the</p>
    <p>per-die capacity so far [Chien, Computer2013]</p>
    <p>USENIX ATC'2014 4</p>
  </div>
  <div class="page">
    <p>The Bleak Future  More difficult to read and write small cells</p>
    <p>Unpredictable Performance</p>
    <p>Worse cell-interference</p>
    <p>Reduced lifetime</p>
    <p>Decreased cell retention time</p>
    <p>USENIX ATC'2014 5</p>
  </div>
  <div class="page">
    <p>Increased Latencies</p>
    <p>USENIX ATC'2014 6</p>
    <p>Grupp et al. The Bleak Future of NAND Flash Memory. FAST2012</p>
  </div>
  <div class="page">
    <p>USENIX ATC'2014 7</p>
    <p>Decreased Lifetime and Reliability</p>
    <p>Grupp et al. The Bleak Future of NAND Flash Memory. FAST2012</p>
  </div>
  <div class="page">
    <p>Error-tolerant Schemes  Hamming Code</p>
    <p>Detect 2 bit errors and correct 1 bit error  Bose-Chaudhuri-Hocquengham (BCH)</p>
    <p>Widely deployed in commercial SSDs Correction capability increases across generations Tens of micro second decoding overhead</p>
    <p>Low-density parity-check (LDPC)[Zhao, FAST2013]</p>
    <p>Tolerate more errors at low cost Emerging to accommodate increasing error rates High decoding overhead (in the order of ms)</p>
    <p>More advanced codes are desired</p>
    <p>USENIX ATC'2014 8</p>
  </div>
  <div class="page">
    <p>USENIX ATC'2014 9</p>
    <p>Cai et al. Flash Correct-and-Refresh: Retention-Aware Error Management for Increased Flash Memory Lifetime. ICCD2012</p>
    <p>SLC 5x-nm MLC 3x-nm MLC 2x-nm MLC 3-bit-MLC</p>
    <p>P / E</p>
    <p>C yc</p>
    <p>le E</p>
    <p>n d</p>
    <p>u ra</p>
    <p>n ce</p>
    <p>Error Correction Capability (per 1 kB of data)</p>
    <p>The Effects of Flash Scaling</p>
  </div>
  <div class="page">
    <p>Increasing Overhead</p>
    <p>USENIX ATC'2014 10</p>
    <p>Tolerating 5 bit error out of 1KB data imposes 10 micro seconds, and the overhead becomes 17.6 us when 67 bits are tolerable [Sun, SiPS 2006].</p>
  </div>
  <div class="page">
    <p>Effects on Flash Operations</p>
    <p>USENIX ATC'2014 11</p>
    <p>Encoding Latency(Write)</p>
    <p>Decoding Latency(Read)</p>
    <p>arriving data encode</p>
    <p>page data</p>
    <p>ECC info</p>
    <p>page data and ECC info Verify decode</p>
    <p>return the data fail</p>
    <p>pass</p>
  </div>
  <div class="page">
    <p>Avoid the overhead  Flash-based SSDs are mainly used as cache  Cache-Oriented SSD design idea: for cache usage, we can avoid ECC overhead to improve</p>
    <p>performance by selectively using EDC, without losing reliability</p>
    <p>Techniques Employed  identify the different requirements of cache blocks</p>
    <p>provide interfaces to help hint passing</p>
    <p>partition SSD cache into EDC(CRC) and ECC(BCH) regions</p>
    <p>utilize a programmable memory controller</p>
    <p>perform scrubbing to prefetch corrupted blocks</p>
    <p>USENIX ATC'2014 12</p>
  </div>
  <div class="page">
    <p>Main Interfaces Dirty Write  new data from upper-layer application  ECC applied</p>
    <p>Clean Write  populating cache write (e.g., cache misses)  EDC applied</p>
    <p>Host Read  read requests from application  EDC or ECC applied</p>
    <p>Flush Read  caused by cache write back  make ECC-encoded as EDC-eligible for GC</p>
    <p>USENIX ATC'2014 13</p>
  </div>
  <div class="page">
    <p>System Architecture</p>
    <p>USENIX ATC'2014 14</p>
  </div>
  <div class="page">
    <p>Page state transition</p>
    <p>USENIX ATC'2014 15</p>
    <p>The pages state changes in response to the operations</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Experimental setup Use flashcache to collect traces SSD simulator to run the traces</p>
    <p>Workloads Use filebench to generate workloads</p>
    <p>Compare with BCH-SSD</p>
    <p>USENIX ATC'2014 16</p>
  </div>
  <div class="page">
    <p>Average response time</p>
    <p>USENIX ATC'2014 17</p>
  </div>
  <div class="page">
    <p>Cleaning time</p>
    <p>USENIX ATC'2014 18</p>
  </div>
  <div class="page">
    <p>USENIX ATC'2014 19</p>
    <p>Performance in faulty conditions</p>
    <p>The x-axis represents the various RBER the flash exhibits, and the y-axis represents the normalized average response time of fileserver workload relative to the BCH-SSD.</p>
  </div>
  <div class="page">
    <p>USENIX ATC'2014 20</p>
    <p>The efficacy of scrubber</p>
    <p>Corruption Related Statistics When RBER=107</p>
  </div>
  <div class="page">
    <p>Conclusion Propose a cache-oriented SSD design  identify cache block reliability requirements  apply either EDC(CRC) or ECC(BCH) to blocks  schedule a scrubber to ensure data integrity</p>
    <p>Demonstrate its performance advantages  improve the performance by 30% on average  up to 60% for read-intensive workloads  even under various faulty conditions</p>
    <p>USENIX ATC'2014 21</p>
  </div>
  <div class="page">
    <p>USENIX ATC'2014 22</p>
  </div>
  <div class="page">
    <p>USENIX ATC'2014 23</p>
    <p>Latencies &amp; Statistics Operational Latencies</p>
    <p>Page transition statistics</p>
  </div>
</Presentation>
