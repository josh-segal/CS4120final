<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>JustRunIt: ExperimentBased Management of Virtualized Data Centers</p>
    <p>Wei Zheng</p>
    <p>Ricardo Bianchini</p>
    <p>Rutgers University</p>
    <p>Yoshio Turner</p>
    <p>Renato Santos John Janakiraman</p>
    <p>HP Labs</p>
  </div>
  <div class="page">
    <p>MoMvaMon</p>
    <p>Managing data center is a challenging task  Resource allocaMon, evaluaMon of soOware/hardware upgrades,</p>
    <p>capacity planning, etc.</p>
    <p>Decisions affect performance, availability, energy consumpMon</p>
    <p>Stateoftheart uses modeling for these tasks  Models give insight into system behavior  Fast exploraMon of large parameter spaces</p>
    <p>Modeling has some important drawbacks  Consumes a very expensive resource: human labor  Needs to be recalibrated and revalidated as the systems evolve</p>
  </div>
  <div class="page">
    <p>Our Approach</p>
    <p>Idea: experiments are a beXer approach  Consume a cheaper resource: machine Mme (and energy)  High fidelity</p>
    <p>JustRunIt: an infrastructure for experimentbased management of virtualized data centers</p>
    <p>Management system or administrator can use JustRunIt results to perform management tasks  Resource management and hardware/soOware upgrades  Select the best value for soOware tunables  Evaluate the correctness of administrator acMons</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>MoMvaMon</p>
    <p>JustRunIt design and implementaMon</p>
    <p>EvaluaMon  Case study 1: resource management  Case study 2: hardware upgrades</p>
    <p>Related work</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Target Environment</p>
    <p>Virtualized data centers host mulMple independent Internet services</p>
    <p>Each service comprises mulMple Mers, e.g. a web Mer, an applicaMon Mer, and a database Mer</p>
    <p>Each service has strict negoMated SLAs (Service Level Agreements), e.g. response Mme</p>
    <p>All services are hosted in VMs for isolaMon, easy migraMon, management flexibility</p>
  </div>
  <div class="page">
    <p>Data Center with JustRunIt  Creates sandbox  Clones VMs  Applies configuraMon changes  Duplicates live workload to sandbox</p>
    <p>ProperMes  No effect on online services  Does not replicate enMre service  Almost serviceindependent</p>
    <p>Assess performance and energy of different configurations</p>
    <p>A1 A2</p>
    <p>A1 A2</p>
    <p>A2 A3</p>
    <p>A2 A3</p>
    <p>A1 A2 A3</p>
    <p>W1 W2</p>
    <p>W1 W2</p>
    <p>W2 W3</p>
    <p>W1 W2 W3</p>
    <p>D1 D2</p>
    <p>D1 D3</p>
    <p>D2 D3</p>
    <p>D1 D2 D3</p>
    <p>S-A2 Sandbox S-W2 S-D2</p>
    <p>On-line system</p>
  </div>
  <div class="page">
    <p>JustRunIt Architecture</p>
    <p>X X</p>
    <p>X X X</p>
    <p>X I I X</p>
    <p>I I I I</p>
    <p>X X I X</p>
    <p>T T</p>
    <p>T</p>
    <p>Driver</p>
    <p>Checker</p>
    <p>- Parameter Ranges</p>
    <p>- Heuristics - Time Limit</p>
    <p>Interpolator</p>
    <p>Management Entity</p>
    <p>Param values</p>
    <p>Experiment results Pa</p>
    <p>ra m</p>
    <p>v al</p>
    <p>u es</p>
    <p>E xp</p>
    <p>er im</p>
    <p>en t</p>
    <p>re su</p>
    <p>lt s</p>
    <p>Experimenter</p>
    <p>JustRunIt</p>
    <p>param2</p>
    <p>p a</p>
    <p>ra m</p>
  </div>
  <div class="page">
    <p>Experimenter  Step 1: Clone subset of</p>
    <p>producMon system to a sandbox  VM cloning: Modify Xen live</p>
    <p>migraMon to resume original VM instead of destroying it</p>
    <p>Storage cloning: LVM copyon write snapshot for sandbox VM</p>
    <p>L2/L3 network address translaMon: implemented in driver domain netback driver to prevent network address conflict</p>
    <p>Step 2: Apply configuraMon changes  Exs: CPU allocaMon, frequency</p>
    <p>VM VM</p>
    <p>VM</p>
  </div>
  <div class="page">
    <p>Proxies filter requests/replies from the sandbox VM</p>
    <p>Emulates the Mming and funcMonal behavior of preceding and following service Mers  ApplicaMon protocol level requests/replies (e.g. HTTP)</p>
    <p>Experimenter</p>
    <p>Tier-N VM In-Proxy Out-Proxy</p>
    <p>Sandbox VM</p>
    <p>Step 3: Duplicates live workload to sandbox using proxies</p>
  </div>
  <div class="page">
    <p>JustRunIt Architecture</p>
    <p>X X</p>
    <p>X X X</p>
    <p>X I I X</p>
    <p>I I I I</p>
    <p>X X I X</p>
    <p>T T</p>
    <p>T</p>
    <p>Driver</p>
    <p>Checker</p>
    <p>- Parameter Ranges</p>
    <p>- Heuristics - Time Limit</p>
    <p>Interpolator</p>
    <p>Management Entity</p>
    <p>Param values</p>
    <p>Experiment results Pa</p>
    <p>ra m</p>
    <p>v al</p>
    <p>u es</p>
    <p>E xp</p>
    <p>er im</p>
    <p>en t</p>
    <p>re su</p>
    <p>lt s</p>
    <p>Experimenter</p>
    <p>JustRunIt</p>
    <p>param2</p>
    <p>p a</p>
    <p>ra m</p>
  </div>
  <div class="page">
    <p>Driver</p>
    <p>Goal: Fill in results matrix within a Mme limit</p>
    <p>Corners  Midpoints (recursive)  Heuristics</p>
    <p>Cancel experiments if gain for a resource addition falls below a threshold</p>
    <p>Cancel experiments for tiers that do not produce the largest gains from a resource addition</p>
    <p>X X</p>
    <p>X X</p>
    <p>X X</p>
    <p>X</p>
    <p>X</p>
    <p>X</p>
    <p>CPU allocation</p>
    <p>CPU Freq</p>
    <p>(min,min)</p>
  </div>
  <div class="page">
    <p>JustRunIt Architecture</p>
    <p>X X</p>
    <p>X X X</p>
    <p>X I I X</p>
    <p>I I I I</p>
    <p>X X I X</p>
    <p>T T</p>
    <p>T</p>
    <p>Driver</p>
    <p>Checker</p>
    <p>- Parameter Ranges</p>
    <p>- Heuristics - Time Limit</p>
    <p>Interpolator</p>
    <p>Management Entity</p>
    <p>Param values</p>
    <p>Experiment results Pa</p>
    <p>ra m</p>
    <p>v al</p>
    <p>u es</p>
    <p>E xp</p>
    <p>er im</p>
    <p>en t</p>
    <p>re su</p>
    <p>lt s</p>
    <p>Experimenter</p>
    <p>JustRunIt</p>
    <p>param2</p>
    <p>p a</p>
    <p>ra m</p>
  </div>
  <div class="page">
    <p>Interpolator and Checker</p>
    <p>For simplicity, we use linear interpolaMon</p>
    <p>Checker will verify the interpolated result by invoking the experimenter to run corresponding experiments in the background</p>
  </div>
  <div class="page">
    <p>Cost of JustRunIt</p>
    <p>Building JustRunIt needs human effort also  The most Mmeconsuming part is proxies implementaMon  Current proxies understand HTTP, mod_jk, MySQL protocols  Developed from an open source proxy daemon, each proxy need</p>
    <p>Cost of VM Cloning: 42 lines of Python code in xend and 244 lines of C in netback driver</p>
    <p>The engineering cost of JustRunIt can be amorMzed for any service based on the same protocols</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>MoMvaMon</p>
    <p>JustRunIt design and implementaMon</p>
    <p>EvaluaMon  Case study 1: resource management  Case study 2: hardware upgrades</p>
    <p>Related work</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Methodology</p>
    <p>15 HP Proliant Cclass blades (8G, 2 Xeon dualcore) interconnected with Gbit network</p>
    <p>2 types of 3 Mer Internet service  RUBiS: online aucMon service modeled aOer Ebay.com  TPCW: online book store modeled aOer Amazon.com</p>
    <p>Xen 3.3 with Linux 2.6.18</p>
    <p>Dom0 pinned to separate core for performance isolaMon</p>
  </div>
  <div class="page">
    <p>Overhead on Online Service?</p>
  </div>
  <div class="page">
    <p>Fidelity of The Sandbox ExecuMon?</p>
    <p>T h</p>
    <p>ro u</p>
    <p>g h</p>
    <p>p u</p>
    <p>t (r</p>
    <p>e q</p>
    <p>s /s</p>
    <p>)</p>
    <p>Application server at 400 requests/second (similar results for higher load)</p>
    <p>Response Time</p>
    <p>Throughput</p>
  </div>
  <div class="page">
    <p>Automated Management</p>
    <p>Management EnMty</p>
    <p>Data CenterJustRunIt Change</p>
    <p>Result</p>
  </div>
  <div class="page">
    <p>Case Study 1: Resource Management</p>
    <p>Goal: consolidate the hosted services onto the smallest possible set of nodes, while saMsfying all SLAs</p>
    <p>Management enMty invokes JustRunIt when response Mme SLA is violated, or when SLA is met by a large margin</p>
    <p>Management enMty uses performanceresource matrix to determine resource needs</p>
    <p>Management enMty performs bin packing (via simulated annealing) to minimize number of physical machines and number of VM migraMons</p>
  </div>
  <div class="page">
    <p>Case Study 1: Resource Management</p>
    <p>9 blades: 2 for first Mer; 2 for second Mer; 2 for third Mer; 3 for load balancing and storage service</p>
    <p>4 services are populated</p>
    <p>Each VM allocated 50% CPU</p>
    <p>SLA: 50ms</p>
    <p>Service 0 workload is increased to 1500reqs/sec aOer 2 mins</p>
  </div>
  <div class="page">
    <p>Resource Management with JustRunIt</p>
    <p>JRI</p>
    <p>Modeling</p>
    <p>Violating SLA Running experiments Migrating</p>
    <p>Violating SLASolving model Migrating</p>
  </div>
  <div class="page">
    <p>Case Study 2: Hardware Upgrades</p>
    <p>Goal: evaluate if hardware upgrade allow further consolidaMon and lower overall power consumpMon</p>
    <p>JustRunIt uses one instance of new hardware in sandbox to determine the consolidaMon savings</p>
    <p>Bin packing determines necessary number of new machines to accommodate producMon workload</p>
  </div>
  <div class="page">
    <p>Case Study 2: Hardware Upgrades</p>
    <p>IniMal server uses 90% of one CPU core on old hardware (emulate using low frequency mode)</p>
    <p>New machine (emulate using high frequency mode) requires 72%</p>
    <p>This would allow further consolidaMon in a large system</p>
  </div>
  <div class="page">
    <p>Modeling, feedback control, and machine learning for managing data centers [Stewart05, Stewart08, Padala07, Padala09, Cohen04]</p>
    <p>Scaling down data centers emulaMon [Gupta06, Gupta08]</p>
    <p>Sandboxing and duplicaMon for managing data centers [Nagaraja04, Tan05, Oliveira06]</p>
    <p>Run experiments quickly [Osogami06, Osogami07]</p>
    <p>SelecMng experiments to run [Zheng07, Shivam08]</p>
    <p>Related Work</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>JustRunIt infrastructure combines well with automated management systems</p>
    <p>Answers whatif quesMons realisMcally and transparently</p>
    <p>Can support a variety of management tasks</p>
    <p>Future invesMgaMon  Tier interacMons  Different workload mix  Build proxies for a database server</p>
  </div>
  <div class="page">
    <p>THANK YOU! QUESTIONS?</p>
  </div>
</Presentation>
