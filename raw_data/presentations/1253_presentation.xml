<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Fine-Grained Isolation for Scalable, Dynamic, Multi-tenant</p>
    <p>Edge Clouds Yuxin Ren, Guyue Liu, Vlad Nitu, Wenyuan Shao, Riley Kennedy, Gabriel</p>
    <p>Parmer, Timothy Wood, Alain Tchana</p>
    <p>Presented by: Vlad Nitu</p>
  </div>
  <div class="page">
    <p>Edge Cloud</p>
    <p>40 million IoT devices in 2027  CPSs require real-time reaction  code moving to data -&gt; edge computing  Edge clouds: tiny datacenters deployed close to the user</p>
  </div>
  <div class="page">
    <p>Edge cloud  Application requirements:  Bump-in-the-wire -&gt; 5G Cellular processing, network middleboxes</p>
    <p>Predictable low latency -&gt; Edge caches, IoT/CPS control  Edge Cloud requirements:  Serve a large number of clients with high churn  Efficiently use limited resources  Guarantee strong isolation: between untrusted services and clients</p>
    <p>Firewall</p>
  </div>
  <div class="page">
    <p>Edge Cloud: Isolation</p>
    <p>Memcached</p>
    <p>IDS</p>
    <p>InferenceFirewall</p>
    <p>TLS Termination</p>
  </div>
  <div class="page">
    <p>Edge Cloud: Isolation</p>
    <p>Memcached</p>
    <p>IDS</p>
    <p>InferenceFirewall</p>
    <p>TLS Termination</p>
    <p>Service isolation</p>
  </div>
  <div class="page">
    <p>Edge Cloud: Isolation</p>
    <p>Memcached</p>
    <p>IDS</p>
    <p>InferenceFirewall</p>
    <p>TLS Termination</p>
    <p>Client isolation</p>
  </div>
  <div class="page">
    <p>Existing Solutions</p>
    <p>Process</p>
    <p>Container</p>
    <p>Virtual machine</p>
  </div>
  <div class="page">
    <p>Existing Solutions</p>
    <p>Isolation Scalability Startup time High performance networking</p>
    <p>process</p>
    <p>container</p>
    <p>Virtual machine</p>
  </div>
  <div class="page">
    <p>Isolation Scalability Startup time High performance networking</p>
    <p>process</p>
    <p>container</p>
    <p>Virtual machine EdgeOS</p>
    <p>Existing Solutions</p>
  </div>
  <div class="page">
    <p>Isolation Scalability Startup time High performance networking</p>
    <p>process</p>
    <p>container</p>
    <p>Virtual machine EdgeOS</p>
    <p>EdgeOS</p>
    <p>EdgeOS: Isolation, Predictability, and Scale  Based on Composite microkernel OS, designed for Real-Time guarantees</p>
    <p>High speed data movement (10Gbps+) without sacrificing isolation  Startup 170X faster than fork+exec and 84,000X faster than containers!</p>
    <p>Scales to 1000s of services per host = 1 service per user!</p>
  </div>
  <div class="page">
    <p>Manages lifecycle and scheduling Defines FWP data flow</p>
    <p>Capability-based access control</p>
    <p>How is this possible? 1. Feather Weight Processes</p>
    <p>Lightweight process abstraction Minimal memory footprint</p>
    <p>Recycle FWP for fast startup</p>
    <p>FWPFWP</p>
    <p>Mediates FWP communication Securely copies data</p>
    <p>Efficiently manages buffers</p>
    <p>FWP FWPMMAFWP FWP</p>
  </div>
  <div class="page">
    <p>EdgeOS architecture  FWP (Feather-Weight Processes):  Minimal abstractions: memory + a</p>
    <p>small set of kernel resources  Input and output message rings  Library-based OS services  Small enough to instantiate one per</p>
    <p>incoming client or group of clients  Recycled to clean state for fast startup</p>
    <p>Firewall FWP</p>
    <p>Https Proxy FWP</p>
    <p>In ring Out ring</p>
  </div>
  <div class="page">
    <p>EdgeOS architecture  MMA (Memory Movement Accelerator):  Enables chains of FWP services  Enforce isolation through data copying  Executed on dedicated cores  Sustain throughput competitive with data</p>
    <p>sharing  Optimized buffer allocation and integration</p>
    <p>with the FWP scheduler</p>
    <p>Https Proxy FWP</p>
    <p>Firewall FWP</p>
    <p>Https Proxy FWP</p>
    <p>MMA</p>
  </div>
  <div class="page">
    <p>EdgeOS architecture  Data plane:  FWPs and MMA  DPDK-based networking</p>
    <p>Control plane:  The EdgeOS controller  The FWP Manager  The Scheduler</p>
  </div>
  <div class="page">
    <p>EdgeOS: packet processing steps</p>
    <p>(1)</p>
    <p>(2)</p>
    <p>(3)</p>
    <p>(4)</p>
    <p>(5)</p>
    <p>(6)</p>
    <p>(7)</p>
  </div>
  <div class="page">
    <p>Docker: the execution time of docker start  Firecracker: the start time of the recommended hello image  Linux: fork() + exec()</p>
    <p>Evaluation: start time</p>
    <p>Docker start</p>
    <p>Fire cracker</p>
    <p>fork +exec</p>
    <p>EOS create</p>
    <p>EOS activate</p>
    <p>St ar t T im e (m s)</p>
  </div>
  <div class="page">
    <p>Docker start</p>
    <p>Fire cracker</p>
    <p>fork +exec</p>
    <p>EOS create</p>
    <p>EOS activate</p>
    <p>St ar t T im e (m s)</p>
    <p>EdgeOS creates an FWP 20x faster than a Linux process</p>
    <p>Evaluation: start time</p>
  </div>
  <div class="page">
    <p>Docker start</p>
    <p>Fire cracker</p>
    <p>fork +exec</p>
    <p>EOS create</p>
    <p>EOS activate</p>
    <p>St ar t T im e (m s)</p>
    <p>Evaluation: start time</p>
    <p>EdgeOS creates an FWP 20x faster than a Linux process  When the FWP is cached, the activation time is 170x faster than Linux</p>
  </div>
  <div class="page">
    <p>Docker start</p>
    <p>Fire cracker</p>
    <p>fork +exec</p>
    <p>EOS create</p>
    <p>EOS activate</p>
    <p>St ar t T im e (m s)</p>
    <p>Evaluation: start time</p>
    <p>~105</p>
    <p>EdgeOS creates an FWP 20x faster than a Linux process  When the FWP is cached, the activation time is 170x faster than Linux  FWP activation is ~105 faster than docker start</p>
  </div>
  <div class="page">
    <p>Evaluation: memcopy overhead  EdgeOS provides isolation and adds negligible overheads</p>
    <p>T hr o ug hp ut (G bp s)</p>
    <p>Chain Length</p>
    <p>ONVM-64 EOS-64 ONVM-1024 EOS-1024</p>
  </div>
  <div class="page">
    <p>Evaluation: scalability</p>
    <p>FPWs as middleboxes</p>
    <p>La te nc y (1 00 us )</p>
    <p>#Clients</p>
    <p>ONVM-chain</p>
    <p>ONVM-single</p>
    <p>EOS-chain</p>
    <p>EOS-single</p>
    <p>La te nc y (1 00 us )</p>
    <p>#Clients</p>
    <p>ONVM-chain</p>
    <p>ONVM-single</p>
    <p>EOS-chain</p>
    <p>EOS-single</p>
  </div>
  <div class="page">
    <p>Evaluation: scalability</p>
    <p>La te nc y (1 00 us )</p>
    <p>#Clients</p>
    <p>ONVM-chain</p>
    <p>ONVM-single</p>
    <p>EOS-chain</p>
    <p>EOS-single</p>
    <p>La te nc y (1 00 us )</p>
    <p>#Clients</p>
    <p>ONVM-chain</p>
    <p>ONVM-single</p>
    <p>EOS-chain</p>
    <p>EOS-single25x</p>
    <p>FPWs as middleboxes</p>
  </div>
  <div class="page">
    <p>Evaluation: scalability</p>
    <p>La te nc y (1 00 us )</p>
    <p>#Clients</p>
    <p>ONVM-chain</p>
    <p>ONVM-single</p>
    <p>EOS-chain</p>
    <p>EOS-single</p>
    <p>La te nc y (1 00 us )</p>
    <p>#Clients</p>
    <p>ONVM-chain</p>
    <p>ONVM-single</p>
    <p>EOS-chain</p>
    <p>EOS-single2x</p>
    <p>FPWs as middleboxes</p>
  </div>
  <div class="page">
    <p>Evaluation: scalability FWPs as TLS proxys</p>
    <p>T hr o ug hp ut (1 0K re qs /s ec )</p>
    <p>#Instances</p>
    <p>EOS throughput Linux throughput</p>
  </div>
  <div class="page">
    <p>Conclusion  EdgeOS: an OS for Edge clouds  Strong copy-based isolation  Minimalistic execution instances  Optimized for high churn and dense multi-tenancy</p>
    <p>Start-up times up to 170x faster than Linux processes and 105x faster than Docker containers  Maintain line rate even with chains of 6 FWPs  Substantially improved scalability</p>
  </div>
  <div class="page">
    <p>Thank you for your attention!</p>
    <p>Vlad Nitu: vlad.nitu@insa-lyon.fr Yuxin Ren: ryx@gwmail.gwu.edu</p>
    <p>Gabriel Parmer: gparmer@gwu.edu Timothy Wood: timwood@gwu.edu</p>
  </div>
</Presentation>
