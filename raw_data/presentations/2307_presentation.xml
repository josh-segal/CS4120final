<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>K-Scope: Online Performance Tracking for Dynamic Cloud Applications</p>
    <p>Li Zhang, Xiaoqiao Meng, Shicong Meng, Jian Tan System Analysis &amp; Optimization Group</p>
    <p>IBM T. J. Watson Research Center</p>
  </div>
  <div class="page">
    <p>Motivation Applications in Dynamic Cloud Environment  Continuous delivery  Shared platform services  Auto scaling to satisfy SLA</p>
    <p>Challenges for Performance Modeling  Continuous monitoring of appropriate metrics  Changing workload and resource consumption</p>
    <p>Intensity, service (processing) time  Changing share of resource in Cloud</p>
    <p>CPU, IO, Network  Multi-tier or more complex deployment</p>
  </div>
  <div class="page">
    <p>Auto Scaling Service</p>
    <p>Auto scaling allows cloud applications to scale its resource usage up and down automatically according to load and SLA</p>
    <p>Auto scaling requires a model that can dynamically correlate the application performance with resource assumption</p>
  </div>
  <div class="page">
    <p>Queueing Network Model</p>
    <p>Under appropriate assumptions, the system performance &amp; resource utilization can be approximated by the queueing analytic relations:</p>
    <p>buy browse</p>
    <p>search clients front end back endLB</p>
    <p>Unknown Observable</p>
  </div>
  <div class="page">
    <p>Kalman Filter Dynamics  Estimate values of hidden state variables of a dynamic</p>
    <p>system excited by stochastic disturbances and stochastic measurement noise.</p>
    <p>Variables:  x(t): State variable that is not observed  F(t): State transition model  w(t): Process noise (zero mean, multivariate Gaussian)  z(t): Measurement vector  H(t): Observation model, maps true state into observation space</p>
    <p>v(t): Observation noise (zero mean, multivariate Gaussian)</p>
  </div>
  <div class="page">
    <p>Kalman Filter Algorithm</p>
    <p>Apply Predict &amp; Update iteratively over time Adapt to changing service times x(t) &amp; observations z(t)</p>
  </div>
  <div class="page">
    <p>SOABench Experiment Model Fitting</p>
    <p>Prediction</p>
  </div>
  <div class="page">
    <p>Conclusion Approach</p>
    <p>Queueing network based model to quantify performance  Model based capacity planning, problem identification</p>
    <p>Key problem  Inference formulation to find best fit parameters  Kalman filter for online parameter inference</p>
    <p>Extensive Experiments  Validate the quality of the solution  Apply to real scenarios</p>
  </div>
</Presentation>
