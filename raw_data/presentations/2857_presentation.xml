<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Adapting TCP for Reconfigurable Datacenter Networks</p>
    <p>Matthew K. Mukerjee*, Christopher Canel*, Weiyang Wang, Daehyeok Kim*, Srinivasan Seshan*, Alex C. Snoeren</p>
    <p>*Carnegie Mellon University, UC San Diego, Nefeli Networks, Microsoft Research</p>
    <p>February 26, 2020</p>
  </div>
  <div class="page">
    <p>Reconfigurable Datacenter Network (RDCN)</p>
    <p>Packet Network Packet Switch</p>
    <p>Packet Switch</p>
    <p>Circuit Switch</p>
    <p>higher bandwidth, between certain racks</p>
    <p>all-to-all connectivity</p>
  </div>
  <div class="page">
    <p>Reconfigurable Datacenter Network (RDCN)</p>
    <p>Packet Network Packet Switch</p>
    <p>Packet Switch</p>
    <p>Circuit Switch</p>
    <p>higher bandwidth, between certain racks</p>
    <p>all-to-all connectivity</p>
    <p>free-space optics</p>
    <p>optical circuits</p>
  </div>
  <div class="page">
    <p>Rack 1</p>
    <p>Server 1</p>
    <p>Server M</p>
    <p>ToR switch</p>
    <p>Rack N</p>
    <p>Server 1</p>
    <p>Server M</p>
    <p>ToR switch</p>
    <p>Reconfigurable Datacenter Network (RDCN)</p>
    <p>TimeA va</p>
    <p>ila bl</p>
    <p>e ba</p>
    <p>nd w</p>
    <p>id th Packet Network</p>
    <p>Packet Switch</p>
    <p>Packet Switch</p>
    <p>Circuit Switch</p>
    <p>higher bandwidth, between certain racks</p>
    <p>all-to-all connectivity</p>
    <p>[Liu, NSDI 14]</p>
  </div>
  <div class="page">
    <p>Rack 1</p>
    <p>Server 1</p>
    <p>Server M</p>
    <p>ToR switch</p>
    <p>Rack N</p>
    <p>Server 1</p>
    <p>Server M</p>
    <p>ToR switch</p>
    <p>Reconfigurable Datacenter Network (RDCN)</p>
    <p>TimeA va</p>
    <p>ila bl</p>
    <p>e ba</p>
    <p>nd w</p>
    <p>id th Packet Network</p>
    <p>Packet Switch</p>
    <p>Packet Switch</p>
    <p>Circuit Switch</p>
    <p>higher bandwidth, between certain racks</p>
    <p>all-to-all connectivity</p>
    <p>[Liu, NSDI 14]</p>
  </div>
  <div class="page">
    <p>Rack 1</p>
    <p>Server 1</p>
    <p>Server M</p>
    <p>ToR switch</p>
    <p>Rack N</p>
    <p>Server 1</p>
    <p>Server M</p>
    <p>ToR switch</p>
    <p>Reconfigurable Datacenter Network (RDCN)</p>
    <p>TimeA va</p>
    <p>ila bl</p>
    <p>e ba</p>
    <p>nd w</p>
    <p>id th Packet Network</p>
    <p>Packet Switch</p>
    <p>Packet Switch</p>
    <p>Circuit Switch</p>
    <p>higher bandwidth, between certain racks</p>
    <p>all-to-all connectivity</p>
    <p>[Liu, NSDI 14]</p>
  </div>
  <div class="page">
    <p>Rack 1</p>
    <p>Server 1</p>
    <p>Server M</p>
    <p>ToR switch</p>
    <p>Rack N</p>
    <p>Server 1</p>
    <p>Server M</p>
    <p>ToR switch</p>
    <p>Reconfigurable Datacenter Network (RDCN)</p>
    <p>TimeA va</p>
    <p>ila bl</p>
    <p>e ba</p>
    <p>nd w</p>
    <p>id th Packet Network</p>
    <p>Packet Switch</p>
    <p>Packet Switch</p>
    <p>Circuit Switch</p>
    <p>higher bandwidth, between certain racks</p>
    <p>all-to-all connectivity</p>
    <p>[Liu, NSDI 14]</p>
  </div>
  <div class="page">
    <p>Rack 1</p>
    <p>Server 1</p>
    <p>Server M</p>
    <p>ToR switch</p>
    <p>Rack N</p>
    <p>Server 1</p>
    <p>Server M</p>
    <p>ToR switch</p>
    <p>Reconfigurable Datacenter Network (RDCN)</p>
    <p>Packet Network Packet Switch</p>
    <p>Packet Switch</p>
    <p>Circuit Switch</p>
    <p>higher bandwidth, between certain racks</p>
    <p>all-to-all connectivity</p>
    <p>RDCN is a black box: Do not segregate flows between networks</p>
    <p>[Liu, NSDI 14]</p>
  </div>
  <div class="page">
    <p>[Wang, SIGCOMM 10]</p>
    <p>Packet network Hybrid network (c-Through) Full bisection bandwidth network</p>
    <p>Hybrid networks achieve higher performance on datacenter workloads</p>
  </div>
  <div class="page">
    <p>Advances in circuit switch technology have led to a 10x reduction in reconfiguration delay  today, circuits can reconfigure much more frequently</p>
    <p>Better for datacenters: More flexibility to support dynamic workloads Better for hosts: Less data must be available to saturate higher bandwidth NW</p>
    <p>Todays RDCNs reconfigure 10x as often</p>
    <p>TimeA va</p>
    <p>ila bl</p>
    <p>e ba</p>
    <p>nd w</p>
    <p>id th</p>
    <p>TimeA va</p>
    <p>ila bl</p>
    <p>e ba</p>
    <p>nd w</p>
    <p>id th</p>
    <p>[Porter, SIGCOMM 13]</p>
  </div>
  <div class="page">
    <p>Short-lived circuits pose a problem for TCP 16 flows from rack 1 to rack 2; packet network: 10 Gb/s; circuit network: 80 Gb/s</p>
    <p>bb r</p>
    <p>bic cd g cu</p>
    <p>bic dc</p>
    <p>tcp</p>
    <p>hig hs</p>
    <p>pe ed</p>
    <p>ht cp hy</p>
    <p>bla illi</p>
    <p>no is lp nv</p>
    <p>re no</p>
    <p>sc ala</p>
    <p>ble ve</p>
    <p>ga s ve</p>
    <p>no</p>
    <p>we stw</p>
    <p>oo d ye</p>
    <p>ah</p>
    <p>ra ge</p>
    <p>c ir cu</p>
    <p>it ut</p>
    <p>ili za</p>
    <p>ti on</p>
    <p>( %</p>
    <p>)</p>
    <p>No TCP variant makes use of the high-bandwidth circuits</p>
  </div>
  <div class="page">
    <p>reality</p>
    <p>what we expect</p>
    <p>TCP cannot ramp up during short circuits</p>
    <p>no circuit no circuitcircuit</p>
    <p>achieved bandwidth (BW) = slope</p>
  </div>
  <div class="page">
    <p>What is the problem? All TCP variants are designed to adapt to changing network conditions</p>
    <p>E.g., congestion, bottleneck links, RTT</p>
    <p>But bandwidth fluctuations in modern RDCN are an order of magnitude more frequent (10x shorter circuit duration) and more substantial (10x higher bandwidth) than TCP is designed to handle  RDCNs break the implicit assumption of relatively-stable network conditions</p>
    <p>This requires an order-of-magnitude shift in how fast TCP reacts</p>
  </div>
  <div class="page">
    <p>This talk: Our 2-part solution In-network: Use information about upcoming circuits to transparently trick TCP into ramping up more aggressively</p>
    <p>High utilization, at the cost of tail latency</p>
    <p>At endhosts: New TCP variant, reTCP, that explicitly reacts to circuit state changes  Mitigates tail latency penalty</p>
    <p>The two techniques can be deployed separately, but work best together</p>
  </div>
  <div class="page">
    <p>This talk: Our 2-part solution In-network: Use information about upcoming circuits to transparently trick TCP into ramping up more aggressively</p>
    <p>High utilization, at the cost of tail latency</p>
    <p>At endhosts: New TCP variant, reTCP, that explicitly reacts to circuit state changes  Mitigates tail latency penalty</p>
    <p>The two techniques can be deployed separately, but work best together</p>
  </div>
  <div class="page">
    <p>Nave idea: Enlarge switch buffers</p>
    <p>Want we want: TCPs congestion window (cwnd) to parallel the BW fluctuations</p>
    <p>First attempt: Make cwnd large all the time How? Use large ToR buffers</p>
    <p>desired large, static buffers</p>
    <p>Time</p>
    <p>Av ai</p>
    <p>la bl</p>
    <p>e ba</p>
    <p>nd w</p>
    <p>id th</p>
    <p>Bandwidth</p>
    <p>Time</p>
    <p>c w n d</p>
    <p>cwnd</p>
  </div>
  <div class="page">
    <p>Circuit Switch</p>
    <p>Nave idea: Enlarge switch buffers</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer ToR buffer</p>
    <p>high BDP</p>
    <p>low BDP</p>
  </div>
  <div class="page">
    <p>Nave idea: Enlarge switch buffers</p>
    <p>ToR buffer</p>
    <p>Circuit Switch</p>
    <p>Packet Switch</p>
    <p>Sender Receiver</p>
    <p>high BDP</p>
    <p>low BDP</p>
    <p>ToR buffer</p>
    <p>Bandwidth</p>
    <p>Larger ToR buffers increase utilization of the high-BDP circuit network</p>
  </div>
  <div class="page">
    <p>Circuit Switch</p>
    <p>Nave idea: Enlarge switch buffers</p>
    <p>ToR buffer</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>Latency</p>
    <p>Bandwidth high BDP</p>
    <p>low BDP</p>
  </div>
  <div class="page">
    <p>Large queues increase utilization</p>
    <p>ra ge</p>
    <p>c ir cu</p>
    <p>it ut</p>
    <p>ili za</p>
    <p>ti on</p>
    <p>( %</p>
    <p>)</p>
  </div>
  <div class="page">
    <p>but result in high latency Median latency 99th percentile latency</p>
    <p>latency</p>
    <p>ia n</p>
    <p>la te</p>
    <p>nc y</p>
    <p>( s) 6tatic buffers (vary size)</p>
    <p>S er</p>
    <p>ce nt</p>
    <p>ile la</p>
    <p>te nc</p>
    <p>y (</p>
    <p>s)</p>
    <p>How can we improve this latency?</p>
  </div>
  <div class="page">
    <p>Use large buffers only when circuit is up Dynamic buffer resizing: Before a circuit begins, transparently enlarge ToR buffers</p>
    <p>Full circuit utilization with a latency degradation only during ramp-up period</p>
    <p>desired large, static buffers dynamic buffers</p>
    <p>Time</p>
    <p>Av ai</p>
    <p>la bl</p>
    <p>e ba</p>
    <p>nd w</p>
    <p>id th</p>
    <p>Bandwidth</p>
    <p>Time</p>
    <p>c w n d</p>
    <p>cwnd</p>
    <p>resize!</p>
  </div>
  <div class="page">
    <p>Circuit Switch</p>
    <p>Resize ToR buffers before circuit begins</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR bufferToR buffer</p>
    <p>Time</p>
    <p>c w n d</p>
  </div>
  <div class="page">
    <p>Circuit Switch</p>
    <p>Resize ToR buffers before circuit begins</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR bufferToR buffer</p>
    <p>Time</p>
    <p>c w n d</p>
  </div>
  <div class="page">
    <p>Circuit Switch</p>
    <p>Resize ToR buffers before circuit begins</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR bufferToR buffer</p>
    <p>Circuit coming!</p>
    <p>Time</p>
    <p>c w n d</p>
  </div>
  <div class="page">
    <p>ToR buffer</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>Circuit Switch</p>
    <p>Time</p>
    <p>c w n d</p>
    <p>Resize ToR buffers before circuit begins</p>
  </div>
  <div class="page">
    <p>ToR buffer</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>Circuit Switch</p>
    <p>Time</p>
    <p>c w n d</p>
    <p>Resize ToR buffers before circuit begins</p>
  </div>
  <div class="page">
    <p>ToR buffer</p>
    <p>Circuit Switch</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>Time</p>
    <p>c w n d</p>
    <p>Resize ToR buffers before circuit begins</p>
  </div>
  <div class="page">
    <p>ToR buffer</p>
    <p>Circuit Switch</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>Time</p>
    <p>c w n d</p>
    <p>Resize ToR buffers before circuit begins</p>
  </div>
  <div class="page">
    <p>Circuit Switch</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR bufferToR buffer</p>
    <p>Time</p>
    <p>c w n d</p>
    <p>Resize ToR buffers before circuit begins</p>
  </div>
  <div class="page">
    <p>Circuit Switch</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR bufferToR buffer</p>
    <p>Time</p>
    <p>c w n d</p>
    <p>Resize ToR buffers before circuit begins</p>
  </div>
  <div class="page">
    <p>Configuring dynamic buffer resizing</p>
    <p>How long in advance should ToR buffers resize ()?</p>
    <p>Long enough for TCP to grow cwnd to the circuit BDP</p>
    <p>How large should ToR buffers grow to?  circuit BDP = 80 Gb/s  40 s = 45 9000-byte packets</p>
    <p>For our configuration, the ToR buffers must hold ~40 packets to achieve 90% utilization, which requires 1800 s of prebuffering</p>
    <p>We resize ToR buffers between sizes of 16 and 50 packets</p>
  </div>
  <div class="page">
    <p>How long in advance to resize, ? no circuit circuit</p>
    <p>To R b</p>
    <p>uf fe</p>
    <p>r si</p>
    <p>ze (</p>
    <p>pa ck</p>
    <p>et s)</p>
  </div>
  <div class="page">
    <p>How long in advance to resize, ? no circuit circuit</p>
    <p>W</p>
    <p>To R b</p>
    <p>uf fe</p>
    <p>r si</p>
    <p>ze (</p>
    <p>pa ck</p>
    <p>et s)</p>
  </div>
  <div class="page">
    <p>How long in advance to resize, ? no circuit circuit</p>
    <p>To R b</p>
    <p>uf fe</p>
    <p>r si</p>
    <p>ze (</p>
    <p>pa ck</p>
    <p>et s)</p>
  </div>
  <div class="page">
    <p>How long in advance to resize, ? no circuit circuit</p>
    <p>To R b</p>
    <p>uf fe</p>
    <p>r si</p>
    <p>ze (</p>
    <p>pa ck</p>
    <p>et s)</p>
    <p>too early: extra queuing</p>
  </div>
  <div class="page">
    <p>How long in advance to resize, ? no circuit circuit</p>
    <p>To R b</p>
    <p>uf fe</p>
    <p>r si</p>
    <p>ze (</p>
    <p>pa ck</p>
    <p>et s)</p>
    <p>too late: low util.</p>
  </div>
  <div class="page">
    <p>How long in advance to resize, ? no circuit circuit</p>
    <p>To R b</p>
    <p>uf fe</p>
    <p>r si</p>
    <p>ze (</p>
    <p>pa ck</p>
    <p>et s)</p>
    <p>util./latency trade-off</p>
  </div>
  <div class="page">
    <p>ra ge</p>
    <p>c ir cu</p>
    <p>it ut</p>
    <p>ili za</p>
    <p>ti Rn</p>
    <p>( %</p>
    <p>)</p>
  </div>
  <div class="page">
    <p>iD n</p>
    <p>lD te</p>
    <p>nc y</p>
    <p>( s) 6tDtic buffers (vDry size)</p>
    <p>DynDmic buffers (vDry )</p>
    <p>S er</p>
    <p>ce nt</p>
    <p>ile lD</p>
    <p>te nc</p>
    <p>y (</p>
    <p>s)</p>
    <p>Latency degradation during ramp-up Median latency 99th percentile latency</p>
    <p>We cannot use large queues for so long. Can we get the same high utilization with shorter prebuffering?</p>
  </div>
  <div class="page">
    <p>This talk: Our 2-part solution In-network: Use information about upcoming circuits to transparently trick TCP into ramping up more aggressively</p>
    <p>High utilization, at the cost of tail latency</p>
    <p>At endhosts: New TCP variant, reTCP, that explicitly reacts to circuit state changes  Mitigates tail latency penalty</p>
    <p>The two techniques can be deployed separately, but work best together</p>
  </div>
  <div class="page">
    <p>reTCP: Rapidly grow cwnd before a circuit 1) Communicate circuit state to sender TCP</p>
    <p>desired large, static buffers dynamic buffers dynamic buffers + reTCP</p>
    <p>Time</p>
    <p>Av ai</p>
    <p>la bl</p>
    <p>e ba</p>
    <p>nd w</p>
    <p>id th</p>
    <p>Bandwidth</p>
    <p>Time</p>
    <p>c w n d</p>
    <p>cwnd</p>
    <p>resize!</p>
  </div>
  <div class="page">
    <p>reTCP marks:</p>
    <p>Circuit Switch</p>
    <p>reTCP: Explicit circuit state feedback</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR bufferToR buffer</p>
  </div>
  <div class="page">
    <p>reTCP marks:</p>
    <p>Circuit Switch</p>
    <p>reTCP: Explicit circuit state feedback</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>ACK</p>
    <p>ToR buffer</p>
  </div>
  <div class="page">
    <p>reTCP marks:</p>
    <p>Circuit Switch</p>
    <p>reTCP: Explicit circuit state feedback</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>ACK</p>
    <p>ToR buffer</p>
  </div>
  <div class="page">
    <p>reTCP marks:</p>
    <p>Circuit Switch</p>
    <p>reTCP: Explicit circuit state feedback</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>ACK</p>
    <p>ToR buffer</p>
    <p>Reuse existing ECN-Echo (ECE) bit</p>
  </div>
  <div class="page">
    <p>reTCP marks:</p>
    <p>Circuit Switch</p>
    <p>reTCP: Explicit circuit state feedback</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>ACK</p>
    <p>ToR buffer</p>
    <p>Reuse existing ECN-Echo (ECE) bit</p>
  </div>
  <div class="page">
    <p>reTCP marks:</p>
    <p>ToR buffer</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>Reuse existing ECN-Echo (ECE) bit</p>
    <p>reTCP: Explicit circuit state feedback</p>
    <p>Circuit coming!</p>
  </div>
  <div class="page">
    <p>reTCP marks:</p>
    <p>ToR buffer</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>ACK</p>
    <p>Reuse existing ECN-Echo (ECE) bit</p>
    <p>reTCP: Explicit circuit state feedback</p>
    <p>Circuit coming!</p>
  </div>
  <div class="page">
    <p>reTCP marks:</p>
    <p>ToR buffer</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>ACK</p>
    <p>Circuit Switch</p>
    <p>Reuse existing ECN-Echo (ECE) bit</p>
    <p>reTCP: Explicit circuit state feedback</p>
    <p>Circuit coming!</p>
  </div>
  <div class="page">
    <p>reTCP marks:</p>
    <p>ToR buffer</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>ACK</p>
    <p>Circuit Switch</p>
    <p>Reuse existing ECN-Echo (ECE) bit</p>
    <p>reTCP: Explicit circuit state feedback</p>
    <p>Circuit coming!</p>
  </div>
  <div class="page">
    <p>reTCP marks:</p>
    <p>ToR buffer</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>ACK</p>
    <p>increase! Circuit Switch</p>
    <p>Reuse existing ECN-Echo (ECE) bit</p>
    <p>reTCP: Explicit circuit state feedback</p>
    <p>Circuit coming!</p>
  </div>
  <div class="page">
    <p>reTCP marks:</p>
    <p>ToR buffer</p>
    <p>Circuit Switch</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>ACK</p>
    <p>Reuse existing ECN-Echo (ECE) bit</p>
    <p>reTCP: Explicit circuit state feedback</p>
  </div>
  <div class="page">
    <p>reTCP marks:</p>
    <p>ToR buffer</p>
    <p>Circuit Switch</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer ACK</p>
    <p>Reuse existing ECN-Echo (ECE) bit</p>
    <p>reTCP: Explicit circuit state feedback</p>
  </div>
  <div class="page">
    <p>reTCP marks:</p>
    <p>ToR buffer</p>
    <p>Circuit Switch</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>ACK 1</p>
    <p>Reuse existing ECN-Echo (ECE) bit</p>
    <p>reTCP: Explicit circuit state feedback</p>
  </div>
  <div class="page">
    <p>reTCP marks:</p>
    <p>ToR buffer</p>
    <p>Circuit Switch</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>ACK</p>
    <p>Reuse existing ECN-Echo (ECE) bit</p>
    <p>reTCP: Explicit circuit state feedback</p>
  </div>
  <div class="page">
    <p>Circuit Switch</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>ACK</p>
    <p>ToR buffer</p>
    <p>reTCP marks: 1</p>
    <p>Reuse existing ECN-Echo (ECE) bit</p>
    <p>reTCP: Explicit circuit state feedback</p>
  </div>
  <div class="page">
    <p>Circuit Switch</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>ACK</p>
    <p>ToR buffer</p>
    <p>reTCP marks:</p>
    <p>Reuse existing ECN-Echo (ECE) bit</p>
    <p>reTCP: Explicit circuit state feedback</p>
  </div>
  <div class="page">
    <p>Circuit Switch</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>ACK</p>
    <p>ToR buffer</p>
    <p>reTCP marks:</p>
    <p>Reuse existing ECN-Echo (ECE) bit</p>
    <p>reTCP: Explicit circuit state feedback</p>
  </div>
  <div class="page">
    <p>Circuit Switch</p>
    <p>Packet Switch</p>
    <p>Sender ReceiverToR buffer</p>
    <p>ACK</p>
    <p>ToR buffer</p>
    <p>reTCP marks: 0</p>
    <p>Reuse existing ECN-Echo (ECE) bit</p>
    <p>reTCP: Explicit circuit state feedback</p>
  </div>
  <div class="page">
    <p>Single multiplicative increase/decrease</p>
    <p>depends on ratio of circuit BDP to ToR queue capacity:</p>
    <p>Circuit network BDP: 45 packets  Small ToR queue capacity: 16 packets</p>
    <p>We use  = 2</p>
    <p>More advanced forms of feedback are possible</p>
    <p>On 0  1 transitions: cwnd = cwnd</p>
    <p>On 1  0 transitions: cwnd = cwnd /</p>
  </div>
  <div class="page">
    <p>Dynamic buffers + reTCP achieve high utilization</p>
    <p>A ve</p>
    <p>ra ge</p>
    <p>c ir cu</p>
    <p>it ut</p>
    <p>ili za</p>
    <p>ti Rn</p>
    <p>( %</p>
    <p>) 80 87</p>
  </div>
  <div class="page">
    <p>Short prebuffer time means low latency Median latency 99th percentile latency</p>
    <p>iD n</p>
    <p>lD te</p>
    <p>nc y</p>
    <p>( s) 6tDtic buffers (vDry size)</p>
    <p>DynDPic buffers (vDry ) DynDPic buffers + reTCP (vDry )</p>
    <p>S er</p>
    <p>ce nt</p>
    <p>ile lD</p>
    <p>te nc</p>
    <p>y (</p>
    <p>s)</p>
    <p>With 150s of prebuffering, dynamic buffers + reTCP achieve 93% circuit utilization with an only 1.20x increase in tail latency</p>
  </div>
  <div class="page">
    <p>Limitations and future work Dynamic buffer resizing and reTCP are designed to be minimally invasive</p>
    <p>Higher performance may be possible by involving the end-host further</p>
    <p>Our evaluation used a simple traffic pattern to isolate TCPs behavior</p>
    <p>Important to consider complex workloads as well</p>
    <p>Is TCP the right protocol for hybrid networks?</p>
  </div>
  <div class="page">
    <p>Summary: Adapting TCP for RDCNs Bandwidth fluctuations in reconfigurable datacenter networks break TCPs implicit assumption of relative network stability</p>
    <p>Two techniques to ramp up TCP during short-lived circuits</p>
    <p>Dynamic buffer resizing: Adapt ToR queues to packet or circuit network  reTCP: Ramp up aggressively to fill new queue capacity</p>
    <p>Etalon emulator open source at: github.com/mukerjee/etalon</p>
    <p>Christopher Canel ~ ccanel@cmu.edu</p>
    <p>Thank you!</p>
  </div>
  <div class="page">
    <p>Packet Network Packet Switch</p>
    <p>Packet Switch</p>
    <p>Circuit Switch</p>
    <p>One more thing: Etalon emulator</p>
    <p>Rack 1</p>
    <p>Server 1</p>
    <p>Server M</p>
    <p>ToR switch</p>
    <p>Rack N</p>
    <p>Server 1</p>
    <p>Server M</p>
    <p>ToR switch</p>
  </div>
  <div class="page">
    <p>Packet Network Packet Switch</p>
    <p>Packet Switch</p>
    <p>Circuit Switch</p>
    <p>Click hybrid switch (physical host)</p>
    <p>One more thing: Etalon emulator</p>
    <p>Rack 1</p>
    <p>Server 1</p>
    <p>Server M</p>
    <p>ToR switch</p>
    <p>Rack N</p>
    <p>Server 1</p>
    <p>Server M</p>
    <p>ToR switch</p>
    <p>Emulated rack 1 (physical host)</p>
    <p>Container 1</p>
    <p>Container M</p>
    <p>Emulated rack N (physical host)</p>
    <p>Container 1</p>
    <p>Container M</p>
  </div>
  <div class="page">
    <p>Click hybrid switch (physical host)</p>
    <p>One more thing: Etalon emulator Use time dilation to emulate highbandwidth links</p>
    <p>slows down rest of the machine  libVT: Catches common syscalls</p>
    <p>Flowgrind to generate traffic</p>
    <p>Strobe schedule: Each rack pair gets a circuit for an equal share</p>
    <p>Emulated rack 1 (physical host)</p>
    <p>Container 1</p>
    <p>Container M</p>
    <p>Emulated rack N (physical host)</p>
    <p>Container 1</p>
    <p>Container M</p>
  </div>
  <div class="page">
    <p>Summary: Adapting TCP for RDCNs Bandwidth fluctuations in reconfigurable datacenter networks break TCPs implicit assumption of relative network stability</p>
    <p>Two techniques to ramp up TCP during short-lived circuits</p>
    <p>Dynamic buffer resizing: Adapt ToR queues to packet or circuit network  reTCP: Ramp up aggressively to fill new queue capacity</p>
    <p>Etalon emulator open source at: github.com/mukerjee/etalon</p>
    <p>Christopher Canel ~ ccanel@cmu.edu</p>
    <p>Thank you!</p>
  </div>
</Presentation>
