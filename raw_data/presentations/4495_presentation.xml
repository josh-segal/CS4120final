<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Analysis of Peer-Assisted Video-onDemand Systems with Scalable Video</p>
    <p>Streams</p>
    <p>(Joint work with Kianoosh Mokhtarian)</p>
    <p>School of Computing Science Simon Fraser University, Canada</p>
  </div>
  <div class="page">
    <p>Motivations</p>
    <p>Wide deployment of P2P streaming systems - PPLive, UUSee, SopCast, CoolStreaming, .</p>
    <p>Video streams: 300 kbps to 1.5+ Mbps</p>
    <p>Typically more than upload bandwidth of most peers  seed servers needed to help  peerassisted streaming systems</p>
  </div>
  <div class="page">
    <p>Motivations</p>
    <p>Receivers are quite heterogeneous - network, processing power, screen resolution,</p>
    <p>Server</p>
    <p>Internet</p>
    <p>Cable</p>
    <p>Wireless</p>
    <p>DSL</p>
  </div>
  <div class="page">
    <p>Supporting Receiver Heterogeneity</p>
    <p>Encode low bitrate videos - Supports more receivers</p>
    <p>- Low video quality for everyone</p>
    <p>Distribute multiple versions (simulcasting) - Need to encode video several times</p>
    <p>- Switching among versions (wait for next I-frame)</p>
    <p>- Reduced connectivity (P2P): different stream versions  different P2P networks</p>
  </div>
  <div class="page">
    <p>Supporting Receiver Heterogeneity</p>
    <p>Multiple Description Coding (MDC) - Video quality ~ number of descriptions received</p>
    <p>- Considerable bitrate overhead</p>
    <p>- Computationally complex</p>
    <p>Scalable Video Coding (SVC) - Encode and distribute one video stream</p>
    <p>- Extract and decode various substreams</p>
    <p>- Lower overhead, simpler than MDC</p>
    <p>- Our focus in this paper</p>
  </div>
  <div class="page">
    <p>Our Contributions</p>
    <p>Analytical model for peer-assisted streaming systems with SVC - General model; details worked out for typical systems</p>
    <p>- Validated using simulations</p>
    <p>Provides insights and answers questions such as - What is the expected throughput or video quality?</p>
    <p>- How much seeding capacity is needed to increase quality to certain level?</p>
    <p>- How many peers can the system support in flash crowd scenarios?</p>
  </div>
  <div class="page">
    <p>Previous Works</p>
    <p>Capacity growth of P2P system over time [Tu 05] - Finding the time to turn off servers</p>
    <p>- Similar analysis based on fluid model in [Kumar 07]</p>
    <p>- Only nonscalable video streams</p>
    <p>Streaming capacity/startup delay and piece selection strategies [Zhou 07, Parvez 08] - Random matching of peers</p>
    <p>Analysis based on constructing specific overlay topology [Small 06, Liu 08] - Cannot support most of todays systems</p>
  </div>
  <div class="page">
    <p>System Model</p>
    <p>Trackers - Receive periodic update reports from peers</p>
    <p>Peers - Join by contacting one of the trackers</p>
    <p>- Try to serve lower layers first</p>
    <p>As many layers as they can</p>
    <p>- Download in a streaming form, at the video bitrate</p>
    <p>Seed servers - Serve requests when not enough capacity in peers</p>
    <p>- Finite resources</p>
  </div>
  <div class="page">
    <p>System Model</p>
    <p>Video file divided into S small segments</p>
    <p>- Time unit = segment length = Tseg (e.g., 1 minute)</p>
    <p>- Peers in Ps (peers currently watching segment s) can</p>
    <p>serve to peers in P1,,s-1</p>
    <p>Serving requests by seed servers - Random</p>
    <p>- Contribution based [Mokhtarian 09]</p>
  </div>
  <div class="page">
    <p>System Model</p>
    <p>Inputs (characteristics of P2P system) - Joint distribution of upload and download</p>
    <p>bandwidths (random variables D and U)</p>
    <p>Pr( x1  D  x2 , y1  U  y2 )</p>
    <p>- The expected peer seeding duration Tseed</p>
    <p>- Capacity of seed servers C, number of video layers L, bitrate of each layer rl(t) at each segment t</p>
    <p>- Distribution of peer arrivals (random variable N)</p>
    <p>Pr(N = n): probability of n arrivals in one time unit (Tseg)</p>
    <p>- Peer failure/departure rate  (t) at segment t</p>
  </div>
  <div class="page">
    <p>System Model</p>
    <p>Outputs - System throughput</p>
    <p>- Average video quality served</p>
    <p>- Max number of supported peers (flash crowd)</p>
  </div>
  <div class="page">
    <p>General Analytical Model: Overview</p>
    <p>High-level procedure</p>
    <p>- Step 1: Estimate the capacity that peers in Ps can</p>
    <p>serve to others (i.e., P1,,s-1) as a function of the</p>
    <p>capacity served to Ps</p>
    <p>- Step 2: Employ this function for s = S, S-1, , 1 to analyze the distribution of the complete video</p>
  </div>
  <div class="page">
    <p>General Analytical Model: Step 1</p>
    <p>Step 1: Distribution of one video segment</p>
    <p>- f(e , l , rl , n): expected value of output capacity for layer</p>
    <p>l of a segment when serving it with capacity e to n peers</p>
    <p>e  rl  n: trivial  f(.) in this case denoted by fall(.)</p>
    <p>e &lt; rl  n: only [e/rl] of the n peers can be served</p>
    <p>Selected randomly  frnd(.)</p>
    <p>Selected based on contribution  fopt(.)</p>
    <p>- Auxiliary rnd variable Ul: upload bw of peers for layer l</p>
    <p>Distr of Ul estimated using U and peers upload behavior</p>
  </div>
  <div class="page">
    <p>General Analytical Model: Step 1</p>
    <p>Step 1: Distribution of one video segment</p>
    <p>- f(e , l , rl , n): expected value of the output capacity</p>
    <p>k: num peers that capacity e can serve with layer l</p>
    <p>Rl: bitrate of the first l layers</p>
    <p>E[ Ul | D  Rl ]: expected upload bw (for layer l) of a</p>
    <p>peer given that it can download layers 1 to l</p>
  </div>
  <div class="page">
    <p>General Analytical Model: Step 1</p>
    <p>dx</p>
    <p>Step 1: Distribution of one video segment</p>
    <p>- fopt(e , l , rl , n): expected output capacity of the first k</p>
    <p>peers out of a set of n</p>
    <p>- Assume a sorted list of peers according to serving</p>
    <p>capacity for layer l. Let k+1-st peers have capacity x</p>
    <p>The expected capacity of the first k peers:</p>
    <p>0</p>
    <p>],|[ ),,,( llllopt RxkEnrlef DUU</p>
    <p>Pr(k peers have capacity &gt; x, one has x, n - k have &lt; x)</p>
    <p>],|[ lll RxkE  DUU</p>
  </div>
  <div class="page">
    <p>General Analytical Model: Step 2</p>
    <p>Step 2: distribution of video segments over time - Peers dynamics (at a given segment)</p>
    <p>Using fopt | rnd | all (.) obtained so far, the expected</p>
    <p>output capacity of a set of peers at a segment is:</p>
    <p>)stayspeer aPr(),,,() demand peers Pr(</p>
    <p>)stayspeer aPr(),,,() demand peers Pr(</p>
    <p>|1</p>
    <p>nrlefln</p>
    <p>nrlefln</p>
    <p>lrndoptkn</p>
    <p>lall</p>
    <p>k</p>
    <p>n</p>
    <p>- Pr(there are n peers demanding layer l at a given seg): calced using distr of N &amp; D (arrivals and bandwidths)</p>
    <p>- Pr(a peer at a given seg stays until next seg): calculated using peer failure rate</p>
  </div>
  <div class="page">
    <p>General Analytical Model: Step 2</p>
    <p>Step 2: distribution of video segments over time - We know how to calculate the expected output of peers</p>
    <p>at a segment (prev slide):</p>
    <p>- e: input capacitiy, l: layer, rl: layer rate, N: random</p>
    <p>variable denoting arrivals, : probability of departure</p>
    <p>- At time instance i, throughput of peers at segment t is:</p>
    <p>- Term I: input capacity to seg, rl(t): rate of layer l at seg t,</p>
    <p>t (rnd variable): num peers at t, (t): departure rate at t 17</p>
  </div>
  <div class="page">
    <p>General Analytical Model: Step 2</p>
    <p>Step 2: distribution of video segments over time</p>
    <p>- xit,l converge over time; xt,l: the converged value</p>
    <p>- Expected num peers receiving layer l of segment t in the long term: mt,l = xt,l / rl(t)</p>
    <p>Steady-state throughput:</p>
    <p>Average video quality:</p>
    <p>t: because different num peers in different segs</p>
  </div>
  <div class="page">
    <p>General Analytical Model: Step 2</p>
    <p>Step 2: distribution of video segments over time</p>
    <p>- Max peers that system can support in a flash crowd?</p>
    <p>- Recall: the expected num peers receiving layer l of</p>
    <p>segment t in the long term: mt,l = xt,l / rl(t)</p>
    <p>- Max of number of supportable peer =</p>
    <p>number of minimal substreams (base layers) that can</p>
    <p>be served using the expected capacity of the system =</p>
    <p>[total capacity  capacity needed for minimally serving</p>
    <p>current peers] / bitrate of base layer of first few segs =</p>
  </div>
  <div class="page">
    <p>Analysis of Example System: Procedure</p>
    <p>Employing the general analytical model to analyze a sample P2P streaming system</p>
    <p>- Video streams: L layers, each at rate r kbps</p>
    <p>- Download bandwidths ~ U(0, M)</p>
    <p>- Upload bandwidth =   download bandwidth</p>
    <p>- Peer arrivals: Poisson distribution with arrival rate</p>
    <p>- Peer departures: given probabilities t at each seg t</p>
    <p>Auxiliary random variables, intermediary functions fopt | rnd | all(.), and finally, mt,l values calculated</p>
  </div>
  <div class="page">
    <p>Analysis of an Example System: Results</p>
    <p>Distribution of one layer of one video segment</p>
    <p>- 1-hour video, 1-min segments, 10 layers at rate 200 kbps each, max download bw: 10 Mbps, upload bw: 20% of download, arrival rate: 10 peers per minute, 25% of peers eventually leaveNum peers receiving layer 5. Lowest curve:</p>
    <p>seed server capacity of 1 layer rate. 21</p>
  </div>
  <div class="page">
    <p>Analysis of an Example System: Results</p>
    <p>Distribution of the complete video</p>
    <p>Average video quality delivered to peers for different seeding capacities</p>
  </div>
  <div class="page">
    <p>Validation of the Analysis</p>
    <p>Simulation setup - Peers and video characteristics</p>
    <p>On average 500600 peers in the network</p>
    <p>- Event-driven simulation, 10-second time step</p>
    <p>- Peers disobey some of our model assumptions and have other dynamics; to simulate realistic settings</p>
  </div>
  <div class="page">
    <p>Validation of the Analysis: Results</p>
    <p>Theoretical results are close to simulation results</p>
  </div>
  <div class="page">
    <p>Analyzing Seed Server Allocation Methods</p>
    <p>Expected throughput of the system in the long term</p>
  </div>
  <div class="page">
    <p>Analyzing Flash Crowd Scenarios</p>
    <p>Max number of peers that the system can serve (with minimal substream) in a flash crowd</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Theoretical analysis of P2P/peer-assisted</p>
    <p>streaming systems with scalable videos</p>
    <p>- The long-term throughput and delivered video quality</p>
    <p>The cost-benefit tradeoff for provisioning a higher</p>
    <p>server capacity to have a desired throughput/quality</p>
    <p>- Max number of peers that the system can support in a</p>
    <p>flash crowd</p>
    <p>- Validated though simulations; results confirm the</p>
    <p>accuracy</p>
  </div>
  <div class="page">
    <p>Thank You!</p>
    <p>Questions??</p>
    <p>More info at:</p>
    <p>http://nsl.cs.sfu.ca/</p>
  </div>
  <div class="page">
    <p>References</p>
    <p>[Small 06]: T. Small, B. Liang, and B. Li. Scaling laws and tradeoffs in peer-to-peer live multimedia streaming. In Proc. of ACM Multimedia Conference, pages 539--548, Santa Barbara, CA, October 2006.</p>
    <p>[Liu 08]: S. Liu, R. Zhang-Shen, W. Jiang, J. Rexford, and M. Chiang. Performance bounds for peer-assisted live streaming. In Proc. of ACM Conference on Measurement and Modeling of Computer Systems (SIGMETRICS'08), pages 313--324, Annapolis, MD, June 2008.</p>
    <p>[Tu 05]: Y. Tu, J. Sun, M. Hefeeda, Y. Xia, and S. Prabhakar. An analytical study of peer-to-peer media streaming systems. ACM Transactions on Multimedia Computing, Communications, and Applications, 1(4):354--376, November 2005.</p>
    <p>[Kumar 07]: R. Kumar, L. Yong, and K. Ross. Stochastic fluid theory for P2P streaming systems. In Proc. of IEEE INFOCOM'07, pages 919--927, Anchorage, AK, May 2007.</p>
    <p>[Zhou 07]: Y. Zhou, D. Chiu, and J. Lui. A simple model for analyzing P2P streaming. In Proc. of IEEE International Conference on Network Protocols (ICNP'07), pages 226--235, Beijing, China, October 2007.</p>
    <p>[Parvez 08]: N. Parvez, C. Williamson, A. Mahanti, and N. Carlsson. Analysis of Bittorrent-like protocols for on-demand stored media streaming. In Proc. of ACM Conference on Measurement and Modeling of Computer Systems (SIGMETRICS'08), pages 301--312, Annapolis, MD, June 2008.</p>
  </div>
</Presentation>
