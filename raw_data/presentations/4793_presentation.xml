<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>The Effectiveness of Stackelberg strategies and Tolls for Network Congestion Games</p>
    <p>Chaitanya Swamy University of Waterloo</p>
  </div>
  <div class="page">
    <p>Network congestion games directed graph G=(V,E) with source s, sink t latency functions le on edges: continuous, nondecreasing le(x) = delay on edge e with x units of flow/traffic Flow has to be routed from s to t</p>
    <p>Nonatomic game: infinite # of users controlling  flow</p>
    <p>Atomic splittable game: k users; user i controls Di flow that has to be routed (splittably) from s to t</p>
    <p>Total volume of flow = 1 (so i Di = 1 in atomic case)</p>
    <p>For a path P and flow f, lP(f) = eP le(fe)</p>
    <p>= latency of path P</p>
    <p>lf(x) = x</p>
    <p>le(x) = 1</p>
    <p>s t</p>
  </div>
  <div class="page">
    <p>Price of Anarchy (PoA) Cost of a flow f, C(f) = e fe le(fe) = P fP lP(f)</p>
    <p>= total delay experienced by users o  optimal flow C(o) = minfeasible flows f C(f) = OPT</p>
    <p>Use Nash equilibrium to analyze selfish behavior Nash equilibrium  combination of players strategies where no user has incentive to deviate unilaterally</p>
    <p>Price of anarchy (PoA) of network game = ratio of cost of worst Nash flow to OPT = maxNash flows fN C(fN)/C(o)</p>
    <p>PoA is unbounded for both nonatomic and atomic congestion games (as k) even when G has only 2 parallel links; Roughgarden &amp; Tardos, Roughgarden</p>
  </div>
  <div class="page">
    <p>Two ways of reducing the PoA</p>
    <p>a) Stackelberg strategies  central authority controls some -fraction of flow and</p>
    <p>routes it in any desired way  remaining (1-)-fraction is routed selfishly</p>
    <p>simple, no communication needed b/w system and selfish users, no notion of currency required</p>
    <p>Korilis, Lazar &amp; Orda (KLO97): first considered Stackelberg strategies to improve system performance  motivation came from virtual-private-network</p>
    <p>design, where system must allocate bandwidth on preassigned virtual paths</p>
  </div>
  <div class="page">
    <p>Two ways of reducing PoA</p>
    <p>b) Network tolls  impose tolls e on edges: net disutility incurred</p>
    <p>by user i on edge e = li,e(x; e) = i.le(x) + e i: user is sensitivity to delay</p>
    <p>is flow routes selfishly wrt. latency fns li,e(x; e)</p>
    <p>classic means of congestion control: proposed by Pigou way back in 1920 (P20).</p>
    <p>known to be quite effective for nonatomic routing: optimal flow can be induced via tolls</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Stackelberg strategies  KLO97: for parallel-link graphs + MM1 latency fns.</p>
    <p>gave conditions under which Stackelberg strategy that induces an optimal flow</p>
    <p>Roughgarden (R05): for parallel-link graphs strategy that reduces PoA to 1/ for arbitrary latencies that reduces PoA to 4/(3+) for linear latencies</p>
    <p>Kumar &amp; Marathe: PTAS for finding best strategy  recent work: Kaporis &amp; Spirakis, Sharma &amp; Williamson,</p>
    <p>Karakostas &amp; Kolliopoulos (KK06), Correa &amp; Stier-Moses (CS06)</p>
  </div>
  <div class="page">
    <p>Related Work (contd.)</p>
    <p>Network tolls  P20, Beckman, McGuire &amp; Winston: marginal</p>
    <p>cost tolls induce OPT for homogenous users</p>
    <p>Cole, Dodis &amp; Roughgarden: tolls inducing optimal flow exist for heterogenous users</p>
    <p>Fleischer, Jain &amp; Mahdian; Karakostas &amp; Kolliopoulos; Yang &amp; Huang: can find optimal tolls for heterogenous, multicommodity users</p>
    <p>Not much known in atomic case. Hayrapetyan, Tardos &amp; Wexler; Cominetti, Correa &amp; Stier-Moses: show C(atomic Nash)  C(nonatomic Nash) in some cases  optimal tolls exist in these cases</p>
    <p>Nonatomi c routing</p>
  </div>
  <div class="page">
    <p>Our Results Stackelberg strategies: obtain first results for</p>
    <p>graphs more general than parallel-link graphs  series-parallel graphs: show that PoA is at most</p>
    <p>quantifying trade-off b/w price of anarchy and  PoA = 1; if =1 PoA for latency-class; if =0 (with no flow control) (Independently KK06 have obtained such results for linear latencies; CS06 have also obtained some results.)</p>
    <p>parallel-link graphs: PoA is at most  + (1-)(PoA without any flow control)  PoA always improves by controlling flow</p>
  </div>
  <div class="page">
    <p>Our Results Stackelberg strategies: obtain first results for graphs</p>
    <p>more general than parallel-link graphs  series-parallel graphs: PoA  1/+1 for arbitrary latencies  general graphs: obtain latency-class specific bounds</p>
    <p>quantifying trade-off b/w price of anarchy and   parallel-link graphs: PoA   + (1-)(PoA with no control)</p>
    <p>Network tolls: optimal tolls exist for atomic splittable users, even heterogenous, multicommodity users  tolls can be computed by solving a convex program  results extend to general atomic splittable</p>
    <p>congestion games  completely characterize flows induceable via tolls</p>
  </div>
  <div class="page">
    <p>Series-Parallel (sepa) Graphs</p>
    <p>sepa graphs with ends s, t are defined inductively: is a sepa graph</p>
    <p>Given two sepa graphs: ,</p>
    <p>Series construction:</p>
    <p>G1 G1s1 t1 G2</p>
    <p>G2s2 t2</p>
    <p>s t</p>
    <p>G1 G1 G2</p>
    <p>G2s t G1 G1</p>
    <p>G1 G1</p>
    <p>s t</p>
    <p>Exampl e:</p>
    <p>Parallel construction:</p>
  </div>
  <div class="page">
    <p>Largest-Latency-First (LLF)  Compute an optimal flow o  Saturate paths of o starting from largest latency</p>
    <p>path until  units are routed</p>
    <p>Generalization of the LLF strategy introduced by R05 for parallell-link graphs</p>
    <p>xx 0.5</p>
    <p>xx</p>
    <p>optima l flow o</p>
    <p>LLF strategy g =0.5</p>
    <p>Let g = LLF Stackelberg strategy h = induced Nash flow, i.e., h is Nash flow</p>
    <p>wrt.</p>
    <p>latency functions le(x) = le(x+ge)</p>
  </div>
  <div class="page">
    <p>PoA of LLF for sepa graphs Basic property of Nash flow for nonatomic routing: f = (fP) is a Nash flow iff</p>
    <p>fP&gt;0  lP(f)  lP(f) for every s-t path P i.e., every flow-path used by Nash flow has minimum latency among all s-t pathsSepa lemma: Given a sepa graph with ends s, t: i) If f, f are two s-t flows where f routes more flow than f, then there exists a path P s.t.</p>
    <p>fe&gt;0 and fe  fe for all eP.</p>
    <p>ii) Let P be any s-t path, f be any s-t flow. path P s.t.</p>
    <p>fe&gt;0 for all eP, and P  {eP: fe&gt;0}.</p>
  </div>
  <div class="page">
    <p>Theorem: PoA of LLF is at most 1/+1 on sepa graphs.</p>
    <p>Proof: (a) Due to LLF strategy, for any path P,</p>
    <p>if (o-g)e&gt;0 for all eP, then lP(o)  OPT/ . (b) By part (i) of sepa lemma with f=o-g, f=h, path P s.t. for all eP, he  oe-ge, oe-ge&gt;0.</p>
    <p>So L* = Nash latency  lP(h) = lP(g+h)  lP(o)  OPT/ . P hP lP(g+h)  (1-).L*. (c) for an s-t path Q,</p>
    <p>lQ(g+h) = eQ: he=0 le(ge+he) + eQ: he&gt;0 le(ge+he) . By part (ii) of sepa lemma (taking f=h), we get that path Q s.t. he&gt;0 eQ and {eQ: he&gt;0}  Q</p>
    <p>eQ: he&gt;0 le(ge+he)  eQ le(ge+he) = lQ(g+h) = L *</p>
    <p>Q gQ lQ(g+h)  Q gQ (lQ(g)+L*)  C(g)+.L*</p>
    <p>C(g+h)  C(g)+L* OPT.(1/+1)</p>
  </div>
  <div class="page">
    <p>Tolls for atomic splittable users</p>
    <p>Given tolls = {e}:</p>
    <p>user i experiences net disutility li,e(x; te) = i.le(x) + e on edge e i  toll vs. time conversion factor for user i</p>
    <p>i routes her flow selfishly to minimize her disutility a flow profile (f1,,fk) is an atomic Nash equilibrium,</p>
    <p>where fi is user is flow, if for each user i, fi minimizes e fi,e li,e(fe; e) where f = i fi</p>
    <p>Goal: find tolls that induce an optimal flow (if possible)</p>
    <p>Heterogenous, multicommodity (or asymmetric) users: user i controls Di flow, has to be routed from si to ti</p>
  </div>
  <div class="page">
    <p>A convex program</p>
    <p>Useful characterization of atomic Nash: given flows (f1,,fk), define Li,e(x; e) = i (le(x) + fi,ele(x)) + e</p>
    <p>Li,e measures the marginal cost of increasing user is flow on edge e</p>
    <p>Then, (f1,,fk) is an atomic Nash iff for each user i,</p>
    <p>fi,P &gt; 0  eP Li,e(fe; e)  eP Li,e(fe; e) si-ti paths P</p>
    <p>(*)</p>
    <p>Key idea: (*) can be interpreted as the KuhnKarusch-Tucker (KKT) conditions of a suitable convex program</p>
    <p>derivative wrt. x</p>
  </div>
  <div class="page">
    <p>Convex program (contd.) Define Li,e(x; te) = i (le(x) + fi,ele(x)) + e (f1,,fk) is an atomic Nash iff for each user i,</p>
    <p>fi,P &gt; 0  eP Li,e(fe; te)  eP Li,e(fe; te) si-ti paths P (*)</p>
    <p>Want i fi= H for some atomic Nash equilibrium (f1, ,fk)min A := i i (si-ti paths P lP(H) + 0.5 e le(He)fi,e</p>
    <p>s.t. i fi,e  He edges e</p>
    <p>si-ti paths P fi,P = Di users i</p>
    <p>fi,P  0 i, si-ti paths P</p>
    <p>fi,e =  fi,P si-ti paths P s.t. eP</p>
    <p>KKT conditions: (f1,,fk) is an optimal solution iff e  0, zi :</p>
    <p>zi  eP e + A/fi,P = eP Li,e(fe; e) for every si-ti path P</p>
  </div>
  <div class="page">
    <p>Convex program (contd.) Define Li,e(x; te) = i (le(x) + fi,ele(x)) + e (f1,,fk) is an atomic Nash iff for each user i,</p>
    <p>fi,P &gt; 0  eP Li,e(fe; te)  eP Li,e(fe; te) si-ti paths P (*)</p>
    <p>Want i fi= H for some atomic Nash equilibrium (f1, ,fk)min A := i i (si-ti paths P lP(H) + 0.5 e le(He)fi,e</p>
    <p>s.t. i fi,e  He edges e</p>
    <p>si-ti paths P fi,P = Di users i</p>
    <p>fi,P  0 i, si-ti paths P</p>
    <p>fi,e =  fi,P si-ti paths P s.t. eP</p>
    <p>Theorem: H is induceable iff optimal soln. (f1,,fk) s.t. i fi= H.</p>
    <p>KKT conditions: (f1,,fk) is an optimal solution iff e  0, zi :</p>
    <p>zi  eP e + A/fi,P = eP Li,e(fe; e) for every si-ti path P  fi,P &gt; 0  zi = eP e + A/fi,P = eP Li,e(fe; e)</p>
  </div>
  <div class="page">
    <p>Open Questions</p>
    <p>Stackelberg routing on general graphs: bounded PoA for arbitrary latencies?</p>
    <p>What about multicommodity networks?  Stackelberg strategies for other</p>
    <p>objectives?</p>
    <p>Understanding of atomic splittable Nash equilibria</p>
  </div>
  <div class="page">
    <p>Thank You</p>
  </div>
</Presentation>
