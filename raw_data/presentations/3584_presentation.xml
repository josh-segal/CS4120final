<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Small World with High Risks: A Study of Security Threats in the npm</p>
    <p>Ecosystem</p>
    <p>Markus Zimmermann - TU Darmstadt Cristian-Alexandru Staicu - TU Darmstadt</p>
    <p>Cam Tenny - r2c Michael Pradel - TU Darmstadt</p>
    <p>August 15, 2019</p>
  </div>
  <div class="page">
    <p>JavaScript and npm</p>
    <p>https://insights.stackoverflow.com/survey/2018/ 2</p>
    <p>npmjs.com retrieved on May 8, 2018</p>
  </div>
  <div class="page">
    <p>eslint Incident</p>
    <p>~10 million downloads</p>
    <p>Compromised credentials</p>
    <p>of maintainer</p>
    <p>Malicious version</p>
    <p>tried to steal access tokens</p>
  </div>
  <div class="page">
    <p>Goals  What is the impact of an individual package on the ecosystem?</p>
    <p>What is the influence of a maintainer on the ecosystem?</p>
    <p>How many packages depend on a package with unpatched security vulnerabilities?</p>
  </div>
  <div class="page">
    <p>On average, packages implicitly trust 79 third-party packages and 39 maintainers</p>
    <p>Popular packages often influence more than 100,000 other packages</p>
    <p>Some maintainers have an impact on hundreds of thousands of packages</p>
    <p>Up to 40% of all packages depend on code with at least one publicly known vulnerability</p>
    <p>Key Findings</p>
  </div>
  <div class="page">
    <p>Particularities of npm</p>
    <p>No vetting of developers</p>
    <p>Open publishing model</p>
    <p>Heavy reuse</p>
    <p>Locked dependencies</p>
    <p>Package / Account takeover</p>
    <p>Malicious packages</p>
    <p>Exploiting unmaintained legacy code</p>
    <p>Maintainer collusion</p>
  </div>
  <div class="page">
    <p>Empirical Study</p>
  </div>
  <div class="page">
    <p>Experimental Setup</p>
    <p>Observation period: November 2010 - April 2018</p>
  </div>
  <div class="page">
    <p>Evolution of Dependencies</p>
  </div>
  <div class="page">
    <p>Evolution of Package Reach</p>
  </div>
  <div class="page">
    <p>Evolution of Maintainer Influence</p>
    <p>Less than 100 maintainers are needed to reach 50%, 22.2 % are needed to reach all with dependencies</p>
  </div>
  <div class="page">
    <p>Evolution of Security Advisories</p>
  </div>
  <div class="page">
    <p>Potential Mitigations</p>
    <p>Raising developer awareness of dependency risks</p>
    <p>Warn about vulnerable packages</p>
    <p>Vetting code or maintainers</p>
  </div>
  <div class="page">
    <p>Code Vetting as Mitigation</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>On average, packages implicitly trust 79 third-party packages and 39 maintainers</p>
    <p>Popular packages influence often more than 100,000 other packages</p>
    <p>Some maintainers have an impact on hundreds of thousands of packages</p>
    <p>Up to 40% of all packages depend on code with at least one publicly known vulnerability</p>
  </div>
</Presentation>
