<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Center for Research in Intelligent Storage</p>
    <p>On the Accuracy and Scalability of Intensive I/O Workload Replay</p>
    <p>Alireza Haghdoost, Weiping He, Jerry Fredin*, David H.C. Du</p>
    <p>University of Minnesota, *NetApp Inc.</p>
  </div>
  <div class="page">
    <p>Storage performance is heavily dependent on the workload</p>
    <p>Replay &amp; Performance evaluation with real workloads o Does not require a real infrastructure to produce real workload</p>
    <p>o Does not expose a production systems to potential downtime risk</p>
    <p>What is IO Workload Replay ?</p>
    <p>Storage Array</p>
    <p>Production</p>
    <p>IO Workload</p>
    <p>I/O Trace</p>
    <p>Test Storage Array</p>
    <p>Replay Tool</p>
    <p>I/O Trace</p>
  </div>
  <div class="page">
    <p>Replay Intensive IO workload with High Accuracy is challenging</p>
    <p>o Intensive Workload? (Give me example please.)</p>
    <p>What are the Challenges?</p>
    <p>More than 100K IOPS Less than 2ms Response Time</p>
    <p>IO Workload for Enterprise Block Storage Arrays (SAN)</p>
  </div>
  <div class="page">
    <p>Replay Intensive IO workload with High Accuracy is challenging</p>
    <p>o Intensive Workload?</p>
    <p>o What Does High Accuracy Mean? 1. Replay on Similar Storage</p>
    <p>What are the Challenges?</p>
  </div>
  <div class="page">
    <p>Replay on Similar storage: Reproduce the workload with the same</p>
    <p>Throughput Response time IO Request Ordering</p>
    <p>What Does High Accuracy Mean?</p>
  </div>
  <div class="page">
    <p>Replay on Faster storage: Emulate original application behavior</p>
    <p>Throughput Response time</p>
    <p>Replay with the same throughput and response-time that original app would do on the faster storage</p>
    <p>What Does High Accuracy Mean?</p>
  </div>
  <div class="page">
    <p>o Used to Replay on Similar Storage</p>
    <p>o Not capable to scale IO workload</p>
    <p>o Used to Replay on Faster storage</p>
    <p>o Not accurate, overlook computation and wait time</p>
    <p>o Ignore dependencies between IO requests</p>
    <p>o Does not scale well because of filesystem and application layers overhead</p>
    <p>Existing Replay Approaches</p>
  </div>
  <div class="page">
    <p>Existing Replay Approaches</p>
    <p>Accuracy</p>
    <p>In te</p>
    <p>n s it</p>
    <p>y</p>
    <p>TS TSFS</p>
    <p>AFAP hfplayer</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Replay on Similar Storage</p>
    <p>Replay on Faster Storage</p>
    <p>Evaluation</p>
    <p>Agenda</p>
  </div>
  <div class="page">
    <p>Unscaled Replay</p>
    <p>TS Replay</p>
    <p>Ideal IO Stack</p>
    <p>TS Replay</p>
    <p>Linux IO Stack</p>
    <p>User-Space</p>
    <p>Kernel-Space</p>
    <p>Storage</p>
    <p>Out-of-Order</p>
    <p>Unexpected Response Time</p>
  </div>
  <div class="page">
    <p>Forced preemption of system call threads</p>
    <p>User space to Kernel space context switch</p>
    <p>Limited queuing in the IO stack</p>
    <p>Lack of inflight IO control</p>
    <p>Sources of Workload Replay Uncertainty</p>
    <p>ftrace therapy</p>
  </div>
  <div class="page">
    <p>Forced preemption of system call threads</p>
    <p>User space to Kernel space context switch</p>
    <p>Limited queuing in the IO stack</p>
    <p>Lack of inflight IO control</p>
    <p>Sources of Workload Replay Uncertainty</p>
  </div>
  <div class="page">
    <p>Forced preemption of system call threads</p>
    <p>User space to Kernel space context switch</p>
    <p>Limited queuing in the IO stack</p>
    <p>Lack of inflight IO control</p>
    <p>Sources of Workload Replay Uncertainty</p>
  </div>
  <div class="page">
    <p>Forced preemption of system call threads</p>
    <p>User space to Kernel space context switch</p>
    <p>Limited queuing in the IO stack</p>
    <p>Lack of inflight IO control</p>
    <p>Sources of Workload Replay Uncertainty</p>
  </div>
  <div class="page">
    <p>Limited queuing in the Linux IO stack</p>
    <p>head</p>
    <p>tail io_submit(2)</p>
    <p>libaio Block Layer</p>
    <p>io_getevents(2)</p>
    <p>SCSI Layer</p>
    <p>To/From SAN</p>
    <p>Controller</p>
  </div>
  <div class="page">
    <p>Limited queuing in the Linux IO stack</p>
    <p>head</p>
    <p>tail io_submit(2)</p>
    <p>libaio Block Layer</p>
    <p>io_getevents(2)</p>
    <p>SCSI Layer</p>
    <p>To/From SAN</p>
    <p>Controller</p>
    <p>Scheduling a Kernel Worker thread is expensive &amp; take unpredictable time &amp;</p>
    <p>Changes replayed IO ordering</p>
    <p>I am Full now</p>
  </div>
  <div class="page">
    <p>Any Remedies?</p>
    <p>Block Layer queue size =</p>
    <p>SCSI Layer queue size =</p>
    <p>Max Queue Depth that HBA support</p>
  </div>
  <div class="page">
    <p>The more in-flight requests sitting in the queue: o Exponential increase of response time</p>
    <p>Any Side-effects ?</p>
    <p>R e</p>
    <p>sp o</p>
    <p>n se</p>
    <p>-T im</p>
    <p>e</p>
    <p>In-Flight IO Requests</p>
  </div>
  <div class="page">
    <p>Dynamic In-Flight I/O Control implemented in the replayer</p>
    <p>Calculate desired number of in-flight requests</p>
    <p>Throttle the replay speed by bounding the number of in-flight request at run time</p>
    <p>Any Remedies for Side-effects ?</p>
    <p>In -F</p>
    <p>li g</p>
    <p>h t</p>
    <p>R e</p>
    <p>q u</p>
    <p>e st</p>
    <p>s 256</p>
    <p>Time</p>
    <p>Desired Maximum</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Replay on Similar Storage</p>
    <p>Replay on Faster Storage</p>
    <p>Evaluation</p>
    <p>Agenda</p>
  </div>
  <div class="page">
    <p>o Requests with short think time (e.g. B and C)</p>
    <p>Inferring Potential Dependencies</p>
  </div>
  <div class="page">
    <p>Example: o IO request B is dependent to A</p>
    <p>Replay on Scaled Storage</p>
    <p>A B</p>
    <p>Think time A Response time A Think time B Response time B</p>
    <p>t1 t2 t3t0</p>
    <p>Production Workload</p>
    <p>Think time A Response</p>
    <p>time A Think time B</p>
    <p>Response time B</p>
    <p>Workload on Faster Storage</p>
  </div>
  <div class="page">
    <p>Emulates production workload on scaled storage</p>
    <p>preserve think time and dynamically adjust issue time</p>
    <p>Replay on Scaled Storage</p>
    <p>Think time A Response time A Think time B Response time B</p>
    <p>t1 t2 t3t0</p>
    <p>Think time A Response</p>
    <p>time A Think time B</p>
    <p>Response time B</p>
    <p>tc tc + (t3-t2)</p>
    <p>Production Workload</p>
    <p>Dependency Replay</p>
    <p>Think time A Response</p>
    <p>time A Think time B</p>
    <p>Response time B</p>
    <p>Workload on Faster Storage</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Replay on Similar Storage</p>
    <p>Replay on Faster Storage</p>
    <p>Evaluation</p>
    <p>Agenda</p>
  </div>
  <div class="page">
    <p>Evaluation Methodology on Unscaled Storage</p>
    <p>Fast Storage Array</p>
    <p>IO Intensive</p>
    <p>Workload</p>
    <p>SSD SSD SSD SSD</p>
    <p>Fast Storage Array</p>
    <p>hfplayer</p>
    <p>SSD SSD SSD SSD</p>
    <p>I/O Trace</p>
    <p>I/O Trace</p>
  </div>
  <div class="page">
    <p>Evaluation Methodology on Unscaled Storage</p>
    <p>Fast Storage Array</p>
    <p>IO Intensive</p>
    <p>Workload</p>
    <p>SSD SSD SSD SSD</p>
    <p>Fast Storage Array</p>
    <p>btreplayhfplayer</p>
    <p>SSD SSD SSD SSD</p>
    <p>I/O Trace</p>
    <p>I/O Trace</p>
  </div>
  <div class="page">
    <p>Evaluation Methodology on Unscaled Storage</p>
    <p>Fast Storage Array</p>
    <p>IO Intensive</p>
    <p>Workload</p>
    <p>SSD SSD SSD SSD</p>
    <p>Fast Storage Array</p>
    <p>blkreplaybtreplayhfplayer</p>
    <p>SSD SSD SSD SSD</p>
    <p>I/O Trace</p>
    <p>I/O Trace</p>
  </div>
  <div class="page">
    <p>R e</p>
    <p>la ti</p>
    <p>v e</p>
    <p>E x e</p>
    <p>c.</p>
    <p>T im</p>
    <p>e E</p>
    <p>rr o</p>
    <p>r (%</p>
    <p>)</p>
    <p>R e</p>
    <p>la ti</p>
    <p>v e</p>
    <p>A</p>
    <p>v g</p>
    <p>. La</p>
    <p>te n</p>
    <p>cy E</p>
    <p>rr o</p>
    <p>r (%</p>
    <p>)</p>
    <p>R e</p>
    <p>o rd</p>
    <p>e re</p>
    <p>d I</p>
    <p>O</p>
    <p>R a</p>
    <p>ti o</p>
    <p>( %</p>
    <p>)</p>
    <p>blkreplaybtreplayhfplayer</p>
    <p>Avg Latency Error (%)</p>
    <p>Execution Time Error (%)</p>
    <p>Reorder IO (%)</p>
    <p>Sequential Write IOPS</p>
  </div>
  <div class="page">
    <p>Evaluation Methodology on Scaled Storage</p>
    <p>Storage Array</p>
    <p>Benchmark</p>
    <p>I/O Trace</p>
    <p>HDD HDD HDD HDD</p>
    <p>Fast Storage Array</p>
    <p>Benchmark</p>
    <p>SSD SSD SSD SSD Compare</p>
    <p>Source</p>
    <p>Fast Storage Array</p>
    <p>hfplayer</p>
    <p>SSD SSD SSD SSD</p>
    <p>Target</p>
  </div>
  <div class="page">
    <p>CopyFiles CreateFiles mkfs</p>
    <p>CopyFiles CreateFiles mkfs</p>
    <p>Normalized Avg Response Time</p>
    <p>Application Running on SSD Array (Target)</p>
    <p>AFAP Replay Source Trace on Target</p>
    <p>hfplayer Replay Source Trace on Target</p>
    <p>Normalized IOPS</p>
  </div>
  <div class="page">
    <p>Provide detailed analysis of replay uncertainty sources</p>
    <p>Introduced new methods to infer IO decencies from block IO trace</p>
    <p>Introduced new replay methods with more accuracy on both scaled and unscaled storage</p>
    <p>hfplayer is open source and available in GitHub</p>
    <p>http://GitHub.com/UMN-CRIS</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Center for Research in Intelligent Storage</p>
    <p>Questions</p>
    <p>Alireza Haghdoost, alireza@cs.umn.edu http://GitHub.com/UMN-CRIS</p>
  </div>
  <div class="page">
    <p>o Sample Block IO Trace</p>
    <p>IO Workload Trace</p>
    <p>Dependent or Independent? That is the question. (Fake) Hamlet</p>
  </div>
  <div class="page">
    <p>hfplayer Internal Architecture</p>
    <p>hfplayer</p>
    <p>Prepare I/O and Monitoring</p>
    <p>Harvester Thread</p>
    <p>Timer Thread</p>
    <p>Worker Threads</p>
    <p>Dependency Analyzer</p>
    <p>Dependency analyzer module</p>
    <p>Worker threads issue IO requests o According to their scheduled timestamp in unscaled</p>
    <p>replay mode</p>
    <p>o After all of its parents plus their corresponding think time in scaled replay mode</p>
  </div>
</Presentation>
