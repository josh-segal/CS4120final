<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>The Blunderdome: An Offensive Exercise for Building Network, Systems, and Web Security</p>
    <p>Awareness</p>
    <p>George Louthan, Warren Roberts, Matthew Butler and John Hale</p>
  </div>
  <div class="page">
    <p>Pre-Introduction: The Blunderdome</p>
    <p>Framework of vulnerable services and systems</p>
    <p>Educational, linear, goal-oriented offensive exercise using the framework</p>
    <p>Deployed twice: graduate course, high school interns</p>
    <p>Note: This is an education talk, not a testbed talk</p>
  </div>
  <div class="page">
    <p>Overview  Cyber Security Exercises  The Blunderdome exercise</p>
    <p>Architecture / Framework  Network attack  Systems attack  Web attack</p>
    <p>Deployments  Graduate course  High school interns</p>
    <p>Lessons Learned</p>
    <p>Perspective on Offensive Exercises</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Background: Cyber Security Exercises  Simulated activity involving cyber attack or defense  Quick and dirty taxonomy:</p>
    <p>Offensive vs. Defensive  Symmetric (both attack and defend) vs. Asymmetric (only one)</p>
    <p>Some examples  DEFCON CTF (Symmetric)  Collegiate Cyber Defense Competition; Service Academies Cyber Defense Exercise (Asymmetric, Defensive)</p>
    <p>OWASP WebGoat; Blunderdome (Asymmetric, Offensive)</p>
    <p>Frequently built for adaptability, flexibility, and exploration</p>
  </div>
  <div class="page">
    <p>Blunderdome: Overview</p>
    <p>Obstacle course, not a sandbox  Design goals:</p>
    <p>Linearity  Goal-oriented design  Realism of services and vulnerabilities  Clear criteria for completion of stages  Off-the-shelf components</p>
    <p>Simulates an academic network and grades management system</p>
    <p>Scenario: change your grade</p>
  </div>
  <div class="page">
    <p>Blunderdome: Architecture  Simulates a small, firewalled academic network  Web Service (Grades management)</p>
    <p>Username/password protected (not intentionally vulnerable)  SQL injection vulnerability for the grades table</p>
    <p>Login Server  Entry point to network  SSH key authentication only  Unpatched Ubuntu 7.10  Pre-configured with weak keys (CVE-2008-0166)  Root exploit vulnerability in kernel (CVE-2008-0600)</p>
    <p>Firewall (only permit SSH)</p>
  </div>
  <div class="page">
    <p>Blunderdome: Architecture</p>
    <p>Web Server and Databases (one database per student)</p>
    <p>. . .</p>
    <p>. . .</p>
    <p>Login Servers (one per student)</p>
    <p>Firewall (port 22/SSH only)</p>
    <p>All Virtualized</p>
    <p>Figure: The Blunderdome architecture</p>
  </div>
  <div class="page">
    <p>Step 0: Set up</p>
    <p>Participants start with:  IP address  User name  SSH public key</p>
    <p>Instructed to:  Find the associated public key and log into the machine  Gain root, read a root-owned, root-readable file containing grades server credentials and address</p>
    <p>Change your grade (an A is suggested)</p>
  </div>
  <div class="page">
    <p>Step 1: Network attack</p>
    <p>IP address and public key to login server are given</p>
    <p>Login server runs Ubuntu 7.10 - Debian OpenSSL bug caused weak keys (CVE-2008-0166)</p>
    <p>Keyspace was only 32,767 possibilities.</p>
    <p>Intended to require coding, but Googling worked as well</p>
    <p>Result: user-level access to login server on internal network</p>
    <p>All further actions staged from the login server (SSH tunneling)</p>
  </div>
  <div class="page">
    <p>Step 2: Systems attack</p>
    <p>Vulnerability (CVE-2008-0600) in vmsplice shipped with Ubuntu 7.10</p>
    <p>Local root privilege escalation exploit available</p>
    <p>Credentials and address for web service read from root-owned, non-public file</p>
  </div>
  <div class="page">
    <p>Step 3: Web attack</p>
    <p>Very simple homegrown web service</p>
    <p>Internal access only (users tunnel via login server)</p>
    <p>Check Grades button that submits a hidden field that is concatenated into an SQL query</p>
  </div>
  <div class="page">
    <p>Summary of Stages Stage Precondition Attack Proof</p>
    <p>Gain remote user access</p>
    <p>SSH public key available (given)</p>
    <p>Break weak public key</p>
    <p>Create a user-owned text file</p>
    <p>Gain root access User-level access</p>
    <p>Execute vmsplice</p>
    <p>privilege escalation</p>
    <p>Create rootowned text file</p>
    <p>Change grade Address and credentials for web service</p>
    <p>Execute SQL injection</p>
    <p>Altered grade in database</p>
  </div>
  <div class="page">
    <p>Deployment: Graduate Course  Developed originally for Information Systems Security Engineering</p>
    <p>Course on security engineering and secure software development</p>
    <p>Vulnerability-related topics on buffer overflows, weak cryptographic protocols, and web vulnerabilities</p>
    <p>Some objectives:  Illustrate examples of classes of attacks described theoretically  Drive discussion regarding engineering causes of vulnerabilities  Reinforce potential for flaws on multiple levels of the stack</p>
    <p>Assigned as a week-long project at end of term</p>
  </div>
  <div class="page">
    <p>Lessons: Graduate Course</p>
    <p>First issue: problem with student buy-in</p>
    <p>Term-end project: limited opportunities for discussion</p>
    <p>Needed tighter lecture integration</p>
    <p>Security is easy. SSH is hard.</p>
  </div>
  <div class="page">
    <p>Deployment: Interns</p>
    <p>Deployed again to summer interns from high schools (juniors and seniors)</p>
    <p>Some goals:  Crash-course introduction to security  Assess interns general technical knowledge  Use as a motivator to teach general systems and network knowledge</p>
    <p>Disillisionment</p>
    <p>Assigned to about 6 students with a graduate student supervising</p>
  </div>
  <div class="page">
    <p>Lessons: Interns</p>
    <p>Interns learned:  Linux command line  Asymmetric key cryptography  Secure shell and tunneling  Network fundamentals  GNU toolchain and compiling other peoples code from source  Vocabulary and exploit/vulnerability taxonomy  . . .</p>
  </div>
  <div class="page">
    <p>Lessons: Interns</p>
    <p>Total non-issue: buy-in</p>
    <p>In fact, buy-in was a huge advantage</p>
    <p>Big issue: hand-holding required</p>
  </div>
  <div class="page">
    <p>Offensive Exercises</p>
    <p>Offensive exercises are controversial in academia  Ethics concerns (We dont want to be a hacker school.)  Perception concerns (We dont want people to think were a hacker school.)</p>
    <p>Nevertheless, we advocate targeted, educational offensive exercises (as well as ethics), particularly for:</p>
    <p>Penetration testing  Security engineering  Network operations</p>
    <p>Drives enthusiasm</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Blunderdome: offensive, asymmetric, linear, cross-sectional exercise</p>
    <p>We still believe in all of those properties</p>
    <p>Useful to drive enthusiasm for building general knowledge (intro or survey course) - catch them young</p>
    <p>Needs tight lecture integration</p>
    <p>Overall, demonstrated the usefulness of offensive exercises in coursework</p>
  </div>
  <div class="page">
    <p>Future Work</p>
    <p>Focus on curriculum integration  Future expansion to:</p>
    <p>Interns  Information Systems Security Engineering  Secure Electronic Commerce  Using a real testbed?</p>
  </div>
  <div class="page">
    <p>Q &amp; A</p>
    <p>Acknowledgment. This material is based on research sponsored by DARPA under agreement number FA8750-09-1-0208. The U.S. Government is authorized to reproduce and distribute reprints for Governmental purposes notwithstanding any copyright notation thereon. The views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing the official policies or endorsements, either expressed or implied, or DARPA or the U.S. Government.</p>
  </div>
</Presentation>
