<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>S P Y I N G O N Y O U R N E I G H B O R : C P U C A C H E A T T A C K S A N D B E Y O N D</p>
    <p>B E N G R A S / @ B J G , K A V E H R A Z A V I , C R I S T I A N O G I U F F R I D A , H E R B E R T B O S V R I J E U N I V E R S I T E I T A M S T E R D A M U S E N I X S E C U R I T Y 2 0 1 8</p>
  </div>
  <div class="page">
    <p>T E A S E R</p>
    <p>We would like to protect against cache attacks generically</p>
    <p>You wont believe this one thing that people forget</p>
  </div>
  <div class="page">
    <p>O V E R V I E W</p>
    <p>Side channels</p>
    <p>Cache attacks</p>
    <p>TLBleed</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>C A C H E S I D E C H A N N E L S</p>
  </div>
  <div class="page">
    <p>S I D E C H A N N E L S</p>
  </div>
  <div class="page">
    <p>S I D E C H A N N E L S</p>
    <p>Leak secrets outside the regular interface</p>
  </div>
  <div class="page">
    <p>S I D E C H A N N E L S</p>
    <p>Leak secrets outside the regular interface</p>
  </div>
  <div class="page">
    <p>S I D E C H A N N E L S</p>
    <p>Leak secrets outside the regular interface</p>
    <p>The first combination safes in the 1950s</p>
  </div>
  <div class="page">
    <p>E X A M P L E : F L U S H + R E L O A D</p>
    <p>Can attack AES implementation with T tables</p>
    <p>A table lookup happens Tj [xi = pi  ki ]</p>
    <p>pi is a plaintext byte, ki a key byte</p>
    <p>We can detect lookups into the table using F+R where pi is a plaintext byte, ki a key byte,</p>
  </div>
  <div class="page">
    <p>E X A M P L E : F L U S H + R E L O A D</p>
    <p>Again: secrets are betrayed by memory accesses</p>
    <p>Known plaintext + accesses = key recovery where pi is a plaintext byte, ki a key byte,</p>
  </div>
  <div class="page">
    <p>E X A M P L E : F L U S H + R E L O A D</p>
    <p>Again: secrets are betrayed by memory accesses</p>
    <p>Known plaintext + accesses = key recovery where pi is a plaintext byte, ki a key byte,</p>
  </div>
  <div class="page">
    <p>E X A M P L E : L I B G C R Y P T E C C</p>
    <p>Not side channel proof version:</p>
  </div>
  <div class="page">
    <p>E X A M P L E : L I B G C R Y P T E C C</p>
    <p>Not side channel proof version:</p>
  </div>
  <div class="page">
    <p>E X A M P L E : L I B G C R Y P T E C C</p>
    <p>Not side channel proof version:</p>
  </div>
  <div class="page">
    <p>E X A M P L E : L I B G C R Y P T E C C</p>
    <p>Not side channel proof version:</p>
  </div>
  <div class="page">
    <p>E X A M P L E : L I B G C R Y P T E C C</p>
    <p>Not side channel proof version:</p>
  </div>
  <div class="page">
    <p>E X A M P L E : L I B G C R Y P T E T C</p>
    <p>More side channel proof version</p>
  </div>
  <div class="page">
    <p>E X A M P L E : L I B G C R Y P T E T C</p>
    <p>More side channel proof version</p>
  </div>
  <div class="page">
    <p>D E F E N C E E X A M P L E : T S X</p>
  </div>
  <div class="page">
    <p>D E F E N C E E X A M P L E : T S X  Intel TSX: Transactional Synchronization Extensions</p>
  </div>
  <div class="page">
    <p>D E F E N C E E X A M P L E : T S X  Intel TSX: Transactional Synchronization Extensions</p>
    <p>Intended for hardware transactional memory</p>
  </div>
  <div class="page">
    <p>D E F E N C E E X A M P L E : T S X  Intel TSX: Transactional Synchronization Extensions</p>
    <p>Intended for hardware transactional memory</p>
    <p>But relies on unshared cache activity</p>
  </div>
  <div class="page">
    <p>D E F E N C E E X A M P L E : T S X  Intel TSX: Transactional Synchronization Extensions</p>
    <p>Intended for hardware transactional memory</p>
    <p>But relies on unshared cache activity</p>
    <p>Transactions fit in cache, otherwise auto-abort</p>
  </div>
  <div class="page">
    <p>D E F E N C E E X A M P L E : T S X  Intel TSX: Transactional Synchronization Extensions</p>
    <p>Intended for hardware transactional memory</p>
    <p>But relies on unshared cache activity</p>
    <p>Transactions fit in cache, otherwise auto-abort</p>
    <p>We can use this as a defence - all solved now right?</p>
  </div>
  <div class="page">
    <p>D E F E N C E E X A M P L E : T S X  Intel TSX: Transactional Synchronization Extensions</p>
    <p>Intended for hardware transactional memory</p>
    <p>But relies on unshared cache activity</p>
    <p>Transactions fit in cache, otherwise auto-abort</p>
    <p>We can use this as a defence - all solved now right?</p>
  </div>
  <div class="page">
    <p>D E F E N C E E X A M P L E : T S X  Intel TSX: Transactional Synchronization Extensions</p>
    <p>Intended for hardware transactional memory</p>
    <p>But relies on unshared cache activity</p>
    <p>Transactions fit in cache, otherwise auto-abort</p>
    <p>We can use this as a defence - all solved now right?</p>
  </div>
  <div class="page">
    <p>T L B L E E D</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E</p>
    <p>Other structures than cache shared between threads?</p>
    <p>What about the TLB?</p>
    <p>Documented: TLB has L1iTLB, L1dTLB, and L2TLB</p>
    <p>Not documented: structure</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Lets experiment with performance counters</p>
    <p>Try linear structure first</p>
    <p>All combinations of ways (set size) and sets (stride)</p>
    <p>Smallest number of ways is it</p>
    <p>Smallest corresponding stride is number of sets</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Lets experiment with performance counters</p>
    <p>Try linear structure first</p>
    <p>All combinations of ways (set size) and sets (stride)</p>
    <p>Smallest number of ways is it</p>
    <p>Smallest corresponding stride is number of sets</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Lets experiment with performance counters</p>
    <p>Try linear structure first</p>
    <p>All combinations of ways (set size) and sets (stride)</p>
    <p>Smallest number of ways is it</p>
    <p>Smallest corresponding stride is number of sets</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  For L2TLB:</p>
    <p>We reverse engineered a more complex hash function</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  For L2TLB:</p>
    <p>We reverse engineered a more complex hash function</p>
    <p>Skylake XORs 14 bits, Broadwell XORs 16 bits</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  For L2TLB:</p>
    <p>We reverse engineered a more complex hash function</p>
    <p>Skylake XORs 14 bits, Broadwell XORs 16 bits</p>
    <p>Represented by this matrix, using modulo 2 arithmetic</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  For L2TLB:</p>
    <p>We reverse engineered a more complex hash function</p>
    <p>Skylake XORs 14 bits, Broadwell XORs 16 bits</p>
    <p>Represented by this matrix, using modulo 2 arithmetic</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Lets experiment with performance counters</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Lets experiment with performance counters</p>
    <p>Now we know the structure.. Are TLBs shared between hyperthreads?</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Lets experiment with performance counters</p>
    <p>Now we know the structure.. Are TLBs shared between hyperthreads?</p>
    <p>Lets experiment with misses when accessing the same set</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Lets experiment with performance counters</p>
    <p>Now we know the structure.. Are TLBs shared between hyperthreads?</p>
    <p>Lets experiment with misses when accessing the same set</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Lets experiment with performance counters</p>
    <p>Now we know the structure.. Are TLBs shared between hyperthreads?</p>
    <p>Lets experiment with misses when accessing the same set</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Lets experiment with performance counters</p>
    <p>Now we know the structure.. Are TLBs shared between hyperthreads?</p>
    <p>Lets experiment with misses when accessing the same set</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E</p>
    <p>Can we use only latency?</p>
    <p>Map many virtual addresses to same physical page</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E</p>
    <p>Can we use only latency?</p>
    <p>Map many virtual addresses to same physical page</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Lets observe EdDSA ECC key multiplication</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Lets observe EdDSA ECC key multiplication</p>
    <p>Scalar is secret and ADD only happens if theres a 1</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Lets observe EdDSA ECC key multiplication</p>
    <p>Scalar is secret and ADD only happens if theres a 1</p>
    <p>Like RSA square-and-multiply</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Lets observe EdDSA ECC key multiplication</p>
    <p>Scalar is secret and ADD only happens if theres a 1</p>
    <p>Like RSA square-and-multiply</p>
    <p>But: we can not use code information! Only data..!</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E</p>
    <p>Lets find the spatial L1 DTLB separation</p>
    <p>There isnt any</p>
    <p>Too much activity in both blue/green cases</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E</p>
    <p>Lets find the spatial L1 DTLB separation</p>
    <p>There isnt any</p>
    <p>Too much activity in both blue/green cases</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E</p>
    <p>Lets find the spatial L1 DTLB separation</p>
    <p>There isnt any</p>
    <p>Too much activity in both blue/green cases</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Monitor a single TLB set and use temporal information</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Monitor a single TLB set and use temporal information</p>
    <p>Use machine learning (SVM classifier) to tell the difference</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Monitor a single TLB set and use temporal information</p>
    <p>Use machine learning (SVM classifier) to tell the difference</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Monitor a single TLB set and use temporal information</p>
    <p>Use machine learning (SVM classifier) to tell the difference</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Monitor a single TLB set and use temporal information</p>
    <p>Use machine learning (SVM classifier) to tell the difference</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Monitor a single TLB set and use temporal information</p>
    <p>Use machine learning (SVM classifier) to tell the difference</p>
  </div>
  <div class="page">
    <p>T L B L E E D : T L B A S S H A R E D S T A T E  Monitor a single TLB set and use temporal information</p>
    <p>Use machine learning (SVM classifier) to tell the difference</p>
  </div>
  <div class="page">
    <p>E V A L U A T I O N</p>
  </div>
  <div class="page">
    <p>T L B L E E D R E L I A B I L I T Y: E C C</p>
  </div>
  <div class="page">
    <p>T L B L E E D R E L I A B I L I T Y: E C C</p>
  </div>
  <div class="page">
    <p>T L B L E E D R E L I A B I L I T Y: E C C</p>
    <p>Single trace capture: 1ms</p>
    <p>Median end-to-end time: 17s</p>
  </div>
  <div class="page">
    <p>T L B L E E D R E L I A B I L I T Y: E C C</p>
    <p>Single trace capture: 1ms</p>
    <p>Median end-to-end time: 17s</p>
  </div>
  <div class="page">
    <p>T L B L E E D R E L I A B I L I T Y: E C C</p>
    <p>Single trace capture: 1ms</p>
    <p>Median end-to-end time: 17s</p>
  </div>
  <div class="page">
    <p>T L B L E E D R E L I A B I L I T Y: R S A  1024-bit RSA square-and-multiply in libgcrypt</p>
    <p>Old version</p>
    <p>F+R hardened: conditional pointer swap</p>
  </div>
  <div class="page">
    <p>T L B L E E D R E L I A B I L I T Y: R S A  1024-bit RSA square-and-multiply in libgcrypt</p>
    <p>Old version</p>
    <p>F+R hardened: conditional pointer swap</p>
  </div>
  <div class="page">
    <p>R E C E P T I O N  Intel: dismissed TLBleed</p>
    <p>OpenBSD disabled Intel HT</p>
    <p>Widespread media coverage, logo thanks to TheRegister</p>
    <p>Wikipedia</p>
  </div>
  <div class="page">
    <p>R E C E P T I O N  Intel: dismissed TLBleed</p>
    <p>OpenBSD disabled Intel HT</p>
    <p>Widespread media coverage, logo thanks to TheRegister</p>
    <p>Wikipedia</p>
  </div>
  <div class="page">
    <p>R E C E P T I O N  Intel: dismissed TLBleed</p>
    <p>OpenBSD disabled Intel HT</p>
    <p>Widespread media coverage, logo thanks to TheRegister</p>
    <p>Wikipedia</p>
  </div>
  <div class="page">
    <p>R E C E P T I O N  Intel: dismissed TLBleed</p>
    <p>OpenBSD disabled Intel HT</p>
    <p>Widespread media coverage, logo thanks to TheRegister</p>
    <p>Wikipedia</p>
  </div>
  <div class="page">
    <p>Work also by Kaveh Razavi, Cristiano Giuffrida, Herbert Bos</p>
    <p>Some diagrams in these slides were taken from other work: FLUSH+RELOAD, Cloak</p>
    <p>Yuval Yarom, Katrina Falkner, Peter Pel, Daniel Gruss</p>
    <p>C R E D I T</p>
  </div>
  <div class="page">
    <p>C O N C L U S I O N</p>
  </div>
  <div class="page">
    <p>Practical, reliable, high resolution side channels exist outside the cache</p>
    <p>C O N C L U S I O N</p>
  </div>
  <div class="page">
    <p>Practical, reliable, high resolution side channels exist outside the cache</p>
    <p>They bypass defenses</p>
    <p>C O N C L U S I O N</p>
  </div>
  <div class="page">
    <p>Practical, reliable, high resolution side channels exist outside the cache</p>
    <p>They bypass defenses</p>
    <p>@bjg @kavehrazavi</p>
    <p>C O N C L U S I O N</p>
  </div>
  <div class="page">
    <p>Practical, reliable, high resolution side channels exist outside the cache</p>
    <p>They bypass defenses</p>
    <p>@bjg @kavehrazavi</p>
    <p>@vu5ec</p>
    <p>C O N C L U S I O N</p>
  </div>
  <div class="page">
    <p>Practical, reliable, high resolution side channels exist outside the cache</p>
    <p>They bypass defenses</p>
    <p>@bjg @kavehrazavi</p>
    <p>@vu5ec</p>
    <p>vusec.net/projects/tlbleed/</p>
    <p>C O N C L U S I O N</p>
  </div>
  <div class="page">
    <p>Practical, reliable, high resolution side channels exist outside the cache</p>
    <p>They bypass defenses</p>
    <p>@bjg @kavehrazavi</p>
    <p>@vu5ec</p>
    <p>vusec.net/projects/tlbleed/</p>
    <p>Thank you for listening</p>
    <p>C O N C L U S I O N</p>
  </div>
</Presentation>
