<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Collecting Provenance via the Xen Hypervisor</p>
    <p>Peter Macko, Marc Chiarini, Margo Seltzer Harvard SEAS</p>
    <p>TaPP '11</p>
  </div>
  <div class="page">
    <p>What We're Doing</p>
    <p>Provenance-Aware Storage Systems Group</p>
    <p>Modified Linux Kernel</p>
    <p>Captures rich relationships between files, pipes, processes.</p>
  </div>
  <div class="page">
    <p>A Problem</p>
    <p>Maintaining the provenance interceptor is unsustainable.</p>
    <p>Need a way of collecting system-level provenance that is:</p>
    <p>easier to maintain.  more portable.  more likely to be adopted.</p>
    <p>Helps the development effort (find bugs, etc)!</p>
  </div>
  <div class="page">
    <p>Our Approach</p>
    <p>Collect the same kind of system-level provenance from virtual machines running under the Xen Hypervisor.</p>
    <p>Dom0 DomU Guest (PV)</p>
    <p>Xen Mgmt Interface</p>
    <p>Emulated Devices</p>
    <p>Device Drivers</p>
    <p>Backend Drivers</p>
    <p>Frontend Drivers</p>
    <p>vCPU vMem Scheduler</p>
    <p>DomU Guest (HVM)</p>
    <p>Device Drivers</p>
    <p>Applications</p>
    <p>Xen Hypervisor</p>
    <p>CPU Memory Network Physical</p>
    <p>Hardware</p>
    <p>Applications</p>
    <p>Blk Devs</p>
    <p>Hypercalls</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Potential performance impact?</p>
    <p>Where to store provenance?</p>
    <p>How to extract provenance that is not available via system call from guest memory?</p>
    <p>How to extend to other guest OSes?</p>
  </div>
  <div class="page">
    <p>Questions?</p>
    <p>Prototype will be available in late summer 2011.</p>
    <p>http://www.eecs.harvard.edu/syrah/pass/</p>
    <p>chiarini@seas.harvard.edu</p>
  </div>
</Presentation>
