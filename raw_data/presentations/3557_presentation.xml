<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>MOPT: Optimize Mutation Scheduling for Fuzzers</p>
    <p>Chenyang Lyu Shouling Ji Chao Zhang Yuwei Li Wei-Han Lee Yu Song Raheem Beyah</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>Improve Initial</p>
    <p>Seed Pool</p>
    <p>Improve Seed Selection Strategy</p>
    <p>Integrate More Techniques</p>
    <p>Improve testing speed</p>
    <p>Improve Code Coverage</p>
  </div>
  <div class="page">
    <p>What About Improving Mutation</p>
    <p>Scheduling?</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>Is the mutation efficiency of each operator the same in fuzzing process?</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Different mutation operators efficiencies are different.</p>
  </div>
  <div class="page">
    <p>Different mutation operators efficiencies are different.</p>
    <p>For these programs, the mutation operators bitflip 1/1, bitflip 2/1 and arith 8/8 could yield more interesting test cases than other mutation operators.</p>
  </div>
  <div class="page">
    <p>It may be better to select the mutation operators based on this probability distribution (percentages).</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>The two efficient operators are selected for a small number of times.</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>PSO algorithm employs multiple particles to search the solution space iteratively, in which a position is a candidate solution.</p>
  </div>
  <div class="page">
    <p>PSO algorithm employs multiple particles to search the solution space iteratively, in which a position is a candidate solution.  For each particle p in the swarm, it moves towards its local best position and global best position in each iteration.</p>
  </div>
  <div class="page">
    <p>PSO algorithm employs multiple particles to search the solution space iteratively, in which a position is a candidate solution.  For each particle p in the swarm, it moves towards its local best position and global best position in each iteration.</p>
  </div>
  <div class="page">
    <p>For each iteration, the movement of a particle p is updated as follows:</p>
    <p>!&quot;#$ p  '  !&quot;#$ p + *  +,-./ 0  2&quot;#$ 0 + *  3,-./  2&quot;#$ 0 4&quot;#$ p  4&quot;#$ p + !&quot;#$ p</p>
    <p>!&quot;#$ p is the velocity of a particle p.  4&quot;#$ p is the position of a particle p.  +,-./ 0 is the local best position of a particle p.  3,-./ is the global best position.  ' is the inertia weight.  * F (0,1) is a random displacement weight</p>
  </div>
  <div class="page">
    <p>For each iteration, the movement of a particle !&quot; (mutation operator) in a swarm #$ (a set of mutation operators), its position %&amp;'([#$] [!&quot;] (the probability that it will be selected) is updated by these formula:</p>
    <p>+&amp;'( #$ !&quot;  -  +&amp;'( #$ !&quot; + 0  12345 #$ !&quot;  7&amp;'( #$ !&quot; + 0  82345[!&quot;]  7&amp;'([#$] [!&quot;]</p>
    <p>%&amp;'([#$] [!&quot;]  %&amp;'([#$] [!&quot;] + [#$] [!&quot;]</p>
    <p>- is the inertia weight.  0 ; (0,1) is a random displacement weigh</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>AFL spends most time on the deterministic stage.</p>
  </div>
  <div class="page">
    <p>&quot; !&quot;$&amp; $ &quot; &quot;!# &quot; !&quot; !&quot;    $!  &quot;'&quot; &quot;  ! #'' ! &quot; !    #&quot;&quot;&amp;    ! &quot; !$  &amp; % ##  !  &quot;    &quot;   &quot;&quot; ! !&quot; &amp; #! ! &quot; % !&quot;$&amp; ! &quot; &quot; !&quot; !&quot;  &quot; % &quot;!&quot; !!     $! &quot;% &quot;&amp;!   #'' !    !  %&quot; &quot; &quot; !&quot; !&quot; %      &quot;</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>!</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>!</p>
  </div>
  <div class="page">
    <p>!</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>!</p>
  </div>
  <div class="page">
    <p>!</p>
  </div>
  <div class="page">
    <p>!</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>&quot;&quot;        # !</p>
    <p>!$$    &quot;   $$</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>$&quot;   ! %%    #&quot;</p>
    <p>$</p>
    <p>$! $</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>&quot;&quot;     !     &quot;&quot;</p>
  </div>
  <div class="page">
    <p>&quot;    #  $  !   !     &quot; !   !         &quot;    !&amp;&amp;</p>
    <p>&quot;!  #  $ &quot;$     %  %</p>
    <p>!!</p>
  </div>
  <div class="page">
    <p>Thank you!</p>
    <p>Zhejiang University, NESA Lab https://nesa.zju.edu.cn</p>
    <p>MOPT: https://github.com/puppet-meteor/MOpt-AFL</p>
  </div>
  <div class="page">
    <p>!&quot;#$ %&amp; '(  *  !&quot;#$ %&amp; '( + -  ./012 %&amp; '(  4&quot;#$ %&amp; '( + -  5/012['(]  4&quot;#$[%&amp;] ['(]</p>
  </div>
  <div class="page">
    <p>!&quot;#$%  !&quot;#$%                                              &amp;''()*                                   !&quot;#$%           &amp;''()*</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>! &quot;&amp;&amp;    #</p>
    <p>!!&quot;&quot;   #% &quot;&amp;&amp; $!  # !</p>
    <p>!!  $&quot;&amp;&amp;# &quot;&amp;&amp;</p>
    <p>!!! $&quot; &quot;!#!!</p>
  </div>
</Presentation>
