<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Secure Internet Voting on Limited Devices with Anonymized DSA Public Keys</p>
    <p>Rolf Haenni and Oliver Spycher</p>
    <p>Bern University of Applied Sciences, Switzerland http://e-voting.bfh.ch</p>
    <p>EVT/WOTE11, San Francisco</p>
    <p>August 9th, 2011</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Signature-Based Voting Schemes</p>
    <p>Shuffling DSA Public Keys</p>
    <p>Protocol Description</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Signature-Based Voting Schemes</p>
    <p>Shuffling DSA Public Keys</p>
    <p>Protocol Description</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Requirements</p>
    <p>I Correctness:</p>
    <p>Only authorized voters can vote (eligibility)  No voter can vote more than once (uniqueness)  Votes can not be altered (integrity)  All valid votes are counted (completeness)  Invalid votes are not counted (soundness)</p>
    <p>I Verifiability: Correctness is publicly verifiable</p>
    <p>I Privacy: Votes cannot be linked to voters</p>
    <p>I Fairness: No preliminary results are revealed</p>
    <p>I Coercion-resistance: Voters cannot be influenced by others</p>
  </div>
  <div class="page">
    <p>Requirements</p>
    <p>I Correctness:</p>
    <p>Only authorized voters can vote (eligibility)  No voter can vote more than once (uniqueness)  Votes can not be altered (integrity)  All valid votes are counted (completeness)  Invalid votes are not counted (soundness)</p>
    <p>I Verifiability: Correctness is publicly verifiable</p>
    <p>I Privacy: Votes cannot be linked to voters</p>
    <p>I Fairness: No preliminary results are revealed</p>
    <p>I Coercion-resistance: Voters cannot be influenced by others</p>
  </div>
  <div class="page">
    <p>Extended Privacy</p>
    <p>I Privacy: Votes cannot be linked to voters</p>
    <p>Nobody can learn how somebody voted (secrecy)  Nobody can learn that somebody voted (anonymity)</p>
    <p>I Anonymity is important for fair elections</p>
    <p>Take a subset of voters with a predictable voting behavior, e.g. members of a political party</p>
    <p>Observe their turnout during the voting period  Mobilize the abstaining party members in case of a low turnout</p>
    <p>I The same two properties must hold for any subset of voters</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Signature-Based Voting Schemes</p>
    <p>Shuffling DSA Public Keys</p>
    <p>Protocol Description</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Signature-Based Voting Schemes</p>
    <p>I To guarantee eligibility, some voting schemes require votes to be digitally signed</p>
    <p>I Simplified protocol:</p>
    <p>I To guarantee fairness, the decryption key is shared</p>
    <p>I To guarantee privacy, additional measures are necessary</p>
  </div>
  <div class="page">
    <p>Approach 1: Homomorphic Tallying</p>
    <p>I Simplified protocol:</p>
    <p>and decrypt result</p>
    <p>I To guarantee uniqueness, non-interactive zero-knowledge proofs (NIZKP) must be added to ballots</p>
    <p>I NIZKPs are expensive for complex elections (see Helios)</p>
    <p>I No anonymity</p>
  </div>
  <div class="page">
    <p>Approach 2: Mixnet-Based Shuffling of Votes</p>
    <p>I Simplified protocol:</p>
    <p>verifiable re-encryption mixnet 5. Tallying: Decrypt and count votes</p>
    <p>I Does not require expensive NIZKPs</p>
    <p>I No anonymity</p>
  </div>
  <div class="page">
    <p>Approach 3: Mixnet-Based Shuffling of Keys</p>
    <p>I Simplified protocol:</p>
    <p>anonymous channel 5. Pre-tallying: Check signatures using the anonymous keys 6. Tallying: Decrypt and count votes</p>
    <p>I Does not require expensive NIZKPs</p>
    <p>I Guarantees anonymity</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Signature-Based Voting Schemes</p>
    <p>Shuffling DSA Public Keys</p>
    <p>Protocol Description</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>DSA Signature Scheme</p>
    <p>I Standard ElGamal setup:</p>
    <p>Large (safe) primes p and q such that q|p  1  Generator g of sub-group Gq  Zp  Private key: random value x  Zq  Public key: y = g x  Gq</p>
    <p>I Signature: s = (a, b) = Signx (m) with</p>
    <p>a = g r</p>
    <p>b = (H (m) + a  x )  r 1</p>
    <p>I Verification: Verifyy (s, m) checks if a = g uy v holds for</p>
    <p>u = H (m)  b1  v = a  b1</p>
  </div>
  <div class="page">
    <p>Shuffling DSA Public Keys</p>
    <p>I Input: Y = (y1, . . . , yn) = list of public keys relative to g</p>
    <p>I Output: Y = (y1, . . . , yn) = list of public keys relative to g</p>
    <p>= random value from Zq  g = g</p>
    <p>= permutation on {1, . . . , n}  yi = y</p>
    <p>(i)</p>
    <p>I This works, because: y = y  = (g x ) = (g )x = g x</p>
    <p>y1 : 3xjUj5iel9</p>
    <p>y2 : oJl91ls6cx</p>
    <p>y3 : Z3iwjd8u2P</p>
    <p>y1 : 9heK7eOlsW</p>
    <p>y2 : Qm4Jd45Hzw</p>
    <p>y3 : M5uk94kaKl</p>
    <p>Y Y</p>
  </div>
  <div class="page">
    <p>Anonymous DSA Signature Scheme</p>
    <p>I Standard ElGamal setup:</p>
    <p>Private key: random value x  Zq  Public key: y = g x  Gq</p>
    <p>I Anonymous public key: y = y</p>
    <p>I New generator: g = g</p>
    <p>I Signature: s = (a, b) = Signx (m) with</p>
    <p>a = g r</p>
    <p>b = as defined before</p>
    <p>I Verification: Verifyy (s, m) checks if a = g uy v holds for</p>
    <p>u, v as defined before</p>
  </div>
  <div class="page">
    <p>Repeated Shuffling</p>
    <p>I To disallow a single shuffling authority to know  or , let multiple authorities do the shuffling</p>
    <p>I Repeated shuffling using (1,1), . . . , (m,m):</p>
    <p>= 1   m   = m     1</p>
    <p>I Hence, no single party can link the anonymous keys with the public keys</p>
    <p>y1 : 3xjUj5iel9</p>
    <p>y2 : oJl91ls6cx</p>
    <p>y3 : Z3iwjd8u2P</p>
    <p>y1 : 9heK7eOlsW</p>
    <p>y2 : Qm4Jd45Hzw</p>
    <p>y3 : M5uk94kaKl</p>
    <p>Y Y</p>
    <p>1 2 3</p>
  </div>
  <div class="page">
    <p>Verifiable Shuffling</p>
    <p>I The shuffling authorities must provide NIZKPs for doing the shuffle correctly</p>
    <p>I At least three approaches:</p>
    <p>Use solution for General n-Shuffle Problem (Neff, 2001)  Consider y as an ElGamal encryption e = (1, y ) and apply</p>
    <p>re-encryption mixnet (Groth, 2010; Wikstrom, 2009)  Use Randomized Partial Checking type of proof (Jakobsson</p>
    <p>et al., 2002)</p>
    <p>I All three approaches require linear-size proofs and linear-time verification</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Signature-Based Voting Schemes</p>
    <p>Shuffling DSA Public Keys</p>
    <p>Protocol Description</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Protocol Steps (1/2)</p>
    <p>Publish electoral register Y  Perform shuffling and publish g , Y , NIZKPs</p>
    <p>Encrypt vote: e = Encrypt(v )  Sign encrypted vote: s = Signx (e) using g  Compute anonymous key y = g x</p>
    <p>Compose ballot B = (e, s, y )</p>
  </div>
  <div class="page">
    <p>Protocol Steps (2/2)</p>
    <p>Check if y  Y  Check if s is a valid signature (using g )  Check if B is the only ballot for y (if not, select one)</p>
  </div>
  <div class="page">
    <p>Optional Protocol Enhancements</p>
    <p>I Prevent copying votes from bulletin board</p>
    <p>add NIZKP to ballot (knowledge of encryption randomness)</p>
    <p>I Avoid decrypting invalid votes</p>
    <p>perform efficient PET-based tests (in linear time)</p>
    <p>I Protect privacy in case of an imperfect anonymous channel</p>
    <p>shuffle the encrypted votes in a re-encryption mixnet</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Signature-Based Voting Schemes</p>
    <p>Shuffling DSA Public Keys</p>
    <p>Protocol Description</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>I Shuffling DSA public keys is an alternative privacy mechanism in remote electronic elections</p>
    <p>I If provides an extended notion of privacy:</p>
    <p>Secrecy of the vote  Anonymity of the voter</p>
    <p>I The main computational task is performed before the election</p>
    <p>I The voter is not required to produce expensive NIZKPs</p>
    <p>I A prototype implementation Selectio Helvetica is currently under construction (see www.baloti.ch)</p>
  </div>
</Presentation>
