<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Ronald F. DeMara, Carthik A. Sharma University of Central Florida</p>
    <p>Ronald F. DeMara, Carthik A. Sharma University of Central Florida</p>
    <p>A Combinatorial Group Testing MethodA Combinatorial Group Testing Method for</p>
    <p>FPGA Fault Location</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Field Programmable Gate ArraysField Programmable Gate Arrays  Gate-array-based reconfigurable architectureGate-array-based reconfigurable architecture</p>
    <p>Matrix of Logic Cells (Look-Up Tables) surrounded by Matrix of Logic Cells (Look-Up Tables) surrounded by peripheral I/O cellsperipheral I/O cells</p>
    <p>Capabilities:Capabilities:  Runtime reconfigurationRuntime reconfiguration  On-chip processor core &amp; Millions of gate-equivalent logic On-chip processor core &amp; Millions of gate-equivalent logic</p>
    <p>elementselements</p>
    <p>Millions of FPGA devices produced annually: most Millions of FPGA devices produced annually: most SRAM-basedSRAM-based</p>
    <p>Used in mission-critical applicationsUsed in mission-critical applications  Remote systems &amp; Hazardous Environments  Space Applications  Satellites, probes, and shuttles</p>
  </div>
  <div class="page">
    <p>Group Testing Algorithms</p>
    <p>Origin  World War II Blood testingOrigin  World War II Blood testing  Problem: Test samples from millions of new recruits  Solution: Test blocks of sample before testing</p>
    <p>individual samples</p>
    <p>Problem DefinitionProblem Definition  Identify subset Q of defectives from set P</p>
    <p>Minimize number of tests  Test v-subsets of P  Form suitable blocks</p>
  </div>
  <div class="page">
    <p>Previous Work</p>
    <p>Pre-compiled Column-Based Dual FPGA architecture [Mitra04]  Autonomous detection, repair by shifting pre-compiled columns  Isolation using distributed CED-checkers and blind reconfiguration</p>
    <p>attempts</p>
    <p>Overview of Combinatorial Group Testing and Applications [Du00]  Provides taxonomy and general algorithms for applying CGT  Examples of CGT applications: DNA clone library filtering, vaccine</p>
    <p>screening, computer fault diagnosis, etc.</p>
    <p>CGT Enhanced Circuit Diagnosis [Kahng04]  Present doubling, halving etc for circuit fault diagnosis using BIST,</p>
    <p>CGT  Requires ability to test resources individually</p>
    <p>Chinese Remainder Sieve technique [Eppstein05]  Efficient non-adaptive and two-stage CGT based on prime number</p>
    <p>driven test formation  Improved algorithms for practical problem sizes (n &lt; 1080) with small</p>
    <p>number of defectives (d &lt; 4)</p>
  </div>
  <div class="page">
    <p>Device Failure</p>
    <p>Duration:</p>
    <p>Target:</p>
    <p>Detection:</p>
    <p>Isolation:</p>
    <p>Diagnosis:</p>
    <p>Recovery:</p>
    <p>Transient: SEU Permanent: SEL, Oxide Breakdown, Electron Migration, LPD</p>
    <p>Repetitive Readback</p>
    <p>Device Configuration</p>
    <p>Approach: TMR BIST</p>
    <p>Processing Datapath</p>
    <p>Device Configuration</p>
    <p>Processing Datapath</p>
    <p>Bitwise Comparison</p>
    <p>Invert Bit Value</p>
    <p>Ignore Discrepancy</p>
    <p>Majority Vote</p>
    <p>STARS</p>
    <p>Supplementary Testbench</p>
    <p>Cartesian Intersection</p>
    <p>Worst-case Clock Period</p>
    <p>Dilation</p>
    <p>Replicate in Spare Resource</p>
    <p>Characteristics</p>
    <p>Methods CED</p>
    <p>Duplex Output</p>
    <p>Comparison</p>
    <p>Fast Run-time Location</p>
    <p>Select Spare Resource</p>
    <p>Duplex Output</p>
    <p>Comparison</p>
    <p>unnecessary</p>
    <p>Repetitive Intersections</p>
    <p>Evolutionary Algorithm using Intrinsic Fitness</p>
    <p>Evaluation</p>
    <p>Fault-Handling Techniques</p>
    <p>Dueling</p>
    <p>CGT-Based</p>
  </div>
  <div class="page">
    <p>Isolation Problem Outline</p>
    <p>ObjectivesObjectives  Locate faulty logic and/or interconnect resource: a single stuck-at fault Locate faulty logic and/or interconnect resource: a single stuck-at fault</p>
    <p>model is assumedmodel is assumed  Online Fault Isolation: device not entirely removed from serviceOnline Fault Isolation: device not entirely removed from service</p>
    <p>FeaturesFeatures  Runtime Reconfiguration: FPGA resources configured dynamicallyRuntime Reconfiguration: FPGA resources configured dynamically  Utilize Runtime Inputs: avoid special test-vectors, improve availabilityUtilize Runtime Inputs: avoid special test-vectors, improve availability</p>
    <p>Constraints Constraints  Use pre-designed configurations: defined by target applicationUse pre-designed configurations: defined by target application  Subsets under test have constant resource utilization range for a given Subsets under test have constant resource utilization range for a given</p>
    <p>isolation problemisolation problem  Resource grouping influences fault articulation: resource-mapping and Resource grouping influences fault articulation: resource-mapping and</p>
    <p>input vector might mask hardware faultsinput vector might mask hardware faults  Do not use specialized block designsDo not use specialized block designs  Runtime reconfiguration limited to column-swappingRuntime reconfiguration limited to column-swapping  Non-reasonable algorithm: tests may be repeated without gaining Non-reasonable algorithm: tests may be repeated without gaining</p>
    <p>new isolation informationnew isolation information</p>
  </div>
  <div class="page">
    <p>Fault Location Using Dueling</p>
    <p>The set of all competing configurations is represented by S.</p>
    <p>Set Ck represents the resources utilized by configuration k.</p>
    <p>Each competing configuration k, 1 &lt; k &lt; |S| has a unique binary</p>
    <p>Usage MatrixUsage Matrix Uk, 1 &lt; k &lt; p.</p>
    <p>Elements Uk[i,j], 1 &lt; i &lt; m, 1 &lt; j n, where m and n represent the rows and columns in the device layout respectively.</p>
    <p>Elements Uk[i,j] = 1 denote the usage of resource (i, j) by Ck.</p>
    <p>The History MatrixHistory Matrix H, with elements H[i,j] 1 &lt; i &lt; m, 1 &lt; j &lt; n, is an integer matrix used to represent the relative fitness of individual resources.</p>
    <p>H[i,j] provides instantaneous relative fitness values of resources.</p>
  </div>
  <div class="page">
    <p>Dueling Example</p>
    <p>H H [i,j][i,j] @ t = 0</p>
    <p>H H [i,j][i,j] @ t = 2</p>
    <p>UU11 UU22</p>
    <p>H H [i,j] changes after [i,j] changes after CC1 1 andand C C2 2 are loadedare loaded</p>
    <p>UU11 and and UU22 are corresponding are corresponding Usage MatricesUsage Matrices</p>
    <p>(3,3) is identified as the faulty resource(3,3) is identified as the faulty resource</p>
  </div>
  <div class="page">
    <p>Initiate H Matrix</p>
    <p>Select &amp; Load Competing Configurations</p>
    <p>Increment Corresponding H Matrix Elements</p>
    <p>Discrepancy?</p>
    <p>Decrement Corresponding H Matrix Elements</p>
    <p>No Yes</p>
    <p>Unique Max In H?</p>
    <p>YesNo</p>
    <p>Return Indices of Faulty Element</p>
    <p>Stasis after n Iterations?</p>
    <p>Yes</p>
    <p>No</p>
    <p>Swap 50% Suspect Columns</p>
    <p>Modified Halving</p>
    <p>Initially all H[i,j] = 0</p>
    <p>Selection Process can be Adaptive</p>
    <p>Fitness Augmentation can be non-linear</p>
    <p>Columns can be swapped with any other</p>
    <p>Columns</p>
  </div>
  <div class="page">
    <p>FPGA Arrangement for Dueling</p>
    <p>Configurations in PopulationConfigurations in Population  C = CL CR</p>
    <p>CL = subset of left-half configurations  CR = subset of right-half configurations  |CL|=|CR |= |C|/2</p>
    <p>Reconfiguration Algorithm</p>
    <p>`</p>
    <p>S R A M -bas ed F P G A</p>
    <p>L Half-Configuration</p>
    <p>Discrepancy Check L Discrepancy Check R</p>
    <p>Function Logic L</p>
    <p>CONFIGURATION BIT STREA M</p>
    <p>INPUT DA TA</p>
    <p>Function Logic R</p>
    <p>DATA OUTPUT</p>
    <p>F E</p>
    <p>E D</p>
    <p>B A</p>
    <p>C K</p>
    <p>R Half-Configuration</p>
    <p>CONTROL</p>
    <p>O F</p>
    <p>F -C</p>
    <p>H IP</p>
    <p>E E</p>
    <p>P R</p>
    <p>O M</p>
    <p>( N</p>
    <p>O T</p>
    <p>E :</p>
    <p>a n</p>
    <p>o n -v</p>
    <p>o la</p>
    <p>ti le</p>
    <p>m e m</p>
    <p>o ry</p>
    <p>is a</p>
    <p>lr e a d y r</p>
    <p>e q u ir</p>
    <p>e d t</p>
    <p>o b</p>
    <p>o o t</p>
    <p>a n y S</p>
    <p>R A</p>
    <p>M F</p>
    <p>P G</p>
    <p>A f ro</p>
    <p>m c</p>
    <p>o ld</p>
    <p>s ta</p>
    <p>rt .</p>
    <p>.. t h is</p>
    <p>is n</p>
    <p>o t a n a</p>
    <p>d d it io</p>
    <p>n a l c</p>
    <p>h ip</p>
    <p>)</p>
  </div>
  <div class="page">
    <p>Isolation Progress without Halving</p>
    <p>N u</p>
    <p>m b</p>
    <p>e r</p>
    <p>o f</p>
    <p>S u</p>
    <p>sp e</p>
    <p>ct e</p>
    <p>d F</p>
    <p>a u</p>
    <p>lty E</p>
    <p>le m</p>
    <p>e n</p>
    <p>ts (</p>
    <p>lo g</p>
    <p>)</p>
    <p>Number of Iterations</p>
    <p>Without HalvingWithout Halving</p>
    <p>Initially |S| = 20,000</p>
    <p>Resource Utilization = 40%</p>
    <p>Number of suspected faulty elements constant at 36 after 23 iterations</p>
    <p>No subsequent improvement due to lack of differentiating information between competing configurations</p>
    <p>Temporary stasis in isolation due to insufficient design</p>
    <p>diversity</p>
  </div>
  <div class="page">
    <p>N u</p>
    <p>m b</p>
    <p>e r</p>
    <p>o f S</p>
    <p>u s p</p>
    <p>e ct</p>
    <p>e d</p>
    <p>F a</p>
    <p>u lt y</p>
    <p>E le</p>
    <p>m e</p>
    <p>n ts</p>
    <p>( lo</p>
    <p>g )</p>
    <p>Number of Iterations</p>
    <p>Dueling with Modified Halving</p>
    <p>Dueling with HalvingDueling with Halving</p>
    <p>Halving works by Halving works by swapping half the used swapping half the used columns with unused onescolumns with unused ones  Halving progressively Halving progressively reduces the size of the set of reduces the size of the set of suspected faulty elementssuspected faulty elements</p>
    <p>Isolation proceeds till a Isolation proceeds till a single faulty element is single faulty element is isolatedisolated</p>
    <p>Fault isolated after 19 Fault isolated after 19 iterationsiterations</p>
    <p>Symptoms of stasis invoke</p>
    <p>halving procedure for fast isolation</p>
  </div>
  <div class="page">
    <p>Effect of Total Number of Elements</p>
    <p>Increased Problem SizeIncreased Problem Size</p>
    <p>Number of Elements = Number of Elements = (Number of Rows x (Number of Rows x Number of ColumnsNumber of Columns  As the size of the array As the size of the array containing the fault containing the fault increases, the increase in the increases, the increase in the required number of required number of iterations is minimaliterations is minimal</p>
    <p>For 1 mill. elements, only For 1 mill. elements, only 27.4 iterations required.27.4 iterations required.0 100 200 300 400 500 600 700 800 900 1000 1100</p>
    <p>A v e</p>
    <p>ra g e</p>
    <p>N u</p>
    <p>m b e</p>
    <p>r o f It e ra</p>
    <p>tio n</p>
    <p>s F</p>
    <p>o r</p>
    <p>F a</p>
    <p>u lt I s o</p>
    <p>la ti o</p>
    <p>n</p>
    <p>Number of Rows and Columns in Device</p>
    <p>Population Size = 40 Resource Utilization = 50%</p>
  </div>
  <div class="page">
    <p>Effect of Population Size</p>
    <p>Population SizePopulation Size</p>
    <p>Single fault in S is assumedSingle fault in S is assumed</p>
    <p>As pop. size increases, As pop. size increases, isolation expected to be fasterisolation expected to be faster  Increased pop. size implies Increased pop. size implies more initial designsmore initial designs</p>
    <p>A population size of 30 A population size of 30 seems to be an ideal tradeoff seems to be an ideal tradeoff between between ease of isolationease of isolation, , and the and the difficulty of difficulty of generating increased numbergenerating increased number of individuals.of individuals.</p>
    <p>A ve</p>
    <p>ra g</p>
    <p>e N</p>
    <p>u m</p>
    <p>b e</p>
    <p>r o</p>
    <p>f It e</p>
    <p>ra tio</p>
    <p>n s</p>
    <p>fo r</p>
    <p>F a</p>
    <p>u lt I s o</p>
    <p>la tio</p>
    <p>n</p>
    <p>Population Size</p>
    <p>Resource Utilization (%) = 50 Number of Resources = 40000</p>
    <p>Increased population size</p>
    <p>provides minimal added benefit</p>
  </div>
  <div class="page">
    <p>Effect of Resource Utilization</p>
    <p>Moderate resource Moderate resource utilization ideal for isolationutilization ideal for isolation  Rate of isolation progress Rate of isolation progress low with extreme utilization low with extreme utilization characteristicscharacteristics</p>
    <p>Isolation takes longer Isolation takes longer when less than 20% or when less than 20% or greater than 80% of the greater than 80% of the available resources are available resources are utilized.utilized.10 20 30 40 50 60 70 80 90</p>
    <p>A ve</p>
    <p>ra g</p>
    <p>e N</p>
    <p>u m</p>
    <p>b e</p>
    <p>r o</p>
    <p>f It e</p>
    <p>ra tio</p>
    <p>n s</p>
    <p>fo r</p>
    <p>F a</p>
    <p>u lt</p>
    <p>Is o</p>
    <p>la tio</p>
    <p>n</p>
    <p>Resource Utilization (%)</p>
    <p>Population Size=40 Population Size=20</p>
    <p>Number of Resources = 40000</p>
  </div>
  <div class="page">
    <p>Future Work</p>
    <p>Conducting Tests using Benchmark CircuitsConducting Tests using Benchmark Circuits  ISCAS89 s38584 with 11448 gates: sequential logicISCAS89 s38584 with 11448 gates: sequential logic  ISCAS85 circuits with max 3513 gates: combinational ISCAS85 circuits with max 3513 gates: combinational</p>
    <p>logiclogic  Compression/ Signal Processing algorithms, such as the Compression/ Signal Processing algorithms, such as the</p>
    <p>Lempel-Ziv (LZ) compression scheme [Mitra04]Lempel-Ziv (LZ) compression scheme [Mitra04]</p>
    <p>Development of an architecture to enable Development of an architecture to enable column-swappingcolumn-swapping  Multi-layer Runtime Reconfigurable Architecture (MRRA) Multi-layer Runtime Reconfigurable Architecture (MRRA)</p>
    <p>being prototypedbeing prototyped</p>
  </div>
  <div class="page">
    <p>Backup Slides</p>
    <p>On following pages</p>
  </div>
  <div class="page">
    <p>Online Dueling Evaluation</p>
    <p>ObjectiveObjective  Isolate faults by successive intersection between sets of FPGA</p>
    <p>resources used by configurations  Analyze complexity of Isolation process</p>
    <p>VariablesVariables  Total resources available</p>
    <p>Measured in number of LUTs  Number of Competing Configurations</p>
    <p>Number of initial Seed designs in CRR process  Degree of Articulation</p>
    <p>Some inputs may not manifest faults, even if faulty resource used by individual</p>
    <p>Resource Utilization Factor  Percentage of FPGA resources required by target application/design</p>
    <p>Number of Iterations for Isolation  Measure of complexity and time involved in isolating fault</p>
  </div>
  <div class="page">
    <p>Discrepancy Mirror Circuit</p>
    <p>Fault CoverageFault Coverage Component Fault Scenarios Fault-Free</p>
    <p>Function Output A Fault Correct Correct Correct Correct</p>
    <p>Function Output B Correct Fault Correct Correct Correct</p>
    <p>XNORA Disagree (0) Disagree (0) Fault : Disagree(0) Agree (1) Agree (1)</p>
    <p>XNORB Disagree (0) Disagree (0) Agree (1) Fault : Disagree(0) Agree (1)</p>
    <p>BufferA 0 0 High-Z 0 1</p>
    <p>BufferB 0 0 0 High-Z 1</p>
    <p>Match Output 0 0 0 0 1</p>
  </div>
  <div class="page">
    <p>Influence of LUT utilizationInfluence of LUT utilization</p>
    <p>Perpetually Articulating InputsPerpetually Articulating Inputs with Equiprobable Distributionwith Equiprobable Distribution</p>
    <p>Intermittently Articulating InputsIntermittently Articulating Inputs with Equiprobable Distributionwith Equiprobable Distribution</p>
    <p>expected number of pairings grows sub-linearly in number of resources</p>
    <p>utilization below 20% or above 80% implicates (or exonerates) a smaller sub-set of resources</p>
    <p>50% utilization, the expected number of pairings for 1,000, 10,000, and 100,000 resources are 11.1, 14.9, and 17.6</p>
    <p>at 90% utilization mean value of 258 pairings are required to isolate the faulty resource.</p>
  </div>
  <div class="page">
    <p>Accommodating Multi-bit Word Widths</p>
    <p>Proof of conceptProof of concept  The present circuit works efficiently  Demonstrates important Dueling-enabled isolation method</p>
    <p>StrategiesStrategies  Use an array of detectors</p>
    <p>attempt to minimize points of failure as word-width increases  Number of logic resources used is acceptable for smaller</p>
    <p>circuits  Create new circuit or scheme, combining fault tolerant</p>
    <p>coding-based methods with single-fault secure circuit  Current research focused on improving detector by</p>
    <p>investigating codes, and fault-secure circuits</p>
  </div>
  <div class="page">
    <p>Pull-down Resistor Considerations</p>
    <p>Proof of conceptProof of concept  The present circuit works in a verifiable correct manner  Can utilize synthesized (digital) pull-down resistor which</p>
    <p>simulate the behavior of analog resistors  Demonstrates Dueling-enabled isolation method  Can be utilized without implementation problems for</p>
    <p>Custom-VLSI designs  Alternative ApproachAlternative Approach</p>
    <p>Alternate detector circuits for FPGA implementation are Alternate detector circuits for FPGA implementation are under investigationunder investigation</p>
    <p>Avoid using Tri-state buffers, pull-down resistors and use Avoid using Tri-state buffers, pull-down resistors and use native digital components available on FPGAsnative digital components available on FPGAs</p>
  </div>
  <div class="page">
    <p>graceful degredation via ranking of alternatives</p>
    <p>Evolutionary Computation strategies effective for more than just repair phase: continually detect, rank, and isolate faults entirely within the underlying data throughput flow</p>
    <p>Competitive Runtime Reconfiguration (CRR)</p>
    <p>no test</p>
    <p>vectors</p>
    <p>diverse alternative s working</p>
    <p>a-priori</p>
    <p>fault detection by robust consensus</p>
    <p>over time device</p>
    <p>remains online during</p>
    <p>repair</p>
    <p>no reconfiguration when fault-free</p>
    <p>fault isolation is model-free and self-calibrating</p>
    <p>completelyrepaired</p>
    <p>criteria can be ignored</p>
    <p>performance readily adjustable</p>
    <p>novel fitness novel fitness assessment assessment via via pairwise pairwise discrepancydiscrepancy without any without any</p>
    <p>pre-conceived pre-conceived oracle for oracle for</p>
    <p>correctness correctness (emergent (emergent behavior)behavior)</p>
    <p>ConceptualConceptual InnovationInnovation</p>
    <p>Reconfiguration Algorithm</p>
    <p>`</p>
    <p>S R A M -bas ed F P G A</p>
    <p>L Half-Con fig uratio n</p>
    <p>Discrepancy Check L Discrepancy Check R</p>
    <p>Function Logic L</p>
    <p>CONFIGURATION BIT STREA M</p>
    <p>INPUT DA TA</p>
    <p>Function Logic R</p>
    <p>DATA OUTPUT</p>
    <p>F E</p>
    <p>E D</p>
    <p>B A</p>
    <p>C K</p>
    <p>R Half-Co nfig uratio n</p>
    <p>CONTROL</p>
    <p>O F</p>
    <p>F -C</p>
    <p>H IP</p>
    <p>E E</p>
    <p>P R</p>
    <p>O M</p>
    <p>( N</p>
    <p>O T</p>
    <p>E :</p>
    <p>a n</p>
    <p>o n</p>
    <p>-v o</p>
    <p>la ti</p>
    <p>le m</p>
    <p>e m</p>
    <p>o ry</p>
    <p>i s</p>
    <p>a lr</p>
    <p>e a</p>
    <p>d y</p>
    <p>r e</p>
    <p>q u</p>
    <p>ir e</p>
    <p>d t</p>
    <p>o b</p>
    <p>o o</p>
    <p>t a</p>
    <p>n y</p>
    <p>S R</p>
    <p>A M</p>
    <p>F P</p>
    <p>G A</p>
    <p>f ro</p>
    <p>m c</p>
    <p>o ld</p>
    <p>s ta</p>
    <p>rt .</p>
    <p>.. t</p>
    <p>h is</p>
    <p>is n</p>
    <p>o t</p>
    <p>a n</p>
    <p>a d</p>
    <p>d it</p>
    <p>io n</p>
    <p>a l</p>
    <p>c h</p>
    <p>ip )</p>
    <p>checking logic part of</p>
    <p>individual hence also</p>
    <p>competes for correctness</p>
    <p>failures in population memory covered</p>
    <p>Initialization Population partitioned into</p>
    <p>functionally-identical yet physically-distinct half-configurations</p>
    <p>Fitness Adjustment</p>
    <p>update fitness of only L and R based on detection results</p>
    <p>either L's or R's fitness &lt; Repair</p>
    <p>Threshold?</p>
    <p>Selection choose</p>
    <p>FPGA configuration(s) labeled L and R</p>
    <p>Detection apply functional inputs</p>
    <p>to compute FPGA outputs using L, R</p>
    <p>Adjust Controls detection mode, overlap interval, ...</p>
    <p>invoke</p>
    <p>Genetic Operators only once</p>
    <p>and only on L or R</p>
    <p>L=R</p>
    <p>L=R</p>
    <p>PRIMARY LOOP</p>
    <p>discrepancy free</p>
    <p>L, R results</p>
    <p>NO</p>
    <p>YES</p>
    <p>is</p>
  </div>
  <div class="page">
    <p>pristine</p>
    <p>suspec t</p>
    <p>refurbished</p>
    <p>under repair</p>
    <p>partial repair</p>
    <p>L R</p>
    <p>L = R</p>
    <p>complete repair</p>
    <p>primordial</p>
    <p>L = R</p>
    <p>L R</p>
    <p>L R</p>
    <p>L = R</p>
    <p>L = R</p>
    <p>LR</p>
    <p>fi fOT :</p>
    <p>L = R</p>
    <p>: fi fOT</p>
    <p>fi &lt; fRT</p>
    <p>L R :</p>
    <p>fi &lt; fRT</p>
    <p>L R :</p>
    <p>integral w ith</p>
    <p>: fi fRT</p>
    <p>: fi &lt; fOT</p>
    <p>C O M P E T I T I O N</p>
    <p>C O M P E T I T I O N</p>
    <p>E V O L U T I O N</p>
    <p>States Transitions during lifetime of States Transitions during lifetime of</p>
    <p>iithth Half-Configuration Half-Configuration</p>
    <p>Configuration Health States</p>
    <p>Discrepancy OperatorDiscrepancy Operator  Baseline Discrepancy Operator  is dyadic operator with binary output:</p>
    <p>Z(Ci) is FPGA data throughput output of configuration Ci</p>
    <p>Othewise</p>
    <p>CZCZ CC</p>
    <p>R i</p>
    <p>L iR</p>
    <p>i L i</p>
    <p>)()(</p>
    <p>R ji</p>
    <p>L jii CEORC ,,j  =RS:</p>
    <p>(Hamming Distance)</p>
    <p>R ji</p>
    <p>L jii CEORC ,,j ^ =WTA:</p>
    <p>(Equivalence)</p>
  </div>
  <div class="page">
    <p>Procedural Flow under Consensus-Based Evaluation</p>
    <p>Initialization Population partitioned into</p>
    <p>functionally-identical yet physically-distinct half-configurations</p>
    <p>Fitness Adjustment</p>
    <p>update fitness of only L and R based on detection results</p>
    <p>either L's or R's fitness &lt; Repair</p>
    <p>Threshold?</p>
    <p>Selection choose</p>
    <p>FPGA configuration(s) labeled L and R</p>
    <p>Detection apply functional inputs</p>
    <p>to compute FPGA outputs using L, R</p>
    <p>Adjust Controls detection mode, overlap interval, ...</p>
    <p>invoke</p>
    <p>Genetic Operators only once</p>
    <p>and only on L or R</p>
    <p>L=R</p>
    <p>L=R</p>
    <p>PRIMARY LOOP</p>
    <p>discrepancy free</p>
    <p>L, R results</p>
    <p>NO</p>
    <p>YES</p>
    <p>is</p>
    <p>InitializationInitialization Partition P into sub-populations of size |P|/2 to designate</p>
    <p>physical FPGA left-half or right-half resource utilization</p>
    <p>Consensus Based EvaluationConsensus Based Evaluation Discrepancy Operator: CL  CR Four Fitness States : Pristine Suspect Under Repair Refurbished</p>
    <p>RegenerationRegeneration Genetic Operators recover based on Reintroduction Rate  Operators only applied once then offspring returned to service without concern about increasing fitness</p>
  </div>
  <div class="page">
    <p>GA Parameters &amp; Experiments</p>
    <p>SpeciationSpeciation  Two-point crossover between individuals from same sub-groupTwo-point crossover between individuals from same sub-group  Crossover points chosen to prevent intra-CLB crossoverCrossover points chosen to prevent intra-CLB crossover  Breeding occurs exclusively among members of sub-populationsBreeding occurs exclusively among members of sub-populations  Maintains non-interfering resource use among Maintains non-interfering resource use among L, RL, R</p>
    <p>GA operatorsGA operators External-Module-CrossoverExternal-Module-Crossover Internal-Module-Crossover Internal-Module-Crossover Internal-Module-MutationInternal-Module-Mutation</p>
    <p>GA parametersGA parameters Population size : 20 individuals Population size : 20 individuals Crossover rate : 5% Crossover rate : 5% Mutation rate : up to 80% per bitMutation rate : up to 80% per bit</p>
    <p>Fault Isolation CharacteristicsFault Isolation Characteristics  Regenerative ExperimentsRegenerative Experiments</p>
    <p>Demonstrate Demonstrate   Objective fitness function replaced Objective fitness function replaced</p>
    <p>by the Consensus-based Evaluation by the Consensus-based Evaluation Approach and Relative FitnessApproach and Relative Fitness</p>
    <p>Elimination of additional test vectorsElimination of additional test vectors</p>
    <p>Experiments Experiments</p>
  </div>
  <div class="page">
    <p>Impact of Fault on Viable Individuals</p>
    <p>Existence of Positive Test VectorExistence of Positive Test Vector  Input Ip comprises a positive test vector iff Cv(Ip)  Cf(Ip) = 1 where Cv denotes a</p>
    <p>viable configuration and Cf denotes a faulty configuration  So if a discrepancy is visible then some Ip exists which manifests the fault</p>
    <p>Minimal Case whenMinimal Case when Ip is Uniqueis Unique</p>
    <p>Ip is unique if fault is observable under exactly one test vector</p>
    <p>Probability Mass Function for EncounteringProbability Mass Function for Encountering Ip in Minimal Casein Minimal Case  Consider Ew=600 yielding 99.5% coverage for a module with input space W=64</p>
    <p>The number of input occurrences, 0  i  600, that randomly encounter Ip to</p>
    <p>identify the fault is governed by the probability density function:</p>
    <p>p.m.f.(i)= where</p>
    <p>where D is the length of EwD</p>
    <p>iD</p>
    <p>W</p>
    <p>nW</p>
    <p>i</p>
    <p>D</p>
  </div>
  <div class="page">
    <p>Isolation of a single faulty individual with 1-out-of-64 impact</p>
    <p>Outliers are identified after EW iterations have elapsed  Expected D.V. = (1/64)*600 = 9.375 from individual impacted by fault  Isolated individuals DV differs from the average DV by 33 after 1 or more observation intervals of length EW</p>
  </div>
  <div class="page">
    <p>Isolation of a single faulty L individual with 10-out-of-64 impact</p>
    <p>Compare with 1-out-of-64 fault impactCompare with 1-out-of-64 fault impact  Expected DV of (10/64)*600 = 93.75 for faulty configuration  One isolation will be complete approx. once in every 93.75/5 = 19 Sliding Windows  Fault Isolation achieved is 100%</p>
  </div>
  <div class="page">
    <p>Isolation of 8 faulty individuals L4&amp;R4 with 1-out-of-64 impact</p>
    <p>Expected isolations do not occur approx. 40% of the timeExpected isolations do not occur approx. 40% of the time  Average discrepancy value of the population is higher  Outlier isolation difficult  Multiple faulty individual, Discrepancies scattered</p>
  </div>
  <div class="page">
    <p>Regeneration PerformanceRegeneration Performance</p>
    <p>Difference (vs. Hamming Distance) Evaluation Window, Ew = 600 Suspect Threshold: DVS = 1-6/600=99% Repair Threshold: DVR = 1-4/600 = 99.3% Re-introduction rate: r = 0.1</p>
    <p>ParametersParameters:</p>
    <p>Repairs evolvedRepairs evolved in-situ, in real-time, without additional test in-situ, in real-time, without additional test vectors, vectors, while allowing device to remainwhile allowing device to remain partially online. partially online.</p>
  </div>
  <div class="page">
    <p>Multilayer Runtime Reconfiguration Architecture Multilayer Runtime Reconfiguration Architecture</p>
    <p>(MRRA)(MRRA)</p>
    <p>Fault-Repair Genetic Algorithm</p>
    <p>Reconfiguration EngineM</p>
    <p>ic ro</p>
    <p>p ro</p>
    <p>c e s s o r</p>
    <p>System Bus</p>
    <p>Virtex-II Pro FPGA</p>
    <p>RAM C</p>
    <p>o n tro</p>
    <p>l S y s te</p>
    <p>m</p>
    <p>Develop MRRA fast Develop MRRA fast reconfiguration paradigm for the reconfiguration paradigm for the CRR approachCRR approach</p>
    <p>Validate with real hardware Validate with real hardware platform along with detailed platform along with detailed performance analysis performance analysis</p>
    <p>First general-purpose framework First general-purpose framework for a wide variety of applications for a wide variety of applications requiring dynamic reconfiguration requiring dynamic reconfiguration</p>
    <p>Extend existing theories on Extend existing theories on reconfiguration reconfiguration</p>
  </div>
  <div class="page">
    <p>Avnet FPGA Development Board</p>
    <p>PCI I nt er f ace</p>
    <p>Virtex-II Pro FPGA</p>
    <p>Off Chip RAM</p>
    <p>Control hosted on</p>
    <p>PC</p>
    <p>F P</p>
    <p>G A</p>
    <p>O u t</p>
    <p>p u</p>
    <p>t</p>
    <p>B i t f i l e</p>
    <p>I n p u t D a t a</p>
    <p>Loosely Coupled SolutionLoosely Coupled Solution</p>
    <p>The entire system operates on a The entire system operates on a 32-bit basis32-bit basis</p>
    <p>The The Virtex-II ProVirtex-II Pro is mounted on a is mounted on a development board which can then development board which can then</p>
    <p>be interfaced with a WorkStation be interfaced with a WorkStation running running XilinxXilinx EDK and ISE. EDK and ISE.</p>
  </div>
  <div class="page">
    <p>For further info  EH Website http://cal.ucf.edu</p>
  </div>
</Presentation>
