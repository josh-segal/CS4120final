<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Facilitating Magnetic Recording Technology Scaling for Data Center Hard Disk Drives through</p>
    <p>Filesystem-level Transparent Local Erasure Coding</p>
    <p>Yin Li, Hao Wang, Xuebin Zhang, Ning Zheng, Shafa Dahandeh, and Tong Zhang</p>
  </div>
  <div class="page">
    <p>Data Center HDDs: Rationale</p>
    <p>Data center: The main driver for future HDD market growth</p>
    <p>personal overall ? Minimize HDD $/GB</p>
    <p>Data Centers</p>
    <p>datacenter</p>
    <p>H D</p>
    <p>D m</p>
    <p>ar ke</p>
    <p>t</p>
    <p>Time</p>
    <p>[1] E. Brewer et al., Disks for data centers, Technical report, Google, 2016.</p>
  </div>
  <div class="page">
    <p>Data Center HDDs: Rationale</p>
    <p>Exploit the characteristics of datacenter infrastructure &amp; workloads</p>
    <p>Relax the per-HDD reliability spec Lower manufacturing cost</p>
    <p>Read retry rate: &lt;10-5~10-6 Hard sector failure rate: &lt;10-12~10-14</p>
    <p>q The pervasive use of replication and distributed erasure coding to ensure system-level reliability in datacenters</p>
    <p>q Dominantly coarse-grained HDD data access in datacenters</p>
  </div>
  <div class="page">
    <p>Data Center HDDs: Our First Step</p>
    <p>? How datacenters can embrace HDD with relaxed read retry rate</p>
    <p>Higher HDD read retry rate</p>
    <p>Longer per-HDD tail read latency read latency</p>
    <p>pe rc</p>
    <p>en til</p>
    <p>e</p>
    <p>Effect will be amplified in large-scale systems (e.g., datacenters)</p>
    <p>[1] J. Dean and L. A. Barroso, The tail at scale, Communications of the ACM, 56:7480, 2013.</p>
  </div>
  <div class="page">
    <p>Data Center HDDs: A Simple First Step</p>
    <p>? How datacenters can embrace HDD with relaxed read retry rate</p>
    <p>HDD sector read failure</p>
    <p>HDD internal read retry (slow)</p>
    <p>System-level recovery (fast) Success?</p>
    <p>N Y</p>
    <p>RAID-5/6 Distributed erasure coding High network traffic</p>
    <p>System-level redundancy</p>
  </div>
  <div class="page">
    <p>RedundancyData Redundancy</p>
    <p>q Distributed erasure coding: Mitigate catastrophic HDD failures &amp; server unavailability at high coding redundancy (e.g., 25%~50%)</p>
    <p>Data Data Data</p>
    <p>Distributed erasure coding</p>
    <p>Hybrid Erasure Coding for Data Centers</p>
  </div>
  <div class="page">
    <p>Hybrid Erasure Coding for Data Centers</p>
    <p>Data</p>
    <p>Local erasure coding</p>
    <p>q Distributed erasure coding: Mitigate catastrophic HDD failures &amp; server unavailability at high coding redundancy (e.g., 25%~50%)</p>
    <p>q Local erasure coding: Mitigate HDD sector read failures at low coding redundancy (e.g., 3% and below)</p>
    <p>Local erasure coding</p>
    <p>Local erasure coding</p>
    <p>Data</p>
    <p>Local erasure coding</p>
    <p>Data</p>
    <p>Local erasure coding</p>
    <p>Data</p>
    <p>Local erasure coding</p>
    <p>Distributed erasure coding</p>
    <p>Redundancy Redundancy</p>
  </div>
  <div class="page">
    <p>Simple Basic Concept q Local erasure coding: data + coding redundancy on the same HDD</p>
    <p>Application layer</p>
    <p>OS layer</p>
    <p>Hardware layer</p>
  </div>
  <div class="page">
    <p>q Per-file erasure coding for data &amp; per-sector replication for metadata</p>
    <p>User data &amp; redundancy</p>
    <p>k+m sectors</p>
    <p>User data &amp; redundancy</p>
    <p>k+m sectors</p>
    <p>User data &amp; redundancy</p>
    <p>k+m sectors</p>
    <p>one file</p>
    <p>Filesystem-level Local Erasure Coding</p>
  </div>
  <div class="page">
    <p>Some Non-trivial Issues</p>
    <p>? Mathematically formulate its effect on HDD read tail latency</p>
    <p>? How to deal with unaligned HDD write and data update</p>
    <p>? Impact of encoding/decoding on system speed performance</p>
  </div>
  <div class="page">
    <p>Tail Latency</p>
    <p>q Let T denote the latency to read N consecutive sectors from HDD</p>
    <p>q Model T as a discrete variable and let f(T) denote its probability mass function</p>
    <p>q Given the latency percentile Ptail (e.g., 99%), we search for the tail latency Ttail subject to</p>
    <p>f (T) T=0</p>
    <p>Ttail</p>
    <p>Ptail</p>
    <p>Derived a set of mathematical formulations to estimate the data read tail latency when using local erasure coding (see the paper for details)</p>
  </div>
  <div class="page">
    <p>HDD</p>
    <p>Memory</p>
    <p>Unaligned HDD Write</p>
    <p>q Use of (250, 5) local erasure code</p>
    <p>one file</p>
    <p>codeword shortening</p>
    <p>zero sectors 100 sectors</p>
  </div>
  <div class="page">
    <p>HDD</p>
    <p>Memory</p>
    <p>Data Update</p>
    <p>q Use of (250, 5) local erasure code</p>
    <p>one file</p>
  </div>
  <div class="page">
    <p>Analysis and Experimental Results</p>
    <p>q RS-based local erasure codes with codeword length of 255 and 1023</p>
    <p>q Relaxed HDD sector read failure probability: 1x10-4, 5x10-4, 1x10-3, 5x10-3</p>
    <p>q Target local erasure code decoding failure probability: 1x10-8</p>
    <p>k m k m</p>
  </div>
  <div class="page">
    <p>Encoding/Decoding Engine</p>
    <p>Software-based implementation</p>
    <p>q Intel CPU 3.3GHz with 64kB L1, 256kB L2, and 6MB L3 q Matrix-based encoding and decoding q Utilization of x86 SSE (Streaming SIMD Extensions) instructions</p>
  </div>
  <div class="page">
    <p>Encoding/Decoding Engine</p>
    <p>Emerging CPU chip with built-in FPGA</p>
  </div>
  <div class="page">
    <p>Encoding/Decoding Engine</p>
    <p>Hardware-based Implementation</p>
    <p>Coding Parameters Equivalent XOR Gate Number k m Encoder Decoder</p>
    <p>q Parallel polynomial-based encoder and parallel Berlekamp-Massey decoder q Verilog-based HDL design entry with target throughput of 4GB/s</p>
  </div>
  <div class="page">
    <p>q 7200rpm, Ptail = 99%, average per-sector retry latency: 20ms and 40ms</p>
    <p>Tail Latency Analysis</p>
  </div>
  <div class="page">
    <p>Impact on System Speed Performance</p>
    <p>q Integrate the local erasure coding into Kernel 3.10.102 (ext4 filesystem)</p>
    <p>q Big data benchmark suite HiBench 3.0</p>
  </div>
  <div class="page">
    <p>Impact on System Speed Performance</p>
    <p>software-based implementation</p>
    <p>hardware-based implementation</p>
  </div>
  <div class="page">
    <p>Conclusion and Future Work  A first step exploring datacenter HDDs: local erasure coding</p>
    <p>? Minimize CPU workload for distributed &amp; local erasure coding</p>
    <p>? Cross-layer system/HDD design</p>
    <p>? Software-defined datacenter HDD with configurable read channel</p>
    <p>? Iterative read channel and system-level erasure code decoding</p>
    <p>? Use of &gt;4kB HDD sector size</p>
    <p>? Modeling of soft and hard sector failures in future HDDs, and development of corresponding system-level coding design techniques</p>
    <p>? Implication to overall HDD design (read channel, servo, head, )</p>
    <p>?</p>
  </div>
</Presentation>
