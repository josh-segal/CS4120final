<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>TimeGraph: GPU Scheduling for</p>
    <p>Real-Time Multi-Tasking Environments Shinpei Kato*, Karthik Lakshmanan*, Raj Rajkumar*, and Yutaka Ishikawa**</p>
    <p>* Carnegie Mellon University ** The University of Tokyo</p>
  </div>
  <div class="page">
    <p>Graphics Applications</p>
  </div>
  <div class="page">
    <p>Graphics Processing Unit (GPU)</p>
    <p>NVIDIA GPU GeForce GTX 480</p>
    <p>L2 Cache L1 L1 L1 L1 L1 L1 L1</p>
    <p>Device Memory</p>
    <p>Host Memory CPU</p>
  </div>
  <div class="page">
    <p>GTX 280</p>
    <p>GTX 285</p>
    <p>GTX 480</p>
    <p>GTX 580</p>
    <p>E4300 E6850 Q9650</p>
    <p>X7460 980 XE 0</p>
    <p>G F</p>
    <p>LO P</p>
    <p>S</p>
    <p>NVIDIA GPU</p>
    <p>Intel CPU</p>
    <p>Peak Performance</p>
  </div>
  <div class="page">
    <p>GTX 280</p>
    <p>GTX 285 GTX 480</p>
    <p>GTX 580</p>
    <p>E4300 E6850</p>
    <p>Q9650 X7460</p>
    <p>G F</p>
    <p>LO P</p>
    <p>S /</p>
    <p>W a</p>
    <p>tt</p>
    <p>NVIDIA GPU</p>
    <p>Intel CPU</p>
    <p>Peak Performance per Watt</p>
  </div>
  <div class="page">
    <p>General-Purpose Computing</p>
    <p>on GPU (GPGPU)</p>
    <p>Computer Vision Scientific Simulation</p>
    <p>Autonomous Driving</p>
  </div>
  <div class="page">
    <p>Outline</p>
  </div>
  <div class="page">
    <p>CMD_HtoD CMD_HtoD CMD_LAUNCH CMD_DtoH</p>
    <p>GPU</p>
    <p>Code Input</p>
    <p>Data</p>
    <p>Host Memory</p>
    <p>GPU</p>
    <p>Code Input</p>
    <p>Data</p>
    <p>Device Memory</p>
    <p>GPU</p>
    <p>Code Input</p>
    <p>Data</p>
    <p>Host Memory</p>
    <p>GPU</p>
    <p>Code Input</p>
    <p>Data</p>
    <p>Device Memory</p>
    <p>GPU</p>
    <p>Code Input</p>
    <p>Data</p>
    <p>Host Memory</p>
    <p>GPU</p>
    <p>Code</p>
    <p>Device Memory</p>
    <p>GPU</p>
    <p>Code Input</p>
    <p>Data</p>
    <p>Host Memory</p>
    <p>Device Memory</p>
    <p>GPU Is Command-Driven</p>
    <p>GPU</p>
    <p>Code Output</p>
    <p>Data</p>
    <p>Output</p>
    <p>Data</p>
    <p>copy</p>
    <p>Input</p>
    <p>Data</p>
    <p>copy</p>
    <p>Output</p>
    <p>Data</p>
    <p>copy</p>
  </div>
  <div class="page">
    <p>Multi-Tasking Problem</p>
    <p>High-priority task</p>
    <p>Low-priority task GPU command</p>
    <p>GPU driver</p>
    <p>Blocked Blocked</p>
    <p>CPU</p>
    <p>GPU</p>
    <p>time</p>
    <p>time</p>
  </div>
  <div class="page">
    <p>Impact of Interference</p>
    <p>Observe Frame Rate of</p>
    <p>OpenArena (3-D Game)</p>
    <p>on Linux</p>
    <p>NVIDIA Nouveau NVIDIA Nouveau</p>
    <p>GeForce 9500 GeForce GTX 285</p>
    <p>R e</p>
    <p>la ti</p>
    <p>v e</p>
    <p>f ra</p>
    <p>m e</p>
    <p>-r a</p>
    <p>te t</p>
    <p>o s</p>
    <p>ta n</p>
    <p>d a</p>
    <p>lo n</p>
    <p>e</p>
    <p>Execute with Engine (low workload)</p>
    <p>Execute with Clearspd (high workload)</p>
    <p>Compete w/ Widget (low GPU workload)</p>
    <p>Compete w/ Bomb (high GPU workload)</p>
    <p>NVIDIA proprietary driver</p>
    <p>Nouveau open-source driver</p>
  </div>
  <div class="page">
    <p>Outline</p>
  </div>
  <div class="page">
    <p>Software Approach Applications</p>
    <p>OpenGL/CUDA Library</p>
    <p>User-space GPU Driver</p>
    <p>Submission Interface</p>
    <p>IRQ Handler</p>
    <p>Kernel-space GPU Driver</p>
    <p>TimeGraph</p>
    <p>GPU Command Scheduler</p>
    <p>GPU Reserve Manager</p>
    <p>GPU Command Profiler</p>
    <p>Graphics Processing Unit (GPU)</p>
    <p>GPU Command Queue</p>
    <p>Notification</p>
    <p>GPU resource control</p>
    <p>GPU exec. time prediction</p>
    <p>Kernel Space</p>
    <p>Interrupt</p>
    <p>User Space</p>
    <p>Device Space</p>
    <p>TimeGraph Architecture</p>
    <p>GPU Command</p>
    <p>Group</p>
    <p>High</p>
    <p>Priority</p>
  </div>
  <div class="page">
    <p>Priority Support  Predictable</p>
    <p>Response Time (PRT) Policy</p>
    <p>When GPU is not idle, GPU commands are queued</p>
    <p>When GPU gets idle, GPU commands are dispatched</p>
    <p>High-priority task Low-priority task</p>
    <p>GPU command</p>
    <p>GPU driver</p>
    <p>Interrupt</p>
    <p>CPU</p>
    <p>GPU</p>
    <p>time</p>
    <p>time</p>
    <p>Prioritized correctly</p>
    <p>Overhead</p>
  </div>
  <div class="page">
    <p>Priority Support  High</p>
    <p>Throughput (HT) Policy</p>
    <p>When GPU is not idle, GPU commands are queued,</p>
    <p>only if priority is lower than current GPU context</p>
    <p>When GPU gets idle, GPU commands are dispatched</p>
    <p>High-priority task Low-priority task</p>
    <p>GPU command</p>
    <p>GPU driver</p>
    <p>Interrupt</p>
    <p>CPU</p>
    <p>GPU</p>
    <p>time</p>
    <p>time</p>
    <p>Overhead reduced</p>
  </div>
  <div class="page">
    <p>Reservation Support  Posterior</p>
    <p>Enforcement (PE) Policy</p>
    <p>Enforce GPU resource usage optimistically</p>
    <p>Specify capacity (C) and period (P) per task (/proc/GPU/$TASK)</p>
    <p>CPU</p>
    <p>GPU</p>
    <p>Execution Budget</p>
    <p>C</p>
    <p>C</p>
    <p>P</p>
    <p>time</p>
    <p>time</p>
    <p>time</p>
    <p>Enforced</p>
  </div>
  <div class="page">
    <p>Reservation Support  Apriori</p>
    <p>Enforcement (AE) Policy</p>
    <p>Enforce GPU resource usage pessimistically</p>
    <p>Specify capacity (C) and period (P) per task (/proc/GPU/$TASK)</p>
    <p>CPU</p>
    <p>GPU</p>
    <p>Execution Budget</p>
    <p>C</p>
    <p>time</p>
    <p>time</p>
    <p>time</p>
    <p>Predict Predict</p>
    <p>Enforced Enforced</p>
    <p>C</p>
    <p>P</p>
    <p>Predict Predict</p>
  </div>
  <div class="page">
    <p>GPU Execution Time Prediction</p>
    <p>History-based approach</p>
    <p>Search records of previous sequences of</p>
    <p>GPU commands that match the incoming</p>
    <p>sequences of GPU commands</p>
    <p>Works for 2-D but needs investigation for 3-D</p>
    <p>and Compute</p>
    <p>Please see the paper for the detail</p>
  </div>
  <div class="page">
    <p>Outline</p>
  </div>
  <div class="page">
    <p>Experimental Setup</p>
    <p>GPU: NVIDIA GeForce 9800 GT</p>
    <p>CPU: Intel Xeon E5504</p>
    <p>OS: Linux Kernel 2.6.36  Nouveau open-source driver</p>
    <p>Benchmark:  Phoronix Test Suite http://www.phoronix-test-suite.com/</p>
    <p>Including OpenGL 3-D game programs</p>
    <p>Gallium3D Demo Suite http://www.mesa3d.org/</p>
    <p>Including OpenGL 3-D widget and graphics-bomb programs</p>
  </div>
  <div class="page">
    <p>Performance Protection</p>
    <p>OpenArena World of Padman</p>
    <p>Urban Terror Unreal Trounament</p>
    <p>A v</p>
    <p>e ra</p>
    <p>g e</p>
    <p>f ra</p>
    <p>m e</p>
    <p>-r a</p>
    <p>te (</p>
    <p>fp s)</p>
    <p>No Timing Support</p>
    <p>Priority Support</p>
    <p>Priority &amp; Soft Reservation Support</p>
    <p>Priority &amp; Hard Reservation Support</p>
    <p>No TimeGraph Support</p>
    <p>Priority Support (High Priority -&gt; 3-D Game)</p>
    <p>Priority &amp; PE Reservation Support (GPU Util. 10% -&gt; Graphics Bomb)</p>
    <p>Priority &amp; AE Reservation Support (GPU Util. 10% -&gt; Graphics Bomb)</p>
    <p>Frame Rate of 3-D Game competing with Graphics Bomb in background</p>
  </div>
  <div class="page">
    <p>Interference on Time</p>
    <p>F ra</p>
    <p>m e</p>
    <p>s p</p>
    <p>e r</p>
    <p>S e</p>
    <p>co n</p>
    <p>d</p>
    <p>Elapsed Time (Second)</p>
    <p>Engine #1 Engine #2 Engine #3</p>
    <p>F ra</p>
    <p>m e</p>
    <p>s p</p>
    <p>e r</p>
    <p>S e</p>
    <p>co n</p>
    <p>d</p>
    <p>Elapsed Time (Second)</p>
    <p>Engine #1 Engine #2 Engine #3</p>
    <p>No TimeGraph Support</p>
    <p>F ra</p>
    <p>m e</p>
    <p>s p</p>
    <p>e r</p>
    <p>S e</p>
    <p>co n</p>
    <p>d</p>
    <p>Elapsed Time (Second)</p>
    <p>Engine #1 Engine #2 Engine #3</p>
    <p>Priority Support (PRT) Priority Support (PRT) +</p>
    <p>Reservation Support (PE)</p>
    <p>Widget Widget Widget Widget Widget Widget Widget Widget Widget</p>
  </div>
  <div class="page">
    <p>OpenArena World of Padman</p>
    <p>Urban Terror Unreal Trounament</p>
    <p>A v</p>
    <p>e ra</p>
    <p>g e</p>
    <p>f ra</p>
    <p>m e</p>
    <p>-r a</p>
    <p>te (</p>
    <p>fp s)</p>
    <p>No TimeGraph Support</p>
    <p>Priority Support (HT)</p>
    <p>Priority Support (PRT)</p>
    <p>Priority &amp; Reservation Support (PRT &amp; PE)</p>
    <p>Priority &amp; Reservation Support (PRT &amp; AE)</p>
    <p>Standalone Performance</p>
    <p>X server is assigned PRT policy</p>
    <p>Overhead is acceptable for protecting GPU</p>
  </div>
  <div class="page">
    <p>Outline</p>
  </div>
  <div class="page">
    <p>Concluding Remarks</p>
    <p>TimeGraph enables prioritization and isolation</p>
    <p>for GPU applications in multi-tasking environments</p>
    <p>Device-driver solution: no modification to user-space</p>
    <p>Scheduling of GPU commands</p>
    <p>Reservation of GPU resource usage</p>
    <p>http://rtml.ece.cmu.edu/projects/timegraph/</p>
  </div>
  <div class="page">
    <p>Current Status</p>
    <p>GPGPU support (collaboration with PathScale Inc.)</p>
    <p>Visit http://github.com/pathscale/pscnv</p>
    <p>Making open-source fast and reliable</p>
    <p>Its getting competitive to the proprietary driver!</p>
    <p>Some result from our OSPERT11 paper (*) below:</p>
    <p>NVIDIA Ours NVIDIA Ours NVIDIA Ours NVIDIA Ours NVIDIA Ours NVIDIA Ours NVIDIA Ours</p>
    <p>E x</p>
    <p>e cu</p>
    <p>ti o</p>
    <p>n T</p>
    <p>im e</p>
    <p>( m</p>
    <p>s)</p>
    <p>Launch HtoD DtoH</p>
    <p>NVIDIA GPU</p>
    <p>GeForce GTX 480 Matrix Multiplication</p>
    <p>* Available at http://www.contrib.andrew.cmu.edu/~shinpei/papers/ospert11.pdf</p>
  </div>
  <div class="page">
    <p>Thank you for your attention!</p>
    <p>Questions?</p>
  </div>
</Presentation>
