<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>On the Benefit of Virtualization Strategies for Flexible Server Allocation</p>
    <p>or/and: How to allocate resources when you dont know the future?</p>
    <p>Dushyant Arora Anja Feldmann</p>
    <p>Gregor Schaffrath Stefan Schmid</p>
    <p>T-Labs / TU Berlin</p>
    <p>Co-authors:</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 2</p>
    <p>Network virtualization architecture and prototype: Anja Feldmann, Gregor Schaffrath, Stefan Schmid (T-Labs/TU Berlin)</p>
    <p>Service migration Dushyant Arora (BITS) and Marcin Bienkowski (Uni Wroclaw)</p>
    <p>Implementation Ernesto Abarca, Johannes Grassler, Lukas Wllner, etc.</p>
    <p>VNet embeddings Guy Even and Moti Medina (Tel Aviv Uni), Carlo Frst (TUB)</p>
    <p>A joint project with , and : D. Jurca, A. Khan, W. Kellerer, K. Kozu and J. Widmer</p>
    <p>Economics Arne Ludwig (TUB)</p>
    <p>Note: Focus here not limited to clouds!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 3</p>
    <p>Network Virtualization: High-level Concepts</p>
    <p>Decoupling services from physical infrastructure - dynamic virtual network embeddings, sharing of resources, smarter core - not only node but also link virtualization (e.g., VLANs, OpenFlow, ...)</p>
    <p>Example 1: A mobile service provider can move services to locations where they</p>
    <p>are most useful:</p>
    <p>Example 2: Virtual networks (VNets) can be allocated where the least resources are</p>
    <p>used, or where most energy can be saved, or...:</p>
    <p>on service!</p>
    <p>bw, lat, ...</p>
    <p>CPU, mem, OS, ...</p>
    <p>reqs</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 4</p>
    <p>Previous work: Virtualization Business Roles</p>
    <p>Physical infrastructure provider (PIP): owns and manages physical infrastructure (substrate), supports network</p>
    <p>virtualization (e.g., GENI: no federation, one PIP only)</p>
    <p>Virtual network provider (VNP): assembles virtual resources from PIPs into virtual topology, makes negotiations,</p>
    <p>etc. (e.g., GENI clearinghouse)</p>
    <p>Virtual network operator (VNO): installation and operation of VNet according to SP needs, e.g., triggering cross</p>
    <p>PIP migration, etc.</p>
    <p>Service provider (SP): uses VNet to offer services (application or transport service)</p>
    <p>Actors in the Internet today: service providers and ISPs  ISP: provide access (own infrastructure, rental, or combination), connectivity</p>
    <p>service (e.g., Telekom, AT&amp;T, ...)  Service provider: offers services (e.g., Google)  More roles exist today, often hidden in one company</p>
    <p>Envisioned business roles:</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 5</p>
    <p>This Paper: Online Service Migration</p>
    <p>on service! (e.g. SAP app)</p>
    <p>on service!</p>
    <p>Access pattern changes, e.g., due to mobility (commuter scenario), due to timeof-day effects (time-zone scenario), etc.</p>
    <p>... when and where to move the service, to maximize QoS and taking migration cost into account?</p>
    <p>Similar tradeoffs in clouds, content distribution networks, etc.!</p>
    <p>See also next talks on live migration and service interruption cost (not clear whether same tradeoff exists here, as isolated VNets and not in-band), as well as energy costs!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 6</p>
    <p>Dealing with Unpredictable Demand?</p>
    <p>Online algorithms make decisions at time t without any knowledge of inputs / requests at times t&gt;t.</p>
    <p>Online Algorithm</p>
    <p>How to deal with dynamic changes (e.g., mobility of users, arrival of VNets, etc.)?</p>
    <p>An r-competitive online algorithm ALG gives a worst-case performance guarantee: the performance is at most a factor r worse than an optimal offline algorithm OPT!</p>
    <p>Competitive Analysis</p>
    <p>Competitive ratio r,</p>
    <p>r = Cost(ALG) / cost(OPT)</p>
    <p>Is the price of not knowing the future!</p>
    <p>Competitive Ratio</p>
    <p>In virtual networks, many decisions need to be made online: online algorithms and network virtualization are a perfect match!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 7</p>
    <p>Online Service Migration</p>
    <p>Assume: one service, migration cost m (e.g., service interruption cost), access cost 1 per hop (or sum of link delays).</p>
    <p>When and where to move for offline algorithm or optimal competitive ratio?</p>
    <p>on service!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 8</p>
    <p>Optimal Offline Algorithm</p>
    <p>Can be computed using dynamic programming! Filling out a for optimal server configuration (at node u at time t):</p>
    <p>opt[u,t] = minvV {opt[t-1][v] + MIG(v,u) + ACC(u,t)}</p>
    <p>@ node (location of service)</p>
    <p>tim e</p>
    <p>Optimal cost to get to configuration where service is at node x at time t?</p>
    <p>x</p>
    <p>t</p>
    <p>... ...</p>
    <p>Optimal final position? (Backtrack!)</p>
    <p>OPT</p>
    <p>Visualization:</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 9</p>
    <p>Online Algorithm</p>
    <p>ALG For each node v, use COUNT(v) to count access cost if service was at v during entire epoch. Call nodes v with COUNT(v) &lt; m/40 active. If service is at node w, a phase ends when COUNT(w)m: the service is migrated to the center of gravity of the remaining active nodes (center node wrt latency or hop distance). If no such node is left, the epoch ends.</p>
    <p>Idea: Migrate to center of gravity when access cost at current node is as high as migration cost!</p>
    <p>Time between two migrations: phase Multiple phases constitute an epoch</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 10</p>
    <p>Online Algorithm: Visualization</p>
    <p>on service!</p>
    <p>Before phase 1:</p>
    <p>active</p>
    <p>inactive</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 11</p>
    <p>Online Algorithm: Visualization</p>
    <p>on service!</p>
    <p>Before phase 2:</p>
    <p>active</p>
    <p>inactive</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 12</p>
    <p>Online Algorithm: Visualization</p>
    <p>on service!</p>
    <p>Before phase 3:</p>
    <p>active</p>
    <p>inactive</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 13</p>
    <p>Online Algorithm: Visualization</p>
    <p>on service!</p>
    <p>Epoch ends!</p>
    <p>active</p>
    <p>inactive</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 14</p>
    <p>Online Algorithm: Analysis</p>
    <p>Competitive analysis?</p>
    <p>r = ALG / OPT</p>
    <p>?</p>
    <p>Lower bound cost of OPT:</p>
    <p>In an epoch, each node has at least access cost m, or there was a migration of cost m.</p>
    <p>Upper bound cost of ALG:</p>
    <p>We can show that each phase has cost at most 2m (access plus migration), and there are at most log(m) many phases per epoch!</p>
    <p>Theorem ALG is log(m) competitive!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 15</p>
    <p>Reality is more complex...: Multiple PIPs</p>
    <p>Migration across provider boundary costs transit/roaming costs, detailed topology not known, etc.</p>
    <p>PIP 1</p>
    <p>PIP 2 PIP 3</p>
    <p>PIP 4</p>
    <p>Theorem Competitive ALGs still exist!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 16</p>
    <p>Reality is more complex...: Multiple Servers</p>
    <p>Multiple servers allocated and migrated dynamically depending on demand and load, etc.</p>
    <p>on service!</p>
    <p>on service!</p>
    <p>Theorem Competitive ALGs still exist!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 17</p>
    <p>The Paper</p>
    <p>Very general cost model - detailed study of cost factors - access cost that depend on latency and load - servers have running costs (unlike many classic problems</p>
    <p>such as online facility location or metrical task systems)</p>
    <p>Online and offline algorithms for various scenarios</p>
    <p>Focus on use of flexible allocation (compared to static allocation) - under what dynamics is flexibility better?</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 18</p>
    <p>On the Benefit of Flexibility: Dynamics Scenarios</p>
    <p>Dynamics due to mobility: requests cycle through a 24h pattern: in the morning, requests distributed widely (people in suburbs), then focus in city centers; in the evening, reverse.</p>
    <p>Commuter Scenario Dynamics due to time zone effects: request originate in China first, then more requests come from European countries, and finally from the U.S.</p>
    <p>Time Zone Scenario</p>
    <p>Algorithm which uses optimal static server placements for a given request seq.</p>
    <p>Static Algorithm</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 19</p>
    <p>Intuition for Algorithm...</p>
    <p>Increasing demand triggers creation of additional servers (more for faster growing load functions).</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 20</p>
    <p>On the Benefit of Flexibility: Commuter Scenario</p>
    <p>ALG/STAT as a function of dynamics (static and dynamic load): For low dynamics and high dynamics, flexibility is less useful (max gain: almost factor of 2).</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 21</p>
    <p>On the Benefit of Flexibility: Time Zone Scenario</p>
    <p>ALG/STAT as a function of dynamics: for time zone scenario.</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 22</p>
    <p>Conclusion and Takeaways</p>
    <p>- Flexible server allocation for network virtualization and beyond: generalized model for a challenging problem</p>
    <p>- Online perspective: algorithms have to decide without knowing the future; relevant for many aspects of network virtualization</p>
    <p>- When useful? Depends on dynamics!</p>
    <p>- Streaming migration demonstrator for our network virtualization prototype (VLAN based):</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 23</p>
    <p>Thank</p>
    <p>Thank you!</p>
    <p>Further reading (e.g., on competitive embedding algorithms): http://www.net.t-labs.tu-berlin.de/~stefan/</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 24</p>
    <p>Comparison to Related Work</p>
    <p>- Conservative online perspective on resource management: no predictions possible, but with worst-case guarantees</p>
    <p>- Detailed costs model for VNet application (multiple PIPs with transit costs, costs depending on scenario: shared NFS, etc.)</p>
    <p>- Allows to study the use of flexibility (compared to static algorithms)</p>
    <p>- Like dynamic facility location problems where additional facilities can be created, migrated and closed (at non-zero cost) and where facilities have running costs and access costs that depend on load</p>
    <p>- Often a special case of metrical task systems but sometimes better bounds can be obtained for the more specific model!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid @ Hot-ICE, 2011 25</p>
    <p>New Resource Allocation Challenges?</p>
    <p>- Flexibility of embedding (max-flow problem with flexible end-points)</p>
    <p>- Migration technology: new tradeoffs</p>
    <p>- Economical aspects: new roles, new forms of inter-provider collaboration (roaming, QoS, inter-provider migration, ...)</p>
    <p>- Unknown demand and traffic patterns, new models for prediction?</p>
  </div>
</Presentation>
