<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Cache Modeling and Optimization using Miniature Simulations</p>
    <p>USENIX Annual Technical Conference (ATC 17) July 13, 2017</p>
    <p>Carl Waldspurger CachePhysics, Inc. Trausti Saemundsson CachePhysics, Inc. Irfan Ahmad CachePhysics, Inc. Nohhyun Park Datos IO, Inc.</p>
  </div>
  <div class="page">
    <p>Motivation  Caching important, ubiquitous  Optimize valuable cache resources  Improve performance, QoS  Sizing, partitioning, tuning, cliff removal,</p>
    <p>Problem: need accurate, efficient models  Complex policies, non-linear, workload-dependent  No general, lightweight, online approach</p>
    <p>CachePhysics, Inc. USENIX ATC 17 2</p>
  </div>
  <div class="page">
    <p>Cache Modeling</p>
    <p>Cache utility curves  Performance as f(size, )  Miss ratio curve (MRC)  Latency curve</p>
    <p>Observations  Non-linear, cliffs  Non-monotonic bumps</p>
    <p>CachePhysics, Inc. USENIX ATC 17 3</p>
  </div>
  <div class="page">
    <p>Counter Stacks [OSDI 14] SHARDS [FAST 15] AET [ATC 16]</p>
    <p>MRC Construction Methods</p>
    <p>Exact Approximate Stack Algorithms LRU, LFU,</p>
    <p>Any Algorithm ARC, LIRS, 2Q, FIFO,</p>
    <p>CachePhysics, Inc. USENIX ATC 17 4</p>
    <p>Mattson algorithm all sizes at once</p>
    <p>separate simulation for each cache size</p>
    <p>Counter Stacks [OSDI 14] SHARDS [FAST 15] AET [ATC 16]</p>
    <p>miniature simulation [ATC 17]</p>
  </div>
  <div class="page">
    <p>Miniature Simulation  Simulate large cache using tiny one  Scale down reference stream, cache size  Random sampling based on hash(key)  Assumes statistical self-similarity</p>
    <p>Run unmodified algorithm  LRU, LIRS, ARC, 2Q, FIFO, OPT,   Track usual stats</p>
    <p>CachePhysics, Inc. USENIX ATC 17 5</p>
  </div>
  <div class="page">
    <p>Scaling Down</p>
    <p>CachePhysics, Inc. USENIX ATC '17 6</p>
    <p>refs cache</p>
    <p>2</p>
    <p>half key space</p>
    <p>half size hash keys (colors)</p>
  </div>
  <div class="page">
    <p>Scaling Down</p>
    <p>CachePhysics, Inc. USENIX ATC '17 7</p>
    <p>refs cache</p>
    <p>8</p>
  </div>
  <div class="page">
    <p>Scaling Down</p>
    <p>CachePhysics, Inc. USENIX ATC '17 8</p>
    <p>refs cache</p>
    <p>32</p>
  </div>
  <div class="page">
    <p>Scaling Down</p>
    <p>CachePhysics, Inc. USENIX ATC '17 9</p>
    <p>refs cache</p>
    <p>128</p>
  </div>
  <div class="page">
    <p>Flexible Scaling</p>
    <p>CachePhysics, Inc. USENIX ATC '17 10</p>
    <p>Sm mini size</p>
    <p>sampling rate R</p>
    <p>Se emulated size</p>
    <p>Sm = R  Se</p>
    <p>Time/space tradeoff  Fixed sampling rate R  Fixed mini size Sm</p>
    <p>Example: Se = 1M  R = 0.005 Sm = 5000  Sm= 1000 R = 0.001</p>
  </div>
  <div class="page">
    <p>Example Mini-Sim MRCs</p>
    <p>CachePhysics, Inc. USENIX ATC 17 11</p>
  </div>
  <div class="page">
    <p>Mini-Sim Accuracy</p>
    <p>CachePhysics, Inc. USENIX ATC '17 12</p>
    <p>137 real-world traces  Storage block traces  CloudPhysics, MSR, FIU  100 cache sizes per trace</p>
    <p>Mean Absolute Error  | exact  approx |  Average over all sizes</p>
  </div>
  <div class="page">
    <p>Mini-Sim Efficiency  Variable costs</p>
    <p>Both space and time scaled down by R  R=0.001  simulation 1000 smaller, 1000 faster</p>
    <p>Fixed costs  Hashing overhead for sampling  Footprint for code, libraries, etc.</p>
    <p>Net improvement  R=0.001  ~ 200 smaller, ~ 10 faster  Closer to 1000 if existing key hash or multiple sims</p>
    <p>CachePhysics, Inc. USENIX ATC '17 13</p>
  </div>
  <div class="page">
    <p>Mini-Sim Cache Tuning  Dynamic multi-model optimization  Simulate candidate configurations online  Periodically apply best to actual cache</p>
    <p>Parameter adaptation experiments  LIRS S stack size, 5 mini-sims with f = 1.1  3  2Q A1out size, 8 mini-sims with Kout = 50%  300%  R = 0.005, epoch = 1M refs</p>
    <p>CachePhysics, Inc. USENIX ATC 17 14</p>
  </div>
  <div class="page">
    <p>LIRS Adaptation Examples</p>
    <p>CachePhysics, Inc. USENIX ATC 17 15</p>
  </div>
  <div class="page">
    <p>CachePhysics, Inc. USENIX ATC 17 16</p>
  </div>
  <div class="page">
    <p>Talus Cliff Removal</p>
    <p>CachePhysics, Inc. USENIX ATC '17 17</p>
    <p>Talus [HPCA 15]  Needs MRC as input  Interpolates convex hull</p>
    <p>Shadow partitions ,   Steer different fractions of refs to each</p>
    <p>Emulate cache sizes on convex hull via hashing</p>
  </div>
  <div class="page">
    <p>Talus for Non-LRU Policies?  Need efficient online MRCs  Support dynamic changes?  Workload and MRC evolve over time  Resize partitions, lazy vs. eager?  Migrate cache entries in wrong partition?</p>
    <p>Not clear how to merge/migrate state CachePhysics, Inc. USENIX ATC 17 18</p>
  </div>
  <div class="page">
    <p>SLIDE: Transparent Cliff Removal  Sharded List with Internal Differential Eviction  Single unified cache, no hard partitions  Defer partitioning decisions until eviction  Avoids resizing, migration, complexity issues</p>
    <p>New SLIDE list abstraction  No changes to ARC, LIRS, 2Q, LRU code  Replaces internal LRU/FIFO building blocks</p>
    <p>CachePhysics, Inc. USENIX ATC 17 19</p>
  </div>
  <div class="page">
    <p>SLIDE List  Augment conventional list  Per-item hash value  Hash threshold determines current partition</p>
    <p>Items totally ordered, no hard partitions  Evict from tail of over-quota partition</p>
    <p>CachePhysics, Inc. USENIX ATC 17 20</p>
  </div>
  <div class="page">
    <p>SLIDE Experiments  Construct MRC online  7 mini-sims {, , , 1, 2, 4, 8}  cache size  R=0.005, smoothed miss ratios</p>
    <p>Update SLIDE settings periodically  Discrete convex hull every epoch (1M refs)  Set new partition targets for SLIDE lists</p>
    <p>CachePhysics, Inc. USENIX ATC 17 21</p>
  </div>
  <div class="page">
    <p>SLIDE: Cliff Reduction</p>
    <p>CachePhysics, Inc. USENIX ATC 17 22</p>
  </div>
  <div class="page">
    <p>SLIDE: Little Impact without Cliffs</p>
    <p>CachePhysics, Inc. USENIX ATC 17 23</p>
  </div>
  <div class="page">
    <p>Conclusions  Mini-sim extremely effective  Robust, general method (ARC, LIRS, 2Q, LRU, OPT, )  Average error &lt; 0.01 with 0.1% sampling</p>
    <p>Can optimize workloads/policies automatically  Dynamic parameter tuning  SLIDE transparent cliff removal</p>
    <p>CachePhysics, Inc. USENIX ATC 17 24</p>
  </div>
</Presentation>
