<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Mohamed Hefeeda 1</p>
    <p>School of Computing Science Simon Fraser University, Canada</p>
    <p>Live P2P Streaming with Scalable Video Coding and Network Coding</p>
    <p>(Joint work with Shabnam Mirshokraie)</p>
  </div>
  <div class="page">
    <p>Motivations</p>
    <p>Wide deployment of P2P streaming systems - PPLive, UUSee, SopCast, CoolStreaming, .</p>
    <p>Users demand better video quality - Higher resolution, frame rate, fidelity</p>
    <p>However, P2P systems face multiple challenges - Limited upload capacity (ADSL, Cable)</p>
    <p>- High churn rate</p>
    <p>- Diverse receivers</p>
    <p>Screen resolutions, bandwidth, CPU capacity</p>
  </div>
  <div class="page">
    <p>Motivations</p>
    <p>To provide better quality, we need to:</p>
    <p>Deploy more resources (seed servers)</p>
    <p>AND/OR</p>
    <p>Efficiently manage current resources - Maximize utilization of peers upload capacity</p>
    <p>- Customize multimedia content for diverse receivers</p>
    <p>- Adapt to network and peer dynamics</p>
    <p>- Our focus in this paper</p>
  </div>
  <div class="page">
    <p>Our Work</p>
    <p>Propose new design for P2P streaming systems</p>
    <p>Employ both:</p>
    <p>Scalable Video Coding AND Network Coding</p>
    <p>- Performance benefits well beyond those achieved by each</p>
    <p>Implementation and quantification of potential gain - Much higher (several dBs) visual quality</p>
    <p>- Smoother streaming rate</p>
    <p>- More streaming capacity</p>
    <p>- Higher robustness</p>
  </div>
  <div class="page">
    <p>Related Works</p>
    <p>Most currently deployed systems use single-layer videos</p>
    <p>Network coding in P2P streaming systems [Wang 07, Feng 08, ] - Improve performance of single-layer videos</p>
    <p>- But limited support for heterogeneous receivers</p>
    <p>Scalable video coding in P2P streaming systems [Lan 07, Cui 03, Rejaie 03, Hefeeda 08,  ] - Better support for heterogeneous receivers</p>
    <p>- But may not fully utilize peers capacity</p>
  </div>
  <div class="page">
    <p>Related Works</p>
    <p>Network coding and scalable video coding [Chenguang 07, Zhao 06] - Assume static tree-based streaming systems</p>
    <p>- Solve integer linear programming to determine #layers for receivers in multicast sessions</p>
    <p>- Our work is for dynamic mesh-based streaming systems the most common in practice</p>
    <p>- And we provide practical validation</p>
  </div>
  <div class="page">
    <p>Brief Background</p>
    <p>Scalable Video Coding (recent H.264/SVC) - Multi-layer streams</p>
    <p>- Temporal, spatial, and quality scalability</p>
    <p>- Low overhead [Schwarz 07 ]</p>
    <p>- Efficient extraction and customization of streams</p>
  </div>
  <div class="page">
    <p>Brief Background</p>
    <p>Network Coding - Increases throughput</p>
    <p>- Reduces buffering delay</p>
    <p>- Improves robustness</p>
    <p>Source and intermediate nodes encode data blocks</p>
    <p>Receivers use coefficients to decode blocks</p>
    <p>Encoding and decoding linear operations over finite fields</p>
    <p>ii</p>
    <p>k</p>
    <p>i bcx .</p>
  </div>
  <div class="page">
    <p>Overview of Proposed System</p>
    <p>Mesh-based P2P streaming system</p>
    <p>Tracker - Matching peers viewing the same video stream</p>
    <p>Multiple dynamic swarms</p>
    <p>Source node (seed server) - Providing additional capacity</p>
    <p>- Distributing network-coded scalable video streams</p>
    <p>Peers - Receiving clients</p>
    <p>- Sharing their upload bandwidth to serve others</p>
  </div>
  <div class="page">
    <p>Peer Software Architecture: Receiver</p>
    <p>Download Scheduler - Compute number of required</p>
    <p>encoded blocks</p>
    <p>Progressive NC Decoder - Gauss-Jordan elimination</p>
    <p>- Multi-threaded</p>
    <p>SVC Layer Manager</p>
    <p>Sharing Buffer</p>
  </div>
  <div class="page">
    <p>Peer Software Architecture: Sender</p>
    <p>Random NC Encoder - Linear operations on blocks of</p>
    <p>each video layer separately</p>
    <p>- Reduces network coding complexity</p>
    <p>- Robustness</p>
    <p>- No need to have centralized knowledge</p>
    <p>Upload Scheduler - Selects receivers (incentives)</p>
  </div>
  <div class="page">
    <p>Prepare video streams before introducing them into the system - Encoding a video stream into multiple layers</p>
    <p>- Equal-length segments</p>
    <p>Network coding operations on individual segments</p>
    <p>- Fixed-size blocks</p>
    <p>Different layers may contain different number of blocks</p>
    <p>Source Node Architecture and Functions</p>
  </div>
  <div class="page">
    <p>Evaluation: Setup</p>
    <p>Testing application to evaluate our implementation</p>
    <p>Scalable Videos</p>
    <p>- Three: Sony Demo, Tokyo Olympics, NBC News</p>
    <p>- 5 scalable layers each</p>
    <p>- Average Y-PSNR from 35.5 to 47.6 dB</p>
    <p>- Average bit rate from 325 to 850 kbps</p>
    <p>- CIF frames, frame rate of 30 fps</p>
    <p>Network coding</p>
    <p>- Random network coding</p>
    <p>- Progressive decoding</p>
    <p>- Fixed block size for all layers</p>
  </div>
  <div class="page">
    <p>Evaluation: Setup</p>
    <p>P2P system</p>
    <p>- Highly-dynamic P2P streaming system</p>
    <p>- 1,000 heterogeneous peers</p>
    <p>- High churn rates</p>
    <p>- Flash crowd scenarios</p>
    <p>- Practical upload/download bandwidth distribution [Liu 08]</p>
  </div>
  <div class="page">
    <p>Evaluation: Setup</p>
    <p>Comparing proposed system (SVC+NC) against - Scalable video coding (SVC)</p>
    <p>- Single layer video streams with network coding (SL+NC)</p>
    <p>- Single layer streams (SL)</p>
    <p>Performance metrics - Average streaming rate</p>
    <p>- Average streaming quality</p>
    <p>- Number of streaming requests served</p>
    <p>- Fraction of late frames</p>
  </div>
  <div class="page">
    <p>Evaluation: Average Streaming Rate</p>
    <p>Less than 18% of peers receive rate of 200 kbps or less,</p>
    <p>50% of peers receive 600+ kbps 16</p>
  </div>
  <div class="page">
    <p>Evaluation: Average Streaming Quality</p>
    <p>More than 5 dB quality improvement</p>
    <p>More stable and smoother quality against SL and SL+NC</p>
  </div>
  <div class="page">
    <p>Evaluation: Number of Served Requests</p>
    <p>More streaming capacity: up to 30% more requests served</p>
  </div>
  <div class="page">
    <p>Evaluation: Fraction of Late Frames</p>
    <p>Almost no peer with high fraction of late frames</p>
    <p>16% of peers with more than 80% of late frames in single layer streaming system</p>
  </div>
  <div class="page">
    <p>Impact of Churn Rate on Video Quality</p>
    <p>Improving the quality as more peers join</p>
    <p>- More throughput, providing more video layers</p>
    <p>- Efficient use of resources of the new peers 20</p>
  </div>
  <div class="page">
    <p>Impact of Flash Crowd Arrivals</p>
    <p>Demand for receiving video data more than available resources - Up to 5 dB improvement</p>
    <p>- Low quality under very high peer arrival rates</p>
    <p>Limited upload</p>
    <p>capacity</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>New system for P2P streaming</p>
    <p>Integration of network coding and scalable video coding - Supports receiver heterogeneity</p>
    <p>- Better utilization of peer upload bandwidth</p>
    <p>- More robust for network and peer dynamics</p>
    <p>Evaluation study in realistic settings - Significant performance gain in</p>
    <p>Visual quality</p>
    <p>Average streaming rate</p>
    <p>Streaming capacity</p>
    <p>Adaptation to high peer dynamics</p>
  </div>
  <div class="page">
    <p>Thank You!</p>
    <p>Questions??</p>
    <p>More info at:</p>
    <p>http://nsl.cs.sfu.ca/</p>
  </div>
  <div class="page">
    <p>References</p>
    <p>[Gkantsidis 05] C. Gkantsidis and P. Rodriguez. Network coding for large scale content distribution. In Proc. of IEEE INFOCOM05, pages 22352245, Miami, FL, March 2005.</p>
    <p>[Wang 07] M. Wang and B. Li. Lava: A reality check of network coding in peerto-peer live streaming. In Proc. Of IEEE INFOCOM07, pages 10821090, Anchorage, AK, May 2007.</p>
    <p>[Feng 08] C. Feng and B. Li. On large-scale peer-to-peer streaming systems with network coding. In Proc. Of ACM Multimedia08, pages 269278, Vancouver, Canada, October 2008.</p>
    <p>[Chenguang 07] X. Chenguang, X. Yinlong, Z. Cheng, W. Ruizhe, and W. Qingshan. On network coding based multirate video streaming in directed networks. In Proc. Of IEEE International Conference on Performance, Computing and Communications (IPCCC07), pages 332339, New Orleans, LA, April 2007.</p>
    <p>[Zhao 06] J. Zhao, F. Yang, Q. Zhang, Z. Zhang, and F. Zhang. Lion: Layered overlay multicast with network coding. IEEE Transactions on Multimedia, 8(5):10211032, October 2006.</p>
    <p>[Nguyen 07] K. Nguyen, T. Nguyen, and S. Cheung. Peer-to-peer streaming with hierarchical network coding. In Proc. of IEEE International Conference on Multimedia and Expo (ICME07), pages 396399, Beijing, China, July 2007.</p>
  </div>
</Presentation>
