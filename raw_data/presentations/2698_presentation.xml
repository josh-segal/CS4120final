<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Robust validation of network designs under uncertain demands and failures</p>
    <p>Yiyang Chang, Sanjay Rao, and Mohit Tawarmalani Purdue University</p>
    <p>USENIX NSDI 2017</p>
  </div>
  <div class="page">
    <p>Validating network design</p>
    <p>Network design today is ad-hoc, and validating design is usually an afterthought  Contrast: Tools for chip and software industry a $10B business [Mckeown, 2012]</p>
    <p>Much progress on verification of network data plane (e.g., reachability, security policy)  HSA, Veriflow, Batfish, NoD, etc.</p>
    <p>Our goal: Validating quantitative network properties  Formal approach to guarantee network performance (e.g., bandwidth, link utilization)</p>
    <p>Under diverse failure/traffic scenarios  Use the formal approach to inform network design</p>
  </div>
  <div class="page">
    <p>Why is network validation hard? (1)</p>
    <p>Scenarios of interest are too many  Exponentially many failure scenarios [Wang et al., Sigcomm 10, Liu et al.,</p>
    <p>Sigcomm 14]  E.g., All possible simultaneous f link failures</p>
    <p>All possible traffic demands  non-enumerable</p>
  </div>
  <div class="page">
    <p>Why is network validation hard? (2)  Adaptation makes the problem intractable</p>
    <p>Networks increasingly agile and flexible in adaptation  E.g., SDNs and NFVs</p>
    <p>Tools exist to bound worst case performance  E.g., robust optimization, and oblivious routing</p>
    <p>[Applegate et al., Sigcomm 03]  Assume networks do not adapt, or consider limited</p>
    <p>forms of adaptation to make problem tractable</p>
    <p>Network adapts: Rerouting, throttling, etc.</p>
    <p>Demand, Failures</p>
    <p>Better performance</p>
  </div>
  <div class="page">
    <p>Our work  General framework for network</p>
    <p>validation  Find the worst performance of</p>
    <p>the network across all scenarios assuming network can adapt in best fashion for each scenario</p>
    <p>Handles intractable problems drawing on cutting-edge optimization technique</p>
    <p>Applies to network synthesis</p>
    <p>Network adapts</p>
    <p>Scenario 1 Demand, Failures</p>
    <p>Metric 1 (m1)</p>
    <p>Network adapts</p>
    <p>Scenario 2 m2</p>
    <p>Network adapts</p>
    <p>Scenario N mN</p>
    <p>Worst performance = max{m1, m2,  mN} Less is better</p>
  </div>
  <div class="page">
    <p>Example: Failure validation</p>
    <p>Uncertainty Set Adaptations Performance metric</p>
    <p>All f or fewer link failures  Flexible rerouting (multicommodity flow)</p>
    <p>Utilization of most congested link</p>
    <p>Given up to f links may simultaneously fail, what is the worst-case utilization of any link across all failure scenarios?</p>
    <p>Problem:</p>
  </div>
  <div class="page">
    <p>Formal formulation of a network validation problem</p>
    <p>max</p>
    <p>x2X min</p>
    <p>y2Y (x) F(x, y)</p>
    <p>Uncertainty Set Adaptations Performance metric Less is better</p>
    <p>Inner problem: For a fixed scenario - Easy to compute online (LP) E.g., multi-commodity flow</p>
    <p>Outer problem: Potentially hard since large number of scenarios</p>
    <p>Example: Validation under failures</p>
    <p>X Set of failures</p>
    <p>Y(x) Feasible routing of demands under given failure</p>
    <p>F(x, y) Utilization of most congested link</p>
  </div>
  <div class="page">
    <p>Wide applicability of framework</p>
    <p>Uncertainty Set Adaptations Performance metric</p>
    <p>Flexible rerouting (multicommodity flow)</p>
    <p>Rerouting constrained to pre-selected tunnels</p>
    <p>Constrain with middlebox traversal requirements</p>
    <p>Utilization of most congested link</p>
    <p>Bandwidth of business critical applications</p>
    <p>All f or fewer link failures</p>
    <p>Shared risk link group</p>
    <p>Weighted averages of historical demands</p>
  </div>
  <div class="page">
    <p>Reformulating the problem max</p>
    <p>x2X min</p>
    <p>y2Y (x) F(x, y)</p>
    <p>max</p>
    <p>,v,x</p>
    <p>F</p>
    <p>LP dualization</p>
  </div>
  <div class="page">
    <p>Failure validation: Formulation</p>
    <p>s.t. vit  vjt  ij 8t, hi, ji 2 E</p>
    <p>max</p>
    <p>v,,x</p>
    <p>X</p>
    <p>t,i6=t d it</p>
    <p>(v it</p>
    <p>v tt</p>
    <p>)</p>
    <p>X</p>
    <p>hi,ji2E</p>
    <p>ijcij(1  x f ij) = 1</p>
    <p>x</p>
    <p>f 2 X</p>
    <p>x</p>
    <p>f ij 2 {0, 1}; ij  0; hi, ji 2 E</p>
  </div>
  <div class="page">
    <p>Failure validation: Formulation</p>
    <p>s.t. vit  vjt  ij 8t, hi, ji 2 E</p>
    <p>max</p>
    <p>v,,x</p>
    <p>X</p>
    <p>t,i6=t d it</p>
    <p>(v it</p>
    <p>v tt</p>
    <p>)</p>
    <p>X</p>
    <p>hi,ji2E</p>
    <p>ijcij(1  x f ij) = 1</p>
    <p>x</p>
    <p>f 2 X</p>
    <p>x</p>
    <p>f ij 2 {0, 1}; ij  0; hi, ji 2 E</p>
    <p>Depends on failure model of interests  E.g. simultaneous f link failures</p>
    <p>X</p>
    <p>i,j</p>
    <p>x</p>
    <p>f ij = f</p>
  </div>
  <div class="page">
    <p>Failure validation: Formulation</p>
    <p>Can be converted to mixed-inter linear program. In general, validation problems could be non-linear.</p>
    <p>s.t. vit  vjt  ij 8t, hi, ji 2 E</p>
    <p>max</p>
    <p>v,,x</p>
    <p>X</p>
    <p>t,i6=t d it</p>
    <p>(v it</p>
    <p>v tt</p>
    <p>)</p>
    <p>X</p>
    <p>hi,ji2E</p>
    <p>ijcij(1  x f ij) = 1</p>
    <p>x</p>
    <p>f 2 X</p>
    <p>x</p>
    <p>f ij 2 {0, 1}; ij  0; hi, ji 2 E</p>
  </div>
  <div class="page">
    <p>Solution approach</p>
    <p>Focus on upper bounds (relaxation)  Intractable problems  hard to solve to optimality  Upper bounds sufficient for validation use</p>
    <p>Goal: Develop a general approach  Applicable to diverse validation problems (e.g., validating failures, demands)  Yet, amenable to problem-specific structure</p>
    <p>Use cutting-edge techniques from non-linear optimization</p>
  </div>
  <div class="page">
    <p>Tractable relaxations: RLT</p>
    <p>RLT relaxations: general approach to relax non-convex problems into tractable LPs  Family of relaxations  Higher levels of hierarchy</p>
    <p>Converge to optimal value of the non-convex problem  Incur higher complexity</p>
    <p>For scalability, focus on the first level</p>
  </div>
  <div class="page">
    <p>RLT relaxation: example</p>
    <p>Relaxation steps: 1. Multiply constraints with each other 2. Replace products of variables xy, x2, y2 by new variables</p>
    <p>min x,y</p>
    <p>xy  x + y x  2  0; y  3  0 3  x  0; 4  y  0</p>
    <p>xy  2y  3x + 6  0</p>
    <p>z</p>
    <p>z  x + y</p>
  </div>
  <div class="page">
    <p>Our results on effectiveness of RLT  Compare RLT with two theoretical benchmarks</p>
    <p>Both bound worst case performance across failures/demands, but with limited network adaptation</p>
    <p>Oblivious routing [Applegate, et al., Sigcomm 03; Wang, et al., Sigcomm 06, etc.]  Affine adaptation: a generalization of oblivious routing, studied in robust</p>
    <p>optimization</p>
    <p>Our results show  First-level RLT dominate oblivious/affine adaptations  Better results possible by exploiting problem-specific structure combined with RLT</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Real topologies  Abilene, GEANT, and ANS (from The Internet Topology Zoo)</p>
    <p>Real and synthetic traffic matrices  Real trace: 6-month end-to-end demand on Abilene  Synthetic: Gravity model</p>
  </div>
  <div class="page">
    <p>Results: Effectiveness of RLT  Compare maximum link</p>
    <p>utilization (MLU)  The optimal IP scheme vs. our</p>
    <p>RLT relaxation LP</p>
    <p>RLT matches optimal in all our experiments</p>
    <p>Abilene Network  3 link failures</p>
  </div>
  <div class="page">
    <p>Results: Effectiveness of RLT  Compare with R3 [Wang et al., Sigcomm 10]</p>
    <p>Determines if MLU &lt; 1 under f failures  Gives a valid bound only when MLU &lt; 1  Based on oblivious approach</p>
    <p>Our result  First-level RLT dominates R3 whenever R3</p>
    <p>provides a valid bound</p>
    <p>Other advantages of our approach  Useful to detect bad failure scenarios, and</p>
    <p>the amount of exceeded link capacity  Generalizes to other validation problems</p>
    <p>Abilene Network  3 link failures</p>
  </div>
  <div class="page">
    <p>Using framework to detect bad failures</p>
    <p>Framework allows finding failures that impact the network the most  Random search not efficient  Only 0.05% of 3-failure scenarios</p>
    <p>are bad (MLU &gt; 1)</p>
    <p>Emulate to understand latency behavior</p>
    <p>Emulated Abilene traffic matrix with Mininet, and ONOS controller</p>
    <p>Bad scenariosRandom scenarios</p>
  </div>
  <div class="page">
    <p>Results: running time</p>
    <p>RLT relaxation LP vs. optimal IP (IP run for 2 hours)</p>
    <p>On scaled GEANT network (32 nodes, 1000 edges), 3 link failures:  RLT finished in 608 seconds, whereas IP finished in 3890 seconds  Only 60% of the IP instances completed in 2 hours</p>
    <p>Our RLT relaxation LP doesnt degrade with larger number of failures</p>
  </div>
  <div class="page">
    <p>Example: Tunnel selection validation</p>
    <p>Uncertainty Set Adaptations Performance metric</p>
    <p>Flexibly rerouting (Multicommodity flow)</p>
    <p>Rerouting constrained to pre-selected tunnels</p>
    <p>Constrain with middlebox traversal requirements</p>
    <p>Utilization of most congested link</p>
    <p>Bandwidth of business critical applications</p>
    <p>All f or fewer link failures</p>
    <p>Shared risk link group</p>
    <p>Weighted averages of historical demands</p>
    <p>For a given choice of tunnels, are utilizations of all links across all traffic demands of interest within acceptable limits?</p>
    <p>Problem:</p>
  </div>
  <div class="page">
    <p>Tunnel selection: Results</p>
    <p>Predicted demand: weighted averages of historical matrices  Validation problem is an LP  On Abilene: First-level RLT achieves optimal MLU</p>
    <p>Widely-used tunnel selection heuristics may perform poorly  E.g., K-shortest (SWAN, Sigcomm 13), Shortest-Disjoint heuristics  More robust tunnel selection heuristic performs much better</p>
  </div>
  <div class="page">
    <p>Synthesizing valid designs  Validation is a stepping stone for synthesis</p>
    <p>Example: Optimal Capacity Augmentation  Incrementally add capacity to existing links  Minimizing cost of adding capacity  Ensure resulting network can handle all failure scenarios</p>
    <p>One can use our framework for synthesis in 2 ways: 1) Get conservative solution, with a single LP 2) Iterative approach, which gives a lower bound on cost at each step</p>
  </div>
  <div class="page">
    <p>Capacity augmentation: Abilene Step Counter examples MLU</p>
    <p>Links Augmented</p>
    <p>Total new capacity (Gbps)</p>
    <p>Validate if MLU &lt;= 1.  If not, run augmentation LP</p>
    <p>with counter examples</p>
  </div>
  <div class="page">
    <p>Capacity augmentation: Abilene</p>
    <p>Step Counter examples MLU Links</p>
    <p>Augmented</p>
    <p>Total new capacity (Gbps)</p>
    <p>Validate if MLU &lt;= 1.  If not, run augmentation LP</p>
    <p>with counter examples</p>
  </div>
  <div class="page">
    <p>Capacity augmentation: Abilene</p>
    <p>Step Counter examples MLU Links</p>
    <p>Augmented</p>
    <p>Total new capacity (Gbps)</p>
    <p>Validate if MLU &lt;= 1.  If not, run augmentation LP</p>
    <p>with counter examples</p>
  </div>
  <div class="page">
    <p>Capacity augmentation: Abilene</p>
    <p>Step Counter examples MLU Links</p>
    <p>Augmented</p>
    <p>Total new capacity (Gbps)</p>
    <p>Validate if MLU &lt;= 1.  If not, run augmentation LP</p>
    <p>with counter examples</p>
  </div>
  <div class="page">
    <p>Capacity augmentation: Abilene</p>
    <p>Step Counter examples MLU Links</p>
    <p>Augmented</p>
    <p>Total new capacity (Gbps)</p>
    <p>Validate if MLU &lt;= 1.  If not, run augmentation LP</p>
    <p>with counter examples</p>
  </div>
  <div class="page">
    <p>Capacity augmentation: Abilene</p>
    <p>Step Counter examples MLU Links</p>
    <p>Augmented</p>
    <p>Total new capacity (Gbps)</p>
    <p>Validate if MLU &lt;= 1.  If not, run augmentation LP</p>
    <p>with counter examples</p>
  </div>
  <div class="page">
    <p>Capacity augmentation: Abilene</p>
    <p>Step Counter examples MLU Links</p>
    <p>Augmented</p>
    <p>Total new capacity (Gbps)</p>
    <p>Validate if MLU &lt;= 1.  If not, run augmentation LP</p>
    <p>with counter examples</p>
  </div>
  <div class="page">
    <p>Capacity augmentation: Abilene</p>
    <p>Step Counter examples MLU Links</p>
    <p>Augmented</p>
    <p>Total new capacity (Gbps)</p>
    <p>Validate if MLU &lt;= 1.  If not, run augmentation LP</p>
    <p>with counter examples</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Early effort at formally verifying quantitative network properties under uncertainty</p>
    <p>Generic framework for a wide class of network validation problems</p>
    <p>Modeling adaptivity results in intractable problems  RLT relaxations promising  Tighter bounds than oblivious  Exact in multiple failures case and predicted demand case</p>
    <p>Validation framework enables network synthesis</p>
  </div>
  <div class="page">
    <p>Thanks! Questions?</p>
  </div>
</Presentation>
