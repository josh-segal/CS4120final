<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Dissent in Numbers: Making Strong Anonymity Scale</p>
    <p>David Wolinsky1, Henry Corrigan-Gibbs1, Bryan Ford1, and Aaron Johnson2 1Yale University, 2US Naval Research Laboratory</p>
  </div>
  <div class="page">
    <p>Motivation  Strength in Numbers</p>
    <p>Meet tonight at 7 PM in the park for</p>
    <p>pizza and beer!</p>
    <p>Bob, youre going be spending some time</p>
    <p>in the slammer!</p>
  </div>
  <div class="page">
    <p>All of you going to be spending time in the slammer!!!</p>
    <p>Meet tonight at 7 PM in the park for</p>
    <p>pizza and beer!</p>
    <p>Motivation  Strength in Numbers</p>
  </div>
  <div class="page">
    <p>Motivation  Strength in Numbers</p>
  </div>
  <div class="page">
    <p>Meet tonight at 7 PM in the park for</p>
    <p>pizza and beer!</p>
    <p>This party is over go home!!!</p>
    <p>Motivation  Strength in Numbers</p>
    <p>Ugh, we cant put them all</p>
    <p>in Jail</p>
  </div>
  <div class="page">
    <p>Making Strong Anonymity Scale?</p>
    <p>Challenge  tradeoff between scale and strength in anonymity systems favoring scale</p>
    <p>Goals</p>
    <p>Strong anonymity (timing analysis resistant)</p>
    <p>Scalability (100s to 1,000s of active participants)</p>
    <p>Churn tolerant (unannounced member departures)</p>
    <p>Accountability</p>
    <p>Achieved in Dissent!</p>
  </div>
  <div class="page">
    <p>Organization  Motivation</p>
    <p>Existing Approaches</p>
    <p>Dissent  Strong, Scalable Anonymity</p>
    <p>Computational efficiency</p>
    <p>Communication efficiency</p>
    <p>Churn tolerant</p>
    <p>Anonymity</p>
    <p>Accountability</p>
    <p>Evaluation</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Organization  Motivation</p>
    <p>Existing Approaches</p>
    <p>Dissent  Strong, Scalable Anonymity</p>
    <p>Computational efficiency</p>
    <p>Communication efficiency</p>
    <p>Churn tolerant</p>
    <p>Anonymity</p>
    <p>Accountability</p>
    <p>Evaluation</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Bob</p>
    <p>Tor  The Onion Router Server00</p>
    <p>Server10</p>
    <p>Server20</p>
    <p>Server01</p>
    <p>Server11</p>
    <p>Server21</p>
    <p>Server02</p>
    <p>Server12</p>
    <p>Server22</p>
    <p>Meet tonight at 7 PM in the park for</p>
    <p>pizza and beer!</p>
    <p>Tor is scalable, supports more than 400,000 clients</p>
    <p>with 1,000 clients per server</p>
    <p>Anonymizing Relays</p>
    <p>Public</p>
    <p>Server</p>
  </div>
  <div class="page">
    <p>Bob</p>
    <p>Tor  The Onion Router Server00</p>
    <p>Server10</p>
    <p>Server20</p>
    <p>Server01</p>
    <p>Server11</p>
    <p>Server21</p>
    <p>Server02</p>
    <p>Server12</p>
    <p>Server22</p>
    <p>Meet tonight at 7 PM in the park for</p>
    <p>pizza and beer!</p>
    <p>Anonymizing Relays</p>
    <p>Public</p>
    <p>Server</p>
    <p>time</p>
    <p>time</p>
    <p>Aha! Got you!</p>
    <p>Not timing analysis resistant!</p>
    <p>State-run ISP</p>
  </div>
  <div class="page">
    <p>DC-net</p>
    <p>Bob Alice</p>
    <p>Carol</p>
    <p>Traffic analysis resistant since all member transmit</p>
    <p>equal length messages</p>
    <p>Cleartext message</p>
  </div>
  <div class="page">
    <p>DC-net</p>
    <p>Bob Alice</p>
    <p>Carol</p>
    <p>Traffic analysis resistant since all member transmit</p>
    <p>equal length messages</p>
    <p>Cleartext message</p>
  </div>
  <div class="page">
    <p>Practical Considerations Mix-nets Tor DC-nets</p>
    <p>Strong anonymity</p>
    <p>Scalability  1</p>
    <p>Churn tolerant</p>
    <p>Accountability 2</p>
    <p>Mix-nets / Shuffles  Chaum, Neff, Wikstrom</p>
    <p>Onion Routing  Tor and I2P</p>
    <p>DC-nets  1Herbivore and 2Dissent v1  Herbivore supported many concurrent users but</p>
    <p>distributed amongst many parallel DC-nets thus lacks the Strength in Numbers or large anonymity set sizes</p>
  </div>
  <div class="page">
    <p>Organization  Motivation</p>
    <p>Existing Approaches</p>
    <p>Dissent  Strong, Scalable Anonymity</p>
    <p>Computational efficiency</p>
    <p>Communication efficiency</p>
    <p>Churn tolerant</p>
    <p>Anonymity</p>
    <p>Accountability</p>
    <p>Evaluation</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Key Insight</p>
    <p>Crystal</p>
    <p>Anna Ben</p>
    <p>Amy</p>
    <p>Bob</p>
    <p>Alice</p>
    <p>Carol</p>
    <p>Brett</p>
  </div>
  <div class="page">
    <p>Key Insight</p>
    <p>Alice Carol</p>
    <p>Server2</p>
    <p>Crystal</p>
    <p>Anna</p>
    <p>Ben</p>
    <p>Alex</p>
    <p>Barry</p>
    <p>Amy</p>
    <p>Christine</p>
    <p>Brett</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>Bob</p>
    <p>Use DC-net style anonymity within the Mix-net topology to</p>
    <p>obtain scalability!</p>
  </div>
  <div class="page">
    <p>Making Strong Anonymity Scale!</p>
    <p>Challenge  tradeoff between scale and strength in anonymity systems favoring scale</p>
    <p>Dissents solution</p>
    <p>Improving Computation Efficiency</p>
    <p>Improving Communication Efficiency</p>
    <p>Handling Churn</p>
    <p>Identifying Disruptions</p>
    <p>Maintaining Strong Anonymity</p>
  </div>
  <div class="page">
    <p>Improving Computational</p>
    <p>Efficiency</p>
  </div>
  <div class="page">
    <p>Alice</p>
    <p>Amy</p>
    <p>Carol</p>
    <p>Bob</p>
    <p>Anna</p>
    <p>Ben</p>
    <p>Crystal</p>
    <p>Computational Overhead</p>
    <p>Crystal</p>
    <p>Anna Ben</p>
    <p>Amy</p>
    <p>Bob</p>
    <p>Alice</p>
    <p>Carol</p>
    <p>Brett</p>
    <p>Computation overhead due to</p>
    <p>O(N2) secret shares</p>
  </div>
  <div class="page">
    <p>Alice</p>
    <p>Amy</p>
    <p>Carol</p>
    <p>Bob</p>
    <p>Anna</p>
    <p>Ben</p>
    <p>Crystal</p>
    <p>Computational Overhead</p>
    <p>Crystal</p>
    <p>Anna Ben</p>
    <p>Amy</p>
    <p>Bob</p>
    <p>Alice</p>
    <p>Carol</p>
    <p>Brett</p>
    <p>Cleartext</p>
    <p>Computation overhead due to</p>
    <p>O(N2) secret shares</p>
    <p>Ciphertext</p>
    <p>N = 100, 4950 shared secrets, 9900 RNG operations</p>
    <p>Server2</p>
    <p>Server1</p>
    <p>Server0</p>
  </div>
  <div class="page">
    <p>Computational Improvement</p>
    <p>Alice Carol</p>
    <p>Server2</p>
    <p>Crystal</p>
    <p>Anna</p>
    <p>Ben</p>
    <p>Alex Amy</p>
    <p>Christine</p>
    <p>Brett</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>Bob</p>
    <p>Each server has N secrets</p>
    <p>Each client has M secrets</p>
    <p>O(M*N) shared secrets with M &lt;&lt; N</p>
    <p>N = 100 and M = 5, 500 shared secrets,</p>
    <p>RNG reduction: 1000 &lt;&lt; 9900</p>
    <p>With M servers and N</p>
    <p>clients</p>
  </div>
  <div class="page">
    <p>Improving Communication</p>
    <p>Efficiency</p>
  </div>
  <div class="page">
    <p>Amy</p>
    <p>Carol</p>
    <p>Brett</p>
    <p>Bob</p>
    <p>Anna</p>
    <p>Ben</p>
    <p>Crystal</p>
    <p>Bandwidth Overhead</p>
    <p>Crystal</p>
    <p>Anna Ben</p>
    <p>Amy</p>
    <p>Bob</p>
    <p>Alice</p>
    <p>Carol</p>
    <p>Brett Bandwidth overhead</p>
    <p>due to O(N2) communication</p>
    <p>Computation overhead due to</p>
    <p>O(N2) secret shares</p>
    <p>Alice</p>
    <p>Cleartext</p>
    <p>N = 100, Ciphertexts exchanged in</p>
    <p>DC-nets: 9900</p>
  </div>
  <div class="page">
    <p>Bandwidth Efficiency</p>
    <p>Alice Carol</p>
    <p>Server2</p>
    <p>Crystal</p>
    <p>Anna</p>
    <p>Ben</p>
    <p>Alex</p>
    <p>Barry</p>
    <p>Amy</p>
    <p>Christine</p>
    <p>Brett</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>Bob</p>
    <p>We can construct a DC-net aware multicast tree!</p>
    <p>Earlier DC-nets had O(N2) communication cost</p>
    <p>Clients submit their ciphertext upstream to</p>
    <p>one server</p>
    <p>Carol</p>
    <p>Ben</p>
    <p>Barry</p>
    <p>Alice</p>
    <p>Amy</p>
    <p>Crystal</p>
    <p>Alex</p>
    <p>Server1</p>
    <p>Christine</p>
    <p>Bob</p>
    <p>Brett</p>
    <p>Anna</p>
    <p>Server2</p>
    <p>Server0</p>
    <p>Server0</p>
    <p>Server1 Server2</p>
  </div>
  <div class="page">
    <p>Bandwidth Efficiency</p>
    <p>Alice Carol</p>
    <p>Server2</p>
    <p>Crystal</p>
    <p>Anna</p>
    <p>Ben</p>
    <p>Alex</p>
    <p>Barry</p>
    <p>Amy</p>
    <p>Christine</p>
    <p>Brett</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>Bob</p>
    <p>We can construct a DC-net aware multicast tree!</p>
    <p>Earlier DC-nets had O(N2) communication cost</p>
    <p>Clients submit their ciphertext upstream to</p>
    <p>one server</p>
    <p>Servers XOR these messages together and share with each other</p>
    <p>Servers XOR these messages to compute the</p>
    <p>cleartext and distribute it to their downstream clients</p>
    <p>N = 100 and M = 5 Ciphertexts exchanged in</p>
    <p>DC-nets: 9900, Dissent: 205</p>
    <p>Server0</p>
    <p>Server1</p>
    <p>Server2</p>
    <p>Cleartext</p>
    <p>Server0</p>
    <p>Server1</p>
    <p>Server2</p>
    <p>Cleartext</p>
    <p>Server0</p>
    <p>Server1</p>
    <p>Server2</p>
    <p>Cleartext</p>
  </div>
  <div class="page">
    <p>Creating Churn Tolerance</p>
  </div>
  <div class="page">
    <p>Amy</p>
    <p>Carol</p>
    <p>Brett</p>
    <p>Bob</p>
    <p>Anna</p>
    <p>Ben</p>
    <p>Crystal</p>
    <p>Churn Intolerance</p>
    <p>Bandwidth overhead due to O(N2)</p>
    <p>communication</p>
    <p>Computation overhead due to</p>
    <p>O(N2) secret shares</p>
    <p>Garbage</p>
    <p>Alice</p>
    <p>What if Alice left without transferring?</p>
    <p>Crystal</p>
    <p>Anna Ben</p>
    <p>Amy</p>
    <p>Bob</p>
    <p>Alice</p>
    <p>Carol</p>
    <p>Brett</p>
    <p>The resulting cleartext is garbage due to the</p>
    <p>dependency on Alices secret shares</p>
  </div>
  <div class="page">
    <p>Tolerating Churn</p>
    <p>Alice Carol</p>
    <p>Server2</p>
    <p>Crystal</p>
    <p>Anna</p>
    <p>Ben</p>
    <p>Alex</p>
    <p>Barry</p>
    <p>Amy</p>
    <p>Christine</p>
    <p>Brett</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>Bob</p>
    <p>Server1 will timeout on Alex</p>
    <p>The protocol continues uninterrupted, since the</p>
    <p>servers have yet to compute their ciphertext</p>
  </div>
  <div class="page">
    <p>Handling Disruptions via Accountability</p>
  </div>
  <div class="page">
    <p>DC-net</p>
    <p>Bob Alice</p>
    <p>Carol</p>
    <p>Easily disrupted</p>
  </div>
  <div class="page">
    <p>DC-net  Disruptions</p>
    <p>Bob Alice</p>
    <p>Carol</p>
    <p>Easily disrupted 1</p>
    <p>x</p>
    <p>How can we prove Bob transmitted the wrong</p>
    <p>ciphertext without losing anonymity?</p>
  </div>
  <div class="page">
    <p>Scheduling</p>
    <p>KeyAlice</p>
    <p>KeyBob</p>
    <p>KeyCarol</p>
    <p>Shuffle</p>
    <p>KeyCarol</p>
    <p>KeyAlice</p>
    <p>KeyBob</p>
    <p>DC-net</p>
    <p>SlotCarol SlotBob SlotAlice</p>
    <p>Alice Bob Carol</p>
    <p>Anonymizing shuffle produces random permutation and</p>
    <p>hence the schedule</p>
    <p>How do many members share the DC-net without</p>
    <p>disrupting each other?</p>
    <p>Create a transmission</p>
    <p>schedule!</p>
  </div>
  <div class="page">
    <p>DC-net</p>
    <p>Bob Alice</p>
    <p>Carol</p>
    <p>Integrity check (parity bit)</p>
    <p>x</p>
    <p>Integrity check failed!</p>
  </div>
  <div class="page">
    <p>DC-net</p>
    <p>Bob Alice</p>
    <p>Carol</p>
    <p>x</p>
    <p>To determine the disruptor Alice needs to anonymously specify a bit that the disruptor flipped from 0 -&gt; 1</p>
  </div>
  <div class="page">
    <p>Safely Deanonymize a Bit</p>
    <p>{Bit1}Alice</p>
    <p>Shuffle</p>
    <p>{Bit1}Alice</p>
    <p>Alice Bob Carol</p>
  </div>
  <div class="page">
    <p>DC-net</p>
    <p>Bob Alice</p>
    <p>Carol</p>
    <p>In practice, this is a bit more complicated though the details are in the paper.</p>
  </div>
  <div class="page">
    <p>DC-net</p>
    <p>Bob Alice</p>
    <p>Carol</p>
    <p>If Carol reveals the shared secret, Alice can confirm that Bob disrupted the</p>
    <p>previous round</p>
    <p>In practice, this is a bit more complicated though the details are in the paper.</p>
  </div>
  <div class="page">
    <p>Progress!  We have gained</p>
    <p>Improvements in computation and communication</p>
    <p>Ability to tolerate churn</p>
    <p>Identify disruptors</p>
    <p>How does this impact strong anonymity?</p>
  </div>
  <div class="page">
    <p>DC-net  Anonymity Set Anonymity set size: 8 (Honest participants) Anonymity set size: 4 (Honest participants) Crystal</p>
    <p>Anna Ben</p>
    <p>Amy</p>
    <p>Bob</p>
    <p>Alice</p>
    <p>Carol</p>
    <p>Brett</p>
  </div>
  <div class="page">
    <p>Dissent retains this feature</p>
  </div>
  <div class="page">
    <p>Anna</p>
    <p>Dissent  Anonymity Set</p>
    <p>Alice Carol</p>
    <p>Server2</p>
    <p>Crystal</p>
    <p>Ben</p>
    <p>Alex</p>
    <p>Barry</p>
    <p>Amy</p>
    <p>Christine</p>
    <p>Brett</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>Bob</p>
    <p>Anonymity set size: 11 (Honest participants)</p>
    <p>Secret sharing graph prevents the clients</p>
    <p>upstream server from deanonymizing it</p>
    <p>Anonymity set remains equal as long as there</p>
    <p>is 1 honest server</p>
    <p>Anonymity set size: 7 (Honest participants)</p>
  </div>
  <div class="page">
    <p>Organization  Motivation</p>
    <p>Existing Approaches</p>
    <p>Dissent  Strong, Scalable Anonymity</p>
    <p>Computational efficiency</p>
    <p>Communication efficiency</p>
    <p>Churn resistance</p>
    <p>Anonymity</p>
    <p>Accountability</p>
    <p>Evaluation</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Dissent  Prototype  Written in C++</p>
    <p>Qt from networking, serialization, and events processing</p>
    <p>Crypto++ as the crypto library</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Evaluated only up to 40 members</p>
    <p>Dissent CCS10</p>
    <p>Herbivore TR03</p>
  </div>
  <div class="page">
    <p>Scaling to Thousands of Clients</p>
    <p>Bandwidth limitations</p>
    <p>CPU Overheads</p>
    <p>Latency limited 1,000 clients</p>
    <p>~1 second &gt; 5,000 concurrent</p>
    <p>clients!!</p>
  </div>
  <div class="page">
    <p>CPU Time</p>
  </div>
  <div class="page">
    <p>Comparison to Shuffles</p>
    <p>Dissent keeps up!</p>
    <p>Verifiable shuffles do not</p>
  </div>
  <div class="page">
    <p>Churn Resilience</p>
    <p>Nearly 99% complete in less than 1 second</p>
    <p>Nearly 50% complete in less than 400 ms</p>
  </div>
  <div class="page">
    <p>Protocol Breakdown</p>
    <p>Fast DC-net</p>
    <p>Slow Key Shuffle</p>
    <p>Really slow blame shuffle</p>
    <p>Efficient disruption</p>
    <p>analysis</p>
  </div>
  <div class="page">
    <p>Organization  Motivation</p>
    <p>Existing Approaches</p>
    <p>Dissent  Strong, Scalable Anonymity</p>
    <p>Computational efficiency</p>
    <p>Communication efficiency</p>
    <p>Churn resistance</p>
    <p>Anonymity</p>
    <p>Accountability</p>
    <p>Evaluation</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Key Take Aways  We can construct strong and scalable anonymous</p>
    <p>communication systems</p>
    <p>O(N2) communication cost to O(N)</p>
    <p>Churn tolerance</p>
    <p>Provides an effective means to identify disruptors</p>
    <p>Two orders of magnitude larger anonymity sets than previous DC-net approaches</p>
    <p>Maintains strong anonymity properties from DC-nets</p>
  </div>
  <div class="page">
    <p>Future Work  Further bandwidth and computation optimizations</p>
    <p>Slot length scheduling policies</p>
    <p>Better ways to anonymously distribute blame</p>
    <p>Handling long term intersection attacks</p>
    <p>Formal security analysis</p>
    <p>Making available for real applications and real users</p>
  </div>
  <div class="page">
    <p>Finished!</p>
    <p>Thanks, questions?</p>
    <p>Dissent  Strong, scalable accountable anonymity</p>
    <p>Find out more at http://dedis.cs.yale.edu/2010/anon/</p>
    <p>Well be at the poster session tonight!</p>
  </div>
  <div class="page">
    <p>Extra slides</p>
  </div>
  <div class="page">
    <p>Evaluation Topology</p>
    <p>Alice</p>
    <p>Carol</p>
    <p>Server2</p>
    <p>Crystal</p>
    <p>Anna</p>
    <p>Alex</p>
    <p>Barry</p>
    <p>Amy</p>
    <p>Christine</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>Bob</p>
    <p>with 50 msec delay</p>
    <p>Servers might be run within a single cloud but owned by</p>
    <p>different anonymity providers</p>
  </div>
  <div class="page">
    <p>Scaling to Thousands of Clients</p>
    <p>Bandwidth limitations</p>
    <p>CPU Overheads</p>
  </div>
  <div class="page">
    <p>Pure Mix-Nets / Shuffles</p>
    <p>DataAlice</p>
    <p>DataBob</p>
    <p>DataCarol</p>
    <p>Alice</p>
    <p>Bob</p>
    <p>Carol</p>
    <p>Server0</p>
    <p>Server1</p>
    <p>Server2</p>
    <p>DataAlice</p>
    <p>DataBob</p>
    <p>DataCarol</p>
    <p>DataBob</p>
    <p>DataCarol</p>
    <p>DataAlice</p>
    <p>DataBob</p>
    <p>DataAlice</p>
    <p>DataCarol</p>
    <p>DataBob</p>
    <p>DataCarol</p>
    <p>DataAlice</p>
    <p>DataBob</p>
    <p>DataAlice</p>
    <p>DataCarol</p>
    <p>DataAlice DataCarol DataBob</p>
    <p>Each server performs in serial expensive</p>
    <p>decryption operations</p>
    <p>Wait until sufficient clients have submitted</p>
  </div>
  <div class="page">
    <p>Dissent</p>
    <p>Alice Carol</p>
    <p>Server2</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>Bob</p>
    <p>Clients connect to a single</p>
    <p>upstream server</p>
    <p>Servers connect with each other</p>
  </div>
  <div class="page">
    <p>Dissent</p>
    <p>Alice Carol</p>
    <p>Server2</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>Bob</p>
    <p>Clients have a shared secret</p>
    <p>with each server</p>
    <p>Diffie-Hellman public keys exchanged</p>
    <p>during registration S</p>
    <p>e cr</p>
    <p>e t A</p>
  </div>
  <div class="page">
    <p>Dissent</p>
    <p>Alice</p>
    <p>Server2</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>S e</p>
    <p>cr e</p>
    <p>t A 0</p>
    <p>CleartextA = blame, nonce, next slot length, msg, hash CiphertextA0 = RNG(SecretA0, length) CiphertextA = CiphertextA0 XOR CiphertextA1 XOR CiphertextA2 XOR (0, , 0, CleartextA, 0, , 0)</p>
  </div>
  <div class="page">
    <p>Dissent</p>
    <p>Alice</p>
    <p>Server2</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>C ip</p>
    <p>h e</p>
    <p>rt e</p>
    <p>xt A</p>
    <p>CleartextA = blame, nonce, next slot length, msg, hash CiphertextA0 = RNG(SecretA0, length) CiphertextA = CiphertextA0 XOR CiphertextA1 XOR CiphertextA2 XOR (0, , 0, CleartextA, 0, , 0)</p>
  </div>
  <div class="page">
    <p>Dissent</p>
    <p>Alice Carol</p>
    <p>Server2</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>Bob</p>
    <p>C ip</p>
    <p>h e</p>
    <p>rt e</p>
    <p>xt A</p>
    <p>C ip</p>
    <p>h e</p>
    <p>rt e</p>
    <p>xt C</p>
    <p>C ip</p>
    <p>h e</p>
    <p>rt e</p>
    <p>xt B</p>
  </div>
  <div class="page">
    <p>Dissent</p>
    <p>Server2</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>Client list exchange</p>
    <p>[Alice]</p>
    <p>[Bob]</p>
  </div>
  <div class="page">
    <p>Dissent</p>
    <p>Server2</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>Client list exchange</p>
    <p>Commit0</p>
    <p>Commit2</p>
    <p>Ciphertext evaluation</p>
    <p>Server0 knows that Alice, Bob, and Carol submitted: Ciphertext0 = CiphertextA XOR CiphertextA0 XOR CiphertextB0 XOR CiphertextC0</p>
    <p>Ciphertext commit</p>
    <p>Commit0 = Hash(Ciphertext0)</p>
  </div>
  <div class="page">
    <p>Dissent</p>
    <p>Server2</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>Client list exchange</p>
    <p>Ciphertext0</p>
    <p>Ciphertext2</p>
    <p>Ciphertext evaluation</p>
    <p>Server0 knows that Alice, Bob, and Carol submitted: Ciphertext0 = CiphertextA XOR CiphertextA0 XOR CiphertextB0 XOR CiphertextC0</p>
    <p>Ciphertext commit</p>
    <p>Commit0 = Hash(Ciphertext0)</p>
    <p>Ciphertext exchange</p>
  </div>
  <div class="page">
    <p>Dissent</p>
    <p>Server2</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>Client list exchange</p>
    <p>Signature0</p>
    <p>Signature2</p>
    <p>Ciphertext evaluation</p>
    <p>Server0 knows that Alice, Bob, and Carol submitted: Ciphertext0 = CiphertextA XOR CiphertextA0 XOR CiphertextB0 XOR CiphertextC0</p>
    <p>Ciphertext commit</p>
    <p>Commit0 = Hash(Ciphertext0)</p>
    <p>Ciphertext exchange</p>
    <p>Cleartext = Ciphertext0 XOR Ciphertext1 XOR Ciphertext2</p>
    <p>Signature0 = {Cleartext}Key0</p>
    <p>Cleartext evaluation</p>
    <p>Cleartext commit</p>
  </div>
  <div class="page">
    <p>Dissent</p>
    <p>Alice Carol</p>
    <p>Server2</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>Bob</p>
    <p>C le</p>
    <p>a rt</p>
    <p>e xt</p>
    <p>C le</p>
    <p>a rt</p>
    <p>e xt</p>
    <p>C le</p>
    <p>a rt</p>
    <p>e xt</p>
    <p>Cleartext evaluation</p>
    <p>Cleartext commit</p>
    <p>Client list exchange</p>
    <p>Ciphertext evaluation</p>
    <p>Ciphertext commit</p>
    <p>Ciphertext exchange</p>
    <p>Cleartext distribution</p>
  </div>
  <div class="page">
    <p>Dissent  Blame</p>
    <p>Alice</p>
    <p>Server2</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>CleartextA = blame, nonce, next slot length, msg, hash CiphertextA0 = RNG(SecretA0, length) CiphertextA = CiphertextA0 XOR CiphertextA1 XOR CiphertextA2 XOR (0, , 0, CleartextA, 0, , 0)</p>
  </div>
  <div class="page">
    <p>Identifying Disruptors</p>
  </div>
  <div class="page">
    <p>Dissent  Blame</p>
    <p>Alice</p>
    <p>Server2</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>C ip</p>
    <p>h e</p>
    <p>rt e</p>
    <p>xt A</p>
    <p>CleartextA = blame, nonce, next slot length, msg, hash CiphertextA0 = RNG(SecretA0, length) CiphertextA = CiphertextA0 XOR CiphertextA1 XOR CiphertextA2 XOR (0, , 0, CleartextA, 0, , 0)</p>
  </div>
  <div class="page">
    <p>Dissent</p>
    <p>Alice Carol</p>
    <p>Server2</p>
    <p>Server1</p>
    <p>Server0</p>
    <p>Bob</p>
    <p>C le</p>
    <p>a rt</p>
    <p>e xt</p>
    <p>C le</p>
    <p>a rt</p>
    <p>e xt</p>
    <p>C le</p>
    <p>a rt</p>
    <p>e xt</p>
    <p>Round will complete as normal, but everyone will see the blame flag set, resulting in a blame shuffle</p>
    <p>In the blame shuffle, the slot owner will specify a bit to deanonymize which will reveal the offending client / server</p>
    <p>The message in the shuffle is signed with the slot owners anonymous meaning it is safe to deanonymize</p>
  </div>
  <div class="page">
    <p>Related Work  Herbivore</p>
    <p>With 40 members, communication delays</p>
    <p>between .6 and 1.2 seconds</p>
    <p>Time between messages</p>
  </div>
  <div class="page">
    <p>Related Work  Earlier Dissent</p>
    <p>With 44 members, communication delays for the DC-net were 2 minutes</p>
    <p>Time to transfer 1 MB</p>
  </div>
  <div class="page">
    <p>Future Work in Dissent  Disruption resistance is online, requires additional</p>
    <p>steps after the protocol has completed</p>
    <p>Practical use in real environments  Such as using WiFi enabled smart phones</p>
    <p>Anonymity boxes  isolated environments running within a virtual machine isolating the users private information from the anonymity network</p>
    <p>Participation limits to prevent Sybil attacks</p>
  </div>
  <div class="page">
    <p>Dissent Disruption Resistance  A malicious bit flip resulting from a 0 -&gt; 1 in the</p>
    <p>cleartext can be used to generate an accusation</p>
    <p>In a DC-net, client requests accusation shuffle</p>
    <p>In shuffle, client specifies the flipped bit</p>
    <p>Servers share bits for this bit index, finding either</p>
    <p>A server sent bits that do not match his ciphertext  thus he is guilty of the disruption</p>
    <p>A clients ciphertext does not match the accumulation of the servers bits</p>
    <p>Clients rebut by sharing with servers the shared secret of the offending server, accepting blame, or remaining suspect</p>
  </div>
  <div class="page">
    <p>Analytical Comparison Feature DC-Nets Herbivore Dissent</p>
    <p>Messages O(N2) O(N) O(N)</p>
    <p>Secrets O(N2) O(N2) O(N*M)</p>
    <p>Anon O(K) O(K) O(K) , assuming 1 honest server</p>
    <p>N = Members (clients) M = Servers K = honest members</p>
  </div>
  <div class="page">
    <p>Server Count Effects</p>
  </div>
  <div class="page">
    <p>Analytical Comparison Feature Dissent D3</p>
    <p>Shuffle Comm O(N) serial steps O(1)</p>
    <p>Anon O(K), K = honest members</p>
    <p>O(K), K = honest members, assuming 1 honest server</p>
    <p>DC-net Comm O(N2) messages O(N2) shared secrets</p>
    <p>O(N) messages O(N) shared secrets</p>
    <p>Anon O(K), K = honest members</p>
    <p>O(K), K = honest members, assuming 1 honest server</p>
  </div>
  <div class="page">
    <p>Client/Server Trust Models  Trust all servers</p>
    <p>Unrealistic in the real world</p>
    <p>Trust no servers  SUNDR</p>
    <p>Ideal but complicated due to lack of knowledge and message time constraints</p>
    <p>Trust at least one server  Anytrust</p>
    <p>With one honest server, anonymity set is equal to the set of all honest members (clients)</p>
    <p>No need to know which server to trust</p>
    <p>(Used in Mix-nets)</p>
  </div>
  <div class="page">
    <p>DC-Nets Generalized  Members share secrets with each other  Such as Diffie-Hellman exchanges</p>
    <p>Can be used to generate variable length string</p>
    <p>Each member constructs a ciphertext  XOR in the string generated by each shared secret</p>
    <p>Optionally, XOR secret message</p>
    <p>Positions inside a DC-net can be assigned via randomness (Ethernet style backoff) or a Mix-Net</p>
    <p>After obtaining a copy of each ciphertext  XOR each ciphertext together</p>
    <p>Effectively, cancelling out generated strings</p>
    <p>Revealing secret messages</p>
  </div>
  <div class="page">
    <p>Existing Approaches Method Weakness</p>
    <p>Mix-Nets, Tor Traffic analysis attacks</p>
    <p>Group / Ring Signatures</p>
    <p>Traffic analysis attacks</p>
    <p>Voting Protocols Fixed-length messages</p>
    <p>DC Nets Anonymous DoS attacks</p>
    <p>Dissent Intolerant to churn / long delays between msgs</p>
    <p>Herbivore Small anonymity set</p>
  </div>
</Presentation>
