<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>JIAXIN SHI, YOUYANG YAO RONG CHEN, HAIBO CHEN</p>
    <p>Institute of Parallel and Distributed Systems (IPADS) Shanghai Jiao Tong University</p>
    <p>Fast and Concurrent RDF Queries with RDMA-based Distributed Graph Exploration</p>
    <p>FEIFEI LI</p>
    <p>School of Computing University of Utah</p>
    <p>http://ipads.se.sjtu.edu.cn/projects/wukong</p>
  </div>
  <div class="page">
    <p>Graphs are Everywhere</p>
    <p>Online graph query plays a vital role for searching, mining and reasoning linked data</p>
    <p>Unicorn TAO</p>
  </div>
  <div class="page">
    <p>Graph Analytics vs. Graph Query</p>
    <p>Graph Analytics Graph Query Graph Model Property Graph Semantic (RDF) Graph</p>
    <p>Working Set A whole Graph A small frac. of Graph</p>
    <p>Processing Batched &amp; Iterative Concurrent</p>
    <p>Metrics Latency Latency &amp; Throughput</p>
  </div>
  <div class="page">
    <p>RDF and SPARQL Resource Description Framework (RDF)  Representing linked data on the Web  Public knowledge bases: DBpedia, PubChemRDF, Bio2RDF  Googles knowledge graph</p>
  </div>
  <div class="page">
    <p>RDF and SPARQL RDF is a graph composed by a set of Subject, Predicate, Object triples</p>
    <p>Haibo mo IPADS Haibo to OS Jiaxin ad RONG Jiaxin tc OS Rong mo IPADS Rong to DS Xingda ad Haibo . . .</p>
    <p>mo: MemberOf ad: ADvisor to: TeacherOf tc: TakeCourse</p>
    <p>to</p>
    <p>Xingda</p>
    <p>OS</p>
    <p>ad</p>
    <p>Rong to</p>
    <p>Jiaxin</p>
    <p>DS</p>
    <p>ad Youyang</p>
    <p>tc</p>
    <p>mo</p>
    <p>mo</p>
    <p>tc</p>
    <p>tc</p>
    <p>Haibo</p>
    <p>IPADS</p>
    <p>triple</p>
    <p>Haibo</p>
    <p>IPADS</p>
  </div>
  <div class="page">
    <p>RDF and SPARQL SPARQL is standard query language for RDF</p>
    <p>SELECT ?Y WHERE { ?X mo IPADS . ?X to ?Y . }</p>
    <p>constant</p>
    <p>variable triple pattern</p>
    <p>to</p>
    <p>Xingda</p>
    <p>OS</p>
    <p>ad</p>
    <p>Rong to</p>
    <p>Jiaxin</p>
    <p>DS</p>
    <p>ad Youyang</p>
    <p>tc</p>
    <p>mo</p>
    <p>mo</p>
    <p>tc</p>
    <p>tc</p>
    <p>Haibo</p>
    <p>IPADS</p>
    <p>Courses (?Y) taught by Teachers (?X) from IPADS</p>
  </div>
  <div class="page">
    <p>RDF and SPARQL SPARQL is standard query language for RDF</p>
    <p>SELECT ?Y WHERE { ?X mo IPADS . ?X to ?Y . }</p>
    <p>constant</p>
    <p>variable triple pattern</p>
    <p>Courses (?Y) taught by Teachers (?X) from IPADS</p>
    <p>to</p>
    <p>Xingda</p>
    <p>OS</p>
    <p>ad</p>
    <p>Rong to</p>
    <p>Jiaxin</p>
    <p>DS</p>
    <p>ad Youyang</p>
    <p>tc</p>
    <p>mo</p>
    <p>mo</p>
    <p>tc</p>
    <p>tc</p>
    <p>Haibo</p>
    <p>IPADS</p>
    <p>to OS</p>
    <p>Rong to</p>
    <p>DS</p>
    <p>mo</p>
    <p>mo</p>
    <p>Haibo</p>
    <p>IPADS</p>
    <p>?Y?X</p>
  </div>
  <div class="page">
    <p>Triple Store</p>
    <p>N o</p>
    <p>d e</p>
    <p>o d</p>
    <p>e 2</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X to ?Y . ?Z tc ?Y . ?Z ad ?X . }</p>
    <p>Existing Solutions Triple Store and Triple Join  Store RDF data as a set of triples in RDBMS</p>
    <p>Jiaxin ad Rong Rong mo IPADS .. .. ..</p>
    <p>Triple Join ?X ?Y ?Z</p>
    <p>Haibo mo IPADS Xingda ad Haibo .. .. ..</p>
    <p>N1</p>
    <p>N2</p>
  </div>
  <div class="page">
    <p>Triple Store</p>
    <p>N o</p>
    <p>d e</p>
    <p>o d</p>
    <p>e 2</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X to ?Y . ?Z tc ?Y . ?Z ad ?X . }</p>
    <p>Existing Solutions Triple Store and Triple Join  Store RDF data as a set of triples in RDBMS</p>
    <p>Jiaxin ad Rong Rong mo IPADS .. .. ..</p>
    <p>Triple Join ?X ?Y ?Z</p>
    <p>Haibo mo IPADS Xingda ad Haibo .. .. ..</p>
    <p>N1</p>
    <p>N2</p>
    <p>Costly distributed join  Large intermediate results</p>
  </div>
  <div class="page">
    <p>Existing Solutions</p>
    <p>Final Join</p>
    <p>Graph Store and Graph Exploration  Store RDF data in a native graph model</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X to ?Y . ?Z tc ?Y . ?Z ad ?X . }</p>
    <p>Graph Store Node1</p>
    <p>Node2</p>
    <p>N1</p>
    <p>N2</p>
    <p>?X ?Y</p>
    <p>?Z ?X</p>
    <p>?Y ?Z</p>
    <p>?X ?Y ?Z</p>
    <p>One-step pruning</p>
  </div>
  <div class="page">
    <p>Existing Solutions</p>
    <p>Final Join</p>
    <p>Graph Store and Graph Exploration  Store RDF data in a native graph model</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X to ?Y . ?Z tc ?Y . ?Z ad ?X . }</p>
    <p>Graph Store Node1</p>
    <p>Node2</p>
    <p>N1</p>
    <p>N2</p>
    <p>?X ?Y</p>
    <p>?Z ?X</p>
    <p>?Y ?Z</p>
    <p>?X ?Y ?Z</p>
    <p>One-step pruning</p>
    <p>Costly final join (90%)  Synchronized execution</p>
  </div>
  <div class="page">
    <p>: A distributed in-memory RDF store</p>
    <p>System Overview Wukong</p>
    <p>RDMA</p>
    <p>SPARQL queries</p>
  </div>
  <div class="page">
    <p>: A distributed in-memory RDF store</p>
    <p>System Overview Wukong</p>
    <p>RDMA</p>
    <p>SPARQL queries</p>
  </div>
  <div class="page">
    <p>: A distributed in-memory RDF store</p>
    <p>System Overview Wukong  RDMA-friendly graph model  RDMA-based join-free graph exploration  Concurrent query processing  Results vs. state-of-the-art (TriAD/Trinity.RDF)</p>
    <p>Latency: 11.9X  28.1X reduction  Throughput: 269K queries/sec (up to 740X improvement)</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Graph-based Model &amp; Store</p>
    <p>Query Processing Engine</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Graph Model and Indexes</p>
    <p>SELECT ?X ?Y WHERE { ?X tc ?Y . ?X type Student .</p>
    <p>} Jiaxin</p>
    <p>tc</p>
    <p>DS</p>
    <p>Xingda</p>
    <p>tc</p>
    <p>OS</p>
    <p>tc</p>
    <p>Student</p>
    <p>Course</p>
    <p>tcSELECT ?X WHERE { Jiaxin tc ?X .</p>
    <p>}</p>
    <p>Hard to query w/o indexing</p>
    <p>Predicate index</p>
    <p>Type index</p>
    <p>Easy to start from a constant</p>
  </div>
  <div class="page">
    <p>Differentiated Graph Partitioning</p>
    <p>Start from normal vertex  Exploit locality</p>
    <p>Jiaxin</p>
    <p>DS</p>
    <p>Xingda</p>
    <p>OS</p>
    <p>tc</p>
    <p>Student</p>
    <p>Course</p>
    <p>SELECT ?X WHERE { Jiaxin tc ?X .</p>
    <p>}</p>
    <p>SELECT ?X ?Y WHERE { ?X tc ?Y . ?X type Student .</p>
    <p>}</p>
    <p>Start from index vertex  Exploit parallelism</p>
  </div>
  <div class="page">
    <p>Differentiated Graph Partitioning</p>
    <p>Jiaxin</p>
    <p>tc</p>
    <p>DS</p>
    <p>Xingda</p>
    <p>tc</p>
    <p>OS</p>
    <p>tc tc</p>
    <p>Student Course</p>
    <p>Student</p>
    <p>Course</p>
    <p>OS</p>
    <p>tc</p>
    <p>Jiaxin</p>
    <p>DS</p>
    <p>Xingda</p>
    <p>OS</p>
    <p>tc</p>
    <p>Student</p>
    <p>Course</p>
    <p>Normal vertex : Distributed Index vertex : Partitioned</p>
    <p>Start from normal vertex  Exploit locality</p>
    <p>SELECT ?X WHERE { Jiaxin tc ?X .</p>
    <p>}</p>
    <p>SELECT ?X ?Y WHERE { ?X tc ?Y . ?X type Student .</p>
    <p>}</p>
    <p>Start from index vertex  Exploit parallelism Inspired by PoweLyra [Eurosys15]</p>
  </div>
  <div class="page">
    <p>Predicate-based KV Store</p>
    <p>Rong to</p>
    <p>Jiaxin</p>
    <p>DS</p>
    <p>ad IPADS</p>
    <p>mo</p>
    <p>SELECT ?X WHERE { Rong to ?X .</p>
    <p>}</p>
    <p>to</p>
    <p>Inefficient lookup  Unnecessary data transfer</p>
    <p>Rong in ad Jiaxin</p>
    <p>Rong out mo IPADS to DS to . . .</p>
    <p>Vertex (S/O) Predicate Direction</p>
    <p>constant</p>
  </div>
  <div class="page">
    <p>Predicate-based KV Store</p>
    <p>Rong to</p>
    <p>Jiaxin</p>
    <p>DS</p>
    <p>ad IPADS</p>
    <p>mo to</p>
    <p>Inefficient lookup  Unnecessary data transfer</p>
    <p>ad in JiaxinRong</p>
    <p>mo out IPADSRong</p>
    <p>to out DSRong . . .</p>
    <p>Vertex (S/O) Predicate Direction</p>
    <p>Rong in ad Jiaxin</p>
    <p>Rong out mo IPADS to DS to . . .</p>
    <p>Move predicate to key-side</p>
    <p>Finer-grained vertex decomposition</p>
    <p>SELECT ?X WHERE { Rong to ?X .</p>
    <p>} constant</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Graph-based Model &amp; Store</p>
    <p>Query Processing Engine</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Query Processing</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X to ?Y . ?Z tc ?Y . ?Z ad ?X .</p>
    <p>} ?Z</p>
    <p>?X ?Y</p>
    <p>tc ad</p>
    <p>to</p>
    <p>The teacher advises the student who also takes a course taught by the teacher</p>
    <p>mo: MemberOf ad: ADvisor to: TeacherOf tc: TakeCourse</p>
    <p>to</p>
    <p>Xingda</p>
    <p>OS</p>
    <p>ad</p>
    <p>Rong to</p>
    <p>Jiaxin</p>
    <p>DS</p>
    <p>ad Youyang</p>
    <p>tc</p>
    <p>mo</p>
    <p>mo</p>
    <p>tc</p>
    <p>tc</p>
    <p>Haibo</p>
    <p>IPADS</p>
  </div>
  <div class="page">
    <p>Observation</p>
    <p>Final Join</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X to ?Y . ?Z tc ?Y . ?Z ad ?X . }</p>
    <p>N1</p>
    <p>N2</p>
    <p>?X ?Y</p>
    <p>?Z ?X</p>
    <p>?Y ?Z</p>
    <p>Costly final join (90%)  Synchronized execution</p>
    <p>One-step pruning</p>
  </div>
  <div class="page">
    <p>SELECT ?X ?Y ?Z WHERE { ?X to ?Y . ?Z tc ?Y . ?Z ad ?X . }</p>
    <p>Observation</p>
    <p>Graph exploration w/ full-history pruning</p>
    <p>Final Join</p>
    <p>N1</p>
    <p>N2</p>
    <p>?X ?Y</p>
    <p>?Z ?X</p>
    <p>?Y ?Z</p>
    <p>One-step pruning</p>
    <p>Costly final join (90%)  Synchronized execution</p>
    <p>the latency of RDMA is relatively insensitive to payload sizes (~2K)</p>
    <p>e.g. 8B/1.56s vs. 2KB/2.25s</p>
  </div>
  <div class="page">
    <p>Full-History Pruning to to</p>
    <p>Query Query</p>
    <p>Parallel execution on predicate index</p>
    <p>Haibo to</p>
    <p>Xingda</p>
    <p>OS ad</p>
    <p>Rong to</p>
    <p>Jiaxin</p>
    <p>DS</p>
    <p>ad Youyangtc</p>
    <p>IPADS mo</p>
    <p>mo</p>
    <p>tc</p>
    <p>tc</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X to ?Y . ?Z tc ?Y . ?Z ad ?X . }</p>
  </div>
  <div class="page">
    <p>Full-History Pruning to</p>
    <p>Rong to</p>
    <p>DS</p>
    <p>Youyang</p>
    <p>tc</p>
    <p>ad</p>
    <p>H:Rong</p>
    <p>H:Rong DS</p>
    <p>H:Rong DS Youyang</p>
    <p>toFull-history</p>
    <p>Haibo to</p>
    <p>Xingda</p>
    <p>OS ad</p>
    <p>Rong to</p>
    <p>Jiaxin</p>
    <p>DS</p>
    <p>ad Youyangtc</p>
    <p>IPADS mo</p>
    <p>mo</p>
    <p>tc</p>
    <p>tc</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X to ?Y . ?Z tc ?Y . ?Z ad ?X . }</p>
  </div>
  <div class="page">
    <p>Jiaxin</p>
    <p>Full-History Pruning to</p>
    <p>Rong to</p>
    <p>DS</p>
    <p>Youyang</p>
    <p>tc</p>
    <p>ad</p>
    <p>H:Rong</p>
    <p>H:Rong DS</p>
    <p>H:Rong DS Youyang</p>
    <p>to</p>
    <p>to</p>
    <p>OS</p>
    <p>Haibo</p>
    <p>tc</p>
    <p>ad</p>
    <p>H:Haibo</p>
    <p>H:Haibo OS</p>
    <p>H:Haibo OS Jiaxin Haibo OS Xingda</p>
    <p>Haibo OS Xingda Haibo</p>
    <p>Haibo</p>
    <p>Xingda</p>
    <p>Haibo to</p>
    <p>Xingda</p>
    <p>OS ad</p>
    <p>Rong to</p>
    <p>Jiaxin</p>
    <p>DS</p>
    <p>ad Youyangtc</p>
    <p>IPADS mo</p>
    <p>mo</p>
    <p>tc</p>
    <p>tc</p>
    <p>Jiaxin</p>
    <p>Rong</p>
    <p>ad</p>
    <p>Haibo OS Jiaxin Rong</p>
    <p>H:Haibo OS Jiaxin</p>
    <p>Full-history</p>
    <p>SELECT ?X ?Y ?Z WHERE { ?X to ?Y . ?Z tc ?Y . ?Z ad ?X . }</p>
  </div>
  <div class="page">
    <p>Migrate Execution or Data</p>
    <p>Send sub-query by RDMA WRITE  Async exploration w/ full-History</p>
    <p>Exploit parallelism</p>
    <p>Fork-join (migrate exec)</p>
  </div>
  <div class="page">
    <p>Migrate Execution or Data</p>
    <p>Fetch data by RDMA READ  Bypass remote CPU &amp; OS</p>
    <p>Exploit low latency</p>
    <p>In-place (migrate data)</p>
    <p>Send sub-query by RDMA WRITE  Async exploration w/ full-History</p>
    <p>Exploit parallelism</p>
    <p>Fork-join (migrate exec)</p>
    <p>Dynamic switch at runtime</p>
  </div>
  <div class="page">
    <p>Other Designs of Wukong</p>
    <p>Logical task queues</p>
    <p>Multi-threading large-query</p>
    <p>Latency-centric work stealing</p>
    <p>Support Evolving graph</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Graph-based Model &amp; Store</p>
    <p>Query Processing Engine</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Evaluation Baseline: state-of-the-art systems  Centralized: RDF-3X, BitMat  Distributed: TriAD, Trinity.RDF, SHARD</p>
    <p>Platforms: a rack-scale 6-machine cluster  Each: two 10-cores Intel Xeon, 64GB DRAM,</p>
    <p>Mellanox 56Gbps InfiniBand NIC w/ RDMA1</p>
    <p>Benchmarks  Synthetic: LUBM, WSDTS  Real-life: DBPSB, YAGO2</p>
    <p>RDMA</p>
  </div>
  <div class="page">
    <p>Single Query Latency (msec)</p>
    <p>Outperform state-ofthe-art systems (Geometric Mean)</p>
    <p>vs. Trinity.RDF: 28.1X  vs. TriAD: 11.9X</p>
    <p>Group I (L1-3,7): large queries Group II (L4-6): small queries  Start from index vertex  Touch a large subset of graph  Speedup: 4.1X - 21.7X</p>
    <p>Start from normal vertex  Touch a small subset of graph  Speedup: 8.4X  70.6X</p>
  </div>
  <div class="page">
    <p>Factor Analysis of Improvement (msec)</p>
    <p>BASE  Graph-exploration  One-step pruning  Comm. w/ TCP/IP</p>
    <p>+RDMA  Comm. w/ RDMA</p>
    <p>+FHP  Full-history pruning</p>
    <p>+IDX  Index vertex  Diff. partitioning</p>
    <p>+PBS  Predicate-base fine</p>
    <p>grained Store</p>
    <p>+DYN  In-place execution  Dynamic switching</p>
  </div>
  <div class="page">
    <p>Throughput of Mixed Workloads</p>
    <p>queries/sec</p>
    <p>Mixed workload: 6 classes of small queries1</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>: a distributed in-memory RDF store that leverages RDMA-based graph exploration to support fast and concurrent RDF queries</p>
    <p>Achieving orders-of-magnitude lower latency &amp; higher throughput than prior state-of-the-art systems</p>
    <p>Wukong</p>
    <p>New hardware technologies open opportunities</p>
    <p>http://ipads.se.sjtu.edu.cn/projects/wukong</p>
  </div>
  <div class="page">
    <p>Questions</p>
    <p>Thanks</p>
    <p>http://ipads.se.sjtu.edu.cn/projects/wukong</p>
    <p>Wukong, short for Sun Wukong, who is known as the Monkey King and is a main character in the Chinese classical novel Journey to the West. Since Wukong is known for his extremely fast speed (21,675 kilometers in one somersault) and the ability to fork himself to do massive multitasking, we termour system as Wukong.</p>
  </div>
</Presentation>
