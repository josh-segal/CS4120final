<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Circuit Switching</p>
    <p>Under the Radar with REACToR</p>
    <p>He Liu, Feng Lu, Alex Forencich, Rishi Kapoor</p>
    <p>Malveeka Tewari, Geoffrey M. Voelker</p>
    <p>George Papen, Alex C. Snoeren, George Porter</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>How to build 100G datacenter networks?</p>
  </div>
  <div class="page">
    <p>Datacenters Traffic Is Skewed</p>
    <p>Destinations</p>
    <p>B a</p>
    <p>n d</p>
    <p>w id</p>
    <p>th R</p>
    <p>e q</p>
    <p>u ir</p>
    <p>e d</p>
  </div>
  <div class="page">
    <p>Destinations</p>
    <p>B a</p>
    <p>n d</p>
    <p>w id</p>
    <p>th R</p>
    <p>e q</p>
    <p>u ir</p>
    <p>e d</p>
  </div>
  <div class="page">
    <p>Destinations</p>
    <p>B a</p>
    <p>n d</p>
    <p>w id</p>
    <p>th R</p>
    <p>e q</p>
    <p>u ir</p>
    <p>e d</p>
    <p>Full Bi-sectional Bandwidth</p>
    <p>But Expensive</p>
    <p>cables, transceivers,</p>
  </div>
  <div class="page">
    <p>Helios, c-Through: Hotspot Circuits</p>
    <p>Destinations</p>
    <p>B a</p>
    <p>n d</p>
    <p>w id</p>
    <p>th R</p>
    <p>e q</p>
    <p>u ir</p>
    <p>e d</p>
    <p>Use mirrors</p>
    <p>Reconfigures in 10ms</p>
    <p>Single optical circuit 100G</p>
    <p>[SIGCOMM 2010]</p>
  </div>
  <div class="page">
    <p>OSA: More Circuits</p>
    <p>Destinations</p>
    <p>B a</p>
    <p>n d</p>
    <p>w id</p>
    <p>th R</p>
    <p>e q</p>
    <p>u ir</p>
    <p>e d</p>
    <p>Several optical circuits 100G</p>
    <p>[NSDI 2012]</p>
  </div>
  <div class="page">
    <p>Mordia: Fast Circuit Switching</p>
    <p>Destinations</p>
    <p>B a</p>
    <p>n d</p>
    <p>w id</p>
    <p>th R</p>
    <p>e q</p>
    <p>u ir</p>
    <p>e d</p>
    <p>Reconfigures in 15 microseconds.</p>
    <p>Enables time sharing a circuit.</p>
    <p>[SIGCOMM 2013]</p>
  </div>
  <div class="page">
    <p>Limitation: Still Circuit Switching</p>
    <p>Destinations</p>
    <p>B a</p>
    <p>n d</p>
    <p>w id</p>
    <p>th R</p>
    <p>e q</p>
    <p>u ir</p>
    <p>e d</p>
    <p>Good with a few big flows</p>
    <p>A B</p>
    <p>t</p>
    <p>A B</p>
  </div>
  <div class="page">
    <p>Limitation: Still Circuit Switching</p>
    <p>Destinations</p>
    <p>B a</p>
    <p>n d</p>
    <p>w id</p>
    <p>th R</p>
    <p>e q</p>
    <p>u ir</p>
    <p>e d</p>
  </div>
  <div class="page">
    <p>Limitation: Inefficient with Small Flows</p>
    <p>Destinations</p>
    <p>B a</p>
    <p>n d</p>
    <p>w id</p>
    <p>th R</p>
    <p>e q</p>
    <p>u ir</p>
    <p>e d</p>
    <p>Low link utilization</p>
    <p>A</p>
    <p>t Reconfiguring takes time</p>
    <p>B C D E F A B C D E F</p>
  </div>
  <div class="page">
    <p>Our Approach: REACToR</p>
    <p>Destinations</p>
    <p>B a</p>
    <p>n d</p>
    <p>w id</p>
    <p>th R</p>
    <p>e q</p>
    <p>u ir</p>
    <p>e d</p>
    <p>Circuit</p>
    <p>Switching</p>
    <p>Packet</p>
    <p>Switching</p>
    <p>A B</p>
    <p>t</p>
    <p>A B</p>
    <p>C D E F</p>
    <p>t</p>
    <p>C D E F C D E F C D E F C D E</p>
  </div>
  <div class="page">
    <p>Start with a Pre-existing 10G Network</p>
    <p>ToR Box</p>
    <p>End hosts</p>
    <p>Electrical Packet</p>
    <p>Network</p>
  </div>
  <div class="page">
    <p>Connect via REACToR</p>
    <p>Electrical Packet</p>
    <p>Network</p>
    <p>End hosts</p>
    <p>REACToR</p>
  </div>
  <div class="page">
    <p>Connect Circuits</p>
    <p>Optical Circuit</p>
    <p>Network</p>
    <p>End hosts</p>
    <p>REACToR</p>
    <p>Electrical Packet</p>
    <p>Network</p>
  </div>
  <div class="page">
    <p>Hybrid Network</p>
    <p>End hosts</p>
    <p>Small</p>
    <p>Flows</p>
    <p>Big</p>
    <p>Flows</p>
    <p>REACToR</p>
  </div>
  <div class="page">
    <p>Challenge: Two Different Networks</p>
    <p>Electrical Packet</p>
    <p>Low bandwidth</p>
    <p>Buffers all the way</p>
    <p>Tx at any time</p>
    <p>Optical Circuit</p>
    <p>High bandwidth</p>
    <p>Bufferless TDMA</p>
    <p>Tx only when circuit connects</p>
  </div>
  <div class="page">
    <p>Design Requirements</p>
    <p>Hybrid scheduling: classify traffic into circuits or packets</p>
    <p>Buffer packets at source hosts until circuit is available</p>
    <p>Have sources transmit when the circuit is connected</p>
    <p>Rate control to prevent downlink overload</p>
  </div>
  <div class="page">
    <p>The Hybrid Scheduling Problem</p>
    <p>Collect traffic demand from all hosts</p>
    <p>TDMA schedule the big flows on the circuit path</p>
    <p>Schedule the rest on the packet path</p>
    <p>An oracle predicts the demand and builds the schedules. 20</p>
    <p>Destinations</p>
    <p>B a n d w</p>
    <p>id th</p>
    <p>R e q u ir</p>
    <p>e d</p>
    <p>Centralized TDMA Circuit</p>
    <p>Schedule</p>
    <p>Free-running</p>
    <p>Packet Network</p>
  </div>
  <div class="page">
    <p>End Host: Classify and Buffer Packets</p>
    <p>Classify packets and map into different hardware queues</p>
    <p>Based on the schedule</p>
    <p>Packet path: one hardware queue for all destinations</p>
    <p>Can transmit at any time, but at 10G</p>
    <p>Circuit path: one hardware queue for each destination</p>
    <p>Can only transmit when the particular circuit is connected</p>
    <p>Buffer the packets in end-host memory</p>
    <p>B</p>
    <p>A</p>
    <p>C D E F Packet Queue</p>
    <p>Circuit Queues</p>
  </div>
  <div class="page">
    <p>Packet Transmission</p>
    <p>Packet path: Rate limit to</p>
    <p>Circuit path: Transmit only</p>
    <p>when the circuit is connected</p>
    <p>REACToR pulls packets from</p>
    <p>the circuit queue in real-time</p>
    <p>Use PFC frames to</p>
    <p>selectively unpause queues</p>
    <p>B</p>
    <p>A</p>
    <p>D E F</p>
    <p>Packet Queue</p>
    <p>Circuit Queues</p>
    <p>NIC</p>
    <p>PFC:</p>
    <p>Unpause A</p>
    <p>Circuit to</p>
    <p>Host A</p>
    <p>REACToR</p>
    <p>End Host</p>
    <p>Packet</p>
    <p>path</p>
    <p>Circuit to</p>
    <p>Host B</p>
    <p>PFC:</p>
    <p>Pause A</p>
    <p>PFC:</p>
    <p>Unpause B</p>
    <p>C</p>
  </div>
  <div class="page">
    <p>Rate Control</p>
    <p>Problem: downlink merging 100G + 10G to 100G</p>
    <p>Circuit 100G 100G to end host</p>
    <p>What</p>
    <p>To do?</p>
  </div>
  <div class="page">
    <p>Rate Control</p>
    <p>Problem: downlink merging 100G + 10G to 100G</p>
    <p>Our approach: Rate limit the circuit path at the source to</p>
    <p>avoid overloading</p>
    <p>Circuit 100G 100G to end host</p>
    <p>What</p>
    <p>To do?</p>
    <p>Circuit</p>
    <p>Packet</p>
  </div>
  <div class="page">
    <p>Implementation</p>
  </div>
  <div class="page">
    <p>REACToR</p>
  </div>
  <div class="page">
    <p>REACToR</p>
    <p>Virtex 6 FPGA</p>
    <p>H H H H</p>
    <p>REACToR</p>
    <p>Virtex 6 FPGA</p>
    <p>H H H H</p>
    <p>Linux servers (Intel 82599 10G NICs)</p>
    <p>Circuit Switch</p>
    <p>Mordia OCS</p>
    <p>Control</p>
    <p>Computer</p>
    <p>Schedule</p>
    <p>EPS</p>
    <p>Fulcrum Monaco Circuit</p>
    <p>Control</p>
    <p>Schedule</p>
    <p>Demand</p>
  </div>
  <div class="page">
    <p>Timing Parameters</p>
    <p>End-to-end reconfiguration time: 30 s</p>
    <p>Schedule reconfigures every 1500 us</p>
    <p>Example: 7 flows TDMA, 86% duty cycle</p>
    <p>t</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Experiment 1: Supporting TCP</p>
    <p>The performance on working with stock network stack</p>
    <p>Experiment 2: React to demand changes</p>
    <p>The dynamics on handling changes and mispredictions</p>
    <p>Experiment 3: Demonstrate the benefit of using hybrid</p>
    <p>The performance gain on handling skewed demand</p>
  </div>
  <div class="page">
    <p>Experiment 1: Supporting TCP</p>
    <p>Each host receives 7 TCP flows from all other hosts</p>
    <p>Hybrid schedule: data packets via OCS, ACKs via EPS</p>
    <p>7 flows TDMA, fair sharing the link</p>
    <p>Check if TCP works with high throughput</p>
  </div>
  <div class="page">
    <p>TCP Throughput</p>
    <p>TDMA invisible to TCP</p>
  </div>
  <div class="page">
    <p>Experiment 2: React to Demand Changes</p>
    <p>Rack 1 Rack 2 Rack 1 Rack 2</p>
    <p>From: Intra-rack Traffic To: Inter-rack Traffic</p>
    <p>Use pktgen to impose precise and sudden traffic pattern change.</p>
    <p>See if REACToR can react in time.</p>
  </div>
  <div class="page">
    <p>React to Demand Changes</p>
    <p>Tx with Packet</p>
    <p>R a c k 2</p>
    <p>R</p>
    <p>a c k 1</p>
    <p>React fast and robust</p>
    <p>to demand changes</p>
  </div>
  <div class="page">
    <p>Experiment 3: Demonstrating Hybrid</p>
    <p>Destinations</p>
    <p>B a n d w</p>
    <p>id th</p>
    <p>Skewed Very Skewed</p>
    <p>Destinations</p>
    <p>B a</p>
    <p>n d</p>
    <p>w id</p>
    <p>th</p>
    <p>Simulated 64 hosts with demand of different skewness</p>
    <p>Big benefit from a small electrical packet switch</p>
  </div>
  <div class="page">
    <p>Experiment 3: Demonstrating Hybrid</p>
    <p>Simulated 64 hosts with demand of different skewness</p>
    <p>Big benefit from a small electrical packet switch</p>
    <p>Destinations</p>
    <p>B a n d w</p>
    <p>id th</p>
    <p>Skewed</p>
    <p>Destinations</p>
    <p>B a</p>
    <p>n d</p>
    <p>w id</p>
    <p>th</p>
    <p>Very Skewed</p>
  </div>
  <div class="page">
    <p>Optical Circuit Switching Not Enough</p>
    <p>Fraction of bandwidth the big flow uses</p>
    <p>L in</p>
    <p>k U</p>
    <p>ti li z e d</p>
  </div>
  <div class="page">
    <p>Optical Circuit Switching Not Enough</p>
    <p>Fraction of bandwidth the big flow uses</p>
    <p>L in</p>
    <p>k U</p>
    <p>ti li z e d</p>
    <p>Optical Circuit 85%</p>
  </div>
  <div class="page">
    <p>Optical Circuit Switching Not Enough</p>
    <p>L in</p>
    <p>k U</p>
    <p>ti li z e d</p>
    <p>Optical Circuit 85%</p>
    <p>Cost of switching</p>
    <p>Lost due to</p>
    <p>Inefficient</p>
    <p>circuit usage</p>
    <p>Fraction of bandwidth the big flow uses 99% 50%</p>
  </div>
  <div class="page">
    <p>Optical Circuit Switching Not Enough</p>
    <p>L in</p>
    <p>k U</p>
    <p>ti li z e d</p>
    <p>Optical Circuit 85%</p>
    <p>Datacenter</p>
    <p>typically works</p>
    <p>in this region</p>
    <p>Fraction of bandwidth the big flow uses 99% 50%</p>
  </div>
  <div class="page">
    <p>Hybrid Switching with REACToR</p>
    <p>L in</p>
    <p>k U</p>
    <p>ti li z e d</p>
    <p>Optical Circuit 85%</p>
    <p>REACToR Hybrid</p>
    <p>Fraction of bandwidth the big flow uses 99% 50%</p>
  </div>
  <div class="page">
    <p>Hybrid Switching with REACToR</p>
    <p>L in</p>
    <p>k U</p>
    <p>ti li z e d</p>
    <p>Optical Circuit 85%</p>
    <p>REACToR Hybrid</p>
    <p>Degrades</p>
    <p>Gradually</p>
    <p>Fraction of bandwidth the big flow uses 99% 50%</p>
  </div>
  <div class="page">
    <p>Hybrid Switching with REACToR</p>
    <p>L in</p>
    <p>k U</p>
    <p>ti li z e d</p>
    <p>Optical Circuit 85%</p>
    <p>REACToR Hybrid</p>
    <p>Degrades</p>
    <p>Gradually</p>
    <p>Fraction of bandwidth the big flow uses 99% 50%</p>
    <p>Performance akin to</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Packet Switching 100G Optical</p>
    <p>Circuit Switching</p>
    <p>Packet Switching</p>
    <p>+ =</p>
    <p>For datacenter workloads</p>
    <p>REACToR</p>
    <p>At a lower cost</p>
  </div>
  <div class="page">
    <p>Thank you!</p>
  </div>
  <div class="page">
    <p>DCTCP: Datacenter Workload</p>
    <p>[SIGCOMM 2010]</p>
  </div>
  <div class="page">
    <p>Cost of Transceivers</p>
    <p>Cost of 10G Transceivers</p>
    <p>Cost: $500 per pair</p>
    <p>Power: 1Watt per pair</p>
    <p>(100G costs even more)</p>
    <p>3-Level Fat-tree: 27.6k hosts</p>
    <p>Transceivers per host:</p>
  </div>
  <div class="page">
    <p>Scheduling</p>
    <p>Problem: matrix decomposition</p>
    <p>Similar to BvN, but must consider reconfiguration penalty</p>
    <p>NP-complete problem</p>
    <p>Goal: schedule all the big flows (90% of the demand)</p>
    <p>Greedy approach: e.g. iSLIP</p>
    <p>Suboptimal</p>
    <p>Nave BvN:</p>
    <p>Fragmented by small elements and residuals</p>
    <p>A good algorithm should:</p>
    <p>Prioritize the big flows</p>
    <p>Perform full matrix decomposition (like BvN)</p>
    <p>Minimize number of reconfigurations at the same time</p>
  </div>
</Presentation>
