<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Oscillations and Buffer Overflows in Video Streaming under NonNegligible Queuing Delay</p>
    <p>Presented by Seong-Ryong Kang</p>
    <p>Yueping Zhang and Dmitri Loguinov Department of Computer Science Texas A&amp;M University College Station, TX 77843</p>
  </div>
  <div class="page">
    <p>Outline  Introduction</p>
    <p>Window-Based AIMD (TCP)</p>
    <p>Rate-Based AIMD</p>
    <p>Scalable TCP</p>
    <p>TFRC</p>
    <p>Conclusion and Future Work</p>
  </div>
  <div class="page">
    <p>Introduction I  Feedback delay is widely present in most</p>
    <p>practical networks</p>
    <p>Internet video streaming applications are challenged by feedback delay in the loop of congestion control</p>
    <p>Queuing delay contributes to the dynamics of Internet congestion controls</p>
  </div>
  <div class="page">
    <p>Introduction II  Experiment: Oscillating Behavior of Real-Time</p>
    <p>Video Streaming Using Rate-Based AIMD  Video streaming over 512-kb/s residential DSL. Evolution</p>
    <p>of the RTT (left) and that of the IP-layer sending rate (right)</p>
    <p>R T</p>
    <p>T (</p>
    <p>m s)</p>
    <p>ra te</p>
    <p>( kb</p>
    <p>/s )</p>
  </div>
  <div class="page">
    <p>Outline  Introduction</p>
    <p>Window-Based AIMD (TCP)</p>
    <p>Rate-Based AIMD</p>
    <p>Scalable TCP</p>
    <p>TFRC</p>
    <p>Conclusion and Future Work</p>
  </div>
  <div class="page">
    <p>Window-Based AIMD I We first examine window-based AIMD (TCP)</p>
    <p>Control Equations</p>
    <p>For each positive ACK, congestion window W(t) is increased by 1/W(t)</p>
    <p>For each packet loss, W(t) is decreased multiplicatively to W(t) (0&lt;&lt; 1)</p>
    <p>In TCP,  = 0.5</p>
  </div>
  <div class="page">
    <p>Window-Based AIMD II  Delayed-Related Oscillations</p>
    <p>Trajectories of two TCP flows: 10 ms delay (left) and ideal immediate feedback (right)</p>
  </div>
  <div class="page">
    <p>Window-Based AIMD III  Buffer Overflow Problem</p>
    <p>To better understand how performance of congestion controls is affected by feedback delay, we examine their buffering behavior under large queuing delay</p>
  </div>
  <div class="page">
    <p>Window-Based AIMD IV First, we need the following preliminary result</p>
    <p>Window Growth  Lemma 1: TCP increases its congestion window W(t)</p>
    <p>at a rate proportional to the square root of time t after the bottleneck link is saturated</p>
    <p>W(t) tends to  for sufficiently large delay</p>
  </div>
  <div class="page">
    <p>Window-Based AIMD V  Ns-2 simulation: congestion window of a single TCP</p>
    <p>flow under large queuing delay  Packet size = 1024 bytes, C = 2 mb/s (244 pkt/s)</p>
  </div>
  <div class="page">
    <p>Window-Based AIMD VI  Buffer overflow</p>
    <p>Lemma 2: the aggregate amount of lost data S(t) of TCP during each overshoot is proportional to the square root of queuing delay D</p>
    <p>The fact that TCP keeps increasing its sending rate after the bottleneck link is saturated contributes to its oscillation</p>
    <p>The larger the queuing delay is, the more lost packets TCP suffers</p>
    <p>Since TCP sends out 1+1/W(t) packets per ACK and W(t) approaches , TCP eventually sends one packet per ACK, i.e., the sending rate converges to C</p>
  </div>
  <div class="page">
    <p>Window-Based AIMD VII  Ns2 Simulation: a single TCP flow (slow start is</p>
    <p>disabled) under large queuing delay</p>
  </div>
  <div class="page">
    <p>Outline  Introduction</p>
    <p>Window-Based AIMD (TCP)</p>
    <p>Rate-Based AIMD</p>
    <p>Scalable TCP</p>
    <p>TFRC</p>
    <p>Conclusion and Future Work</p>
  </div>
  <div class="page">
    <p>Rate-Based AIMD I We next examine rate-based AIMD</p>
    <p>Control equations</p>
    <p>Rate-based AIMD adjusts its sending rate per RTT, instead of per ACK</p>
    <p>RTT consists of propagation and queuing delays</p>
    <p>where instantaneous queue size q(t) is</p>
  </div>
  <div class="page">
    <p>Rate-Based AIMD II  Assume constant RTT</p>
    <p>Unlike window-based protocols, which estimate the RTT based on positive feedbacks, it is difficult for rate-based methods to timely and accurately estimate the RTT</p>
    <p>A closed-form solution to the exact queuing model coupled with end-flow equations does not exist for both rate-based AIMD and TFRC</p>
    <p>Thus, we consider the simpler case where the RTT is constant due to its inaccurate estimation by ratebased AIMD and TFRC</p>
  </div>
  <div class="page">
    <p>Rate-Based AIMD III  Buffer Overflow</p>
    <p>Lemma 3: under constant RTT, the aggregate amount of lost data S(t) of rate-based AIMD during each overshoot is proportional to D2</p>
    <p>Rate-based AIMD grows the buffer to  under sufficiently large D</p>
    <p>Under the same queuing delay D, rate-based AIMD suffer more packet loss than window-based AIMD</p>
  </div>
  <div class="page">
    <p>Outline  Introduction</p>
    <p>Window-Based AIMD (TCP)</p>
    <p>Rate-Based AIMD</p>
    <p>Scalable TCP</p>
    <p>TFRC</p>
    <p>Conclusion and Future Work</p>
  </div>
  <div class="page">
    <p>Scalable TCP I</p>
    <p>We next consider Scalable TCP that is recently proposed as a replacement of the conventional TCP</p>
    <p>Control Equations</p>
    <p>Scalable TCP is a window-based MIMD protocol</p>
    <p>Scalable TCP is suitable for high-bandwidth networks</p>
  </div>
  <div class="page">
    <p>Scalable TCP II  Buffer Overflow</p>
    <p>Lemma 4: the aggregate amount of lost data S(t) of Scalable TCP during each overshoot is proportional to D</p>
    <p>Under the same queuing delay D, the packet loss of Scalable TCP is between window-based AIMD and rate-based AIMD</p>
  </div>
  <div class="page">
    <p>Scalable TCP III  Ns-2 simulation: rate adjustment of Scalable TCP</p>
    <p>under large queuing delay</p>
  </div>
  <div class="page">
    <p>Comparison  The buffering behavior of TCP, rate-based AIMD, and</p>
    <p>Scalable TCP under large queuing delay</p>
  </div>
  <div class="page">
    <p>Outline  Introduction</p>
    <p>Window-Based AIMD (TCP)</p>
    <p>Rate-Based AIMD</p>
    <p>Scalable TCP</p>
    <p>TFRC</p>
    <p>Conclusion and Future Work</p>
  </div>
  <div class="page">
    <p>TFRC I Finally examine delayed behavior and stability of TFRC</p>
    <p>Control Equation</p>
    <p>MTU: maximum transmission unit</p>
    <p>p(n): long-term average packet loss</p>
    <p>Metrics 1 and 2 are, respectively, feedback delays of p(n) and RTT(n)</p>
    <p>Same as the discussion of rate-based AIMD, RTT is assumed to be constant</p>
  </div>
  <div class="page">
    <p>TFRC II  Buffer Overflow</p>
    <p>Lemma 5: under constant RTT, the amount of lost data S(t) in TFRC during each overshoot is proportional to D2</p>
    <p>The buffering behavior of TFRC under queuing delay is similar to rate-based AIMD</p>
  </div>
  <div class="page">
    <p>TFRC III  Stability of AQM-Enabled TFRC</p>
    <p>Lemma 6: under AQM feedback and constant RTT, TFRC can only be stabilized at the cost of no less than 33% packet loss</p>
    <p>Under AQM feedback</p>
    <p>letting  = MTU/RTT, the unique non-negative equilibrium point of sending rate r(t) is</p>
  </div>
  <div class="page">
    <p>TFRC IV  Check local stability of r* by linearization</p>
    <p>Locally stable if and only if</p>
    <p>AQM-enabled TFRC has to suffer more than 33% packet loss to achieve stability.</p>
    <p>Thus, TFRC does not benefit from AQM feedback</p>
  </div>
  <div class="page">
    <p>TFRC V  Simulation: TFRC under AQM feedback when r*=1.503C (left) and r*=1.494C (right)</p>
    <p>C = 1 mb/s, MTU = 1500 bytes</p>
  </div>
  <div class="page">
    <p>Outline  Introduction</p>
    <p>Window-Based AIMD (TCP)</p>
    <p>Rate-Based AIMD</p>
    <p>Scalable TCP</p>
    <p>TFRC</p>
    <p>Conclusion and Future Work</p>
  </div>
  <div class="page">
    <p>Conclusion  All AIMD and TFRC oscillate and overflow the</p>
    <p>buffer under large queuing delay</p>
    <p>Window-based protocols offer better (but far from ideal) performance under delay than rate-based protocols</p>
    <p>Our general conclusion: More effort should be put into design of AQM-enabled congestion controls that are provably stable under arbitrary delay</p>
  </div>
  <div class="page">
    <p>Future Work  Analyze rate-based AIMD and TFRC under</p>
    <p>dynamic RTT and an accurate queuing model</p>
    <p>Design AQM-enabled congestion controls that achieve high utilization, freedom from oscillation, small queuing delay, and stability in the equilibrium</p>
  </div>
</Presentation>
