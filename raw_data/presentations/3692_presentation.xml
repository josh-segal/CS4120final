<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>R/W Reductions</p>
    <p>Eli Gafni UCLA</p>
    <p>ICDCN06 12/30</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Tasks and r/w impossible task:  2 cons  3 cons</p>
    <p>NP-completeness  R/W reduction  Weakest Unsolvable Task Thesis  Reductions  Conclusions/Speculations</p>
  </div>
  <div class="page">
    <p>Two procs P0 P1  P0 alone output 0  P1 alone output 1  P1 and P2 both output either 0 or 1</p>
  </div>
  <div class="page">
    <p>The protocol complex is a line  The output is disconnected</p>
  </div>
  <div class="page">
    <p>Procs P0 P1 P2  Pi alone output i  All procs output same i</p>
  </div>
  <div class="page">
    <p>If 3-cons was possible than 2-cons would be possible, contradiction.</p>
    <p>We proved 3-cons impossible by reduction FROM 2-cons</p>
  </div>
  <div class="page">
    <p>Analogy with NP-completeness</p>
    <p>In my Algorithm class students just get the fact that SAT is NP-complete.</p>
    <p>Showing that a problem is NP-complete does not require understanding TMs</p>
    <p>Showing a Task is r/w impossible should not require knowing Algebraic Topology!</p>
  </div>
  <div class="page">
    <p>The Quest: An Analog of SAT</p>
    <p>In our case it should be the Weakest (W) impossible task</p>
    <p>In some sense topology implies no such Weakest exists (upcoming paper: it does for any class of real interest)</p>
  </div>
  <div class="page">
    <p>R/W reducibility Conted Reducibilty induces a directed graph over</p>
    <p>tasks  A strongly connected component are tasks</p>
    <p>which are r/w equivalent  Wishful Weakest-Thesis:</p>
    <p>There exist a task WEAKEST(n):  WEAKEST(n) is r/w unsolvable.  WEAKEST(n) is reducible to any task which is</p>
    <p>unsolvable when restricted to participating set of at most n procs.</p>
  </div>
  <div class="page">
    <p>R/W reducibility Conted</p>
    <p>If Weakest-Thesis hold then  all Maurice can do, we can do better.  Can think Java and not worry about not knowing Basic.  Can go back to thinking distributed rather than topology.</p>
    <p>Plausibilty All known unsolvable tasks are reducible to SB(n,2n-1)</p>
    <p>(Symmetry Breaking) SB(n,2n-1): p0,,p2n-2</p>
    <p>procs output 0 or 1 |P|=n not all 0s and not all 1s</p>
  </div>
  <div class="page">
    <p>Have to talk about Task Implementation</p>
    <p>4 procs P0 P1 P2 P4 of which Ill wake at most 2</p>
    <p>If alone can output any 0 or 1  If both same parity, one of them output 0</p>
    <p>and the other 1, if different parity, then both output same.</p>
    <p>(Vassos,Lo) Cannot do anything above r/w</p>
  </div>
  <div class="page">
    <p>But any implementation will do</p>
    <p>If implementable by r/w then a processor in solo execution is apriori decided whether will output 0 or 1.</p>
    <p>2 out of the 3 have same solo say 0  If same parity, 0 then win (since the other</p>
    <p>changes to 1)  If no same parity, then there is one parity 0 and</p>
    <p>other parity 1, the one that changes wins</p>
  </div>
  <div class="page">
    <p>Instead of Task, any implementation that solves the</p>
    <p>Task</p>
    <p>If the task is on n-procs then commit to some r/w protocol for the max size participating set for which is solvable</p>
    <p>For n get the output from the ``oracle.</p>
  </div>
  <div class="page">
    <p>SB(n,2n-1) equivalent to ``comparison</p>
    <p>If SB(n,2n-1) know how to rename n ``comparison into 1 to 2n-1</p>
    <p>If ``comparison then can glue together, I.e. the algorithm for 1,2,3 and 1,2,4 when 1,2 work alone no need to worry whether they are going to work with 3 or 4. Invoke object only in ``middle (show example with SB11)</p>
  </div>
  <div class="page">
    <p>A weakest task for 3 procs</p>
  </div>
  <div class="page">
    <p>Family of weakest</p>
    <p>No task with 0,1 mapping symmetric on the boundary can be r/w colored to avoid all 0s or all 1s</p>
  </div>
  <div class="page">
    <p>R/W Reducibility Between Tasks</p>
    <p>Task A r/w reducible to B:</p>
    <p>A</p>
    <p>R/W R/WB</p>
  </div>
  <div class="page">
    <p>Reductions:</p>
    <p>(3,2) -tst = always at least one proc outsputs 0, not all output 0.</p>
    <p>Impossible: Will solve SB11  Do IS  At level 3 invoke tst, loser goes down  If remain at level 3 do 2-IS to get 0 if alone or 1</p>
    <p>if see another</p>
  </div>
  <div class="page">
    <p>(3,2)-TST=(3,2)-ELECTION</p>
    <p>TST implies election: Register in SM Apply to tst If 0 elect yourself If 1, write ``I got 1 in SM Scan, elect registerd proc who has not announced 1</p>
    <p>The proc who wrote ``got 1 first will not be chosen</p>
  </div>
  <div class="page">
    <p>Lemma: (3,2)-Election = (3,2) Strong Election</p>
    <p>Strong election = if elected by any then you elect yourself</p>
    <p>Election implies strong:  Phase 1: write (i, elected j)</p>
    <p>Scan, if someone elected you elect yourself, if choose else and see someone choose himself choose him</p>
    <p>Phase 2 (separate memory): write(I,elected j)  Scan, if someone elected you elect yourself, if choose else and</p>
    <p>see someone choose himself choose him</p>
  </div>
  <div class="page">
    <p>Tst=Strong Election (cont)</p>
    <p>Strong election implies TST:  If elect yourself output 0  Else 1</p>
  </div>
  <div class="page">
    <p>Conclusions:</p>
    <p>Weakest Thesis has ``experimental support.</p>
    <p>Not true if ``any task is considered  Find the ``family for which it is the</p>
    <p>weakest</p>
    <p>Missing; Internal reduction 3 SB implies 4 SB</p>
  </div>
</Presentation>
