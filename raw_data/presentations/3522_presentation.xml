<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>From Patching Delays to Infection Symptoms: Using Risk Profiles for an Early Discovery of Vulnerabilities Exploited in the Wild</p>
    <p>Chaowei Xiao1, Armin Sarabi1, Yang Liu2, Bo Li3, Mingyan Liu1, Tudor Dumitras4</p>
    <p>August 16, 2018 1University of Michigan, Ann Arbor</p>
  </div>
  <div class="page">
    <p>Introduction</p>
  </div>
  <div class="page">
    <p>Background and Motivation</p>
    <p>Vulnerability Discovery</p>
    <p>Patch Development</p>
    <p>Patch Release</p>
    <p>Patch Deployment</p>
    <p>Exploit Development Exploit Kit Attack</p>
    <p>Software Vendor End-user/Enterprise</p>
    <p>Attacker</p>
    <p>Possible Outbreak/Breach</p>
    <p>Attackers are in a constant race with end-users/enterprises.</p>
    <p>It is estimated that on median, only 14% of vulnerable hosts are patched when exploits are made available.</p>
    <p>Recent examples: WannaCry, NotPetya, Equifax.  Only a small portion of vulnerabilities are ultimately exploited.</p>
  </div>
  <div class="page">
    <p>Background and Motivation</p>
    <p>Vulnerability Discovery</p>
    <p>Patch Development</p>
    <p>Patch Release</p>
    <p>Patch Deployment</p>
    <p>Exploit Development Exploit Kit Attack</p>
    <p>Software Vendor End-user/Enterprise</p>
    <p>Attacker</p>
    <p>Possible Outbreak/Breach</p>
    <p>Attackers are in a constant race with end-users/enterprises.  It is estimated that on median, only 14% of vulnerable hosts are patched when exploits are made available.</p>
    <p>Recent examples: WannaCry, NotPetya, Equifax.</p>
    <p>Only a small portion of vulnerabilities are ultimately exploited.</p>
  </div>
  <div class="page">
    <p>Background and Motivation</p>
    <p>Vulnerability Discovery</p>
    <p>Patch Development</p>
    <p>Patch Release</p>
    <p>Patch Deployment</p>
    <p>Exploit Development Exploit Kit Attack</p>
    <p>Software Vendor End-user/Enterprise</p>
    <p>Attacker</p>
    <p>Possible Outbreak/Breach</p>
    <p>Attackers are in a constant race with end-users/enterprises.  It is estimated that on median, only 14% of vulnerable hosts are patched when exploits are made available.</p>
    <p>Recent examples: WannaCry, NotPetya, Equifax.  Only a small portion of vulnerabilities are ultimately exploited.</p>
  </div>
  <div class="page">
    <p>Background and Motivation</p>
    <p>Rank ordering vulnerabilities by severity enables prioritization of patch deployment.</p>
    <p>Current state of exploit detection</p>
    <p>Intrinsic (a priori) attributes: Not strong predictors.  Crawling social media sites: Only a few days of lead time.</p>
    <p>Our contribution</p>
    <p>Automated detection using statistical evidence of exploitation from real-world measurements.</p>
    <p>We achieve a 90% true positive rate, with a 10% positive rate using 10 days of post-disclosure observations.</p>
    <p>The current median time for detection is 35 days.</p>
  </div>
  <div class="page">
    <p>Background and Motivation</p>
    <p>Rank ordering vulnerabilities by severity enables prioritization of patch deployment.</p>
    <p>Current state of exploit detection</p>
    <p>Intrinsic (a priori) attributes: Not strong predictors.  Crawling social media sites: Only a few days of lead time.</p>
    <p>Our contribution</p>
    <p>Automated detection using statistical evidence of exploitation from real-world measurements.</p>
    <p>We achieve a 90% true positive rate, with a 10% positive rate using 10 days of post-disclosure observations.</p>
    <p>The current median time for detection is 35 days.</p>
  </div>
  <div class="page">
    <p>Background and Motivation</p>
    <p>Rank ordering vulnerabilities by severity enables prioritization of patch deployment.</p>
    <p>Current state of exploit detection</p>
    <p>Intrinsic (a priori) attributes: Not strong predictors.  Crawling social media sites: Only a few days of lead time.</p>
    <p>Our contribution</p>
    <p>Automated detection using statistical evidence of exploitation from real-world measurements.</p>
    <p>We achieve a 90% true positive rate, with a 10% positive rate using 10 days of post-disclosure observations.</p>
    <p>The current median time for detection is 35 days.</p>
  </div>
  <div class="page">
    <p>Overview of Concept</p>
    <p>Symptom pattern Risk behavior 1 Risk behavior 2</p>
    <p>One can infer the main the cause of infection by comparing symptoms of infection with risk (vulnerability) patterns.</p>
    <p>We combine this idea with community detection and compare symptoms of similar individuals (ISPs) with their risk behavior.</p>
  </div>
  <div class="page">
    <p>Overview of Concept</p>
    <p>ISPs with similar symptom signals (i.e, number of infected hosts).</p>
    <p>One can infer the main the cause of infection by comparing symptoms of infection with risk (vulnerability) patterns.</p>
    <p>We combine this idea with community detection and compare symptoms of similar individuals (ISPs) with their risk behavior.</p>
  </div>
  <div class="page">
    <p>Datasets and Processing</p>
  </div>
  <div class="page">
    <p>Datasets</p>
    <p>Symptoms</p>
    <p>Spam blacklists: CBL, SBL, SpamCop, UCEPROTECT, and WPBL (Jan 2013 - Present).</p>
    <p>Risk behavior</p>
    <p>Patching data for 7 applications from WINE (Feb 2008 - Jul 2014).  Chrome, Firefox, Thunderbird, Safari, Opera, Acrobat Reader, Flash.</p>
    <p>Publicly available vulnerabilities (CVEs) from NVD.</p>
    <p>Ground-truth</p>
    <p>Real-world exploits from SecurityFocus, Symantec, and Intrusion Protection Signatures (IPS).</p>
    <p>56 exploited-in-the-wild (EIW) and 300 not-exploited-in-the-wild (NEIW) vulnerabilities.</p>
  </div>
  <div class="page">
    <p>Datasets</p>
    <p>Symptoms</p>
    <p>Spam blacklists: CBL, SBL, SpamCop, UCEPROTECT, and WPBL (Jan 2013 - Present).</p>
    <p>Risk behavior</p>
    <p>Patching data for 7 applications from WINE (Feb 2008 - Jul 2014).  Chrome, Firefox, Thunderbird, Safari, Opera, Acrobat Reader, Flash.</p>
    <p>Publicly available vulnerabilities (CVEs) from NVD.</p>
    <p>Ground-truth</p>
    <p>Real-world exploits from SecurityFocus, Symantec, and Intrusion Protection Signatures (IPS).</p>
    <p>56 exploited-in-the-wild (EIW) and 300 not-exploited-in-the-wild (NEIW) vulnerabilities.</p>
  </div>
  <div class="page">
    <p>Datasets</p>
    <p>Symptoms</p>
    <p>Spam blacklists: CBL, SBL, SpamCop, UCEPROTECT, and WPBL (Jan 2013 - Present).</p>
    <p>Risk behavior</p>
    <p>Patching data for 7 applications from WINE (Feb 2008 - Jul 2014).  Chrome, Firefox, Thunderbird, Safari, Opera, Acrobat Reader, Flash.</p>
    <p>Publicly available vulnerabilities (CVEs) from NVD.</p>
    <p>Ground-truth</p>
    <p>Real-world exploits from SecurityFocus, Symantec, and Intrusion Protection Signatures (IPS).</p>
    <p>56 exploited-in-the-wild (EIW) and 300 not-exploited-in-the-wild (NEIW) vulnerabilities.</p>
  </div>
  <div class="page">
    <p>Data Processing</p>
    <p>Symptoms/ Risk behavior Aggregation</p>
    <p>Pairwise Similarity</p>
    <p>hosts  days ISPs  days ISPs  ISPs</p>
    <p>Reduce the number of nodes by aggregating at the ISP level.  Compute pairwise similarity matrices for the aggregated signals.</p>
    <p>For each CVE, this results in two weighted graphs (one for symptoms and one for risk behavior).</p>
  </div>
  <div class="page">
    <p>Data Processing</p>
    <p>s12ISP1</p>
    <p>s23</p>
    <p>ISP2</p>
    <p>s13</p>
    <p>ISP3</p>
    <p>Reduce the number of nodes by aggregating at the ISP level.  Compute pairwise similarity matrices for the aggregated signals.  For each CVE, this results in two weighted graphs (one for symptoms and one for risk behavior).</p>
  </div>
  <div class="page">
    <p>Methodology</p>
  </div>
  <div class="page">
    <p>Community Detection Over Symptom Similarity</p>
    <p>Use community detection (BigClam) to identify groups of ISPs exhibiting similar symptoms for the 10-day period following each vulnerability disclosure.</p>
    <p>We investigate whether the same community structure also applies to risk behavior signals.</p>
  </div>
  <div class="page">
    <p>Measuring the Association between Risk and Symptoms</p>
    <p>Intercluster</p>
    <p>Intracluster Intracluster</p>
    <p>Cluster A Cluster B</p>
    <p>Intra- and inter-cluster similarities. Each node represents an ISP.</p>
    <p>Using the community structure obtained from symptoms, we compute the intra-cluster and inter-cluster similarities of risk behavior signals for each CVE.</p>
  </div>
  <div class="page">
    <p>Uncovering active exploitation</p>
    <p>Similarity</p>
    <p>C D</p>
    <p>F</p>
    <p>inter similiarity intra similarity</p>
    <p>Similarity</p>
    <p>C D</p>
    <p>F</p>
    <p>inter similarity intra similarity</p>
    <p>Distribution of intra- and inter-cluster risk similarities for a NEIW (left) and a EIW (right) vulnerability.</p>
    <p>We observe a statistically significant distinction between EIW and NEIW vulnerabilities.</p>
    <p>Conjecture: A higher intra-cluster similarity is an indication of active exploitation.</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Feature Sets</p>
    <p>Post-disclosure</p>
    <p>Community: 20-bin histogram of the difference in distribution between intra-cluster and inter-cluster similarities.</p>
    <p>Raw: Risk and symptom similarity matrices.  Direct: 20-bin histogram of row-by-row correlation between the two similarity matrices.</p>
    <p>Intrinsic</p>
    <p>Tokens extracted from vulnerability descriptions, e.g., remote.  CVSS scores summarizing the severity of each vulnerability.</p>
  </div>
  <div class="page">
    <p>Feature Sets</p>
    <p>Post-disclosure</p>
    <p>Community: 20-bin histogram of the difference in distribution between intra-cluster and inter-cluster similarities.</p>
    <p>Raw: Risk and symptom similarity matrices.</p>
    <p>Direct: 20-bin histogram of row-by-row correlation between the two similarity matrices.</p>
    <p>Intrinsic</p>
    <p>Tokens extracted from vulnerability descriptions, e.g., remote.  CVSS scores summarizing the severity of each vulnerability.</p>
  </div>
  <div class="page">
    <p>Feature Sets</p>
    <p>Post-disclosure</p>
    <p>Community: 20-bin histogram of the difference in distribution between intra-cluster and inter-cluster similarities.</p>
    <p>Raw: Risk and symptom similarity matrices.  Direct: 20-bin histogram of row-by-row correlation between the two similarity matrices.</p>
    <p>Intrinsic</p>
    <p>Tokens extracted from vulnerability descriptions, e.g., remote.  CVSS scores summarizing the severity of each vulnerability.</p>
  </div>
  <div class="page">
    <p>Feature Sets</p>
    <p>Post-disclosure</p>
    <p>Community: 20-bin histogram of the difference in distribution between intra-cluster and inter-cluster similarities.</p>
    <p>Raw: Risk and symptom similarity matrices.  Direct: 20-bin histogram of row-by-row correlation between the two similarity matrices.</p>
    <p>Intrinsic</p>
    <p>Tokens extracted from vulnerability descriptions, e.g., remote.  CVSS scores summarizing the severity of each vulnerability.</p>
  </div>
  <div class="page">
    <p>Classifying EIW Vulnerabilities</p>
    <p>Training</p>
    <p>Train Random Forests on different feature sets.</p>
    <p>Use 5-fold cross validation and average performance over 20 rounds.</p>
    <p>Accuracy of trained models</p>
    <p>Using all features we observe a 96% AUC.</p>
    <p>Community+Intrinsic features achieve a 95% AUC.  Performance is greatly improved using both intrinsic (a priori) and post-disclosure (a posteriori) features.</p>
  </div>
  <div class="page">
    <p>Classifying EIW Vulnerabilities</p>
    <p>Training</p>
    <p>Train Random Forests on different feature sets.</p>
    <p>Use 5-fold cross validation and average performance over 20 rounds.</p>
    <p>Accuracy of trained models</p>
    <p>Using all features we observe a 96% AUC.</p>
    <p>Community+Intrinsic features achieve a 95% AUC.  Performance is greatly improved using both intrinsic (a priori) and post-disclosure (a posteriori) features.</p>
  </div>
  <div class="page">
    <p>Classifying EIW Vulnerabilities</p>
    <p>Training</p>
    <p>Train Random Forests on different feature sets.</p>
    <p>Use 5-fold cross validation and average performance over 20 rounds.</p>
    <p>Accuracy of trained models</p>
    <p>Using all features we observe a 96% AUC.  Community+Intrinsic features achieve a 95% AUC.</p>
    <p>Performance is greatly improved using both intrinsic (a priori) and post-disclosure (a posteriori) features.</p>
  </div>
  <div class="page">
    <p>Classifying EIW Vulnerabilities</p>
    <p>Training</p>
    <p>Train Random Forests on different feature sets.</p>
    <p>Use 5-fold cross validation and average performance over 20 rounds.</p>
    <p>Accuracy of trained models</p>
    <p>Using all features we observe a 96% AUC.  Community+Intrinsic features achieve a 95% AUC.  Performance is greatly improved using both intrinsic (a priori) and post-disclosure (a posteriori) features.</p>
  </div>
  <div class="page">
    <p>Case Studies</p>
    <p>The proposed technique can also be applied sooner/retrospectively.</p>
    <p>CVE-2013-0640</p>
    <p>Disclosed on 02/13/2013, affecting Adobe Acrobat Reader.  We detect exploitation for this CVE on the disclosure date.  We were also able to find proof of zero-day exploits for this CVE.</p>
    <p>CVE-2013-5330</p>
    <p>Disclosed on 11/12/2013, affecting Adobe Flash Player.  The earliest exploit report date for this CVE is 01/28/2014.  However, our system detected this vulnerability on the disclosure date, indicating a possible zero-day exploit.</p>
  </div>
  <div class="page">
    <p>Case Studies</p>
    <p>The proposed technique can also be applied sooner/retrospectively.</p>
    <p>CVE-2013-0640</p>
    <p>Disclosed on 02/13/2013, affecting Adobe Acrobat Reader.  We detect exploitation for this CVE on the disclosure date.  We were also able to find proof of zero-day exploits for this CVE.</p>
    <p>CVE-2013-5330</p>
    <p>Disclosed on 11/12/2013, affecting Adobe Flash Player.  The earliest exploit report date for this CVE is 01/28/2014.  However, our system detected this vulnerability on the disclosure date, indicating a possible zero-day exploit.</p>
  </div>
  <div class="page">
    <p>Case Studies</p>
    <p>The proposed technique can also be applied sooner/retrospectively.</p>
    <p>CVE-2013-0640</p>
    <p>Disclosed on 02/13/2013, affecting Adobe Acrobat Reader.  We detect exploitation for this CVE on the disclosure date.  We were also able to find proof of zero-day exploits for this CVE.</p>
    <p>CVE-2013-5330</p>
    <p>Disclosed on 11/12/2013, affecting Adobe Flash Player.  The earliest exploit report date for this CVE is 01/28/2014.  However, our system detected this vulnerability on the disclosure date, indicating a possible zero-day exploit.</p>
  </div>
  <div class="page">
    <p>Discussion and Conclusion</p>
  </div>
  <div class="page">
    <p>Discussion</p>
    <p>Practical utility</p>
    <p>Enterprises: Prioritizing patch deployment, risk assessment.  Software vendors: Development of patches for critical CVEs.  ISPs: Identify at-risk populations to encourage prompt action.</p>
    <p>Data imperfections</p>
    <p>Malicious activities from multiple sources, e.g., different CVEs, pay-per-install, etc.</p>
    <p>Infections that do not generate spam.  Aggregation at a coarse level can lead to only observing the averages of behavior.</p>
  </div>
  <div class="page">
    <p>Discussion</p>
    <p>Practical utility</p>
    <p>Enterprises: Prioritizing patch deployment, risk assessment.  Software vendors: Development of patches for critical CVEs.  ISPs: Identify at-risk populations to encourage prompt action.</p>
    <p>Data imperfections</p>
    <p>Malicious activities from multiple sources, e.g., different CVEs, pay-per-install, etc.</p>
    <p>Infections that do not generate spam.  Aggregation at a coarse level can lead to only observing the averages of behavior.</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Early exploit detection</p>
    <p>We can achieve a true positive rate of 90%, and a false positive rate of 10% using 10 days of post-disclosure data.</p>
    <p>The current median time for detection is 35 days, and 80% of reported exploits are detected beyond 10 days.</p>
    <p>Combining intrinsic and post-disclosure (community) features results in a robust classifier.</p>
    <p>Future directions</p>
    <p>Appending additional datasets of symptomatic data to build a more robust system.</p>
    <p>Using Internet scans to identify at-risk servers/networks.</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Early exploit detection</p>
    <p>We can achieve a true positive rate of 90%, and a false positive rate of 10% using 10 days of post-disclosure data.</p>
    <p>The current median time for detection is 35 days, and 80% of reported exploits are detected beyond 10 days.</p>
    <p>Combining intrinsic and post-disclosure (community) features results in a robust classifier.</p>
    <p>Future directions</p>
    <p>Appending additional datasets of symptomatic data to build a more robust system.</p>
    <p>Using Internet scans to identify at-risk servers/networks.</p>
  </div>
  <div class="page">
    <p>Thank You</p>
    <p>Questions?</p>
  </div>
</Presentation>
