<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>ATLAS: A Chip-Multiprocessor</p>
    <p>with Transactional Memory Support</p>
    <p>Njuguna Njoroge, Jared Casper, Sewook Wee, Yuriy Teslyar, Daxia Ge, Christos Kozyrakis, and Kunle Olukotun</p>
    <p>Transactional Coherence and Consistency (TCC) Group</p>
    <p>Computer Systems Laboratory</p>
    <p>Stanford University</p>
    <p>http://tcc.stanford.edu</p>
  </div>
  <div class="page">
    <p>ATLAS is</p>
    <p>8-way Chip-Multiprocessor (CMP) System with Transactional Memory Support</p>
    <p>Full System Prototype Implementation on the Berkeley Emulation Engine 2 (BEE2) board with 5 FPGAs</p>
    <p>Fast and Practical Software Development Platform</p>
    <p>100x Faster than the equivalent Software Simulator</p>
    <p>Full Operating System Support</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Transactional Memory Overview</p>
    <p>ATLAS System Implementation</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>QuickTime and a TIFF (LZW) decompressor</p>
    <p>are needed to see this picture.</p>
    <p>QuickTime and a TIFF (Uncompressed) decompressor</p>
    <p>are needed to see this picture.</p>
    <p>Chip Multi-Processor (CMP) is NOW</p>
    <p>Increased Transistor budgets</p>
    <p>Scalable Performance w/o power and complexity challenge</p>
    <p>Diminishing return from single-core chips</p>
    <p>Most of processor vendors are toward CMPs</p>
  </div>
  <div class="page">
    <p>How to program the CMP?</p>
    <p>Conventional Parallel Programming is Difficult</p>
    <p>Fine-grain locking for the high performance</p>
    <p>Error-prone (Deadlock / Livelock)</p>
    <p>Transactional Memory (TM) makes it easier</p>
    <p>Program with large atomic regions</p>
    <p>Keep the performance of fine-grained locking</p>
    <p>TM has been studied actively from academia &amp; industry</p>
    <p>One Missing Piece:</p>
    <p>Nobody made a real system with TM support</p>
    <p>Fast platform to develop applications</p>
  </div>
  <div class="page">
    <p>ATLASs Contributions</p>
    <p>The First Hardware Prototype</p>
    <p>8-way CMP with TM support (TCC Protocol)</p>
    <p>Full system support powered by one separate service processor running Linux OS</p>
    <p>The First Evaluation of TM on the real system</p>
    <p>TM application scales well on ATLAS as promised</p>
    <p>Fast Software Development Platform</p>
    <p>Runs on 100MHz Real Hardware</p>
    <p>Runtime Performance Profiler</p>
    <p>Guided Performance Tuning</p>
  </div>
  <div class="page">
    <p>Transactional Memory Overview Transaction:</p>
    <p>A building block of a program</p>
    <p>A Critical Region</p>
    <p>Executed Atomically and Isolated</p>
    <p>Programmer wraps it with TM API</p>
    <p>Rely on Optimistic Concurrency</p>
    <p>Optimistic Concurrent Execution</p>
    <p>assumes that data conflict happens</p>
    <p>rarely in the runtime</p>
  </div>
  <div class="page">
    <p>TCC Execution Model</p>
    <p>CPU 0 CPU 1 CPU 2</p>
    <p>Commit</p>
    <p>Abort</p>
    <p>Execute</p>
    <p>Code</p>
    <p>Execute</p>
    <p>Code</p>
    <p>Execute</p>
    <p>Code</p>
    <p>ld 0xbeef Re</p>
    <p>Execute</p>
    <p>Code</p>
    <p>...</p>
    <p>ld 0xaaaa</p>
    <p>ld 0xbbbb</p>
    <p>...</p>
    <p>ld 0xbeef</p>
    <p>...</p>
    <p>...</p>
    <p>st 0xbeef</p>
    <p>...</p>
    <p>ld 0xdddd</p>
    <p>ld 0xeeee</p>
    <p>...</p>
    <p>Commit</p>
  </div>
  <div class="page">
    <p>ATLAS Implementation</p>
    <p>Requirements</p>
    <p>Read Set &amp; Write Set Buffer</p>
    <p>Conflict Detection</p>
    <p>Transaction Checkpoint to Rollback</p>
    <p>ATLAS Implementation</p>
    <p>Modified L1 Data Cache for Read Set &amp; Write Set Buffer</p>
    <p>Modified L1 Snooping Hardware for Conflict Detection</p>
    <p>Special Memory for the Register Checkpoint to Rollback</p>
    <p>Issue</p>
    <p>PowerPC 405 hardcore processor on Xilinx Virtex 2 Pro FPGA</p>
    <p>Fast, stable, and abundant software support.</p>
    <p>Disabled internal D-Cache  13 cycles cache hit latency.</p>
  </div>
  <div class="page">
    <p>L1 Cache with TCC support</p>
    <p>Transactionally Read Bits:</p>
    <p>ld 0xdeadbeef</p>
    <p>Transactionally Written Bits:</p>
    <p>st 0xcafebabe</p>
    <p>Violation Detection:</p>
    <p>Compare incoming</p>
    <p>address to R bits</p>
    <p>Commit:</p>
    <p>Read pointers from Store</p>
    <p>Address FIFO, flush</p>
    <p>addresses with W bits set</p>
    <p>Overflow of</p>
    <p>Transactional buffer :</p>
    <p>Serialize the system</p>
  </div>
  <div class="page">
    <p>ATLAS Architectural View</p>
    <p>TCC</p>
    <p>PPC 0</p>
    <p>TCC</p>
    <p>PPC 1</p>
    <p>TCC</p>
    <p>PPC 7</p>
    <p>Main</p>
    <p>Memory Peripherals</p>
    <p>Shared Bus</p>
    <p>Linux</p>
    <p>PPC</p>
    <p>System Support Channel</p>
  </div>
  <div class="page">
    <p>ATLAS Hardware Mapping</p>
    <p>TCC</p>
    <p>PPC 0</p>
    <p>TCC</p>
    <p>PPC 1</p>
    <p>Main</p>
    <p>Memory Peripherals</p>
    <p>Linux</p>
    <p>PPC</p>
    <p>TCC</p>
    <p>PPC 2</p>
    <p>TCC</p>
    <p>PPC 3</p>
    <p>TCC</p>
    <p>PPC 4</p>
    <p>TCC</p>
    <p>PPC 5</p>
    <p>TCC</p>
    <p>PPC 6</p>
    <p>TCC</p>
    <p>PPC 7</p>
    <p>User Switch</p>
    <p>Control Switch</p>
    <p>User Switch</p>
    <p>User Switch</p>
    <p>User Switch</p>
    <p>Control</p>
    <p>FPGA</p>
    <p>User</p>
    <p>FPGA</p>
    <p>User</p>
    <p>FPGA</p>
    <p>User</p>
    <p>FPGA</p>
    <p>User</p>
    <p>FPGA</p>
  </div>
  <div class="page">
    <p>Mapping ATLAS on the BEE2</p>
    <p>User</p>
    <p>FPGA</p>
    <p>User</p>
    <p>FPGA</p>
    <p>User</p>
    <p>FPGA</p>
    <p>Ctrl</p>
    <p>FPGA</p>
    <p>User</p>
    <p>FPGA</p>
    <p>Xilinx XC2VP70</p>
    <p>24% LUTS and 10% BRAMs</p>
    <p>IBM PowerPC 405 @ 300MHz</p>
    <p>16KB 2-way I-Cache &amp; D-Cache</p>
    <p>512 MB DDR2 DRAM @ 200MHz</p>
    <p>10/100M bps Ethernet, RS232 UART, 512 MB Compact Flash</p>
    <p>MontaVista 3.1 Linux (kernel v2.4.30)</p>
    <p>Xilinx XC2VP70</p>
    <p>26% LUTS and 32% BRAMs</p>
    <p>IBM PowerPC 405 @ 100MHz</p>
    <p>16KB 2-way I-Cache</p>
    <p>Disabled internal D-Cache</p>
    <p>32KB 4-way D-Cache w/ TCC Support</p>
    <p>Interchip Link</p>
    <p>100MHz</p>
  </div>
  <div class="page">
    <p>TM Application</p>
    <p>TM API ATLAS Profiler</p>
    <p>ATLAS Subsystem</p>
    <p>Linux OS</p>
    <p>ATLAS HW on BEE2</p>
    <p>ATLAS Software Stack</p>
    <p>TM Application can be easily written with TM API.</p>
    <p>ATLAS Profiler provides a runtime profiling and guided performance tuning.</p>
    <p>ATLAS subsystem provides Linux OS support for the TM application.</p>
  </div>
  <div class="page">
    <p>Commit</p>
    <p>ATLAS Subsystem Routine</p>
    <p>Linux</p>
    <p>PPC</p>
    <p>TCC</p>
    <p>PPC0</p>
    <p>Transfers</p>
    <p>initial context</p>
    <p>TCC</p>
    <p>PPC1</p>
    <p>TCC</p>
    <p>PPC2</p>
    <p>TCC</p>
    <p>PPC7</p>
    <p>Invokes</p>
    <p>parallel work</p>
    <p>Joins</p>
    <p>parallel work</p>
    <p>Exit with</p>
    <p>app. stats</p>
    <p>Violation</p>
  </div>
  <div class="page">
    <p>TCC PPC requests OS</p>
    <p>support.</p>
    <p>(TLB miss, system call)</p>
    <p>Linux PPC</p>
    <p>replies back to</p>
    <p>the requestor.</p>
    <p>Linux PPC</p>
    <p>regenerates</p>
    <p>and</p>
    <p>services the</p>
    <p>request.</p>
    <p>ATLAS Full System Support</p>
    <p>Serialize for irrevocable requests.</p>
    <p>System Call</p>
    <p>Page-out</p>
    <p>Linux</p>
    <p>PPC</p>
    <p>TCC</p>
    <p>PPC</p>
  </div>
  <div class="page">
    <p>ATLAS Runtime Profiler</p>
    <p>TM Applications Performance Tuning point</p>
    <p>Reduce Violation due to the data conflict</p>
    <p>Reduce Serialization due to the speculative buffer overflow</p>
    <p>It is inspired by TAPE</p>
    <p>It records</p>
    <p>Most Significant Violations</p>
    <p>Data address, Occurrence count, PC of the data access, Violator transaction, Wasted clock cycle.</p>
    <p>Most Significant Overflows</p>
    <p>Data address, Occurrence count, PC of the data access, Serialized clock cycle.</p>
  </div>
  <div class="page">
    <p>Evaluation: Speedup  ATLAS shows that TM scales well with most of</p>
    <p>benchmarks.</p>
    <p>vacation</p>
    <p>radix</p>
    <p>mp3d ocean</p>
    <p>hashtable</p>
    <p>Number of Processors</p>
    <p>S p e e d u p</p>
    <p>Some applications inherently does not perfectly scale.  hashtable : Poor Locality</p>
    <p>Mp3d: Data Dependency</p>
  </div>
  <div class="page">
    <p>Evaluation: Visibility</p>
    <p>ATLAS provides easier way of application analysis.</p>
    <p>It matches well with our in-house software simulator.</p>
    <p>100x Faster than the software simulator.</p>
    <p>radix vacation mp3d hashtable ocean</p>
    <p>Useful L1 Miss Commit Idle Violations</p>
    <p>Applications</p>
    <p>with 1/2/4/8 processor configuration</p>
    <p>E x e c u ti o n T im e B re a k d o w n</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>ATLAS is the first full-system prototype of a CMP with hardware transactional memory support.</p>
    <p>ATLAS shows that TM parallel program results good speedup performance.</p>
    <p>ATLAS provides fast software development platform with runtime performance profiling and guided tuning.</p>
  </div>
  <div class="page">
    <p>Your comments and questions are welcomed.</p>
    <p>tcc_fpga_xtreme@mailman.stanford.edu</p>
    <p>Thank You</p>
  </div>
</Presentation>
