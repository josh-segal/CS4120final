<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Thomas R. Magrino, Ronald L. Rivest</p>
    <p>Emily Shen, David Wagner</p>
    <p>EVT/WOTE 2011</p>
    <p>San Francisco, CA</p>
  </div>
  <div class="page">
    <p>Voters rank (a subset of) candidates by</p>
    <p>preference.</p>
    <p>In the US, used mostly for local elections.</p>
    <p>Sometimes called Ranked Choice Voting.</p>
  </div>
  <div class="page">
    <p>Round 1 Round 2 Round 3 Round 4</p>
    <p>G. Washington 72</p>
    <p>T. Jefferson 100</p>
    <p>J. Adams 43</p>
    <p>B. Franklin 12</p>
    <p>+12</p>
    <p>-12</p>
    <p>+33</p>
    <p>-43</p>
    <p>-110</p>
    <p>Count each ballot</p>
    <p>towards its most</p>
    <p>preferred eligible</p>
    <p>candidate.</p>
    <p>Remove the</p>
    <p>candidate with</p>
    <p>the fewest votes.</p>
    <p>Is there only one</p>
    <p>candidate left?</p>
    <p>No</p>
    <p>We</p>
    <p>have our</p>
    <p>winner!</p>
    <p>Yes</p>
    <p>Runoff</p>
  </div>
  <div class="page">
    <p>The minimum number of ballots such that,</p>
    <p>if they were marked differently, a different</p>
    <p>candidate would win.</p>
  </div>
  <div class="page">
    <p>For the classic first-past-the-post election:</p>
    <p>half the difference in votes for the top two</p>
    <p>candidates.</p>
    <p>For IRV, it doesn't seem like theres a</p>
    <p>simple solution.</p>
  </div>
  <div class="page">
    <p>Below is the election summary for the 2008 contest for County Assessor in Pierce County, WA.</p>
    <p>1111 Ballots. It is not very obvious!</p>
    <p>Round1 Round 2 Round 3 Round 4 Round 5 Round 6</p>
    <p>Dale Washam 65676 65706 68337 71998 82490 98366</p>
    <p>Barbara Gelman 49874 49897 52131 60007 73647 91067</p>
    <p>Terry Lee 50278 50309 53696 58523 70209</p>
    <p>Jan Shabro 50023 50036 53580 58247</p>
    <p>Beverly Davidson 27340 27364 29248</p>
    <p>Bernardo Tuma 18205 18221</p>
    <p>Write-In 1051</p>
  </div>
  <div class="page">
    <p>The margin of victory is a</p>
    <p>surprisingly useful quantity.</p>
    <p>How close an election was.</p>
  </div>
  <div class="page">
    <p>The margin of victory is a surprisingly</p>
    <p>useful quantity.</p>
    <p>Necessary to conduct efficient post</p>
    <p>election audits.</p>
    <p>Margin of victory is inversely related to the</p>
    <p>sample size in a risk limiting audit.</p>
  </div>
  <div class="page">
    <p>We want an algorithm for finding the exact</p>
    <p>margin of victory for a given IRV election.</p>
    <p>Ideally it should be relatively efficient if we</p>
    <p>are to use the value for auditing.</p>
  </div>
  <div class="page">
    <p>Ballot signature: A list of candidates ordered by the preferences indicated on a ballot.</p>
    <p>(C, D, A, B) represents a ballot with the following rankings:</p>
  </div>
  <div class="page">
    <p>Election profile: The observed counts of</p>
    <p>each ballot signature in an IRV election.</p>
    <p>Represented by a table like below.</p>
    <p>Ballot Signature Count</p>
    <p>(Alice, Cass, Bob) 12</p>
    <p>(Bob, Alice, Cass) 6</p>
    <p>(Cass, Bob, Alice) 7</p>
  </div>
  <div class="page">
    <p>Elimination order: A list of candidates</p>
    <p>ordered by the rounds they are eliminated</p>
    <p>in.</p>
    <p>[Dan, Alice, Cass, Bob]  Dan was eliminated first.</p>
    <p>Bob would be the winner of this election.</p>
  </div>
  <div class="page">
    <p>Initial idea: Approach the problem by</p>
    <p>considering all alternative elimination</p>
    <p>orders for the set of candidates (such that</p>
    <p>someone else wins).</p>
    <p>Original Election with</p>
    <p>Elimination Order:</p>
    <p>[Cass, Alice, Bob]</p>
    <p>Bob Wins</p>
    <p>[Alice, Bob, Cass]</p>
    <p>[Bob, Alice, Cass]</p>
    <p>Cass Wins</p>
    <p>[Cass, Bob, Alice]</p>
    <p>[Bob, Cass, Alice]</p>
    <p>Alice Wins</p>
  </div>
  <div class="page">
    <p>We'll call the number of ballots to achieve a</p>
    <p>given alternative elimination order the</p>
    <p>distanceTo that elimination order.</p>
    <p>Finding the margin of victory is equivalent</p>
    <p>to finding the alternative with the smallest</p>
    <p>distanceTo it.</p>
  </div>
  <div class="page">
    <p>We can use an integer linear program to</p>
    <p>model the problem of finding the</p>
    <p>distanceTo an alternative.</p>
    <p>The exact setup for the integer linear</p>
    <p>program is described in the paper.</p>
  </div>
  <div class="page">
    <p>Margin of Victory = 35</p>
    <p>distanceTo= 41</p>
    <p>distanceTo= 86</p>
    <p>distanceTo= 46</p>
    <p>distanceTo= 35</p>
    <p>Original Election with</p>
    <p>Elimination Order:</p>
    <p>[Cass, Alice, Bob]</p>
    <p>[Alice, Bob, Cass]</p>
    <p>[Bob, Alice, Cass]</p>
    <p>[Cass, Bob, Alice]</p>
    <p>[Bob, Cass, Alice]</p>
  </div>
  <div class="page">
    <p>So the basic algorithm is:</p>
    <p>For each alternative elimination order:</p>
    <p>find distanceTo the alternative</p>
    <p>return minimum distanceTo observed</p>
  </div>
  <div class="page">
    <p>This works!</p>
    <p>But it is very slow.  Integer linear programs can be slow to solve in</p>
    <p>the general case.</p>
    <p>For an election with m candidates, there will be</p>
    <p>(m-1)(m-1)! elimination orders with an alternative</p>
    <p>winner.</p>
  </div>
  <div class="page">
    <p>We want to avoid finding</p>
    <p>the distanceTo every</p>
    <p>possible alternative.</p>
    <p>If we were able to lower</p>
    <p>bound the distanceTo</p>
    <p>values for groups of</p>
    <p>alternatives, we can avoid</p>
    <p>the groups with lower</p>
    <p>bounds larger than our</p>
    <p>current answer.</p>
    <p>B Wins</p>
    <p>C Wins</p>
  </div>
  <div class="page">
    <p>Were rigging the</p>
    <p>elimination order to be</p>
    <p>[B, C, , A].</p>
    <p>Let's assume we've</p>
    <p>already modified the</p>
    <p>ballots cast to achieve</p>
    <p>this.</p>
    <p>We sit back and watch</p>
    <p>our evil plan unfold.</p>
  </div>
  <div class="page">
    <p>Were rigging the elimination order to be [B, C, , A].</p>
    <p>Suddenly, we hear that B has become ineligible. All mentions of B are crossed off ballots.</p>
    <p>Is our nefarious plan ruined?</p>
  </div>
  <div class="page">
    <p>Were rigging the elimination order to be [B, C, , A].</p>
    <p>Suddenly, we hear that B has become ineligible. All mentions of B are crossed off ballots.</p>
    <p>Is our nefarious plan ruined?</p>
    <p>No! B was going to be eliminated first anyway. Our plan is unaffected!  All of the ballots will be counted as if the first round had already</p>
    <p>happened according to plan.  Had we known earlier, it is possible we could have changed fewer</p>
    <p>ballots.</p>
  </div>
  <div class="page">
    <p>Consider the reverse situation.</p>
    <p>Start with an elimination order [C, D, A, B]</p>
    <p>and find the distanceTo it, as if all other</p>
    <p>candidates became ineligible.</p>
    <p>This will lower bound the distanceTo any</p>
    <p>elimination order [*, C, D, A, B].</p>
  </div>
  <div class="page">
    <p>Can solve for the margin of victory by searching through a tree of alternative elimination orders.</p>
    <p>Prioritize the search based on the lower bounds computed at each internal node.</p>
    <p>We stop searching once we've either ruled out or explored every leaf.</p>
    <p>Ideally we will avoid exploring large parts of the tree this way.</p>
  </div>
  <div class="page">
    <p>Consider the election</p>
    <p>profile:</p>
    <p>Elimination order was</p>
    <p>[Bob, Cass, Alice]</p>
    <p>Ballot Signature Count</p>
    <p>(Alice, Cass, Bob) 12</p>
    <p>(Bob, Alice, Cass) 6</p>
    <p>(Cass, Bob, Alice) 7</p>
    <p>[*]</p>
    <p>[Cass, Alice, Bob] = 1</p>
    <p>[*, Alice, Bob]  0</p>
    <p>[*, Cass, Bob]  7</p>
    <p>[*, Bob]  0</p>
    <p>[*, Cass]  0</p>
    <p>[Alice, Bob, Cass] = 4</p>
    <p>[*, Alice, Cass]  6</p>
    <p>[*, Bob, Cass]  0</p>
  </div>
  <div class="page">
    <p>The paper talks about some additional</p>
    <p>steps we took to improve this approach.  Reducing the number of variables in each integer</p>
    <p>linear program.</p>
    <p>Heuristically using additional values to choose</p>
    <p>between two elimination orders with equal priority.</p>
  </div>
  <div class="page">
    <p>Using these ideas, we have developed a</p>
    <p>branch-and-bound algorithm for</p>
    <p>determining the margin of victory in an IRV</p>
    <p>election.</p>
    <p>This solution is not guaranteed to run</p>
    <p>efficiently, but we will see that it is pretty</p>
    <p>fast in practice.</p>
  </div>
  <div class="page">
    <p>We ran our algorithm on 25 different IRV races in the US.</p>
    <p>Successfully computed margins for 24 of the elections in a reasonable amount of time.</p>
    <p>The time to compute the margin was generally determined by the number of candidates.  The elections we computed margins for included</p>
    <p>between 2 and 11 candidates.  The election we did not compute a margin for had 18</p>
    <p>candidates.</p>
  </div>
  <div class="page">
    <p>Significant improvement over the unoptimized version.  The Pierce County race from earlier took a little over</p>
    <p>The new version took around 5 seconds.</p>
    <p>Most elections took under 3 minutes to compute a margin.</p>
    <p>All of the margins computed took less than 2 hours.</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>We presented an algorithm for calculating the margin of victory in IRV elections.</p>
    <p>This method was used to calculate the margin of victory for 24 IRV elections in the US.</p>
    <p>Our evaluation showed that the algorithm completes in a reasonable amount of time in most cases.</p>
  </div>
  <div class="page">
    <p>Thank You</p>
  </div>
</Presentation>
