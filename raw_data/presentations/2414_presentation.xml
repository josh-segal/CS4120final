<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>DOLLY: Virtualization-Driven Database Provisioning for the</p>
    <p>Cloud</p>
    <p>Emmanuel Cecchet Joint work with Rahul Singh, Upendra Sharma and Prashant Shenoy</p>
    <p>VEE 2011 paper available at: http://lass.cs.umass.edu/papers.html</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>PROVISIONING IN THE CLOUD</p>
    <p>Virtualization  No shared disk  Provisioning based on volume and machine load</p>
    <p>Internet Frontend/ Load balancer</p>
    <p>Databases</p>
    <p>Provisioning logic</p>
    <p>App. Servers</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>WHY IS IT HARD TO ADD A DB REPLICA?</p>
    <p>Administration issues  Install/setup new database  Backup/Restore database content  Configure new replica  Synchronize live content</p>
    <p>How much time does it take?  Depends on the database size  Depends on the backup/restore technique  From minutes to hours</p>
    <p>Dolly: VM cloning to blackbox the database</p>
  </div>
  <div class="page">
    <p>Dolly</p>
    <p>Database replication in the Cloud</p>
    <p>Provisioning with Dolly  Prototype &amp; Evaluation</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>SPAWNING A REPLICA</p>
    <p>Multi-master middleware-based replication  Three main phases</p>
    <p>Backup  Restore  Replay</p>
    <p>DB1 new</p>
    <p>replica DB2</p>
    <p>Client SQL requests</p>
    <p>Replication middleware</p>
    <p>Transactional log</p>
    <p>Load balancer</p>
    <p>Management console</p>
    <p>replica</p>
    <p>snapshot backup</p>
    <p>resynchronize</p>
    <p>restore3</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>SPAWNING A REPLICA WITH CLONING</p>
    <p>Backup &amp; Restore replace by VM cloning</p>
    <p>DB1 DB2</p>
    <p>Client SQL requests</p>
    <p>Replication middleware</p>
    <p>Transactional log</p>
    <p>Load balancer</p>
    <p>Management console</p>
    <p>replica</p>
    <p>VM1</p>
    <p>OS VM2</p>
    <p>OS</p>
    <p>clone</p>
    <p>DB2</p>
    <p>VM3</p>
    <p>OS</p>
    <p>clone3 DB2</p>
    <p>VM3</p>
    <p>OS</p>
    <p>resynchronize</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>CLONING: BACKUP/RESTORE IN CONSTANT TIME</p>
    <p>Database DB size on disk</p>
    <p>DB Backup Restore</p>
    <p>Dolly 4GB VM cloning</p>
    <p>Dolly 16GB VM</p>
    <p>cloning RUBiS ci 1022MB 843s 281s 899s RUBiS +c+bi 1.4GB 5761s 282s 900s RUBiS +c+fi 1.5GB 6017s 280s 900s TPC-W 684MB 288s 275s 905s TPC-H 1GB 1.8GB 1477s 271s 918s TPC-H 10GB</p>
    <p>Filesystem snapshot/copy is DB agnostic  Only depends on VM size</p>
  </div>
  <div class="page">
    <p>Dolly</p>
    <p>Database replication in the Cloud</p>
    <p>Provisioning with Dolly  Prototype &amp; Evaluation</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>MODELING SPAWNING TIME</p>
    <p>Predictable backup and restore times are required</p>
    <p>Replay time can be estimated from current write throughput (wt)</p>
    <p>timebackup restore replay</p>
    <p>bi ri</p>
    <p>updates</p>
    <p>replica spawning time</p>
    <p>max max max</p>
    <p>. . .t t ti i w w w</p>
    <p>b r w w w</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>WHEN TO SNAPSHOT?</p>
    <p>Time to spawn from a live replica</p>
    <p>Time to spawn from an existing snapshot</p>
    <p>Faster to take a new snapshot j to spawn a new replica than using old snapshot i if:</p>
    <p>backupj+restorej&lt;restorei +replayi</p>
    <p>max max</p>
    <p>i i t</p>
    <p>w s b r</p>
    <p>w w</p>
    <p>max max</p>
    <p>i i t</p>
    <p>w s r replay</p>
    <p>w w</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>DOLLY OVERVIEW</p>
    <p>Input  capacity</p>
    <p>prediction  write prediction</p>
    <p>Output  schedule of</p>
    <p>snapshots  schedule of replica</p>
    <p>spawning  admission control if</p>
    <p>needed</p>
    <p>Predictors</p>
    <p>Capacity Provisioning</p>
    <p>Spawning options</p>
    <p>Admission Control Management API</p>
    <p>Scheduler</p>
    <p>start/stop clone/ snapshot</p>
    <p>Monitoring</p>
    <p>write throttling/ read throttling</p>
    <p>Dolly</p>
    <p>Snapshot scheduler</p>
    <p>write predictions capacity predictions</p>
    <p>Paused pool cleaner</p>
    <p>Free pool Manager</p>
    <p>delete VM/ snapshot</p>
    <p>HA adjuster</p>
    <p>Write throttling</p>
    <p>reclaim</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>PROVISIONING REPLICAS</p>
    <p>Workload prediction</p>
    <p>Capacity prediction</p>
    <p>Write prediction</p>
    <p>Dolly does not provide predictors  Dolly can work with any predictor (see</p>
    <p>[Eurosys09])</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>CLOUD COST FUNCTIONS</p>
    <p>Adapt the provisioning decisions to the cloud platform specifics</p>
    <p>Cost can be $ on public cloud or time on private cloud</p>
    <p>Cost function name Definition</p>
    <p>pause_cost(VM, t) cost of pausing VM at time t</p>
    <p>spawn_cost(s, t, d) cost to spawn a replica from snapshot s at time t to meet deadline d</p>
    <p>spawn_cost(VM, t, d) cost to spawn a replica from a paused VM at time t to meet deadline d</p>
    <p>running_cost(VM,t1,t2) cost to run a VM from time t1 to time t2</p>
    <p>pause_resume_cost(VM, t1, t2) cost to pause a VM at time t1 and resume it at time t2</p>
    <p>backup_paused_cost(VM) cost to backup a paused VM</p>
    <p>backup_live_cost(VM, t) cost to backup an active VM at time t</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>PROVISIONING REPLICAS</p>
    <p>Parse capacity provisioning predictions  Decrease capacity by pausing VMs  Increasing capacity</p>
    <p>Check if we can reuse a paused VM  Check if we can spawn from an existing</p>
    <p>snapshot  Choose cheapest options according to spawn_cost function</p>
    <p>Perform admission control if all replicas cannot be provisioned in time</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>SNAPSHOT SCHEDULING</p>
    <p>How to snapshot?  Clone a paused VM  Pause an active VM to clone it</p>
    <p>When to snapshot?  At time j when backupj+restorej&lt;restorei</p>
    <p>+replayi  If new snapshot is scheduled, re-run capacity</p>
    <p>provisioning</p>
    <p>Prediction window must have minimum size</p>
  </div>
  <div class="page">
    <p>Dolly</p>
    <p>Database replication in the Cloud</p>
    <p>Provisioning with Dolly  Prototype &amp; Evaluation</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>IMPLEMENTATION</p>
    <p>C-JDBC/Sequoia replication middleware</p>
    <p>OpenNebula Cloud management middleware</p>
    <p>Cost functions  private cloud: minimize</p>
    <p>resource utilization time  Amazon EC2: minimize</p>
    <p>cost</p>
    <p>OpenNebula</p>
    <p>TPC-W load injector</p>
    <p>Scheduler</p>
    <p>Recovery Log Log table</p>
    <p>Dump table</p>
    <p>JMX Management API</p>
    <p>Backupers</p>
    <p>Dolly OpenNebula</p>
    <p>DB1 DB2 DB3</p>
    <p>SQL requests add/remove replica snapshot/pause/</p>
    <p>VM1</p>
    <p>OS VM2</p>
    <p>OS VM3</p>
    <p>OS</p>
    <p>New replica</p>
    <p>VM5</p>
    <p>OS</p>
    <p>DB3 snapshot</p>
    <p>VMclone</p>
    <p>OS</p>
    <p>Load balancer</p>
    <p>New replica</p>
    <p>VM4</p>
    <p>OS</p>
    <p>Sequoia controller</p>
    <p>predictions</p>
    <p>Sequoia driver</p>
    <p>admission control</p>
    <p>Backup server or NAS</p>
    <p>start/stop/ clone/</p>
    <p>clone clone</p>
    <p>Dolly Private EC2</p>
    <p>write throttling</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>IMPLEMENTATION  COST FUNCTIONS</p>
    <p>Private cloud: minimize resource utilization  Amazon EC2: minimize cost</p>
    <p>Cost function name Private Cloud EC2 pause_cost(VM, t) return 1/VM-&gt;machine-&gt;temp return 60-((t-VM-&gt;start)%60)</p>
    <p>spawn_cost(s, t, d) return d-t comp$=(d-t)/60*hour$ io$=EBS_storage$*s-&gt;size + EBS_io$* (s-&gt;restore_io+s-&gt;replay_io) return comp$+io$</p>
    <p>spawn_cost(VM, t, d) return d-t comp$=(d-t)/60*hour$ io$= EBS_io$* (s-&gt;resume_io+s-&gt;replay_io) return comp$+io$</p>
    <p>running_cost(VM,t1,t2) return 1 (t2-t1)/60*hour$</p>
    <p>pause_resume_cost(VM, t1, t2)</p>
    <p>if (t2-t1 &gt; VM-&gt;pause + VM-&gt;resume) return 0 else return 2</p>
    <p>io$= EBS_io$* (VM-&gt;pause_io+VM-&gt;resume_io) comp$=(60-(VM-&gt;stop-VM-&gt;start) %60)/60*hour$ return io$+ comp$</p>
    <p>backup_paused_cost(VM) return backup_time return S3_storage$*s-&gt;size</p>
    <p>backup_live_cost(VM, t) return VM-&gt;pause + backup_time + VM-&gt;resume</p>
    <p>return pause_cost(VM, t)$+ S3_storage$*s-&gt;size + (VM-&gt;stop_io+VM-&gt;start_io)* EBS_io$</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>WORKLOAD DESCRIPTION</p>
    <p>TPC-W online bookstore e-commerce benchmark  Snapshot s0 available at t0</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>Overprovisioning with 6 replicas  1h snapshot</p>
    <p>Cost MRM</p>
    <p>Private cloud 720m 0</p>
    <p>Amazon EC2 $8.39 0</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>Reactive provisioning  2h snapshot Cost MRM</p>
    <p>Private cloud 410m 42.1</p>
    <p>Amazon EC2 $4.61 41.5</p>
    <p>replica spawning triggered here</p>
    <p>replicas available</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>Dolly  30m Prediction Window</p>
    <p>Cost MRM</p>
    <p>Private cloud 352m 0</p>
    <p>Amazon EC2 $3.73 0</p>
    <p>Private Cloud Amazon EC2</p>
    <p>s1 s2 cheaper to leave instances online</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>CONCLUSION</p>
    <p>VM cloning Solves administration issues by</p>
    <p>blackboxing the database Constant time backup/restore needed to</p>
    <p>predict replica spawning time  New provisioning algorithm</p>
    <p>Decouples capacity provisioning from snapshot scheduling</p>
    <p>Cost functions to optimize for cloud platform specifics</p>
    <p>VEE 2011 paper available at: http://lass.cs.umass.edu/papers.html</p>
  </div>
  <div class="page">
    <p>BONUS SLIDES</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>Reactive provisioning  15m snapshot Cost MRM</p>
    <p>Private cloud 381m42s 17.5</p>
    <p>Amazon EC2 $18.29 27.2</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>Reactive provisioning  1h snapshot Cost MRM</p>
    <p>Private cloud 360m30s 25.8</p>
    <p>Amazon EC2 $5.00 33.7</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>Dolly  10m Prediction Window</p>
    <p>Cost MRM</p>
    <p>Private cloud 381m54s 0</p>
    <p>Amazon EC2 $7.16 0</p>
    <p>Private Cloud Amazon EC2</p>
    <p>s1 s2 s1 s2</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>SPAWNING IN A PUBLIC CLOUD</p>
    <p>Storage decoupled from computing resource  Starting a new instance clones the volume</p>
    <p>DB1</p>
    <p>Vol1</p>
    <p>OS</p>
    <p>DB1</p>
    <p>Vol1</p>
    <p>OS</p>
    <p>stop snapshot DB2</p>
    <p>Vol2</p>
    <p>OS register</p>
    <p>DB2</p>
    <p>Vol2</p>
    <p>OSrestart</p>
    <p>DB1</p>
    <p>Vol1</p>
    <p>OS</p>
    <p>DB2</p>
    <p>Vol3</p>
    <p>OS</p>
    <p>DB2</p>
    <p>Vol4</p>
    <p>OS</p>
    <p>start</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>BACKUP/RESTORE TECHNIQUES</p>
    <p>Database native tools Vendor specific or 3rd party ETL Understand database semantics</p>
    <p>Filesystem copy Low-level data copy Need to know what to copy</p>
    <p>VM cloning Copies database content + configuration</p>
    <p>+ OS Unused space can be compressed</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>DATABASE SIZES Benchmark DB size Snapshot size VM size</p>
    <p>RUBiS</p>
    <p>MyISAM no constraint 836MB</p>
    <p>MyISAM w/ constraints 1.1GB</p>
    <p>MyISAM w/ constraint &amp; index</p>
    <p>InnoDB no constraint 1022MB</p>
    <p>InnoDB w/ constraints 1.4GB</p>
    <p>InnoDB w/ constraint &amp; index</p>
    <p>TPC-W PostgreSQL binary dump</p>
    <p>TPC-H scale</p>
    <p>PostgreSQL binary dump</p>
    <p>PostgreSQL sql dump 1.2GB</p>
    <p>TPC-H scale</p>
    <p>PostgreSQL binary dump 12GB</p>
    <p>PostgreSQL sql dump 7.3GB</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>BACKUP/RESTORE PERFORMANCE (1/3)</p>
    <p>Performance depends on database content</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>BACKUP/RESTORE PERFORMANCE (2/3)</p>
    <p>File copy is the most effective for small databases</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>BACKUP/RESTORE PERFORMANCE (3/3)</p>
    <p>VM cloning most effective on large databases</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>BACKUP/RESTORE SUMMARY</p>
    <p>Feature DB Backup/</p>
    <p>Restore Filesystem</p>
    <p>Copy VM</p>
    <p>Cloning</p>
    <p>Database specific knowledge</p>
    <p>Medium Very high None</p>
    <p>Performance Slow Fastest Fast</p>
    <p>Snapshot size Small DB size VM size</p>
    <p>Spawning time predictability</p>
    <p>Hard Moderate Easy</p>
    <p>Database installation Moderate Moderate None</p>
    <p>Database configuration Hard Hard None</p>
    <p>Missing data in transfer Possible Unlikely No</p>
    <p>Spawning atomicity No No Yes</p>
    <p>Resynchronization limitations</p>
    <p>Yes Yes Yes</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>DOLLY MAIN ALGORITHM</p>
    <p>Capacity provisioning depends on available snapshots  Snapshots scheduled according to capacity demand  Decouple capacity provisioning from snapshot scheduling</p>
    <p>if (predictor.capacity_changes || predictor.write_workload_changes) { do { schedule = capacity_provisioning(predictions) snapshot_schedule = snapshot_scheduling(predictions) } while (snapshot_schedule schedules new snapshots) scheduler.schedule(snapshot_schedule) scheduler.schedule(capacity_schedule) } if (time since last operation &gt; threshold) { paused_pool_cleaner.release_old_paused_vms(); paused_pool_cleaner.delete_old_snapshots(); }</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>RELEASING RESOURCES</p>
    <p>Paused VMs  VM never re-used if cost to resume &gt; cost to</p>
    <p>spawn from last snapshot  Snapshots</p>
    <p>Old snapshots can be released based on cost to keep them around</p>
    <p>Free server pool  Can reclaim servers with paused VMs when pool</p>
    <p>is empty</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>TPC-W EVALUATION</p>
    <p>Multi-tier online bookstore benchmark  4GB VM for the database  Large EC2 instances from EBS volumes with CloudWatch</p>
    <p>Operation Private Cloud Public Cloud (EC2)</p>
    <p>start VM 42s 220s</p>
    <p>pause VM 26s 30s</p>
    <p>resume VM 42s 30s</p>
    <p>backup (stop/clone) 150s 320s</p>
    <p>restore (clone/start) 165s 220s</p>
    <p>w max</p>
    <p>Avg IOs per write 15 13</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>PHASE 1  CAPACITY PROVISIONING</p>
    <p>Pause VMs when capacity decreases  Resume VMs when capacity increases  Spawn VMs from snapshot when additional capacity</p>
    <p>required  Not cost effective to pause VMs for less than 1 hour with</p>
    <p>EC2Deadline Private Cloud EC2 d</p>
    <p>d 2</p>
    <p>Pause v 3</p>
    <p>d 3</p>
    <p>Resume v 3 @ d</p>
    <p>Resume v 4 @ d</p>
    <p>Spawn v 5 from s</p>
    <p>d 4</p>
    <p>Pause v 1 ,v</p>
    <p>d 5</p>
    <p>Resume v 1 ,v</p>
    <p>Spawn v 6 from s</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>PHASE 2  SNAPSHOT SCHEDULING</p>
    <p>Faster (but more costly) to spawn a new replica and take a new snapshot from it to spawn 3 replicas at d3</p>
    <p>Faster to snapshot paused VM and spawn replica from it for d5</p>
    <p>Cost of volume storage on EC2 more expensive than IO cost</p>
    <p>Deadline Private Cloud EC2</p>
    <p>d 3</p>
    <p>Spawn replica v 5 at d</p>
    <p>d 5</p>
    <p>Snapshot s 2 from paused v</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>PHASE 3  CAPACITY PROVISIONING</p>
    <p>Schedule new replica spawning using new snapshots  Next snapshot scheduling does not generate new</p>
    <p>snapshots and the algorithm terminates</p>
    <p>Deadline Private Cloud</p>
    <p>d 1</p>
    <p>Pause v 4</p>
    <p>d 2</p>
    <p>Pause v 3</p>
    <p>d 3</p>
    <p>Resume v 5 @ d</p>
    <p>Spawn v 6 ,v</p>
    <p>d 4</p>
    <p>Pause v 1 ,v</p>
    <p>d 5</p>
    <p>Resume v 1 ,v</p>
    <p>Spawn v 8 from s</p>
  </div>
  <div class="page">
    <p>N E</p>
    <p>D B</p>
    <p>S u</p>
    <p>m m</p>
    <p>it</p>
    <p>J a</p>
    <p>n 2</p>
    <p>c</p>
    <p>e c ch</p>
    <p>e t@</p>
    <p>c s.</p>
    <p>u m</p>
    <p>a ss</p>
    <p>.e d</p>
    <p>u</p>
    <p>FINAL SCHEDULING</p>
    <p>Different scheduling for private and public cloud  Minimize resource (energy) usage for private cloud  Minimize cost for for public cloud</p>
  </div>
</Presentation>
