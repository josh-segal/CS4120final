<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Fast Linear Subspace Attacks on Stream Ciphers</p>
    <p>Guang Gong</p>
    <p>Department of Electrical and Computer Engineering University of Waterloo</p>
    <p>CANADA &lt;http://comsec.uwaterloo.ca/ggong&gt;</p>
    <p>Joint work with Sondre Rnjom, Tor Helleseth, and Honggang Hu</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 1 / 47</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Basic Concepts and Properties of Sequences (Discrete) Fourier Transform (DFT) of Shifts and Convolution of DFT Fast Selective DFT Attacks on Filtering Generators Comparisons with Fast Algebraic Attacks New Security Criteria: Spectral Immunity</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 2 / 47</p>
  </div>
  <div class="page">
    <p>A General Model of PSGs</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 3 / 47</p>
  </div>
  <div class="page">
    <p>Linear Feedback Shift Register (LFSR) Sequences</p>
    <p>We associate f (x0,    , xn1) with</p>
    <p>f (x0,    , xn1 = c0x0 +    + cn1xn1  t(x ) = x n + cn1x n1 +    + c1x + 1</p>
    <p>a polynomial over F2. An output sequence of the LFSR satisfies the following recursive relation</p>
    <p>an+k = n1X i=0</p>
    <p>ci ak +i , k = 0, 1,    , (1)</p>
    <p>(a0,    , an1) is an initial state of a. t(x ) is called a characteristic polynomial of a (the reciprocal of t(x ) is referred to as a feedback polynomial of a, and we also say that a is generated by t(x ). a is an m-sequences is t(x ) is primitive (Golomb, 1954).</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 4 / 47</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>The sequence a = 1001011 is an m-sequence of period 7 generated by an LFSR with t(x ) = x 3 + x + 1.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 5 / 47</p>
  </div>
  <div class="page">
    <p>Minimal Polynomials and Linear Span</p>
    <p>A minimal polynomial of a is a polynomial with smallest degree which generates a. Let m(x ) be the minimal polynomial of a, then m(x ) | t(x ). Linear span of a is the degree of m(x ), denoted as LS(a), and m(x ) can be found using the Berlekamp-Massey algorithm from any 2LS(a) consecutive bits of a. Linear span of a is the degree of m(x ), denoted as LS(a), and m(x ) can be found using the Berlekamp-Massey algorithm from any 2LS(a) consecutive bits of a.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 6 / 47</p>
  </div>
  <div class="page">
    <p>The Shift Operator</p>
    <p>The (Left cyclically) shift operator L:</p>
    <p>La = a1, a2,    , Lr a = ar , ar +1,    .</p>
    <p>If b = Lr a, then we say that they are shift equivalent. Otherwise, they are shift distinct.</p>
    <p>Example: let a = 1001011</p>
    <p>b = 1011100</p>
    <p>c = 1110100</p>
    <p>then a and b are shift equivalent, and a and c are shift distinct.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 7 / 47</p>
  </div>
  <div class="page">
    <p>DFT and Inverse DFT of Binary Sequences</p>
    <p>Notation: N|2n  1, Fq = GF (q), {at}: a binary sequence with period N; : an element in F2n with order N. The (discrete) Fourier Transform (DFT) of {at } is defined by</p>
    <p>Ak = N1 t=0</p>
    <p>at  tk , k = 0, 1, . . . , N  1.</p>
    <p>The inverse DFT (IDFT) is given by</p>
    <p>at = N1 k =0</p>
    <p>Ak  kt , t = 0, 1, . . . , N  1.</p>
    <p>{Ak} is called the DFT spectral sequence of a (with respect to ).</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 8 / 47</p>
  </div>
  <div class="page">
    <p>Trace Representation</p>
    <p>Let A(x ) = N1</p>
    <p>k =0 Ak x k . Then at = A(t ) and A(x ) can be written</p>
    <p>as A(x ) =</p>
    <p>k</p>
    <p>Tr mk1 (Ak x k ) (2)</p>
    <p>where the k s are (cyclotomic) coset leaders modulo N, mk | n is the length of the coset which contains k , and Tr mk1 (x ) is a trace function from F2mk to F2. This is called a trace representation of {at}. Some times, for simplicity, we may use Tr (x ) for all terms in A(x ) where Tr (x ) represents from which field to F2 depends on the size of the coset containing k . The linear span of a is equal to the number of nonzero spectra of a.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 9 / 47</p>
  </div>
  <div class="page">
    <p>Example 1 : a primitive element in F24 with</p>
    <p>Sequences in Time Domain DFT Spectral Sequences in Frequency Domain</p>
    <p>a =00010 01101 01111 A =011010001000000</p>
    <p>b =111011000101001 B =011 1 0 2618034912</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 10 / 47</p>
  </div>
  <div class="page">
    <p>Example 1 (cont.)</p>
    <p>Trace Representation Linear Span</p>
    <p>A(x ) = Tr (x ) 4</p>
    <p>at = Tr (t ), 0  t &lt; 15 B(x ) = Tr (x + x 3 + 6x 7) 12</p>
    <p>bt = B(t ), 0  t &lt; 15</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 11 / 47</p>
  </div>
  <div class="page">
    <p>DFT of Shifts</p>
    <p>A sequence b = {bt} is a shift of a if and only in the DFT of b is given by</p>
    <p>Bk =  k Ak , 0  k &lt; N,   F2n .</p>
    <p>In this case, bt = A(</p>
    <p>t ), t = 0, 1,    ,</p>
    <p>i.e., B(x ) = A(x ). The shift operator does not change the minimal polynomial of a, nor the linear span.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 12 / 47</p>
  </div>
  <div class="page">
    <p>Example 2</p>
    <p>For , a primitive root of x 4 + x + 1 which defines F24 , let</p>
    <p>a =00010 01101 01111 A(x ) = Tr (x ), and</p>
    <p>b = 01101 01111 00010 B(x ) = Tr (5x )</p>
    <p>In this case b = L5a, a shift of a.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 13 / 47</p>
  </div>
  <div class="page">
    <p>DFT Convolution and Product Sequences</p>
    <p>Let a and b be two sequences of period N with their respective DFTs A = {Ak} and B = {Bk}. For the term-by-term product c = a  b where ct = at bt , 0  t &lt; N, let the DFT of {ct} be C = {Ck}. Then C is a convolution of A and B, denoted as C = A  B where</p>
    <p>Ck =</p>
    <p>i+j=k ( mod N)</p>
    <p>Ai Bj , 0  k &lt; N.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 14 / 47</p>
  </div>
  <div class="page">
    <p>Example 3</p>
    <p>Let b be the sequence in Example 1, i.e.,</p>
    <p>b = 111011000101001  B(x ) = Tr (x + x 3 + 6x 7) a = 000110001100011  A(x ) = Tr (2x 3) = c = a  b = 000010000100001  C = B  A</p>
    <p>= C(x ) = B(x )A(x ) = Tr (3x 3) + 1</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 15 / 47</p>
  </div>
  <div class="page">
    <p>Selective or Fast Selective DFT Attacks</p>
    <p>Selective Filters in DFT Domain</p>
    <p>Let Na = {k | Ak 6= 0, k is a coset leader mod N},</p>
    <p>pk (x ) be the minimal polynomial (MP) of k over F2, and let q(x ) =</p>
    <p>r i=0 ci x</p>
    <p>i be a polynomial over F2 of degree r . The MP p(x ) of a is equal to the product of pk for all k  Na. Applying q(L) to a, we have</p>
    <p>vt = r</p>
    <p>i=0</p>
    <p>ci ai+t , t = 0, 1,    ,</p>
    <p>which is a linear filtered sequence from a.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 16 / 47</p>
  </div>
  <div class="page">
    <p>DFT of {vt}</p>
    <p>Proposition 1. The DFT of {vt} is given by</p>
    <p>Vk = Ak q( k ), 0  k &lt; N.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 17 / 47</p>
  </div>
  <div class="page">
    <p>Interesting Cases of DFT of {vt}</p>
    <p>Two Extreme Cases: Case 1. p(x ) | q(x ) . Thus q(k ) = 0, k  Na. Hence</p>
    <p>Vk = 0, 0  k &lt; N = v is a zero sequence.</p>
    <p>Case 2. gcd(p(x ), q(x )) = 1 . Then q(k ) 6= 0, k  Na.</p>
    <p>(Vk = 0  Ak = 0)</p>
    <p>{v} has the same minimal polynomial as s, so does a, and v is a shift of a when  is a primitive element in F2n (in this case a has period 2n  1).</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 18 / 47</p>
  </div>
  <div class="page">
    <p>Selective Case</p>
    <p>Let c(x ) = gcd(p(x ), q(x )), c(x ) 6= 1 and c(x ) 6= p(x ). Then</p>
    <p>c(x ) =  kT</p>
    <p>pk (x )</p>
    <p>where T  Na, and</p>
    <p>Vk = q( k )Ak 6= 0  q(k ) 6= 0  k  Na \ T .</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 19 / 47</p>
  </div>
  <div class="page">
    <p>Figure: Selective DFT Spectra</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 20 / 47</p>
  </div>
  <div class="page">
    <p>Selective DFT (Cont.)</p>
    <p>For the selective case, when q(x ) is applied to a, the nonzero DFT spectra of the resulting sequence is equal to a subset of the nonzero DFT spectra of a. Thus the linear span of v is less than the linear span of a. The functionality of q(x ) here is analog to filters used in communication systems for selecting frequency band for increasing or reducing bandwidth of transmitted signals.</p>
    <p>Thus q(x ) is referred to as a selective DFT filter of a.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 21 / 47</p>
  </div>
  <div class="page">
    <p>Computing DFT of Shifted Sequences</p>
    <p>Question. Given {Ak} and j (consecutive) bits of s, a shift of a, without loss in generality, we could assume that (s0, s1,    , sj1) is known, find the DFT of s. Since Sk = k Ak ,   F2n , it is enough to find . A Very Old Naive Method: Directly solving a system of the linear equations in variables {k} where j = LS(a). Selective DFT when j = LS(a). Fast Selective DFT when j &lt; LS(a).</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 22 / 47</p>
  </div>
  <div class="page">
    <p>A Very Old Naive Method</p>
    <p>If a set P is a subset consisting of coset leaders modulo N, then we use P to represent the set kP Ck where Ck is the coset modulo N containing k as the coset leader. We write N a = {k0, k1,    , kLS(a)1} (note that LS(a) is equal to the cardinality of N a. ) Then</p>
    <p>bt =</p>
    <p>kNa</p>
    <p>Tr (Ak  k tk ) =</p>
    <p>j1 i=0</p>
    <p>Aki  ki tki , t = 0, 1,    , j  1.</p>
    <p>Let xi = ki , i = 0, 1,    , LS(a)  1. Then the above is a system of m linear equations in LS(a) unknowns {xi}.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 23 / 47</p>
  </div>
  <div class="page">
    <p>Naive Method (Cont.)</p>
    <p>Put m = LS(a). The matrix form is given by</p>
    <p>b = Mx</p>
    <p>where s = (s0, s1,    , sj1)T where v T means the transpose of the vector v , x = (x0, x1,    , xm1)T , and</p>
    <p>M = l1 i=0</p>
    <p>Aki</p>
    <p>2k0 2k1 2k2    2km1 ...</p>
    <p>(j1)k0 (j1)k1 (j1)k2    (j1)km1</p>
    <p>M is a j  m Vandermonde matrix over F2n .</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 24 / 47</p>
  </div>
  <div class="page">
    <p>Naive Method (Cont.)</p>
    <p>Thus it has the unique solution if and only if m = j = LS(a). Hence from known m bits of s (not necessarily consecutive), the DFT of s can be uniquely determined by solving a system of m linear equations over F2n with computational complexity O(m2.37(n)) where (n) = n log n log log n.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 25 / 47</p>
  </div>
  <div class="page">
    <p>Selective DFT Attack</p>
    <p>Input: Given (a0,    , aj1) and {Ak} where j = LS(a) with spectral sequence k Ak , k = 0,    , N  1. Output: . Procedure</p>
    <p>Randomly select k  Na with coset size n (not necessary gcd(k , N) = 1), and set q(x ) = p(x )/pk (x ) with r = deg(q) = m  n. Applying q(L) to (s0, s1,    ), compute</p>
    <p>vt = rX</p>
    <p>i=0</p>
    <p>ci si+t , t = 0, 1,    , n  1.</p>
    <p>From vt = Tr (</p>
    <p>tk ), t = 0, 1,    , n  1</p>
    <p>solve for  in a system of n linear equations over F2n with the complexity O(n2.37(n)). (Compared with the naive method O(m2.37(n)) where m &gt;&gt; n.)</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 26 / 47</p>
  </div>
  <div class="page">
    <p>Selective DFT Attack (Cont.)</p>
    <p>Note that  = Ak q(k )k . If gcd(k , N) = 1, we obtain</p>
    <p>= k  [Ak q(</p>
    <p>k )]k  , k = k1.</p>
    <p>If gcd(k , N) 6= 1, using the multiplexing method to reconstruct  (omitted there for the multiplexing method).</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 27 / 47</p>
  </div>
  <div class="page">
    <p>Fast Selective DFT Attack</p>
    <p>Input: Given (a0,    , aj1) and {Ak} where j &lt; LS(a) with spectral sequence k Ak , k = 0,    , N  1. Output: . Procedure</p>
    <p>Select b = {bt} to compute the term-by-term product u = {ut} (i.e., ut = st bt ) where bt = B(t ), t  0 and ut = U(t ) with |N b  N u| &lt; LS(s). Compute mu(x ), the minimal polynomial of u, and q(x ) =</p>
    <p>Q kT pk (x ) where</p>
    <p>T =</p>
    <p>( Nu \ Nb Nu  Nb  Nu Type 1  Nu Nb = N</p>
    <p>u Type 2</p>
    <p>where T contains at least one k with coset size n for the type 2 and Nx denotes the set of nonzero coset leaders in Nx.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 28 / 47</p>
  </div>
  <div class="page">
    <p>Fast Selective DFT Attack (Cont.)</p>
    <p>= degree of q(x ) is r = |T |, and n  r &lt; LS(u). For q(L) =</p>
    <p>Pr i=0 ci L</p>
    <p>i , compute</p>
    <p>k ,t = Uk q(k )tk , k  J ,</p>
    <p>( J = Nb  Nu for q(x ) of type 1 J = Nb \ T for q(x ) of type 2</p>
    <p>t = 0, 1,    , LS(b)  1.</p>
    <p>where JNb. Compute</p>
    <p>k ,t = Bk ft (k )tk , t = 0, 1,    , LS(b)  1, k  N b ft (x ) =</p>
    <p>Pr i=0 ci si+t x</p>
    <p>i</p>
    <p>Form a system of LS(b) equations:X kJ</p>
    <p>k ,t  k</p>
    <p>= X</p>
    <p>kN b</p>
    <p>k ,t  k , t = 0, 1,    , LS(b)  1.</p>
    <p>which are in LS(b) unknowns k ( N b = LS(b)), and solve for k = .</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 29 / 47</p>
  </div>
  <div class="page">
    <p>Applications to Attacks on Stream Ciphers</p>
    <p>Figure: A General Model of Stream Cipher</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 30 / 47</p>
  </div>
  <div class="page">
    <p>Example: Filtering Sequence Generators</p>
    <p>Let w = {wt} be an m-sequence of period 2n  1, and 0  d0 &lt; d1 &lt;    &lt; dm1 &lt; n. A sequence s = {st} is referred to as a filtering sequence if</p>
    <p>st = f (wd0+t , wd1+t ,    , wdm1+t ) =, t = 0, 1,    (3) where f (x0, x1,    , xm1) is a boolean function in m variables. The boolean function f is referred to as a filtering function.</p>
    <p>Figure: A Diagram of Filtering Sequence GeneratorG. Gong (University of Waterloo) Fast DFT Attacks 2009 31 / 47</p>
  </div>
  <div class="page">
    <p>Known Plaintext Attack</p>
    <p>An initial state of the LFSR is a key when {st} is served as a key stream generator, denoted by K = (k0,    , kn1), ki  F2. Then</p>
    <p>st = f (L t (k0, k1,    , kn1)) = ft (k0,    , kn1), t = 0, 1,</p>
    <p>where ft (x0,    , xn1) = f (Lt (x0,    , xn1)).</p>
    <p>Known plaintext attack: if a certain plaintext is known, then some bits of {st} can be recovered. If the key can be recovered from those known bits of {st}, then the rest of bits of the key stream can be reconstructed.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 32 / 47</p>
  </div>
  <div class="page">
    <p>Properties of Filtering Sequence Generators</p>
    <p>We denote the degree of f (x0,    , xm1) by deg(f ). The DFT of {st} has the following structure:</p>
    <p>Sk = 0, for H(k )  deg(f )</p>
    <p>where H(k ) is the Hamming weight of k . w has the trace representation Tr (x ) for some   F2n . Thus those s and initial states of the LFSR are in one-to-one correspondence. Let {at} be a filtering sequence corresponds to an initial state with  = 1. Then any filtering sequence s is a shift of a.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 33 / 47</p>
  </div>
  <div class="page">
    <p>Shifts and Keys</p>
    <p>Recovering a key in the filtering sequence is to recover an initial state in the LFSR, which is equal to recover . The initial state of the LFSR can be recovered</p>
    <p>by either the selective DFT if the number of known consecutive bits of {st} is equal to the linear span of {st}, or by the fast selective DFT if it is less than its linear span, as presented before.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 34 / 47</p>
  </div>
  <div class="page">
    <p>Figure: (Fast) Select DFT Attacks on a Filtering Generator</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 35 / 47</p>
  </div>
  <div class="page">
    <p>How Good the Selective DFT Attack?</p>
    <p>Case 1: # required consecutive bits = LS(s)</p>
    <p>Rnjom-Helleseth (06): q(x ) is the quotient of the minimal polynomial of s and the minimal polynomial of . So, q(L) removes all DFT spectra except for A1. It works if A1 6= 0. Rnjom-Gong-Helleseth (07): q(x ) is the quotient of the minimal polynomial of s and the minimal polynomial of k . So, q(L) removes all DFT spectra except for Ak for some k with Ak 6= 0 and gcd(k , N) = 1. Selective DFT (new case): In Rnjom-Gong-Helleseth (07)s work, k does not need to be relatively coprime with N, it is enough that the coset size of k is equal to n.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 36 / 47</p>
  </div>
  <div class="page">
    <p>Selective DFT and Rnjom et al. Attacks</p>
    <p>Rnjom-Helleseth (06)</p>
    <p># required # unknowns deg(q) solvable</p>
    <p>consecutive bits in equations</p>
    <p>solving a system of</p>
    <p>LS(s) n LS(s)  n homogeneous not applicable equations over F2</p>
    <p>if A1 = 0 in n unknowns</p>
    <p>solve for all</p>
    <p>n unknowns</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 37 / 47</p>
  </div>
  <div class="page">
    <p>Selective DFT and Rnjom et al. Attacks (Cont.)</p>
    <p>Rnjom-Gong-Helleseth (07)</p>
    <p># required # unknowns deg(q) solvable</p>
    <p>consecutive in equations</p>
    <p>bits</p>
    <p>solving a system of</p>
    <p>LS(s) n LS(s)  n homogeneous not applicable equations over F2n</p>
    <p>if gcd(k , N) 6= 1 in n unknowns obtaining one</p>
    <p>unknown is enough</p>
    <p>New Case of Selective DFT</p>
    <p>Replace the condition gcd(k , N) = 1 by |Ck| = n</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 38 / 47</p>
  </div>
  <div class="page">
    <p>Compared with Fast Algebraic Attack</p>
    <p>Case 2: # required consecutive bits &lt; LS(s)</p>
    <p>Summary of the time complexity and required known bits of the linearization, algebraic attack, and fast algebraic attacks.</p>
    <p>Methods and The Number of Minimum Equations Unknowns Required Known Bits</p>
    <p>Linearization (folk sense): ft (K ) = st T T  = deg(f )</p>
    <p>Algebraic Attack : T T (Paratin96, Courtois et al.03)  = deg(g) Find g such that fg = 0 st gt (K ) = 0 The best case:</p>
    <p>=algebraic immunity of f &lt;</p>
    <p>Fast Algebraic Attacks: Td  = Td + (Te  Td ) (Courtois03 [a], Armknecht-Ars05 [b]): a) find g such that fg = h 6= 0; d = deg(g), e = deg(h)  = 0 [a],  = 1 [b]; d &lt; e b) applying q(x) to st gt (K ) = ht (K ) r = deg(q)Pr</p>
    <p>i=0 ci si+t gi+t (K ) = Pr</p>
    <p>i=0 ci hi+t (K ) consecutive bits</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 39 / 47</p>
  </div>
  <div class="page">
    <p>Fast Algebraic Attack</p>
    <p>The case of Courtois03: q(x ) is the product of the minimal polynomials of k for all k with H(k )  d (= deg(g)), so {vt} is a zero sequence. The case of Armknecht-Ars05: q(x ) is equal to pe(x )/pd (x ) where pk (x ) is the product of the minimal polynomials of i for all i with H(i)  k . So nonzero spectra of the DFT of {vt} is a subset of that of b. In order to get Td equations from applying q(L) to {st gt (k0, k1,    , kn1)}, it needs to know (s0, s1,    , sTd +deg(q)1) for creating a system of homogeneous equations in linearized variables of boolean function gt (k0, k1,    , kn1).</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 40 / 47</p>
  </div>
  <div class="page">
    <p>Compared with Fast Algebraic Attack</p>
    <p># required # unknowns deg(q) solvable</p>
    <p>consecutive bits in equations</p>
    <p>Fast Algebraic Attack</p>
    <p>Td + (Te  Td ) Td Te  Td solving a system of homogeneous equations over F2 in Td unknowns</p>
    <p>Fast Selective DFT Attack</p>
    <p>LS(b) + deg(q) LS(b) &lt; Td &lt; LS(u) &lt; Te  Td</p>
    <p>solving a system of homogeneous equations over F2n in LS(b) unknowns,</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 41 / 47</p>
  </div>
  <div class="page">
    <p>Difference between the Fast Algebraic Attacks and Selective DFT Attacks</p>
    <p>Coefficients of monomial terms in bt = gt (x0, x1,    , xn1) in variables x0, x1,    , xn1 are changed for each t , but the DFT of {bt} are only changed by a scalar multiple of k where  corresponds to the desired initial state. The number of nonzero coefficients of variables (linearized case) in gt (x0, x1,    , xn1) are dynamically changed which is bounded by Td , but the number of nonzero DFT spectral of {bt} remains as a constant which is LS(b), the linear span of b. This phenomenon is not astonished, since it is an analogue to a cosine function cos x which is hard to predict the values in reals. But the Fourier transform of cos x has only two pulses (i.e., two values), which is a simplest case in spectral analysis.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 42 / 47</p>
  </div>
  <div class="page">
    <p>Spectral Immunity</p>
    <p>Resistant to Fast Selective DFT Attack The sequence s is said to be resistant to the fast selective DFT attack if |Ns| = 1 (i.e., the minimal polynomial of s is irreducible) or LS(u + b)  LS(s) for any sequence b  ZN2 with LS(b) &lt; LS(s) and u 6= 0, where u is the term-by-term product sequence of s and b.</p>
    <p>Spectral Immunity Let</p>
    <p>Ps = min bZN0</p>
    <p>{LS(b) | s  b = 0 or (s + 1)b = 0}.</p>
    <p>Then Ps is referred to as the spectral immunity of s.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 43 / 47</p>
  </div>
  <div class="page">
    <p>Example: Filtering Generator</p>
    <p>Let w be a sequence generated by the primitive polynomial x 4 + x + 1, and s be a filtering sequence generated by st = f (wt , wt+1, wt+2, wt+3), where f (x0, x1, x2, x3) = x1 + x0x2 + x0x3 + x0x1x2.</p>
    <p>LS(s) = P3</p>
    <p>i=1</p>
    <p>`4 i</p>
    <p>= 14 which is the maximal achievable linear complexity for a</p>
    <p>filtering function of degree 3.</p>
    <p>The algebraic immunity of f , AI(f ), is equal to 2.</p>
    <p>Then Ps is not bigger than the linear complexity of a sequence bt = g(wt , wt+1, wt+2, wt+3), where g is in a function in the set consisting of the annihilators of f , i.e., g  ANN(f ) = {g | fg = 0 or (f + 1)g = 0}.</p>
    <p>It is easily verified that Ps  PAI(f )</p>
    <p>i=1</p>
    <p>`4 i</p>
    <p>= 10.</p>
    <p>Let bt = wt + wt+2 + wt wt+1 + wt+1wt+2 + wt wt+3, then LS(b) = 4 with the minimal polynomial x 4 + x 3 + x 2 + x + 1. Thus Ps = 4.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 44 / 47</p>
  </div>
  <div class="page">
    <p>Example: Filtering Generator (Cont.)</p>
    <p>This means that there exist an annihilator which yields a system containing linear equations in at most 4 unknowns, while applying a fast algebraic attack one ends up with a quadratic equation system with 10 unknowns.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 45 / 47</p>
  </div>
  <div class="page">
    <p>Open Questions</p>
    <p>How to construction functions which are resistant to the fast selective DFT attack ?(Note that stop-and-go generated sequences resist this attack, why?) What is the bounds of spectral immunity? The method introduced here is of only theoretical interests, if the DFT spectra is unknown. In general, the degree of the filtering function or combiner functions are relatively easier to obtain than the DFT of the key stream sequences, which leads to the following problem. How to estimate the DFT spectrum of the product sequence?</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 46 / 47</p>
  </div>
  <div class="page">
    <p>Reference</p>
    <p>Guang Gong, Sondre Rnjom, Tor Helleseth, and Honggang Hu, Fast Linear Subspace Attacks on Stream Ciphers, Technical Report, CACR 2009-04, 2009, University of Waterloo, Canada. Submitted to IEEE Transactions on Information Theory.</p>
    <p>G. Gong (University of Waterloo) Fast DFT Attacks 2009 47 / 47</p>
  </div>
</Presentation>
