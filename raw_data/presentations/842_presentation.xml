<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Mosh An Interactive Remote Shell for Mobile Clients</p>
    <p>Keith Winstein and Hari Balakrishnan</p>
    <p>M.I.T. CSAIL</p>
    <p>June 14, 2012</p>
    <p>http://mosh.mit.edu</p>
  </div>
  <div class="page">
    <p>Secure Shell, 1995</p>
    <p>I Uses TCP.</p>
    <p>I Sends:</p>
    <p>I user keystrokes  server I octet stream (coded screen updates)  client terminal</p>
    <p>I All UI comes from server. I . . . including keystroke echoes.</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>Problems with SSH</p>
    <p>I Cant roam:</p>
    <p>I . . . across Wi-Fi networks. I . . . from Wi-Fi to cell or vice versa.</p>
    <p>I Cant sleep and wake up (usually).</p>
    <p>I Responds poorly to packet loss.</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>More problems with SSH</p>
    <p>I Octet stream is wrong layer of abstraction.</p>
    <p>I Client wants latest screen. I After interruption, dont want to replay megabytes. I But SSH doesnt understand data, so must send everything. I TCP fills buffers, so Control-C takes forever.</p>
    <p>I Typing and editing on high-latency path is frustrating.</p>
    <p>I Unloaded cellular wireless (50 ms to 500 ms) I Intercontinental (250 ms) I Loaded 4G LTE (5,000 to 40,000 ms!)</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>What we built</p>
    <p>I with roaming I through suspend/resume I over lossy network paths</p>
    <p>I with predictive local echo</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>State Synchronization Protocol</p>
    <p>I Runs over UDP.</p>
    <p>I Instead of sending octet streams, synchronize objects. I Object must support:</p>
    <p>I diff: make vector from state A  B I patch: apply vector to A to make B</p>
    <p>I Object implementation, not protocol, defines synchronization semantics.</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>TCP</p>
    <p>RSA + AES</p>
    <p>Application (e.g., emacs)</p>
    <p>Pseudo-terminal</p>
    <p>TCP</p>
    <p>RSA + AES</p>
    <p>Terminal emulator (e.g., xterm)</p>
    <p>Pseudo-terminal</p>
    <p>SSH Server SSH Client</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>UDP</p>
    <p>AES-OCB</p>
    <p>SSP</p>
    <p>Screen</p>
    <p>sender receiver</p>
    <p>Keystrokes</p>
    <p>Application (e.g., emacs)</p>
    <p>Pseudo-terminal</p>
    <p>UDP</p>
    <p>AES-OCB</p>
    <p>SSP</p>
    <p>Keystrokes</p>
    <p>sender receiver</p>
    <p>Screen</p>
    <p>Terminal emulator (e.g., xterm)</p>
    <p>Pseudo-terminal</p>
    <p>Mosh Server Mosh Client</p>
    <p>Synced objects</p>
    <p>Mosh terminal emulator</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>State Synchronization Protocol (cont.)</p>
    <p>I Protected by AES-OCB (Krovetz 2011) I Integrity and confidentiality with one key.</p>
    <p>I Key exchange happens out of band. I Uses SSH to bootstrap. I Runs mosh-server on remote side. I No privileged code, no daemons.</p>
    <p>I Roaming is easy: I Source address of latest authentic packet from client  servers new target</p>
    <p>I Client may not even know it has roamed.</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>State Synchronization Protocol (cont.)</p>
    <p>I Flow control: adapt frame rate to network conditions.</p>
    <p>I Dont fill up buffers!</p>
    <p>I Can skip over states.</p>
    <p>I Tricks to balance robustness vs. throughput.</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>Predictive Local Echo and Editing</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>UDP</p>
    <p>AES-OCB</p>
    <p>SSP</p>
    <p>Screen</p>
    <p>sender receiver</p>
    <p>Keystrokes</p>
    <p>Application (e.g., emacs)</p>
    <p>Pseudo-terminal</p>
    <p>UDP</p>
    <p>AES-OCB</p>
    <p>SSP</p>
    <p>Keystrokes</p>
    <p>sender receiver</p>
    <p>Screen</p>
    <p>Terminal emulator (e.g., xterm)</p>
    <p>Pseudo-terminal</p>
    <p>Mosh Server Mosh Client</p>
    <p>Synced objects</p>
    <p>Mosh terminal emulator</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>UDP</p>
    <p>AES-OCB</p>
    <p>SSP</p>
    <p>Screen</p>
    <p>sender receiver</p>
    <p>Keystrokes</p>
    <p>Application (e.g., emacs)</p>
    <p>Pseudo-terminal</p>
    <p>UDP</p>
    <p>AES-OCB</p>
    <p>SSP</p>
    <p>Keystrokes</p>
    <p>sender receiver</p>
    <p>Screen</p>
    <p>Terminal emulator (e.g., xterm)</p>
    <p>Pseudo-terminal</p>
    <p>Mosh Server Mosh Client</p>
    <p>Synced objects</p>
    <p>Mosh terminal emulator Predictivelocal echo</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>Predictive Local Echo and Editing</p>
    <p>I Client anticipates server response.</p>
    <p>I Runs predictive model in the background.</p>
    <p>I Make predictions in epochs.</p>
    <p>I If any from epoch n is confirmed, show whole epoch.</p>
    <p>I If user does something difficult to handle, become tentative: increment epoch.</p>
    <p>I Carriage return I Escape I Up/down arrow I Control char</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>Demo</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>I Tested Mosh with 10,000 keystrokes collected from six users.</p>
    <p>I 70% of user keystrokes displayed instantly.</p>
    <p>I Good performance on lossy links vs. SSH.</p>
    <p>I Full results in paper.</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>Unicode on Unix is still full of bugs.</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>Deployment</p>
    <p>I In Debian, Ubuntu, Fedora, Gentoo, Arch, Slackware.</p>
    <p>I Available for Red Hat, CentOS, Oracle Linux.</p>
    <p>I In MacPorts, Homebrew, FreeBSD ports collection.</p>
    <p>I Works on Cygwin and Solaris, (very raw) on Android.</p>
    <p>I Stories in April on Hacker News, Reddit, The Register, Twitter, Slashdot, Barrapunto.</p>
    <p>I Top repository of the month on GitHub.</p>
    <p>I 200,000+ page views, 70,000+ downloads, 1,200+ followers of version control repo.</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>Reception</p>
    <p>@xlfe: one of those times you dont realize something is broken until you see it fixed</p>
    <p>@adamhjk: the user experience really is dreamy.</p>
    <p>@esmolanka: mosh is awesome. Tested it for two weeks and it really made my life easier: faster feedback and no more reconnects(!)</p>
    <p>@andyd: Using mosh on the train rather than plain ssh, and it does actually make a huge difference!</p>
    <p>USENIX review: ISO 2022 locking escape sequences oh flying spaghetti monster please kill me now.</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>State Sync Protocol for all?</p>
    <p>I SSP may be appropriate for many network problems.</p>
    <p>I Android Gmail, Google Chat, Skype cannot roam.</p>
    <p>I June 13, 2012:</p>
    <p>I Neither can Gmail (Web site).</p>
    <p>I These problems can be expressed as state synchronization.</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>I SSP is a secure datagram protocol that synchronizes abstract objects across a roaming IP connection.</p>
    <p>I Mosh uses SSP to synchronize a terminal emulator with predictive local echo.</p>
    <p>I We think SSP will be useful for other applications as well.</p>
    <p>I http://mosh.mit.edu</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>I Collected 40 hours of terminal usage from six users.</p>
    <p>I Covers 10,000 keystrokes using shell, e-mail, text editor (emacs and vi), chat, Web browser.</p>
    <p>I Replayed over:</p>
    <p>I Result: 70% of keystrokes predicted instantly.</p>
    <p>I Prediction errors &lt; 1%</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>Sprint 1xEV-DO cumulative keystroke response distribution</p>
    <p>P er ce n ta g e</p>
    <p>Keystroke response time (seconds)</p>
    <p>Mosh</p>
    <p>median: 5 ms</p>
    <p>mean: 173 ms</p>
    <p>median: 503 ms</p>
    <p>mean: 515 ms</p>
    <p>SSH</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>Evaluation (cont.)</p>
    <p>Verizon LTE service in Cambridge, Mass., running one concurrent TCP download:</p>
    <p>Median latency Mean  SSH 5.36 s 5.03 s 2.14 s Mosh &lt; 0.005 s 1.70 s 2.60 s</p>
    <p>MIT-Singapore Internet path (to Amazon EC2 data center):</p>
    <p>Median latency Mean  SSH 273 ms 272 ms 9 ms Mosh &lt; 5 ms 86 ms 132 ms</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>SSP with high packet loss</p>
    <p>Synthetic link with 100 ms RTT, 50% round-trip i.i.d. packet loss:</p>
    <p>Median Mean  SSH 0.416 s 16.8 s 52.2 s</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>Pretransmissions shield against possible future loss.</p>
    <p>SSP has options in choosing which diff to send:</p>
    <p>instead.</p>
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
  <div class="page">
    <p>Keith Winstein and Hari Balakrishnan M.I.T. CSAIL</p>
  </div>
</Presentation>
