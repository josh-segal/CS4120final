<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>SafeBricks: Shielding Network Functions in the Cloud</p>
    <p>Rishabh Poddar, Chang Lan, Raluca Ada Popa, Sylvia Ratnasamy</p>
    <p>UC Berkeley</p>
  </div>
  <div class="page">
    <p>Network Functions (NFs) in the cloud</p>
    <p>2</p>
    <p>Destination Enterprise</p>
    <p>Clients</p>
  </div>
  <div class="page">
    <p>Network Functions (NFs) in the cloud</p>
    <p>3</p>
    <p>Destination Enterprise</p>
    <p>Clients</p>
  </div>
  <div class="page">
    <p>Network Functions (NFs) in the cloud</p>
    <p>4</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Enterprise</p>
    <p>Clients</p>
    <p>Destination</p>
  </div>
  <div class="page">
    <p>Problem: Security</p>
    <p>5</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Enterprise</p>
    <p>Clients</p>
    <p>Destination</p>
    <p>Email</p>
  </div>
  <div class="page">
    <p>6</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Enterprise</p>
    <p>Clients</p>
    <p>Destination</p>
    <p>Email</p>
    <p>Need to protect traffic from the cloud provider1</p>
    <p>Hackers / curious employees</p>
    <p>Problem: Security</p>
  </div>
  <div class="page">
    <p>Problem: Security</p>
    <p>7</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Enterprise</p>
    <p>Clients</p>
    <p>Destination</p>
    <p>Email</p>
    <p>Need to protect traffic from the NF providers</p>
    <p>Exfiltration</p>
  </div>
  <div class="page">
    <p>Problem: Security</p>
    <p>8</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Enterprise</p>
    <p>Clients</p>
    <p>Destination</p>
    <p>Email</p>
    <p>Need to protect NF code and rulesets from client enterprise and cloud3</p>
  </div>
  <div class="page">
    <p>Cryptographic solutions do not suffice</p>
    <p>9</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Enterprise</p>
    <p>Clients</p>
    <p>Destination</p>
    <p>Email</p>
  </div>
  <div class="page">
    <p>Cryptographic solutions do not suffice</p>
    <p>10</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Enterprise</p>
    <p>Clients</p>
    <p>Destination</p>
    <p>Email</p>
    <p>Standard encryption: e.g. end-to-end TLS1</p>
  </div>
  <div class="page">
    <p>Cryptographic solutions do not suffice</p>
    <p>11</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Enterprise</p>
    <p>Clients</p>
    <p>Destination</p>
    <p>Email</p>
    <p>Standard encryption: e.g. end-to-end TLS  Functionality: Doesnt allow any computation on encrypted payload</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>Cryptographic solutions do not suffice</p>
    <p>12</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Enterprise</p>
    <p>Clients</p>
    <p>Destination</p>
    <p>Email</p>
    <p>Standard encryption: e.g. end-to-end TLS  Functionality: Doesnt allow any computation on encrypted payload  Security: Unencrypted fields (e.g. IP headers) still leak information</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>Cryptographic solutions do not suffice</p>
    <p>13</p>
    <p>Specialized encryption: e.g. BlindBox, Embark [Sherry et al. (SIGCOMM15)]</p>
    <p>[Lan et al. (NSDI16)]</p>
  </div>
  <div class="page">
    <p>Cryptographic solutions do not suffice</p>
    <p>14</p>
    <p>Specialized encryption: e.g. BlindBox, Embark  Too limited in functionality!</p>
    <p>Header-based comparisons</p>
    <p>Keyword matching</p>
    <p>Regular expressions</p>
    <p>Cross-flow analysis</p>
    <p>Statistical computations</p>
  </div>
  <div class="page">
    <p>How to achieve full functionality and</p>
    <p>our security goals simultaneously?</p>
    <p>15</p>
  </div>
  <div class="page">
    <p>SafeBricks</p>
    <p>16</p>
    <p>Protects traffic from the NF providers</p>
    <p>Protects NF source code and rulesets from client enterprise and cloud</p>
    <p>Protects traffic from the cloud provider1</p>
  </div>
  <div class="page">
    <p>SafeBricks</p>
    <p>17</p>
    <p>Protects traffic from the NF providers</p>
    <p>Protects traffic from the cloud provider1</p>
    <p>Hardware enclaves + language-based isolation</p>
    <p>Protects NF source code and rulesets from client enterprise and cloud</p>
  </div>
  <div class="page">
    <p>Secure region of memory (enclaves) protected by hardware</p>
    <p>Background: Hardware enclaves (e.g. Intel SGX)</p>
    <p>18</p>
    <p>Operating System (untrusted)</p>
    <p>Application (untrusted)</p>
    <p>Enclave (trusted)</p>
  </div>
  <div class="page">
    <p>Secure region of memory (enclaves) protected by hardware</p>
    <p>19</p>
    <p>Operating System (untrusted)</p>
    <p>Application (untrusted)</p>
    <p>Enclave (trusted)</p>
    <p>Secret data</p>
    <p>Trusted code</p>
    <p>Background: Hardware enclaves (e.g. Intel SGX)</p>
  </div>
  <div class="page">
    <p>Secure region of memory (enclaves) protected by hardware</p>
    <p>20</p>
    <p>Operating System (untrusted)</p>
    <p>Application (untrusted)</p>
    <p>Enclave (trusted)</p>
    <p>Secret data</p>
    <p>Trusted code</p>
    <p>Client</p>
    <p>Remote attestation by clients</p>
    <p>Background: Hardware enclaves (e.g. Intel SGX)</p>
  </div>
  <div class="page">
    <p>Secure region of memory (enclaves) protected by hardware</p>
    <p>21</p>
    <p>Operating System (untrusted)</p>
    <p>Application (untrusted)</p>
    <p>Enclave (trusted)</p>
    <p>Secret data</p>
    <p>Trusted code</p>
    <p>Client</p>
    <p>Remote attestation by clients  Remotely verify enclave contents</p>
    <p>Background: Hardware enclaves (e.g. Intel SGX)</p>
  </div>
  <div class="page">
    <p>Secure region of memory (enclaves) protected by hardware</p>
    <p>22</p>
    <p>Operating System (untrusted)</p>
    <p>Application (untrusted)</p>
    <p>Enclave (trusted)</p>
    <p>Secret data</p>
    <p>Trusted code</p>
    <p>Client</p>
    <p>Remote attestation by clients  Remotely verify enclave contents  Establish a secure channel with enclave</p>
    <p>Background: Hardware enclaves (e.g. Intel SGX)</p>
  </div>
  <div class="page">
    <p>Background: NetBricks</p>
    <p>23</p>
    <p>[Panda et al. (OSDI16)]</p>
    <p>I/O interface</p>
    <p>Poll for I/O</p>
    <p>Programming abstractions</p>
    <p>State abstractions</p>
    <p>Scheduler</p>
    <p>DPDK</p>
    <p>NICs</p>
    <p>NetBricks  Framework for developing arbitrary NFs</p>
  </div>
  <div class="page">
    <p>24</p>
    <p>[Panda et al. (OSDI16)]</p>
    <p>Framework for developing arbitrary NFs  MapReduce like programming</p>
    <p>abstractions (operators) for packet processing</p>
    <p>I/O interface</p>
    <p>Poll for I/O</p>
    <p>Programming abstractions</p>
    <p>State abstractions</p>
    <p>Scheduler</p>
    <p>DPDK</p>
    <p>NICs</p>
    <p>NetBricks</p>
    <p>Background: NetBricks</p>
  </div>
  <div class="page">
    <p>25</p>
    <p>[Panda et al. (OSDI16)]</p>
    <p>Framework for developing arbitrary NFs  MapReduce like programming</p>
    <p>abstractions (operators) for packet processing</p>
    <p>NFs represented as a directed graph with operators as nodes</p>
    <p>I/O interface</p>
    <p>Poll for I/O</p>
    <p>Programming abstractions</p>
    <p>State abstractions</p>
    <p>Scheduler</p>
    <p>DPDK</p>
    <p>NICs</p>
    <p>NetBricks</p>
    <p>Background: NetBricks</p>
  </div>
  <div class="page">
    <p>26</p>
    <p>Written in Rust  Fast, safe, zero-copy semantics  Isolates NFs deployed in a chain while</p>
    <p>running them in the same address space</p>
    <p>NICs</p>
    <p>NetBricks</p>
    <p>NF 1 NF 1</p>
    <p>Background: NetBricks</p>
  </div>
  <div class="page">
    <p>SafeBricks</p>
    <p>27</p>
    <p>Protects traffic from the NF providers</p>
    <p>Protects traffic from the cloud provider</p>
    <p>Protects NF source code and rulesets from client enterprise and cloud</p>
  </div>
  <div class="page">
    <p>SafeBricks</p>
    <p>28</p>
    <p>Protects traffic from the NF providers</p>
    <p>Protects traffic from the cloud provider</p>
    <p>Protects NF source code and rulesets from client enterprise and cloud</p>
  </div>
  <div class="page">
    <p>Outsourcing NFs using hardware enclaves</p>
    <p>29 Enterprise</p>
    <p>Clients</p>
    <p>Gateway</p>
    <p>Enclave</p>
    <p>OS (untrusted)</p>
    <p>Cloud (untrusted)</p>
    <p>Destination</p>
  </div>
  <div class="page">
    <p>Outsourcing NFs using hardware enclaves</p>
    <p>30 Enterprise</p>
    <p>Clients</p>
    <p>Gateway</p>
    <p>Enclave</p>
    <p>OS (untrusted)</p>
    <p>Cloud (untrusted)</p>
    <p>Destination</p>
    <p>NF</p>
  </div>
  <div class="page">
    <p>Outsourcing NFs using hardware enclaves</p>
    <p>31 Enterprise</p>
    <p>Clients</p>
    <p>Gateway</p>
    <p>Enclave</p>
    <p>OS (untrusted)</p>
    <p>Cloud (untrusted)</p>
    <p>Destination</p>
    <p>NF</p>
  </div>
  <div class="page">
    <p>Outsourcing NFs using hardware enclaves</p>
    <p>32 Enterprise</p>
    <p>Clients</p>
    <p>Gateway</p>
    <p>Enclave</p>
    <p>OS (untrusted)</p>
    <p>Cloud (untrusted)</p>
    <p>Destination</p>
    <p>NF</p>
    <p>IPSec</p>
    <p>IPSec</p>
  </div>
  <div class="page">
    <p>Outsourcing NFs using hardware enclaves</p>
    <p>33 Enterprise</p>
    <p>Clients</p>
    <p>Gateway</p>
    <p>Enclave</p>
    <p>OS (untrusted)</p>
    <p>Cloud (untrusted)</p>
    <p>Destination</p>
    <p>NF</p>
    <p>IPSec</p>
    <p>IPSec</p>
    <p>TLS</p>
    <p>Interception proxy</p>
  </div>
  <div class="page">
    <p>Outsourcing NFs using hardware enclaves</p>
    <p>34 Enterprise</p>
    <p>Clients</p>
    <p>Gateway</p>
    <p>Enclave</p>
    <p>OS (untrusted)</p>
    <p>Cloud (untrusted)</p>
    <p>Destination</p>
    <p>NF</p>
    <p>TLS</p>
    <p>IPSec</p>
    <p>TLS</p>
    <p>IPSec</p>
  </div>
  <div class="page">
    <p>Outsourcing NFs using hardware enclaves</p>
    <p>35 Enterprise</p>
    <p>Clients</p>
    <p>Gateway</p>
    <p>Enclave</p>
    <p>OS (untrusted)</p>
    <p>Cloud (untrusted)</p>
    <p>Destination</p>
    <p>NF</p>
    <p>TLSTLSTLSTLS</p>
    <p>IPSec IPSec</p>
    <p>TLS</p>
    <p>IPSec</p>
  </div>
  <div class="page">
    <p>Outsourcing NFs using hardware enclaves</p>
    <p>36 Enterprise</p>
    <p>Clients</p>
    <p>Gateway</p>
    <p>Enclave</p>
    <p>OS (untrusted)</p>
    <p>Cloud (untrusted)</p>
    <p>Destination</p>
    <p>NF</p>
    <p>TLSTLSTLSTLS</p>
    <p>IPSec IPSec</p>
    <p>TLS</p>
    <p>IPSec</p>
    <p>Packet headers also encrypted</p>
  </div>
  <div class="page">
    <p>Outsourcing NFs using hardware enclaves</p>
    <p>37 Enterprise</p>
    <p>Clients</p>
    <p>Gateway</p>
    <p>Enclave</p>
    <p>OS (untrusted)</p>
    <p>Cloud (untrusted)</p>
    <p>Destination</p>
    <p>NF</p>
    <p>TLSTLSTLSTLS</p>
    <p>IPSec</p>
    <p>TLS</p>
    <p>IPSec</p>
    <p>TLS</p>
    <p>IPSec</p>
  </div>
  <div class="page">
    <p>Outsourcing NFs using hardware enclaves</p>
    <p>38 Enterprise</p>
    <p>Clients</p>
    <p>Gateway</p>
    <p>Enclave</p>
    <p>OS (untrusted)</p>
    <p>Cloud (untrusted)</p>
    <p>Destination</p>
    <p>NF</p>
    <p>TLSTLSTLSTLS</p>
    <p>IPSec</p>
    <p>TLS</p>
    <p>SafeBricks also supports direct delivery of traffic</p>
    <p>IPSec</p>
  </div>
  <div class="page">
    <p>Outsourcing NFs using hardware enclaves</p>
    <p>39 Enterprise</p>
    <p>Clients</p>
    <p>Gateway</p>
    <p>Enclave</p>
    <p>OS (untrusted)</p>
    <p>Cloud (untrusted)</p>
    <p>Destination</p>
    <p>NF</p>
    <p>TLSTLSTLSTLS</p>
    <p>IPSec</p>
    <p>TLS</p>
    <p>Can use general purpose frameworks,</p>
    <p>e.g. Haven, Scone</p>
    <p>IPSec</p>
    <p>TLS</p>
    <p>IPSec</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>40</p>
    <p>Small trusted computing base (TCB)  enclave should contain minimal amount of code</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>41</p>
    <p>High performance  Transitioning into / out of enclaves is expensive!</p>
    <p>Small trusted computing base (TCB)  enclave should contain minimal amount of code</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>42</p>
    <p>High performance  Transitioning into / out of enclaves is expensive!</p>
    <p>Illegal enclave instructions  SGX does not support system calls or instructions that may lead to a VMEXIT</p>
    <p>Small trusted computing base (TCB)  enclave should contain minimal amount of code</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>43</p>
    <p>High performance  Transitioning into / out of enclaves is expensive!</p>
    <p>Illegal enclave instructions  SGX does not support system calls or instructions that lead to a VMEXIT</p>
    <p>Small trusted computing base (TCB)  enclave should contain minimal amount of code</p>
  </div>
  <div class="page">
    <p>44</p>
    <p>I/O interface</p>
    <p>Poll for I/O</p>
    <p>Programming abstractions</p>
    <p>State abstractions</p>
    <p>Scheduler</p>
    <p>DPDK</p>
    <p>NICs</p>
    <p>NetBricks 1</p>
  </div>
  <div class="page">
    <p>45</p>
    <p>I/O interface</p>
    <p>Poll for I/O</p>
    <p>Programming abstractions</p>
    <p>State abstractions</p>
    <p>Scheduler</p>
    <p>DPDK</p>
    <p>NICs</p>
    <p>Enclave 1</p>
    <p>Maximal TCB: NetBricks stack entirely within enclave</p>
  </div>
  <div class="page">
    <p>46</p>
    <p>I/O interface</p>
    <p>Poll for I/O</p>
    <p>Programming abstractions</p>
    <p>State abstractions</p>
    <p>Scheduler</p>
    <p>DPDK</p>
    <p>NICs</p>
    <p>Enclave 1</p>
    <p>Minimal TCB: Only securitycritical components within enclave</p>
    <p>One enclave transition per node per packet batch</p>
  </div>
  <div class="page">
    <p>Intermediate TCB  One enclave transition per</p>
    <p>packet batch</p>
    <p>47</p>
    <p>I/O interface</p>
    <p>Poll for I/O</p>
    <p>Programming abstractions</p>
    <p>State abstractions</p>
    <p>Scheduler</p>
    <p>DPDK</p>
    <p>NICs</p>
    <p>Enclave 1</p>
  </div>
  <div class="page">
    <p>48</p>
    <p>I/O interface</p>
    <p>Poll for I/O</p>
    <p>Programming abstractions</p>
    <p>State abstractions</p>
    <p>Scheduler</p>
    <p>DPDK</p>
    <p>NICs</p>
    <p>Glue code (trusted)</p>
    <p>Glue code (untrusted)</p>
    <p>SafeBricks enclave (trusted)</p>
    <p>SafeBricks host</p>
    <p>(untrusted)</p>
    <p>Partitioned NetBricks framework; glue code connects trusted and untrusted code</p>
  </div>
  <div class="page">
    <p>49</p>
    <p>I/O interface</p>
    <p>Poll for I/O</p>
    <p>Programming abstractions</p>
    <p>State abstractions</p>
    <p>Scheduler</p>
    <p>DPDK</p>
    <p>NICs</p>
    <p>Glue code (trusted)</p>
    <p>Glue code (untrusted)</p>
    <p>SafeBricks enclave (trusted)</p>
    <p>SafeBricks host</p>
    <p>(untrusted)</p>
    <p>Partitioned NetBricks framework; glue code connects trusted and untrusted code</p>
    <p>Two new operators for packet transfer to/from enclave:</p>
    <p>and toHosttoEnclave</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>50</p>
    <p>High performance  Transitioning into / out of enclaves is expensive!</p>
    <p>Small trusted computing base (TCB)  enclave should contain minimal amount of code</p>
    <p>Illegal enclave instructions  SGX does not support system calls or instructions that lead to a VMEXIT</p>
  </div>
  <div class="page">
    <p>SafeBricks host</p>
    <p>SafeBricks enclave</p>
    <p>51</p>
    <p>NICs</p>
    <p>toHosttoEnclave</p>
    <p>NF</p>
    <p>One enclave transition per packet batch</p>
  </div>
  <div class="page">
    <p>SafeBricks host</p>
    <p>SafeBricks enclave</p>
    <p>52 NICs</p>
    <p>toHosttoEnclave</p>
    <p>NF</p>
    <p>Shared queues in non-enclave heap</p>
    <p>Separate enclave and host threads</p>
    <p>Access queues without exiting enclave  zero enclave transitions</p>
    <p>send recv</p>
    <p>Enclave I/O</p>
    <p>Host I/O</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>53</p>
    <p>High performance  Transitioning into / out of enclaves is expensive!</p>
    <p>Small trusted computing base (TCB)  enclave should contain minimal amount of code</p>
    <p>Illegal enclave instructions  SGX does not support system calls or instructions that lead to a VMEXIT</p>
  </div>
  <div class="page">
    <p>54</p>
    <p>Observation: NFs in general do not require support for system calls / instructions that lead to VMEXITs</p>
  </div>
  <div class="page">
    <p>55</p>
    <p>Observation: NFs in general do not require support for system calls / instructions that lead to VMEXITs, except:</p>
    <p>Logging  Timestamps (using rdtsc)</p>
  </div>
  <div class="page">
    <p>56</p>
    <p>Observation: NFs in general do not require support for system calls / instructions that lead to VMEXITs, except:</p>
    <p>Logging  Timestamps (using rdtsc)</p>
    <p>SafeBricks designs custom solutions for these operations without enclave transitions</p>
  </div>
  <div class="page">
    <p>57</p>
    <p>SafeBricks</p>
    <p>Protects traffic from the NF providers</p>
    <p>Protects traffic from the cloud provider</p>
    <p>Protects NF source code and rulesets from client enterprise and cloud</p>
  </div>
  <div class="page">
    <p>Problem: Malicious NFs within enclaves</p>
    <p>58</p>
    <p>Malicious NFs inside the enclave can exfiltrate or tamper with packets!!</p>
  </div>
  <div class="page">
    <p>Problem: Malicious NFs within enclaves</p>
    <p>59</p>
    <p>Observation: NFs typically need access only to specific packet fields</p>
    <p>E.g. Firewall needs read-only access to TCP/IP headers  E.g. NAT needs both read-write access to headers but not to packet</p>
    <p>payload</p>
    <p>Malicious NFs inside the enclave can exfiltrate or tamper with packets!!</p>
  </div>
  <div class="page">
    <p>Problem: Malicious NFs within enclaves</p>
    <p>60</p>
    <p>Observation: NFs typically need access only to specific packet fields</p>
    <p>E.g. Firewall needs read-only access to TCP/IP headers  E.g. NAT needs both read-write access to headers but not to packet</p>
    <p>payload</p>
    <p>Malicious NFs inside the enclave can exfiltrate or tamper with packets!!</p>
    <p>IP addresses; TCP ports; HTTP</p>
    <p>payload</p>
  </div>
  <div class="page">
    <p>Problem: Malicious NFs within enclaves</p>
    <p>61</p>
    <p>Observation: NFs typically need access only to specific packet fields</p>
    <p>E.g. Firewall needs read-only access to TCP/IP headers  E.g. NAT needs both read-write access to headers but not to packet</p>
    <p>payload</p>
    <p>Malicious NFs inside the enclave can exfiltrate or tamper with packets!!</p>
    <p>SafeBricks enforces least privilege across NFs within the enclave</p>
  </div>
  <div class="page">
    <p>toEnclave toHost</p>
    <p>Host</p>
    <p>62</p>
    <p>Run NFs within the same enclave</p>
    <p>Least privilege enforcement</p>
    <p>Firewall NAT</p>
  </div>
  <div class="page">
    <p>63</p>
    <p>Run NFs within the same enclave Firewall</p>
    <p>toEnclave</p>
    <p>NAT</p>
    <p>toHost</p>
    <p>Host</p>
    <p>Least privilege enforcement</p>
  </div>
  <div class="page">
    <p>64</p>
    <p>Run NFs within the same enclave</p>
    <p>Stitch NFs together interspersed with an operator ( wList ) that embeds a vector of permissions in packets  two bits per packet field</p>
    <p>Firewall</p>
    <p>toEnclave</p>
    <p>NAT</p>
    <p>toHost</p>
    <p>Host</p>
    <p>wList wList</p>
    <p>wList</p>
    <p>Least privilege enforcement</p>
  </div>
  <div class="page">
    <p>65</p>
    <p>Enforce permissions by mediating access to</p>
    <p>packets using Rusts ownership model</p>
    <p>SafeBricks Controller</p>
    <p>Least privilege enforcement</p>
  </div>
  <div class="page">
    <p>66</p>
    <p>Enforce permissions by mediating access to</p>
    <p>packets using Rusts ownership model</p>
    <p>Controller module holds ownership of packet buffers</p>
    <p>SafeBricks Controller</p>
    <p>Packet buffer</p>
    <p>Least privilege enforcement</p>
  </div>
  <div class="page">
    <p>67</p>
    <p>Enforce permissions by mediating access to</p>
    <p>packets using Rusts ownership model</p>
    <p>Controller module holds ownership of packet buffers</p>
    <p>NFs borrow references to packet fields from the Controller, which checks permissions vector in packet</p>
    <p>SafeBricks Controller</p>
    <p>NAT Firewall</p>
    <p>Packet buffer</p>
    <p>Least privilege enforcement</p>
  </div>
  <div class="page">
    <p>68</p>
    <p>Enforce permissions by mediating access to</p>
    <p>packets using Rusts ownership model</p>
    <p>Controller module holds ownership of packet buffers</p>
    <p>NFs borrow references to packet fields from the Controller, which checks permissions vector in packet</p>
    <p>SafeBricks Controller</p>
    <p>Packet buffer</p>
    <p>NAT Firewall</p>
    <p>Returns an immutable reference for readonly access, and a mutable reference for</p>
    <p>write access</p>
    <p>Least privilege enforcement</p>
  </div>
  <div class="page">
    <p>Assumption: Trusted compilation of NFs</p>
    <p>69</p>
    <p>Least privilege guarantees only hold if NFs are built using a compiler that prohibits unsafe operations!</p>
  </div>
  <div class="page">
    <p>Assumption: Trusted compilation of NFs</p>
    <p>70</p>
    <p>Least privilege guarantees only hold if NFs are built using a compiler that prohibits unsafe operations!</p>
    <p>E.g. Check array bounds, no pointer arithmetic, no</p>
    <p>unsafe type casts</p>
  </div>
  <div class="page">
    <p>Assumption: Trusted compilation of NFs</p>
    <p>71</p>
    <p>Least privilege guarantees only hold if NFs are built using a compiler that prohibits unsafe operations!</p>
    <p>Possible solution: Client obtains NF source codes from providers and assembles them locally</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Client Enterprise</p>
    <p>NF code + rulesets</p>
  </div>
  <div class="page">
    <p>Assumption: Trusted compilation of NFs</p>
    <p>72</p>
    <p>Least privilege guarantees only hold if NFs are built using a compiler that prohibits unsafe operations!</p>
    <p>Possible solution: Client obtains NF source codes from providers and assembles them locally</p>
    <p>Problem: This violates the confidentiality of NF source code!</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Enterprise</p>
    <p>NF code + rulesets</p>
  </div>
  <div class="page">
    <p>73</p>
    <p>SafeBricks</p>
    <p>Protects traffic from the NF providers</p>
    <p>Protects traffic from the cloud provider</p>
    <p>Protects NF source code and rulesets from client enterprise and cloud</p>
  </div>
  <div class="page">
    <p>Assembling NFs</p>
    <p>74</p>
    <p>Key idea: Build NFs within a special meta-enclave in the cloud using an agreed upon compiler</p>
  </div>
  <div class="page">
    <p>Assembling NFs</p>
    <p>75</p>
    <p>Key idea: Build NFs within a special meta-enclave in the cloud using an agreed upon compiler</p>
    <p>Both client and NF providers can verify the agreed upon compiler using remote attestation</p>
  </div>
  <div class="page">
    <p>Assembling NFs</p>
    <p>76</p>
    <p>Enterprise</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Loader Compiler</p>
    <p>Assembly enclave</p>
  </div>
  <div class="page">
    <p>Assembling NFs</p>
    <p>77</p>
    <p>Enterprise</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Loader Compiler</p>
    <p>Assembly enclave</p>
    <p>Remote attestation</p>
  </div>
  <div class="page">
    <p>Assembling NFs</p>
    <p>78</p>
    <p>Enterprise</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Loader Compiler</p>
    <p>Assembly enclave</p>
    <p>Remote attestation</p>
  </div>
  <div class="page">
    <p>Assembling NFs</p>
    <p>79</p>
    <p>Enterprise</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Loader Compiler</p>
    <p>Assembly enclave</p>
    <p>Remote attestation</p>
  </div>
  <div class="page">
    <p>Assembling NFs</p>
    <p>80</p>
    <p>Enterprise</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Loader Compiler</p>
    <p>Assembly enclave</p>
    <p>NF code + rulesets</p>
  </div>
  <div class="page">
    <p>Assembling NFs</p>
    <p>81</p>
    <p>Enterprise</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Loader Compiler</p>
    <p>Assembly enclave</p>
    <p>NF code + rulesets</p>
    <p>Config</p>
  </div>
  <div class="page">
    <p>Assembling NFs</p>
    <p>82</p>
    <p>Enterprise</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Loader Compiler</p>
    <p>Assembly enclave</p>
    <p>NF code + rulesets</p>
    <p>Config</p>
    <p>Placement of NFs, least privilege policies per NF</p>
  </div>
  <div class="page">
    <p>Assembling NFs</p>
    <p>83</p>
    <p>Enterprise</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Loader Compiler</p>
    <p>Assembly enclave</p>
    <p>NF code + rulesets</p>
    <p>Config</p>
  </div>
  <div class="page">
    <p>Assembling NFs</p>
    <p>84</p>
    <p>Enterprise</p>
    <p>NF providersNF providersNF providersNF providers</p>
    <p>Loader Compiler</p>
    <p>Assembly enclave</p>
    <p>Deployment enclave</p>
  </div>
  <div class="page">
    <p>SafeBricks</p>
    <p>85</p>
    <p>Protects traffic from the NF providers</p>
    <p>Protects NF source code and rulesets from client enterprise and cloud</p>
    <p>Protects traffic from the cloud provider1</p>
  </div>
  <div class="page">
    <p>Performance</p>
    <p>86</p>
  </div>
  <div class="page">
    <p>Throughput decline across NFs</p>
    <p>87 ~015% overhead across applications for different packet sizes</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut d</p>
    <p>ec lin</p>
    <p>e</p>
    <p>Packet size (bytes) 64 256 512 1024</p>
    <p>Firewall NAT Load Balancer DPI</p>
  </div>
  <div class="page">
    <p>DPI performance with increasing no. of rules</p>
    <p>88 Overhead spikes when NF working set exceeds enclave memory</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut d</p>
    <p>ec lin</p>
    <p>e</p>
    <p>Number of rules</p>
  </div>
  <div class="page">
    <p>DPI performance with increasing no. of rules</p>
    <p>89 Overhead spikes when NF working set exceeds enclave memory</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut d</p>
    <p>ec lin</p>
    <p>e</p>
    <p>Number of rules</p>
    <p>Not a fundamental limitation</p>
  </div>
  <div class="page">
    <p>SafeBricks uses a combination of hardware enclaves</p>
    <p>and language-based isolation to:</p>
    <p>Protect client traffic from the cloud provider</p>
    <p>Enforce least privilege across NFs</p>
    <p>Protect the confidentiality of NF code and rulesets</p>
    <p>90</p>
    <p>Summary</p>
    <p>Modest overhead across a range of applications</p>
    <p>rishabhp@eecs.berkeley.edu</p>
  </div>
</Presentation>
