<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>SSOScan: Automated Testing of Web Applications for Single Sign-On vulnerabilities</p>
    <p>Yuchen Zhou David Evans</p>
    <p>http://www.ssoscan.org/ 1</p>
  </div>
  <div class="page">
    <p>Single Sign-On Service</p>
  </div>
  <div class="page">
    <p>Single Sign-On Workflow</p>
    <p>Identity Provider (e.g., Facebook)</p>
    <p>Integrator (e.g., espn.com)</p>
    <p>Redirect</p>
    <p>Visit</p>
    <p>OAuth Credentials</p>
    <p>Confirm Credentials</p>
    <p>Authenticated</p>
    <p>Login</p>
    <p>Verify login and issue credentials</p>
    <p>User (Web Client)</p>
  </div>
  <div class="page">
    <p>Integrating SSO services</p>
    <p>SSO SDKs are designed for developers with little or no security expertise. The secure integration depends on understanding important security requirements.</p>
  </div>
  <div class="page">
    <p>Credential Misuse</p>
    <p>Facebook User</p>
    <p>Mallory Foo app server</p>
    <p>Happens when the application fails to verify:  The application ID to which the access_token was issued</p>
    <p>The signature of signed_request credential</p>
  </div>
  <div class="page">
    <p>Credential Leakage</p>
    <p>Third Party</p>
    <p>Resource</p>
    <p>GET https://cdn.optimizely.com/js/242559767.js HTTP/1.1 Host: cdn.optimizely.com  Referer: https://www.dealchicken.com/Login? access_token=CAABhCKz13vUBAGaNPlN9fu0dnPvoceu46ScHXELk pEOOmLCTk3iFnJHGjWEZAxOJFcYf4wxVWv1MejzvT3K4arpWmA jAZCoOeuECQcnDRt82nUeBdA5ACVpoJyM6J3KzKvZA1ZBWKsFV EIBIZAntEkmDbXaN7IlaC8lQK9G9PE1XLg0kLoqG8ObRhy7BIHfUs9 cNWGZBLV6fMhN0WIgdde&amp;expires_in=6493&amp;fb_uid=1000039299 06137&amp;ReturnUrl=https%3A%2F%2Fwww.dealchicken.com%2Flogin %3FReturnUrl%3D%252f</p>
  </div>
  <div class="page">
    <p>SSOScan</p>
    <p>http://www.answers.com/</p>
    <p>http://www.espn.go.com/</p>
    <p>http://www.pinterest.com/ http://www.huffingtonpost.com/</p>
    <p>http://www.imgur.com/ http://www.wsj.com/</p>
    <p>http://www.ask.com/ http://www.ohours.org/</p>
    <p>Vulnerability status:</p>
    <p>Credential misuse Credential leakage</p>
  </div>
  <div class="page">
    <p>SSOScan Components</p>
    <p>Vulnerability Tester</p>
    <p>Oracle</p>
    <p>Enroller  Button Finder  IdP login automation  Registration automation</p>
    <p>Simulate attacks  Monitor traffic &amp; response</p>
    <p>Enroller</p>
    <p>Oracle</p>
    <p>Vulnerability Tester</p>
    <p>Verify enrollment success  Confirm session identity</p>
  </div>
  <div class="page">
    <p>Enroller: Button Finder</p>
  </div>
  <div class="page">
    <p>Button finder: Location</p>
  </div>
  <div class="page">
    <p>Button finder: Location</p>
  </div>
  <div class="page">
    <p>Button finder: Location</p>
    <p>Second Click, False Positive Second Click, True Positive</p>
    <p>First Click, True Positive Second Click, True Positive</p>
  </div>
  <div class="page">
    <p>Registration Automation</p>
  </div>
  <div class="page">
    <p>Oracle</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Not Vulnerable 57.4%</p>
    <p>Buggy 2.3%</p>
    <p>No Facebook SSO, 90.7%</p>
    <p>Facebook SSO, 9.3%</p>
    <p>Misuse cred 12.1%</p>
    <p>Leak cred 8.6%</p>
    <p>Test failed 20.0%</p>
    <p>Valid top US ranked sites (17, 913)</p>
    <p>Dataset: Top-ranked 20,000 US sites1 excluding hidden sites, DNS errors and timeouts.</p>
  </div>
  <div class="page">
    <p>Example vulnerable cases</p>
    <p>Credential Misuse  signed_request:</p>
    <p>Credential Misuse  both: Credential Leakage:</p>
    <p>: Both vulnerabilities fixed as of now</p>
  </div>
  <div class="page">
    <p>Facebook SSO support % vs. site ranking</p>
    <p>More popular sites tend to include Facebook SSO more.</p>
    <p>Site rank (each bin contains 179 sites, 1% of the total tested)</p>
    <p>More popular Less popular</p>
    <p>% S</p>
    <p>up po</p>
    <p>rt in</p>
    <p>g Fa</p>
    <p>ce bo</p>
    <p>o k</p>
    <p>SS O</p>
  </div>
  <div class="page">
    <p>% V</p>
    <p>u ln</p>
    <p>er ab</p>
    <p>le</p>
    <p>Vulnerable sites % vs. sites ranking</p>
    <p>*</p>
    <p>*: no Facebook SSO supported sites</p>
    <p>Site rank (each bin contains 179 sites, 1% of the total tested)</p>
    <p>More popular Less popular</p>
    <p>Higher-profile sites do not seem to have better security practices (SSO integration).</p>
  </div>
  <div class="page">
    <p>Integration methods</p>
    <p>SDK:</p>
    <p>Widget:</p>
    <p>Custom code: Anything else</p>
    <p>&lt;iframe name=&quot;1394305783460&quot; frameborder=&quot;0&quot; &gt;&lt;/iframe&gt;</p>
    <p>&lt;script src=&quot;//connect.facebook.net/en_US/all.js&quot; type=&quot;text/ javascript&quot;&gt;&lt;/script&gt;</p>
    <p>Method Number Misuse vul Leakage vul</p>
    <p>SDK 578 29.1% 3.6%</p>
    <p>Widget 132 15.5% 2.2%</p>
    <p>Custom 950 1.3% 12.4%</p>
    <p>All 1660 12.1% 8.6%</p>
  </div>
  <div class="page">
    <p>Responses from vendors 20 vendors contacted.</p>
    <p>} Only got 8 responses } 3 of 8 responded after initial (automated) response } After 3 months, one site removed Facebook SSO from their</p>
    <p>site: ehow.com</p>
    <p>Through a personal connection, we reached another vendor .</p>
    <p>} After first fix, vulnerability still exists } Second fix solved all issues</p>
  </div>
  <div class="page">
    <p>Response from Facebook</p>
    <p>We contacted Facebook on May 2014 regarding the vulnerable websites. Facebook is more concerned with those that</p>
    <p>} Leak access_token through referer header; } misuse any type of OAuth credential.</p>
    <p>We reported 95 of such cases to Facebook and Facebook responded: We have notified and taken appropriate actions against those sites. Only 4 out of 95 fixed their issues as of our latest test result.</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>SSOScan shows roughly 20% of the top ranked websites suffer from SSO vulnerabilities. Notifying vendors, or even the identity provider, are not as effective as one might expect.</p>
    <p>SSOScan deployment opportunities:</p>
    <p>} Integrated at identity provider app center / app store } Ensure application security by shutting down vulnerable apps access.</p>
    <p>} Checking-as-a-service</p>
  </div>
  <div class="page">
    <p>SSOScan as a web service: http://www.ssoscan.org/</p>
    <p>Thank you!</p>
  </div>
</Presentation>
