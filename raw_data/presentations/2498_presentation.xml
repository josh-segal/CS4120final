<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>How Hard Can It Be?  Designing and Implementing a</p>
    <p>Deployable Multipath TCP Cos$n Raiciu</p>
    <p>University Politehnica of Bucharest</p>
    <p>Joint work with: Christoph Paasch, Sebas1en Barre, Alan Ford, Fabien Duchene, Michio Honda, Olivier Bonaventure, Mark Handley</p>
    <p>Thanks to</p>
  </div>
  <div class="page">
    <p>Networks are becoming mul$path</p>
    <p>Mobile devices have mul1ple wireless connec1ons</p>
  </div>
  <div class="page">
    <p>Networks are becoming mul$path</p>
    <p>Datacenters have redundant topologies</p>
  </div>
  <div class="page">
    <p>Networks are becoming mul$path</p>
    <p>Datacenters have redundant topologies</p>
  </div>
  <div class="page">
    <p>Networks are becoming mul$path</p>
    <p>Servers are mul1-homed</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>How do we use these networks?</p>
    <p>TCP.</p>
    <p>Used by most applica$ons,</p>
    <p>offers byte-oriented reliable delivery,</p>
    <p>adjusts load to network condi$ons</p>
  </div>
  <div class="page">
    <p>TCP is single path</p>
    <p>A TCP connec$on Uses a single-path in the network regardless of network topology</p>
    <p>Is 1ed to the source and des1na1on addresses of the endpoints</p>
  </div>
  <div class="page">
    <p>Mismatch between network and transport</p>
    <p>creates problems</p>
  </div>
  <div class="page">
    <p>Collisions in datacenters</p>
    <p>[Fares et al - A Scalable, Commodity Data Center Network Architecture - Sigcomm 2008]</p>
  </div>
  <div class="page">
    <p>How hard can it be?</p>
    <p>Designing and</p>
    <p>Implementing a</p>
    <p>Deployable Multipath TCP</p>
  </div>
  <div class="page">
    <p>Deployable Multipath TCP</p>
    <p>How hard can it be?</p>
    <p>Designing</p>
    <p>Implementing</p>
  </div>
  <div class="page">
    <p>Deployable Multipath TCP</p>
    <p>How hard can it be?</p>
    <p>Designing</p>
    <p>Implementing</p>
  </div>
  <div class="page">
    <p>Goal: A Deployable Multipath TCP</p>
    <p>We want to evolve TCP to be able to use mul2ple paths in the network.</p>
    <p>Mul$path TCP must meet the following goals:</p>
    <p>GOAL 1: Support unmodified applica.ons</p>
    <p>GOAL 2: Work over todays networks</p>
    <p>GOAL 3: Work whenever TCP would work</p>
  </div>
  <div class="page">
    <p>Our Linux kernel Mul.path TCP implementa.on supports legacy apps</p>
    <p>and works well over:</p>
    <p>deployed 3G and Wifi networks,</p>
    <p>exis1ng datacenters and</p>
    <p>the Internet at large.</p>
  </div>
  <div class="page">
    <p>Deployable Multipath TCP</p>
    <p>How hard can it be?</p>
    <p>Designing</p>
    <p>Implementing</p>
  </div>
  <div class="page">
    <p>It can be preTy hard.</p>
  </div>
  <div class="page">
    <p>It can be preTy hard.</p>
    <p>Mark Handley suggested we start working on designing MPTCP in spring 2007</p>
  </div>
  <div class="page">
    <p>It can be preTy hard.</p>
    <p>Mark Handley suggested we start working on designing MPTCP in spring 2007</p>
    <p>Five years later, here we are</p>
    <p>we finally nailed this!</p>
  </div>
  <div class="page">
    <p>It can be preTy hard.</p>
    <p>Mark Handley suggested we start working on designing MPTCP in spring 2007</p>
    <p>Five years later, here we are</p>
    <p>we finally nailed this!</p>
    <p>Why was it this difficult?</p>
    <p>Internet Architecture is a living thing.</p>
  </div>
  <div class="page">
    <p>Protocol Layering</p>
    <p>IP IP IP IP</p>
    <p>TCP TCP</p>
    <p>HTTP HTTP</p>
    <p>Ethernet Modem Ethernet ATM ATM Modem</p>
    <p>Web Server</p>
    <p>Internet Router</p>
    <p>Internet Router</p>
    <p>Web Client</p>
    <p>Link layers (eg Ethernet) are local to a particular link  Routers look at IP headers to decide how to route a packet.  TCP provides reliability via retransmission, flow control, etc.  Application using OSs TCP API to do its job.</p>
    <p>Fiction!</p>
  </div>
  <div class="page">
    <p>Middleboxes</p>
  </div>
  <div class="page">
    <p>Source Port Destination Port</p>
    <p>Sequence Number</p>
    <p>Acknowledgment Number</p>
    <p>Receive Window Header Length Reserved Code bits</p>
    <p>Checksum</p>
    <p>Options</p>
    <p>Urgent Pointer</p>
    <p>Data</p>
    <p>Bit 0 Bit 15 Bit 16 Bit 31</p>
    <p>Destination IP</p>
    <p>Source IP</p>
    <p>TTL Header Checksum Protocol</p>
    <p>Identification Fragment Offset Flags</p>
    <p>IHL Version TOS Total Length ECN</p>
  </div>
  <div class="page">
    <p>Source Port Destination Port</p>
    <p>Sequence Number</p>
    <p>Acknowledgment Number</p>
    <p>Receive Window Header Length Reserved Code bits</p>
    <p>Checksum</p>
    <p>Options</p>
    <p>Urgent Pointer</p>
    <p>Data</p>
    <p>Bit 0 Bit 15 Bit 16 Bit 31</p>
    <p>Destination IP</p>
    <p>Source IP</p>
    <p>TTL Header Checksum Protocol</p>
    <p>Identification Fragment Offset Flags</p>
    <p>IHL Version TOS Total Length ECN</p>
  </div>
  <div class="page">
    <p>Source Port Destination Port</p>
    <p>Sequence Number</p>
    <p>Acknowledgment Number</p>
    <p>Receive Window Header Length Reserved Code bits</p>
    <p>Checksum</p>
    <p>Options</p>
    <p>Urgent Pointer</p>
    <p>Data</p>
    <p>Bit 0 Bit 15 Bit 16 Bit 31</p>
    <p>Destination IP</p>
    <p>Source IP</p>
    <p>TTL Header Checksum Protocol</p>
    <p>Identification Fragment Offset Flags</p>
    <p>IHL Version TOS Total Length ECN</p>
  </div>
  <div class="page">
    <p>Source Port Destination Port</p>
    <p>Sequence Number</p>
    <p>Acknowledgment Number</p>
    <p>Receive Window Header Length Reserved Code bits</p>
    <p>Checksum</p>
    <p>Options</p>
    <p>Urgent Pointer</p>
    <p>Data</p>
    <p>Bit 0 Bit 15 Bit 16 Bit 31</p>
    <p>Destination IP</p>
    <p>Source IP</p>
    <p>TTL Header Checksum Protocol</p>
    <p>Identification Fragment Offset Flags</p>
    <p>IHL Version TOS Total Length ECN</p>
  </div>
  <div class="page">
    <p>Source Port Destination Port</p>
    <p>Sequence Number</p>
    <p>Acknowledgment Number</p>
    <p>Receive Window Header Length Reserved Code bits</p>
    <p>Checksum</p>
    <p>Options</p>
    <p>Urgent Pointer</p>
    <p>Data</p>
    <p>Bit 0 Bit 15 Bit 16 Bit 31</p>
    <p>Destination IP</p>
    <p>Source IP</p>
    <p>TTL Header Checksum Protocol</p>
    <p>Identification Fragment Offset Flags</p>
    <p>IHL Version TOS Total Length ECN</p>
  </div>
  <div class="page">
    <p>Deployable Multipath TCP</p>
    <p>How hard can it be?</p>
    <p>Designing</p>
    <p>Implementing</p>
  </div>
  <div class="page">
    <p>MPTCP Connec$on Management</p>
  </div>
  <div class="page">
    <p>MPTCP Connec$on Management</p>
    <p>SYN</p>
    <p>MP_CA PABLE</p>
  </div>
  <div class="page">
    <p>MPTCP Connec$on Management</p>
    <p>SYN</p>
    <p>MP_CA PABLE</p>
    <p>Enable MPTCP if SYN has MP_CAPABLE</p>
  </div>
  <div class="page">
    <p>MPTCP Connec$on Management</p>
    <p>SYN/ACK MP_CAPABLE</p>
    <p>Enable MPTCP if SYN has MP_CAPABLE</p>
    <p>ENABLED</p>
  </div>
  <div class="page">
    <p>MPTCP Connec$on Management</p>
    <p>SYN/ACK MP_CAPABLE</p>
    <p>Enable MPTCP if SYN has MP_CAPABLE</p>
    <p>ENABLED</p>
    <p>Enable MPTCP if SYN/ACK has MP_CAPABLE</p>
  </div>
  <div class="page">
    <p>MPTCP Connec$on Management</p>
    <p>Enable MPTCP if SYN/ACK has MP_CAPABLE</p>
    <p>Enable MPTCP if SYN has MP_CAPABLE</p>
    <p>ENABLED ENABLED</p>
    <p>ACK</p>
  </div>
  <div class="page">
    <p>MPTCP Connec$on Management</p>
    <p>Subflow 1 Subflow 1</p>
  </div>
  <div class="page">
    <p>MPTCP Connec$on Management</p>
    <p>SYN JOIN</p>
    <p>Subflow 1 Subflow 1</p>
  </div>
  <div class="page">
    <p>MPTCP Connec$on Management</p>
    <p>SYN/A CK</p>
    <p>JOIN</p>
    <p>Subflow 1 Subflow 1</p>
  </div>
  <div class="page">
    <p>MPTCP Connec$on Management</p>
    <p>ACK</p>
    <p>Subflow 1 Subflow 1</p>
  </div>
  <div class="page">
    <p>MPTCP Connec$on Management</p>
    <p>Subflow 1 Subflow 1</p>
    <p>Subflow 2 Subflow 2</p>
  </div>
  <div class="page">
    <p>That was easy!</p>
  </div>
  <div class="page">
    <p>Almost too easy</p>
  </div>
  <div class="page">
    <p>MPTCP Connec$on Management</p>
    <p>SYN/ACK MP_CAPABLE Y</p>
    <p>Enable MPTCP if SYN/ACK has MP_CAPABLE</p>
    <p>Enable MPTCP if SYN has MP_CAPABLE</p>
    <p>ENABLED</p>
  </div>
  <div class="page">
    <p>MPTCP Connec$on Management</p>
    <p>Enable MPTCP if SYN/ACK has MP_CAPABLE</p>
    <p>Enable MPTCP if SYN has MP_CAPABLE</p>
    <p>SYN/ACK MP_CAPABLE</p>
    <p>ENABLED</p>
    <p>[Honda et al.  Is It S$ll Possible to Extend TCP?  IMC 2011 ]</p>
  </div>
  <div class="page">
    <p>MPTCP Connec$on Management</p>
    <p>Enable MPTCP if SYN/ACK has MP_CAPABLE</p>
    <p>Enable MPTCP if SYN has MP_CAPABLE</p>
    <p>SYN/ ACK</p>
    <p>ENABLED DISABLED</p>
  </div>
  <div class="page">
    <p>MPTCP Connec$on Management</p>
    <p>Enable MPTCP if SYN/ACK has MP_CAPABLE</p>
    <p>Enable MPTCP if SYN has MP_CAPABLE</p>
    <p>and ACK has DATA_ACK</p>
    <p>SYN/ ACK</p>
    <p>DISABLED</p>
  </div>
  <div class="page">
    <p>MPTCP Connec$on Management</p>
    <p>Enable MPTCP if SYN/ACK has MP_CAPABLE</p>
    <p>ACK</p>
    <p>DISABLED</p>
    <p>Enable MPTCP if SYN has MP_CAPABLE</p>
    <p>and ACK has DATA_ACK</p>
  </div>
  <div class="page">
    <p>MPTCP Connec$on Management</p>
    <p>Enable MPTCP if SYN/ACK has MP_CAPABLE</p>
    <p>ACK</p>
    <p>DISABLED DISABLED</p>
    <p>Enable MPTCP if SYN has MP_CAPABLE</p>
    <p>and ACK has DATA_ACK</p>
    <p>To achieve GOAL 3: When MPTCP opera$on is not possible, fallback to TCP.</p>
  </div>
  <div class="page">
    <p>Nego$a$on used to be between two endpoints</p>
    <p>In todays Internet, nego$a$on is: between two endpoints and an unknown number of intermediaries</p>
    <p>New protocol nego2a2on has to take this into account or it will fail</p>
    <p>Lesson</p>
  </div>
  <div class="page">
    <p>Sending Data</p>
  </div>
  <div class="page">
    <p>TCP Opera$on</p>
  </div>
  <div class="page">
    <p>TCP Opera$on</p>
  </div>
  <div class="page">
    <p>TCP Opera$on</p>
  </div>
  <div class="page">
    <p>TCP Opera$on</p>
  </div>
  <div class="page">
    <p>TCP Opera$on</p>
    <p>ACK 1</p>
  </div>
  <div class="page">
    <p>TCP Opera$on</p>
    <p>ACK 2 ACK 1</p>
  </div>
  <div class="page">
    <p>TCP Opera$on</p>
    <p>ACK 3 ACK 2 ACK 1</p>
  </div>
  <div class="page">
    <p>TCP Opera$on</p>
    <p>ACK 4 ACK 3 ACK 2</p>
    <p>ACK 1</p>
  </div>
  <div class="page">
    <p>Strawman Design</p>
  </div>
  <div class="page">
    <p>Strawman Design</p>
  </div>
  <div class="page">
    <p>Strawman Design</p>
  </div>
  <div class="page">
    <p>Strawman Design</p>
  </div>
  <div class="page">
    <p>Strawman Design</p>
    <p>ACK 1</p>
  </div>
  <div class="page">
    <p>Strawman Design</p>
    <p>ACK 1</p>
    <p>ACK 2</p>
  </div>
  <div class="page">
    <p>Strawman Design</p>
    <p>ACK 3</p>
    <p>ACK 2</p>
    <p>ACK 1</p>
    <p>A third of access networks will correct or drop ACKs of unseen data</p>
  </div>
  <div class="page">
    <p>Strawman Design</p>
    <p>ACK 3</p>
    <p>ACK 4</p>
    <p>ACK 1</p>
  </div>
  <div class="page">
    <p>Strawman Design</p>
  </div>
  <div class="page">
    <p>Ok, so what does work?</p>
    <p>We need a sequence space for each subflow  This will drive loss detec$on and retransmissions</p>
    <p>We need a data sequence number  This will put segments in order at the receiver</p>
    <p>We need a data ACK for flow control  Receive window is rela$ve to Data ACK</p>
  </div>
  <div class="page">
    <p>MPTCP Data Transmission</p>
    <p>SUBFLOW: 100 DATA:1</p>
  </div>
  <div class="page">
    <p>MPTCP Data Transmission</p>
    <p>SUBFLOW: 100 DATA:1</p>
    <p>SUBFLOW: 200 DATA:2</p>
  </div>
  <div class="page">
    <p>MPTCP Data Transmission</p>
    <p>SUBFLOW: 101 DATA:3</p>
    <p>SUBFLOW: 200 DATA:2</p>
    <p>SUBFLOW: 100 DATA:1</p>
  </div>
  <div class="page">
    <p>MPTCP Data Transmission</p>
    <p>SUBFLOW: 101 DATA:3</p>
    <p>SUBFLOW: 200 DATA:2</p>
    <p>SUBFLOW: 100 DATA:1</p>
  </div>
  <div class="page">
    <p>MPTCP Data Transmission</p>
    <p>SUBFLOW: 101 DATA:3</p>
    <p>SUBFLOW: 200 DATA:2</p>
    <p>SUBFLOW: 100 DATA:1</p>
    <p>SUBFLOW: 102 DATA:2</p>
  </div>
  <div class="page">
    <p>TCP Packet Header</p>
    <p>Source Port Destination Port</p>
    <p>Sequence Number</p>
    <p>Acknowledgment Number</p>
    <p>Receive Window Header Length Reserved Code bits</p>
    <p>Checksum</p>
    <p>Options</p>
    <p>Urgent Pointer</p>
    <p>Data</p>
    <p>Bit 0 Bit 15 Bit 16 Bit 31</p>
  </div>
  <div class="page">
    <p>MPTCP Packet Header</p>
    <p>Source Port Destination Port</p>
    <p>Sequence Number</p>
    <p>Acknowledgment Number</p>
    <p>Receive Window Header Length Reserved Code bits</p>
    <p>Checksum</p>
    <p>Options</p>
    <p>Urgent Pointer</p>
    <p>Data</p>
    <p>Bit 0 Bit 15 Bit 16 Bit 31</p>
    <p>Subflow</p>
    <p>Subflow</p>
    <p>Subflow Subflow</p>
  </div>
  <div class="page">
    <p>MPTCP Packet Header</p>
    <p>Source Port Destination Port</p>
    <p>Sequence Number</p>
    <p>Acknowledgment Number</p>
    <p>Receive Window Header Length Reserved Code bits</p>
    <p>Checksum</p>
    <p>Options</p>
    <p>Urgent Pointer</p>
    <p>Data</p>
    <p>Bit 0 Bit 15 Bit 16 Bit 31</p>
    <p>Subflow</p>
    <p>Subflow</p>
    <p>Subflow Subflow</p>
    <p>Connection relative to Data ACK</p>
  </div>
  <div class="page">
    <p>MPTCP Packet Header</p>
    <p>Source Port Destination Port</p>
    <p>Sequence Number</p>
    <p>Acknowledgment Number</p>
    <p>Receive Window Header Length Reserved Code bits</p>
    <p>Checksum</p>
    <p>Options</p>
    <p>Urgent Pointer</p>
    <p>Data</p>
    <p>Bit 0 Bit 15 Bit 16 Bit 31</p>
    <p>Subflow</p>
    <p>Subflow</p>
    <p>Subflow Subflow</p>
    <p>Data sequence number ? Data ACK ?</p>
    <p>Data sequence number ? Data ACK ?</p>
    <p>Connection relative to</p>
  </div>
  <div class="page">
    <p>Sending Data ACKs in the payload sucks</p>
  </div>
  <div class="page">
    <p>Sending Data ACKs in the payload sucks leads to deadlocks</p>
  </div>
  <div class="page">
    <p>Client Server</p>
    <p>Read Request 2, Sends Response 2</p>
    <p>Read Request 1, Sends Response 1</p>
    <p>Read Request 2, Sends Response 2</p>
  </div>
  <div class="page">
    <p>Read Request 1, Starts sending response 1 (wont read request 2 $ll finished)</p>
    <p>Client Server</p>
    <p>Client blocked by server receive window</p>
    <p>Server blocked on client receive window (receive window will only open when Data Ack received)</p>
    <p>Client wants to send Data Ack, but blocked by receive window</p>
    <p>Deadlock</p>
    <p>Data wai$ng in receive buffer</p>
    <p>Even though the client app has read the data, Data Ack s$ll cannot be sent</p>
  </div>
  <div class="page">
    <p>Design space for feasible solu1ons is quite narrow</p>
    <p>There are not too many things that could have</p>
    <p>been done differently</p>
    <p>Read paper for:  Flow control  Dealing with content- changing middleboxes</p>
    <p>Dealing with TSO/LRO  Connec$on teardown</p>
    <p>Fast receive code  Middlebox tests  Evalua$on</p>
  </div>
  <div class="page">
    <p>Deployable Multipath TCP</p>
    <p>How hard can it be?</p>
    <p>Designing</p>
    <p>Implementing</p>
  </div>
  <div class="page">
    <p>MPTCP over WiFi/3G</p>
  </div>
  <div class="page">
    <p>TCP over WiFi/3G</p>
  </div>
  <div class="page">
    <p>MPTCP over WiFi/3G</p>
  </div>
  <div class="page">
    <p>MPTCP over WiFi/3G</p>
    <p>Mul1path TCP increases throughput</p>
  </div>
  <div class="page">
    <p>MPTCP over WiFi/3G</p>
    <p>What happened here?</p>
  </div>
  <div class="page">
    <p>MPTCP over WiFi/3G</p>
  </div>
  <div class="page">
    <p>MPTCP over WiFi/3G</p>
  </div>
  <div class="page">
    <p>MPTCP over WiFi/3G</p>
    <p>Receive Window</p>
  </div>
  <div class="page">
    <p>MPTCP over WiFi/3G</p>
    <p>ACK</p>
    <p>Receive Window</p>
  </div>
  <div class="page">
    <p>MPTCP over WiFi/3G</p>
    <p>Wifi path blocked by the Receive Window</p>
    <p>Receive Window</p>
  </div>
  <div class="page">
    <p>MPTCP over WiFi/3G</p>
    <p>Receive Window</p>
    <p>REINJECT SEGMENT ON WIFI</p>
  </div>
  <div class="page">
    <p>MPTCP over WiFi/3G</p>
    <p>HALVE CONGESTION WINDOW</p>
    <p>OF 3G SUBFLOW 3 2 4</p>
    <p>Receive Window 1</p>
  </div>
  <div class="page">
    <p>MPTCP over WiFi/3G</p>
    <p>Receive Window 1</p>
  </div>
  <div class="page">
    <p>MPTCP over WiFi/3G</p>
    <p>Receive Window 1</p>
  </div>
  <div class="page">
    <p>MPTCP over WiFi/3G</p>
  </div>
  <div class="page">
    <p>Demo</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Designing a Mul$path TCP isnt difficult.  Designing a deployable Mul$path TCP is much harder.  Need to understand the evolving and undocumented Internet architecture.</p>
    <p>Need defensive mechanisms to fall back to TCP behaviour when all else fails.</p>
    <p>Most extensions to TCP now face the same hurdles.</p>
  </div>
  <div class="page">
    <p>Conclusions (2)</p>
    <p>Designing a performant MPTCP needs care.  Especially need careful management of buffering to avoid unwanted interac$ons between subflows.</p>
  </div>
  <div class="page">
    <p>MPTCP allows standard applica2ons to reap the benefits of mul2path networks</p>
    <p>It is deployable today  Try out the code  hDp://mptcp.info.ucl.ac.be/</p>
  </div>
</Presentation>
