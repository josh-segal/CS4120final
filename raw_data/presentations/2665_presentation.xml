<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Diplomat Using Delegations to Protect Community Repositories</p>
    <p>Trishank Karthik Kuppusamy, Santiago TorresArias, Vladimir Diaz, Justin Cappos</p>
  </div>
  <div class="page">
    <p>Community repositories</p>
  </div>
  <div class="page">
    <p>Community repositories: examples</p>
  </div>
  <div class="page">
    <p>Community repositories: definition</p>
    <p>All software by 3rd-party developers.</p>
    <p>Software organized by projects.  A project may release many</p>
    <p>packages.  &gt; 10K projects, 100K packages (e.g.,</p>
    <p>on PyPI).  A new project/package added</p>
    <p>every few minutes (e.g., on PyPI).</p>
    <p>Django</p>
    <p>Django1.7.1.tar.gz</p>
    <p>Scapy Scapy2.3.1.zip</p>
    <p>Django1.6.8.tar.gz</p>
    <p>Projects Packages</p>
  </div>
  <div class="page">
    <p>Great! What is the problem?</p>
  </div>
  <div class="page">
    <p>What do these organizations share?</p>
  </div>
  <div class="page">
    <p>Users were attacked via software updates.</p>
  </div>
  <div class="page">
    <p>Repository compromise: impact</p>
    <p>High impact: malware can be installed by millions of unsuspecting users.  Microsoft Windows Update (2012): Flame malware spread via MitM attack.  South Korea cyberattack (2013): $756,000,000 USD in economic damage due</p>
    <p>to malware spread partly via automatic software updates.</p>
  </div>
  <div class="page">
    <p>Goal: compromise-resilience</p>
    <p>Cannot prevent a compromise.  But must at least limit its impact.  Attackers can compromise as few</p>
    <p>users as possible.</p>
  </div>
  <div class="page">
    <p>Previous security systems</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>online keys</p>
    <p>developer keys</p>
    <p>offline keys package</p>
    <p>delegates packages to</p>
    <p>foo-2.0</p>
    <p>packages</p>
    <p>signs for packages</p>
    <p>project developers</p>
    <p>repository administrators(a)</p>
    <p>(c)</p>
    <p>foo-2.1</p>
    <p>bar-1.0</p>
    <p>foo-2.0</p>
    <p>projects</p>
    <p>(d)</p>
    <p>foo-2.1</p>
    <p>bar-1.0</p>
    <p>foo-2.0</p>
    <p>projects foo-2.1</p>
    <p>bar-1.0</p>
    <p>foo</p>
    <p>bar</p>
    <p>foo</p>
    <p>bar</p>
    <p>legend</p>
    <p>(b)</p>
    <p>foo-2.0</p>
    <p>foo-2.1</p>
    <p>bar-1.0</p>
    <p>foo</p>
    <p>barGPG</p>
    <p>packagesproject developers</p>
    <p>repository administrators</p>
  </div>
  <div class="page">
    <p>(a) Repos sign packages with online keys</p>
    <p>Repositories sign packages with a transport mechanism (e.g., TLS, CUP).</p>
    <p>Signing private keys kept online.</p>
    <p>Not compromise-resilient.</p>
    <p>foo-2.0</p>
    <p>packagesproject developers</p>
    <p>repository administrators(a)</p>
    <p>foo-2.1</p>
    <p>bar-1.0</p>
    <p>online keys</p>
  </div>
  <div class="page">
    <p>(b) Devs sign packages with offline keys</p>
    <p>Developers sign packages with (e.g., GPG, RSA) offline private keys.</p>
    <p>Compromise-resilient!  But, unusable key</p>
    <p>distribution &amp; revocation.</p>
    <p>(b)</p>
    <p>foo-2.0</p>
    <p>foo-2.1</p>
    <p>bar-1.0</p>
    <p>foo</p>
    <p>barGPG</p>
    <p>packagesproject developers</p>
    <p>repository administrators</p>
    <p>developer keys</p>
  </div>
  <div class="page">
    <p>Interlude: Delegations with TUF</p>
    <p>TUF (our previous system) uses delegations.</p>
    <p>Bind public keys to projects.  Survivable key</p>
    <p>compromise in software update systems, Samuel et. al., CCS 2010.</p>
    <p>Metadata Packages</p>
    <p>projects</p>
    <p>Alice</p>
    <p>Django1.7.1.tar.gz</p>
    <p>Dj an</p>
    <p>go -*</p>
    <p>*.tar.gz Bob</p>
    <p>Administratormanaged</p>
    <p>Developermanaged</p>
    <p>Sue Scapy</p>
    <p>Django1.6.8.tar.gz</p>
    <p>Scapy-*</p>
    <p>developer keys</p>
    <p>delegates packages to</p>
    <p>signs for packages</p>
  </div>
  <div class="page">
    <p>Interlude: Delegations with TUF</p>
    <p>How to sign delegations?</p>
    <p>Use online or offline keys?</p>
    <p>Metadata Packages</p>
    <p>projects</p>
    <p>Alice</p>
    <p>Django1.7.1.tar.gz</p>
    <p>Dj an</p>
    <p>go -*</p>
    <p>*.tar.gz Bob</p>
    <p>Administratormanaged</p>
    <p>Developermanaged</p>
    <p>Sue Scapy</p>
    <p>Django1.6.8.tar.gz</p>
    <p>Scapy-*</p>
    <p>developer keys</p>
    <p>delegates packages to</p>
    <p>signs for packages</p>
  </div>
  <div class="page">
    <p>(c) Repos delegate projects with online keys</p>
    <p>Repositories delegate projects to developers with online keys.</p>
    <p>Immediate project registration!</p>
    <p>But, not compromiseresilient.</p>
    <p>packagesproject developers</p>
    <p>repository administrators(c)</p>
    <p>foo-2.0</p>
    <p>projects foo-2.1</p>
    <p>bar-1.0</p>
    <p>foo</p>
    <p>bar</p>
    <p>online keys</p>
    <p>developer keys</p>
    <p>delegates packages to</p>
    <p>signs for packages</p>
  </div>
  <div class="page">
    <p>(d) Admins delegate projects with offline keys  Administrators delegate</p>
    <p>projects to developers with offline keys.</p>
    <p>Compromise-resilient!  But, no immediate</p>
    <p>project registration.</p>
    <p>(d)</p>
    <p>foo-2.0</p>
    <p>projects foo-2.1</p>
    <p>bar-1.0</p>
    <p>foo</p>
    <p>bar</p>
    <p>packagesproject developers</p>
    <p>repository administrators</p>
    <p>developer keys</p>
    <p>delegates packages to</p>
    <p>signs for packages</p>
    <p>offline keys</p>
  </div>
  <div class="page">
    <p>Previous systems force community repositories to choose either compromise-resilience, or immediate project registration.</p>
    <p>Either or</p>
  </div>
  <div class="page">
    <p>Diplomat: a new security system</p>
  </div>
  <div class="page">
    <p>New idea</p>
    <p>What if. (e)</p>
    <p>projects</p>
    <p>foo</p>
    <p>bar</p>
    <p>project developers</p>
    <p>repository administrators</p>
    <p>developer keys</p>
    <p>offline keys</p>
  </div>
  <div class="page">
    <p>New idea: a middle way?</p>
    <p>What if.  Sign delegations to most</p>
    <p>projects with offline keys...</p>
    <p>(e)</p>
    <p>projects</p>
    <p>foo</p>
    <p>bar</p>
    <p>project developers</p>
    <p>repository administrators</p>
    <p>claimedprojects</p>
    <p>developer keys</p>
    <p>offline keys</p>
  </div>
  <div class="page">
    <p>New idea: a middle way?</p>
    <p>What if.  Sign delegations to most</p>
    <p>projects with offline keys.</p>
    <p>Sign only delegations to new projects with online keys.</p>
    <p>(e)</p>
    <p>projects</p>
    <p>foo</p>
    <p>bar</p>
    <p>project developers</p>
    <p>repository administrators</p>
    <p>claimedprojects</p>
    <p>newprojects</p>
    <p>developer keys</p>
    <p>offline keys</p>
    <p>online keys</p>
  </div>
  <div class="page">
    <p>New idea: a middle way?</p>
    <p>Both compromiseresilience and immediate project registration via multiple delegations.</p>
    <p>(e)</p>
    <p>projects</p>
    <p>foo</p>
    <p>bar</p>
    <p>project developers</p>
    <p>repository administrators</p>
    <p>claimedprojects</p>
    <p>newprojects</p>
    <p>online keys</p>
    <p>developer keys</p>
    <p>offline keys</p>
  </div>
  <div class="page">
    <p>Ambiguous delegations</p>
    <p>What if A delegates the bar project to both B and C?</p>
    <p>Should a package manager trust B or C for the bar project?</p>
    <p>ambiguous delegationsbacktracking</p>
    <p>delegation</p>
    <p>ba r-*</p>
    <p>* A</p>
    <p>B</p>
    <p>*</p>
    <p>C</p>
    <p>bar-1.0</p>
    <p>bar-1.0</p>
    <p>bar-1.1</p>
  </div>
  <div class="page">
    <p>Ambiguous delegations: ordering problem</p>
    <p>What if both B and C sign the same bar-1.0 package?</p>
    <p>ambiguous delegationsbacktracking</p>
    <p>delegation</p>
    <p>ba r-*</p>
    <p>* A</p>
    <p>B</p>
    <p>*</p>
    <p>bar-1.0</p>
    <p>C</p>
    <p>bar-1.0</p>
  </div>
  <div class="page">
    <p>Ambiguous delegations: failover problem</p>
    <p>What if B does not sign the bar-1.1 package, but C does?</p>
    <p>ambiguous delegationsbacktracking</p>
    <p>delegation</p>
    <p>ba r-*</p>
    <p>* A</p>
    <p>B</p>
    <p>*</p>
    <p>C bar-1.1</p>
  </div>
  <div class="page">
    <p>Ambiguous delegations</p>
    <p>No clear answer.  How does A say what</p>
    <p>it really means?  Only trust B for bar,</p>
    <p>and C for everything else.</p>
    <p>ambiguous delegationsbacktracking</p>
    <p>delegation</p>
    <p>ba r-*</p>
    <p>* A</p>
    <p>B</p>
    <p>*</p>
    <p>C</p>
    <p>bar-1.0</p>
    <p>bar-1.0</p>
    <p>bar-1.1</p>
  </div>
  <div class="page">
    <p>Prioritized delegations: ordering problem</p>
    <p>A prioritizes delegation to B before C.</p>
    <p>Package manager will check B before C.</p>
    <p>ambiguous delegations</p>
    <p>ba r-*</p>
    <p>* A</p>
    <p>B bar-1.0</p>
    <p>C</p>
    <p>bar-1.0</p>
    <p>prioritized, backtracking delegation</p>
    <p>*</p>
    <p>(1)</p>
    <p>(2)</p>
  </div>
  <div class="page">
    <p>Terminating delegations: failover problem</p>
    <p>ambiguous delegationsbacktracking</p>
    <p>delegation</p>
    <p>ba r-*</p>
    <p>* A</p>
    <p>B</p>
    <p>*</p>
    <p>C bar-1.1</p>
    <p>terminating delegation</p>
    <p>A terminates the bar project at B.</p>
    <p>Package manager will search for bar only in B.</p>
  </div>
  <div class="page">
    <p>Prioritized &amp; terminating delegations</p>
    <p>Conflict resolution with preorder DFS.</p>
    <p>If delegator signed for package, return that.</p>
    <p>Otherwise, visit delegatees in order of priority.</p>
    <p>If delegation is terminating, return after delegatee visit. ambiguous</p>
    <p>delegationsprioritized, backtracking delegation</p>
    <p>terminating delegation</p>
    <p>ba r-*</p>
    <p>* A</p>
    <p>B</p>
    <p>*</p>
    <p>bar-1.0</p>
    <p>C</p>
    <p>bar-1.0</p>
    <p>bar-1.1</p>
    <p>(1)</p>
    <p>(2)</p>
  </div>
  <div class="page">
    <p>Building usable security models</p>
  </div>
  <div class="page">
    <p>Developed from collaboration with real-world community repositories.</p>
    <p>Legacy model (PEP 458).  Maximum model (PEP 480).</p>
    <p>Usable security models</p>
  </div>
  <div class="page">
    <p>Legacy/maximum security model</p>
    <p>foo-*</p>
    <p>zap-*</p>
    <p>projects foo</p>
    <p>Project claimedprojects</p>
    <p>zap-1.0</p>
    <p>foo-mac-1.3</p>
    <p>Projects at risk</p>
    <p>Compromiseresilient projects</p>
    <p>*</p>
    <p>*</p>
    <p>zap Projectnew</p>
    <p>projects zap-1.0</p>
    <p>project developersadministrators packages</p>
    <p>foo-mac-1.2</p>
    <p>foo-win-1.2</p>
    <p>backtracking delegation</p>
    <p>terminating delegation</p>
    <p>developer keys</p>
    <p>offline keys</p>
    <p>online keys</p>
  </div>
  <div class="page">
    <p>Periodic task: claiming new projects</p>
    <p>foo-*</p>
    <p>zap-*</p>
    <p>projects</p>
    <p>foo Projectclaimed</p>
    <p>projects</p>
    <p>Projects at risk</p>
    <p>Compromiseresilient projects</p>
    <p>*</p>
    <p>*</p>
    <p>zap Project</p>
    <p>newprojects</p>
    <p>projectsadministrators</p>
    <p>backtracking delegation</p>
    <p>terminating delegation</p>
    <p>developer keys</p>
    <p>offline keys</p>
    <p>online keys</p>
    <p>packages</p>
    <p>First, a new project will be delegated by the new-projects role.</p>
  </div>
  <div class="page">
    <p>Periodic task: claiming new projects</p>
    <p>foo-*</p>
    <p>projects</p>
    <p>foo Projectclaimed</p>
    <p>projects</p>
    <p>Projects at risk</p>
    <p>Compromiseresilient projects</p>
    <p>*</p>
    <p>*</p>
    <p>newprojects</p>
    <p>projectsadministrators</p>
    <p>backtracking delegation</p>
    <p>terminating delegation</p>
    <p>developer keys</p>
    <p>offline keys</p>
    <p>online keys</p>
    <p>packages</p>
    <p>zap-* zap Project</p>
    <p>Periodically, administrators will move new projects to the claimedprojects role.</p>
  </div>
  <div class="page">
    <p>Projects unsigned by developers</p>
    <p>Developers may not sign projects for various reasons  e.g., project no longer actively maintained</p>
    <p>Idea: why not let administrators sign on behalf of developers?</p>
  </div>
  <div class="page">
    <p>Legacy security model</p>
    <p>foo-*</p>
    <p>zap-*</p>
    <p>projects foo</p>
    <p>Project claimedprojects</p>
    <p>zap-1.0</p>
    <p>foo-mac-1.3</p>
    <p>soup-0.1</p>
    <p>Projects at risk</p>
    <p>Compromiseresilient projects</p>
    <p>*</p>
    <p>*</p>
    <p>zap Project</p>
    <p>unclaimedprojects</p>
    <p>newprojects</p>
    <p>zap-1.0</p>
    <p>project developersadministrators packages</p>
    <p>foo-mac-1.2</p>
    <p>foo-win-1.2</p>
    <p>*</p>
    <p>backtracking delegation</p>
    <p>terminating delegation</p>
    <p>developer keys</p>
    <p>offline keys</p>
    <p>online keys</p>
    <p>Unclaimed projects are like rarely updated projects, but signed with online keys.</p>
  </div>
  <div class="page">
    <p>Legacy security model</p>
    <p>foo-*</p>
    <p>zap-*</p>
    <p>projects foo</p>
    <p>Project claimedprojects</p>
    <p>zap-1.0</p>
    <p>foo-mac-1.3</p>
    <p>soup-0.1</p>
    <p>soup-0.2</p>
    <p>Projects at risk</p>
    <p>Compromiseresilient projects</p>
    <p>*</p>
    <p>*</p>
    <p>zap Project</p>
    <p>unclaimedprojects</p>
    <p>newprojects</p>
    <p>zap-1.0</p>
    <p>project developersadministrators packages</p>
    <p>foo-mac-1.2</p>
    <p>foo-win-1.2</p>
    <p>*</p>
    <p>backtracking delegation</p>
    <p>terminating delegation</p>
    <p>developer keys</p>
    <p>offline keys</p>
    <p>online keys</p>
    <p>Unclaimed projects are like rarely updated projects, but signed with online keys.</p>
  </div>
  <div class="page">
    <p>Maximum security model</p>
    <p>foo-*</p>
    <p>zap-*</p>
    <p>projects foo</p>
    <p>Project claimedprojects</p>
    <p>zap-1.0</p>
    <p>foo-mac-1.3</p>
    <p>soup-0.1</p>
    <p>Projects at risk</p>
    <p>Compromiseresilient projects</p>
    <p>*</p>
    <p>*</p>
    <p>soup-*,</p>
    <p>nuts-*</p>
    <p>zap Project</p>
    <p>rarelyupdatedprojects</p>
    <p>newprojects</p>
    <p>zap-1.0</p>
    <p>project developersadministrators packages</p>
    <p>foo-mac-1.2</p>
    <p>foo-win-1.2</p>
    <p>backtracking delegation</p>
    <p>terminating delegation</p>
    <p>developer keys</p>
    <p>offline keys</p>
    <p>online keys</p>
    <p>Rarely updated projects are not actively maintained by developers, and signed by administrators instead.</p>
  </div>
  <div class="page">
    <p>Maximum security model</p>
    <p>foo-*</p>
    <p>zap-*</p>
    <p>projects foo</p>
    <p>Project claimedprojects</p>
    <p>zap-1.0</p>
    <p>foo-mac-1.3</p>
    <p>soup-0.1</p>
    <p>soup-0.2</p>
    <p>Projects at risk</p>
    <p>Compromiseresilient projects</p>
    <p>*</p>
    <p>*</p>
    <p>soup-*,</p>
    <p>nuts-*</p>
    <p>zap Project</p>
    <p>rarelyupdatedprojects</p>
    <p>newprojects</p>
    <p>zap-1.0</p>
    <p>project developersadministrators packages</p>
    <p>foo-mac-1.2</p>
    <p>foo-win-1.2</p>
    <p>backtracking delegation</p>
    <p>terminating delegation</p>
    <p>developer keys</p>
    <p>offline keys</p>
    <p>online keys</p>
    <p>Rarely updated projects are not actively maintained by developers, and signed by administrators instead.</p>
  </div>
  <div class="page">
    <p>Legacy vs maximum</p>
    <p>Legacy Maximum</p>
    <p>Claimed projects Compromise-resilient Compromise-resilient</p>
    <p>New projects Not compromiseresilient</p>
    <p>Not compromiseresilient</p>
    <p>offline keys</p>
    <p>online keys</p>
  </div>
  <div class="page">
    <p>Legacy vs maximum</p>
    <p>Legacy Maximum</p>
    <p>Claimed projects Compromise-resilient Compromise-resilient</p>
    <p>New projects Not compromiseresilient</p>
    <p>Not compromiseresilient</p>
    <p>Projects signed by administrators on behalf of developers</p>
    <p>Not compromiseresilient</p>
    <p>offline keys</p>
    <p>online keys</p>
  </div>
  <div class="page">
    <p>Legacy vs maximum</p>
    <p>Legacy Maximum</p>
    <p>Claimed projects Compromise-resilient Compromise-resilient</p>
    <p>New projects Not compromiseresilient</p>
    <p>Not compromiseresilient</p>
    <p>Projects signed by administrators on behalf of developers</p>
    <p>Not compromiseresilient</p>
    <p>Compromise-resilient</p>
    <p>offline keys</p>
    <p>online keys</p>
    <p>Cannot immediately release new</p>
    <p>packages</p>
  </div>
  <div class="page">
    <p>Usability</p>
    <p>UX for users, developers &amp; administrators.  Revoking/replacing project/developer keys.  Smooth transition from legacy to maximum.  Securely recovering from a repository</p>
    <p>compromise.  Please see paper for details!</p>
  </div>
  <div class="page">
    <p>Evaluation on PyPI: TLS/GPG</p>
  </div>
  <div class="page">
    <p>Evaluation on PyPI: legacy (popular)</p>
  </div>
  <div class="page">
    <p>Evaluation on PyPI: legacy (hybrid)</p>
  </div>
  <div class="page">
    <p>Evaluation on PyPI: maximum</p>
    <p>Protect &gt;99% users.</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Deployments &amp; Integrations</p>
  </div>
  <div class="page">
    <p>Q &amp; A</p>
    <p>Thanks!</p>
    <p>Questions?</p>
    <p>https://theupdateframework.com</p>
    <p>trishank@nyu.edu</p>
  </div>
</Presentation>
