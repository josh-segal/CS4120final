<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Having your Cake and Eating it too: Routing Security with Privacy</p>
    <p>Protections</p>
    <p>Alexander Gurney* Andreas Haeberlen* Wenchao Zhou*</p>
    <p>Micah Sherr+ Boon Thau Loo*</p>
    <p>* University of Pennsylvania + Georgetown University</p>
  </div>
  <div class="page">
    <p>?</p>
    <p>Motivation: Interdomain routing</p>
    <p>Alice's AS has a contract with Bob's AS  Example: &quot;Bob will always choose the shortest route to</p>
    <p>X&quot;</p>
    <p>How can Alice be sure that Bob complies?  If Bob had a shorter route available, how would Alice</p>
    <p>know?  Bob could break his promise for various reasons</p>
    <p>Alice</p>
    <p>Bob Charlie</p>
    <p>Doris</p>
    <p>Eliot</p>
    <p>C F X</p>
    <p>D G H X</p>
    <p>E J H X</p>
    <p>I will always use the shortest route</p>
    <p>to X</p>
    <p>B C F X ?</p>
    <p>?E X</p>
  </div>
  <div class="page">
    <p>C F X</p>
    <p>Goal #1: Security</p>
    <p>We would like to have security  Goal: If Bob breaks his promise, Alice can detect and</p>
    <p>prove it  S-BGP is not sufficient  NetReview [NSDI'09] is, but requires revealing all routes</p>
    <p>Alice</p>
    <p>Bob Charlie</p>
    <p>Doris</p>
    <p>Eliot</p>
    <p>D G H X</p>
    <p>E X</p>
    <p>B C F X</p>
  </div>
  <div class="page">
    <p>C F X</p>
    <p>Goal #2: Privacy</p>
    <p>We would also like to have privacy  ASes want to avoid revealing routes</p>
    <p>(other than the chosen route)</p>
    <p>Prior solutions choose either security or privacy</p>
    <p>Can we have both? 4 HotNets-X (November 15, 2011)</p>
    <p>Alice</p>
    <p>Bob Charlie</p>
    <p>Doris</p>
    <p>Eliot</p>
    <p>D G H X</p>
    <p>E X</p>
    <p>B C F X</p>
  </div>
  <div class="page">
    <p>Private and Verifiable Routing (PVR)</p>
    <p>Our goal is to find a protocol that can be run alongside BGP and guarantees the following:</p>
    <p>Detection: If an AS breaks a promise about its interdomain routing policies, at least one of its neighbors can detect this</p>
    <p>Evidence: If an AS breaks a promise, at least one of its direct neighbors can prove this</p>
    <p>Accuracy: If an AS does not break any promises, none of its neighbors can prove any violations</p>
    <p>Confidentiality: No AS can learn anything about its neighbors' routes that BGP does not already reveal</p>
    <p>Slightly more technical definition in the paper</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Motivation  Definition of PVR  Strawman solutions  Two simple PVR protocols  Discussion  Summary</p>
    <p>NEXT</p>
  </div>
  <div class="page">
    <p>Strawman solutions</p>
    <p>Idea: Use Secure Multi-party Computation (SMC) or zero-knowledge proofs (ZKP)</p>
    <p>SMC securely computes a function over secret inputs  Example: &quot;Who in this room makes the most money?&quot;  Problem #1: Too expensive - even simple functions</p>
    <p>can take several seconds to evaluate!  Problem #2: Too weak - no evidence!  Similar problems with ZKP</p>
  </div>
  <div class="page">
    <p>Idea: Collaborative verification</p>
    <p>What helps us:  We are not trying to compute the routes for Bob, as in</p>
    <p>SMC!  Rather, we want to verify that Bob kept his promise  Each domain already knows some aspect of the</p>
    <p>computation!</p>
    <p>Idea: Domains can work together! 8HotNets-X (November 15, 2011)</p>
    <p>Alice</p>
    <p>Bob Charlie</p>
    <p>Doris</p>
    <p>Eliot</p>
  </div>
  <div class="page">
    <p>Example: Required export</p>
    <p>Let's start with a simple example  Bob: &quot;If I have at least one route to X, I will export one to</p>
    <p>Alice&quot;</p>
    <p>What do we need to verify?  Property #1: If Bob gives a route to Alice, that route is</p>
    <p>genuine  Simply sign the route, as in S-BGP</p>
    <p>Property #2: If Bob does not give a route to Alice, then Bob did not receive any routes from Charlie, Doris, or Eliot</p>
    <p>Alice</p>
    <p>Bob Charlie</p>
    <p>Doris</p>
    <p>Eliot</p>
  </div>
  <div class="page">
    <p>How to commit to a value</p>
    <p>b</p>
    <p>Bob(H(b||x)) Bob(H(b||x))</p>
    <p>Bob(H(b||x))</p>
    <p>Bob(H(b||x))</p>
    <p>But what is b? Does Doris know b?</p>
    <p>Same b as</p>
    <p>Doris!</p>
    <p>Random bits to prevent</p>
    <p>dictionary attack</p>
    <p>Bob</p>
    <p>Charlie Doris</p>
    <p>Aha, the b in the</p>
    <p>commitment is 1!</p>
    <p>OK, Bob committ ed to b!</p>
    <p>b, x</p>
  </div>
  <div class="page">
    <p>Example: Required export</p>
    <p>otherwise b=0 3. Bob distributes the following information:</p>
    <p>To each neighbor: Commitment  To Alice, and to each neighbor who has given Bob a route: value of b</p>
    <p>Alice</p>
    <p>Bob Charlie</p>
    <p>Doris</p>
    <p>Eliot</p>
    <p>If the promise holds, no AS learns anything it did not already know! If the promise does not hold, at least one AS can detect this!</p>
    <p>b 1</p>
    <p>C F X</p>
    <p>E X</p>
    <p>No route exported (error)</p>
    <p>Commitment</p>
    <p>b=1</p>
    <p>Commitment</p>
    <p>Commitment</p>
    <p>b=1</p>
    <p>Commitment</p>
    <p>b=1</p>
  </div>
  <div class="page">
    <p>Second example: Shortest route</p>
    <p>A more complex example:  Bob: &quot;I will give Alice the shortest route I have&quot;</p>
    <p>Need to verify:  Property #1: Route exported  Route genuine  Property #2: No routes exported  None available  Property #3: Each imported route is at most as long as</p>
    <p>the exported route (minus one) 12</p>
    <p>HotNets-X (November 15, 2011)</p>
    <p>Alice</p>
    <p>Bob Charlie</p>
    <p>Doris</p>
    <p>Eliot</p>
    <p>See previous example</p>
    <p>s</p>
  </div>
  <div class="page">
    <p>Commitment with Merkle Hash Trees</p>
    <p>b1 b2 b3 b4</p>
    <p>Hash Hash Hash Hash</p>
    <p>Hash Hash</p>
    <p>Hash</p>
    <p>b2</p>
    <p>Hash Hash</p>
    <p>Hash Hash</p>
    <p>Hash</p>
    <p>Hash tree with four values Proof that the second value is b2 Reveals nothing about b1, b3, b4!</p>
    <p>Path to the root</p>
  </div>
  <div class="page">
    <p>Second example: Shortest route</p>
    <p>Alice</p>
    <p>Bob Charlie</p>
    <p>Doris</p>
    <p>Eliot</p>
    <p>s</p>
    <p>Bit k set to 1: &quot;I have a route that is at most k hops long&quot;</p>
    <p>Bit 3 is set! Bob</p>
    <p>acknowledges the 3-hop route!</p>
    <p>a) No bit below 2 is set; this is the shortest</p>
    <p>route! b) All bits above 2 are</p>
    <p>set; Bob didn't lie to the others!</p>
    <p>Merkle hash tree</p>
  </div>
  <div class="page">
    <p>From simple to complex</p>
    <p>So far: We can verify two very simple policies</p>
    <p>What about more complex BGP policies?  Example: &quot;I will give you a European route, unless my</p>
    <p>Asian route is shorter&quot;</p>
    <p>Idea: Compose policies to form complex ones</p>
    <p>More details in the paper (e.g., about access control)</p>
    <p>Shortes t</p>
    <p>route Shortes t</p>
    <p>At least one</p>
  </div>
  <div class="page">
    <p>Ongoing work</p>
    <p>So far, this is only a proof of concept  Need to support more complex policies</p>
    <p>What about communities? AS_PATH filtering? Etc.  We already have additional results - please ask me!</p>
    <p>Need to handle protocol dynamics  BGP routes are announced and withdrawn over time</p>
    <p>Need to have a formal proof of correctness</p>
    <p>Currently investigating model checking</p>
    <p>Need to build a practical system  What is the overhead? Etc.</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>PVR can verify whether an AS's interdomain routing policy has a certain property</p>
    <p>Example: &quot;I will always choose the shortest route to X&quot;</p>
    <p>PVR provides both security and privacy  Neighbors can detect violations and generate</p>
    <p>evidence  If an AS is correct, PVR reveals no additional</p>
    <p>information about its routes, other than what BGP already reveals</p>
    <p>Demonstrated two simple example protocols</p>
    <p>Can we support more complex promises? 17</p>
    <p>HotNets-X (November 15, 2011)</p>
    <p>Questions?</p>
  </div>
</Presentation>
