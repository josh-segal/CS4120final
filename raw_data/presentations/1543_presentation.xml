<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Using Hints to Improve Inline Block-Layer Deduplication</p>
    <p>Sonam Mandal,1 Geoff Kuenning,3 Dongju Ok,1 Varun Shastry,1 Philip Shilane,4 Sun Zhen,1,5 Vasily Tarasov,2 Erez Zadok1</p>
  </div>
  <div class="page">
    <p>Block-Layer Deduplication</p>
    <p>Outline l Introduction l Dmdedup Overview l Hints l Evaluation l Conclusion and Future Work</p>
  </div>
  <div class="page">
    <p>Block-Layer Deduplication</p>
    <p>Introduction: Storage Stack</p>
    <p>File System</p>
    <p>Block Layer (simple read/write interface)</p>
    <p>Deduplication</p>
    <p>Application</p>
    <p>RAID Block Device</p>
    <p>SSD HDD</p>
    <p>Universal</p>
    <p>Semantic context</p>
    <p>lost</p>
  </div>
  <div class="page">
    <p>Block-Layer Deduplication</p>
    <p>Introduction: Reliability</p>
    <p>File System</p>
    <p>Block Layer (simple read/write interface)</p>
    <p>Application</p>
    <p>RAID Block Device</p>
    <p>SSD HDD</p>
    <p>File system superblock</p>
    <p>gets deduplicated</p>
    <p>File system writes multiple copies of the superblock for reliability</p>
    <p>Only one copy of the</p>
    <p>superblock is written to disk</p>
  </div>
  <div class="page">
    <p>Block-Layer Deduplication</p>
    <p>Introduction: Efficient Resource Utilization</p>
    <p>File System</p>
    <p>Block Layer (simple read/write interface)</p>
    <p>Application</p>
    <p>RAID Block Device</p>
    <p>SSD HDD</p>
    <p>Application writes out</p>
    <p>unique data blocks (does</p>
    <p>not deduplicate)</p>
    <p>CPU</p>
    <p>Memory</p>
    <p>I/O to disk</p>
    <p>Deduplication Overhead</p>
  </div>
  <div class="page">
    <p>Block-Layer Deduplication</p>
    <p>Introduction: Performance</p>
    <p>File System</p>
    <p>Block Layer (simple read/write interface)</p>
    <p>Application</p>
    <p>RAID Block Device</p>
    <p>SSD HDD</p>
    <p>Application issues a file copy within same block</p>
    <p>device</p>
    <p>Same data read is written out:</p>
    <p>predictable hashes will be accessed soon</p>
    <p>Prefetch hashes to avoid extra I/O</p>
  </div>
  <div class="page">
    <p>Block-Layer Deduplication</p>
    <p>Dmdedup Components</p>
    <p>File System Application</p>
    <p>HDD</p>
    <p>Data Device Metadata Device</p>
    <p>SSD</p>
    <p>Dmdedup Block Device Deduplication Logic</p>
    <p>Hash Index</p>
    <p>Other Deduplication</p>
    <p>Metadata</p>
    <p>Stackable block device</p>
    <p>Multiple metadata backends supported: inram and cowbtree</p>
  </div>
  <div class="page">
    <p>Block-Layer Deduplication</p>
    <p>NODEDUP Hint</p>
    <p>File System Application</p>
    <p>HDD</p>
    <p>Data Device Metadata Device</p>
    <p>SSD</p>
    <p>Dmdedup Block Device Deduplication Logic</p>
    <p>Useful when:  Writing unique</p>
    <p>data: to avoid wastage of resources</p>
    <p>Need to store duplicate chunks: for reliability</p>
    <p>Hash Index</p>
    <p>Other Deduplication</p>
    <p>Metadata</p>
  </div>
  <div class="page">
    <p>Block-Layer Deduplication</p>
    <p>PREFETCH Hint</p>
    <p>File System Application</p>
    <p>HDD</p>
    <p>Data Device Metadata Device</p>
    <p>SSD</p>
    <p>Dmdedup Block Device Deduplication Logic</p>
    <p>Useful when: Soon to be used hashes are already known: hash index lookup is an expensive operation.</p>
    <p>Hash Index</p>
    <p>Other Deduplication</p>
    <p>Metadata</p>
  </div>
  <div class="page">
    <p>Block-Layer Deduplication</p>
    <p>Evaluation: Workloads l NODEDUP hint:</p>
    <p>u Filebenchs Fileserver workload  Data and metadata ops emulating a file server</p>
    <p>u Configuration  No NODEDUP hint  Metadata only marked with NODEDUP hint  Metadata and data marked with NODEDUP hint</p>
    <p>l PREFETCH hint: u File copy workload modified to pass PREFETCH</p>
    <p>hint l Dmdedups Cowbtree backend used for all</p>
    <p>experiments 02/25/2016</p>
  </div>
  <div class="page">
    <p>Block-Layer Deduplication</p>
    <p>NODEDUP Hint: Fileserver Workload</p>
    <p>l Modified Filebench u Write data based on a given duplicate</p>
    <p>distribution  unique data for results shown l Modified Fileserver workload definition</p>
    <p>u 4KB blocks instead of 1KB blocks. l Experimented with different file systems</p>
  </div>
  <div class="page">
    <p>Block-Layer Deduplication</p>
    <p>NODEDUP Hint: Fileserver Workload on Nilfs2</p>
    <p>Th ro</p>
    <p>ug hp</p>
    <p>ut (K</p>
    <p>io ps</p>
    <p>)</p>
    <p>Dmdedup Cache Size (KB/% of total)</p>
    <p>no-hint md-hint-on data+md-hint-on</p>
    <p>% of the total cache space required to store dedup metadata for given dataset.</p>
  </div>
  <div class="page">
    <p>Block-Layer Deduplication</p>
    <p>PREFETCH Hint: File Copy Workload</p>
    <p>l Copy 1GB file with unique 4KB blocks u Modified dd  O_PREFETCH open() flag</p>
    <p>on read path u Unmodified dd</p>
    <p>l Called sync and umount to make sure data reached block layer.</p>
    <p>l Experimented with different file systems</p>
  </div>
  <div class="page">
    <p>Block-Layer Deduplication</p>
    <p>PREFETCH Hint: File Copy Workload on Nilfs2</p>
    <p>Raw Filesystem</p>
    <p>E la</p>
    <p>ps ed</p>
    <p>T im</p>
    <p>e (s</p>
    <p>ec )</p>
    <p>Dmdedup Cache Size (KB/% of total)</p>
    <p>no-hint hint-on</p>
    <p>% of the total cache space required to store dedup metadata for given dataset.</p>
  </div>
  <div class="page">
    <p>Block-Layer Deduplication</p>
    <p>Conclusion and Future Work l Conclusion  Hints help</p>
    <p>u Adds reliability  Duplicate file system metadata blocks</p>
    <p>u Improves performance  Prefetches hashes</p>
    <p>u Uses resources efficiently  Avoids deduplication overhead for unique data</p>
    <p>l Future Work u Hint support for other file systems u PREFETCH Hint for Nilfs2 segment cleaning u Cross-block device support for hash</p>
    <p>prefetching</p>
  </div>
  <div class="page">
    <p>Using Hints to Improve Inline Block-Layer Deduplication</p>
    <p>Sonam Mandal,1 Geoff Kuenning,3 Dongju Ok,1 Varun Shastry,1 Philip Shilane,4 Sun Zhen,1,5 Vasily Tarasov,2 Erez Zadok1</p>
    <p>Q&amp;A More results in paper Git Repository for Dmdedup: git://git.fsl.cs.sunysb.edu/linux-dmdedup.git</p>
  </div>
</Presentation>
