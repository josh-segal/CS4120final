<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Impact of Network Sharing in Multi-core Architectures</p>
    <p>G. Narayanaswamy, P. Balaji and W. Feng</p>
    <p>Dept. of Comp. Science</p>
    <p>Virginia Tech</p>
    <p>Mathematics and Comp. Science</p>
    <p>Argonne National Laboratory</p>
  </div>
  <div class="page">
    <p>Multi-core Systems: Revolutionizing HEC</p>
    <p>Significant driving force in the growing scale of High-End</p>
    <p>Computing (HEC) systems  Low-cost, Low-power usage  Quad-core systems are commodity today (Intel, AMD)  Future processors have many more cores (Intel Xscale)</p>
    <p>General purpose computing processing elements  X86, PPC, MIPS and other general purpose instruction sets  OS exposes each core as a different processor</p>
    <p>Can schedule a process on each core</p>
    <p>Applications just run !</p>
  </div>
  <div class="page">
    <p>Communication in Multi-core Systems</p>
    <p>Immediate Adoption is simple, performance tuning is not  E.g., communication tuning (memory tuning is another)</p>
    <p>Moores law driving the number of cores per die up !  Processes sharing network link doubling every 18-24 months</p>
    <p>Intra-node traffic increasing as well  Increases with increasing number of cores as well</p>
    <p>More network requirement or lesser?  More network sharing, but more intra-node traffic as well</p>
    <p>Application communication is critical to whether multi-cores help or hurt communication performance</p>
  </div>
  <div class="page">
    <p>Network Sharing in Multi-core Systems</p>
    <p>More processes per node means more processes sharing the same network link</p>
    <p>More processes per node means more intra-node communication, and potentially lesser network traffic</p>
    <p>What kind of application patterns generate more traffic?  What kind of application patterns generate less traffic?  Does process reordering between cores help?</p>
  </div>
  <div class="page">
    <p>Presentation Outline</p>
    <p>Introduction and Motivation</p>
    <p>Experimental Evaluation of the NAS Benchmarks</p>
    <p>Behavioral Analysis of the NAS Benchmarks</p>
    <p>Concluding Remarks and Future Work</p>
  </div>
  <div class="page">
    <p>Experimental Setup</p>
    <p>16-node dual-processor dual-core cluster  AMD Opteron 2.55GHz with DDR2 667MHz RAM</p>
    <p>Definitions:  Co-processor Mode: Use one core per processor  Virtual Processor Mode: Use both cores per processor</p>
    <p>Myri-10G</p>
    <p>Co-Processor Mode</p>
    <p>Virtual Processor Mode</p>
  </div>
  <div class="page">
    <p>Impact of Network Sharing</p>
  </div>
  <div class="page">
    <p>Impact of Processor Sharing</p>
  </div>
  <div class="page">
    <p>Resource Usage in Processor Sharing</p>
  </div>
  <div class="page">
    <p>Presentation Outline</p>
    <p>Introduction and Motivation</p>
    <p>Experimental Evaluation of the NAS Benchmarks</p>
    <p>Behavioral Analysis of the NAS Benchmarks</p>
    <p>Concluding Remarks and Future Work</p>
  </div>
  <div class="page">
    <p>Behavioral Analysis: CG</p>
    <p>Forms sub-groups of processes which communicate mainly with each other</p>
    <p>Clustering these groups together increases intranode communication</p>
    <p>Contiguous ranks cluster together; single dimension of clustering !</p>
  </div>
  <div class="page">
    <p>Behavioral Analysis: FT</p>
    <p>After each step of communication, the data grid is transposed along one dimension (example: P3DFFT)</p>
    <p>Communication is an Alltoallv for a sub-communicator (contains processes in one dimension)</p>
    <p>Grouping processes in one dimension will cause the other dimension to suffer</p>
  </div>
  <div class="page">
    <p>Impact of Process-Core Reordering</p>
  </div>
  <div class="page">
    <p>Presentation Outline</p>
    <p>Introduction and Motivation</p>
    <p>Experimental Evaluation of the NAS Benchmarks</p>
    <p>Behavioral Analysis of the NAS Benchmarks</p>
    <p>Concluding Remarks and Future Work</p>
  </div>
  <div class="page">
    <p>Concluding Remarks and Future Work  Multi-core systems are revolutionizing HEC</p>
    <p>Low cost, low power</p>
    <p>Applications just run !</p>
    <p>Immediate adoption is simple, performance tuning is not  E.g., Communication patterns on multi-core systems are complex</p>
    <p>Analyzed communication behavior  Case Study with the NAS benchmarks</p>
    <p>Increased network and resource sharing hurts performance</p>
    <p>Use application patterns and reorder process-core mappings  improves performance in some cases</p>
    <p>Future Work: Incorporating application pattern information as hints to MPICH2 (through the process manager)</p>
  </div>
  <div class="page">
    <p>Thank You</p>
    <p>Contacts:</p>
    <p>Ganesh Narayanaswamy: cnganesh@cs.vt.edu</p>
    <p>Pavan Balaji: balaji@mcs.anl.gov</p>
    <p>Wu-chun Feng: feng@cs.vt.edu</p>
    <p>For More Information:</p>
    <p>http://synergy.cs.vt.edu</p>
    <p>http://www.mcs.anl.gov/~balaji</p>
  </div>
</Presentation>
