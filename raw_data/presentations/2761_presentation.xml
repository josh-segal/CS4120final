<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Iron: Isolating Network-based CPU in Container Environments</p>
    <p>Junaid Khalid1, Eric Rozner2, Wesley Felter2,3, Cong Xu2, Karthick Rajamani2, Alexandre Ferreira2,4, Aditya Akella1</p>
  </div>
  <div class="page">
    <p>VM</p>
    <p>Virtualization</p>
    <p>OS</p>
    <p>HW</p>
    <p>App</p>
    <p>VM</p>
    <p>OS</p>
    <p>App</p>
    <p>VM</p>
    <p>OS</p>
    <p>App</p>
    <p>Container</p>
    <p>HW</p>
    <p>App</p>
    <p>Container</p>
    <p>App</p>
    <p>Container</p>
    <p>App</p>
    <p>OSHypervisor/ Host OS</p>
    <p>Virtual machines Containers</p>
  </div>
  <div class="page">
    <p>VM</p>
    <p>Virtualization</p>
    <p>OS</p>
    <p>HW</p>
    <p>App</p>
    <p>VM</p>
    <p>OS</p>
    <p>App</p>
    <p>VM</p>
    <p>OS</p>
    <p>App</p>
    <p>Container</p>
    <p>HW</p>
    <p>App</p>
    <p>Container</p>
    <p>App</p>
    <p>Container</p>
    <p>App</p>
    <p>OSHypervisor/ Host OS</p>
    <p>Virtual machines</p>
    <p>Light weight</p>
    <p>Fast</p>
    <p>Heavy weight</p>
    <p>Slow</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>VM</p>
    <p>Virtualization</p>
    <p>OS</p>
    <p>HW</p>
    <p>App</p>
    <p>VM</p>
    <p>OS</p>
    <p>App</p>
    <p>VM</p>
    <p>OS</p>
    <p>App</p>
    <p>Container</p>
    <p>HW</p>
    <p>App</p>
    <p>Container</p>
    <p>App</p>
    <p>Container</p>
    <p>App</p>
    <p>OSHypervisor/ Host OS</p>
    <p>Virtual machines</p>
    <p>Light weight</p>
    <p>Fast</p>
    <p>Heavy weight</p>
    <p>Slow</p>
    <p>Containers</p>
    <p>Supports new workloads such as microservices and serverless</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>OS</p>
    <p>Isolation</p>
    <p>Container</p>
    <p>App1</p>
    <p>Container</p>
    <p>App2</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>OS</p>
    <p>Containers require strong resource isolation</p>
    <p>Memory</p>
    <p>Network</p>
    <p>CPU</p>
    <p>Isolation</p>
    <p>Container</p>
    <p>App1</p>
    <p>Container</p>
    <p>App2</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>OS</p>
    <p>Containers require strong resource isolation</p>
    <p>Memory</p>
    <p>Network</p>
    <p>CPU</p>
    <p>Isolation</p>
    <p>Administrators want to strongly control resource allocation in multi-tenant environments</p>
    <p>Container</p>
    <p>App1</p>
    <p>Container</p>
    <p>App2</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>OS</p>
    <p>Containers require strong resource isolation</p>
    <p>Memory</p>
    <p>Network</p>
    <p>CPU</p>
    <p>Isolation</p>
    <p>Administrators want to strongly control resource allocation in multi-tenant environments</p>
    <p>Container</p>
    <p>App1</p>
    <p>Container</p>
    <p>App2</p>
    <p>Strong isolation is important for performance, predictability and efficiency</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>Isolation</p>
    <p>Isolation: A container shouldnt consume more than its assigned share of resources</p>
    <p>HW</p>
    <p>OS</p>
    <p>Container</p>
    <p>App1</p>
    <p>Container</p>
    <p>App2</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>Isolation</p>
    <p>Isolation: A container shouldnt consume more than its assigned share of resources</p>
    <p>HW</p>
    <p>OS</p>
    <p>Container</p>
    <p>App1</p>
    <p>Container</p>
    <p>App2</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>Isolation</p>
    <p>Isolation: A container shouldnt consume more than its assigned share of resources</p>
    <p>HW</p>
    <p>OS</p>
    <p>Container</p>
    <p>App1</p>
    <p>Container</p>
    <p>App2</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>Isolation</p>
    <p>cgroups ensures CPU isolation by allocating, metering, and enforcing resource usage in the kernel</p>
    <p>Isolation: A container shouldnt consume more than its assigned share of resources</p>
    <p>HW</p>
    <p>OS</p>
    <p>Container</p>
    <p>App1</p>
    <p>Container</p>
    <p>App2</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>Container</p>
    <p>App</p>
    <p>OS</p>
    <p>Isolation</p>
    <p>vs</p>
    <p>Containers</p>
    <p>cGroup ensures resource isolation by allocating, metering, and enforcing resource usage in the kernel</p>
    <p>Isolation: network intensive</p>
    <p>compute intensive</p>
    <p>A container shouldnt consume more than its assigned share of resources</p>
    <p>Container</p>
    <p>App</p>
    <p>CPU isolation provided by Linux breaks down while handling the network traffic</p>
  </div>
  <div class="page">
    <p>How and by how much is isolation broken</p>
    <p>Outline</p>
  </div>
  <div class="page">
    <p>How and by how much is isolation broken</p>
    <p>Irons design</p>
    <p>Accounting of per-packet processing cost</p>
    <p>Ensuring isolation via enforcement</p>
    <p>Integration with Linux scheduler</p>
    <p>Hardware-based packet dropping</p>
    <p>Outline</p>
  </div>
  <div class="page">
    <p>How and by how much is isolation broken</p>
    <p>Irons design</p>
    <p>Accounting of per-packet processing cost</p>
    <p>Ensuring isolation via enforcement</p>
    <p>Integration with Linux scheduler</p>
    <p>Hardware-based packet dropping</p>
    <p>Evaluation  Controlled workload</p>
    <p>Realistic workload</p>
    <p>Outline</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>OS</p>
    <p>Isolation is Broken</p>
    <p>= Penalty factor</p>
    <p>Time that job takes when competing with traffic</p>
    <p>Time that job takes when competing with compute</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>Container</p>
    <p>OS</p>
    <p>Isolation is Broken</p>
    <p>WordCount</p>
    <p>= Penalty factor</p>
    <p>Time that job takes when competing with traffic</p>
    <p>Time that job takes when competing with compute</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>Container</p>
    <p>OS</p>
    <p>Isolation is Broken</p>
    <p>WordCount</p>
    <p>= Penalty factor</p>
    <p>Time that job takes when competing with traffic</p>
    <p>Time that job takes when competing with compute</p>
    <p>compute intensive</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>Container Container</p>
    <p>TeraSort</p>
    <p>OS</p>
    <p>Isolation is Broken</p>
    <p>WordCount</p>
    <p>= Penalty factor</p>
    <p>Time that job takes when competing with traffic</p>
    <p>Time that job takes when competing with compute</p>
    <p>compute intensive</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>Container Container</p>
    <p>TeraSort</p>
    <p>OS</p>
    <p>Isolation is Broken</p>
    <p>WordCount</p>
    <p>= Penalty factor</p>
    <p>Time that job takes when competing with traffic</p>
    <p>Time that job takes when competing with compute</p>
    <p>network intensive</p>
    <p>compute intensive</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>Container Container</p>
    <p>TeraSort</p>
    <p>OS</p>
    <p>Isolation is Broken</p>
    <p>Core 1</p>
    <p>WordCount</p>
    <p>= Penalty factor</p>
    <p>Time that job takes when competing with traffic</p>
    <p>Time that job takes when competing with compute</p>
    <p>network intensive</p>
    <p>compute intensive</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>Container Container</p>
    <p>TeraSort</p>
    <p>OS</p>
    <p>Isolation is Broken</p>
    <p>Core 1</p>
    <p>Wordcount can take 1.5x longer when it shares the core with TeraSort</p>
    <p>WordCount</p>
    <p>= Penalty factor</p>
    <p>Time that job takes when competing with traffic</p>
    <p>Time that job takes when competing with compute</p>
    <p>network intensive</p>
    <p>compute intensive</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>Container Container</p>
    <p>TeraSort</p>
    <p>OS</p>
    <p>Isolation is Broken</p>
    <p>Core 1</p>
    <p>Wordcount can take 1.5x longer when it shares the core with TeraSort</p>
    <p>WordCount</p>
    <p>= Penalty factor</p>
    <p>Time that job takes when competing with traffic</p>
    <p>Time that job takes when competing with compute</p>
    <p>vs running alone</p>
    <p>network intensive</p>
    <p>compute intensive</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>Container</p>
    <p>App</p>
    <p>OS</p>
    <p>Practical Implications</p>
    <p>Container</p>
    <p>App</p>
    <p>overcharging &amp; high variance in the performance</p>
    <p>compute intensive</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>Container</p>
    <p>App</p>
    <p>OS</p>
    <p>Practical Implications</p>
    <p>Container</p>
    <p>App</p>
    <p>overcharging &amp; high variance in the performance</p>
    <p>compute intensive</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>Container</p>
    <p>App</p>
    <p>OS</p>
    <p>Practical Implications</p>
    <p>Container</p>
    <p>App</p>
    <p>overcharging &amp; high variance in the performance</p>
    <p>compute intensive</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>OS</p>
    <p>waste of potential revenue Container</p>
    <p>App</p>
    <p>overcharging &amp; high variance in the performance</p>
    <p>Practical Implications</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>OS</p>
    <p>waste of potential revenue Container</p>
    <p>App</p>
    <p>overcharging &amp; high variance in the performance</p>
    <p>Practical Implications</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>OS</p>
    <p>waste of potential revenue Container</p>
    <p>App</p>
    <p>overcharging &amp; high variance in the performance</p>
    <p>Practical Implications</p>
    <p>Containers</p>
  </div>
  <div class="page">
    <p>HW</p>
    <p>OS</p>
    <p>waste of potential revenue Container</p>
    <p>App</p>
    <p>overcharging &amp; high variance in the performance</p>
    <p>Practical Implications</p>
    <p>Containers</p>
    <p>wasted CPU</p>
  </div>
  <div class="page">
    <p>How is Isolation Broken?</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Tera Sort</p>
    <p>OS</p>
    <p>NIC</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Word Count</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount Interrupt handler</p>
  </div>
  <div class="page">
    <p>How is Isolation Broken?</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Tera Sort</p>
    <p>OS</p>
    <p>NIC</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Word Count</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount Interrupt handler</p>
    <p>compute intensive</p>
  </div>
  <div class="page">
    <p>How is Isolation Broken?</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Tera Sort</p>
    <p>OS</p>
    <p>NIC</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Word Count</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount Interrupt handler</p>
    <p>network intensive</p>
    <p>compute intensive</p>
  </div>
  <div class="page">
    <p>How is Isolation Broken?</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Tera Sort</p>
    <p>OS</p>
    <p>NIC</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Word Count</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount Interrupt handler</p>
    <p>network intensive</p>
    <p>compute intensive</p>
  </div>
  <div class="page">
    <p>How is Isolation Broken?</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Tera Sort</p>
    <p>OS</p>
    <p>NIC</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Word Count</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount Interrupt handler</p>
    <p>network intensive</p>
    <p>compute intensive</p>
  </div>
  <div class="page">
    <p>How is Isolation Broken?</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Tera Sort</p>
    <p>OS</p>
    <p>NIC</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Word Count</p>
    <p>Kernel processes network traffic via interrupts</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount Interrupt handler</p>
    <p>network intensive</p>
    <p>compute intensive</p>
  </div>
  <div class="page">
    <p>How is Isolation Broken?</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Tera Sort</p>
    <p>OS</p>
    <p>NIC</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Word Count</p>
    <p>Kernel processes network traffic via interrupts</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount Interrupt handler</p>
    <p>network intensive</p>
    <p>compute intensive</p>
  </div>
  <div class="page">
    <p>How is Isolation Broken?</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Tera Sort</p>
    <p>OS</p>
    <p>NIC</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Word Count</p>
    <p>Kernel processes network traffic via interrupts</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount Interrupt handler</p>
    <p>Scheduler charges wordcount for t, instead of t - t</p>
    <p>network intensive</p>
    <p>compute intensive</p>
    <p>t</p>
    <p>t</p>
  </div>
  <div class="page">
    <p>How is Isolation Broken?</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Tera Sort</p>
    <p>OS</p>
    <p>NIC</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Word Count</p>
    <p>Kernel processes network traffic via interrupts</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount Interrupt handler</p>
    <p>Scheduler charges wordcount for t, instead of t - t</p>
    <p>Charging: Reduction in the runtime of a container</p>
    <p>network intensive</p>
    <p>compute intensive</p>
    <p>t</p>
    <p>t</p>
  </div>
  <div class="page">
    <p>How is Isolation Broken?</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Tera Sort</p>
    <p>OS</p>
    <p>NIC</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Word Count</p>
    <p>Kernel processes network traffic via interrupts</p>
    <p>Time spend in servicing interrupts is incorrectly charged</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount Interrupt handler</p>
    <p>Scheduler charges wordcount for t, instead of t - t</p>
    <p>Charging: Reduction in the runtime of a container</p>
    <p>network intensive</p>
    <p>compute intensive</p>
    <p>t</p>
    <p>t</p>
  </div>
  <div class="page">
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Tera Sort</p>
    <p>OS</p>
    <p>NIC</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Word Count</p>
    <p>Kernel processes network traffic via interrupts</p>
    <p>Time spend in servicing interrupts is not accounted properly</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount hardIRQ softIRQ</p>
    <p>Scheduler consider is as CPU usage of wordcount</p>
    <p>... [software interrupts] a conglomerate of mostly unrelated jobs, which run in the context of a randomly chosen victim w/o the ability to put any control on them.</p>
    <p>--Thomas Gleixner (Linux developer)</p>
    <p>How did Linux get here?</p>
  </div>
  <div class="page">
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Tera Sort</p>
    <p>OS</p>
    <p>NIC</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Word Count</p>
    <p>Kernel processes network traffic via interrupts</p>
    <p>Time spend in servicing interrupts is not accounted properly</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount hardIRQ softIRQ</p>
    <p>Scheduler consider is as CPU usage of wordcount</p>
    <p>... [software interrupts] a conglomerate of mostly unrelated jobs, which run in the context of a randomly chosen victim w/o the ability to put any control on them.</p>
    <p>--Thomas Gleixner (Linux developer)</p>
    <p>How did Linux get here?</p>
    <p>Interrupt handler</p>
  </div>
  <div class="page">
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Tera Sort</p>
    <p>OS</p>
    <p>NIC</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Word Count</p>
    <p>Kernel processes network traffic via interrupts</p>
    <p>Time spend in servicing interrupts is not accounted properly</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount hardIRQ softIRQ</p>
    <p>Scheduler consider is as CPU usage of wordcount</p>
    <p>... [software interrupts] a conglomerate of mostly unrelated jobs, which run in the context of a randomly chosen victim w/o the ability to put any control on them.</p>
    <p>--Thomas Gleixner (Linux developer)</p>
    <p>How did Linux get here?</p>
    <p>Interrupt handler</p>
    <p>Isolation</p>
  </div>
  <div class="page">
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Tera Sort</p>
    <p>OS</p>
    <p>NIC</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Word Count</p>
    <p>Kernel processes network traffic via interrupts</p>
    <p>Time spend in servicing interrupts is not accounted properly</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount hardIRQ softIRQ</p>
    <p>Scheduler consider is as CPU usage of wordcount</p>
    <p>... [software interrupts] a conglomerate of mostly unrelated jobs, which run in the context of a randomly chosen victim w/o the ability to put any control on them.</p>
    <p>--Thomas Gleixner (Linux developer)</p>
    <p>How did Linux get here?</p>
    <p>Interrupt handler</p>
    <p>Efficiency</p>
    <p>Isolation</p>
  </div>
  <div class="page">
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Tera Sort</p>
    <p>OS</p>
    <p>NIC</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Word Count</p>
    <p>Kernel processes network traffic via interrupts</p>
    <p>Time spend in servicing interrupts is not accounted properly</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount hardIRQ softIRQ</p>
    <p>Scheduler consider is as CPU usage of wordcount</p>
    <p>... [software interrupts] a conglomerate of mostly unrelated jobs, which run in the context of a randomly chosen victim w/o the ability to put any control on them.</p>
    <p>--Thomas Gleixner (Linux developer)</p>
    <p>How did Linux get here?</p>
    <p>Interrupt handler</p>
    <p>Responsiveness</p>
    <p>Efficiency</p>
    <p>Isolation</p>
  </div>
  <div class="page">
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Tera Sort</p>
    <p>OS</p>
    <p>NIC</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Word Count</p>
    <p>Kernel processes network traffic via interrupts</p>
    <p>Time spend in servicing interrupts is not accounted properly</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount hardIRQ softIRQ</p>
    <p>Scheduler consider is as CPU usage of wordcount</p>
    <p>... [software interrupts] a conglomerate of mostly unrelated jobs, which run in the context of a randomly chosen victim w/o the ability to put any control on them.</p>
    <p>--Thomas Gleixner (Linux developer)</p>
    <p>How did Linux get here?</p>
    <p>Interrupt handler</p>
    <p>ResponsivenessThroughput</p>
    <p>Efficiency</p>
    <p>Isolation</p>
  </div>
  <div class="page">
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Tera Sort</p>
    <p>OS</p>
    <p>NIC</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Word Count</p>
    <p>Kernel processes network traffic via interrupts</p>
    <p>Time spend in servicing interrupts is not accounted properly</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount hardIRQ softIRQ</p>
    <p>Scheduler consider is as CPU usage of wordcount</p>
    <p>... [software interrupts] a conglomerate of mostly unrelated jobs, which run in the context of a randomly chosen victim w/o the ability to put any control on them.</p>
    <p>--Thomas Gleixner (Linux developer)</p>
    <p>How did Linux get here?</p>
    <p>Interrupt handler</p>
    <p>ResponsivenessThroughput</p>
    <p>Simplicity Efficiency</p>
    <p>Isolation</p>
  </div>
  <div class="page">
    <p>Sender Side</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>Sender stack</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>OS OS</p>
  </div>
  <div class="page">
    <p>Sender Side</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>Sender stack</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>OS</p>
  </div>
  <div class="page">
    <p>Sender Side</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>Sender stack</p>
    <p>userspace</p>
    <p>kernel</p>
  </div>
  <div class="page">
    <p>Sender Side</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>Sender stack</p>
    <p>userspace</p>
    <p>kernel</p>
  </div>
  <div class="page">
    <p>Sender Side</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>Sender stack</p>
    <p>userspace</p>
    <p>kernel</p>
  </div>
  <div class="page">
    <p>Sender Side</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>Process context</p>
    <p>Sender stack</p>
    <p>No Problem!</p>
    <p>userspace</p>
    <p>kernel</p>
  </div>
  <div class="page">
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>qdisc/tc</p>
    <p>Sender Side</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Rate limiter</p>
  </div>
  <div class="page">
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>qdisc/tc</p>
    <p>Sender Side</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Rate limiter</p>
  </div>
  <div class="page">
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>qdisc/tc</p>
    <p>Process context</p>
    <p>No Problem!</p>
    <p>Sender Side</p>
    <p>Packet is enqueued in the process context</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Rate limiter</p>
  </div>
  <div class="page">
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>qdisc/tc</p>
    <p>Process context</p>
    <p>No Problem!</p>
    <p>Sender Side</p>
    <p>Packet is enqueued in the process context</p>
    <p>System call exits after enqueuing the packet</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Rate limiter</p>
  </div>
  <div class="page">
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>qdisc/tc</p>
    <p>Process may not get charged</p>
    <p>Non-process context</p>
    <p>Process context</p>
    <p>No Problem!</p>
    <p>Sender Side</p>
    <p>Packet is enqueued in the process context</p>
    <p>System call exits after enqueuing the packet</p>
    <p>Soft interrupt is responsible for dequeuing and delivering it to the NIC</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Rate limiter</p>
    <p>Sender stack</p>
  </div>
  <div class="page">
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC qdisc/tc</p>
    <p>Process is not getting charged</p>
    <p>Non-process context</p>
    <p>Process context</p>
    <p>No Problem!</p>
    <p>Sender Side</p>
    <p>Packet is enqueued in the process context</p>
    <p>Soft interrupt is responsible for dequeuing and delivering it to the NIC</p>
    <p>Sender side stack</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Linux services a softirq</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount interrupt hander</p>
  </div>
  <div class="page">
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC qdisc/tc</p>
    <p>Process is not getting charged</p>
    <p>Non-process context</p>
    <p>Process context</p>
    <p>No Problem!</p>
    <p>Sender Side</p>
    <p>Packet is enqueued in the process context</p>
    <p>Soft interrupt is responsible for dequeuing and delivering it to the NIC</p>
    <p>Sender side stack</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Linux services a softirq</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount interrupt hander</p>
  </div>
  <div class="page">
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC qdisc/tc</p>
    <p>Process is not getting charged</p>
    <p>Non-process context</p>
    <p>Process context</p>
    <p>No Problem!</p>
    <p>Sender Side</p>
    <p>Packet is enqueued in the process context</p>
    <p>Soft interrupt is responsible for dequeuing and delivering it to the NIC</p>
    <p>Sender side stack</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Linux services a softirq</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount interrupt hander</p>
  </div>
  <div class="page">
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC qdisc/tc</p>
    <p>Process is not getting charged</p>
    <p>Non-process context</p>
    <p>Process context</p>
    <p>No Problem!</p>
    <p>Sender Side</p>
    <p>Packet is enqueued in the process context</p>
    <p>Soft interrupt is responsible for dequeuing and delivering it to the NIC</p>
    <p>Sender side stack</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Linux services a softirq</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount interrupt hander</p>
    <p>ksoftirqd</p>
  </div>
  <div class="page">
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC qdisc/tc</p>
    <p>Process is not getting charged</p>
    <p>Non-process context</p>
    <p>Process context</p>
    <p>No Problem!</p>
    <p>Sender Side</p>
    <p>Packet is enqueued in the process context</p>
    <p>Soft interrupt is responsible for dequeuing and delivering it to the NIC</p>
    <p>Sender side stack</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Linux services the softirq</p>
    <p>time</p>
    <p>Scheduled task/process</p>
    <p>wordcount interrupt hander</p>
    <p>ksoftirqd</p>
    <p>Softirq processing can be charged incorrectly or not charged at all to any container</p>
  </div>
  <div class="page">
    <p>Experiment Setup</p>
    <p>Container 1 Container 2 Container 3 Container N</p>
    <p>Core</p>
  </div>
  <div class="page">
    <p>Experiment Setup</p>
    <p>Container 1 Container 2 Container 3 Container N</p>
    <p>Core</p>
    <p>Q = Period/N Q = Period/N Q = Period/N Q = Period/N</p>
  </div>
  <div class="page">
    <p>Experiment Setup</p>
    <p>Container 1 Container 2 Container 3 Container N</p>
    <p>Core</p>
    <p>Q = Period/N Q = Period/N Q = Period/N Q = Period/N</p>
    <p>Victim (sysbench)</p>
  </div>
  <div class="page">
    <p>Experiment Setup</p>
    <p>Container 1 Container 2 Container 3 Container N</p>
    <p>Core</p>
    <p>Q = Period/N Q = Period/N Q = Period/N Q = Period/N</p>
    <p>Victim (sysbench) (sysbench) (sysbench) (sysbench)</p>
    <p>Interferers 16</p>
  </div>
  <div class="page">
    <p>Experiment Setup</p>
    <p>Container 1 Container 2 Container 3 Container N</p>
    <p>Core</p>
    <p>Q = Period/N Q = Period/N Q = Period/N Q = Period/N</p>
    <p>Victim (sysbench) (sysbench) (sysbench) (sysbench)</p>
    <p>Container 1 Container 2 Container 3 Container N</p>
    <p>Core</p>
    <p>Q = Period/N Q = Period/N Q = Period/N Q = Period/N</p>
    <p>Victim (sysbench)</p>
    <p>Sender/ Receiver</p>
    <p>= Penalty factor</p>
    <p>Time that victim takes when competing with traffic</p>
    <p>Time that victim takes when competing with sysbench</p>
    <p>Sender/ Receiver</p>
    <p>Sender/ Receiver</p>
    <p>Interferers</p>
    <p>Interferers 16</p>
  </div>
  <div class="page">
    <p>Impact Of Network Traffic</p>
    <p>= Penalty factor Time that victim takes when</p>
    <p>competing with sysbench</p>
    <p>Time that victim takes when competing with traffic</p>
  </div>
  <div class="page">
    <p>Impact Of Network Traffic</p>
    <p>HTB is used for traffic shaping @ 5Gbps</p>
    <p>TCP Sender</p>
    <p>= Penalty factor Time that victim takes when</p>
    <p>competing with sysbench</p>
    <p>P e</p>
    <p>n a</p>
    <p>lt y</p>
    <p>F a</p>
    <p>ct o</p>
    <p>r</p>
    <p>Number of containers</p>
    <p>Time that victim takes when competing with traffic</p>
  </div>
  <div class="page">
    <p>Impact Of Network Traffic</p>
    <p>HTB is used for traffic shaping @ 5Gbps</p>
    <p>TCP Sender</p>
    <p>Higher is worse</p>
    <p>= Penalty factor Time that victim takes when</p>
    <p>competing with sysbench</p>
    <p>P e</p>
    <p>n a</p>
    <p>lt y</p>
    <p>F a</p>
    <p>ct o</p>
    <p>r</p>
    <p>Number of containers</p>
    <p>Time that victim takes when competing with traffic</p>
  </div>
  <div class="page">
    <p>Impact Of Network Traffic</p>
    <p>HTB is used for traffic shaping @ 5Gbps</p>
    <p>Maximum penalty factor is around 1.85</p>
    <p>TCP Sender</p>
    <p>Higher is worse</p>
    <p>= Penalty factor Time that victim takes when</p>
    <p>competing with sysbench</p>
    <p>P e</p>
    <p>n a</p>
    <p>lt y</p>
    <p>F a</p>
    <p>ct o</p>
    <p>r</p>
    <p>Number of containers</p>
    <p>Time that victim takes when competing with traffic</p>
  </div>
  <div class="page">
    <p>Impact Of Network Traffic</p>
    <p>HTB is used for traffic shaping @ 5Gbps</p>
    <p>Maximum penalty factor is around 1.85</p>
    <p>TCP Sender</p>
    <p>Higher is worse</p>
    <p>= Penalty factor Time that victim takes when</p>
    <p>competing with sysbench</p>
    <p>P e</p>
    <p>n a</p>
    <p>lt y</p>
    <p>F a</p>
    <p>ct o</p>
    <p>r</p>
    <p>Number of containers</p>
    <p>Time that victim takes when competing with traffic</p>
    <p>Look at our paper for the impact of UDP traffic</p>
  </div>
  <div class="page">
    <p>Receiver Side</p>
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>Receiver stack</p>
    <p>qdisc/tc</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
  </div>
  <div class="page">
    <p>Receiver Side</p>
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>Receiver stack</p>
    <p>qdisc/tc</p>
    <p>Receiver side problem is much worse than the sender</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
  </div>
  <div class="page">
    <p>Receiver Side</p>
    <p>Process</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>Process context</p>
    <p>Receiver stack</p>
    <p>Non-process and interrupt</p>
    <p>context qdisc/tc</p>
    <p>Receiver side problem is much worse than the sender</p>
    <p>Packet is processed in non-process context until copied to applications socket</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
  </div>
  <div class="page">
    <p>Impact Of Network Traffic</p>
    <p>TCP Receiver</p>
    <p>= Penalty factor Time that victim takes when</p>
    <p>competing with sysbench</p>
    <p>P e</p>
    <p>n a</p>
    <p>lt y</p>
    <p>F a</p>
    <p>ct o</p>
    <p>r</p>
    <p>Number of containers</p>
    <p>Time that victim takes when competing with traffic</p>
  </div>
  <div class="page">
    <p>Impact Of Network Traffic</p>
    <p>TCP Receiver</p>
    <p>Higher is worse</p>
    <p>= Penalty factor Time that victim takes when</p>
    <p>competing with sysbench</p>
    <p>P e</p>
    <p>n a</p>
    <p>lt y</p>
    <p>F a</p>
    <p>ct o</p>
    <p>r</p>
    <p>Number of containers</p>
    <p>Time that victim takes when competing with traffic</p>
  </div>
  <div class="page">
    <p>Impact Of Network Traffic</p>
    <p>Maximum penalty factor is around 6</p>
    <p>TCP Receiver</p>
    <p>Higher is worse</p>
    <p>= Penalty factor Time that victim takes when</p>
    <p>competing with sysbench</p>
    <p>P e</p>
    <p>n a</p>
    <p>lt y</p>
    <p>F a</p>
    <p>ct o</p>
    <p>r</p>
    <p>Number of containers</p>
    <p>Time that victim takes when competing with traffic</p>
  </div>
  <div class="page">
    <p>Scenarios When Isolation Breaks</p>
    <p>Compute intensive</p>
    <p>vs</p>
    <p>Network intensive</p>
    <p>OS</p>
  </div>
  <div class="page">
    <p>Scenarios When Isolation Breaks</p>
    <p>Low network workload</p>
    <p>vs</p>
    <p>High network workload</p>
    <p>Compute intensive</p>
    <p>vs</p>
    <p>Network intensive</p>
    <p>OS OS</p>
  </div>
  <div class="page">
    <p>Scenarios When Isolation Breaks</p>
    <p>Low network workload</p>
    <p>vs</p>
    <p>High network workload</p>
    <p>Compute intensive</p>
    <p>vs</p>
    <p>Network intensive</p>
    <p>Network intensive</p>
    <p>vs</p>
    <p>Network intensive with kernel bypass</p>
    <p>OS OS OS</p>
  </div>
  <div class="page">
    <p>Iron</p>
    <p>A scheme that ensures and enforces accounting of networkbased CPU consumed in the kernel on the behalf of a container.</p>
  </div>
  <div class="page">
    <p>How and by how much is isolation broken</p>
    <p>Irons design</p>
    <p>Accounting of per-packet processing cost</p>
    <p>Ensuring isolation via enforcement</p>
    <p>Integration with Linux scheduler</p>
    <p>Hardware-based packet dropping</p>
    <p>Evaluation  Controlled workload</p>
    <p>Realistic workload</p>
    <p>Outline</p>
  </div>
  <div class="page">
    <p>Network Call Stack  Backgound</p>
    <p>NIC interrupt</p>
  </div>
  <div class="page">
    <p>Network Call Stack  Backgound</p>
    <p>do_IRQ</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>napi_schedule</p>
    <p>do_softirq</p>
    <p>net_rx_action</p>
    <p>NIC interrupt</p>
    <p>Kernel IRQ Handler Driver interrupt Handler</p>
    <p>Softirq Handler NAPI poll Handler</p>
    <p>Network stack Handlers</p>
  </div>
  <div class="page">
    <p>Network Call Stack  Backgound</p>
    <p>do_IRQ</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>napi_schedule</p>
    <p>do_softirq</p>
    <p>net_rx_action</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>NIC interrupt</p>
    <p>Kernel IRQ Handler Driver interrupt Handler</p>
    <p>Softirq Handler NAPI poll Handler</p>
    <p>Network stack Handlers</p>
  </div>
  <div class="page">
    <p>Network Call Stack  Backgound</p>
    <p>do_IRQ</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>napi_schedule</p>
    <p>do_softirq</p>
    <p>net_rx_action</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>NIC interrupt</p>
    <p>Kernel IRQ Handler Driver interrupt Handler</p>
    <p>Softirq Handler NAPI poll Handler</p>
    <p>Network stack Handlers</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>Receiver stack</p>
    <p>net_rx_action</p>
    <p>do_softirq</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>run</p>
    <p>Receiver stack</p>
    <p>net_rx_action</p>
    <p>do_softirq</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>run</p>
    <p>start_time = localtime()</p>
    <p>Receiver stack</p>
    <p>net_rx_action</p>
    <p>do_softirq</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>end_time = localtime() 25</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>Measuring time difference is non-trivial  Kernel is preemptable</p>
    <p>Function in the call stack can be interrupted at any time</p>
    <p>run</p>
    <p>interrupted</p>
    <p>start_time = localtime()</p>
    <p>Receiver stack</p>
    <p>net_rx_action</p>
    <p>do_softirq</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>end_time = localtime() 25</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>Measuring time difference is non-trivial  Kernel is preemptable</p>
    <p>Function in the call stack can be interrupted at any time</p>
    <p>run</p>
    <p>run</p>
    <p>interrupted</p>
    <p>net_rx_action</p>
    <p>do_softirq</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>Receiver stack</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>Measuring time difference is non-trivial  Kernel is preemptable</p>
    <p>Function in the call stack can be interrupted at any time</p>
    <p>run</p>
    <p>run</p>
    <p>interrupted</p>
    <p>start_time = cumtime + (localtime()  swaptime)</p>
    <p>net_rx_action</p>
    <p>do_softirq</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>Receiver stack</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>Measuring time difference is non-trivial  Kernel is preemptable</p>
    <p>Function in the call stack can be interrupted at any time</p>
    <p>run</p>
    <p>run</p>
    <p>interrupted</p>
    <p>start_time = cumtime + (localtime()  swaptime)</p>
    <p>net_rx_action</p>
    <p>do_softirq</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>cumulative execution time</p>
    <p>Receiver stack</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>Measuring time difference is non-trivial  Kernel is preemptable</p>
    <p>Function in the call stack can be interrupted at any time</p>
    <p>run</p>
    <p>run</p>
    <p>interrupted</p>
    <p>start_time = cumtime + (localtime()  swaptime)</p>
    <p>net_rx_action</p>
    <p>do_softirq</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>cumulative execution time</p>
    <p>last swapped in</p>
    <p>Receiver stack</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>Measuring time difference is non-trivial  Kernel is preemptable</p>
    <p>Function in the call stack can be interrupted at any time</p>
    <p>run</p>
    <p>run</p>
    <p>interrupted</p>
    <p>start_time = cumtime + (localtime()  swaptime)</p>
    <p>net_rx_action</p>
    <p>do_softirq</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>end_time = cumtime + (localtime()  swaptime)</p>
    <p>cumulative execution time</p>
    <p>last swapped in</p>
    <p>Receiver stack</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>net_rx_action</p>
    <p>do_softirq</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>NET_RX_SOFTIRQ</p>
    <p>Receiver stack</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>net_rx_action</p>
    <p>do_softirq</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>NET_RX_SOFTIRQ</p>
    <p>Receiver stack</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>net_rx_action</p>
    <p>do_softirq</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>NET_RX_SOFTIRQ</p>
    <p>= __</p>
    <p>Receiver stack</p>
    <p>=</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>net_rx_action</p>
    <p>do_softirq</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>NET_RX_SOFTIRQ</p>
    <p>=</p>
    <p>_</p>
    <p>__</p>
    <p>Receiver stack</p>
    <p>=</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>net_rx_action</p>
    <p>do_softirq</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>NET_RX_SOFTIRQ _</p>
    <p>=  + _</p>
    <p>||</p>
    <p>= __</p>
    <p>Receiver stack</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>net_rx_action</p>
    <p>do_softirq</p>
    <p>netif_receive_skb</p>
    <p>ip_rcv</p>
    <p>NET_RX_SOFTIRQ</p>
    <p>_ = __</p>
    <p>=  + _</p>
    <p>||</p>
    <p>HI, TX, RX, TIMER, SCSI &amp; TASKLET</p>
    <p>cost of all the softirqs</p>
    <p>= __</p>
    <p>Receiver stack</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>net_tx_action</p>
    <p>do_softirq</p>
    <p>qdisc_run</p>
    <p>dequeue_skb</p>
    <p>NET_TX_SOFTIRQ</p>
    <p>Transmitter stack</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>net_tx_action</p>
    <p>do_softirq</p>
    <p>qdisc_run</p>
    <p>dequeue_skb</p>
    <p>NET_TX_SOFTIRQ</p>
    <p>Transmitter stack</p>
    <p>Linux batches packets for transmission</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>net_tx_action</p>
    <p>do_softirq</p>
    <p>qdisc_run</p>
    <p>dequeue_skb</p>
    <p>NET_TX_SOFTIRQ</p>
    <p>Transmitter stack</p>
    <p>Linux batches packets for transmission</p>
    <p>batch</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>net_tx_action</p>
    <p>do_softirq</p>
    <p>qdisc_run</p>
    <p>dequeue_skb</p>
    <p>NET_TX_SOFTIRQ</p>
    <p>Transmitter stack</p>
    <p>Linux batches packets for transmission</p>
    <p>We measure the cost of the batch and charge each packet within the batch an equal share</p>
    <p>batch  = _</p>
    <p>_</p>
  </div>
  <div class="page">
    <p>Iron  Accounting</p>
    <p>net_tx_action</p>
    <p>do_softirq</p>
    <p>qdisc_run</p>
    <p>dequeue_skb</p>
    <p>NET_TX_SOFTIRQ</p>
    <p>Transmitter stack</p>
    <p>Linux batches packets for transmission</p>
    <p>We measure the cost of the batch and charge each packet within the batch an equal share</p>
    <p>To identify the container to charge at dequeue  We encode the container information in the skb while</p>
    <p>enqueueing the packet</p>
    <p>batch  = _</p>
    <p>_</p>
  </div>
  <div class="page">
    <p>How and by how much is isolation broken</p>
    <p>Irons Design</p>
    <p>Accounting of per-packet processing cost</p>
    <p>Ensuring isolation via enforcement</p>
    <p>Integration with Linux scheduler</p>
    <p>Hardware-based packet dropping</p>
    <p>Evaluation  Controlled workload</p>
    <p>Realistic workload</p>
    <p>Outline</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement Scheduler Integration</p>
    <p>Return the accounted time to the container which was incorrectly charged</p>
    <p>time</p>
    <p>wordcount</p>
    <p>Interrupt handler</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement Scheduler Integration</p>
    <p>Return the accounted time to the container which was incorrectly charged</p>
    <p>time</p>
    <p>wordcount</p>
    <p>Interrupt handler</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement Scheduler Integration</p>
    <p>Return the accounted time to the container which was incorrectly charged</p>
    <p>time</p>
    <p>wordcount</p>
    <p>Interrupt handler</p>
    <p>Return this time to wordcount</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement Scheduler Integration</p>
    <p>Return the accounted time to the container which was incorrectly charged</p>
    <p>Charge the accounted time to the container which was responsible for the network traffic</p>
    <p>time</p>
    <p>wordcount</p>
    <p>Interrupt handler</p>
    <p>Return this time to wordcount</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement Scheduler Integration</p>
    <p>Return the accounted time to the container which was incorrectly charged</p>
    <p>Charge the accounted time to the container which was responsible for the network traffic</p>
    <p>time</p>
    <p>wordcount</p>
    <p>Interrupt handler</p>
    <p>Return this time to wordcount</p>
    <p>charge this time to TeraSort</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>Scheduler Integration</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>quota</p>
    <p>Scheduler Integration</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>running_time</p>
    <p>quota</p>
    <p>Scheduler Integration</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>running_time</p>
    <p>quota</p>
    <p>period</p>
    <p>Scheduler Integration</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>running_time</p>
    <p>quota</p>
    <p>period</p>
    <p>Scheduler Integration</p>
    <p>At the end of the period, running_time is refilled by quota.</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>running_time</p>
    <p>quota</p>
    <p>period</p>
    <p>Scheduler Integration</p>
    <p>At the end of the period, running_time is refilled by quota.</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>Scheduler Integration</p>
    <p>running_time</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>task on each core borrows time slices from the global scheduler</p>
    <p>Container</p>
    <p>task</p>
    <p>Core 1</p>
    <p>Scheduler Integration</p>
    <p>local_running _time</p>
    <p>running_time</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>task on each core borrows time slices from the global scheduler</p>
    <p>Container</p>
    <p>task</p>
    <p>Core 1</p>
    <p>Scheduler Integration</p>
    <p>local_running _time</p>
    <p>running_time</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>Container</p>
    <p>task</p>
    <p>Core 1</p>
    <p>Scheduler Integration</p>
    <p>gained running_time</p>
    <p>local_running _time</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>Container</p>
    <p>task</p>
    <p>Core 1</p>
    <p>Scheduler Integration</p>
    <p>gained running_time</p>
    <p>local_running _time</p>
    <p>Tracks the time container should get back</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>Container</p>
    <p>task</p>
    <p>Core 1</p>
    <p>Scheduler Integration</p>
    <p>additional_cpu_usage</p>
    <p>gained running_time</p>
    <p>local_running _time</p>
    <p>Tracks the time container should get back</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>Container</p>
    <p>task</p>
    <p>Core 1</p>
    <p>Scheduler Integration</p>
    <p>additional_cpu_usage</p>
    <p>gained</p>
    <p>&lt; 0; not charged &gt; 0; charged incorrectly</p>
    <p>running_time</p>
    <p>local_running _time</p>
    <p>Tracks the time container should get back</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>Container</p>
    <p>task</p>
    <p>Core 1</p>
    <p>Scheduler Integration</p>
    <p>additional_cpu_usage</p>
    <p>gained</p>
    <p>&lt; 0; not charged &gt; 0; charged incorrectly</p>
    <p>running_time</p>
    <p>local_running _time</p>
    <p>Tracks the time container should get back</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>Container</p>
    <p>task</p>
    <p>Core 1</p>
    <p>Scheduler Integration</p>
    <p>gained running_time</p>
    <p>additional_cpu_usage &lt; 0; not charged &gt; 0; charged incorrectly</p>
    <p>local_running _time</p>
    <p>Tracks the time container should get back</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>Container</p>
    <p>task</p>
    <p>Core 1</p>
    <p>Scheduler Integration</p>
    <p>Tracks the time container should get back</p>
    <p>gained running_time</p>
    <p>additional_cpu_usage &lt; 0; not charged &gt; 0; charged incorrectly</p>
    <p>local_running _time</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement Scheduler Integration</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>runtime</p>
    <p>quota</p>
    <p>period</p>
    <p>per-container state</p>
    <p>Container</p>
    <p>task</p>
    <p>Core 1</p>
    <p>rt_remain = min (runtime, min_amount)</p>
    <p>gained</p>
    <p>additional_cpu_usage</p>
    <p>Throttling a sender ensures isolation! Because throttled sender (runtime &lt; 0) cannot generate outgoing traffic.</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement Scheduler Integration</p>
    <p>Reuse infrastructure from cgroup and Linux scheduler</p>
    <p>Global Scheduler</p>
    <p>runtime</p>
    <p>quota</p>
    <p>period</p>
    <p>per-container state</p>
    <p>Container</p>
    <p>task</p>
    <p>Core 1</p>
    <p>rt_remain = min (runtime, min_amount)</p>
    <p>gained</p>
    <p>additional_cpu_usage</p>
    <p>Throttling a sender ensures isolation! Because throttled sender (runtime &lt; 0) cannot generate outgoing traffic.</p>
    <p>If the receiver is throttled, incoming traffic can still arrive and consume CPU.</p>
  </div>
  <div class="page">
    <p>How and by how much is isolation broken</p>
    <p>Irons Design</p>
    <p>Accounting of per-packet processing cost</p>
    <p>Ensuring isolation via enforcement</p>
    <p>Integration with Linux scheduler</p>
    <p>Hardware-based packet dropping</p>
    <p>Evaluation  Controlled workload</p>
    <p>Realistic workload</p>
    <p>Outline</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement Dropping Packets</p>
    <p>Con1</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>Receiver stack</p>
    <p>qdisc/tc</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Con2</p>
    <p>Modifies the Linuxs polling mechanism (NAPI)  Assigns a queue (ring buffer) to a container</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement Dropping Packets</p>
    <p>Con1</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>Receiver stack</p>
    <p>qdisc/tc</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Con2</p>
    <p>Modifies the Linuxs polling mechanism (NAPI)  Assigns a queue (ring buffer) to a container  Iron strips the throttled queue from the polling list</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement Dropping Packets</p>
    <p>Con1</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>Receiver stack</p>
    <p>qdisc/tc</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Con2</p>
    <p>Modifies the Linuxs polling mechanism (NAPI)  Assigns a queue (ring buffer) to a container  Iron strips the throttled queue from the polling list</p>
    <p>From kernels point of view, there are no more interrupts  no packets</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement Dropping Packets</p>
    <p>Con1</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>Receiver stack</p>
    <p>qdisc/tc</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Con2</p>
    <p>Modifies the Linuxs polling mechanism (NAPI)  Assigns a queue (ring buffer) to a container  Iron strips the throttled queue from the polling list</p>
    <p>From kernels point of view, there are no more interrupts  no packets</p>
    <p>From NICs point of view, kernel is busy and is not polling packets from the queue, so it stays in the polling mode.</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement Dropping Packets</p>
    <p>Con1</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>Receiver stack</p>
    <p>qdisc/tc</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Con2</p>
    <p>Modifies the Linuxs polling mechanism (NAPI)  Assigns a queue (ring buffer) to a container  Iron strips the throttled queue from the polling list</p>
    <p>From kernels point of view, there are no more interrupts  no packets</p>
    <p>From NICs point of view, kernel is busy and is not polling packets from the queue, so it stays in the polling mode.</p>
    <p>If a new packet arrives and the ring buffer is full, it gets dropped</p>
  </div>
  <div class="page">
    <p>Iron  Enforcement Dropping Packets</p>
    <p>Con1</p>
    <p>TCP/IP stack</p>
    <p>vSwitch</p>
    <p>NIC driver</p>
    <p>NIC</p>
    <p>Receiver stack</p>
    <p>qdisc/tc</p>
    <p>NIC ring</p>
    <p>buffer</p>
    <p>userspace</p>
    <p>kernel</p>
    <p>Con2</p>
    <p>Modifies the Linuxs polling mechanism (NAPI)  Assigns a queue (ring buffer) to a container  Iron strips the throttled queue from the polling list</p>
    <p>From kernels point of view, there are no more interrupts  no packets</p>
    <p>From NICs point of view, kernel is busy and is not polling packets from the queue, so it stays in the polling mode.</p>
    <p>If a new packet arrives and the ring buffer is full, it gets dropped</p>
    <p>dropped 40</p>
  </div>
  <div class="page">
    <p>How and by how much is isolation broken</p>
    <p>Irons design</p>
    <p>Accounting of per-packet processing cost</p>
    <p>Ensuring isolation via enforcement</p>
    <p>Integration with Linux scheduler</p>
    <p>Hardware-based packet dropping</p>
    <p>Evaluation  Controlled workload</p>
    <p>Realistic workload</p>
    <p>Outline</p>
  </div>
  <div class="page">
    <p>Experiment Setup</p>
    <p>Container 1 Container 2 Container 3 Container N</p>
    <p>Core</p>
    <p>Q = Period/N Q = Period/N Q = Period/N Q = Period/N</p>
    <p>Victim (sysbench) (sysbench) (sysbench) (sysbench)</p>
    <p>Interferers 42</p>
  </div>
  <div class="page">
    <p>Experiment Setup</p>
    <p>Container 1 Container 2 Container 3 Container N</p>
    <p>Core</p>
    <p>Q = Period/N Q = Period/N Q = Period/N Q = Period/N</p>
    <p>Victim (sysbench) (sysbench) (sysbench) (sysbench)</p>
    <p>Container 1 Container 2 Container 3 Container N</p>
    <p>Core</p>
    <p>Q = Period/N Q = Period/N Q = Period/N Q = Period/N</p>
    <p>Victim (sysbench)</p>
    <p>Sender/ Receiver</p>
    <p>Sender/ Receiver</p>
    <p>Sender/ Receiver</p>
    <p>Interferers</p>
    <p>Interferers 42</p>
  </div>
  <div class="page">
    <p>Experiment Setup</p>
    <p>Container 1 Container 2 Container 3 Container N</p>
    <p>Core</p>
    <p>Q = Period/N Q = Period/N Q = Period/N Q = Period/N</p>
    <p>Victim (sysbench) (sysbench) (sysbench) (sysbench)</p>
    <p>Container 1 Container 2 Container 3 Container N</p>
    <p>Core</p>
    <p>Q = Period/N Q = Period/N Q = Period/N Q = Period/N</p>
    <p>Victim (sysbench)</p>
    <p>Sender/ Receiver</p>
    <p>= Penalty factor</p>
    <p>Time that victim takes when competing with traffic</p>
    <p>Time that victim takes when competing with sysbench</p>
    <p>Sender/ Receiver</p>
    <p>Sender/ Receiver</p>
    <p>Interferers</p>
    <p>Interferers 42</p>
  </div>
  <div class="page">
    <p>TCP Sender</p>
    <p>Sender Interference With Iron</p>
    <p>Penalty factor Time that victim takes when</p>
    <p>competing with sysbench</p>
    <p>= Time that victim takes when competing with traffic</p>
    <p>Traffic rate (Gbps)</p>
    <p>P e</p>
    <p>n a</p>
    <p>lt y</p>
    <p>F a</p>
    <p>ct o</p>
    <p>r</p>
  </div>
  <div class="page">
    <p>Penalty factor remains below 1.04, significant decrease from 1.85</p>
    <p>TCP Sender</p>
    <p>Sender Interference With Iron</p>
    <p>Penalty factor Time that victim takes when</p>
    <p>competing with sysbench</p>
    <p>= Time that victim takes when competing with traffic</p>
    <p>Traffic rate (Gbps)</p>
    <p>P e</p>
    <p>n a</p>
    <p>lt y</p>
    <p>F a</p>
    <p>ct o</p>
    <p>r</p>
  </div>
  <div class="page">
    <p>Penalty factor remains below 1.04, significant decrease from 1.85</p>
    <p>TCP Sender UDP Sender</p>
    <p>Sender Interference With Iron</p>
    <p>Penalty factor Time that victim takes when</p>
    <p>competing with sysbench</p>
    <p>= Time that victim takes when competing with traffic</p>
    <p>Penalty factor remains below 1.04, significant decrease from 1.18</p>
    <p>Traffic rate (Gbps)</p>
    <p>P e</p>
    <p>n a</p>
    <p>lt y</p>
    <p>F a</p>
    <p>ct o</p>
    <p>r</p>
    <p>Traffic rate (Gbps)</p>
    <p>P e</p>
    <p>n a</p>
    <p>lt y</p>
    <p>F a</p>
    <p>ct o</p>
    <p>r</p>
  </div>
  <div class="page">
    <p>Receiver Interference With Iron</p>
    <p>Penalty factor</p>
    <p>Time that victim takes when competing with traffic</p>
    <p>Time that victim takes when competing with sysbench</p>
    <p>=</p>
  </div>
  <div class="page">
    <p>Receiver Interference With Iron</p>
    <p>TCP traffic</p>
    <p>Penalty factor</p>
    <p>Time that victim takes when competing with traffic</p>
    <p>Time that victim takes when competing with sysbench</p>
    <p>=</p>
  </div>
  <div class="page">
    <p>Receiver Interference With Iron</p>
    <p>TCP traffic</p>
    <p>Penalty factor</p>
    <p>Time that victim takes when competing with traffic</p>
    <p>Time that victim takes when competing with sysbench</p>
    <p>=</p>
    <p>UDP traffic</p>
  </div>
  <div class="page">
    <p>Receiver Interference With Iron</p>
    <p>TCP traffic</p>
    <p>Penalty factor never exceeds 1.05, significant decrease from 6 for TCP and 4.45 for UDP</p>
    <p>Penalty factor</p>
    <p>Time that victim takes when competing with traffic</p>
    <p>Time that victim takes when competing with sysbench</p>
    <p>=</p>
    <p>UDP traffic</p>
  </div>
  <div class="page">
    <p>How and by how much is isolation broken</p>
    <p>Irons Design</p>
    <p>Accounting of per-packet processing cost</p>
    <p>Ensuring isolation via enforcement</p>
    <p>Integration with Linux scheduler</p>
    <p>Hardware-based packet dropping</p>
    <p>Evaluation  Controlled workload</p>
    <p>Realistic workload</p>
    <p>Outline</p>
  </div>
  <div class="page">
    <p>Impact on Big Data Applications</p>
    <p>Setup  48 containers spread over 6 machines  Each job runs over 24 containers</p>
  </div>
  <div class="page">
    <p>Impact on Big Data Applications</p>
    <p>Setup</p>
    <p>48 containers spread over 6 machines</p>
    <p>Each job runs over 24 containers</p>
    <p>MapReduce jobs as victim:</p>
    <p>wordcount: counts word frequency</p>
    <p>pi: computes the value of pi</p>
    <p>grep: searches for a given word</p>
    <p>Trace based Interferer:</p>
    <p>Shuffle phase of TeraSort job with</p>
  </div>
  <div class="page">
    <p>Impact on Big Data Applications</p>
    <p>Setup</p>
    <p>48 containers spread over 6 machines</p>
    <p>Each job runs over 24 containers</p>
    <p>MapReduce jobs as victim:</p>
    <p>wordcount: counts word frequency</p>
    <p>pi: computes the value of pi</p>
    <p>grep: searches for a given word</p>
    <p>Trace based Interferer:</p>
    <p>Shuffle phase of TeraSort job with</p>
  </div>
  <div class="page">
    <p>Impact on Big Data Applications</p>
    <p>Penalty factor never exceeds 1.04</p>
    <p>Setup</p>
    <p>48 containers spread over 6 machines</p>
    <p>Each job runs over 24 containers</p>
    <p>MapReduce jobs as victim:</p>
    <p>wordcount: counts word frequency</p>
    <p>pi: computes the value of pi</p>
    <p>grep: searches for a given word</p>
    <p>Trace based Interferer:</p>
    <p>Shuffle phase of TeraSort job with</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Evaluated the interference caused by network-based containers.</p>
    <p>Provided hardened isolation for network-based processing in containerized environment.</p>
    <p>Ensures accurate accounting of the time spent processing network traffic in softirq.</p>
    <p>Integrated with Linux scheduler with minimal changes.</p>
    <p>Novel packet dropping mechanism to limit the interference.</p>
  </div>
</Presentation>
