<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Aiding the Detection of Fake Accounts in Large Scale Social Online Services</p>
    <p>Qiang Cao</p>
    <p>Duke University</p>
    <p>Michael Sirivianos Xiaowei Yang Tiago Pregueiro Cyprus Univ. of Technology Duke University Tuenti, Telefonica Digital</p>
    <p>Telefonica Research</p>
  </div>
  <div class="page">
    <p>Fake accounts (Sybils) in OSNs</p>
  </div>
  <div class="page">
    <p>Fake accounts (Sybils) in OSNs</p>
  </div>
  <div class="page">
    <p>Fake accounts for sale</p>
  </div>
  <div class="page">
    <p>Fake (Sybil) accounts in OSNs can be used to:</p>
    <p>Send spam [IMC10]</p>
    <p>Manipulate online rating [NSDI09]</p>
    <p>Access personal user info [S&amp;P11]</p>
    <p>Why are fakes harmful?</p>
  </div>
  <div class="page">
    <p>the geographic location of our users is estimated based on a number of factors, such as IP address, which may not always accurately reflect the user's actual location. If advertisers, developers, or investors do not perceive our user metrics to be accurate representations of our user base, or if we discover material inaccuracies in our user metrics, our reputation may be harmed and advertisers and developers may be less willing to allocate their budgets or resources to Facebook, which could negatively affect our business and financial results.</p>
    <p>Why are fakes harmful?</p>
  </div>
  <div class="page">
    <p>Detecting Sybils is challenging</p>
    <p>Difficult to automatically detect using</p>
    <p>profile and activity features</p>
    <p>Sybils may resemble real users</p>
  </div>
  <div class="page">
    <p>Employs many counter-measures</p>
    <p>False positives are detrimental to user experience</p>
    <p>Real users respond very negatively</p>
    <p>Current practice</p>
    <p>Suspicious accounts</p>
    <p>User abuse reports</p>
    <p>User profiles &amp; activities</p>
    <p>Mitigation mechanisms</p>
    <p>Human verifiers</p>
    <p>Automated classification</p>
    <p>(Machine learning)</p>
  </div>
  <div class="page">
    <p>Employs many counter-measures</p>
    <p>False positives are detrimental to user experience</p>
    <p>Real users respond very negatively</p>
    <p>Inefficient use of human labor!</p>
    <p>Current practice</p>
    <p>Suspicious accounts</p>
    <p>User abuse reports</p>
    <p>User profiles &amp; activities</p>
    <p>Mitigation mechanisms</p>
    <p>Human verifiers</p>
    <p>Automated classification</p>
    <p>(Machine learning)</p>
    <p>Tuentis user inspection team</p>
    <p>Reviews ~12, 000 abusive profile reports per day</p>
    <p>An employee reviews ~300 reports per hour</p>
    <p>Deletes ~100 fake accounts per day</p>
  </div>
  <div class="page">
    <p>Sybil detection</p>
    <p>Suspicious accounts</p>
    <p>User abuse reports</p>
    <p>User profiles &amp; activities</p>
    <p>Mitigation mechanisms</p>
    <p>Human verifiers</p>
    <p>Automated classification</p>
    <p>(Machine learning)</p>
    <p>Can we improve the workflow?</p>
  </div>
  <div class="page">
    <p>The foundation of social-graph-based schemes</p>
    <p>Sybils have limited social links to real users</p>
    <p>Can complement current OSN counter-measures</p>
    <p>Leveraging the social relationship</p>
    <p>Non-Sybil region Sybil region</p>
    <p>Attack edges</p>
  </div>
  <div class="page">
    <p>Goals of a practical social-graph-based Sybil defense</p>
    <p>Effective</p>
    <p>Uncovers fake accounts with high accuracy</p>
    <p>Efficient</p>
    <p>Able to process huge online social networks</p>
  </div>
  <div class="page">
    <p>How to build a practical social-graph-based Sybil defense?</p>
    <p>Sybil* is too expensive in OSNs</p>
    <p>Designed for decentralized settings</p>
    <p>Sybil*?</p>
    <p>SybilGuard [SIGCOMM06]</p>
    <p>SybilLimit [S&amp;P08]</p>
    <p>SybilInfer [NDSS09]</p>
  </div>
  <div class="page">
    <p>Traditional trust inference?</p>
    <p>How to build a practical social-graph-based Sybil defense?</p>
    <p>Sybil* is too expensive in OSNs</p>
    <p>Designed for decentralized settings</p>
    <p>PageRank [Page et al. 99]</p>
    <p>EigenTrust [WWW03]</p>
    <p>PageRank is not Sybil-resilient</p>
    <p>EigenTrust is substantially</p>
    <p>manipulable [NetEcon06]</p>
  </div>
  <div class="page">
    <p>SybilRank in a nutshell</p>
    <p>Uncovers Sybils by ranking OSN users  Sybils are ranked towards the bottom</p>
    <p>Based on short random walks</p>
    <p>Uses parallel computing framework</p>
    <p>Practical Sybil defense: efficient and effective  Low computational cost: O(n log n)</p>
    <p>20% more accurate than the 2nd best scheme</p>
    <p>Real-world deployment in Tuenti</p>
  </div>
  <div class="page">
    <p>Short random walks</p>
    <p>Trust seed</p>
    <p>Primer on short random walks</p>
    <p>Limited probability of</p>
    <p>escaping to the Sybil region</p>
  </div>
  <div class="page">
    <p>SybilRanks key insights</p>
    <p>Main idea</p>
    <p>Ranks by the landing probability of short random walks</p>
    <p>Uses power iteration to compute the landing probability</p>
    <p>Iterative matrix multiplication (used by PageRank)</p>
    <p>Much more efficient than random walk sampling (Sybil*)</p>
    <p>O(n log n) computational cost</p>
    <p>As scalable as PageRank</p>
  </div>
  <div class="page">
    <p>Landing probability of short random walks</p>
    <p>An example</p>
    <p>A</p>
    <p>B</p>
    <p>C D</p>
    <p>E F</p>
    <p>G</p>
    <p>H</p>
    <p>I</p>
    <p>Initialization</p>
    <p>Trust seed Non-Sybil users Sybils 18</p>
  </div>
  <div class="page">
    <p>Landing probability of short random walks</p>
    <p>An example</p>
    <p>A</p>
    <p>B</p>
    <p>C D</p>
    <p>E F</p>
    <p>G</p>
    <p>H</p>
    <p>I</p>
    <p>Trust seed Non-Sybil users Sybils 19</p>
    <p>Step 1</p>
  </div>
  <div class="page">
    <p>Stationary distribution</p>
    <p>Identical degree-normalized landing probability: 1/24</p>
    <p>An example</p>
    <p>A</p>
    <p>B</p>
    <p>C D</p>
    <p>E F</p>
    <p>G</p>
    <p>H</p>
    <p>I</p>
  </div>
  <div class="page">
    <p>Stationary distribution</p>
    <p>An example</p>
    <p>A</p>
    <p>B</p>
    <p>C D</p>
    <p>E F</p>
    <p>G</p>
    <p>H</p>
    <p>I</p>
    <p>Early Termination</p>
    <p>Step 4</p>
    <p>Non-Sybil users have higher</p>
    <p>degree-normalized landing probability</p>
  </div>
  <div class="page">
    <p>How many steps?</p>
    <p>O(log n) steps to cover the non-Sybil region</p>
    <p>The non-Sybil region is fast-mixing (well-connected) [S&amp;P08 ]</p>
    <p>Trust seed O(log n) steps</p>
    <p>Stationary distribution approximation</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>Problem and Motivation</p>
    <p>Challenges</p>
    <p>Key Insights</p>
    <p>Design Details</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Eliminates the node degree bias</p>
    <p>False positives: low-degree non-Sybil users</p>
    <p>False negatives: high-degree Sybils</p>
    <p>Security guarantee</p>
    <p>Accept O(log n) Sybils per attack edge</p>
    <p>Theorem: When an attacker randomly establishes g attack edges in a fast mixing social network, the total number of Sybils that rank higher than non-Sybils is O(g log n).</p>
    <p>We divide the landing probability by the node degree</p>
    <p>Rankings</p>
    <p>Only O(g log n)</p>
  </div>
  <div class="page">
    <p>A weakness of social-graph-based schemes [SIGCOMM10]</p>
    <p>Coping with the multi-community structure</p>
    <p>Trust seed</p>
    <p>False positives</p>
    <p>Los Angeles</p>
    <p>San Jose San Diego</p>
    <p>San Francisco Fresno</p>
  </div>
  <div class="page">
    <p>Coping with the multi-community structure</p>
    <p>Trust seed</p>
    <p>Solution: leverage the support for multiple seeds</p>
    <p>Distribute seeds into communities</p>
    <p>Los Angeles</p>
    <p>San Jose San Diego</p>
    <p>San Francisco Fresno</p>
  </div>
  <div class="page">
    <p>How to distribute seeds?</p>
    <p>Estimate communities</p>
    <p>The Louvain method</p>
    <p>[Blondel et al., J. of Statistical Mechanics08]</p>
    <p>Distribute non-Sybil seeds in communities</p>
    <p>Manually inspect a set of nodes in each community</p>
    <p>Use the nodes that passed the inspection as seeds</p>
    <p>Sybils cannot be seeds</p>
  </div>
  <div class="page">
    <p>Comparative evaluation</p>
    <p>Real-world deployment in Tuenti</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Comparative evaluation</p>
    <p>Stanford large network dataset collection</p>
    <p>Ranking quality  Area under the Receiver Operating Characteristics (ROC)</p>
    <p>curve [Viswanath et al., SIGCOMM10]</p>
    <p>Compared approaches  SybilLimit (SL)</p>
    <p>SybilInfer (SI)</p>
    <p>EigenTrust (ET)</p>
    <p>GateKeeper [INFOCOM11]</p>
    <p>Community detection</p>
    <p>[SIGCOMM10]</p>
  </div>
  <div class="page">
    <p>SybilRank has the lowest false rates</p>
    <p>SybilRank</p>
    <p>EigenTrust</p>
    <p>rates than the 2nd best scheme</p>
  </div>
  <div class="page">
    <p>Real-world deployment</p>
    <p>Used the anonymized Tuenti social graph</p>
    <p>11 million users</p>
    <p>1.4 billion social links</p>
    <p>25 large communities with &gt;100K nodes in each</p>
  </div>
  <div class="page">
    <p>A 20K-user Tuenti community</p>
    <p>Fake accounts</p>
    <p>Real accounts</p>
  </div>
  <div class="page">
    <p>Various connection patterns among suspected fakes</p>
    <p>Tightly connected</p>
    <p>Clique</p>
    <p>Loosely connected</p>
  </div>
  <div class="page">
    <p>A global view of suspected fakes connections</p>
    <p>Small clusters/cliques</p>
    <p>Controlled by</p>
    <p>many distinct</p>
    <p>attackers</p>
  </div>
  <div class="page">
    <p>SybilRank is effective</p>
    <p>Percentage of fakes in each 50K-node interval</p>
    <p>Estimated by random sampling</p>
    <p>Fakes are confirmed by Tuentis inspection team</p>
    <p>High percentage of fakes</p>
    <p>P e</p>
    <p>rc e</p>
    <p>n ta</p>
    <p>g e</p>
    <p>o f fa</p>
    <p>k e</p>
    <p>s</p>
    <p>~180K fakes among the lowest-ranked 200K users</p>
    <p>Tuenti uncovers x18 more fakes</p>
  </div>
  <div class="page">
    <p>SybilRank: ranks users according to the landing probability of short random walks  Computational cost O(n log n)</p>
    <p>Provable security guarantee</p>
    <p>Deployment in Tuenti  ~200K lowest ranked users are mostly Sybils</p>
    <p>Enhances Tuentis previous Sybil defense workflow</p>
    <p>Conclusion: a practical Sybil defense</p>
  </div>
  <div class="page">
    <p>Thank You!</p>
    <p>qiangcao@cs.duke.edu michael.sirivianos@cut.ac.cy xwy@cs.duke.edu tiago@tuenti.com</p>
    <p>Questions?</p>
  </div>
</Presentation>
