<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>POWER BUDGETING FOR</p>
    <p>VIRTUALIZED DATA CENTERS</p>
    <p>Harold Lim (Duke University)</p>
    <p>Aman Kansal (Microsoft Research)</p>
    <p>Jie Liu (Microsoft Research)</p>
  </div>
  <div class="page">
    <p>Power Concerns in Data Centers</p>
    <p>Consumption costs</p>
    <p>Provisioning costs</p>
    <p>Cost of supply infrastructure, generators, backup UPSs</p>
    <p>Can be higher than consumption cost in large data centers due to discounted/bulk price on consumption</p>
    <p>Addressed through peak power management</p>
    <p>Provisioning Cost</p>
    <p>Data from</p>
    <p>James</p>
    <p>Hamilton</p>
  </div>
  <div class="page">
    <p>Over-subscription reduces provisioning cost</p>
    <p>Lower allocated capacity =&gt; lower provisioning cost (Slight perf hit)</p>
    <p>Possible because power can be capped if exceeds [Lefurgy et al. 2003, Femal et. al 2005, Urgaonkar et al. 2009, Wang et al. 2010]</p>
    <p>D a</p>
    <p>ta C</p>
    <p>e n te</p>
    <p>r P o w</p>
    <p>e r</p>
    <p>Rated peak (never reached)</p>
    <p>Allocated Capacity</p>
    <p>Actual power consumption (peak</p>
    <p>of the sum usually lower than</p>
    <p>allocated, but can exceed)</p>
    <p>Possible peak (sum of server peaks)</p>
    <p>Time</p>
    <p>Savings from</p>
    <p>Power Capping</p>
  </div>
  <div class="page">
    <p>Enter Virtualization</p>
    <p>Existing capping methods fall short</p>
    <p>Servers shared by VMs from different applications: cannot cap</p>
    <p>a server or blade cluster in hardware</p>
    <p>VM VM  VM VM  VM VM</p>
    <p>R a c k</p>
    <p>Server-12</p>
    <p>Server-1j Server-11</p>
  </div>
  <div class="page">
    <p>Challenge 1: Disconnect Between Physical Layout and Logical</p>
    <p>Organization of Resources</p>
    <p>Server</p>
    <p>VM1 VM2</p>
    <p>Existing Hardware Capping:</p>
    <p>Unaware of Applications</p>
    <p>Server</p>
    <p>VM1 VM2</p>
    <p>Need: Application Aware</p>
    <p>Capping</p>
  </div>
  <div class="page">
    <p>Challenge 1: Disconnect Between Physical Layout and Logical</p>
    <p>Organization of Resources</p>
    <p>Server</p>
    <p>VM1 VM2</p>
    <p>Server</p>
    <p>VM1 VM2</p>
    <p>Existing Hardware Capping:</p>
    <p>Unaware of Applications</p>
    <p>Need: Application Aware</p>
    <p>Capping</p>
  </div>
  <div class="page">
    <p>Challenge 2: Multi-dimensional Power Control</p>
    <p>P e rf</p>
    <p>o rm</p>
    <p>a n ce</p>
    <p>( T P S )</p>
    <p>Power (Watt)</p>
    <p>DVFS = 100</p>
    <p>DVFS = 94</p>
    <p>DVFS = 88</p>
    <p>DVFS = 82</p>
    <p>DVFS = 76</p>
    <p>DVFS = 70</p>
    <p>Two knobs: DVFS and CPU time cap</p>
    <p>Different marks are different DVFS levels, multiple marks correspond</p>
    <p>to different CPU time caps</p>
    <p>Perf gap at same power</p>
  </div>
  <div class="page">
    <p>Challenge 3: Dynamic Power Proportions</p>
    <p>Applications input workload volume changes over time</p>
    <p>Proportion among applications changes</p>
    <p>Proportion of power among app tiers changes</p>
    <p>CPU Disk</p>
    <p>Front-End Back-End Low</p>
    <p>Load</p>
    <p>(CPU</p>
    <p>Idle)</p>
    <p>(Disk</p>
    <p>Spinning,</p>
    <p>Low IO)</p>
    <p>CPU Disk</p>
    <p>Front-End Back-End High</p>
    <p>Load</p>
    <p>(CPU</p>
    <p>busy)</p>
    <p>(Disk</p>
    <p>Spinning,</p>
    <p>High IO)</p>
  </div>
  <div class="page">
    <p>Virtualized Power Shifting (VPS): A Power</p>
    <p>Budgeting System for Virtualized Infrastructures</p>
    <p>Addresses the above three challenges</p>
    <p>Application-aware</p>
    <p>Eg. Interactive apps not affected during capping</p>
    <p>Shifts power dynamically as workloads change</p>
    <p>Distributes power among applications and application</p>
    <p>tiers for best performance</p>
    <p>Exploits performance information (if available) and</p>
    <p>multiple power knobs</p>
    <p>Selects optimal operating point within power budget</p>
  </div>
  <div class="page">
    <p>Application-aware Hierarchy</p>
    <p>PT(t)</p>
    <p>Data Center</p>
    <p>Controller</p>
    <p>Application Level Controller 1</p>
    <p>Tier Level</p>
    <p>Controller 1</p>
    <p>Tier Level</p>
    <p>Controller n</p>
    <p>Application Level Controller n</p>
    <p>Tier Level</p>
    <p>Controller 1</p>
    <p>Tier Level</p>
    <p>Controller n</p>
    <p>VM VM</p>
    <p>VM VM</p>
    <p>VM VM</p>
    <p>VM VM</p>
    <p>Papp-1(t) Papp-n(t)</p>
    <p>Ptier-1(t) Ptier-n(t) Ptier-1(t) Ptier-n(t)</p>
  </div>
  <div class="page">
    <p>Top Level Controller: Issues</p>
    <p>Determines amount of power for</p>
    <p>each application</p>
    <p>Static allocations does not work</p>
    <p>Dynamic workloads and power</p>
    <p>usage</p>
    <p>Unused power wasted</p>
    <p>Must compensate for hidden</p>
    <p>power increase in shared</p>
    <p>infrastructure (e.g., cooling load)</p>
    <p>that are hard to assign to each</p>
    <p>application</p>
    <p>PT(t)</p>
    <p>Data Center</p>
    <p>Controller</p>
    <p>App 1 App n</p>
    <p>HVAC,</p>
    <p>Etc.</p>
  </div>
  <div class="page">
    <p>Top Level Controller: Solution</p>
    <p>Uses feedback (PID) to adapt to dynamic workload and power</p>
    <p>Estimates uncontrollable power</p>
    <p>PU(t) = PM(t)  Sum(Pai(t))</p>
    <p>Outputs application power to be allocated</p>
    <p>Papp(t+1) = PM(t) + D(t+1) - PU(t)</p>
    <p>Top Level</p>
    <p>Controller</p>
    <p>App 1 App m</p>
    <p>Data Center Power</p>
    <p>PT(t) PA1(t) PAm(t)</p>
    <p>PM(t)</p>
  </div>
  <div class="page">
    <p>Top Level Controller: Power Split</p>
    <p>How is Papp distributed among apps?</p>
    <p>Using Weighted Fair Sharing (WFS)</p>
    <p>Each application has an initial budget</p>
    <p>E.g., 99th percentile of its max power</p>
    <p>In each priority class, allocate power needed to each</p>
    <p>app, up to its initial budget</p>
    <p>If not enough power, allocate proportion via WFS</p>
  </div>
  <div class="page">
    <p>Application Level Controller: Issues</p>
    <p>Determines how much</p>
    <p>budget to allocate to</p>
    <p>each tier</p>
    <p>Prior work: Learn model</p>
    <p>of power ratios among</p>
    <p>tiers a-priori. Problems:</p>
    <p>Model changes with</p>
    <p>workload</p>
    <p>Depends on the control</p>
    <p>knobs used</p>
    <p>Application behavior</p>
    <p>may change over time</p>
    <p>Tier</p>
    <p>Application</p>
    <p>Tier</p>
    <p>N</p>
  </div>
  <div class="page">
    <p>Application Level Controller: Solution</p>
    <p>VPS: dynamically tunes power allocations without</p>
    <p>relying on learned models</p>
    <p>Observations:</p>
    <p>Application tiers are arranged in a pipeline</p>
    <p>Throttling one tier affects other tiers</p>
    <p>Tier</p>
    <p>Application</p>
    <p>Tier</p>
    <p>N</p>
  </div>
  <div class="page">
    <p>Application Level Controller (contd.)</p>
    <p>Uses PID control</p>
    <p>Measures total application power usage but only</p>
    <p>control one tier</p>
    <p>Automatically achieves right proportion</p>
    <p>Controller</p>
    <p>Tier 1</p>
    <p>(Controlled)</p>
    <p>Tier</p>
    <p>n</p>
    <p>- Budget</p>
    <p>u(t)</p>
    <p>e(t)</p>
    <p>Pa(t)</p>
    <p>Controller:</p>
  </div>
  <div class="page">
    <p>Tier Level Controller</p>
    <p>Tracks tier power</p>
    <p>budget by controlling</p>
    <p>VM power usage</p>
    <p>Many power control</p>
    <p>knobs available</p>
    <p>Use DVFS and VM CPU</p>
    <p>time allocation as knobs</p>
    <p>PT(t)</p>
    <p>Tier Level</p>
    <p>Controller</p>
    <p>VM 1 VM n</p>
    <p>Multiple trade-offs exist w.r.t accuracy, speed,</p>
    <p>models needed, app visibility needed</p>
    <p>Study 3 design options</p>
  </div>
  <div class="page">
    <p>Option 1: Open Loop Control</p>
    <p>Uses power model to convert power budget to</p>
    <p>control knob setting</p>
    <p>E.g., PVM=cfreq*ucpu</p>
    <p>Easy and instantaneous</p>
    <p>Does not require visibility into application</p>
    <p>performance</p>
    <p>But does not compensate for errors</p>
  </div>
  <div class="page">
    <p>Option 2: PID Control</p>
    <p>Real time measurements to tune power settings:</p>
    <p>compensates for error</p>
    <p>Slower (needs time to converge)</p>
    <p>Single control knob (no notion of performance</p>
    <p>optimality)</p>
    <p>Controller</p>
    <p>VM1 VM k</p>
    <p>Tier</p>
    <p>Budget</p>
    <p>u(t), VM CPU Time</p>
    <p>e(t)</p>
    <p>Sum of VM power consumptions</p>
  </div>
  <div class="page">
    <p>Option 3: Model Predictive Control (MPC)</p>
    <p>Optimizes performance using multiple power control</p>
    <p>knobs (DVFS and VM CPU time)</p>
    <p>Uses a cost function that consists of error and performance terms</p>
    <p>Solves for the optimal outputs for the next N steps but only apply</p>
    <p>the setting for next time step</p>
    <p>Requires application performance measurement</p>
    <p>Requires system models that relate control knobs to system</p>
    <p>state</p>
  </div>
  <div class="page">
    <p>Summary of Design Options</p>
    <p>Pros Cons</p>
    <p>Open Loop Fast Needs power</p>
    <p>models</p>
    <p>Higher error</p>
    <p>PID Low error No performance</p>
    <p>optimization</p>
    <p>Slower</p>
    <p>MPC Optimizes</p>
    <p>performance</p>
    <p>Needs system</p>
    <p>models</p>
    <p>Needs performance</p>
    <p>measurement</p>
  </div>
  <div class="page">
    <p>Experiments</p>
    <p>VPS controllers run as network services in root VM on each server</p>
    <p>Controller tuned using known methods</p>
    <p>Physical Server</p>
    <p>VM  VM Controller</p>
    <p>Service</p>
    <p>Root VM</p>
    <p>Testbed: 17 Quad core HP Proliant servers (11 host the apps, 6 generate the workload)</p>
    <p>VMs mixed across the physical servers</p>
    <p>VM power measured using Joulemeter, Hardware power using WattsUp PRO meters</p>
  </div>
  <div class="page">
    <p>Experiment Workloads</p>
    <p>Applications</p>
    <p>Interactive: StockTrader  open source multi-tiered cluster web application benchmark</p>
    <p>3 instances, 2 are High priority</p>
    <p>Background: SPEC CPU 2006 benchmark</p>
    <p>Low priority</p>
    <p>Use Microsoft data center traces as input to simulate realistic workloads that vary over time</p>
    <p>W o rk</p>
    <p>lo a d (</p>
    <p>% )</p>
    <p>Time (s)</p>
  </div>
  <div class="page">
    <p>Metric: Total Budgeting Error</p>
    <p>Error = excess power consumed above the assigned</p>
    <p>budget, normalized by the power budget</p>
    <p>Open Loop PID MPC Physical Hierarchy</p>
    <p>O v e rs</p>
    <p>h o o t E rr</p>
    <p>o r</p>
    <p>(% )</p>
    <p>VPS</p>
  </div>
  <div class="page">
    <p>Metrics: Errors within App Hierarchy</p>
    <p>Application power enforcement errors</p>
    <p>Lo-1 Lo-2 Hi-1 Hi-2</p>
    <p>E rr</p>
    <p>o r</p>
    <p>(% )</p>
    <p>Open Loop PID MPC</p>
  </div>
  <div class="page">
    <p>Metric: Power Differentiation</p>
    <p>VPS is designed to respect application priorities and QoS</p>
    <p>constraints in a shared infrastructure</p>
    <p>PID and MPC perform appropriate application differentiation</p>
    <p>Open Loop PID MPC Physical Hierarchy</p>
    <p>P o w</p>
    <p>e r</p>
    <p>R e d u c ti o n (</p>
    <p>% )</p>
    <p>Lo-1 Lo-2</p>
    <p>Hi-1 Hi-2</p>
  </div>
  <div class="page">
    <p>Metric: Application Performance</p>
    <p>Performance of (low priority) app that was capped</p>
    <p>o n se</p>
    <p>T im</p>
    <p>e</p>
    <p>(s )</p>
    <p>Time (s)</p>
    <p>PID MPC</p>
    <p>T h ro</p>
    <p>u g h p</p>
    <p>u t</p>
    <p>(T P S )</p>
    <p>Time (s)</p>
    <p>PID MPC</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>VPS: power budgeting system for virtualized data</p>
    <p>centers</p>
    <p>Hierarchy of control follows application layout</p>
    <p>Respects application priorities and application VM</p>
    <p>boundaries</p>
    <p>Optimizes application performance, given a power</p>
    <p>budget</p>
    <p>Dynamically adjusts power proportions</p>
    <p>Exploits multiple knobs</p>
  </div>
</Presentation>
