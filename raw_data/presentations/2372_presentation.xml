<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Towards Energy Proportional Cloud for Data Processing Frameworks</p>
    <p>Hyeong S. Kim, Dong In Shin, Young Jin Yu, Hyeonsang Eom, Heon Y. Yeom</p>
    <p>Seoul National University</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Recent advances in cloud computing is driving the heavy use of world-wide data centers.</p>
    <p>But, the cost of operating data center is rapidly increasing.</p>
    <p>Environmental Protection Agent (EPA) recently reported that 1.5% of the total US energy use in 2006 was used to power data centers.</p>
    <p>It is expected to nearly double by 2010.</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Amazon.com is facing highly increased power demand.  Hamilton(2009) reported that the cost to power data</p>
    <p>centers accounts for 59% of the total budget with</p>
    <p>three year amortizations.</p>
    <p>He also says that power distribution is already fairly efficient.</p>
    <p>Therefore, we should keep our attention on reducing the power delivered to the servers.</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Fortunately, there are still much room to reduce the power consumption in various ways.</p>
    <p>Barroso et al.(2007) proposed the concept of energy proportional computing.  Googles commodity servers lack the property.</p>
    <p>DCEF(2007) reported that savings of the order of 20% can be achieved in server and network energy consumption.</p>
  </div>
  <div class="page">
    <p>From Energy Proportional Computer to Energy Proportional Cloud</p>
    <p>Power save mode for cloud computing  We advocate power down or suspending method</p>
    <p>Service-level PSM  Each of the services provided by the data center</p>
    <p>has its own PSM  Advantages  Save the energy consumed by a single service by</p>
    <p>turning off some of the servers belonging to the service</p>
    <p>Temporarily assign the suspended servers to the services which need more computing power</p>
  </div>
  <div class="page">
    <p>Motivating Example</p>
    <p>File chunks</p>
    <p>Servers</p>
    <p>Unavailable chunks + degraded performance (decreased</p>
    <p>data locality + reduced number of processing nodes)</p>
  </div>
  <div class="page">
    <p>Motivating Example</p>
    <p>Two Problems</p>
    <p>Data Unavailability</p>
    <p>We may lose data during power save mode.</p>
    <p>We have to consider the data placement policy before suspending some servers.</p>
    <p>Performance Degradation</p>
    <p>Suspended servers are not only used for the distributed storage, but also for the data processing.</p>
    <p>But, the very poor performance can be problematic even if we want reduced power consumption at the cost of performance.</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Full coverage by Harnik et al.(2009)  A method to choose candidate nodes to be suspended for</p>
    <p>generic distributed file systems  The problem of minimizing the number of unavailable files is</p>
    <p>NP-Complete.  They use heuristic  a greedy algorithm  We name this as postPSM since they deal with the replicas</p>
    <p>after the system enters PSM (Reactive approach)</p>
    <p>Covering subset by Leverich et al.(2009)  At least one replica of a data-block must be stored in a</p>
    <p>subset of nodes.  We name this as prePSM since they construct a set of nodes</p>
    <p>a priori (Proactive approach)</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Use low power machines in the data center  Cooperative Expendable Micro-Sliced Servers(CEMS)  Each server  dual-core AMD, Mini-ITX board</p>
    <p>Each sled  6 servers, 6 disks, 1 shared power supply</p>
    <p>LinuxArmOrg</p>
    <p>ARM-cpu servers running web servers</p>
    <p>FAWN</p>
    <p>A cluster of cost-effective components, e.g. low-power, efficient embedded CPUs and the flash storage</p>
    <p>They dont consider the hybrid design that utilizes both of high-end servers and low power ones.</p>
  </div>
  <div class="page">
    <p>Our Contribution</p>
    <p>We answer the following questions to enable PSM for the data processing frameworks</p>
    <p>Is it reasonable to use low power computers instead of commodity servers during the power save mode?</p>
    <p>We give a performance study of MapReduce with heterogeneous servers</p>
    <p>Are there any practical challenges to enable power save mode for data processing frameworks?</p>
  </div>
  <div class="page">
    <p>Our primary concern is to augment high performance systems with low-power machines for D.P.F.</p>
    <p>The server class used in our evaluation</p>
  </div>
  <div class="page">
    <p>Simple Observations</p>
    <p>Svr1 consumes more than 200W even if it is just sitting around.( bigger than Svr2s peak)</p>
    <p>Low power nodes spend negligible amount of powers during idle time.</p>
    <p>Low1 and Low2 contribute to space saving.</p>
    <p>Low1: 215x210x55(mm), Low2: 101x115x27(mm)</p>
  </div>
  <div class="page">
    <p>MapReduce Performance</p>
    <p>TeraSort (10GB), GridMix( streamSort, javaSort, dataScan, combiner, monsterQuery, webdataSort) for Small/Medium/Large dataset</p>
    <p>Hadoop jobs on a single machine to study the performance of each server class</p>
    <p>Calculate running time and perf/watt</p>
  </div>
  <div class="page">
    <p>Svr1 performs the best of all, but the difference betn Svr1 and Svr2 is very small.</p>
    <p>Although Low1 and Low2 increased the running time significantly, they are very power-efficient.</p>
  </div>
  <div class="page">
    <p>gridmix benchmark</p>
    <p>The difference of running time is not significant and low power computers use power more effectively.</p>
    <p>We can indirectly show that replacing high end servers with low power ones does not incur significant performance degradation.</p>
    <p>Environment Normalized Running time</p>
    <p>Normalized Perf/Watt</p>
  </div>
  <div class="page">
    <p>Data Unavailability  Unavailable chunks lead to unavailable files</p>
    <p>Therefore, replica redistribution is needed to meet replication factor during PSM.  In our simulation, when we suspended 30% of the</p>
    <p>nodes, about 30% of the total chunks remain intact</p>
    <p>This means 70% of the total chunks should be redistributed</p>
  </div>
  <div class="page">
    <p>Simulation study  We simulated the data placement algorithm of HDFS (rack</p>
    <p>aware replica placement)  We setup 16 nodes of two clusters (8 nodes per cluster)  In the simulation, we generated a fileset of 318GB and</p>
    <p>placed the file chunks according to the rack-aware replica placement</p>
    <p>After that, we randomly suspended 30% of the nodes (4 nodes) and measured the number of remaining replicas of all the file chunks</p>
    <p>On average,  3-replicas : about 32% of chunks  2-replicas : about 47% of chunks  1-replica : about 19% of chunks  0-replica : about 2% of chunks</p>
  </div>
  <div class="page">
    <p>We also varied  The number of files of</p>
    <p>the fileset  The number of</p>
    <p>chunks of each file</p>
    <p>The results are similar</p>
    <p>Can we exploit this in replica redistribution?</p>
  </div>
  <div class="page">
    <p>Efficient Replica Redistribution</p>
    <p>We can allow decreased replication factor for some chunks  Chunks in 3-replicas state are complete  Chunks in 2-replicas state are relatively safe  Chunks in 1-replica are in potential danger  Chunks in 0-replica are in instant danger</p>
    <p>So, chunks in 0-replica and 1-replica had better be replicated instantly to reach the 2-replicas state</p>
    <p>When the state of a chunk reaches 2-replicas, we may force the chunk to stay in 2-replicas state</p>
    <p>Chunks already in 2-replicas state also maintain its state</p>
  </div>
  <div class="page">
    <p>Efficient Replica Redistribution</p>
    <p>In this way we can improve</p>
    <p>The efficiency of replica redistribution</p>
    <p>Further optimization</p>
    <p>The chunks in 2-replicas state can be replicated when the chunk is actually used by the MapReduce</p>
  </div>
  <div class="page">
    <p>Conclusion &amp; Future Work</p>
    <p>We propose a Service-level PSM</p>
    <p>PSM for data processing frameworks is a challenging problem</p>
    <p>Future work</p>
    <p>Candidate node set selection</p>
    <p>We are implementing the power save mode for Hadoop</p>
  </div>
</Presentation>
