<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Globecom 03 | 2. December 2003 | San Francisco www.zurich.ibm.com</p>
    <p>Roman Pletka, Andreas Kind, Marcel Waldvogel and Soenke Mannal (University of Stuttgart)</p>
    <p>Closed-Loop Congestion Control for Mixed Responsive and Non-Responsive Traffic</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Overview</p>
    <p>The goals of AQM  AQM based on queue level occupancy</p>
    <p>Rate-based AQM</p>
    <p>Per-flow AQM</p>
    <p>The BAT AQM algorithm  Problems in fair bandwidth allocation of responsive and</p>
    <p>non-responsive traffic  The Closed-Loop Congestion Control (CLCC) algorithm  Simulation results  Conclusion and outlook</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>End-to-end Packet delivery Requirements</p>
    <p>AQM Goods for End-to-end Packet Delivery: 1. Low packet loss rates. 2. Short end-to-end delays. 3. High TCP goodput (not only throughput). 4. Absorb traffic bursts [Villamizar:94] (bandwidthdelay product of</p>
    <p>buffer space in routers). 5. Stable queuing delays. 6. 4 Packets / connection in flight [Morris 97].</p>
    <p>Non Goals: 1. Queues stabilized at a certain length. 2. Exact per-flow fairness. 3. Keeping per-flow state information.</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>United Colors of AQM</p>
    <p>RED [Floyd 93]</p>
    <p>PURPLE [Pletka 03]</p>
    <p>Tail Drop A-RED [Floyd 01]</p>
    <p>S-RED [Feng 99]</p>
    <p>F-RED [Lin 97]</p>
    <p>BLUE [Feng 99]</p>
    <p>Time</p>
    <p>BAT [Bowen 01]</p>
    <p>Green 1 [Feng 02]</p>
    <p>Green 2 [Wydrowsky 02]</p>
    <p>non lin. RED</p>
    <p>[Plasser 02]</p>
    <p>Kantawala &amp;Turner</p>
    <p>D-RED [Aweya 01]</p>
    <p>Flow-based</p>
    <p>Based on intrinsic TCP properties</p>
    <p>Rate-based</p>
    <p>Heuristics</p>
    <p>PI Controller [Hollot 01]</p>
    <p>But</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>but</p>
    <p>None of the traditional AQM schemes are capable to efficiently separate and hence fairly allocate bandwidth for responsive and non-responsive traffic.</p>
    <p>In addition, most existing AQM schemes require extensive tuning in order to provide lose bandwidth guarantees.</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>The BAT AQM Algorithm</p>
    <p>Open-loop control scheme:</p>
    <p>otherwise</p>
    <p>)( if else</p>
    <p>)( if</p>
    <p>))(1)((</p>
    <p>))()(,1min(</p>
    <p>)1)((</p>
    <p>))(,1min(</p>
    <p>)( max,</p>
    <p>min,</p>
    <p>tB</p>
    <p>ftf</p>
    <p>ftf</p>
    <p>tODtT</p>
    <p>tBCtT</p>
    <p>wtT</p>
    <p>wtT</p>
    <p>ttT ii</p>
    <p>ii</p>
    <p>iii</p>
    <p>ii</p>
    <p>i</p>
    <p>i</p>
    <p>i</p>
    <p>Configurable with meaningful parameters (e.g., maximum and minimum bandwidth guarantees instead of queuing thresholds).</p>
    <p>BAT approximates max-min fairness [Bertsekas87].</p>
    <p>Reference Input Controller</p>
    <p>Control Input Process</p>
    <p>Output</p>
    <p>Per-flow aggregate transmit probabilities Ti (e.g., DiffServ codepoints).  Based on two-level AIMD control to adapt the transmit probabilities:</p>
    <p>fi,min min b\w guarantee fi,max max b\w guarantee B excess b\w signal Ci increase constant Di decrease constant Oi offered load w scaling constant</p>
    <p>fi,max</p>
    <p>fi,min</p>
    <p>Rate</p>
    <p>Time</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Fairness index of BAT with 2 CBR Flows</p>
    <p>Two competing UDP flows with equal fmax = 100Mbps and varying minimum bandwidth guarantees fmin:</p>
    <p>fmin Flow 1 [Mbps]</p>
    <p>fmin Flow 2 [Mbps]</p>
    <p>high fairness</p>
    <p>low fairness</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>The Simulation Topology</p>
    <p>TCP Source 1</p>
    <p>TCP Source n</p>
    <p>UDP Source</p>
    <p>UDP Sink</p>
    <p>TCP Sink 1</p>
    <p>TCP Sink n</p>
    <p>BAT BAT</p>
    <p>Simulation UDP Rate [Mbit/s] RTT [ms] Packet Size [Bytes]</p>
    <p>Each simulation set consists of 5 different bandwidth allocations (90, 60, 45, 30, 25% UDP traffic).</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Motivation: Difficulties in bandwidth allocation</p>
    <p>normalized D_UDP</p>
    <p>R a te</p>
    <p>U D</p>
    <p>P /T</p>
    <p>C P</p>
    <p>Number of simulation</p>
    <p>C o</p>
    <p>n fo</p>
    <p>rm a</p>
    <p>n c e</p>
    <p>is / should (all) is / should (low UDP) 5% -5%</p>
    <p>Difficulties in presence of responsive and non-responsive traffic:  Traditional AQM (RED):</p>
    <p>Decreasing TCP bandwidth share when UDP traffic increases [Floyd97].</p>
    <p>BAT: Using a correction factor for DUDP as a function of the desired bandwidth allocation.</p>
    <p>Key idea: It is sufficient to control only one parameter, namely DUDP in BAT based on the UDP/TCP ratio rref.</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>The CLCC algorithm</p>
    <p>based on Closed-loop control:</p>
    <p>Reference Input</p>
    <p>Controller Control Input</p>
    <p>Process Output</p>
    <p>+</p>
    <p>_</p>
    <p>Sensor</p>
    <p>derived from a PID Controller:</p>
    <p>dt</p>
    <p>tdx Tdttx</p>
    <p>T txKty dVd</p>
    <p>N dR</p>
    <p>)( )(</p>
    <p>Discrete time notation: 2,21,1,01   kdkdkdkk xbxbxbyy</p>
    <p>The proportional part does not improve the results</p>
    <p>ref</p>
    <p>ref ,</p>
    <p>r</p>
    <p>rr x kkd</p>
    <p>ref</p>
    <p>ref 0</p>
    <p>r</p>
    <p>rr bDD kkUDP</p>
    <p>k UDP</p>
    <p>Control error: Control rule:</p>
    <p>y(t) control input xd(t) control error Kr, TN, TV system parameters</p>
    <p>k UDPDb</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>The CLCC algorithm (detailed view)</p>
    <p>- Offered UDP rate OUDP - Serviced TCP and UDP rate fTCP, fUDP (measured &amp; averaged) - Desired UDP/TCP ratio rref</p>
    <p>Input Interface</p>
    <p>OUDP &lt; fUDP,ref Recovery from Preemption ?</p>
    <p>Control Preemption</p>
    <p>D = 0.9  D</p>
    <p>Recovery</p>
    <p>UDP k k-1</p>
    <p>UDP</p>
    <p>D = DUDP k recovery</p>
    <p>UDP</p>
    <p>Error Signal Feedback</p>
    <p>x = (r - r ) / rd,k ref k ref</p>
    <p>D = D + D  xUDP k k-1</p>
    <p>UDP k-1 UDP d,k</p>
    <p>Signal Limiter</p>
    <p>D  D  DUDP k</p>
    <p>min max</p>
    <p>Output Interface D UDP k</p>
    <p>new</p>
    <p>Yes</p>
    <p>No</p>
    <p>Yes</p>
    <p>No</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>CLCC on a IBM PowerNP 4GS3 Network Processor</p>
    <p>UDP offered rate</p>
    <p>TCP offered rate</p>
    <p>Data Plane</p>
    <p>AQM Scheme</p>
    <p>AQM Algorithm</p>
    <p>CLCC Algorithm - evaluate new AQM parameters dt ~ 1s</p>
    <p>Control Plane</p>
    <p>NP APIs</p>
    <p>Routing Resource Manager</p>
    <p>CLCC - max/min b/w values Error</p>
    <p>Signal FeedbackControl</p>
    <p>Preemption</p>
    <p>Recovery Signal Limiter</p>
    <p>Serviced UDP rate</p>
    <p>Serviced TCP rate</p>
    <p>Packet Processing Transmit</p>
    <p>Probability Table</p>
    <p>max/min values DUDP D0 serviced rates</p>
    <p>Network ProcessorControl Processor</p>
    <p>- adapts transmit probabilities every 4ms</p>
    <p>- Layer 2-4 processing</p>
    <p>Packet Scheduler</p>
    <p>rref</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Simulation Results (using ns-2)</p>
    <p>Set of 100 greedy TCP connections, 2 - 200ms RTTs.  One CBR UDP flow at 90Mbps.  Bandwidth allocation:</p>
    <p>fUDP,min= 0 Mbps, fTCP,min= 40Mpbs, fUDP,max= fTCP,max= 100Mbps  rref= 30/70  0.42</p>
    <p>BAT without additional controller Using the CLCC algorithm with BAT</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Simulation Results (cont.)</p>
    <p>Set of 100 greedy TCP connections.  One bouncing UDP flow between 50 and 120Mbps.  Bandwidth allocation:</p>
    <p>fUDP,min= 0 Mbps, fTCP,min= 40Mpbs, fUDP,max= fTCP,max= 100Mbps  rref= 30/70  0.42</p>
    <p>UDP and TCP rates UDP/TCP ratio and fairness index</p>
  </div>
  <div class="page">
    <p>Zurich Research Laboratory</p>
    <p>Conclusion</p>
    <p>CLCC is a robust solution for fair bandwidth allocation of responsive and non-responsive traffic even in presence of bursty traffic conditions.</p>
    <p>First AQM system that is able to automatically control under disparate creativeness without having to include an expensive fair queuing system.</p>
    <p>CLCC maintains low queuing delays when used on top of BAT.  CLCC requires no tuning of parameters.  Simulations have been verified in an implementation based on a IBM</p>
    <p>PowerNP 4GS3 network processor.</p>
    <p>Outlook  Analysis of CLCC on top of other AQM algorithms.  Short-lived TCP connections.</p>
  </div>
</Presentation>
