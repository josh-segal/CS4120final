<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Peppercoin Micropayments Ronald L. Rivest</p>
    <p>MIT CSAIL</p>
    <p>(joint work with Prof. Silvio Micali)</p>
  </div>
  <div class="page">
    <p>Outline  Micropayment examples  Challenges  Aggregation methods  The Peppercoin method</p>
    <p>(In England a peppercorn is smallest amount that can be paid in a contract)</p>
  </div>
  <div class="page">
    <p>What is a micropayment?  A payment in the range 0.1 to $10.  A payment small enough that</p>
    <p>processing it is relatively costly. (Processing one credit-card payment costs about 25 )</p>
    <p>Processing cost is the key issue for micropayment methods.</p>
  </div>
  <div class="page">
    <p>Lydians invented coins 640 B.C.</p>
    <p>Before 640 B.C.: gold bars, barter small purchases difficult.  After 640 B.C.: coins</p>
    <p>small purchases easy.  Before 2003: credit cards</p>
    <p>small on-line purchases difficult.  After 2003:</p>
  </div>
  <div class="page">
    <p>Generic Payment Framework</p>
    <p>Consumer Alice Merchant Bob</p>
    <p>Authorization Deposit(s)</p>
    <p>Merchant PSP</p>
    <p>Consumer PSP</p>
    <p>Settlement</p>
    <p>Payment(s)</p>
    <p>Billing</p>
  </div>
  <div class="page">
    <p>How well make small payments  Web download</p>
    <p>Music (even streaming)</p>
    <p>Mobile phone  Map  Ringtones</p>
    <p>Physical POS  Vending machine</p>
  </div>
  <div class="page">
    <p>Challenges:  Ease-of-use  Low-Cost  Extending existing payment</p>
    <p>framework  Security   (many other issues, too)</p>
  </div>
  <div class="page">
    <p>Aggregation  To reduce cost, micropayments must be</p>
    <p>aggregated into fewer macropayments.  Possible levels of aggregation:</p>
    <p>None: Every payment deposited with PSP  Merchant-level: A consumers payments are</p>
    <p>aggregated by merchant  MicroPSP: Monopoly service that disintermediates</p>
    <p>existing payment services; doesnt scale well  Universal: Payments aggregated across all users and</p>
    <p>merchants, even those supported by different cooperating PSPs</p>
  </div>
  <div class="page">
    <p>No Aggregation</p>
    <p>Alice</p>
    <p>Bill</p>
    <p>Inefficient!</p>
  </div>
  <div class="page">
    <p>Previous Work: Digital Cash  Example: Chaums digital coins  Emphasis on anonymity:</p>
    <p>Withdrawals use blind signatures  Problem of double-spending handled</p>
    <p>by having doubler-spenders revealed (e.g. Brands protocol)</p>
    <p>No aggregation: every coin spent is returned to the PSP.</p>
  </div>
  <div class="page">
    <p>Merchant-Level Aggregation</p>
    <p>Alice</p>
    <p>Bill</p>
    <p>Only works sometimes!</p>
  </div>
  <div class="page">
    <p>Previous Work: PayWord  Rivest and Shamir 96  Emphasis on reducing public-key</p>
    <p>operations by using per user/merchant hash-chains instead: x0 x1 x2 x3  xn</p>
    <p>User signs x0 over to merchant and releases next xi for next payment</p>
    <p>Merchant-level aggregation only.</p>
  </div>
  <div class="page">
    <p>MicroPSP Aggregation</p>
    <p>Alice</p>
    <p>MicroPSP Bill</p>
    <p>Doesnt scale up!</p>
  </div>
  <div class="page">
    <p>Universal Aggregation  Universal aggregation dramatically</p>
    <p>reduces processing cost, independent of spending patterns.</p>
    <p>Also called many/many/many aggregation: Aggregates payments from  Many consumers  Many merchants  Many PSPs in any combination. No need to aggregate sales</p>
    <p>per consumer.</p>
  </div>
  <div class="page">
    <p>Universal Aggregation Idea  Would merchant prefer: (a) twenty 50 cent payments, or (b) $0 for 19 payments, and $10 for one? No difference to merchant, on average</p>
  </div>
  <div class="page">
    <p>Universal Aggregation Idea  Would merchant prefer: (a) twenty 50 cent payments, or (b) $0 for 19 payments, and $10 for one? No difference to merchant, on average.</p>
    <p>What if processing costs 20 cents per payment? (a) nets only 30 cents per payment (b) nets 49 cents net per payment! Merchant strongly prefers (b) !</p>
  </div>
  <div class="page">
    <p>Peppercoins Universal Aggregation  One micropayment in 20 is</p>
    <p>cryptographically selected by merchant, and deposited for 20x its value, as a macropayment!</p>
    <p>Yet consumer pays only for what she has spent: each micropayment records cumulative amount she has spent at all merchants.</p>
  </div>
  <div class="page">
    <p>Peppercoins Universal Aggregation</p>
    <p>Log Alice</p>
    <p>($8.50 cumulative)</p>
  </div>
  <div class="page">
    <p>Peppercoins Universal Aggregation</p>
    <p>Log Charles</p>
    <p>($12.79 cumulative)</p>
  </div>
  <div class="page">
    <p>Peppercoins Universal Aggregation</p>
    <p>Efficient always and scalable: !! 20 transactions for the cost of 1 !!</p>
    <p>Alice</p>
    <p>$10</p>
    <p>$10</p>
    <p>Bill $11 (exactly cover cumulative amount she spent at all merchants)</p>
    <p>($11.00 cumulative)</p>
  </div>
  <div class="page">
    <p>Peppercoin Extends Existing Payment Systems to Micropayments</p>
    <p>Consumer Alice Merchant Bob</p>
    <p>Existing Payment System</p>
    <p>M ic ro</p>
    <p>pa</p>
    <p>ym en</p>
    <p>ts</p>
    <p>M ac</p>
    <p>ro</p>
    <p>pa ym</p>
    <p>en ts</p>
  </div>
  <div class="page">
    <p>Dimensions to consider:  Aggregation (universal)  PSP on-line or off-line ? (off-line)  Interactive vs. non-interactive (non)</p>
    <p>(e.g. anti-spam payment in email)  Computation Cost (cheap)  User-fairness (fair)   (many other issues, too)</p>
  </div>
  <div class="page">
    <p>Previous Work: Lottery Tickets  Electronic Lottery Tickets as</p>
    <p>Micropayments  Rivest FC 97 (similar to Transactions using Bets proposal by Wheeler 96)</p>
    <p>Payments are probabilistic  First schemes to provide</p>
    <p>universal aggregation: payments aggregated across all user/merchant pairs.</p>
  </div>
  <div class="page">
    <p>Lottery Tickets Explained  Assume micropayments are for ten cents.  Merchant gives user y = hash(x) for</p>
    <p>random x.  User writes check: Pay Merchant $10 if</p>
    <p>two low-order digits of hash-1(y) are 75. (Signed by user, with cert from his PSP.)</p>
    <p>Merchant wins $10 with probability 1/100. Expected value of payment is 10 cents.</p>
    <p>Bank sees only 1 out of every 100 payments. (A plus for user privacy!)</p>
  </div>
  <div class="page">
    <p>Non-interactive  Revised check:</p>
    <p>Pay Merchant $10 if two low-order digits of the hash of Merchants digital signature on this check are 75.</p>
    <p>Merchants deterministic signature scheme unpredictable to user.</p>
    <p>Merchant can convince PSP to pay.</p>
  </div>
  <div class="page">
    <p>Computation Cost  Digital signatures are still</p>
    <p>relatively expensive --but much cheaper than they used to be!</p>
    <p>It now seems reasonable to base micropayments on digital signatures. (E.g. Java card in cell phone)</p>
    <p>User and merchant are anyways involved with each transaction; digital signatures add only a few milliseconds.</p>
    <p>On-line/Off-line signature can also help.</p>
  </div>
  <div class="page">
    <p>Optimization for less Signing  Pay Merchant $10 if the two low</p>
    <p>order digits of the hash of Merchants digital signature on the date of this check are 75.</p>
    <p>Merchant only signs once a day.</p>
  </div>
  <div class="page">
    <p>Variable-sized payments  To make micropayment of size m:</p>
    <p>Chance of winning becomes m / M where M is the macropayment size.</p>
    <p>For example, a $1 micropayment converts to a $10 macropayment with probability 1/10.</p>
    <p>A one-penny micropayment converts to a $10 macropayment with probability 1/1000.</p>
  </div>
  <div class="page">
    <p>Is revenue variance an issue?</p>
    <p>Theorem. If Peppercoin reduces merchant fees by R percent of transaction value, then merchant will be ahead (with probability 999,999/1,000,000) after only (5 / R)2 macropayments have been received.</p>
    <p>Example: micro = 0.10, macro = $10, otherfee = 0.03, peppercoinfee = 0.01, R = 0.20, (5/R)2 = 625 or $6250 total value.</p>
  </div>
  <div class="page">
    <p>Fraud models  Security is challenging to achieve given</p>
    <p>that PSP has only partial information, parties may collude, and payment schedules are decoupled.</p>
    <p>For example, consumer and merchant may try to collude to defraud PSPs.</p>
    <p>One effective countermeasure is to make macropayment to merchant only from revenues from that specific consumer (perhaps deferring payment if necessary).</p>
  </div>
  <div class="page">
    <p>Conclusion  Peppercoin micropayments are</p>
    <p>Easy to use  Low-cost even for small payments  Flexible</p>
    <p>(interface with existing payment systems)  Secure</p>
    <p>www.peppercoin.com</p>
    <p>Thanks!</p>
  </div>
  <div class="page">
    <p>(The End)</p>
  </div>
</Presentation>
