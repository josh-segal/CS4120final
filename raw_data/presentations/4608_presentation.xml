<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Evaluating Bufferless Flow Control for On-Chip Networks</p>
    <p>George Michelogiannakis, Daniel Sanchez,</p>
    <p>William J. Dally, Christos Kozyrakis</p>
    <p>Stanford University</p>
  </div>
  <div class="page">
    <p>In a nutshell</p>
    <p>Many researchers report high buffer costs.</p>
    <p>Motivates bufferless networks.</p>
    <p>We compare bufferless networks with VC networks.</p>
    <p>We perform simple optimizations on both sides and a thorough analysis.</p>
    <p>We show that bufferless networks:</p>
    <p>Consume only marginally less energy than buffered networks at very low loads.</p>
    <p>Have higher latency and provide less throughput per unit power.</p>
    <p>Are more complex.</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Methodology.</p>
    <p>Evaluation infrastructure.</p>
    <p>Background.</p>
    <p>Optimizing routing in BLESS.</p>
    <p>Router microarchitecture.</p>
    <p>Network evaluation.</p>
    <p>Discussion.</p>
    <p>Conclusion.</p>
  </div>
  <div class="page">
    <p>Methodology</p>
    <p>Cycle-accurate network simulator.</p>
    <p>Balfour and Dally [ICS 06] power and area models.</p>
    <p>Based on first-order principles.</p>
    <p>We validate our models against HSPICE.</p>
    <p>for leakage power.</p>
    <p>Also, a 45nm low-power commercial library.</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Methodology.</p>
    <p>Background.</p>
    <p>A quick overview.</p>
    <p>Optimizing routing in BLESS.</p>
    <p>Router microarchitecture.</p>
    <p>Network evaluation.</p>
    <p>Discussion.</p>
    <p>Conclusion.</p>
  </div>
  <div class="page">
    <p>Bufferless flow control</p>
    <p>Flits cant wait in</p>
    <p>routers.</p>
    <p>Contention is handled</p>
    <p>by:</p>
    <p>Dropping and retransmitting from the</p>
    <p>source.</p>
    <p>Deflecting to a free output.</p>
    <p>Ouch</p>
  </div>
  <div class="page">
    <p>BLESS deflection network</p>
    <p>Flits bid for a single output using dimension-ordered</p>
    <p>routing (DOR).</p>
    <p>Body flits may get deflected.</p>
    <p>They must contain destination information.</p>
    <p>They may arrive out of order.</p>
    <p>Oldest flits are prioritized to avoid livelocks.</p>
    <p>We compare virtual channel (VC) networks against</p>
    <p>BLESS.</p>
    <p>[ISCA 09]</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Methodology.</p>
    <p>Background.</p>
    <p>Optimizing routing in BLESS.</p>
    <p>Dimension-order revisited.</p>
    <p>Router microarchitecture.</p>
    <p>Implications in router design.</p>
    <p>Network evaluation.</p>
    <p>Discussion.</p>
    <p>Conclusion.</p>
  </div>
  <div class="page">
    <p>Optimizing routing in BLESS</p>
    <p>Deadlocks impossible in</p>
    <p>bufferless networks,</p>
    <p>thus DOR unnecessary.</p>
    <p>Multidimensional</p>
    <p>routing (MDR) requests</p>
    <p>all productive outputs.</p>
    <p>throughput compared</p>
    <p>to DOR.</p>
  </div>
  <div class="page">
    <p>Allocator complexity</p>
    <p>Deflection networks require a complete matching.</p>
    <p>Critical path through each output arbiter.</p>
    <p>BLESS allocator increases cycle time by 81% compared</p>
    <p>to input-first, round-robin switch allocator.</p>
    <p>Partial sorting Input modules Output modules</p>
  </div>
  <div class="page">
    <p>Buffer cost</p>
    <p>We assume efficient custom SRAMs.</p>
    <p>We use empty buffer bypassing.</p>
    <p>Thus, at very low loads the extra power is only buffer</p>
    <p>leakage.</p>
    <p>1.5% of the overall network power.</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Methodology.</p>
    <p>Background.</p>
    <p>Optimizing routing in BLESS.</p>
    <p>Router microarchitecture.</p>
    <p>Network evaluation.</p>
    <p>Lets talk numbers.</p>
    <p>Discussion.</p>
    <p>Conclusion.</p>
  </div>
  <div class="page">
    <p>Power versus injection rate</p>
    <p>BLESS: less power</p>
    <p>for flit injection rates</p>
    <p>lower than 7%.</p>
    <p>Higher than that,</p>
    <p>activity factor from</p>
    <p>deflections costs</p>
    <p>more.</p>
  </div>
  <div class="page">
    <p>Throughput efficiency</p>
    <p>Swept datapath width.</p>
  </div>
  <div class="page">
    <p>Blocking or</p>
    <p>deflection latency:</p>
    <p>One deflection costs</p>
    <p>Latency distribution</p>
    <p>Avg. Max. Std.</p>
    <p>VC 0.75 13 1.18</p>
    <p>Deflect. 4.87 108 8.09</p>
  </div>
  <div class="page">
    <p>Power breakdown</p>
    <p>Underlying cause:</p>
    <p>Reading &amp; writing a buffer: 6.2pJ.</p>
    <p>One deflection: 42pJ. 6.7x the above.</p>
    <p>Buffer power: 2% compared to channel power. 7% without bypassing.</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Methodology.</p>
    <p>Background.</p>
    <p>Optimizing routing in BLESS.</p>
    <p>Router microarchitecture.</p>
    <p>Network evaluation.</p>
    <p>Discussion.</p>
    <p>Many parameters in such networks.</p>
    <p>Conclusion.</p>
  </div>
  <div class="page">
    <p>Discussion</p>
    <p>Topics covered in the paper in detail but not in this</p>
    <p>presentation:</p>
    <p>Low-swing channels: Favor deflection.</p>
    <p>Never more than 1.5% less than VC power.</p>
    <p>VC:16% more throughput per unit power.</p>
    <p>VC becomes more area efficient.</p>
    <p>Endpoint complexity: Need complexity, such as</p>
    <p>backpressure if ejection buffers are full, or very large</p>
    <p>ejection buffers.</p>
  </div>
  <div class="page">
    <p>Discussion</p>
    <p>Points briefly mentioned in our study:</p>
    <p>Dropping networks: Same fundamental hop-buffering</p>
    <p>energy tradeoff.</p>
    <p>Average hop count in dropping networks is affected more from topology and routing.</p>
    <p>Self-throttling sources: Hide network performance</p>
    <p>inefficiencies.</p>
    <p>But CPU execution time really matters.</p>
    <p>Sub-networks, network size, more traffic classes: No</p>
    <p>clear trend.</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>We compare VC and deflection networks. We show:</p>
    <p>Deflection network consumes marginally (1.5%) less</p>
    <p>energy at very low loads.</p>
    <p>VC network:</p>
    <p>12% lower average latency. Smaller std. dev.</p>
    <p>21% more throughput per unit power.</p>
    <p>Deflection network are more complex.</p>
    <p>E.g. endpoint complexity &amp; age-based allocation.</p>
    <p>Unless buffer cost unusually high, bufferless networks</p>
    <p>less efficient &amp; more complex.</p>
    <p>Designers should focus on optimizing buffers.</p>
  </div>
  <div class="page">
    <p>QUESTIONS?</p>
    <p>Thats all folks</p>
  </div>
  <div class="page">
    <p>Area breakdown</p>
    <p>Buffers 30% of the</p>
    <p>network area.</p>
  </div>
</Presentation>
