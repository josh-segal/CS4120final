<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>On the Complexity of Managing Probabilistic XML Data</p>
    <p>Pierre Senellart Serge Abiteboul</p>
    <p>Principles Of Database Systems, 13th June 2007</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Imprecise Data and Imprecise Tasks</p>
    <p>Observations Many tasks generate imprecise data, with some confidence value.</p>
    <p>Need for a way to manage this imprecision, to work with it throughout an entire complex process.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Imprecise Data and Imprecise Tasks</p>
    <p>Observations Many tasks generate imprecise data, with some confidence value.</p>
    <p>Need for a way to manage this imprecision, to work with it throughout an entire complex process.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>A Probabilistic XML Warehouse</p>
    <p>Module 1 Module 2 Module 3</p>
    <p>Update interface Query interface</p>
    <p>Probabilistic XML Warehouse</p>
    <p>Update transaction</p>
    <p>+ confidence Query</p>
    <p>Results + confidence</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>A Probabilistic XML Warehouse (Hidden Web)</p>
    <p>Module 1 Module 2 Module 3</p>
    <p>Update interface Query interface</p>
    <p>Probabilistic XML Warehouse</p>
    <p>Update transaction</p>
    <p>+ confidence Query</p>
    <p>Results + confidence</p>
    <p>Topic crawler Form analyzer Inf. Extractor</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>A Probabilistic XML Warehouse (Hidden Web)</p>
    <p>Module 1 Module 2 Module 3</p>
    <p>Update interface Query interface</p>
    <p>Probabilistic XML Warehouse</p>
    <p>Update transaction</p>
    <p>+ confidence</p>
    <p>Query Results + confidence</p>
    <p>Topic crawler Form analyzer Inf. Extractor</p>
    <p>Crawled URLs</p>
    <p>+ confidence</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>A Probabilistic XML Warehouse (Hidden Web)</p>
    <p>Module 1 Module 2 Module 3</p>
    <p>Update interface Query interface</p>
    <p>Probabilistic XML Warehouse</p>
    <p>Update transaction</p>
    <p>+ confidence</p>
    <p>Query</p>
    <p>Results + confidence</p>
    <p>Topic crawler Form analyzer Inf. Extractor</p>
    <p>Form URL?</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>A Probabilistic XML Warehouse (Hidden Web)</p>
    <p>Module 1 Module 2 Module 3</p>
    <p>Update interface Query interface</p>
    <p>Probabilistic XML Warehouse</p>
    <p>Update transaction</p>
    <p>+ confidence Query</p>
    <p>Results + confidence</p>
    <p>Topic crawler Form analyzer Inf. Extractor</p>
    <p>URLs + confidence</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>A Probabilistic XML Warehouse (Hidden Web)</p>
    <p>Module 1 Module 2 Module 3</p>
    <p>Update interface Query interface</p>
    <p>Probabilistic XML Warehouse</p>
    <p>Update transaction</p>
    <p>+ confidence</p>
    <p>Query Results + confidence</p>
    <p>Topic crawler Form analyzer Inf. Extractor</p>
    <p>Analyzed form</p>
    <p>+ confidence</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>A Probabilistic XML Warehouse (Hidden Web)</p>
    <p>Module 1 Module 2 Module 3</p>
    <p>Update interface Query interface</p>
    <p>Probabilistic XML Warehouse</p>
    <p>Update transaction</p>
    <p>+ confidence</p>
    <p>Query</p>
    <p>Results + confidence</p>
    <p>Topic crawler Form analyzer Inf. Extractor</p>
    <p>Form?</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>A Probabilistic XML Warehouse (Hidden Web)</p>
    <p>Module 1 Module 2 Module 3</p>
    <p>Update interface Query interface</p>
    <p>Probabilistic XML Warehouse</p>
    <p>Update transaction</p>
    <p>+ confidence Query</p>
    <p>Results + confidence</p>
    <p>Topic crawler Form analyzer Inf. Extractor</p>
    <p>Person !  + confidence</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>A Probabilistic XML Warehouse (Hidden Web)</p>
    <p>Module 1 Module 2 Module 3</p>
    <p>Update interface Query interface</p>
    <p>Probabilistic XML Warehouse</p>
    <p>Update transaction</p>
    <p>+ confidence</p>
    <p>Query Results + confidence</p>
    <p>Topic crawler Form analyzer Inf. Extractor</p>
    <p>Person ! ISBN + confidence</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Probabilistic Trees</p>
    <p>Framework Unordered data trees Details: no attributes, no mixed content. . .</p>
    <p>A</p>
    <p>B C</p>
    <p>D</p>
    <p>A</p>
    <p>B B C</p>
    <p>D</p>
    <p>(multiset semantics)</p>
    <p>Sample space: Set of all such data trees.</p>
    <p>Probabilistic tree (prob-tree): Representation of a discrete probability distribution over this sample space.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Probabilistic Trees</p>
    <p>Framework Unordered data trees Details: no attributes, no mixed content. . .</p>
    <p>A</p>
    <p>B C</p>
    <p>D</p>
    <p>A</p>
    <p>B B C</p>
    <p>D</p>
    <p>(multiset semantics)</p>
    <p>Sample space: Set of all such data trees.</p>
    <p>Probabilistic tree (prob-tree): Representation of a discrete probability distribution over this sample space.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Probabilistic Trees</p>
    <p>Framework Unordered data trees Details: no attributes, no mixed content. . .</p>
    <p>A</p>
    <p>B C</p>
    <p>D</p>
    <p>A</p>
    <p>B B C</p>
    <p>D</p>
    <p>(multiset semantics)</p>
    <p>Sample space: Set of all such data trees.</p>
    <p>Probabilistic tree (prob-tree): Representation of a discrete probability distribution over this sample space.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Probabilistic Trees</p>
    <p>Framework Unordered data trees Details: no attributes, no mixed content. . .</p>
    <p>A</p>
    <p>B C</p>
    <p>D</p>
    <p>A</p>
    <p>B B C</p>
    <p>D</p>
    <p>(multiset semantics)</p>
    <p>Sample space: Set of all such data trees.</p>
    <p>Probabilistic tree (prob-tree): Representation of a discrete probability distribution over this sample space.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Probabilistic Trees</p>
    <p>Framework Unordered data trees Details: no attributes, no mixed content. . .</p>
    <p>A</p>
    <p>B C</p>
    <p>D</p>
    <p>A</p>
    <p>B B C</p>
    <p>D</p>
    <p>(multiset semantics)</p>
    <p>Sample space: Set of all such data trees.</p>
    <p>Probabilistic tree (prob-tree): Representation of a discrete probability distribution over this sample space.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Complexity Issues</p>
    <p>Prob-tree model defined in [Abiteboul &amp; Senellart 2006]. Here, we tackle complexity questions about it:</p>
    <p>What is the complexity of queries and updates?</p>
    <p>Is this complexity inherent to the problem of managing tree-like probabilistic information?</p>
    <p>How can we check if two prob-trees are equivalent?</p>
    <p>Can we compute efficiently restrictions of prob-trees (e.g., by a DTD)?</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Complexity Issues</p>
    <p>Prob-tree model defined in [Abiteboul &amp; Senellart 2006]. Here, we tackle complexity questions about it:</p>
    <p>What is the complexity of queries and updates?</p>
    <p>Is this complexity inherent to the problem of managing tree-like probabilistic information?</p>
    <p>How can we check if two prob-trees are equivalent?</p>
    <p>Can we compute efficiently restrictions of prob-trees (e.g., by a DTD)?</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Complexity Issues</p>
    <p>Prob-tree model defined in [Abiteboul &amp; Senellart 2006]. Here, we tackle complexity questions about it:</p>
    <p>What is the complexity of queries and updates?</p>
    <p>Is this complexity inherent to the problem of managing tree-like probabilistic information?</p>
    <p>How can we check if two prob-trees are equivalent?</p>
    <p>Can we compute efficiently restrictions of prob-trees (e.g., by a DTD)?</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Complexity Issues</p>
    <p>Prob-tree model defined in [Abiteboul &amp; Senellart 2006]. Here, we tackle complexity questions about it:</p>
    <p>What is the complexity of queries and updates?</p>
    <p>Is this complexity inherent to the problem of managing tree-like probabilistic information?</p>
    <p>How can we check if two prob-trees are equivalent?</p>
    <p>Can we compute efficiently restrictions of prob-trees (e.g., by a DTD)?</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Complexity Issues</p>
    <p>Prob-tree model defined in [Abiteboul &amp; Senellart 2006]. Here, we tackle complexity questions about it:</p>
    <p>What is the complexity of queries and updates?</p>
    <p>Is this complexity inherent to the problem of managing tree-like probabilistic information?</p>
    <p>How can we check if two prob-trees are equivalent?</p>
    <p>Can we compute efficiently restrictions of prob-trees (e.g., by a DTD)?</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>The Prob-Tree Model</p>
    <p>Data tree with event conditions (conjunction of probabilistic events or negations of probabilistic events) assigned to each node.</p>
    <p>Probabilistic events are boolean random variables, assumed to be independent, with their own probability distribution.</p>
    <p>Representation  la [Imieliski &amp; Lipksi 1984].</p>
    <p>A</p>
    <p>B w1; :w2</p>
    <p>C</p>
    <p>D w2</p>
    <p>Event Prob. w1 0:8</p>
    <p>w2 0:7</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Semantics of Prob-Trees</p>
    <p>Semantics of a Prob-Tree T: Set of Possible Worlds JTK (probability distribution over the set of data trees).</p>
    <p>A</p>
    <p>B w1; :w2</p>
    <p>C</p>
    <p>D w2</p>
    <p>Event Prob. w1 0:8</p>
    <p>w2 0:7</p>
    <p>JK</p>
    <p>A</p>
    <p>C</p>
    <p>D</p>
    <p>p2 = 0:70</p>
    <p>A</p>
    <p>C</p>
    <p>p1 = 0:06</p>
    <p>A</p>
    <p>B C</p>
    <p>p3 = 0:24</p>
    <p>Actually, fully expressive. Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Semantics of Prob-Trees</p>
    <p>Semantics of a Prob-Tree T: Set of Possible Worlds JTK (probability distribution over the set of data trees).</p>
    <p>A</p>
    <p>B w1; :w2</p>
    <p>C</p>
    <p>D w2</p>
    <p>Event Prob. w1 0:8</p>
    <p>w2 0:7</p>
    <p>JK</p>
    <p>A</p>
    <p>C</p>
    <p>D</p>
    <p>p2 = 0:70</p>
    <p>A</p>
    <p>C</p>
    <p>p1 = 0:06</p>
    <p>A</p>
    <p>B C</p>
    <p>p3 = 0:24</p>
    <p>Actually, fully expressive. Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Semantics of Prob-Trees</p>
    <p>Semantics of a Prob-Tree T: Set of Possible Worlds JTK (probability distribution over the set of data trees).</p>
    <p>A</p>
    <p>B w1; :w2</p>
    <p>C</p>
    <p>D w2</p>
    <p>Event Prob. w1 0:8</p>
    <p>w2 0:7</p>
    <p>JK</p>
    <p>A</p>
    <p>C</p>
    <p>D</p>
    <p>p2 = 0:70</p>
    <p>A</p>
    <p>C</p>
    <p>p1 = 0:06</p>
    <p>A</p>
    <p>B C</p>
    <p>p3 = 0:24</p>
    <p>Actually, fully expressive. Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Semantics of Prob-Trees</p>
    <p>Semantics of a Prob-Tree T: Set of Possible Worlds JTK (probability distribution over the set of data trees).</p>
    <p>A</p>
    <p>B w1; :w2</p>
    <p>C</p>
    <p>D w2</p>
    <p>Event Prob. w1 0:8</p>
    <p>w2 0:7</p>
    <p>JK</p>
    <p>A</p>
    <p>C</p>
    <p>D</p>
    <p>p2 = 0:70</p>
    <p>A</p>
    <p>C</p>
    <p>p1 = 0:06</p>
    <p>A</p>
    <p>B C</p>
    <p>p3 = 0:24</p>
    <p>Actually, fully expressive. Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Locally Monotone Queries</p>
    <p>Query: function that maps a data tree t to a set of subtrees of t containing its root.</p>
    <p>Definition A query Q is locally monotone if, for any data trees u, t0 and t such that u 6 t0 6 t, u 2 Q(t) () u 2 Q(t0).</p>
    <p>Examples Tree-pattern queries with joins are locally monotone.</p>
    <p>Return the root node if it has no A child, nothing otherwise. is not locally monotone.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Locally Monotone Queries</p>
    <p>Query: function that maps a data tree t to a set of subtrees of t containing its root.</p>
    <p>Definition A query Q is locally monotone if, for any data trees u, t0 and t such that u 6 t0 6 t, u 2 Q(t) () u 2 Q(t0).</p>
    <p>Examples Tree-pattern queries with joins are locally monotone.</p>
    <p>Return the root node if it has no A child, nothing otherwise. is not locally monotone.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Locally Monotone Queries</p>
    <p>Query: function that maps a data tree t to a set of subtrees of t containing its root.</p>
    <p>Definition A query Q is locally monotone if, for any data trees u, t0 and t such that u 6 t0 6 t, u 2 Q(t) () u 2 Q(t0).</p>
    <p>Examples Tree-pattern queries with joins are locally monotone.</p>
    <p>Return the root node if it has no A child, nothing otherwise. is not locally monotone.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Locally Monotone Queries</p>
    <p>Query: function that maps a data tree t to a set of subtrees of t containing its root.</p>
    <p>Definition A query Q is locally monotone if, for any data trees u, t0 and t such that u 6 t0 6 t, u 2 Q(t) () u 2 Q(t0).</p>
    <p>Examples Tree-pattern queries with joins are locally monotone.</p>
    <p>Return the root node if it has no A child, nothing otherwise. is not locally monotone.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Queries on Prob-Trees</p>
    <p>Illustration of how to query prob-trees on an example.</p>
    <p>Query: //C</p>
    <p>A</p>
    <p>C w1</p>
    <p>B w2</p>
    <p>C :w1</p>
    <p>Underlying data tree.</p>
    <p>A w1</p>
    <p>C</p>
    <p>A w2; :w1</p>
    <p>B</p>
    <p>C</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Queries on Prob-Trees</p>
    <p>Illustration of how to query prob-trees on an example.</p>
    <p>Query: //C</p>
    <p>A</p>
    <p>C w1</p>
    <p>B w2</p>
    <p>C :w1</p>
    <p>Underlying data tree.</p>
    <p>A w1</p>
    <p>C</p>
    <p>A w2; :w1</p>
    <p>B</p>
    <p>C</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Queries on Prob-Trees</p>
    <p>Illustration of how to query prob-trees on an example.</p>
    <p>Query: //C</p>
    <p>A</p>
    <p>C w1</p>
    <p>B w2</p>
    <p>C :w1</p>
    <p>Underlying data tree.</p>
    <p>A w1</p>
    <p>C</p>
    <p>A w2; :w1</p>
    <p>B</p>
    <p>C</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Queries on Prob-Trees</p>
    <p>Illustration of how to query prob-trees on an example.</p>
    <p>Query: //C</p>
    <p>A</p>
    <p>C w1</p>
    <p>B w2</p>
    <p>C :w1</p>
    <p>Underlying data tree.</p>
    <p>A w1</p>
    <p>C</p>
    <p>A w2; :w1</p>
    <p>B</p>
    <p>C</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Queries on Prob-Trees</p>
    <p>Illustration of how to query prob-trees on an example.</p>
    <p>Query: //C</p>
    <p>A</p>
    <p>C w1</p>
    <p>B w2</p>
    <p>C :w1</p>
    <p>Underlying data tree.</p>
    <p>A w1</p>
    <p>C</p>
    <p>A w2; :w1</p>
    <p>B</p>
    <p>C</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Queries on Prob-Trees</p>
    <p>Illustration of how to query prob-trees on an example.</p>
    <p>Query: //C</p>
    <p>A</p>
    <p>C w1</p>
    <p>B w2</p>
    <p>C :w1</p>
    <p>Underlying data tree.</p>
    <p>A w1</p>
    <p>C</p>
    <p>A w2; :w1</p>
    <p>B</p>
    <p>C</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Queries on Prob-Trees</p>
    <p>Illustration of how to query prob-trees on an example.</p>
    <p>Query: //C</p>
    <p>A</p>
    <p>C w1</p>
    <p>B w2</p>
    <p>C :w1</p>
    <p>Underlying data tree.</p>
    <p>A w1</p>
    <p>C</p>
    <p>A w2; :w1</p>
    <p>B</p>
    <p>C</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Consistence of Queries on Prob-Trees</p>
    <p>Theorem</p>
    <p>Prob-Tree Prob-Tree</p>
    <p>Possible Worlds Possible Worlds</p>
    <p>query</p>
    <p>semantics</p>
    <p>query</p>
    <p>semantics</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>What about updates?</p>
    <p>We consider sets of elementary insertions and deletions.</p>
    <p>Defined with respect to a query (mapping between nodes of the query and nodes to insert/delete).</p>
    <p>More involved definitions. . .</p>
    <p>. . . but a similar result:</p>
    <p>Theorem</p>
    <p>Prob-Tree Prob-Tree</p>
    <p>Possible Worlds Possible Worlds</p>
    <p>update</p>
    <p>semantics</p>
    <p>update</p>
    <p>semantics</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>What about updates?</p>
    <p>We consider sets of elementary insertions and deletions.</p>
    <p>Defined with respect to a query (mapping between nodes of the query and nodes to insert/delete).</p>
    <p>More involved definitions. . .</p>
    <p>. . . but a similar result:</p>
    <p>Theorem</p>
    <p>Prob-Tree Prob-Tree</p>
    <p>Possible Worlds Possible Worlds</p>
    <p>update</p>
    <p>semantics</p>
    <p>update</p>
    <p>semantics</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>What about updates?</p>
    <p>We consider sets of elementary insertions and deletions.</p>
    <p>Defined with respect to a query (mapping between nodes of the query and nodes to insert/delete).</p>
    <p>More involved definitions. . .</p>
    <p>. . . but a similar result:</p>
    <p>Theorem</p>
    <p>Prob-Tree Prob-Tree</p>
    <p>Possible Worlds Possible Worlds</p>
    <p>update</p>
    <p>semantics</p>
    <p>update</p>
    <p>semantics</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>What about updates?</p>
    <p>We consider sets of elementary insertions and deletions.</p>
    <p>Defined with respect to a query (mapping between nodes of the query and nodes to insert/delete).</p>
    <p>More involved definitions. . .</p>
    <p>. . . but a similar result:</p>
    <p>Theorem</p>
    <p>Prob-Tree Prob-Tree</p>
    <p>Possible Worlds Possible Worlds</p>
    <p>update</p>
    <p>semantics</p>
    <p>update</p>
    <p>semantics</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Complexity Results</p>
    <p>T: prob-tree with underlying data tree t. time(Q(t)): complexity of the query Q over the data tree t.</p>
    <p>Upper bounds for operations on T:</p>
    <p>Operation Complexity Query time(Q(t)) + polynomial in the size of T, Q(t) Insertion time(Q(t)) + polynomial in the size of T, Q(t) Deletion time(Q(t)) + exponential in the size of T, Q(t)</p>
    <p>Proposition</p>
    <p>If the query language is not trivial, the result of a deletion may necessarily be exponential.</p>
    <p>Go to proof</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Complexity Results</p>
    <p>T: prob-tree with underlying data tree t. time(Q(t)): complexity of the query Q over the data tree t.</p>
    <p>Upper bounds for operations on T:</p>
    <p>Operation Complexity Query time(Q(t)) + polynomial in the size of T, Q(t) Insertion time(Q(t)) + polynomial in the size of T, Q(t) Deletion time(Q(t)) + exponential in the size of T, Q(t)</p>
    <p>Proposition</p>
    <p>If the query language is not trivial, the result of a deletion may necessarily be exponential.</p>
    <p>Go to proof</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Complexity Results</p>
    <p>T: prob-tree with underlying data tree t. time(Q(t)): complexity of the query Q over the data tree t.</p>
    <p>Upper bounds for operations on T:</p>
    <p>Operation Complexity Query time(Q(t)) + polynomial in the size of T, Q(t) Insertion time(Q(t)) + polynomial in the size of T, Q(t) Deletion time(Q(t)) + exponential in the size of T, Q(t)</p>
    <p>Proposition</p>
    <p>If the query language is not trivial, the result of a deletion may necessarily be exponential.</p>
    <p>Go to proof</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Complexity Results</p>
    <p>T: prob-tree with underlying data tree t. time(Q(t)): complexity of the query Q over the data tree t.</p>
    <p>Upper bounds for operations on T:</p>
    <p>Operation Complexity Query time(Q(t)) + polynomial in the size of T, Q(t) Insertion time(Q(t)) + polynomial in the size of T, Q(t) Deletion time(Q(t)) + exponential in the size of T, Q(t)</p>
    <p>Proposition</p>
    <p>If the query language is not trivial, the result of a deletion may necessarily be exponential.</p>
    <p>Go to proof</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Complexity Results</p>
    <p>T: prob-tree with underlying data tree t. time(Q(t)): complexity of the query Q over the data tree t.</p>
    <p>Upper bounds for operations on T:</p>
    <p>Operation Complexity Query time(Q(t)) + polynomial in the size of T, Q(t) Insertion time(Q(t)) + polynomial in the size of T, Q(t) Deletion time(Q(t)) + exponential in the size of T, Q(t)</p>
    <p>Proposition</p>
    <p>If the query language is not trivial, the result of a deletion may necessarily be exponential.</p>
    <p>Go to proof</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Two Notions of Equivalence</p>
    <p>What does it mean for two prob-trees to represent the same information?</p>
    <p>Two different notions:</p>
    <p>Structural Equivalence: we keep the same event variables.</p>
    <p>Semantic Equivalence: we only consider the possible worlds semantics.</p>
    <p>Complexity results? Relation between these two notions?</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Two Notions of Equivalence</p>
    <p>What does it mean for two prob-trees to represent the same information?</p>
    <p>Two different notions:</p>
    <p>Structural Equivalence: we keep the same event variables.</p>
    <p>Semantic Equivalence: we only consider the possible worlds semantics.</p>
    <p>Complexity results? Relation between these two notions?</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Two Notions of Equivalence</p>
    <p>What does it mean for two prob-trees to represent the same information?</p>
    <p>Two different notions:</p>
    <p>Structural Equivalence: we keep the same event variables.</p>
    <p>Semantic Equivalence: we only consider the possible worlds semantics.</p>
    <p>Complexity results? Relation between these two notions?</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Two Notions of Equivalence</p>
    <p>What does it mean for two prob-trees to represent the same information?</p>
    <p>Two different notions:</p>
    <p>Structural Equivalence: we keep the same event variables.</p>
    <p>Semantic Equivalence: we only consider the possible worlds semantics.</p>
    <p>Complexity results? Relation between these two notions?</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Structural Equivalence</p>
    <p>Definition Two prob-trees T and T 0 are structurally equivalent (T struct T 0) if they have the same event variables, the same probability distribution, and if they define the same possible world for every valuation of the event variables.</p>
    <p>A</p>
    <p>B w1; :w2</p>
    <p>C</p>
    <p>D w2</p>
    <p>struct</p>
    <p>A</p>
    <p>B w1; :w2</p>
    <p>C w2</p>
    <p>D</p>
    <p>C :w2</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Structural Equivalence</p>
    <p>Definition Two prob-trees T and T 0 are structurally equivalent (T struct T 0) if they have the same event variables, the same probability distribution, and if they define the same possible world for every valuation of the event variables.</p>
    <p>A</p>
    <p>B w1; :w2</p>
    <p>C</p>
    <p>D w2</p>
    <p>struct</p>
    <p>A</p>
    <p>B w1; :w2</p>
    <p>C w2</p>
    <p>D</p>
    <p>C :w2</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Complexity of Structural Equivalence</p>
    <p>Theorem Structural Equivalence is a coRP problem: there exists a randomized polynomial-time algorithm that returns true if two prob-trees are equivalent, and false with probability &gt; 1=2 otherwise.</p>
    <p>Based on the notion of count-equivalence:</p>
    <p>Definition Two propositional formulas , 0 in DNF are count-equivalent (</p>
    <p>+  0) if, for every valuation of the variables of and 0, the</p>
    <p>same number of disjuncts of and 0 are satisfied.</p>
    <p>A  A _ (A ^ B) but A 6 +  A _ (A ^ B)</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Complexity of Structural Equivalence</p>
    <p>Theorem Structural Equivalence is a coRP problem: there exists a randomized polynomial-time algorithm that returns true if two prob-trees are equivalent, and false with probability &gt; 1=2 otherwise.</p>
    <p>Based on the notion of count-equivalence:</p>
    <p>Definition Two propositional formulas , 0 in DNF are count-equivalent (</p>
    <p>+  0) if, for every valuation of the variables of and 0, the</p>
    <p>same number of disjuncts of and 0 are satisfied.</p>
    <p>A  A _ (A ^ B) but A 6 +  A _ (A ^ B)</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Complexity of Structural Equivalence</p>
    <p>Theorem Structural Equivalence is a coRP problem: there exists a randomized polynomial-time algorithm that returns true if two prob-trees are equivalent, and false with probability &gt; 1=2 otherwise.</p>
    <p>Based on the notion of count-equivalence:</p>
    <p>Definition Two propositional formulas , 0 in DNF are count-equivalent (</p>
    <p>+  0) if, for every valuation of the variables of and 0, the</p>
    <p>same number of disjuncts of and 0 are satisfied.</p>
    <p>A  A _ (A ^ B) but A 6 +  A _ (A ^ B)</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Idea behind the Probabilistic Algorithm</p>
    <p>In a very simple case:</p>
    <p>A</p>
    <p>B</p>
    <p>w1</p>
    <p>B</p>
    <p>w2; :w3 struct</p>
    <p>A</p>
    <p>B</p>
    <p>w1; w2; :w3</p>
    <p>B w1; w2</p>
    <p>B</p>
    <p>w1; :w2</p>
    <p>B :w1; w2; :w3</p>
    <p>() w1 _ (w2 ^ :w3) +  (w1 ^ w2 ^ :w3) _ (w1 ^ w2) _</p>
    <p>(w1 ^ :w2) _ (:w1 ^ w2 ^ :w3)</p>
    <p>() X1 + X2(1  X3) = X1X2(1  X3) + X1X2 +</p>
    <p>X1(1  X2) + (1  X1)X2(1  X3)</p>
    <p>(see [Green, Karvounarakis &amp; Tannen 2007]).</p>
    <p>Polynomial-time randomized algorithm for determining if a multivariate polynomial is zero [Schwartz 1980].</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Idea behind the Probabilistic Algorithm</p>
    <p>In a very simple case:</p>
    <p>A</p>
    <p>B</p>
    <p>w1</p>
    <p>B</p>
    <p>w2; :w3 struct</p>
    <p>A</p>
    <p>B</p>
    <p>w1; w2; :w3</p>
    <p>B w1; w2</p>
    <p>B</p>
    <p>w1; :w2</p>
    <p>B :w1; w2; :w3</p>
    <p>() w1 _ (w2 ^ :w3) +  (w1 ^ w2 ^ :w3) _ (w1 ^ w2) _</p>
    <p>(w1 ^ :w2) _ (:w1 ^ w2 ^ :w3)</p>
    <p>() X1 + X2(1  X3) = X1X2(1  X3) + X1X2 +</p>
    <p>X1(1  X2) + (1  X1)X2(1  X3)</p>
    <p>(see [Green, Karvounarakis &amp; Tannen 2007]).</p>
    <p>Polynomial-time randomized algorithm for determining if a multivariate polynomial is zero [Schwartz 1980].</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Idea behind the Probabilistic Algorithm</p>
    <p>In a very simple case:</p>
    <p>A</p>
    <p>B</p>
    <p>w1</p>
    <p>B</p>
    <p>w2; :w3 struct</p>
    <p>A</p>
    <p>B</p>
    <p>w1; w2; :w3</p>
    <p>B w1; w2</p>
    <p>B</p>
    <p>w1; :w2</p>
    <p>B :w1; w2; :w3</p>
    <p>() w1 _ (w2 ^ :w3) +  (w1 ^ w2 ^ :w3) _ (w1 ^ w2) _</p>
    <p>(w1 ^ :w2) _ (:w1 ^ w2 ^ :w3)</p>
    <p>() X1 + X2(1  X3) = X1X2(1  X3) + X1X2 +</p>
    <p>X1(1  X2) + (1  X1)X2(1  X3)</p>
    <p>(see [Green, Karvounarakis &amp; Tannen 2007]).</p>
    <p>Polynomial-time randomized algorithm for determining if a multivariate polynomial is zero [Schwartz 1980].</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Idea behind the Probabilistic Algorithm</p>
    <p>In a very simple case:</p>
    <p>A</p>
    <p>B</p>
    <p>w1</p>
    <p>B</p>
    <p>w2; :w3 struct</p>
    <p>A</p>
    <p>B</p>
    <p>w1; w2; :w3</p>
    <p>B w1; w2</p>
    <p>B</p>
    <p>w1; :w2</p>
    <p>B :w1; w2; :w3</p>
    <p>() w1 _ (w2 ^ :w3) +  (w1 ^ w2 ^ :w3) _ (w1 ^ w2) _</p>
    <p>(w1 ^ :w2) _ (:w1 ^ w2 ^ :w3)</p>
    <p>() X1 + X2(1  X3) = X1X2(1  X3) + X1X2 +</p>
    <p>X1(1  X2) + (1  X1)X2(1  X3)</p>
    <p>(see [Green, Karvounarakis &amp; Tannen 2007]).</p>
    <p>Polynomial-time randomized algorithm for determining if a multivariate polynomial is zero [Schwartz 1980].</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Idea behind the Probabilistic Algorithm</p>
    <p>In a very simple case:</p>
    <p>A</p>
    <p>B</p>
    <p>w1</p>
    <p>B</p>
    <p>w2; :w3 struct</p>
    <p>A</p>
    <p>B</p>
    <p>w1; w2; :w3</p>
    <p>B w1; w2</p>
    <p>B</p>
    <p>w1; :w2</p>
    <p>B :w1; w2; :w3</p>
    <p>() w1 _ (w2 ^ :w3) +  (w1 ^ w2 ^ :w3) _ (w1 ^ w2) _</p>
    <p>(w1 ^ :w2) _ (:w1 ^ w2 ^ :w3)</p>
    <p>() X1 + X2(1  X3) = X1X2(1  X3) + X1X2 +</p>
    <p>X1(1  X2) + (1  X1)X2(1  X3)</p>
    <p>(see [Green, Karvounarakis &amp; Tannen 2007]).</p>
    <p>Polynomial-time randomized algorithm for determining if a multivariate polynomial is zero [Schwartz 1980].</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Semantic Equivalence</p>
    <p>Definition Two prob-trees T and T 0 are semantically equivalent (T sem T 0) if JTK = JT 0K.</p>
    <p>A</p>
    <p>B w1; w2</p>
    <p>sem</p>
    <p>A</p>
    <p>B w3</p>
    <p>Event Prob. w1 0:5</p>
    <p>w2 0:8</p>
    <p>w3 0:4</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Semantic Equivalence</p>
    <p>Definition Two prob-trees T and T 0 are semantically equivalent (T sem T 0) if JTK = JT 0K.</p>
    <p>A</p>
    <p>B w1; w2</p>
    <p>sem</p>
    <p>A</p>
    <p>B w3</p>
    <p>Event Prob. w1 0:5</p>
    <p>w2 0:8</p>
    <p>w3 0:4</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Semantic Equivalence</p>
    <p>Definition Two prob-trees T and T 0 are semantically equivalent (T sem T 0) if JTK = JT 0K.</p>
    <p>A</p>
    <p>B w1; w2</p>
    <p>sem</p>
    <p>A</p>
    <p>B w3</p>
    <p>Event Prob. w1 0:5</p>
    <p>w2 0:8</p>
    <p>w3 0:4</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Semantic and Structural Equivalence</p>
    <p>Facts 1 If T struct T 0, then T sem T 0</p>
    <p>Complexity of semantic equivalence: open issue. Easy EXPTIME upper bound.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Semantic and Structural Equivalence</p>
    <p>Facts 1 If T struct T 0, then T sem T 0</p>
    <p>Complexity of semantic equivalence: open issue. Easy EXPTIME upper bound.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Semantic and Structural Equivalence</p>
    <p>Facts 1 If T struct T 0, then T sem T 0</p>
    <p>Complexity of semantic equivalence: open issue. Easy EXPTIME upper bound.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Restriction to a Probability Threshold</p>
    <p>Is it possible to remove from a prob-tree least probable worlds?</p>
    <p>JTKj&gt;p : set of possible worlds in JTK whose probabilities are greater than p.</p>
    <p>Proposition The prob-tree representation of JTKj&gt;p is sometimes necessarily exponential.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Restriction to a Probability Threshold</p>
    <p>Is it possible to remove from a prob-tree least probable worlds?</p>
    <p>JTKj&gt;p : set of possible worlds in JTK whose probabilities are greater than p.</p>
    <p>Proposition The prob-tree representation of JTKj&gt;p is sometimes necessarily exponential.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Restriction to a Probability Threshold</p>
    <p>Is it possible to remove from a prob-tree least probable worlds?</p>
    <p>JTKj&gt;p : set of possible worlds in JTK whose probabilities are greater than p.</p>
    <p>Proposition The prob-tree representation of JTKj&gt;p is sometimes necessarily exponential.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>DTD Validation</p>
    <p>Is it possible to compute the restriction of a prob-tree to worlds valid against a given DTD?</p>
    <p>DTD definition adapted to the case of unordered trees, and without disjunction.</p>
    <p>Proposition Deciding if, given a prob-tree, there exists a possible world valid against a DTD is NP-complete.</p>
    <p>Deciding if, given a prob-tree, all possible worlds are valid against a DTD is coNP-complete.</p>
    <p>In some cases, the prob-tree representation of the restriction of a prob-tree to a given DTD is of exponential size.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>DTD Validation</p>
    <p>Is it possible to compute the restriction of a prob-tree to worlds valid against a given DTD?</p>
    <p>DTD definition adapted to the case of unordered trees, and without disjunction.</p>
    <p>Proposition Deciding if, given a prob-tree, there exists a possible world valid against a DTD is NP-complete.</p>
    <p>Deciding if, given a prob-tree, all possible worlds are valid against a DTD is coNP-complete.</p>
    <p>In some cases, the prob-tree representation of the restriction of a prob-tree to a given DTD is of exponential size.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>DTD Validation</p>
    <p>Is it possible to compute the restriction of a prob-tree to worlds valid against a given DTD?</p>
    <p>DTD definition adapted to the case of unordered trees, and without disjunction.</p>
    <p>Proposition Deciding if, given a prob-tree, there exists a possible world valid against a DTD is NP-complete.</p>
    <p>Deciding if, given a prob-tree, all possible worlds are valid against a DTD is coNP-complete.</p>
    <p>In some cases, the prob-tree representation of the restriction of a prob-tree to a given DTD is of exponential size.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>DTD Validation</p>
    <p>Is it possible to compute the restriction of a prob-tree to worlds valid against a given DTD?</p>
    <p>DTD definition adapted to the case of unordered trees, and without disjunction.</p>
    <p>Proposition Deciding if, given a prob-tree, there exists a possible world valid against a DTD is NP-complete.</p>
    <p>Deciding if, given a prob-tree, all possible worlds are valid against a DTD is coNP-complete.</p>
    <p>In some cases, the prob-tree representation of the restriction of a prob-tree to a given DTD is of exponential size.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>DTD Validation</p>
    <p>Is it possible to compute the restriction of a prob-tree to worlds valid against a given DTD?</p>
    <p>DTD definition adapted to the case of unordered trees, and without disjunction.</p>
    <p>Proposition Deciding if, given a prob-tree, there exists a possible world valid against a DTD is NP-complete.</p>
    <p>Deciding if, given a prob-tree, all possible worlds are valid against a DTD is coNP-complete.</p>
    <p>In some cases, the prob-tree representation of the restriction of a prob-tree to a given DTD is of exponential size.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>DTD Validation</p>
    <p>Is it possible to compute the restriction of a prob-tree to worlds valid against a given DTD?</p>
    <p>DTD definition adapted to the case of unordered trees, and without disjunction.</p>
    <p>Proposition Deciding if, given a prob-tree, there exists a possible world valid against a DTD is NP-complete.</p>
    <p>Deciding if, given a prob-tree, all possible worlds are valid against a DTD is coNP-complete.</p>
    <p>In some cases, the prob-tree representation of the restriction of a prob-tree to a given DTD is of exponential size.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>A model for representing probabilistic information in semi-structured databases.</p>
    <p>Polynomial complexity for queries and insertions.</p>
    <p>Unavoidable exponential complexity for deletions.</p>
    <p>Characterization of the complexity of key problems.</p>
    <p>Structural equivalence: randomized polynomial algorithm.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>A model for representing probabilistic information in semi-structured databases.</p>
    <p>Polynomial complexity for queries and insertions.</p>
    <p>Unavoidable exponential complexity for deletions.</p>
    <p>Characterization of the complexity of key problems.</p>
    <p>Structural equivalence: randomized polynomial algorithm.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>A model for representing probabilistic information in semi-structured databases.</p>
    <p>Polynomial complexity for queries and insertions.</p>
    <p>Unavoidable exponential complexity for deletions.</p>
    <p>Characterization of the complexity of key problems.</p>
    <p>Structural equivalence: randomized polynomial algorithm.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>A model for representing probabilistic information in semi-structured databases.</p>
    <p>Polynomial complexity for queries and insertions.</p>
    <p>Unavoidable exponential complexity for deletions.</p>
    <p>Characterization of the complexity of key problems.</p>
    <p>Structural equivalence: randomized polynomial algorithm.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>A model for representing probabilistic information in semi-structured databases.</p>
    <p>Polynomial complexity for queries and insertions.</p>
    <p>Unavoidable exponential complexity for deletions.</p>
    <p>Characterization of the complexity of key problems.</p>
    <p>Structural equivalence: randomized polynomial algorithm.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Perspectives</p>
    <p>Complexity of semantic equivalence.</p>
    <p>Prob-tree simplification.</p>
    <p>Top-k possible worlds from a prob-tree.</p>
    <p>Aggregate functions in queries.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Perspectives</p>
    <p>Complexity of semantic equivalence.</p>
    <p>Prob-tree simplification.</p>
    <p>Top-k possible worlds from a prob-tree.</p>
    <p>Aggregate functions in queries.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Perspectives</p>
    <p>Complexity of semantic equivalence.</p>
    <p>Prob-tree simplification.</p>
    <p>Top-k possible worlds from a prob-tree.</p>
    <p>Aggregate functions in queries.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Perspectives</p>
    <p>Complexity of semantic equivalence.</p>
    <p>Prob-tree simplification.</p>
    <p>Top-k possible worlds from a prob-tree.</p>
    <p>Aggregate functions in queries.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Merci.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>Proof of the Exponential Complexity of Deletion</p>
    <p>Proof. Deletion d: If the root has a C-child, then delete all B-children of the root.</p>
    <p>T = A</p>
    <p>B C</p>
    <p>w (0) 1 ; w</p>
    <p>(1) 1</p>
    <p>. . . C</p>
    <p>w (0) n</p>
    <p>; w (1) n</p>
    <p>Then, it can be shown that if T 0 struct d(T), at least 2n literals appear in T 0.</p>
    <p>Return to theorem</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>References I</p>
    <p>Tomasz Imieliski and Witold Lipski. Incomplete information in relational databases. Journal of the ACM, 31(4):761791, 1984.</p>
    <p>J. T. Schwartz. Fast probabilistic algorithms for verification of polynomial identities. Journal of the ACM, 27(4):701717, 1980.</p>
    <p>Serge Abiteboul and Pierre Senellart. Querying and updating probabilistic information in XML. In Extending DataBase Technology, Munich, Germany, March 2006.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
  <div class="page">
    <p>References II</p>
    <p>Todd J. Green, Grigoris Karvounarakis and Val Tannen. Provenance semirings. In Principles of DataBase Systems, Beijing, China, June 2007.</p>
    <p>Pierre Senellart, Serge Abiteboul On the Complexity of Probabilistic XML</p>
  </div>
</Presentation>
