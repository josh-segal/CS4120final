<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>sRDMA  Efficient NICbased Authentication and Encryption for Remote Direct Memory Access</p>
    <p>Konstantin Taranov, Benjamin Rothenberger, Adrian Perrig, Torsten Hoefler</p>
  </div>
  <div class="page">
    <p>RDMA networking is a new trend in cloud computing</p>
  </div>
  <div class="page">
    <p>RDMA security considerations</p>
    <p>The RDMA protocols must permit integration with Internet security standards, such as IPsec and TLS.</p>
    <p>RFC4297  Remote Direct Memory Access (RDMA) over IP Problem Statement:</p>
    <p>December 2005</p>
    <p>March 2017</p>
    <p>IPSec does not support RDMA July 2020</p>
  </div>
  <div class="page">
    <p>Onesided RDMA requests are completely performed by the NIC  No CPU involvement on the destination machine</p>
    <p>Twosided communication is also offloaded to the NIC  Packets cannot be discarded by the NIC  Received data consumes resources of the connection  CPU is responsible for verifying the received data negating RDMA advantages</p>
    <p>Can applicationlevel security be used?</p>
  </div>
  <div class="page">
    <p>sRDMA is lightweight security extension to RDMA which uses symmetric key cryptography to provide  Header Authentication  Packet Authentication  Payload encryption  Memory protection</p>
    <p>sRDMA effectively prevents:  Eavesdropping  Spoofing attacks  Replay attacks  Man in the middle attacks</p>
    <p>sRDMA is back compatible with classical RDMA and can be easily adapted by  native InfiniBand  RoCEv1  RoCEv2</p>
    <p>sRDMA  secure RDMA communication</p>
  </div>
  <div class="page">
    <p>sRDMA introduces a new Secure Reliably Connected Queue Pair  The application installs symmetric keys to a QP connection and required level of protection</p>
    <p>Supported security codes:</p>
    <p>sRDMA  secure QP connection</p>
  </div>
  <div class="page">
    <p>sRDMA Packet format</p>
    <p>Routing Header (RH)</p>
    <p>Base Transport Header (BTH)</p>
    <p>Payload Checksums</p>
    <p>Base Transport Header (BTH)</p>
    <p>Payload ChecksumsIPSec</p>
    <p>Base Transport Header (BTH)</p>
    <p>Payload Checksums sRDMA header</p>
    <p>IPSec*</p>
    <p>RDMA</p>
    <p>sRDMA</p>
    <p>sRDMA packet format advantages:  Routing and checksums not affected  Secure header is processed after processing of BTH</p>
    <p>Routing Header (RH)</p>
    <p>Routing Header (RH)</p>
    <p>* It does not exist yet, but it is discussed</p>
  </div>
  <div class="page">
    <p>Base Transport Header (BTH)</p>
    <p>Base Transport Header (BTH)</p>
    <p>Payload Checksums sRDMA header</p>
    <p>sRDMA</p>
    <p>Changes to BTH  We use 3 out of 7 reserved bits from BTH to indicate the presence of the secure header</p>
    <p>Routing Header (RH)</p>
    <p>Secure header size  sRDMA supports 7 different MAC sizes  Value 0 is for backcompatibility</p>
  </div>
  <div class="page">
    <p>IPSec uses nonce against replay attacks  Nonce must never be reused  Nonce can be predictable and be transmitted in clear</p>
    <p>PSN is a part of BTH  PSN is only 24 bit which get reused after 80 ms on modern network devices  Mellanox ConnectX5 can send up to 200 million messages per second!</p>
    <p>sRDMA extends InfiniBand PSN counters to 64 bits  Both sender and receiver maintain 64bit counters,  But they transmit 24 least significant bits (LSB).  As PSNs are ordered, the endpoints can recover 64 bit sequence number from 24 LSB using sliding window. 9</p>
    <p>Nonce and Packet Sequence Number (PSN)</p>
  </div>
  <div class="page">
    <p>Header Authentication</p>
    <p>Packet Authentication</p>
    <p>Payload authenticated encryption  Nonce, RH, and BTH are passed as Additional Authenticated Data  Payload is encrypted and sent instead of plaintext</p>
    <p>Overheads of AES128 for N secure QP connections</p>
    <p>sRDMA  Authentication and Secrecy</p>
    <p>Key overhead Nonce counter Header</p>
    <p>IPSec 16B * N 16B * N 32B</p>
    <p>sRDMA 16B * N 10B * N 16B</p>
  </div>
  <div class="page">
    <p>In RDMA, QP connections are created inside PDs  PD groups IB resources such as QP connections and memory regions that can work together.</p>
    <p>sRDMA proposes to install a key (KPD) to PD, and use this key to derive QP level keys  We propose to install a single key per PD, and derive QPlevel keys from the PD key.  The key is derived using pseudorandom function (PRF) based on adapter port addresses (APA) and</p>
    <p>QPN identifiers of the endpoints.</p>
    <p>Two endpoints derive the same symmetric key.</p>
    <p>Overheads of AES128 for N secure QP connections</p>
    <p>Improving memory overhead  Protection Domain (PD) level keys</p>
    <p>Key overhead Nonce counter Header</p>
    <p>IPSec 16B * N 16B * N 32B</p>
    <p>sRDMA 16B * N 10B * N 16B</p>
    <p>sRDMA + PD keys 16B 10B* N 16B</p>
  </div>
  <div class="page">
    <p>Memory protection in IBA is based on rkey tags (32 bits)  Each onesided RDMA request must include rkey in its request.  Any endpoint with the rkey can access the memory</p>
    <p>Extended memory protection</p>
    <p>sRDMA proposes scalable cryptobased memory protection  Access to subregion (SR) with addresses [START, END )</p>
    <p>sRDMA does not introduce extra header and reuses the STH</p>
    <p>Endpoint B Endpoint C</p>
    <p>Endpoint A</p>
  </div>
  <div class="page">
    <p>sRDMA is implemented on Broadcom Stingray PS225  Eightcore ARM A72  DDR4 8 GB DRAM  Supports cryptoacceleration</p>
    <p>Implementation of sRDMA</p>
  </div>
  <div class="page">
    <p>Implementation of sRDMA</p>
    <p>Endpoint A Endpoint B</p>
    <p>Host A</p>
    <p>SmartNIC A SmartNIC B</p>
    <p>Host B</p>
    <p>QP connection</p>
    <p>QP connection QP connection</p>
  </div>
  <div class="page">
    <p>Implementation of sRDMA  RDMA Write</p>
    <p>Endpoint A Endpoint B</p>
    <p>Host A</p>
    <p>SmartNIC B</p>
    <p>Host B</p>
    <p>SmartNIC A</p>
    <p>to SmartNIC B. 4. SmartNIC B validates the packet. 5. SmartNIC B performs RDMA Write to the</p>
    <p>requested memory.</p>
  </div>
  <div class="page">
    <p>Evaluation  Source authentication latency</p>
    <p>NO security baseline</p>
  </div>
  <div class="page">
    <p>NO security baseline</p>
    <p>Evaluation  Source authentication latency</p>
  </div>
  <div class="page">
    <p>NO security baseline</p>
    <p>Evaluation  Source authentication latency</p>
  </div>
  <div class="page">
    <p>Evaluation  Packet authentication latency</p>
    <p>Read latency (RTT)</p>
    <p>Write latency (RTT/2)</p>
    <p>Payload size</p>
  </div>
  <div class="page">
    <p>Evaluation  AEAD latency</p>
    <p>Payload size</p>
  </div>
  <div class="page">
    <p>Evaluation  Write Bandwidth</p>
  </div>
  <div class="page">
    <p>Evaluation  Write Bandwidth</p>
  </div>
  <div class="page">
    <p>Evaluation  Write Bandwidth</p>
  </div>
  <div class="page">
    <p>Evaluation  Write Bandwidth</p>
  </div>
  <div class="page">
    <p>Evaluation  Read Bandwidth Read Bandwidth Write Bandwidth</p>
  </div>
  <div class="page">
    <p>Evaluation  Read Bandwidth Read Bandwidth Write Bandwidth</p>
  </div>
  <div class="page">
    <p>Evaluation  Read Bandwidth Read Bandwidth Write Bandwidth</p>
  </div>
  <div class="page">
    <p>Evaluation  Read Bandwidth Read Bandwidth Write Bandwidth</p>
  </div>
  <div class="page">
    <p>Memory Subdelegation  Details on the implementation  Extra Experiments</p>
    <p>sRDMA paper also includes</p>
  </div>
  <div class="page">
    <p>sRDMA is lightweight security extension to RDMA protocols</p>
    <p>sRDMA is flexible and supports various protection modes</p>
    <p>PDlevel protection minimizes memory consumption on the NIC</p>
    <p>sRDMA extends memory protection of InfiniBand architecture</p>
    <p>sRDMA can be easily adapted to hardware</p>
    <p>Thank you for your attention!</p>
    <p>sRDMA implementation:</p>
    <p>Contact information: Konstantin Taranov konstantin.taranov@inf.ethz.ch</p>
  </div>
</Presentation>
