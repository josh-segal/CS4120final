<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary</p>
    <p>SLEUTH: Real-time Aack Scenario Reconstruction from</p>
    <p>COTS Audit Data 1</p>
    <p>Md Nahid Hossain, Sadegh M. Milajerdi, Junao Wang, Birhanu Eshete,</p>
    <p>Rigel Gjomemo, R. Sekar, Sco D. Stoller, and V.N. Venkatakrishnan</p>
    <p>Stony Brook University and University of Illinois at Chicago</p>
    <p>(CNS-1319137, CNS-1421893, CNS-1514472 and DGE-1069311) and ONR (N00014-15-1-2208 and</p>
    <p>N00014-15-1-2378).</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Context Prior Research Goals</p>
    <p>Challenges of Advanced Persistent Threat (APT) Campaigns</p>
    <p>APTs combine social engineering (e.g., spearphishing) with advanced exploits</p>
    <p>Get past first-line defenses, e.g., ASLR, DEP, and sandboxes</p>
    <p>Enterprises forced to rely on second-line defenses</p>
    <p>Intrusion detection systems (IDS), Security incident and event management (SIEM), ...</p>
    <p>Key challenges</p>
    <p>Needle in a haystack  spot the minuscule fraction of real aacks within vast quantities</p>
    <p>of data emied by these systems.</p>
    <p>Connecting the dots  stitch isolated steps together into a larger campaign.</p>
    <p>Result: Many APT campaigns remain undetected for months.</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Context Prior Research Goals</p>
    <p>Previous Research</p>
    <p>Aack detection: Numerous intrusion detection techniques have been developed.</p>
    <p>Real-world use hampered by high false positive rates</p>
    <p>Linking aack campaign steps: Backtracker [King and Chen] and subsequent works</p>
    <p>use dependencies recorded in system logs to stitch together aacker activities</p>
    <p>Forensic tool  does not help analyst to understand ongoing aacks in real-time.</p>
    <p>Result can include many irrelevant events due to explosion of (false)</p>
    <p>dependencies.</p>
    <p>Fine-grained dependency tracking techniques developed to address this problem, but</p>
    <p>have performance and compatibility costs.</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Context Prior Research Goals</p>
    <p>Goals and Challenges</p>
    <p>Real-time reconstruction of APT campaign from audit logs</p>
    <p>Provide compact visual summary of the campaign</p>
    <p>Key challenges</p>
    <p>Data volume: hundreds of millions to billions per day Needle in a haystack  only a small fraction of these are aacks, perhaps one in a million</p>
    <p>Avoid being swamped in false positives</p>
    <p>Connecting the dots  link successive steps of an APT campaign</p>
    <p>Part of the DARPA Transparent Computing program</p>
    <p>Our adversarial evaluation relies on Red Team engagements organized by DARPA.</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary System Architecture Motivating Example Adversarial Engagement</p>
    <p>Sleuth Architecture and Contributions</p>
    <p>Tagged Dependence Graph</p>
    <p>Dependence Graph Construction</p>
    <p>Tag and Policy-Based Attack Detection</p>
    <p>Tag-Based Root-Cause and Impact Analysis</p>
    <p>Scenario Graph Alarms</p>
    <p>Audit Stream</p>
    <p>Audit Stream FreeBSD</p>
    <p>Windows</p>
    <p>Linux</p>
    <p>Audit Stream</p>
    <p>Customizable Policies</p>
    <p>Space-eicient in-memory dependence graph representation</p>
    <p>Eective aack detection based on trustworthiness and confidentiality tags</p>
    <p>Customizable policy framework for tag assignment and propagation</p>
    <p>Highly eective and eicient tag-based backward and impact analysis</p>
    <p>Experimental evaluation: fast, accurate and compact visual representation of APT campaigns</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary System Architecture Motivating Example Adversarial Engagement</p>
    <p>Illustrative Example</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>Aacker goal: Insert backdoor into a vendors soware</p>
    <p>Steps: 1. Use a browser vulnerability to drop a</p>
    <p>malicious version of crt1.o in /home/bob</p>
    <p>/home/bob/crt1.o to /lib/crt1.o</p>
    <p>crt1.o code is included in her executable.</p>
    <p>sensitive data (password file)</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary System Architecture Motivating Example Adversarial Engagement</p>
    <p>Illustrative Example</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>/home/bob/.bashrc</p>
    <p>Aacker goal: Insert backdoor into a vendors soware</p>
    <p>Steps: 1. Use a browser vulnerability to drop a</p>
    <p>malicious version of crt1.o in /home/bob</p>
    <p>/home/bob/crt1.o to /lib/crt1.o</p>
    <p>crt1.o code is included in her executable.</p>
    <p>sensitive data (password file)</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary System Architecture Motivating Example Adversarial Engagement</p>
    <p>Illustrative Example</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>/home/bob/.bashrc</p>
    <p>cp</p>
    <p>bash</p>
    <p>sudo sudo</p>
    <p>/lib/crt1.o</p>
    <p>apt-get</p>
    <p>Aacker goal: Insert backdoor into a vendors soware</p>
    <p>Steps: 1. Use a browser vulnerability to drop a</p>
    <p>malicious version of crt1.o in /home/bob</p>
    <p>/home/bob/crt1.o to /lib/crt1.o</p>
    <p>crt1.o code is included in her executable.</p>
    <p>sensitive data (password file)</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary System Architecture Motivating Example Adversarial Engagement</p>
    <p>Illustrative Example</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>/home/bob/.bashrc</p>
    <p>cp</p>
    <p>bash</p>
    <p>sudo sudo</p>
    <p>/lib/crt1.o</p>
    <p>ld</p>
    <p>apt-get</p>
    <p>bash</p>
    <p>cc</p>
    <p>/home/alice/test.o</p>
    <p>/home/alice/test.c</p>
    <p>/home/alice/test</p>
    <p>Aacker goal: Insert backdoor into a vendors soware</p>
    <p>Steps: 1. Use a browser vulnerability to drop a</p>
    <p>malicious version of crt1.o in /home/bob</p>
    <p>/home/bob/crt1.o to /lib/crt1.o</p>
    <p>crt1.o code is included in her executable.</p>
    <p>sensitive data (password file)</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary System Architecture Motivating Example Adversarial Engagement</p>
    <p>Illustrative Example</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>/home/bob/.bashrc</p>
    <p>cp</p>
    <p>bash</p>
    <p>sudo sudo</p>
    <p>/lib/crt1.o</p>
    <p>ld</p>
    <p>apt-get</p>
    <p>bash</p>
    <p>cc</p>
    <p>/home/alice/test</p>
    <p>/home/alice/test.o</p>
    <p>/home/alice/test.c</p>
    <p>/home/alice/test</p>
    <p>EXEC</p>
    <p>/etc/passwd</p>
    <p>Aacker goal: Insert backdoor into a vendors soware</p>
    <p>Steps: 1. Use a browser vulnerability to drop a</p>
    <p>malicious version of crt1.o in /home/bob</p>
    <p>/home/bob/crt1.o to /lib/crt1.o</p>
    <p>crt1.o code is included in her executable.</p>
    <p>sensitive data (password file) 10 / 50</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary System Architecture Motivating Example Adversarial Engagement</p>
    <p>Adversarial Engagement Overview</p>
    <p>Campaign</p>
    <p>Length</p>
    <p>(hours)</p>
    <p># of</p>
    <p>events</p>
    <p>Drop</p>
    <p>&amp;</p>
    <p>load</p>
    <p>Gather</p>
    <p>intel.</p>
    <p>Insert</p>
    <p>backdoor</p>
    <p>Escalate</p>
    <p>privilege</p>
    <p>Data</p>
    <p>exfil.</p>
    <p>Clean</p>
    <p>up</p>
    <p>Win-1 06:22 100K X X X X</p>
    <p>Win-2 19:43 401K X X X X X</p>
    <p>Lin-1 07:59 2.68M X X X X X</p>
    <p>Lin-2 79:06 38.5M X X X X X X</p>
    <p>Lin-3 79:05 19.3M X X X X X X</p>
    <p>Bsd-1 08:17 701K X X</p>
    <p>Bsd-2 78:56 5.86M X X X X</p>
    <p>Bsd-3 79:04 5.68M X X X</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Tags Rationale Policies Policy Framework Detection Performance False Positives</p>
    <p>Aack Detection Using Provenance Tags</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Tags Rationale Policies Policy Framework Detection Performance False Positives</p>
    <p>Provenance Tags</p>
    <p>Trustworthiness (t-tag)</p>
    <p>Benign authentic: Data from strongly authenticated</p>
    <p>sources believed to be benign.</p>
    <p>Benign: Believed to be benign, but sources not</p>
    <p>well-authenticated.</p>
    <p>Unknown: No good basis to trust this source.</p>
    <p>Code Vs Data Trustworthiness</p>
    <p>Processes have two t-tags: code t-tag and data t-tag</p>
    <p>Separation (a) aids detection and (b) speeds analysis</p>
    <p>by focusing on fewer root causes</p>
    <p>Confidentiality (c-tag)</p>
    <p>Secret: Highly sensitive, e.g.,</p>
    <p>/etc/shadow</p>
    <p>Sensitive: Disclosure has</p>
    <p>security impact, but less than</p>
    <p>disclosed secrets.</p>
    <p>Private: Loss may not pose a</p>
    <p>direct security threat.</p>
    <p>Public: Widely available, e.g., on</p>
    <p>public web sites</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Tags Rationale Policies Policy Framework Detection Performance False Positives</p>
    <p>Provenance Tags</p>
    <p>Trustworthiness (t-tag)</p>
    <p>Benign authentic: Data from strongly authenticated</p>
    <p>sources believed to be benign.</p>
    <p>Benign: Believed to be benign, but sources not</p>
    <p>well-authenticated.</p>
    <p>Unknown: No good basis to trust this source.</p>
    <p>Code Vs Data Trustworthiness</p>
    <p>Processes have two t-tags: code t-tag and data t-tag</p>
    <p>Separation (a) aids detection and (b) speeds analysis</p>
    <p>by focusing on fewer root causes</p>
    <p>Confidentiality (c-tag)</p>
    <p>Secret: Highly sensitive, e.g.,</p>
    <p>/etc/shadow</p>
    <p>Sensitive: Disclosure has</p>
    <p>security impact, but less than</p>
    <p>disclosed secrets.</p>
    <p>Private: Loss may not pose a</p>
    <p>direct security threat.</p>
    <p>Public: Widely available, e.g., on</p>
    <p>public web sites</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Tags Rationale Policies Policy Framework Detection Performance False Positives</p>
    <p>Provenance Tags</p>
    <p>Trustworthiness (t-tag)</p>
    <p>Benign authentic: Data from strongly authenticated</p>
    <p>sources believed to be benign.</p>
    <p>Benign: Believed to be benign, but sources not</p>
    <p>well-authenticated.</p>
    <p>Unknown: No good basis to trust this source.</p>
    <p>Code Vs Data Trustworthiness</p>
    <p>Processes have two t-tags: code t-tag and data t-tag</p>
    <p>Separation (a) aids detection and (b) speeds analysis</p>
    <p>by focusing on fewer root causes</p>
    <p>Confidentiality (c-tag)</p>
    <p>Secret: Highly sensitive, e.g.,</p>
    <p>/etc/shadow</p>
    <p>Sensitive: Disclosure has</p>
    <p>security impact, but less than</p>
    <p>disclosed secrets.</p>
    <p>Private: Loss may not pose a</p>
    <p>direct security threat.</p>
    <p>Public: Widely available, e.g., on</p>
    <p>public web sites</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Tags Rationale Policies Policy Framework Detection Performance False Positives</p>
    <p>Aack Detection Using Provenance Tags</p>
    <p>Approach: Focus on motive and means</p>
    <p>Motive: Does an act advance aackers high-level objectives?</p>
    <p>Deploy and run aacker code</p>
    <p>Replace/modify important files, e.g., /etc/passwd, ssh keys, ... Steal and exfiltrate sensitive data</p>
    <p>Means: Can the aacker control the action?</p>
    <p>Is the process performing the action trustworthy?</p>
    <p>Benefits</p>
    <p>Application-independent</p>
    <p>No need for training</p>
    <p>Resists aacker manipulation (assuming provenance isnt compromised)</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Tags Rationale Policies Policy Framework Detection Performance False Positives</p>
    <p>Aack Detection Using Provenance Tags</p>
    <p>Approach: Focus on motive and means</p>
    <p>Motive: Does an act advance aackers high-level objectives?</p>
    <p>Deploy and run aacker code</p>
    <p>Replace/modify important files, e.g., /etc/passwd, ssh keys, ... Steal and exfiltrate sensitive data</p>
    <p>Means: Can the aacker control the action?</p>
    <p>Is the process performing the action trustworthy?</p>
    <p>Benefits</p>
    <p>Application-independent</p>
    <p>No need for training</p>
    <p>Resists aacker manipulation (assuming provenance isnt compromised)</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Tags Rationale Policies Policy Framework Detection Performance False Positives</p>
    <p>Aack Detection Policies</p>
    <p>Untrusted exec (UE): Subject w/ high code</p>
    <p>trustworthiness execs lower t-tag object.</p>
    <p>Suspicious modification (SM): Subject with</p>
    <p>lower code tag modifies higher t-tag file.</p>
    <p>Data leak (DL): Untrusted subject writes</p>
    <p>confidential data to network.</p>
    <p>Untrusted execution preparation (UP):</p>
    <p>Memory/file objects with low data</p>
    <p>trustworthiness made executable.</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Tags Rationale Policies Policy Framework Detection Performance False Positives</p>
    <p>Aack Detection Policies</p>
    <p>Untrusted exec (UE): Subject w/ high code</p>
    <p>trustworthiness execs lower t-tag object.</p>
    <p>Suspicious modification (SM): Subject with</p>
    <p>lower code tag modifies higher t-tag file.</p>
    <p>Data leak (DL): Untrusted subject writes</p>
    <p>confidential data to network.</p>
    <p>Untrusted execution preparation (UP):</p>
    <p>Memory/file objects with low data</p>
    <p>trustworthiness made executable.</p>
    <p>firefox</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Tags Rationale Policies Policy Framework Detection Performance False Positives</p>
    <p>Aack Detection Policies</p>
    <p>Untrusted exec (UE): Subject w/ high code</p>
    <p>trustworthiness execs lower t-tag object.</p>
    <p>Suspicious modification (SM): Subject with</p>
    <p>lower code tag modifies higher t-tag file.</p>
    <p>Data leak (DL): Untrusted subject writes</p>
    <p>confidential data to network.</p>
    <p>Untrusted execution preparation (UP):</p>
    <p>Memory/file objects with low data</p>
    <p>trustworthiness made executable.</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>SM: /home/bob/.bashrc</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Tags Rationale Policies Policy Framework Detection Performance False Positives</p>
    <p>Aack Detection Policies</p>
    <p>Untrusted exec (UE): Subject w/ high code</p>
    <p>trustworthiness execs lower t-tag object.</p>
    <p>Suspicious modification (SM): Subject with</p>
    <p>lower code tag modifies higher t-tag file.</p>
    <p>Data leak (DL): Untrusted subject writes</p>
    <p>confidential data to network.</p>
    <p>Untrusted execution preparation (UP):</p>
    <p>Memory/file objects with low data</p>
    <p>trustworthiness made executable.</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>SM: /home/bob/.bashrc</p>
    <p>cp</p>
    <p>bash</p>
    <p>sudo sudo</p>
    <p>SM: /lib/crt1.o</p>
    <p>apt-get</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Tags Rationale Policies Policy Framework Detection Performance False Positives</p>
    <p>Aack Detection Policies</p>
    <p>Untrusted exec (UE): Subject w/ high code</p>
    <p>trustworthiness execs lower t-tag object.</p>
    <p>Suspicious modification (SM): Subject with</p>
    <p>lower code tag modifies higher t-tag file.</p>
    <p>Data leak (DL): Untrusted subject writes</p>
    <p>confidential data to network.</p>
    <p>Untrusted execution preparation (UP):</p>
    <p>Memory/file objects with low data</p>
    <p>trustworthiness made executable.</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>SM: /home/bob/.bashrc</p>
    <p>cp</p>
    <p>bash</p>
    <p>sudo sudo</p>
    <p>SM: /lib/crt1.o</p>
    <p>ld</p>
    <p>apt-get</p>
    <p>bash</p>
    <p>cc</p>
    <p>/home/alice/test.o</p>
    <p>/home/alice/test.c</p>
    <p>UP: /home/alice/test</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Tags Rationale Policies Policy Framework Detection Performance False Positives</p>
    <p>Aack Detection Policies</p>
    <p>Untrusted exec (UE): Subject w/ high code</p>
    <p>trustworthiness execs lower t-tag object.</p>
    <p>Suspicious modification (SM): Subject with</p>
    <p>lower code tag modifies higher t-tag file.</p>
    <p>Data leak (DL): Untrusted subject writes</p>
    <p>confidential data to network.</p>
    <p>Untrusted execution preparation (UP):</p>
    <p>Memory/file objects with low data</p>
    <p>trustworthiness made executable.</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>SM: /home/bob/.bashrc</p>
    <p>cp</p>
    <p>bash</p>
    <p>sudo sudo</p>
    <p>SM: /lib/crt1.o</p>
    <p>ld</p>
    <p>apt-get</p>
    <p>bash</p>
    <p>cc</p>
    <p>UE: /home/alice/test</p>
    <p>/home/alice/test.o</p>
    <p>/home/alice/test.c</p>
    <p>UP: /home/alice/test</p>
    <p>EXEC</p>
    <p>DL: 129.55.33.70:80</p>
    <p>/etc/passwd</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Tags Rationale Policies Policy Framework Detection Performance False Positives</p>
    <p>Flexible Policy Framework</p>
    <p>Tag assignment and propagation can be customized using policies. Policies invoked at trigger points:</p>
    <p>object creation, removal, read, write, load, execute, chmod, and chown</p>
    <p>Can refer to subject, object and event aributes</p>
    <p>Tag initialization example:</p>
    <p>init(o): match(o.name, &quot;^(file|IP:(10\.0|127))&quot;)  o.ag = BENIGN_AUTH</p>
    <p>init(o) : match(o.name, &quot;^IP:&quot;)  o.ag = UNKNOWN Tag propagation:</p>
    <p>Default is to propagate tags from input to output</p>
    <p>Custom policies created to capture exceptions, e.g., upgrade tag aer a hash/signature</p>
    <p>verification.</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Tags Rationale Policies Policy Framework Detection Performance False Positives</p>
    <p>Aack Detection Summary</p>
    <p>Data # of Untrusted Suspicious Execution Data</p>
    <p>Set Events Execution Modification Preparation Leak</p>
    <p>Win-1 0.1M 3 3 0 11</p>
    <p>Win-2 0.4M 2 108 0 18</p>
    <p>Lin-2 39M 5 1 8 159</p>
    <p>Lin-3 19M 5 2 0 5300</p>
    <p>Key Point</p>
    <p>Almost zero false positives and negatives (except for data leak)</p>
    <p>Typically filters out 99.99% to 99.9999% of events</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Tags Rationale Policies Policy Framework Detection Performance False Positives</p>
    <p>Eectiveness of Split Trustworthiness Tags</p>
    <p>Dataset</p>
    <p>Untrusted</p>
    <p>Exec</p>
    <p>Suspicious</p>
    <p>Modification</p>
    <p>Untrusted</p>
    <p>Exec Prep</p>
    <p>Data</p>
    <p>Leak</p>
    <p>Single Split Single Split Single Split s Single Split</p>
    <p>Win-1 21 3 1.2 K 3 0 0 6.1 K 11</p>
    <p>Win-2 44 2 3.7 K 108 0 0 20.2 K 18</p>
    <p>Lin-1 60 2 53 5 1 1 19 6</p>
    <p>Lin-2 1.5 K 5 19.5 K 1 280 8 122 K 159</p>
    <p>Lin-3 695 5 26.1 K 2 270 0 62.1 K 5.3 K</p>
    <p>Average Reduction 45.39x 517x 6.24x 112x</p>
    <p>Key Point</p>
    <p>Without separating code and data tags, we will have 5x to 500x more alarms</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Tags Rationale Policies Policy Framework Detection Performance False Positives</p>
    <p>False Positives in Benign Environment</p>
    <p>Untrusted execution (download+execute) plays a critical role in detection</p>
    <p>What happens in an environment with legitimate soware downloads?</p>
    <p>Experiment: Linux servers with automated security updates and manual upgrades</p>
    <p>Approach: Use custom policy to upgrade downloaded files before apt-get invokes dpkg</p>
    <p>Note: apt-get verifies signatures, so this is safe.</p>
    <p>Dataset</p>
    <p># of</p>
    <p>Events</p>
    <p>Duration</p>
    <p>hh:mm:ss</p>
    <p>Packages</p>
    <p>Updated</p>
    <p>Binary</p>
    <p>Files</p>
    <p>Wrien</p>
    <p>Server 1 2.17M 00:13:06 110 1.8K</p>
    <p>Server 2 4.67M 105:08:22 4 4.2K</p>
    <p>Server 3 20.9M 104:36:43 4 4.3K</p>
    <p>Server 4 5.09M 119:13:29 4 4.3K</p>
    <p>No (false) alarms reported. 27 / 50</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Tag-Based Backward and Forward Analysis</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Backward Analysis</p>
    <p>Goal: Identify entry point of an aack.</p>
    <p>Entry point is a source, i.e., vertex with in-degree zero.</p>
    <p>Starting points: Suspect vertices marked by aack detectors.</p>
    <p>Problem: Find source vertices from which a suspect vertex is reachable.</p>
    <p>Complications:</p>
    <p>Multiple sources: Suspect vertex is reachable from multiple sources.</p>
    <p>Multiple suspect nodes: Typically, many detectors go o during aacks, and</p>
    <p>numerous vertices end up looking suspicious.</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Backward Analysis</p>
    <p>Goal: Identify entry point of an aack.</p>
    <p>Entry point is a source, i.e., vertex with in-degree zero.</p>
    <p>Starting points: Suspect vertices marked by aack detectors.</p>
    <p>Problem: Find source vertices from which a suspect vertex is reachable.</p>
    <p>Complications:</p>
    <p>Multiple sources: Suspect vertex is reachable from multiple sources.</p>
    <p>Multiple suspect nodes: Typically, many detectors go o during aacks, and</p>
    <p>numerous vertices end up looking suspicious.</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Backward Analysis: Key Ideas</p>
    <p>Prefer shorter paths over longer ones</p>
    <p>Favor paths that avoid redundant edges</p>
    <p>Prefer edges corresponding to flow of</p>
    <p>untrusted code</p>
    <p>and, to a lesser extent, untrusted data</p>
    <p>Preference encoded using a custom</p>
    <p>edge-weight function to Dijkstras</p>
    <p>shortest path algorithm</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>/home/bob/.bashrc</p>
    <p>cp</p>
    <p>bash</p>
    <p>sudo sudo</p>
    <p>/lib/crt1.o</p>
    <p>ld</p>
    <p>apt-get</p>
    <p>bash</p>
    <p>cc</p>
    <p>UE: /home/alice/test</p>
    <p>/home/alice/test.o</p>
    <p>/home/alice/test.c</p>
    <p>/home/alice/test</p>
    <p>EXEC</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Backward Analysis: Key Ideas</p>
    <p>Prefer shorter paths over longer ones</p>
    <p>Favor paths that avoid redundant edges</p>
    <p>Prefer edges corresponding to flow of</p>
    <p>untrusted code</p>
    <p>and, to a lesser extent, untrusted data</p>
    <p>Preference encoded using a custom</p>
    <p>edge-weight function to Dijkstras</p>
    <p>shortest path algorithm</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>/home/bob/.bashrc</p>
    <p>cp</p>
    <p>bash</p>
    <p>sudo sudo</p>
    <p>/lib/crt1.o</p>
    <p>ld</p>
    <p>apt-get</p>
    <p>bash</p>
    <p>cc</p>
    <p>UE: /home/alice/test</p>
    <p>/home/alice/test.o</p>
    <p>/home/alice/test.c</p>
    <p>/home/alice/test</p>
    <p>EXEC</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Backward Analysis: Key Ideas</p>
    <p>Prefer shorter paths over longer ones</p>
    <p>Favor paths that avoid redundant edges</p>
    <p>Prefer edges corresponding to flow of</p>
    <p>untrusted code</p>
    <p>and, to a lesser extent, untrusted data</p>
    <p>Preference encoded using a custom</p>
    <p>edge-weight function to Dijkstras</p>
    <p>shortest path algorithm</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>/home/bob/.bashrc</p>
    <p>cp</p>
    <p>bash</p>
    <p>sudo sudo</p>
    <p>/lib/crt1.o</p>
    <p>ld</p>
    <p>apt-get</p>
    <p>bash</p>
    <p>cc</p>
    <p>UE: /home/alice/test</p>
    <p>/home/alice/test.o</p>
    <p>/home/alice/test.c</p>
    <p>/home/alice/test</p>
    <p>EXEC</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Backward Analysis: Key Ideas</p>
    <p>Prefer shorter paths over longer ones</p>
    <p>Favor paths that avoid redundant edges</p>
    <p>Prefer edges corresponding to flow of</p>
    <p>untrusted code</p>
    <p>and, to a lesser extent, untrusted data</p>
    <p>Preference encoded using a custom</p>
    <p>edge-weight function to Dijkstras</p>
    <p>shortest path algorithm</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>/home/bob/.bashrc</p>
    <p>cp</p>
    <p>bash</p>
    <p>sudo sudo</p>
    <p>/lib/crt1.o</p>
    <p>ld</p>
    <p>apt-get</p>
    <p>bash</p>
    <p>cc</p>
    <p>UE: /home/alice/test</p>
    <p>/home/alice/test.o</p>
    <p>/home/alice/test.c</p>
    <p>/home/alice/test</p>
    <p>EXEC</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Backward Analysis: Key Ideas</p>
    <p>Prefer shorter paths over longer ones</p>
    <p>Favor paths that avoid redundant edges</p>
    <p>Prefer edges corresponding to flow of</p>
    <p>untrusted code</p>
    <p>and, to a lesser extent, untrusted data</p>
    <p>Preference encoded using a custom</p>
    <p>edge-weight function to Dijkstras</p>
    <p>shortest path algorithm</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>/home/bob/.bashrc</p>
    <p>cp</p>
    <p>bash</p>
    <p>sudo sudo</p>
    <p>/lib/crt1.o</p>
    <p>ld</p>
    <p>apt-get</p>
    <p>bash</p>
    <p>cc</p>
    <p>UE: /home/alice/test</p>
    <p>/home/alice/test.o</p>
    <p>/home/alice/test.c</p>
    <p>/home/alice/test</p>
    <p>EXEC</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Backward Analysis: Key Ideas</p>
    <p>Prefer shorter paths over longer ones</p>
    <p>Favor paths that avoid redundant edges</p>
    <p>Prefer edges corresponding to flow of</p>
    <p>untrusted code</p>
    <p>and, to a lesser extent, untrusted data</p>
    <p>Preference encoded using a custom</p>
    <p>edge-weight function to Dijkstras</p>
    <p>shortest path algorithm</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>/home/bob/.bashrc</p>
    <p>cp</p>
    <p>bash</p>
    <p>sudo sudo</p>
    <p>/lib/crt1.o</p>
    <p>ld</p>
    <p>apt-get</p>
    <p>bash</p>
    <p>cc</p>
    <p>UE: /home/alice/test</p>
    <p>/home/alice/test.o</p>
    <p>/home/alice/test.c</p>
    <p>/home/alice/test</p>
    <p>EXEC</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Backward Analysis: Key Ideas</p>
    <p>Prefer shorter paths over longer ones</p>
    <p>Favor paths that avoid redundant edges</p>
    <p>Prefer edges corresponding to flow of</p>
    <p>untrusted code</p>
    <p>and, to a lesser extent, untrusted data</p>
    <p>Preference encoded using a custom</p>
    <p>edge-weight function to Dijkstras</p>
    <p>shortest path algorithm</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>/home/bob/.bashrc</p>
    <p>cp</p>
    <p>bash</p>
    <p>sudo sudo</p>
    <p>/lib/crt1.o</p>
    <p>ld</p>
    <p>apt-get</p>
    <p>bash</p>
    <p>cc</p>
    <p>UE: /home/alice/test</p>
    <p>/home/alice/test.o</p>
    <p>/home/alice/test.c</p>
    <p>/home/alice/test</p>
    <p>EXEC</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Backward Analysis: Key Ideas</p>
    <p>Prefer shorter paths over longer ones</p>
    <p>Favor paths that avoid redundant edges</p>
    <p>Prefer edges corresponding to flow of</p>
    <p>untrusted code</p>
    <p>and, to a lesser extent, untrusted data</p>
    <p>Preference encoded using a custom</p>
    <p>edge-weight function to Dijkstras</p>
    <p>shortest path algorithm</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>/home/bob/.bashrc</p>
    <p>cp</p>
    <p>bash</p>
    <p>sudo sudo</p>
    <p>/lib/crt1.o</p>
    <p>ld</p>
    <p>apt-get</p>
    <p>bash</p>
    <p>cc</p>
    <p>UE: /home/alice/test</p>
    <p>/home/alice/test.o</p>
    <p>/home/alice/test.c</p>
    <p>/home/alice/test</p>
    <p>EXEC</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Forward Analysis</p>
    <p>Goal: Identify aack impact, in terms of all objects/subjects aected by the aack.</p>
    <p>Generate a subgraph of provenance graph that only includes objects and subjects</p>
    <p>aected by the aack.</p>
    <p>Starting point: Sources identified by backward analysis</p>
    <p>Challenge: Straight-forward dependence analysis may yield a graph with hundreds of</p>
    <p>thousands (if not millions) of edges.</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Forward Analysis: Key Ideas</p>
    <p>Use cost metric to prune o distant nodes,</p>
    <p>i.e., nodes at a distance  dth</p>
    <p>Cost metric favors</p>
    <p>edges with untrusted code trustworthiness (cost=0);</p>
    <p>and, to a lesser extent, edges with</p>
    <p>untrusted data trustworthiness (cost=1)</p>
    <p>Define simplifications on output</p>
    <p>Prune nodes lacking interesting</p>
    <p>descendants</p>
    <p>Merge similar entities</p>
    <p>Remove repetitions</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>/home/bob/.bashrc</p>
    <p>cp</p>
    <p>bash</p>
    <p>sudo sudo</p>
    <p>/lib/crt1.o</p>
    <p>ld</p>
    <p>apt-get</p>
    <p>bash</p>
    <p>cc</p>
    <p>UE: /home/alice/test</p>
    <p>/home/alice/test.o</p>
    <p>/home/alice/test.c</p>
    <p>/home/alice/test</p>
    <p>EXEC</p>
    <p>/etc/passwd</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Forward Analysis: Key Ideas</p>
    <p>Use cost metric to prune o distant nodes,</p>
    <p>i.e., nodes at a distance  dth</p>
    <p>Cost metric favors</p>
    <p>edges with untrusted code trustworthiness (cost=0);</p>
    <p>and, to a lesser extent, edges with</p>
    <p>untrusted data trustworthiness (cost=1)</p>
    <p>Define simplifications on output</p>
    <p>Prune nodes lacking interesting</p>
    <p>descendants</p>
    <p>Merge similar entities</p>
    <p>Remove repetitions</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>/home/bob/.bashrc</p>
    <p>cp</p>
    <p>bash</p>
    <p>sudo sudo</p>
    <p>/lib/crt1.o</p>
    <p>ld</p>
    <p>apt-get</p>
    <p>bash</p>
    <p>cc</p>
    <p>UE: /home/alice/test</p>
    <p>/home/alice/test.o</p>
    <p>/home/alice/test.c</p>
    <p>/home/alice/test</p>
    <p>EXEC</p>
    <p>/etc/passwd</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Forward Analysis: Key Ideas</p>
    <p>Use cost metric to prune o distant nodes,</p>
    <p>i.e., nodes at a distance  dth</p>
    <p>Cost metric favors</p>
    <p>edges with untrusted code trustworthiness (cost=0);</p>
    <p>and, to a lesser extent, edges with</p>
    <p>untrusted data trustworthiness (cost=1)</p>
    <p>Define simplifications on output</p>
    <p>Prune nodes lacking interesting</p>
    <p>descendants</p>
    <p>Merge similar entities</p>
    <p>Remove repetitions</p>
    <p>firefox</p>
    <p>/home/bob/crt1.o</p>
    <p>/home/bob/.bashrc</p>
    <p>cp</p>
    <p>bash</p>
    <p>sudo</p>
    <p>/lib/crt1.o</p>
    <p>ld</p>
    <p>UE: /home/alice/test</p>
    <p>/home/alice/test</p>
    <p>EXEC</p>
    <p>/etc/passwd</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Campaign Reconstruction Summary</p>
    <p>Campaign</p>
    <p>Entry</p>
    <p>Points</p>
    <p>Programs</p>
    <p>Executed</p>
    <p>Key Files</p>
    <p>Involved</p>
    <p>Exit</p>
    <p>Points</p>
    <p>Correctly</p>
    <p>Identified</p>
    <p>False</p>
    <p>Positives</p>
    <p>Missed</p>
    <p>Entities</p>
    <p>Win-1 2 8 7 3 20 0 0</p>
    <p>Win-2 2 8 4 4 18 0 0</p>
    <p>Lin-1 2 10 6 2 20 0 0</p>
    <p>Lin-2 2 20 11 4 37 0 0</p>
    <p>Lin-3 1 6 6 5 18 0 0</p>
    <p>Bsd-1 4 13 9 2 13 15 1</p>
    <p>Bsd-2 2 10 7 3 22 0 0</p>
    <p>Bsd-3 4 14 7 1 26 0 0</p>
    <p>Total 19 89 57 24 174 15 1</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Generated Graph for Scenario Win-1</p>
    <p>mozillanightly</p>
    <p>cmd.exe</p>
    <p>firefox.exe</p>
    <p>mnsend.exe</p>
    <p>mozillanightly</p>
    <p>whoami.exe</p>
    <p>C:\\Users\\User1\\Downloads\\firefox\ \burnout.bat</p>
    <p>photosnap.exe hostname.exe</p>
    <p>C:\\Users\\User1\\Downloads\\firefox\ \mnsend.exe</p>
    <p>C:\\Users\\User1\\Downloads\ \photosnap.exe</p>
    <p>C:\\Users\\User1\\Downloads\ \pic.png</p>
    <p>C:\\Users\\User1\\Downloads\\firefox\ \mozillanightly</p>
    <p>netstat.exe</p>
    <p>C:\\Users\\User1\\Downloads\\firefox\ \4662.log</p>
    <p>C:\\Users\\User1\\Downloads\ \mozillanightly</p>
    <p>cmd.exe</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Generated Graph for Scenario Bsd-3</p>
    <p>/var/dropbear_latest/ dropbearFREEBSD.tar</p>
    <p>sshd</p>
    <p>bash</p>
    <p>sudoscp</p>
    <p>whoami</p>
    <p>date</p>
    <p>ps</p>
    <p>hostname</p>
    <p>ls</p>
    <p>bsdtar 13. read</p>
    <p>/var/dropbear_latest/ dropbear/dropbearkey</p>
    <p>/var/dropbear_latest/ dropbear/dropbearscript</p>
    <p>/var/dropbear_latest/ dropbear/dropbear</p>
    <p>vi18. read 17. fork</p>
    <p>sh</p>
    <p>sudodropbearkey 22. fork</p>
    <p>sudo</p>
    <p>dropbear</p>
    <p>/usr/local/etc/dropbear/ dropbear_rsa_host_key</p>
    <p>bash</p>
    <p>ls</p>
    <p>cat</p>
    <p>uname</p>
    <p>bash</p>
    <p>/usr/home/user/procstat</p>
    <p>scp 40. fork</p>
    <p>/usr/home/user/archiver</p>
    <p>ps</p>
    <p>archiver43.execute 44. read</p>
    <p>sudo</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Generated Graph for Scenario Lin-2</p>
    <p>dropbear</p>
    <p>/etc/dropbear/dropbear_dss_host_key</p>
    <p>sudo</p>
    <p>/etc/dropbear/dropbear_rsa_host_key</p>
    <p>/var/dropbear_latest/dropbearLINUX/dropbear</p>
    <p>/var/dropbear_latest/dropbearLINUX/dropbearkey</p>
    <p>dropbearkey dropbear</p>
    <p>/etc/dropbear/dropbear_ecdsa_host_key</p>
    <p>tar</p>
    <p>/var/dropbear_latest/dropbearLINUX.tar</p>
    <p>scp 1. fork</p>
    <p>shred</p>
    <p>rm</p>
    <p>/etc/nsswitch 27. read</p>
    <p>/etc/shells</p>
    <p>/etc/shadow</p>
    <p>/proc/vmstat</p>
    <p>/etc/localtime 28. read</p>
    <p>/proc/timer_list</p>
    <p>/proc/sys/kernel/ ngroups_max/run/utmp</p>
    <p>/var/log/lastlog</p>
    <p>/run/utmp</p>
    <p>/dev/ptmx</p>
    <p>/proc/loadavg20. read</p>
    <p>/proc/interrupts</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Forward Analysis Selectivity</p>
    <p>Campaign</p>
    <p>Initial</p>
    <p># of</p>
    <p>Events</p>
    <p>Final</p>
    <p># of</p>
    <p>Events</p>
    <p>Reduction Factor</p>
    <p>Single</p>
    <p>t-tag</p>
    <p>Split</p>
    <p>t-tag</p>
    <p>Sleuth</p>
    <p>Simplif.</p>
    <p>Total</p>
    <p>Win-1 100 K 51 4.4x 1394x 1.4x 1951x</p>
    <p>Win-2 401 K 28 3.6x 552x 26x 14352x</p>
    <p>Lin-2 38.5 M 130 7.3x 2971x 100x 297100x</p>
    <p>Lin-3 19.3 M 45 7.6x 1208x 356x 430048x</p>
    <p>Bsd-2 5.86 M 39 1.9x 689x 218x 150202x</p>
    <p>Bsd-3 5.68 M 45 6.7x 740x 170x 125800x</p>
    <p>Average Reduction 4.68x 1305x 41.8x 54517x</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary Backward Analysis Forward Analysis Reconstruction Results Performance</p>
    <p>Memory Use and Runtime Performance</p>
    <p>Campaign Events Memory Bytes/ Duration Runtime</p>
    <p>Usage event (hh:mm:ss) Time Speed-up</p>
    <p>Win-1 100K 3 MB 30 06:22:42 1.19 s 19.3 K</p>
    <p>Win-2 400K 10 MB 25 19:43:46 2.13 s 33.3 K</p>
    <p>Win-Mean 28 26.3 K</p>
    <p>Lin-1 2.7M 26 MB 10 07:59:26 8.71 s 3.3 K</p>
    <p>Lin-2 38.5M 329 MB 9 79:06:39 114.14s 2.5 K</p>
    <p>Lin-3 19.3M 175 MB 9 79:05:13 74.14 s 3.9 K</p>
    <p>Lin-Mean 9 3.2 K</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary</p>
    <p>Related Work</p>
    <p>Intrusion detection: Numerous anomaly &amp; misuse detection techniques developed since 80s.</p>
    <p>Sleuth advances: novel use of provenance and policies to obtain application-independent, training-free detection with very low false positive rate.</p>
    <p>Alert correlation: Link alarms using statistical [Qin03], graph-based clustering [Wang08, Pei16], aack</p>
    <p>specifications [Ning03], and so on</p>
    <p>In contrast, Sleuth uses provenance tags and policies to obtain accurate, analyst-friendly</p>
    <p>scenario descriptions</p>
    <p>Backtracking Intrusions: Backtracker, Taser, Forensix, ...</p>
    <p>Target forensic analysis, assisted by external detectors.</p>
    <p>Sleuth targets fully automated, real-time scenario construction with built-in detectors</p>
    <p>Tackling dependence explosion: Orthogonal to (and can benefit) Sleuth.</p>
    <p>Fine-grained taint-tracking</p>
    <p>Forensics-targeted: BEEP, ProTracer, ...</p>
    <p>Information flow control: [Biba, Bell-LaPadula, PIP, SPIF, ...]</p>
    <p>Goal is to block illegal flow, while minimizing failures.</p>
    <p>In contrast, Sleuth needs to distinguish aacks from benign policy violations.</p>
  </div>
  <div class="page">
    <p>Intro. Overview Aack Detection Scenario Construction Related Work Summary</p>
    <p>Summary</p>
    <p>Presented techniques that a security analyst can use to understand an ongoing</p>
    <p>aack campaign, and respond in real-time.</p>
    <p>Automatically generated visual representation that</p>
    <p>compactly summarizes an ongoing campaign</p>
    <p>Experiments show high accuracy and performance for Sleuth</p>
    <p>Eectiveness evaluated using realistic adversarial engagements.</p>
    <p>Key point: Given millions of events in an unknown environment,</p>
    <p>Sleuth consistently managed to be spot-on, zooming in on the</p>
  </div>
</Presentation>
