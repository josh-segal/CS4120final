<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Action-Graph Games,</p>
    <p>and an Algorithm for Computing their Equilibria</p>
    <p>Navin A. R. Bhat University of Toronto</p>
    <p>Kevin Leyton-Brown University of British Columbia</p>
  </div>
  <div class="page">
    <p>Compact Game Representations</p>
    <p>Extensive form: sequential structure</p>
    <p>Congestion games [Rosenthal, 1973]  anonymity: agents payoffs depend on numbers of other agents</p>
    <p>choosing same resources, not on individual identities;</p>
    <p>additivity over resources</p>
    <p>Graphical games [Kearns et al., 2001]  strict utility independence holds between some pairs of agents  leveraged for rapid computation of equilibria (e.g.) [Blum et al. , 2003]</p>
    <p>Local-effect games [L-B &amp; Tennenholtz, 2003]  context-specific independence  also symmetry, anonymity, monotonicity, additivity of local effects</p>
  </div>
  <div class="page">
    <p>Action-Graph Games</p>
    <p>a b c</p>
  </div>
  <div class="page">
    <p>AGGs are Fully Expressive</p>
    <p>i2 i3</p>
    <p>i1</p>
    <p>k2</p>
    <p>k3</p>
    <p>k1</p>
    <p>j2</p>
    <p>j1</p>
    <p>j3</p>
  </div>
  <div class="page">
    <p>Graphical Games as AGGs</p>
    <p>i2</p>
    <p>i3</p>
    <p>i1</p>
    <p>j2</p>
    <p>j1</p>
    <p>j3</p>
    <p>k2</p>
    <p>k3</p>
    <p>k1</p>
    <p>i j k</p>
    <p>AGGGG</p>
    <p>Node utility functionLocal game matrix</p>
    <p>Bipartite graphs between action setsEdge</p>
    <p>Action set boxAgent node</p>
  </div>
  <div class="page">
    <p>Constrained Location Problem</p>
    <p>Notes:</p>
    <p>representation independent of # agents  overlapping action sets  context-specific independence without</p>
    <p>strict independence</p>
    <p>Other examples of compact AGGs:</p>
    <p>Role formation games  Traffic routing games  Product placement games  Party affiliation games</p>
    <p>n vendors sell either chocolate or vanilla ice cream at one of four stations along a beach</p>
    <p>nC chocolate (C) vendors;  nV vanilla (V) vendors;  nW can sell C/V, but only on the west side.  competition between nearby sellers of same</p>
    <p>type; synergy between nearby different types</p>
    <p>V1 V3</p>
    <p>C4</p>
    <p>V4V2</p>
    <p>C3C2C1</p>
  </div>
  <div class="page">
    <p>Continuation Method for Equilibria [Govindan &amp; Wilson, 2003]</p>
    <p>expected payoff to agent i for playing action si, if other agents play</p>
    <p>according to mixed-strategy profile   Deform payoff to obtain a game with</p>
    <p>known equilibrium:</p>
    <p>add bonus, parameterized by :  Strategy improvement mapping:</p>
    <p>fixed points define equilibria</p>
    <p>Path following:  Initial (, ) known  Compute local path direction</p>
    <p>V is bottleneck computation  Take small step along path; repeat</p>
  </div>
  <div class="page">
    <p>Payoff Jacobian</p>
    <p>Computational complexity:</p>
    <p>Other applications of this Jacobian:</p>
    <p>Iterated Polymatrix Approximation (IPA)  a quick start for the continuation method</p>
    <p>Gradient for policy search multiagent RL algorithms</p>
  </div>
  <div class="page">
    <p>Projection</p>
    <p>V3</p>
    <p>C4</p>
    <p>V4</p>
    <p>C3</p>
    <p>V1 V3</p>
    <p>C4</p>
    <p>V4V2</p>
    <p>C3C2C1</p>
    <p>V1 V2</p>
    <p>C2C1</p>
  </div>
  <div class="page">
    <p>AGG Jacobian for Arbitrary Equilibria</p>
    <p>Projection captures context-specific independence and strict independence</p>
    <p>Writing in terms of the distribution captures anonymity</p>
  </div>
  <div class="page">
    <p>AGG Jacobian for Arbitrary Equilibria</p>
    <p>Exponential speedup vs. GW:</p>
    <p>Same exponential speedup as Blum et. al. for computing the Jacobian for a graphical game using an explicit graphical game representation</p>
  </div>
  <div class="page">
    <p>Symmetric Equilibria</p>
    <p>Symmetric games are important  AGGs are symmetric when i, Si=S</p>
    <p>Nash [1951] proved all symmetric games have symmetric mixedstrategy equilibria: i, i*  Jacobian simplifies because elements</p>
    <p>are agent-independent</p>
    <p>Continuation method:  seed with a symmetric equilibrium of</p>
    <p>the perturbed game</p>
    <p>Jacobian is agent-independent  path traces to symmetric equilibrium</p>
    <p>of game of interest</p>
    <p>V1 V3</p>
    <p>C4</p>
    <p>V4V2</p>
    <p>C3C2C1</p>
  </div>
  <div class="page">
    <p>Symmetric AGG Jacobian</p>
    <p>All pure action profiles giving rise to the same distribution of agents are equally likely, so is just</p>
    <p>times the number profiles that achieve</p>
    <p>number of profiles: multinomial coefficients on projected graph</p>
    <p>Jacobian: sum over space  space of projected distributions is polynomial-sized</p>
    <p>(number of combinatorial compositions)</p>
  </div>
  <div class="page">
    <p>Speedup Results</p>
    <p>One flavor ice cream vendor game; 10 stations</p>
    <p>Given a 1 GFLOP computer, solve Jacobian for:</p>
    <p>m u lt ip</p>
    <p>li ca</p>
    <p>ti o n s</p>
    <p>number of agents</p>
    <p>GW</p>
    <p>C4C3C2C1 C8C7C6C5 C0C9</p>
    <p>AGG-symm</p>
    <p>AGG-arb</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>AGGs are a fully expressive compact representation for games</p>
    <p>They compactly express:  context-specific and/or strict utility independencies  anonymity in utility functions</p>
    <p>We leverage the AGG representation to compute Nash equilibria using a continuation method; guarantee  arbitrary equilibria: exponential speedup of continuation method  symmetric equilibria: bounded indegree implies polytime</p>
    <p>computation of Jacobian</p>
    <p>google://Navin Bhat google://Kevin Leyton-Brown</p>
  </div>
</Presentation>
