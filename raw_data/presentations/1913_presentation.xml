<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>RAMP: RDMA Migration Platform</p>
    <p>Babar Naveed Memon, Xiayue Charles Lin, Arshia Mufti, Arthur Scott Wesley, Tim Brecht, Kenneth Salem, Bernard Wong, and Benjamin Cassell</p>
    <p>Contact @ firstname.lastname@uwaterloo.ca</p>
  </div>
  <div class="page">
    <p>RDMA and RDMA-based Systems  What and why?</p>
  </div>
  <div class="page">
    <p>RDMA and RDMA-based Systems  What and why?  What is the right programming model?</p>
  </div>
  <div class="page">
    <p>RDMA and RDMA-based Systems  What and why?  What is the right programming model?</p>
    <p>Shared Memory  FaRM  NAM-DB</p>
  </div>
  <div class="page">
    <p>Motivation</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Support Configuration Operations in Loosely Coupled Distributed Systems</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Support Configuration Operations in Loosely Coupled Distributed Systems</p>
    <p>Loosely Coupled Applications</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Support Configuration Operations in Loosely Coupled Distributed Systems</p>
    <p>Cluster of Servers</p>
    <p>Server 1 Server 2 Server 3</p>
    <p>Partition1 Partition2 Partition3</p>
    <p>Partition4 Partition5 Partition6</p>
    <p>Partition7 Partition8 Partition9</p>
    <p>Client 1 Client 2 Client n</p>
    <p>Client 3</p>
    <p>Loosely Coupled Applications</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Support Configuration Operations in Loosely Coupled Distributed Systems</p>
    <p>Cluster of Servers</p>
    <p>Server 1 Server 2 Server 3</p>
    <p>Partition1 Partition2 Partition3</p>
    <p>Partition4 Partition5 Partition6</p>
    <p>Partition7 Partition8 Partition9</p>
    <p>Client 1 Client 2 Client n</p>
    <p>Client 3</p>
    <p>Loosely Coupled Applications</p>
    <p>Configuration Operations  Scale out, scale in or load</p>
    <p>balance</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Support Configuration Operations in Loosely Coupled Distributed Systems</p>
    <p>Cluster of Servers</p>
    <p>Server 1 Server 2 Server 3</p>
    <p>Partition1 Partition2 Partition3</p>
    <p>Partition4 Partition5 Partition6</p>
    <p>Partition7 Partition8 Partition9</p>
    <p>Client 1 Client 2 Client n</p>
    <p>Client 3</p>
    <p>Loosely Coupled Applications</p>
    <p>Configuration Operations  Scale out, scale in or load</p>
    <p>balance  Is shared memory overkill?</p>
  </div>
  <div class="page">
    <p>Desired Properties for RAMP</p>
  </div>
  <div class="page">
    <p>Desired Properties for RAMP</p>
    <p>On-The-Fly Bulk Data Movement  Minimize interference with on-going application workload  Particularly at the source</p>
  </div>
  <div class="page">
    <p>Desired Properties for RAMP</p>
    <p>Non-Intrusive  Stay out of the way, except during configuration options  Avoid shared storage approach  Local memory access faster than RDMA</p>
    <p>On-The-Fly Bulk Data Movement  Minimize interference with on-going application workload  Particularly at the source</p>
  </div>
  <div class="page">
    <p>Desired Properties for RAMP</p>
    <p>Non-Intrusive  Stay out of the way, except during configuration options  Avoid shared storage approach  Local memory access faster than RDMA</p>
    <p>On-The-Fly Bulk Data Movement  Minimize interference with on-going application workload  Particularly at the source</p>
    <p>Application-Managed  Application controls when data moves, and where it moves</p>
  </div>
  <div class="page">
    <p>RAMP: The Big Picture</p>
  </div>
  <div class="page">
    <p>RAMP: The Big Picture  Coordinated memory segments</p>
    <p>Single reader/writer  Contains application data</p>
  </div>
  <div class="page">
    <p>RAMP: The Big Picture</p>
    <p>Segments are migratable</p>
    <p>Coordinated memory segments  Single reader/writer  Contains application data</p>
  </div>
  <div class="page">
    <p>RAMP: The Big Picture</p>
    <p>Segments are migratable  No serialization/deserialization of application data during</p>
    <p>migration</p>
    <p>Coordinated memory segments  Single reader/writer  Contains application data</p>
  </div>
  <div class="page">
    <p>RAMP Functionality</p>
  </div>
  <div class="page">
    <p>RAMP Functionality</p>
    <p>Cluster of Servers</p>
    <p>Server 1 Server 2 Server 3</p>
    <p>Partition1 Partition2 Partition3</p>
    <p>Partition4 Partition5 Partition6</p>
    <p>Partition7 Partition8 Partition9</p>
    <p>Client 1 Client 2 Client nClient 3</p>
  </div>
  <div class="page">
    <p>RAMP Memory Segment Allocation</p>
    <p>Server1 Server2 Server3</p>
  </div>
  <div class="page">
    <p>RAMP Memory Segment Allocation</p>
    <p>Server1 Server2 Server3</p>
    <p>RAMP Arena</p>
  </div>
  <div class="page">
    <p>RAMP Memory Segment Allocation</p>
    <p>Server1 Server2 Server3</p>
    <p>RAMP Arena RAMP Segment</p>
  </div>
  <div class="page">
    <p>RAMP Memory Segment Allocation</p>
    <p>Server1 Server2 Server3</p>
    <p>RAMP Arena RAMP Segment</p>
    <p>RAMP Segment</p>
  </div>
  <div class="page">
    <p>Using RAMP Segments</p>
  </div>
  <div class="page">
    <p>Using RAMP Segments</p>
    <p>Server1</p>
    <p>Application Data</p>
    <p>Structures</p>
  </div>
  <div class="page">
    <p>Using RAMP Segments</p>
    <p>Server1</p>
    <p>Application Data</p>
    <p>Structures</p>
    <p>Optional RAMP-provided in-segment C++ containers (vectors, maps) using custom memory allocators</p>
  </div>
  <div class="page">
    <p>Normal Operation</p>
    <p>Cluster of Servers</p>
    <p>Server 1 Server 2 Server 3</p>
    <p>Partition1 Partition2 Partition3</p>
    <p>Partition4 Partition5 Partition6</p>
    <p>Partition7 Partition8 Partition9</p>
    <p>Client 1 Client 2 Client nClient 3</p>
  </div>
  <div class="page">
    <p>RAMP Segment Migration (Phase 1)</p>
    <p>Server1 Server2</p>
  </div>
  <div class="page">
    <p>RAMP Segment Migration (Phase 1)</p>
    <p>Server1 Server2</p>
    <p>CONNECT</p>
  </div>
  <div class="page">
    <p>RAMP Segment Migration (Phase 1)</p>
    <p>Server1 Server2</p>
    <p>CONNECT</p>
    <p>ACCEPT</p>
  </div>
  <div class="page">
    <p>RAMP Segment Migration (Phase 1)</p>
    <p>Server1 Server2</p>
    <p>CONNECT</p>
    <p>ACCEPT</p>
    <p>Registration has a high latency cost (100s ms)</p>
    <p>but segment remains available</p>
  </div>
  <div class="page">
    <p>RAMP Segment Migration (Phase 2)</p>
    <p>Server1 Server2</p>
  </div>
  <div class="page">
    <p>RAMP Segment Migration (Phase 2)</p>
    <p>Server1 Server2</p>
    <p>TRANSFER</p>
  </div>
  <div class="page">
    <p>RAMP Segment Migration (Phase 2)</p>
    <p>Server1 Server2</p>
    <p>TRANSFER  Transfers segment ownership (not data)</p>
    <p>Low latency operation (20 microseconds)</p>
  </div>
  <div class="page">
    <p>RAMP Segment Migration (Phase 3)</p>
    <p>Server1 Server2</p>
  </div>
  <div class="page">
    <p>RAMP Segment Migration (Phase 3)</p>
    <p>Server1 Server2</p>
    <p>PULL</p>
  </div>
  <div class="page">
    <p>RAMP Segment Migration (Phase 3)</p>
    <p>Server1 Server2</p>
    <p>PULL</p>
    <p>PULL</p>
  </div>
  <div class="page">
    <p>RAMP Segment Migration (Phase 3)</p>
    <p>Server1 Server2</p>
    <p>PULL</p>
    <p>Implemented using one-sided RDMA reads</p>
    <p>Application managed vs RAMP managed</p>
    <p>PULL</p>
  </div>
  <div class="page">
    <p>RAMP Segment Migration (Phase 4)</p>
    <p>Server1 Server2</p>
    <p>CLOSE</p>
  </div>
  <div class="page">
    <p>RAMP Segment Migration (Phase 4)</p>
    <p>Server1 Server2</p>
    <p>CLOSE  Clean up</p>
  </div>
  <div class="page">
    <p>Segment Migration Performance</p>
  </div>
  <div class="page">
    <p>Segment Migration Performance  STL map with 8B keys</p>
    <p>and 128B values in 256MB segment</p>
  </div>
  <div class="page">
    <p>Segment Migration Performance  STL map with 8B keys</p>
    <p>and 128B values in 256MB segment</p>
    <p>Single thread at receiver starts using the map immediately after TRANSFER</p>
  </div>
  <div class="page">
    <p>Segment Migration Performance  STL map with 8B keys</p>
    <p>and 128B values in 256MB segment</p>
    <p>Single thread at receiver starts using the map immediately after TRANSFER</p>
    <p>Latency of map get operations, as a function of time since TRANSFER</p>
  </div>
  <div class="page">
    <p>Segment Migration Performance  STL map with 8B keys</p>
    <p>and 128B values in 256MB segment</p>
    <p>Single thread at receiver starts using the map immediately after TRANSFER</p>
    <p>Latency of map get operations, as a function of time since TRANSFER</p>
  </div>
  <div class="page">
    <p>Segment Migration Performance  Paging first access</p>
    <p>access 310 ms</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Overview of RAMP, lightweight support for configuration operations in loosely coupled systems</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Overview of RAMP, lightweight support for configuration operations in loosely coupled systems</p>
    <p>Coordinated allocation of segments, fast ownership transfer, application-managed data movement</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Overview of RAMP, lightweight support for configuration operations in loosely coupled systems</p>
    <p>Coordinated allocation of segments, fast ownership transfer, application-managed data movement</p>
    <p>In the paper:</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Overview of RAMP, lightweight support for configuration operations in loosely coupled systems</p>
    <p>Coordinated allocation of segments, fast ownership transfer, application-managed data movement</p>
    <p>In the paper:  Many more details</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Overview of RAMP, lightweight support for configuration operations in loosely coupled systems</p>
    <p>Coordinated allocation of segments, fast ownership transfer, application-managed data movement</p>
    <p>In the paper:  Many more details  Rcached: memcached-like in-memory k/v store, using</p>
    <p>RAMP for load balancing 52</p>
  </div>
  <div class="page">
    <p>Feedback  The right abstraction for the application  Is shared memory abstraction overkill for loosely coupled data intensive</p>
    <p>applications?</p>
  </div>
  <div class="page">
    <p>Thank You</p>
  </div>
  <div class="page">
    <p>Rcached</p>
    <p>Memcached with  RAMP based Hash-Maps  Ability to migrate partitions</p>
    <p>128 partitions hashed across 4 servers  40 million keys (key = 8 Bytes, Value = 128 Byte)  100 closed loop clients  Per server latency noted over 40000 request windows</p>
  </div>
  <div class="page">
    <p>Rcached (2)</p>
  </div>
</Presentation>
