<?xml version="1.0" ?>
<Presentation>
  <div class="page"/>
  <div class="page">
    <p>Motivations as an abstraction of metalevel reasoning</p>
    <p>Felipe Meneguzzi &amp; Michael Luck Kings College London</p>
  </div>
  <div class="page">
    <p>Overview Motivations AgentSpeak(L) AgentSpeak-MPL</p>
    <p>Motivation Model Motivation Functions Integration with AgentSpeak Experiment</p>
    <p>Conclusions and Future Work</p>
  </div>
  <div class="page">
    <p>Motivations</p>
    <p>Root cause of future-directed behaviour Studied by a number of other disciplines</p>
    <p>Orientation towards particular goals Associated with drives and incentives Controls focus of attention</p>
    <p>In our work: abstraction of meta-reasoning Goal generation Representation of dynamic priorities</p>
  </div>
  <div class="page">
    <p>AgentSpeak(L)</p>
    <p>Procedural agent language Based on the BDI model Designer specifies plans in a library</p>
    <p>Plans encode procedures Plans are characterised by trigger and context conditions</p>
    <p>Goals are implicit in the plans</p>
  </div>
  <div class="page">
    <p>AgentSpeak-MPL</p>
    <p>AgentSpeak(L) + Motivations Standard AgentSpeak(L) language External motivation specification</p>
    <p>Motivation model for Goal generation Plan selection</p>
    <p>Motivation model based on mBDI</p>
  </div>
  <div class="page">
    <p>Motivation Model</p>
    <p>Tuple that includes: Motivation name Intensity Threshold value</p>
    <p>Motivation functions: Intensity Update Goal Generation Mitigation</p>
    <p>&lt;m, i, t, fi , fg , fm &gt;</p>
  </div>
  <div class="page">
    <p>Intensity Update Function</p>
    <p>Invoked when beliefs are updated Controls motivational intensity based on belief base Mapping of beliefs to intensity values</p>
    <p>= 1</p>
    <p>)batt()over(P,bay (Beliefs)fi</p>
  </div>
  <div class="page">
    <p>Goal Generation Function</p>
    <p>Invoked when threshold value is exceeded Posts new goal events to agent</p>
    <p>{ )(!)1,()( PacketsortbayPacketoverBeliefsf g +=</p>
  </div>
  <div class="page">
    <p>Mitigation Function</p>
    <p>Invoked after goals are generated Updates motivational intensity when a motivation is active Similar to Intensity Update Function</p>
    <p>Also based on belief updates</p>
  </div>
  <div class="page">
    <p>mBDI Control Cycle loop</p>
    <p>perceive the environment and update beliefs; for all motivation m do</p>
    <p>apply fi to m to update i; if i &gt; t then</p>
    <p>apply fg to m to generate new goals; end if</p>
    <p>end for select a plan for the most motivated new goal and adopt it; select the most motivationally valuable intention and</p>
    <p>perform the next step in its plan; on completion of an intention apply fm to each motivation;</p>
    <p>end loop</p>
  </div>
  <div class="page">
    <p>AgentSpeak Control Cycle Belief Base</p>
    <p>SE</p>
    <p>SI</p>
    <p>Internal Events</p>
    <p>Relevant Plans</p>
    <p>Applicable Plans</p>
    <p>External Events</p>
    <p>Update Intention</p>
    <p>Means Intended</p>
    <p>Plan Library</p>
    <p>Events</p>
    <p>Intentions</p>
    <p>BRF</p>
    <p>Unify Context</p>
    <p>Execute Intention</p>
    <p>Event Unify</p>
    <p>Perception</p>
    <p>Action</p>
    <p>Selected Event</p>
    <p>Beliefs</p>
    <p>Intention</p>
    <p>Events</p>
    <p>Beliefs</p>
    <p>Beliefs</p>
    <p>Beliefs</p>
    <p>SO</p>
    <p>AgentSpeak(L) Agent</p>
    <p>Intentions</p>
    <p>Selected</p>
    <p>Plans</p>
    <p>...New New</p>
    <p>Intention New</p>
    <p>Subplan Push</p>
  </div>
  <div class="page">
    <p>Integration with AgentSpeak Belief Revision Function associated with motivation functions Motivated goals are posted as new achievement goals Motivation values are used in the Option Selection Function</p>
    <p>BRF</p>
    <p>Update Intensity</p>
    <p>Check Threshold</p>
    <p>Mitigate Motivations</p>
    <p>Generate GoalsThreshold exceeded</p>
    <p>Threshold not exceeded</p>
    <p>Belief Base</p>
    <p>Motivation</p>
    <p>So</p>
  </div>
  <div class="page">
    <p>Motivation Description Motivation processBay1 {</p>
    <p>Threshold = 10;</p>
    <p>IntensityUpdate org.kcl.IUFunctionImpl {</p>
    <p>over(packet1,bay1) -&gt; 1;</p>
    <p>}</p>
    <p>GoalGeneration org.kcl.GGFunctionImpl {</p>
    <p>~over(packet1, pigeonHoles) -&gt; +!sort(packet1);</p>
    <p>}</p>
    <p>Mitigation org.kcl.MFunctionImpl {</p>
    <p>over(packet1, pigeonHoles) -&gt; -20;</p>
    <p>}</p>
    <p>}</p>
  </div>
  <div class="page">
    <p>Experiment  Mars Rover</p>
    <p>Rover moving about a 2D environment Movement consumes batteries Rover recharges on the mother ship</p>
    <p>Goal is to explore a set of waypoints Rover must not run out of batteries Minimise wasted movement</p>
  </div>
  <div class="page">
    <p>Mars Rover  Results</p>
    <p>Traditional AgentSpeak agent Reacts when battery is critical Wastes movement when dropping intentions</p>
    <p>Motivated agent Proactively decides when to recharge No wasted movement</p>
  </div>
  <div class="page">
    <p>Rover  Distance covered</p>
    <p>D is</p>
    <p>ta nc</p>
    <p>e</p>
    <p>Waypoints</p>
    <p>Amount of movement</p>
    <p>Perfect AgentSpeak-L</p>
    <p>AgentSpeak-MPL</p>
  </div>
  <div class="page">
    <p>Rover  Wasted movement</p>
    <p>D is</p>
    <p>ta nc</p>
    <p>e</p>
    <p>Waypoints</p>
    <p>Wasted movement</p>
    <p>Perfect AgentSpeak-L</p>
    <p>AgentSpeak-MPL</p>
  </div>
  <div class="page">
    <p>Rover  Charge movement</p>
    <p>D is</p>
    <p>ta nc</p>
    <p>e</p>
    <p>Waypoints</p>
    <p>Movement to charge</p>
    <p>Perfect AgentSpeak-L</p>
    <p>AgentSpeak-MPL</p>
  </div>
  <div class="page">
    <p>Rover  Goals dropped</p>
    <p>G oa</p>
    <p>ls</p>
    <p>Waypoints</p>
    <p>Goals dropped</p>
    <p>AgentSpeak-L AgentSpeak-MPL</p>
  </div>
  <div class="page">
    <p>Future Work</p>
    <p>Reasoning about third-party motivations Refine the motivation language</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Architecture easily integrated to BDI-like languages Provides an intuitive abstraction for metalevel reasoning Separates meta-reasoning from actiondirected plans</p>
  </div>
  <div class="page">
    <p>Questions?</p>
    <p>Implementation available on request: felipe.meneguzzi@kcl.ac.uk</p>
  </div>
</Presentation>
