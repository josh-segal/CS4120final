<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Live Video Analytics at Scale with Approximation and Delay-Tolerance</p>
    <p>Haoyu Zhang, Ganesh Ananthanarayanan, Peter Bodik, Matthai Philipose, Paramvir Bahl, Michael J. Freedman</p>
  </div>
  <div class="page">
    <p>Video cameras are pervasive</p>
  </div>
  <div class="page">
    <p>Video analytics queries</p>
    <p>Intelligent Traffic System AMBER Alert</p>
    <p>Electronic Toll Collection</p>
    <p>Video Doorbell</p>
  </div>
  <div class="page">
    <p>Video query: a pipeline of transforms</p>
    <p>transform count object</p>
    <p>transform track object</p>
    <p>transform decode</p>
    <p>transform detect object</p>
    <p>Vision algorithms chained together  Example: traffic counter pipeline</p>
  </div>
  <div class="page">
    <p>Video queries are expensive in resource usage</p>
    <p>transform count object</p>
    <p>transform track object</p>
    <p>transform decode</p>
    <p>transform b/g subtract</p>
    <p>Best car tracker [1]  1 fps on an 8-core CPU  DNN for object classification [2]  30GFlops</p>
    <p>[1] VOT Challenge 2015 Results. [2] Simonyan et al. CVPR abs/1409.1556, 2014</p>
    <p>When processing thousands of video streams in multi-tenant clusters  How to reduce processing cost of a query?  How to manage resources efficiently across queries?</p>
  </div>
  <div class="page">
    <p>Vision algorithms are intrinsically approximate</p>
    <p>License plate reader  window size  Car tracker  mapping metric  Object classifier  DNN model</p>
    <p>Query configuration: a combination of knob values</p>
    <p>Frame Rate Resolution Window Size Mapping Metric</p>
    <p>Knobs: parameters / implementation choices for transforms</p>
  </div>
  <div class="page">
    <p>Knobs impact quality and resource usage</p>
    <p>Frame Rate Resolution</p>
    <p>Quality=0.93, CPU=0.54</p>
    <p>Quality=0.57, CPU=0.09</p>
  </div>
  <div class="page">
    <p>Knobs impact quality and resource usage</p>
    <p>Frame Rate Resolution Window Size Mapping Metric</p>
    <p>DI6T HI6T 68RF 6IFT 2bMHFt 0DSSiQg 0HtUiF</p>
  </div>
  <div class="page">
    <p>Knobs impact quality and resource usage</p>
    <p>Orders of magnitude cheaper resource demand for little quality drop</p>
    <p>No analytical models to predict resource-quality tradeoff  Different from approximate SQL queries</p>
    <p>Q ua</p>
    <p>lit y</p>
    <p>of R</p>
    <p>es ul</p>
    <p>t</p>
    <p>Resource Demand [CPU cores, log scale]</p>
    <p>License Plate Reader</p>
  </div>
  <div class="page">
    <p>Diverse quality and lag requirements</p>
    <p>Quality?</p>
    <p>Lag?</p>
    <p>High</p>
    <p>Hours</p>
    <p>Moderate</p>
    <p>Few Seconds</p>
    <p>High</p>
    <p>Few Seconds</p>
    <p>Intelligent Traffic AMBER AlertToll Collection</p>
    <p>Lag: time difference between frame arrival and frame processing</p>
  </div>
  <div class="page">
    <p>Decide configuration and resource allocation to maximize quality and minimize lag</p>
    <p>within the resource capacity</p>
    <p>Configuration . Quality</p>
    <p>LagResource Allocation .</p>
    <p>Goal</p>
  </div>
  <div class="page">
    <p>Video analytics framework: Challenges</p>
    <p>Configuration . Quality</p>
    <p>LagResource Allocation .</p>
  </div>
  <div class="page">
    <p>VideoStorm: Solution Overview</p>
    <p>Profiler query Schedulerresource-quality</p>
    <p>profile</p>
    <p>utility function</p>
    <p>offline online</p>
    <p>Workers</p>
  </div>
  <div class="page">
    <p>VideoStorm: Solution Overview</p>
    <p>Profiler query Schedulerresource-quality</p>
    <p>profile</p>
    <p>utility function</p>
    <p>offline online</p>
    <p>Workers Builds model</p>
    <p>Reduces config space</p>
    <p>Trades off quality and lag across queries</p>
  </div>
  <div class="page">
    <p>VideoStorm: Solution Overview</p>
    <p>Profiler query Schedulerresource-quality</p>
    <p>profile</p>
    <p>offline online</p>
    <p>Workers</p>
  </div>
  <div class="page">
    <p>Offline: query profiling</p>
    <p>Profile: configuration  resource, quality  Ground-truth: labeled dataset or results from golden configuration  Explore configuration space, compute average resource and quality</p>
    <p>Q ua</p>
    <p>lit y</p>
    <p>of R</p>
    <p>es ul</p>
    <p>t</p>
    <p>Resource Demand [CPU cores, log scale]</p>
    <p>more efficient</p>
    <p>hi gh</p>
    <p>er q</p>
    <p>ua lit</p>
    <p>y  is strictly better than  in quality and resource efficiency</p>
  </div>
  <div class="page">
    <p>Offline: Pareto boundary of configuration space</p>
    <p>Pareto boundary: optimal configurations in resource efficiency and quality  Cannot further increase one without reducing the other  Orders of magnitude reduction in config. search space for scheduling</p>
    <p>Q ua</p>
    <p>lit y</p>
    <p>of R</p>
    <p>es ul</p>
    <p>t</p>
    <p>Resource Demand</p>
    <p>more efficient</p>
    <p>hi gh</p>
    <p>er q</p>
    <p>ua lit</p>
    <p>y</p>
    <p>Pareto optimal</p>
  </div>
  <div class="page">
    <p>VideoStorm: Solution Overview</p>
    <p>Profiler</p>
    <p>Schedulerresource-quality profile</p>
    <p>utility function</p>
    <p>offline online</p>
    <p>Workers</p>
  </div>
  <div class="page">
    <p>Online: utility function and scheduling</p>
    <p>Utility function: encode goals and sensitivities of quality and lag  Users set required quality and tolerable lag  Reward additional quality, penalize higher lag</p>
    <p>Schedule for two natural goals:  Maximize the minimum utility  (max-min) fairness  Maximize the total utility  overall performance</p>
    <p>Allow lag accumulation during resource shortage, then catch up</p>
    <p>higher quality</p>
    <p>higher lag</p>
  </div>
  <div class="page">
    <p>Online: scheduling approximate video queries</p>
    <p>Queries: blue and orange (tolerate 8s lag)</p>
    <p>Total CPU: 4  2  4  Fair scheduler: best</p>
    <p>configurations w/o lag</p>
    <p>Fair Quality-aware</p>
    <p>Quality-aware scheduler: allow lag  catch up</p>
    <p>lit y</p>
    <p>R es</p>
    <p>Ru rc</p>
    <p>e (c</p>
    <p>Rr es</p>
    <p>)</p>
    <p>.</p>
    <p>R es</p>
    <p>Ru rc</p>
    <p>e (c</p>
    <p>Rr es</p>
    <p>)</p>
    <p>.</p>
    <p>La g</p>
    <p>La g</p>
    <p>La g</p>
    <p>La g</p>
    <p>=1.0 =1.5</p>
    <p>C2 C1 C2</p>
    <p>C2 C1 C2 C3 C3 C2 C3</p>
    <p>C1</p>
  </div>
  <div class="page">
    <p>Additional Enhancements</p>
    <p>Handle incorrect resource profiles  Profiled resource demand might not correspond to actual queries  Robust to errors in query profiles</p>
    <p>Query placement and migration  Better utilization, load balancing and lag spreading</p>
    <p>Hierarchical scheduling  Cluster and machine level scheduling  Better efficiency and scalability</p>
  </div>
  <div class="page">
    <p>VideoStorm Evaluation Setup</p>
    <p>VideoStorm Manager Profiler + Scheduler</p>
    <p>Platform:  Microsoft Azure cluster  Each worker contains 4 cores</p>
    <p>of the 2.4GHz Intel Xeon processor and 14GB RAM</p>
    <p>Four types of vision queries:  license plate reader  car counter  DNN classifier  object tracker</p>
  </div>
  <div class="page">
    <p>Experiment Video Datasets</p>
    <p>Operational traffic cameras in Bellevue and Seattle</p>
    <p>14  30 frames per second, 240P  1080P resolution</p>
  </div>
  <div class="page">
    <p>Resource allocation during burst of queries</p>
    <p>Start with 300 queries:  Lag Goal=300s, low-quality ~60%  Lag Goal=20s, low-quality ~40%</p>
    <p>Burst of 150 seconds (50  200):  200 LPR queries (AMBER Alert) High-Quality, Lag Goal=20s</p>
    <p>VideoStorm scheduler:  dominate resource allocation significantly delay  run  with lower quality All meet quality and lag goals</p>
    <p>lu st HU C 3 8 s Lag Goal 300s Lag Goal 20s HLgh-4ualLty, Lag Goal 20s</p>
    <p>Lag Goal 300s Lag Goal 20s HLgh-4ualLty, Lag Goal 20s</p>
    <p>La g (s Hc )</p>
  </div>
  <div class="page">
    <p>Resource allocation during burst of queries</p>
    <p>Start with 300 queries:  Lag Goal=300s, low-quality ~60%  Lag Goal=20s, low-quality ~40%</p>
    <p>Burst of 150 seconds (50  200):  200 LPR queries (AMBER Alert) High-Quality, Lag Goal=20s</p>
    <p>VideoStorm scheduler: significantly delay  run  with lower quality  dominate resource allocation All meet quality and lag goals</p>
    <p>lu st HU C 3 8 s Lag Goal 300s Lag Goal 20s HLgh-4ualLty, Lag Goal 20s</p>
    <p>Lag Goal 300s Lag Goal 20s HLgh-4ualLty, Lag Goal 20s</p>
    <p>La g (s Hc )</p>
    <p>Compare to a fair scheduler with varying burst duration:  Quality improvement: up to 80%  Lag reduction: up to 7x</p>
  </div>
  <div class="page">
    <p>VideoStorm Scalability</p>
    <p>Frequently reschedule and reconfigure in reaction to changes of queries</p>
    <p>Even with thousands of queries, VideoStorm makes rescheduling decisions in just a few seconds</p>
  </div>
  <div class="page">
    <p>C 3</p>
    <p>U (w</p>
    <p>/ a da</p>
    <p>pt at</p>
    <p>io n)</p>
    <p>C 3</p>
    <p>U (w</p>
    <p>/o a</p>
    <p>da pt</p>
    <p>at io</p>
    <p>n) VideoStorm: account for errors in query profiles</p>
    <p>Errors in profile on resource demands  Over/under allocate resources  miss quality and lag goals!</p>
    <p>Example: 3 copies of same query, should get same allocation  Profiled resource synthetically doubled, halved and unchanged</p>
    <p>VideoStorm keeps track of mis-estimation factor   multiplicative error between the profiled demand and actual usage</p>
    <p>C 3</p>
    <p>U (w</p>
    <p>/ a da</p>
    <p>pt at</p>
    <p>io n)</p>
    <p>AccuUatH TwicH Half</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>VideoStorm is a video analytics system that scales to processing thousands of video streams in large clusters</p>
    <p>Offline profiler: efficiently estimates resource-quality profiles  Online scheduler: optimizes jointly for the quality and lag of queries</p>
    <p>VideoStorm is currently deployed in Bellevue Traffic Department, and soon will be deployed in more cities</p>
    <p>q u a lit</p>
    <p>y ,</p>
    <p>F 1</p>
    <p>s c o re</p>
    <p>resource demand [CPU cores, log scale]</p>
    <p>lu st HU C 3 8 s Lag Goal 300s Lag Goal 20s HLgh-4ualLty, Lag Goal 20s</p>
  </div>
</Presentation>
