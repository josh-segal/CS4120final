<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Operating Systems Should Manage Accelerators</p>
    <p>Sankaralingam Panneerselvam</p>
    <p>Michael M. Swift Computer Sciences Department</p>
    <p>University of Wisconsin, Madison, WI</p>
    <p>HotPar 2012 1</p>
  </div>
  <div class="page">
    <p>Accelerators</p>
    <p>Specialized execution units for common tasks  Data parallel tasks, encryption,</p>
    <p>video encoding, XML parsing, network processing etc.</p>
    <p>Task offloaded to accelerators  High performance, energy</p>
    <p>efficient (or both)</p>
    <p>HotPar 2012 2</p>
    <p>GPU</p>
    <p>Wire speed processor</p>
    <p>APU</p>
    <p>DySER</p>
    <p>Crypto accelerator</p>
  </div>
  <div class="page">
    <p>Why accelerators?  Moores law and Dennards scaling</p>
    <p>Single core to Multi-core  Dark Silicon: More transistors but limited power</p>
    <p>budget [Esmaeilzadeh et. al - ISCA 11]  Accelerators</p>
    <p>Trade-off area for specialized logic  Performance up by 250x and energy efficiency by</p>
    <p>HotPar 2012 3</p>
  </div>
  <div class="page">
    <p>Heterogeneity everywhere  Focus on diverse heterogeneous systems  Processing elements with different properties in the</p>
    <p>same system</p>
    <p>Our work  How can OS support this architecture?</p>
    <p>applications</p>
    <p>HotPar 2012 4</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Motivation  Classification of accelerators  Challenges  Our model - Rinnegan  Conclusion</p>
    <p>HotPar 2012 5</p>
  </div>
  <div class="page">
    <p>IBM wire-speed processor</p>
    <p>HotPar 2012 6</p>
    <p>Accelerator Complex CPU cores</p>
    <p>Memory controller</p>
  </div>
  <div class="page">
    <p>Classification of accelerators</p>
    <p>Accelerators classified based on their accessibility</p>
    <p>Acceleration devices  Co-Processor  Asymmetric cores</p>
    <p>HotPar 2012 7</p>
  </div>
  <div class="page">
    <p>Classification</p>
    <p>HotPar 2012 8</p>
    <p>Properties Acceleration devices</p>
    <p>Co-Processor Asymmetric cores</p>
    <p>Systems GPU, APU, Crypto accelerators in Sun Niagara chips etc.</p>
    <p>C-cores, DySER, IBM wire-speed processor</p>
    <p>NVIDIAs Kal-El processor, Scalable cores like WiDGET</p>
    <p>Location Off/On-chip device On-chip device Regular core that can execute threads</p>
    <p>A cc</p>
    <p>es si</p>
    <p>bi lit</p>
    <p>y Control Device drivers ISA instructions Thread migration, RPC</p>
    <p>Data DMA or zero copy System memory Cache coherency</p>
    <p>Resource contention Multiple applications might want to make use of the device</p>
    <p>Sharing of resource across multiple cores could result in contention</p>
    <p>Multiple threads might want to access the special core</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>HotPar 2012 9</p>
    <p>Task invocation  Execution on different processing elements</p>
    <p>Virtualization  Sharing across multiple applications</p>
    <p>Scheduling  Time multiplexing the accelerators</p>
  </div>
  <div class="page">
    <p>Task invocation</p>
    <p>HotPar 2012 10</p>
    <p>Current systems decide statically on where to execute the task</p>
    <p>Programmer problems where system can help  Data granularity  Power budget limitation  Presence/availability of</p>
    <p>accelerator AES Crypto accelerator</p>
  </div>
  <div class="page">
    <p>Virtualization</p>
    <p>HotPar 2012 11</p>
    <p>Data addressing for accelerators  Accelerators need to understand</p>
    <p>virtual addresses  OS must provide virtual-address</p>
    <p>translations</p>
    <p>Process preemption after launching a computation  System must be aware of</p>
    <p>computation completion</p>
    <p>Virtual memory</p>
    <p>crypto</p>
    <p>XML</p>
    <p>cr yp</p>
    <p>t 0x</p>
    <p>A cc</p>
    <p>el er</p>
    <p>at o r</p>
    <p>un it s</p>
    <p>CPU cores</p>
  </div>
  <div class="page">
    <p>Scheduling</p>
    <p>HotPar 2012 12</p>
    <p>Scheduling needed to prioritize access to shared accelerators</p>
    <p>User-mode access to accelerators complicates scheduling decisions  OS cannot interpose on every</p>
    <p>request</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Motivation  Classification of Accelerators  Challenges  Our model - Rinnegan  Conclusion</p>
    <p>HotPar 2012 13</p>
  </div>
  <div class="page">
    <p>Rinnegan</p>
    <p>Goals  Application leverage the heterogeneity  OS enforces system wide policies</p>
    <p>Rinnegan tries to provide support for different class of accelerators  Flexible task execution by Accelerator stub  Accelerator agent for safe multiplexing  Enforcing system policy through Accelerator</p>
    <p>monitor</p>
    <p>HotPar 2012 14</p>
  </div>
  <div class="page">
    <p>Accelerator stub</p>
    <p>Entry point for accelerator invocation and a dispatcher</p>
    <p>Abstracts different processing elements</p>
    <p>Binding - Selecting the best implementation for the task</p>
    <p>Static: during compilation  Early: at process start  Late: at call</p>
    <p>HotPar 2012 15</p>
    <p>Process making use of</p>
    <p>accelerator</p>
    <p>Stub</p>
    <p>{ Encrypt</p>
    <p>through AES instructions</p>
    <p>}</p>
    <p>{ Offload to</p>
    <p>crypto Accelerator</p>
    <p>}</p>
  </div>
  <div class="page">
    <p>Accelerator agent</p>
    <p>Manages an accelerator  Roles of an agent  Virtualize accelerator  Forwarding requests to</p>
    <p>the accelerator  Implement scheduling</p>
    <p>decisions  Expose accounting</p>
    <p>information to the OS</p>
    <p>HotPar 2012 16</p>
    <p>Resource allocator</p>
    <p>Process trying to offload a parallel task</p>
    <p>Stub</p>
    <p>User Space</p>
    <p>Kernel Space</p>
    <p>Asymmetric core</p>
    <p>Thread migration</p>
    <p>Device driver</p>
    <p>Process can communicate directly with accelerator</p>
    <p>Stub</p>
    <p>A cc</p>
    <p>el er</p>
    <p>at o r</p>
    <p>ag en</p>
    <p>ts Hardware</p>
  </div>
  <div class="page">
    <p>Accelerator monitor</p>
    <p>Monitors information like utilization of resources</p>
    <p>Responsible for systemwide energy and performance goals</p>
    <p>Acts as an online modeling tool  Helps in deciding where to</p>
    <p>schedule the task</p>
    <p>HotPar 2012 17</p>
    <p>Accelerator agent</p>
    <p>Process making use of accelerator</p>
    <p>Stub</p>
    <p>Accelerator monitor</p>
    <p>User Space</p>
    <p>Kernel Space</p>
    <p>Accelerator</p>
    <p>Hardware</p>
  </div>
  <div class="page">
    <p>Programming model</p>
    <p>Based on task level parallelism</p>
    <p>Task creation and execution  Write: different</p>
    <p>implementations  Launch: similar to function</p>
    <p>invocation  Fetching result: supporting</p>
    <p>synchronous/asynchronous invocation</p>
    <p>Example: Intel TBB/Cilk</p>
    <p>HotPar 2012 18</p>
    <p>application() { task = cryptStub(inputData, outputData); ... waitFor(task); } &lt;TaskHandle&gt; cryptStub(input, output) { if(factor1 == true) output = implmn_AES(input) //or// else if(factor2 == true) output = implmn_CACC(input) }</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>HotPar 2012 19</p>
    <p>Accelerator agent</p>
    <p>Process making use of accelerator</p>
    <p>Stub</p>
    <p>Accelerator monitor</p>
    <p>Other kernel components</p>
    <p>Process User Space</p>
    <p>Kernel Space</p>
    <p>CPU cores Accelerator</p>
    <p>Direct communication with accelerator</p>
  </div>
  <div class="page">
    <p>Related work</p>
    <p>HotPar 2012 20</p>
    <p>Task invocation based on data granularity  Merge, Harmony</p>
    <p>Generating device specific implementation of same task</p>
    <p>GPUOcelot</p>
    <p>Resource scheduling: Sharing between multiple applications</p>
    <p>PTask, Pegasus</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Accelerators common in future systems  Rinnegan embraces accelerators through stub</p>
    <p>mechanism, agent and monitoring components</p>
    <p>Other challenges  Data movement between devices  Power measurement</p>
    <p>HotPar 2012 21</p>
  </div>
  <div class="page">
    <p>HotPar 2012 22</p>
    <p>Thank You</p>
  </div>
</Presentation>
