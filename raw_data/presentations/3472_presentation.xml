<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary</p>
    <p>Dependency-Preserving Data Compaction for</p>
    <p>Scalable Forensic Analysis 1</p>
    <p>Md Nahid Hossain, Junao Wang, R. Sekar, and Sco D. Stoller</p>
    <p>CNS-1319137, CNS-1421893 and CCF-1414078) and ONR (grants N00014-15-1-2208, N00014-15-1-2378</p>
    <p>and N00014-17-1-2891). 1 / 44</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Motivation Contribution Background</p>
    <p>Long-running Aack Campaigns on the Increase ...</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Motivation Contribution Background</p>
    <p>Motivation</p>
    <p>Aacks may be detected a long time aer</p>
    <p>System logs need to be stored for several months or more</p>
    <p>Log data can be GBs per day, per host Enterprises with 1000s of hosts can produce petabytes of data per year</p>
    <p>Not just a storage cost: forensic analysis of large data sets can be</p>
    <p>painfully slow</p>
    <p>Motivates the need for data compaction techniques.</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Motivation Contribution Background</p>
    <p>Goals</p>
    <p>Work with readily available system-call audit data, e.g., Windows</p>
    <p>ETW and Linux audit logs</p>
    <p>Fine-grained dependency tracking can improve forensic analysis, but such</p>
    <p>tracking is not ready for large-scale deployment.</p>
    <p>Reduce data volume without degrading forensic analysis. Events can be dropped if they dont change (most) forensic analysis results.</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Motivation Contribution Background</p>
    <p>Contributions</p>
    <p>Two novel graph-based reduction techniques: Full dependence (FD) and Source dependence (SD) preservation.</p>
    <p>Eicient algorithms and optimizations for implementing reductions</p>
    <p>Can process/analyze about 1M events per second per core</p>
    <p>Compact data representation techniques for</p>
    <p>oline storage: 35x smaller on average (before compression) online analysis: Less than 5 bytes of storage per event in the original data.</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Motivation Contribution Background</p>
    <p>Background: Dependence Graphs</p>
    <p>a.com b.com</p>
    <p>P Q</p>
    <p>C L</p>
    <p>E 1</p>
    <p>Node: a subject (process) or object (file/network connection). Edge: timestamped event, oriented in the direction of information flow.</p>
    <p>e.g., flow from P to C occurred at t = 3</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Motivation Contribution Background</p>
    <p>Forensic Analysis</p>
    <p>Backward analysis: Given a suspect node (C), trace back to the entry point of aack (a.com)</p>
    <p>a.com b.com</p>
    <p>P Q</p>
    <p>C L</p>
    <p>E 1</p>
    <p>Forward/Impact analysis: Identify all nodes potentially compromised</p>
    <p>by a suspect node (b.com).</p>
    <p>a.com b.com</p>
    <p>P Q</p>
    <p>C L</p>
    <p>E 1</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Motivation Contribution Background</p>
    <p>Forensic Analysis</p>
    <p>Backward analysis: Given a suspect node (C), trace back to the entry point of aack (a.com)</p>
    <p>a.com b.com</p>
    <p>P Q</p>
    <p>C L</p>
    <p>E 1</p>
    <p>Forward/Impact analysis: Identify all nodes potentially compromised</p>
    <p>by a suspect node (b.com).</p>
    <p>a.com b.com</p>
    <p>P Q</p>
    <p>C L</p>
    <p>E 1</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Log-based reduction Graph-based reduction</p>
    <p>Reduction Techniques</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Log-based reduction Graph-based reduction</p>
    <p>Reduction Techniques</p>
    <p>Log-based:</p>
    <p>Examine a sequence of events</p>
    <p>Determine if some of them can be eliminated without altering</p>
    <p>dependencies.</p>
    <p>Graph-based:</p>
    <p>Construct a dependence graph</p>
    <p>Use graph reachability to prune redundant events</p>
    <p>Can leverage global context for more powerful reductions</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Log-based reduction Graph-based reduction</p>
    <p>Log-based reduction: Run-Merging</p>
    <p>Merge successive events if they are identical</p>
    <p>(1) A reads F1</p>
    <p>(3) A reads F1</p>
    <p>(4) B writes F2</p>
    <p>(6) B writes F2</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Log-based reduction Graph-based reduction</p>
    <p>Log-based reduction: Run-Merging</p>
    <p>Merge successive events if they are identical</p>
    <p>(1) A reads F1</p>
    <p>(4) B writes F2</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Log-based reduction Graph-based reduction</p>
    <p>Log-based reduction: Run-Merging</p>
    <p>Merge successive events if they are identical</p>
    <p>(1) A reads F1</p>
    <p>(2) B writes F2</p>
    <p>(3) A reads F1</p>
    <p>(4) B writes F2</p>
    <p>(5) A reads F1</p>
    <p>(6) B writes F2</p>
    <p>Limitation: thrown o by intervening events. (No reduction possible.)</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Log-based reduction Graph-based reduction</p>
    <p>Log-based reduction: Xu et al [CCS 2016]</p>
    <p>Continue merging identical events if intervening events are on dierent</p>
    <p>objects and subjects.</p>
    <p>(1) A reads F1</p>
    <p>(2) B writes F2</p>
    <p>(3) A reads F1</p>
    <p>(4) B writes F2</p>
    <p>(5) A reads F1</p>
    <p>(6) B writes F2</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Log-based reduction Graph-based reduction</p>
    <p>Log-based reduction: Xu et al [CCS 2016]</p>
    <p>Continue merging identical events if intervening events are on dierent</p>
    <p>objects and subjects.</p>
    <p>(1) A reads F1</p>
    <p>(2) B writes F2</p>
    <p>Reductions are now restored.</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Log-based reduction Graph-based reduction</p>
    <p>Log-based reduction: Limitations</p>
    <p>Lack of global context makes it diicult to safely merge events in</p>
    <p>several common scenarios, e.g., pipes, log-files, etc.</p>
    <p>Communication via pipe</p>
    <p>P E Q 2</p>
    <p>Xu et al cannot merge (4) with (2) due to outgoing edge from E at (3). 16 / 44</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Log-based reduction Graph-based reduction</p>
    <p>Our Approach: Full Dependence (FD) Preservation</p>
    <p>Continue to merge identical events if intervening events dont alter</p>
    <p>global dependence of the events source, e.g., node P below.</p>
    <p>Before reduction</p>
    <p>P E Q 2</p>
    <p>Aer reduction</p>
    <p>P E Q[2, 6] [3, 7]</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Log-based reduction Graph-based reduction</p>
    <p>Our Approach: Full Dependence (FD) Preservation</p>
    <p>Continue to merge identical events if intervening events dont alter</p>
    <p>global dependence of the events source, e.g., node P below.</p>
    <p>Before reduction</p>
    <p>P E Q 2</p>
    <p>Aer reduction</p>
    <p>P E Q[2, 6] [3, 7]</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Log-based reduction Graph-based reduction</p>
    <p>Source Dependence (SD) Preservation</p>
    <p>Takes advantage of how forensic analysis is</p>
    <p>typically done.</p>
    <p>Backtrack from suspect node to a source node</p>
    <p>(entry point), then perform forward analysis</p>
    <p>Need only preserve dependencies from</p>
    <p>source nodes</p>
    <p>i.e., nodes with no incoming edges</p>
    <p>More powerful than FD: can drop all edges</p>
    <p>that dont introduce new dependencies on source nodes</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Log-based reduction Graph-based reduction</p>
    <p>Source Dependence (SD) Preservation</p>
    <p>Takes advantage of how forensic analysis is</p>
    <p>typically done.</p>
    <p>Backtrack from suspect node to a source node</p>
    <p>(entry point), then perform forward analysis</p>
    <p>Need only preserve dependencies from</p>
    <p>source nodes</p>
    <p>i.e., nodes with no incoming edges</p>
    <p>More powerful than FD: can drop all edges</p>
    <p>that dont introduce new dependencies on source nodes</p>
    <p>F</p>
    <p>P P P</p>
    <p>F</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Log-based reduction Graph-based reduction</p>
    <p>Source Dependence (SD) Preservation</p>
    <p>Takes advantage of how forensic analysis is</p>
    <p>typically done.</p>
    <p>Backtrack from suspect node to a source node</p>
    <p>(entry point), then perform forward analysis</p>
    <p>Need only preserve dependencies from</p>
    <p>source nodes</p>
    <p>i.e., nodes with no incoming edges</p>
    <p>More powerful than FD: can drop all edges</p>
    <p>that dont introduce new dependencies on source nodes</p>
    <p>F</p>
    <p>P P P</p>
    <p>F</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Redundant Edge Redundant Node Cycle-collapsing</p>
    <p>Optimizations for Eicient Implementation</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Redundant Edge Redundant Node Cycle-collapsing</p>
    <p>Eicient Implementation</p>
    <p>Global context is more powerful, but is expensive to compute on</p>
    <p>timestamped graphs</p>
    <p>Reachability is a function of time, unlike standard graphs</p>
    <p>Dependencies cannot be cached and reused</p>
    <p>Solution: Convert to a standard graph by versioning all nodes. Develop optimizations that reduce number of versions by 20x</p>
    <p>On average, just 1.26 versions per object or subject</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Redundant Edge Redundant Node Cycle-collapsing</p>
    <p>Versioned Graph</p>
    <p>Timestamped Graph</p>
    <p>F S G T2 3</p>
    <p>Naive Versioned Graph</p>
    <p>S0F 0</p>
    <p>S2</p>
    <p>G0</p>
    <p>G3</p>
    <p>G5</p>
    <p>T 0</p>
    <p>T 4</p>
    <p>T 6</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Redundant Edge Redundant Node Cycle-collapsing</p>
    <p>Redundant Edge Optimization (REO)</p>
    <p>Discard edge from u to v if there is already an edge from</p>
    <p>the latest version of u to some version of v.</p>
    <p>Naive Versioned Graph</p>
    <p>S0F 0</p>
    <p>S2</p>
    <p>G0</p>
    <p>G3</p>
    <p>G5</p>
    <p>T 0</p>
    <p>T 4</p>
    <p>T 6</p>
    <p>Aer Applying REO Optimization</p>
    <p>S0F 0</p>
    <p>S2</p>
    <p>G0</p>
    <p>G3</p>
    <p>T 0</p>
    <p>T 4</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Redundant Edge Redundant Node Cycle-collapsing</p>
    <p>Redundant node optimization (RNO)</p>
    <p>Skip new version</p>
    <p>generation for sink</p>
    <p>nodes (i.e., nodes</p>
    <p>with out-degree zero)</p>
    <p>Versioned graph with REO optimization</p>
    <p>S0F 0</p>
    <p>S2</p>
    <p>G0</p>
    <p>G3</p>
    <p>T 0</p>
    <p>T 4</p>
    <p>Aer applying RNO optimization</p>
    <p>F 0 S0,2 G0,3 T 0,4</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Redundant Edge Redundant Node Cycle-collapsing</p>
    <p>Cycle-Collapsing Optimization (CCO)</p>
    <p>Before adding an edge from a version ur to v s, if there is a cycle involving u and v, then:</p>
    <p>Combine the two nodes into a supernode representing an</p>
    <p>equivalence class</p>
    <p>Discard future edges between combined nodes</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Redundant Edge Redundant Node Cycle-collapsing</p>
    <p>Optimized Versioned Graph</p>
    <p>Timestamped Graph</p>
    <p>a.com b.com</p>
    <p>P Q</p>
    <p>C L</p>
    <p>E 1</p>
    <p>Optimized Versioned Graph</p>
    <p>a.com b.com</p>
    <p>P 1 P 4 Q</p>
    <p>C L</p>
    <p>E</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Redundant Edge Redundant Node Cycle-collapsing</p>
    <p>Optimized Versioned Graph</p>
    <p>Timestamped Graph</p>
    <p>a.com b.com</p>
    <p>P Q</p>
    <p>C L</p>
    <p>E 1</p>
    <p>Optimized Versioned Graph</p>
    <p>a.com b.com</p>
    <p>P 1 P 4 Q</p>
    <p>C L</p>
    <p>E</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Dataset Reduction Forensic Analysis</p>
    <p>Experimental Evaluation</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Dataset Reduction Forensic Analysis</p>
    <p>Evaluation Dataset</p>
    <p>Dataset from DARPA Transparent</p>
    <p>Computing Programs 2 nd</p>
    <p>adversarial engagement</p>
    <p>Data from Windows and Linux desktop</p>
    <p>systems over 7 days.</p>
    <p>Benign background activity, plus aacks</p>
    <p>involving full APT life-cycle.</p>
    <p>Data from our lab servers (Linux).</p>
    <p>Benign use over 7 days.</p>
    <p>Dataset Size</p>
    <p>Linux Desktop 12.9 GB</p>
    <p>Windows Desktop 2.1 GB</p>
    <p>SSH/File Server 6.7 GB</p>
    <p>Web server 1.3 GB</p>
    <p>Mail server 1.2 GB</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Dataset Reduction Forensic Analysis</p>
    <p>Data Size (Millions of events)</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Dataset Reduction Forensic Analysis</p>
    <p>Reduction Factor</p>
    <p>Average:</p>
    <p>Xu et al: 1.8x</p>
    <p>FD: 7.8x</p>
    <p>SD: 10.2x</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Dataset Reduction Forensic Analysis</p>
    <p>Average No. of Versions per node</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Dataset Reduction Forensic Analysis</p>
    <p>Total Size on Disk (GB)</p>
    <p>Factor of</p>
    <p>decrease:</p>
    <p>FD: 35.3x</p>
    <p>SD: 41.4x</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Dataset Reduction Forensic Analysis</p>
    <p>Dependence Graph Size (MB)</p>
    <p>Total memory use across all 5 data sets (about 100M events originally)</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Dataset Reduction Forensic Analysis</p>
    <p>(Preliminary) Results on DARPA 3 rd</p>
    <p>Engagement</p>
    <p>Dataset about 10x larger</p>
    <p>Linux Desktop: 800M events, reduced by 70x using FD. Windows Desktop: 70M events, reduced by 10x using FD.</p>
    <p>Data size and several other dierences between the two auditing systems</p>
    <p>contributed to the large dierence in reduction rates.</p>
    <p>Summary: Larger data sets oer more opportunities for reduction Long running processes experience extended periods without new dependencies.</p>
    <p>During these periods, FD eliminates most operations.</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Dataset Reduction Forensic Analysis</p>
    <p>Impact of Reduction on Forensic Analysis</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Dataset Reduction Forensic Analysis</p>
    <p>Do reductions interfere with forensic analysis?</p>
    <p>In theory: We prove that</p>
    <p>FD preserves forward/backward analysis results for all nodes.</p>
    <p>SD preserves forward/backward analysis results for source nodes.</p>
    <p>In practice: We evaluated during the DARPA adversarial exercise</p>
    <p>We had no prior knowledge about aacks</p>
    <p>Performed forensic analysis in real-time on FD-reduced</p>
    <p>dependence graph stored in main memory</p>
    <p>Analysis triggered when our Sleuth [Sec 2017] system flagged a</p>
    <p>suspicious event.</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Dataset Reduction Forensic Analysis</p>
    <p>Example Graph Constructed aer Analysis</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary Dataset Reduction Forensic Analysis</p>
    <p>Forensic analysis with and without Reductions</p>
    <p>Dataset</p>
    <p>Aack</p>
    <p>Scenario</p>
    <p>Analysis</p>
    <p>Type</p>
    <p>Number of Entities</p>
    <p>Base FD SD</p>
    <p>Linux</p>
    <p>Desktop</p>
    <p>A</p>
    <p>Backward 7 7 7</p>
    <p>Forward 15 15 15</p>
    <p>B</p>
    <p>Backward 3 3 3</p>
    <p>Forward 10 10 10</p>
    <p>Windows</p>
    <p>Desktop</p>
    <p>A</p>
    <p>Backward 4 4 4</p>
    <p>Forward 17 17 17</p>
    <p>B</p>
    <p>Backward 2 2 2</p>
    <p>Forward 9 9 9</p>
    <p>C</p>
    <p>Backward 4 4 4</p>
    <p>Forward 7 7 7</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary</p>
    <p>Related Work</p>
    <p>LogGC [CCS 2013], ProTracer [NDSS 2016], MPI [Sec 2017]: Specialized for their fine-grained flow tracking system</p>
    <p>We target coarse-grained auditing, which can be deployed in large enterprises</p>
    <p>Xu et al [CCS 2016]: Log-based reduction uses only local context, is unable to achieve the kind of reductions we get using global context.</p>
    <p>Others</p>
    <p>Provenance collection techniques (e.g., PASS [ATC 2006]) incorporate</p>
    <p>run-merging, plus cycle detection/avoidance techniques.</p>
    <p>ProvWalls [TOIT 2017] describes reductions for MAC systems. Many other related works discussed in the paper.</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary</p>
    <p>Summary</p>
    <p>Developed highly eective reduction techniques for audit logs.</p>
    <p>FD and SD achieve 5x to 19x reduction in the number of events</p>
    <p>Developed eicient algorithms and optimizations for FD and SD</p>
    <p>Our techniques can process and analyze about 1M events per second per host.</p>
    <p>Presented compact data representation techniques to achieve over</p>
    <p>an order of magnitude reduction in storage and main memory sizes.</p>
    <p>Thank you! estions?</p>
  </div>
  <div class="page">
    <p>Intro Reductions Optimizations Evaluation Summary</p>
    <p>Summary</p>
    <p>Developed highly eective reduction techniques for audit logs.</p>
    <p>FD and SD achieve 5x to 19x reduction in the number of events</p>
    <p>Developed eicient algorithms and optimizations for FD and SD</p>
    <p>Our techniques can process and analyze about 1M events per second per host.</p>
    <p>Presented compact data representation techniques to achieve over</p>
    <p>an order of magnitude reduction in storage and main memory sizes.</p>
    <p>Thank you! estions?</p>
  </div>
</Presentation>
