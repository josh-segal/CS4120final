<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Modeling Semantic Cognition as Logical Dimensionality Reduction</p>
    <p>Yarden Katz, Noah D. Goodman, Kristian Kersting, Charles Kemp, Joshua B. Tenenbaum</p>
    <p>Dept. of Brain and Cognitive Sciences and CSAIL MIT</p>
  </div>
  <div class="page">
    <p>Theories in Semantic Cognition Our knowledge of the world is often in the form of theories.</p>
    <p>Theories are abstract systems of concepts and relations that compress, predict and explain complex phenomena.</p>
    <p>Collins and Quillian, 1969</p>
    <p>How are theories used, represented and learned?</p>
  </div>
  <div class="page">
    <p>Theories require abstraction The taxonomic tree by itself is not a theory -- need abstract laws too:</p>
  </div>
  <div class="page">
    <p>Theories require abstraction The taxonomic tree by itself is not a theory -- need abstract laws too:</p>
    <p>properties inherit down categories</p>
    <p>category membership is transitive LAWS</p>
  </div>
  <div class="page">
    <p>Theories require abstraction The taxonomic tree by itself is not a theory -- need abstract laws too:</p>
    <p>properties inherit down categories</p>
    <p>category membership is transitive LAWS</p>
    <p>+ LAWS = INFERENCES</p>
    <p>These laws apply to any domain of categories and properties.</p>
    <p>Example domain:</p>
  </div>
  <div class="page">
    <p>Theories reduce dimensionality: Taxonomy INPUT OUTPUT</p>
  </div>
  <div class="page">
    <p>Theories reduce dimensionality: Taxonomy INPUT OUTPUT</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
  </div>
  <div class="page">
    <p>Theories reduce dimensionality: Taxonomy INPUT OUTPUT</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>TAXONOMY THEORY</p>
    <p>properties inherit down categories category membership is transitive</p>
    <p>LAWS</p>
  </div>
  <div class="page">
    <p>Theories reduce dimensionality: Taxonomy INPUT OUTPUT</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>TAXONOMY THEORY</p>
    <p>properties inherit down categories category membership is transitive</p>
    <p>LAWS</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal) has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, fish) is_a(canary, shark) is_a(canary, salmon)</p>
    <p>has_a(salmon, can_sing) has_a(salmon, can_bite) has_a(salmon, can_fly)</p>
    <p>... ...</p>
  </div>
  <div class="page">
    <p>Inference and learning in taxonomy Observe sparse positive facts:</p>
  </div>
  <div class="page">
    <p>Inference and learning in taxonomy Observe sparse positive facts:</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
  </div>
  <div class="page">
    <p>Inference and learning in taxonomy Observe sparse positive facts:</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
    <p>TAXONOMY THEORY</p>
    <p>properties inherit down categories category membership is transitive</p>
    <p>LAWS</p>
  </div>
  <div class="page">
    <p>Inference and learning in taxonomy Observe sparse positive facts:</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
    <p>Inference</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>TAXONOMY THEORY</p>
    <p>properties inherit down categories category membership is transitive</p>
    <p>LAWS</p>
  </div>
  <div class="page">
    <p>Inference and learning in taxonomy Observe sparse positive facts:</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
    <p>Inference</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>TAXONOMY THEORY</p>
    <p>properties inherit down categories category membership is transitive</p>
    <p>LAWS</p>
    <p>is_a(eagle, bird) is_a(eagle, animal) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal)</p>
    <p>is_a(fish, animal)</p>
    <p>has_a(canary, can_fly)</p>
    <p>has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite)</p>
    <p>has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly)</p>
    <p>has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, fish) is_a(canary, shark) is_a(canary, salmon)</p>
    <p>has_a(salmon, can_sing) has_a(salmon, can_bite) has_a(salmon, can_fly)</p>
    <p>... ...</p>
    <p>has_a(canary, can_sing)</p>
  </div>
  <div class="page">
    <p>Inference and learning in taxonomy Observe sparse positive facts:</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
    <p>Inference</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>TAXONOMY THEORY</p>
    <p>properties inherit down categories category membership is transitive</p>
    <p>LAWS</p>
    <p>Learning</p>
    <p>is_a(eagle, bird) is_a(eagle, animal) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal)</p>
    <p>is_a(fish, animal)</p>
    <p>has_a(canary, can_fly)</p>
    <p>has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite)</p>
    <p>has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly)</p>
    <p>has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, fish) is_a(canary, shark) is_a(canary, salmon)</p>
    <p>has_a(salmon, can_sing) has_a(salmon, can_bite) has_a(salmon, can_fly)</p>
    <p>... ...</p>
    <p>has_a(canary, can_sing)</p>
  </div>
  <div class="page">
    <p>Inference is hard</p>
    <p>Observations do not uniquely determine underlying tree!</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
    <p>Inference</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>TAXONOMY THEORY</p>
    <p>properties inherit down categories category membership is transitive</p>
    <p>LAWS</p>
    <p>is_a(eagle, bird) is_a(eagle, animal) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal)</p>
    <p>is_a(fish, animal)</p>
    <p>has_a(canary, can_fly)</p>
    <p>has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite)</p>
    <p>has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly)</p>
    <p>has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, fish) is_a(canary, shark) is_a(canary, salmon)</p>
    <p>has_a(salmon, can_sing) has_a(salmon, can_bite) has_a(salmon, can_fly)</p>
    <p>... ...</p>
    <p>has_a(canary, can_sing)</p>
  </div>
  <div class="page">
    <p>Alternative underlying tree: Undergeneralization Observe sparse positive facts:</p>
    <p>TAXONOMY THEORY</p>
    <p>properties inherit down categories category membership is transitive</p>
    <p>LAWS</p>
    <p>Inference</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
    <p>is_a(eagle, bird) is_a(eagle, animal) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal)</p>
    <p>is_a(fish, animal)</p>
    <p>has_a(canary, can_fly)</p>
    <p>has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite)</p>
    <p>has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly)</p>
    <p>has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, fish) is_a(canary, shark) is_a(canary, salmon)</p>
    <p>has_a(salmon, can_sing) has_a(salmon, can_bite) has_a(salmon, can_fly)</p>
    <p>... ...</p>
    <p>has_a(canary, can_sing)</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>eats</p>
  </div>
  <div class="page">
    <p>Inference</p>
    <p>Alternative underlying tree: Overgeneralization Observe sparse positive facts:</p>
    <p>TAXONOMY THEORY</p>
    <p>properties inherit down categories category membership is transitive</p>
    <p>LAWS</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
    <p>is_a(eagle, bird) is_a(eagle, animal) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal)</p>
    <p>is_a(fish, animal)</p>
    <p>has_a(canary, can_fly)</p>
    <p>has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite)</p>
    <p>has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly)</p>
    <p>has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, fish) is_a(canary, shark) is_a(canary, salmon)</p>
    <p>has_a(salmon, can_sing) has_a(salmon, can_bite) has_a(salmon, can_fly)</p>
    <p>... ...</p>
    <p>has_a(canary, can_sing)</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>can_swim</p>
  </div>
  <div class="page">
    <p>Inference</p>
    <p>Alternative underlying tree: Overgeneralization Observe sparse positive facts:</p>
    <p>TAXONOMY THEORY</p>
    <p>properties inherit down categories category membership is transitive</p>
    <p>LAWS</p>
    <p>has_a(canary, can_swim) has_a(eagle, can_swim) has_a(bird, can_swim) has_a(animal, can_swim)</p>
    <p>Unobserved facts should penalize this tree</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
    <p>is_a(eagle, bird) is_a(eagle, animal) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal)</p>
    <p>is_a(fish, animal)</p>
    <p>has_a(canary, can_fly)</p>
    <p>has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite)</p>
    <p>has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly)</p>
    <p>has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, fish) is_a(canary, shark) is_a(canary, salmon)</p>
    <p>has_a(salmon, can_sing) has_a(salmon, can_bite) has_a(salmon, can_fly)</p>
    <p>... ...</p>
    <p>has_a(canary, can_sing)</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>can_swim</p>
  </div>
  <div class="page">
    <p>INPUT</p>
    <p>OUTPUT</p>
    <p>KINSHIP THEORY</p>
    <p>Christopher = Penelope</p>
    <p>Margaret = Arthur Victoria = James</p>
    <p>Colin Charlotte</p>
    <p>Andrew = Christine</p>
    <p>Jennifer = Charles</p>
    <p>spouse= parent</p>
    <p>a mother is a female parent a father is a male parent</p>
    <p>...</p>
    <p>Theories reduce dimensionality: Kinship</p>
    <p>mother(Penelope, Arthur) mother(Penelope, Victoria) mother(Victoria, Colin) mother(Victoria, Charlotte)</p>
    <p>mother father grandfather father(Christopher, Arthur) father(Christopher, Victoria) father(James, Colin) father(James, Charlotte)</p>
    <p>grandfather(Christopher, Colin) grandfather(Christopher, Charlotte) grandfather(Arthur, Colin) grandfather(Arthur, Charlotte)</p>
    <p>grandmother grandmother(Christine, Colin) grandmother(Christine, Charlotte) grandmother(Penelope, Colin) grandmother(Penelope, Charlotte)</p>
    <p>...</p>
  </div>
  <div class="page">
    <p>INPUT OUTPUT</p>
    <p>CAUSALITY THEORY</p>
    <p>X causes Y X and Y correlated</p>
    <p>Theories reduce dimensionality: Causality</p>
    <p>Burglary Earthquake</p>
    <p>Alarm</p>
    <p>JohnCalls MaryCalls</p>
    <p>corr(Burglary, Alarm) corr(Earthquake, Alarm) corr(Alarm, JohnCalls) corr(Alarm, MaryCalls)</p>
    <p>corr(JohnCalls,MaryCalls | Alarm) corr(Burglary, MaryCalls | Alarm) corr(Burglary, JohnCalls | Alarm)</p>
    <p>...</p>
  </div>
  <div class="page">
    <p>Our approach</p>
    <p>Theories used to reduce high-dimensional space of facts to set of low-dimensional core facts using abstract laws.</p>
    <p>Learner needs to go from sparse/noisy observations of highdimensional space to underlying core facts and laws.</p>
    <p>Formalize this by defining a probability distribution over structured space of core facts and laws.</p>
    <p>We use Bayesian inference to handle the tasks of inference and learning.</p>
  </div>
  <div class="page">
    <p>Representation of theories Theories have a set of core relations (latent), related to each other and other surface relations (observable) via laws.</p>
  </div>
  <div class="page">
    <p>Representation of theories Theories have a set of core relations (latent), related to each other and other surface relations (observable) via laws.</p>
    <p>Core relations: F(X, Y) G(X, P)</p>
    <p>Surface relations: is_a(X, Y)</p>
    <p>has_a(X, P)</p>
    <p>Subset of first order logic</p>
    <p>Laws:</p>
    <p>is_a(X, Y)  F(X, Y) has_a(X, P)  G(X, P) is_a(X, Y)  is_a(X, Z)  is_a(Z, Y) has_a(X, P)  is_a(X, Y)  has_a(Y, P)</p>
    <p>TAXONOMY THEORY</p>
    <p>TAXONOMY THEORY</p>
    <p>... ...</p>
  </div>
  <div class="page">
    <p>Representation of theories Theories have a set of core relations (latent), related to each other and other surface relations (observable) via laws.</p>
    <p>Core relations: F(X, Y) G(X, P)</p>
    <p>Surface relations: is_a(X, Y)</p>
    <p>has_a(X, P)</p>
    <p>Subset of first order logic</p>
    <p>Laws:</p>
    <p>is_a(X, Y)  F(X, Y) has_a(X, P)  G(X, P) is_a(X, Y)  is_a(X, Z)  is_a(Z, Y) has_a(X, P)  is_a(X, Y)  has_a(Y, P)</p>
    <p>TAXONOMY THEORY</p>
    <p>TAXONOMY THEORY</p>
    <p>... ...</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>F(X,Y)</p>
    <p>G(X, P)</p>
  </div>
  <div class="page">
    <p>Representation of theories Theories have a set of core relations (latent), related to each other and other surface relations (observable) via laws.</p>
    <p>FF</p>
    <p>FF F F</p>
    <p>Core relations: F(X, Y) G(X, P)</p>
    <p>Surface relations: is_a(X, Y)</p>
    <p>has_a(X, P)</p>
    <p>Subset of first order logic</p>
    <p>Laws:</p>
    <p>is_a(X, Y)  F(X, Y) has_a(X, P)  G(X, P) is_a(X, Y)  is_a(X, Z)  is_a(Z, Y) has_a(X, P)  is_a(X, Y)  has_a(Y, P)</p>
    <p>TAXONOMY THEORY</p>
    <p>TAXONOMY THEORY</p>
    <p>... ...</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>F(X,Y)</p>
    <p>G(X, P)</p>
  </div>
  <div class="page">
    <p>Representation of theories Theories have a set of core relations (latent), related to each other and other surface relations (observable) via laws.</p>
    <p>Core relations: F(X, Y) G(X, P)</p>
    <p>Surface relations: is_a(X, Y)</p>
    <p>has_a(X, P)</p>
    <p>Subset of first order logic</p>
    <p>Laws:</p>
    <p>is_a(X, Y)  F(X, Y) has_a(X, P)  G(X, P) is_a(X, Y)  is_a(X, Z)  is_a(Z, Y) has_a(X, P)  is_a(X, Y)  has_a(Y, P)</p>
    <p>TAXONOMY THEORY</p>
    <p>TAXONOMY THEORY</p>
    <p>... ...</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>F(X,Y)</p>
    <p>G(X, P)</p>
  </div>
  <div class="page">
    <p>Representation of theories Theories have a set of core relations (latent), related to each other and other surface relations (observable) via laws.</p>
    <p>G</p>
    <p>G</p>
    <p>G G G G</p>
    <p>G</p>
    <p>Core relations: F(X, Y) G(X, P)</p>
    <p>Surface relations: is_a(X, Y)</p>
    <p>has_a(X, P)</p>
    <p>Subset of first order logic</p>
    <p>Laws:</p>
    <p>is_a(X, Y)  F(X, Y) has_a(X, P)  G(X, P) is_a(X, Y)  is_a(X, Z)  is_a(Z, Y) has_a(X, P)  is_a(X, Y)  has_a(Y, P)</p>
    <p>TAXONOMY THEORY</p>
    <p>TAXONOMY THEORY</p>
    <p>... ...</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>F(X,Y)</p>
    <p>G(X, P)</p>
  </div>
  <div class="page">
    <p>Form of core relations Core relations can form any graph.</p>
    <p>But may want to restrict their form to make inference easier, for example:</p>
  </div>
  <div class="page">
    <p>Form of core relations Core relations can form any graph.</p>
    <p>But may want to restrict their form to make inference easier, for example:</p>
    <p>not allowed</p>
    <p>Every category must have at most one parent category in core</p>
    <p>Function restriction on category membership</p>
    <p>allowed</p>
    <p>canary</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>fish</p>
    <p>shark salmoncanary</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>fish</p>
    <p>shark salmon</p>
  </div>
  <div class="page">
    <p>Now we have a representation of theories: core relations surface relations lawsTHEORY = + +</p>
    <p>(subset of FOPL)</p>
  </div>
  <div class="page">
    <p>Now we have a representation of theories:</p>
    <p>Given this representation, we can treat the two main tasks:</p>
    <p>core relations surface relations lawsTHEORY = + + (subset of FOPL)</p>
  </div>
  <div class="page">
    <p>Inference: Given a theory and some observations, infer assignment of core relations that best explains observations.</p>
    <p>Now we have a representation of theories:</p>
    <p>Given this representation, we can treat the two main tasks:</p>
    <p>core relations surface relations lawsTHEORY = + + (subset of FOPL)</p>
  </div>
  <div class="page">
    <p>Inference: Given a theory and some observations, infer assignment of core relations that best explains observations.</p>
    <p>Now we have a representation of theories:</p>
    <p>Given this representation, we can treat the two main tasks:</p>
    <p>Learning: Given some observations, learn the theory that best explains observations.</p>
    <p>core relations surface relations lawsTHEORY = + + (subset of FOPL)</p>
  </div>
  <div class="page">
    <p>Inference and learning in taxonomy</p>
    <p>Observe positive surface facts:</p>
  </div>
  <div class="page">
    <p>Inference and learning in taxonomy</p>
    <p>Observe positive surface facts:</p>
    <p>SURFACE</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
  </div>
  <div class="page">
    <p>Inference and learning in taxonomy</p>
    <p>Observe positive surface facts:</p>
    <p>TAXONOMY LAWS</p>
    <p>is_a(X, Y)  F(X, Y) has_a(X, P)  G(X, P) is_a(X, Y)  is_a(X, Z)  is_a(Z, Y) has_a(X, P)  is_a(X, Y)  has_a(Y, P)</p>
    <p>SURFACE</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
  </div>
  <div class="page">
    <p>Inference and learning in taxonomy</p>
    <p>Observe positive surface facts:</p>
    <p>TAXONOMY LAWS</p>
    <p>is_a(X, Y)  F(X, Y) has_a(X, P)  G(X, P) is_a(X, Y)  is_a(X, Z)  is_a(Z, Y) has_a(X, P)  is_a(X, Y)  has_a(Y, P)</p>
    <p>SURFACE</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
    <p>Inference</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>F(X,Y)</p>
    <p>G(X, P)</p>
    <p>CORE</p>
  </div>
  <div class="page">
    <p>Inference and learning in taxonomy</p>
    <p>Observe positive surface facts:</p>
    <p>TAXONOMY LAWS</p>
    <p>is_a(X, Y)  F(X, Y) has_a(X, P)  G(X, P) is_a(X, Y)  is_a(X, Z)  is_a(Z, Y) has_a(X, P)  is_a(X, Y)  has_a(Y, P)</p>
    <p>SURFACE</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
    <p>is_a(eagle, bird) is_a(eagle, animal) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal)</p>
    <p>is_a(fish, animal)</p>
    <p>has_a(canary, can_fly)</p>
    <p>has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite)</p>
    <p>has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly)</p>
    <p>has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, fish) is_a(canary, shark) is_a(canary, salmon)</p>
    <p>has_a(salmon, can_sing) has_a(salmon, can_bite) has_a(salmon, can_fly)</p>
    <p>... ...</p>
    <p>Inference</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>F(X,Y)</p>
    <p>G(X, P)</p>
    <p>CORE</p>
  </div>
  <div class="page">
    <p>Inference and learning in taxonomy</p>
    <p>Observe positive surface facts:</p>
    <p>TAXONOMY LAWS</p>
    <p>is_a(X, Y)  F(X, Y) has_a(X, P)  G(X, P) is_a(X, Y)  is_a(X, Z)  is_a(Z, Y) has_a(X, P)  is_a(X, Y)  has_a(Y, P)</p>
    <p>Learning</p>
    <p>SURFACE</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
    <p>is_a(eagle, bird) is_a(eagle, animal) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal)</p>
    <p>is_a(fish, animal)</p>
    <p>has_a(canary, can_fly)</p>
    <p>has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite)</p>
    <p>has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly)</p>
    <p>has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, fish) is_a(canary, shark) is_a(canary, salmon)</p>
    <p>has_a(salmon, can_sing) has_a(salmon, can_bite) has_a(salmon, can_fly)</p>
    <p>... ...</p>
    <p>Inference</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>F(X,Y)</p>
    <p>G(X, P)</p>
    <p>CORE</p>
  </div>
  <div class="page">
    <p>Inference Given theory and observations, infer assignment of reduced core relations that best accounts for observations.</p>
  </div>
  <div class="page">
    <p>Inference Given theory and observations, infer assignment of reduced core relations that best accounts for observations.</p>
    <p>P(core | T) Encourages sparsity</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
  </div>
  <div class="page">
    <p>Inference Given theory and observations, infer assignment of reduced core relations that best accounts for observations.</p>
    <p>P(core | T) Encourages sparsity</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>can_fly</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>eats</p>
  </div>
  <div class="page">
    <p>Inference Given theory and observations, infer assignment of reduced core relations that best accounts for observations.</p>
    <p>P(core | T) Encourages sparsity</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>can_fly</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>eats</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>can_fly</p>
    <p>fish</p>
    <p>shark salmon</p>
    <p>is_pink</p>
    <p>can_swim eats</p>
  </div>
  <div class="page">
    <p>Inference Given theory and observations, infer assignment of reduced core relations that best accounts for observations.</p>
    <p>P(core | T) Encourages sparsity</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>can_fly</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>eats</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>can_fly</p>
    <p>fish</p>
    <p>shark salmon</p>
    <p>is_pink</p>
    <p>can_swim eats</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>can_fly</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>eats</p>
  </div>
  <div class="page">
    <p>Inference Given theory and observations, infer assignment of reduced core relations that best accounts for observations.</p>
    <p>P(model | core, T) 2. Apply the laws of T to core assignment, get model of T (Logical inference)</p>
    <p>P(core | T) Encourages sparsity</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>can_fly</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>eats</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>can_fly</p>
    <p>fish</p>
    <p>shark salmon</p>
    <p>is_pink</p>
    <p>can_swim eats</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>can_fly</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>eats</p>
  </div>
  <div class="page">
    <p>Inference Given theory and observations, infer assignment of reduced core relations that best accounts for observations.</p>
    <p>P(model | core, T) 2. Apply the laws of T to core assignment, get model of T (Logical inference)</p>
    <p>P(obs | model) 3. Sample observations from model (Uniform with noise: Size principle)</p>
    <p>Penalizes models that predict many unobserved facts</p>
    <p>P(core | T) Encourages sparsity</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>can_fly</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>eats</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>can_fly</p>
    <p>fish</p>
    <p>shark salmon</p>
    <p>is_pink</p>
    <p>can_swim eats</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>can_fly</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>eats</p>
  </div>
  <div class="page">
    <p>Inference Given theory and observations, infer assignment of reduced core relations that best accounts for observations.</p>
    <p>P(model | core, T) 2. Apply the laws of T to core assignment, get model of T (Logical inference)</p>
    <p>P(obs | model) 3. Sample observations from model (Uniform with noise: Size principle)</p>
    <p>Penalizes models that predict many unobserved facts</p>
    <p>P(core | T) Encourages sparsity</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>can_fly</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>eats</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>can_fly</p>
    <p>fish</p>
    <p>shark salmon</p>
    <p>is_pink</p>
    <p>can_swim eats</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>can_fly</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>eats</p>
    <p>where,</p>
    <p>Probability of a query q being true, given observations and theory:</p>
    <p>Sum approximated via stochastic search</p>
    <p>P(q | obs, T) = !</p>
    <p>core</p>
    <p>P(q | core, T)P(core | obs, T)</p>
    <p>P(core | obs, T) ! !</p>
    <p>model</p>
    <p>P(obs | model)P(model | core, T)P(core | T)(Bayes rule)</p>
  </div>
  <div class="page">
    <p>Now we have defined inference in our framework.</p>
    <p>What kind of tasks can we do?</p>
    <p>Systematic tests of generalization</p>
    <p>Property induction Observe facts about new property; what categorie(s) have it?</p>
    <p>Categorization Observe facts about a new category; what are its parent and child categories?</p>
    <p>How many missing facts can we recover given sparse data?</p>
  </div>
  <div class="page">
    <p>Inference: Generalization using a theory Given subsets of {100%, 80%, 70%, 60%} of positive surface facts, what percentage of all true facts can we recover? - 49 x 2 = 98 facts in domain</p>
    <p>- Optimize for best model:</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>% Error = # errors 98 facts</p>
    <p>% Total facts observed = # facts observed</p>
    <p>% Total facts 28% 22% 19% 16%</p>
    <p>% Positive facts 100% 80% 70% 60%</p>
  </div>
  <div class="page">
    <p>So far, assumed theory as given and focused on inference of underlying core assignment from data.</p>
  </div>
  <div class="page">
    <p>So far, assumed theory as given and focused on inference of underlying core assignment from data.</p>
    <p>How could we learn the theory from data too?</p>
  </div>
  <div class="page">
    <p>So far, assumed theory as given and focused on inference of underlying core assignment from data.</p>
    <p>How could we learn the theory from data too?</p>
    <p>I.e., how could we learn the right sets of core and surface relations and laws relating them from data?</p>
  </div>
  <div class="page">
    <p>Effects of laws on prediction and compression</p>
  </div>
  <div class="page">
    <p>Effects of laws on prediction and compression</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
  </div>
  <div class="page">
    <p>Effects of laws on prediction and compression</p>
    <p>TAXONOMY THEORY</p>
    <p>properties inherit down categories category membership is transitive</p>
    <p>LAWS</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
  </div>
  <div class="page">
    <p>Effects of laws on prediction and compression</p>
    <p>TAXONOMY THEORY</p>
    <p>properties inherit down categories category membership is transitive</p>
    <p>LAWS</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
    <p>Learning</p>
  </div>
  <div class="page">
    <p>Effects of laws on prediction and compression</p>
    <p>TAXONOMY THEORY</p>
    <p>properties inherit down categories category membership is transitive</p>
    <p>LAWS</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
    <p>Learning</p>
  </div>
  <div class="page">
    <p>Effects of laws on prediction and compression</p>
    <p>TAXONOMY THEORY</p>
    <p>properties inherit down categories category membership is transitive</p>
    <p>LAWS</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
    <p>Learning</p>
  </div>
  <div class="page">
    <p>Effects of laws on prediction and compression</p>
    <p>TAXONOMY THEORY</p>
    <p>properties inherit down categories category membership is transitive</p>
    <p>LAWS</p>
    <p>categories properties</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>canary</p>
    <p>can_sing</p>
    <p>bird</p>
    <p>animal</p>
    <p>eagle</p>
    <p>has_claws</p>
    <p>can_fly</p>
    <p>eats</p>
    <p>fish</p>
    <p>shark</p>
    <p>can_bite</p>
    <p>salmon</p>
    <p>is_pink</p>
    <p>can_swim</p>
    <p>eats</p>
    <p>eats eats eats</p>
    <p>eats</p>
    <p>can_swim can_swim</p>
    <p>can_fly can_fly</p>
    <p>eats</p>
    <p>has_a(canary, can_sing) has_a(canary, can_fly) has_a(canary, eats) has_a(eagle, has_claws) has_a(eagle, can_fly) has_a(eagle, eats) has_a(shark, can_bite) has_a(shark, can_swim) has_a(shark, eats) has_a(salmon, is_pink) has_a(salmon, can_swim) has_a(salmon, eats) has_a(bird, can_fly) has_a(bird, eats) has_a(fish, can_swim) has_a(fish, eats) has_a(animal, eats)</p>
    <p>is_a(canary, animal) is_a(canary, bird) is_a(eagle, bird) is_a(eagle, animal) is_a(shark, fish) is_a(shark, animal) is_a(salmon, fish) is_a(salmon, animal) is_a(bird, animal) is_a(fish, animal)</p>
    <p>Learning</p>
  </div>
  <div class="page">
    <p>Learning a theory</p>
    <p>P(core, T | obs) ! P(obs | core)P(core | T)P(T) Bayes rule:</p>
  </div>
  <div class="page">
    <p>Learning a theory</p>
    <p>P(core, T | obs) ! P(obs | core)P(core | T)P(T) Bayes rule:</p>
    <p>Need to define prior distribution on theories: P(T)</p>
  </div>
  <div class="page">
    <p>Learning a theory</p>
    <p>P(core, T | obs) ! P(obs | core)P(core | T)P(T) Bayes rule:</p>
    <p>Need to define prior distribution on theories: P(T)</p>
  </div>
  <div class="page">
    <p>Learning a theory</p>
    <p>and whether it is a function (Bernoulli)</p>
    <p>P(core, T | obs) ! P(obs | core)P(core | T)P(T) Bayes rule:</p>
    <p>Need to define prior distribution on theories: P(T)</p>
  </div>
  <div class="page">
    <p>Learning a theory</p>
    <p>and whether it is a function (Bernoulli)</p>
    <p>(Representation length prior)3. Pick a set of laws, ordered by representation length</p>
    <p>P(Laws) ! 2!rl(Laws)</p>
    <p>P(core, T | obs) ! P(obs | core)P(core | T)P(T) Bayes rule:</p>
    <p>Need to define prior distribution on theories: P(T)</p>
  </div>
  <div class="page">
    <p>Learning a theory</p>
    <p>and whether it is a function (Bernoulli)</p>
    <p>(Representation length prior)3. Pick a set of laws, ordered by representation length</p>
    <p>P(Laws) ! 2!rl(Laws)</p>
    <p>P(core, T | obs) ! P(obs | core)P(core | T)P(T) Bayes rule:</p>
    <p>A priori, prefer shorter laws as well as a sparse core These conflict, but are traded off using Bayes rule</p>
    <p>INTUITION</p>
    <p>Need to define prior distribution on theories: P(T)</p>
  </div>
  <div class="page">
    <p>Compare subset of taxonomy variants consisting of 3 ingredients:</p>
    <p>Learning a theory: comparing taxonomic variants</p>
  </div>
  <div class="page">
    <p>Compare subset of taxonomy variants consisting of 3 ingredients:</p>
    <p>L1: is a(X, Y) ! is a(X, Z) &quot; is a(Z, Y) L2: has a(X, P) ! is a(X, Y) &quot; has a(Y, P) core category membership relation is a function</p>
    <p>Learning a theory: comparing taxonomic variants</p>
  </div>
  <div class="page">
    <p>Compare subset of taxonomy variants consisting of 3 ingredients:</p>
    <p>L1: is a(X, Y) ! is a(X, Z) &quot; is a(Z, Y) L2: has a(X, P) ! is a(X, Y) &quot; has a(Y, P) core category membership relation is a function</p>
    <p>Compare all 2 x 2 x 2 combinations by scoring each theory using its best model on input data:</p>
    <p>Theory T1 T2 T3 T4 T5 T6 T7 T8 L1         L2</p>
    <p>core func.         log prior -28 -27 -21 -20 -21 -20 -14 -13</p>
    <p>log posterior -150 -180 -163 -185 -171 -200 -164 -206</p>
    <p>Learning a theory: comparing taxonomic variants</p>
  </div>
  <div class="page">
    <p>Compare subset of taxonomy variants consisting of 3 ingredients:</p>
    <p>L1: is a(X, Y) ! is a(X, Z) &quot; is a(Z, Y) L2: has a(X, P) ! is a(X, Y) &quot; has a(Y, P) core category membership relation is a function</p>
    <p>Compare all 2 x 2 x 2 combinations by scoring each theory using its best model on input data:</p>
    <p>Theory T1 T2 T3 T4 T5 T6 T7 T8 L1         L2</p>
    <p>core func.         log prior -28 -27 -21 -20 -21 -20 -14 -13</p>
    <p>log posterior -150 -180 -163 -185 -171 -200 -164 -206</p>
    <p>True theory is preferred in spite of being</p>
    <p>disfavored in the prior</p>
    <p>Learning a theory: comparing taxonomic variants</p>
  </div>
  <div class="page">
    <p>Learning a theory: recap</p>
  </div>
  <div class="page">
    <p>Our framework favors the true taxonomy theory over variants, even if its a priori more complex.</p>
    <p>Learning a theory: recap</p>
  </div>
  <div class="page">
    <p>Our framework favors the true taxonomy theory over variants, even if its a priori more complex.</p>
    <p>Learning a theory: recap</p>
    <p>In principle, a learner could compare and rank different theories this way.</p>
  </div>
  <div class="page">
    <p>Our framework favors the true taxonomy theory over variants, even if its a priori more complex.</p>
    <p>Learning a theory: recap</p>
    <p>In principle, a learner could compare and rank different theories this way.</p>
    <p>Searching the space of theories from scratch is a very difficult problem.</p>
    <p>But search is not the only way to get different theories; many other ways we learn theoretical concepts.</p>
  </div>
  <div class="page">
    <p>How are theories used, represented, learned?</p>
    <p>Transfer of abstract knowledge to novel contexts:</p>
    <p>blickets are gazzers</p>
    <p>gazzers have wibs</p>
    <p>blickets have wibs</p>
    <p>Rogers and McClelland, 2004</p>
    <p>- Also can be viewed as dimensionality</p>
    <p>reduction</p>
    <p>- Handles graded, inductive inference in</p>
    <p>face of noise</p>
    <p>- Representation is learnable from data</p>
    <p>?</p>
    <p>Connectionist proposal</p>
    <p>TRAIN:</p>
    <p>TEST:</p>
    <p>Previously: Hinton, 1986 Rumelhart et. al, 1986</p>
  </div>
  <div class="page">
    <p>Conclusions How are theories used, represented and learned?</p>
  </div>
  <div class="page">
    <p>Conclusions How are theories used, represented and learned?</p>
    <p>Used as dimensionality reducers</p>
    <p>Represented as sets of relations and logical laws</p>
    <p>Learned using Bayesian inference, by defining probability distributions over theories</p>
    <p>core surfacelaws low-dimensional high-dimensionalembedding</p>
  </div>
  <div class="page">
    <p>Conclusions How are theories used, represented and learned?</p>
    <p>Used as dimensionality reducers</p>
    <p>Represented as sets of relations and logical laws</p>
    <p>Learned using Bayesian inference, by defining probability distributions over theories</p>
    <p>core surfacelaws low-dimensional high-dimensionalembedding</p>
    <p>General division of labor in our framework:</p>
    <p>Abstraction and systematicity in</p>
    <p>domains with objects</p>
    <p>Inductive inference from sparse or noisy</p>
    <p>observations</p>
    <p>probability theory predicate logic</p>
  </div>
  <div class="page">
    <p>Conclusions How are theories used, represented and learned?</p>
    <p>Used as dimensionality reducers</p>
    <p>Represented as sets of relations and logical laws</p>
    <p>Learned using Bayesian inference, by defining probability distributions over theories</p>
    <p>core surfacelaws low-dimensional high-dimensionalembedding</p>
    <p>General division of labor in our framework:</p>
    <p>Abstraction and systematicity in</p>
    <p>domains with objects</p>
    <p>Inductive inference from sparse or noisy</p>
    <p>observations</p>
    <p>probability theory predicate logic</p>
  </div>
  <div class="page">
    <p>Conclusions How are theories used, represented and learned?</p>
    <p>Used as dimensionality reducers</p>
    <p>Represented as sets of relations and logical laws</p>
    <p>Learned using Bayesian inference, by defining probability distributions over theories</p>
    <p>core surfacelaws low-dimensional high-dimensionalembedding</p>
    <p>General division of labor in our framework:</p>
    <p>Abstraction and systematicity in</p>
    <p>domains with objects</p>
    <p>Inductive inference from sparse or noisy</p>
    <p>observations</p>
    <p>probability theory predicate logic</p>
    <p>Logical Dimred</p>
    <p>Bayes Frege</p>
  </div>
  <div class="page">
    <p>Conclusions How are theories used, represented and learned?</p>
    <p>Used as dimensionality reducers</p>
    <p>Represented as sets of relations and logical laws</p>
    <p>Learned using Bayesian inference, by defining probability distributions over theories</p>
    <p>core surfacelaws low-dimensional high-dimensionalembedding</p>
    <p>General division of labor in our framework:</p>
    <p>Abstraction and systematicity in</p>
    <p>domains with objects</p>
    <p>Inductive inference from sparse or noisy</p>
    <p>observations</p>
    <p>probability theory predicate logic</p>
    <p>Logical Dimred</p>
    <p>Bayes Frege- excellent gambler</p>
    <p>- keeps it simple</p>
    <p>- loves abstraction &amp; objects</p>
    <p>- can quantify</p>
  </div>
  <div class="page">
    <p>Thanks! Also thanks to...</p>
    <p>And other Cocosci @ MIT lab members</p>
    <p>Liz Bonawitz</p>
    <p>David Wingate Vikash Mansinghka Tim ODonnell</p>
    <p>Chris Baker</p>
    <p>Dan RoyBrian Milch</p>
    <p>Josh Tenenbaum</p>
  </div>
</Presentation>
