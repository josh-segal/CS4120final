<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Edge-based Transcoding for Adaptive Live Video Streaming</p>
    <p>Pradeep Dogga* Sandip Chakraborty Subrata Mitra Ravi Netravali*</p>
    <p>*</p>
  </div>
  <div class="page">
    <p>Increase in live video streaming</p>
  </div>
  <div class="page">
    <p>Live Video Streaming Architecture</p>
    <p>Transcoding Servers</p>
    <p>CDN</p>
    <p>Viewers</p>
    <p>Viewers</p>
    <p>Concert</p>
    <p>Network Contention!</p>
    <p>Compute Contention!</p>
    <p>Liveness lost!</p>
    <p>Quality</p>
    <p>Edge Router</p>
    <p>Goal: Video as live as possible</p>
  </div>
  <div class="page">
    <p>Problem  Sharing infrastructure  Video liveness lost</p>
    <p>Key Question: Can we alleviate the problem by incorporating sources?</p>
    <p>Can we use a P2P approach for transcoding and transmitting live video?</p>
  </div>
  <div class="page">
    <p>Reason 1  Existing live video applications do not adapt to network conditions!</p>
  </div>
  <div class="page">
    <p>Reason 2  Phones are energy constrained</p>
    <p>Codecs are energy efficient!</p>
  </div>
  <div class="page">
    <p>Reason 3  Transcoding with smartphones should keep up with live video time limits</p>
    <p>Device 1080p -&gt; 720p 720p -&gt; 360p 1080p -&gt; 360p</p>
    <p>HTC U11 15ms 7ms 9ms</p>
    <p>Pixel 2 XL 8ms 6ms 9ms</p>
    <p>PC (FFMPEG) 6ms 2ms 2ms</p>
    <p>Codecs are fast!</p>
    <p>Time taken to transcode video per frame</p>
  </div>
  <div class="page">
    <p>Peer to peer transcoding and streaming</p>
    <p>Video Source</p>
  </div>
  <div class="page">
    <p>Balancing Trees  Balancing trees when nodes leave or enter the system to minimize latency  Restructuring trees for fairness in energy and available bandwidth</p>
    <p>consumption  Can be modelled as an optimization problem</p>
  </div>
  <div class="page">
    <p>Contact leader 1</p>
    <p>Details - Registration</p>
    <p>Video Source</p>
    <p>join 1080p</p>
    <p>join 1080p</p>
  </div>
  <div class="page">
    <p>Details  Failure/Departure of viewer</p>
    <p>Video Source</p>
    <p>Repeat registration Repeat registration</p>
  </div>
  <div class="page">
    <p>Details  Swapping transcoders</p>
    <p>Video Source</p>
  </div>
  <div class="page">
    <p>Open Issues  Peer Presence: Incentives for transcoding and transmitting</p>
    <p>Data Integrity: Overheads in verification and attestation</p>
    <p>Seeks and Delayed Viewing: Mechanism to store stream intermittently</p>
    <p>Viewer Flux: Need decentralized heuristic based optimization to closely approximate to optimal distribution of viewers</p>
  </div>
  <div class="page">
    <p>Alternate use-cases</p>
    <p>Real-time Video Analytics can avoid server-side computation overheads</p>
    <p>Private Live Video can be enabled without additional infrastructure</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Significant opportunity to better use client devices in live streaming systems</p>
    <p>Hardware accelerated codecs on phones are fast and energy efficient</p>
    <p>dogga@cs.ucla.edu</p>
    <p>Thank you!</p>
  </div>
</Presentation>
