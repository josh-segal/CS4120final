<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Mohamed Hefeeda 1</p>
    <p>School of Computing Science Simon Fraser University, Canada</p>
    <p>End-to-End Secure Delivery of Scalable Video Streams</p>
    <p>(Joint work with Kianoosh Mokhtarian)</p>
    <p>NOSSDAV 2009</p>
  </div>
  <div class="page">
    <p>Motivations</p>
    <p>Increasing demand for multimedia services</p>
    <p>Content often transported over open and insecure networks (Internet)</p>
    <p>Many applications require secure delivery of content - Videos for: surveillance, documentary, political debates,</p>
    <p>Secure delivery = Ensuring authenticity of content</p>
    <p>Detect any malicious tampering - Removing, inserting, or modifying and portions of content</p>
    <p>Allow legitimate adaptation - Different frame rates, resolutions, quality levels</p>
  </div>
  <div class="page">
    <p>Our Work</p>
    <p>New authentication scheme for scalable video streams - End-to-end: transparent to proxies/CDN servers  No need to</p>
    <p>trust third-parties or distribute keys</p>
    <p>- Ensures authenticity of any substream</p>
    <p>Focus on most flexible, recent, scalable streams - 3-d scalability (at the same time)</p>
    <p>- e.g., H.264/SVC</p>
    <p>svcAuth: Open-source authentication library (Java) - for H.264/SVC</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Brief background - Scalable streams (old and recent)</p>
    <p>- Previous authentication works</p>
    <p>Overview of the proposed authentication scheme</p>
    <p>Performance evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Background: Scalable Streams</p>
    <p>Scalable coding: encode once, decode in many ways</p>
    <p>- Spatial, temporal, and quality scalability</p>
    <p>- Heterogeneous receivers</p>
    <p>- Varying network conditions</p>
    <p>- Coding efficiency penalty</p>
    <p>Traditional scalable (layered) video streams - 1 Base layer, 0+ enhancement layers</p>
    <p>- 1-d scalability</p>
    <p>- Cumulative layers</p>
    <p>Base layer</p>
    <p>Enhancement layer 1</p>
    <p>Enhancement layer 2</p>
    <p>Enhancement layer N</p>
  </div>
  <div class="page">
    <p>Recent Scalable Streams (H.264/SVC)</p>
    <p>Higher flexibility, yet with higher coding efficiency</p>
    <p>3-d scalability - three types at same time</p>
    <p>Very flexible adaptation and truncation</p>
    <p>more challenging to authenticate</p>
  </div>
  <div class="page">
    <p>Recent Scalable Streams (H.264/SVC)</p>
    <p>Non-cumulative</p>
    <p>Video packet-level truncation inside quality layers</p>
  </div>
  <div class="page">
    <p>Previous Work</p>
    <p>Only for traditional 1-d scalable streams</p>
    <p>Two main approaches: - Based on hash chaining [Skraparlis 03, Yu 04]</p>
    <p>- Based on Merkle hash trees [Kaced 06, Gentry 06, Wu 06]</p>
    <p>Can not support flexibility of recent 3-d scalable streams</p>
  </div>
  <div class="page">
    <p>Previous Work: Hash Chaining</p>
    <p>Assumes cumulative and complete layers</p>
  </div>
  <div class="page">
    <p>Previous Work: Merkle Hash Trees</p>
    <p>Requires trust/cooperation of proxies/CDN serves  not end-to-end</p>
    <p>Assumes complete layers</p>
  </div>
  <div class="page">
    <p>H.264/SVC: Spatial and Quality Scalability</p>
    <p>Spatial scalability - Dependency between layers is a</p>
    <p>DAG; not simple chain</p>
    <p>Quality scalability - Coarse-Grained Scalability (CGS)</p>
    <p>Layer-level granularity</p>
    <p>- Medium-Grained Scalability (MGS)</p>
    <p>Packet-level granularity</p>
  </div>
  <div class="page">
    <p>H.264/SVC: Temporal Scalability</p>
    <p>Hierarchical B-pictures in Group-of-Pictures (GoP)</p>
  </div>
  <div class="page">
    <p>H.264/SVC: Stream Structure</p>
    <p>Stream: sequence of GoPs</p>
    <p>GoP: set of video frames</p>
    <p>Video frame: multiple spatial layers</p>
    <p>Spatial layer: multiple CGS quality layers</p>
    <p>CGS quality layer: multiple MGS quality layers</p>
    <p>MGS quality layer: multiple video packets</p>
  </div>
  <div class="page">
    <p>Proposed Scheme: Overview</p>
    <p>Content provider - Generate auth info bottom up (packets, MGS, CGS, , GoP)</p>
    <p>- Auth info is embedded into video stream</p>
    <p>- Transparent to third-party proxies</p>
    <p>Receivers - Verify substreams if their corresponding auth info received</p>
    <p>- Digests are re-computed and compared</p>
  </div>
  <div class="page">
    <p>Proposed Scheme: Overview</p>
    <p>Authenticating MGS quality layers</p>
  </div>
  <div class="page">
    <p>Proposed Scheme: Overview</p>
    <p>Authenticating MGS layers of a CGS/spatial layer</p>
  </div>
  <div class="page">
    <p>Proposed Scheme: Overview</p>
    <p>Authenticating video frame</p>
  </div>
  <div class="page">
    <p>Proposed Scheme: Overview</p>
    <p>Authenticating temporal layers</p>
  </div>
  <div class="page">
    <p>Proposed Scheme: Overview</p>
    <p>Authenticating a sequence of GoPs - GoP blocks (individually signed)</p>
    <p>- Auth info of any GoP suffices for the block</p>
  </div>
  <div class="page">
    <p>Analysis and Evaluation</p>
    <p>Security analysis - Theorem: Proposed scheme ensures authenticity of any valid</p>
    <p>substream</p>
    <p>Simulation Setup - Simulate streaming 1-Mbps video over lossy network channel</p>
    <p>- Video: 4 temporal, 1 spatial, 2 CGS (each has 3 MGS) layers CIF, 30 fps, 40 dB (Y-PSNR)</p>
    <p>Performance metrics - Computation cost</p>
    <p>- Delay and buffering requirements</p>
    <p>- Robustness against packet losses</p>
    <p>- Communication overhead</p>
  </div>
  <div class="page">
    <p>Evaluation: Computation Cost</p>
    <p>n adjusts computation cost ~ delay</p>
  </div>
  <div class="page">
    <p>Performance Evaluation: Delay/Buffer</p>
    <p>Server-side delay - Generating a block of n GoPs</p>
    <p>Receiver-side delay - Typically zero; few GoPs if high loss rate</p>
    <p>Total delay - n GoPs for live streaming</p>
    <p>- Negligible for on-demand</p>
    <p>Buffer required - Few GoPs if high loss rate</p>
  </div>
  <div class="page">
    <p>Performance Evaluation: Delay/Buffer</p>
    <p>Delay for live-streaming</p>
  </div>
  <div class="page">
    <p>Performance Evaluation: Delay/Buffer</p>
    <p>Delay ~ computation cost</p>
    <p>Buffer required: n GoPs worst case (&lt; 1 MB)</p>
  </div>
  <div class="page">
    <p>Evaluation: Communication Overhead</p>
    <p>Communication overhead impact: ~ 1 dB at most (&lt; 8%)</p>
  </div>
  <div class="page">
    <p>Performance Evaluation: Loss Resilience</p>
    <p>Quality reduced by communication overhead: ~ 1 dB</p>
    <p>Quality reduced by increase in loss impact: Marginal</p>
  </div>
  <div class="page">
    <p>Conclusion and Future Work</p>
    <p>New scalable video streams offer high flexibility - 3-d scalability (temporal, spatial, quality)</p>
    <p>Current authentications schemes do not support such flexibility</p>
    <p>Proposed new authentication scheme - Supports full flexibility (H.264/SVC)</p>
    <p>- End-to-end authentication</p>
    <p>- Low overheads (delay, buffering, computation, )</p>
    <p>Future work - Further reduce communication overhead</p>
    <p>- Release svcAuth library</p>
  </div>
  <div class="page">
    <p>Thank You!</p>
    <p>Questions??</p>
    <p>More info at:</p>
    <p>http://nsl.cs.sfu.ca/</p>
  </div>
</Presentation>
