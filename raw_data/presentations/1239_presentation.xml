<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>AutoSys: The Design and Operation of Learning-Augmented Systems</p>
    <p>Chieh-Jan Mike Liang, Hui Xue, Mao Yang, Lidong Zhou, Lifei Zhu, Zhao Lucis Li, Zibo Wang, Qi Chen, Quanlu Zhang, Chuanjie Liu, Wenjun Dai</p>
    <p>Microsoft Research, Peking University, USTC, Bing Platform, Bing Ads</p>
    <p>USENIX ATC 20</p>
  </div>
  <div class="page">
    <p>Learning-Augmented Systems</p>
    <p>Systems whose design methodology or control logic is at the intersection of traditional heuristics and machine learning  Not a stranger to academic communities: Workshop on ML for Systems, MLSys</p>
    <p>Conference,</p>
    <p>This work reports our years of experience in designing and operating learningaugmented systems in production</p>
  </div>
  <div class="page">
    <p>Our Scope in This Paper: Auto-tuning System Config Parameters</p>
    <p>The problem is simple  A great application of black-box optimization</p>
    <p>Find the configuration that best optimizes the performance counters</p>
    <p>System</p>
    <p>Performance counters</p>
    <p>Storage</p>
    <p>Inputs Outputs</p>
    <p>NetworkHardware</p>
    <p>Software</p>
    <p>Configuration parameters</p>
  </div>
  <div class="page">
    <p>Our Scope in This Paper: Auto-tuning System Config Parameters</p>
    <p>But, the problem is very difficult for system operators in practice  Vast system-specific parameter search space</p>
    <p>Continual optimization based on system-specific triggers</p>
    <p>System</p>
    <p>Performance counters</p>
    <p>Storage</p>
    <p>Inputs Outputs</p>
    <p>NetworkHardware</p>
    <p>Software</p>
    <p>Configuration parameters</p>
  </div>
  <div class="page">
    <p>Our Scope in This Paper: Bing Web Search</p>
    <p>Re-ranking ServiceRanking ServiceSelection Service</p>
    <p>Inverted index</p>
    <p>Server</p>
    <p>Selection engines</p>
    <p>Per-document forward index</p>
    <p>Server</p>
    <p>Ranking engines</p>
    <p>Server</p>
    <p>...</p>
    <p>KV cluster</p>
    <p>Key-value store engines</p>
    <p>Search query</p>
    <p>Search results</p>
    <p>...</p>
    <p>Vectorized index</p>
    <p>Keyword-based Semantics-based ML/DL Models</p>
    <p>Re-ranking engines</p>
    <p>RocksDB MLFT</p>
    <p>...</p>
  </div>
  <div class="page">
    <p>Our Scope in This Paper: Bing Web Search</p>
    <p>Re-ranking ServiceRanking ServiceSelection Service</p>
    <p>Inverted index</p>
    <p>Server</p>
    <p>Selection engines</p>
    <p>Per-document forward index</p>
    <p>Server</p>
    <p>Ranking engines</p>
    <p>Server</p>
    <p>...</p>
    <p>KV cluster</p>
    <p>Key-value store engines</p>
    <p>Search query</p>
    <p>Search results</p>
    <p>...</p>
    <p>Vectorized index</p>
    <p>Keyword-based Semantics-based ML/DL Models</p>
    <p>Re-ranking engines</p>
    <p>RocksDB MLFT</p>
    <p>...</p>
    <p>Auto-tuning Selection engines to optimally select relevant documents</p>
  </div>
  <div class="page">
    <p>Our Scope in This Paper: Bing Web Search</p>
    <p>Re-ranking ServiceRanking ServiceSelection Service</p>
    <p>Inverted index</p>
    <p>Server</p>
    <p>Selection engines</p>
    <p>Per-document forward index</p>
    <p>Server</p>
    <p>Ranking engines</p>
    <p>Server</p>
    <p>...</p>
    <p>KV cluster</p>
    <p>Key-value store engines</p>
    <p>Search query</p>
    <p>Search results</p>
    <p>...</p>
    <p>Vectorized index</p>
    <p>Keyword-based Semantics-based ML/DL Models</p>
    <p>Re-ranking engines</p>
    <p>RocksDB MLFT</p>
    <p>...</p>
    <p>Auto-tuning Ranking models to optimally rank documents</p>
  </div>
  <div class="page">
    <p>Our Scope in This Paper: Bing Web Search</p>
    <p>Re-ranking ServiceRanking ServiceSelection Service</p>
    <p>Inverted index</p>
    <p>Server</p>
    <p>Selection engines</p>
    <p>Per-document forward index</p>
    <p>Server</p>
    <p>Ranking engines</p>
    <p>Server</p>
    <p>...</p>
    <p>KV cluster</p>
    <p>Key-value store engines</p>
    <p>Search query</p>
    <p>Search results</p>
    <p>...</p>
    <p>Vectorized index</p>
    <p>Keyword-based Semantics-based ML/DL Models</p>
    <p>Re-ranking engines</p>
    <p>RocksDB MLFT</p>
    <p>... Auto-tuning key-value stores to reduce lookup latency</p>
  </div>
  <div class="page">
    <p>Towards A Unified Framework - AutoSys</p>
    <p>Addressing common pain points in building learning-augmented systems  Job scheduling and prioritization for sequential optimization approaches</p>
    <p>Handling learning-induced system failures (due to ML inference uncertainty)</p>
    <p>Generality and extensibility</p>
    <p>Lowering the cost of bootstrapping new scenarios, by sharing data and models  System deployments typically contain replicated service instances</p>
    <p>Different system deployments can contain the same service</p>
    <p>Facilitating computation resource sharing  Difficult to provision job resources</p>
    <p>Jobs in AutoSys are ad-hoc and nondeterministic</p>
  </div>
  <div class="page">
    <p>Jobs Within AutoSys</p>
    <p>AutoSys jobs are ad-hoc:  Jobs are triggered in response to system and workload dynamics</p>
    <p>AutoSys jobs are nondeterministic:  Jobs are spawned as necessary, according to optimization progress at runtime</p>
    <p>Job completion time depends on system benchmarks and runtime (e.g., cache warmup)</p>
    <p>Types Descriptions Examples</p>
    <p>Tuners Executes (1) ML/DL model training and inferencing, and (2) optimization solver</p>
    <p>Hyperband, TPE, SMAC, Metis, random search,</p>
    <p>Trials Executes system explorations RocksDB,</p>
  </div>
  <div class="page">
    <p>Target System #1</p>
    <p>Overview</p>
    <p>Training Plane Inference Plane</p>
    <p>Control Interface</p>
    <p>Candidate Generator</p>
    <p>Model TrainerTrial Manager</p>
    <p>Model Repository</p>
    <p>Rule Engine</p>
    <p>Inference Runtime</p>
    <p>Target System #2</p>
    <p>Control Interface</p>
    <p>Inference Plane</p>
    <p>Rule Engine</p>
    <p>Inference Runtime</p>
  </div>
  <div class="page">
    <p>Overview  Learning</p>
    <p>Target System #1</p>
    <p>Training Plane Inference Plane</p>
    <p>Control Interface</p>
    <p>Candidate Generator</p>
    <p>Model TrainerTrial Manager</p>
    <p>Model Repository</p>
    <p>Rule Engine</p>
    <p>Inference Runtime</p>
    <p>Target System #2</p>
    <p>Control Interface</p>
    <p>Inference Plane</p>
    <p>Rule Engine</p>
    <p>Inference Runtime</p>
  </div>
  <div class="page">
    <p>Overview  Learning</p>
    <p>Target System #1</p>
    <p>Training Plane Inference Plane</p>
    <p>Control Interface</p>
    <p>Candidate Generator</p>
    <p>Model TrainerTrial Manager</p>
    <p>Model Repository</p>
    <p>Rule Engine</p>
    <p>Inference Runtime</p>
    <p>Target System #2</p>
    <p>Control Interface</p>
    <p>Inference Plane</p>
    <p>Rule Engine</p>
    <p>Inference Runtime</p>
    <p>outliers</p>
  </div>
  <div class="page">
    <p>Overview  Learning</p>
    <p>Target System #1</p>
    <p>Training Plane Inference Plane</p>
    <p>Control Interface</p>
    <p>Candidate Generator</p>
    <p>Model TrainerTrial Manager</p>
    <p>Model Repository</p>
    <p>Rule Engine</p>
    <p>Inference Runtime</p>
    <p>Target System #2</p>
    <p>Control Interface</p>
    <p>Inference Plane</p>
    <p>Rule Engine</p>
    <p>Inference Runtime</p>
    <p>information gain  E.g., its TPE tuner uses two GMM to estimate the likelihood of a</p>
    <p>candidate being the optimum</p>
  </div>
  <div class="page">
    <p>Overview  Auto-Tuning Actuations</p>
    <p>Target System #1</p>
    <p>Training Plane Inference Plane</p>
    <p>Control Interface</p>
    <p>Candidate Generator</p>
    <p>Model TrainerTrial Manager</p>
    <p>Model Repository</p>
    <p>Rule Engine</p>
    <p>Inference Runtime</p>
    <p>Target System #2</p>
    <p>Control Interface</p>
    <p>Inference Plane</p>
    <p>Rule Engine</p>
    <p>Inference Runtime</p>
  </div>
  <div class="page">
    <p>Overview  Auto-Tuning Actuations</p>
    <p>Target System #1</p>
    <p>Training Plane Inference Plane</p>
    <p>Control Interface</p>
    <p>Candidate Generator</p>
    <p>Model TrainerTrial Manager</p>
    <p>Model Repository</p>
    <p>Rule Engine</p>
    <p>Inference Runtime</p>
    <p>Target System #2</p>
    <p>Control Interface</p>
    <p>Inference Plane</p>
    <p>Rule Engine</p>
    <p>Inference Runtime</p>
    <p>feedback</p>
  </div>
  <div class="page">
    <p>Summary of Production Deployments</p>
    <p>Tuning time Key results (vs. long-term expert tuning)</p>
    <p>Keyword-based Selection Engine (KSE)</p>
    <p>Semantics-based Selection Engine (SSE)</p>
    <p>Ranking Engine (RE) 1 week 3.4% improvement in NDCG@5</p>
    <p>RocksDB key-value cluster (RocksDB)</p>
    <p>Multi-level Time and Frequency-value cluster (MLTF)</p>
  </div>
  <div class="page">
    <p>Long-term Lessons Learned</p>
    <p>Higher-than-expected learning costs</p>
    <p>Various types of system dynamics can frequently trigger re-training  System deployments can scale up/down over time</p>
    <p>Workloads can drift over time</p>
    <p>Learning large-scale system deployments can be costly  Testbeds might not match the scale and fidelity of the production environment</p>
    <p>It is typically infeasible to explore system behavior in the production environment</p>
  </div>
  <div class="page">
    <p>Long-term Lessons Learned</p>
    <p>Pitfalls of human-in-the-Loop</p>
    <p>Human experts can inject biases into training datasets  E.g., human experts can provide labeled data points for certain search space regions</p>
    <p>Human errors can prevent AutoSys from functioning correctly  E.g., wrong parameter value ranges</p>
  </div>
  <div class="page">
    <p>Long-term Lessons Learned</p>
    <p>System control interfaces should abstract system measurements and logs to facilitate learning</p>
    <p>Many systems distribute configuration parameters and error messages over a set of not-well documented files and logs</p>
    <p>Many system feedbacks are not natively learnable, e.g., stack traces and core dump</p>
    <p>Some systems require customized measurement aggregation and cleaning</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>This work reports our years of experience in designing and operating learningaugmented systems in production</p>
    <p>Core components of AutoSys are publicly available at https://github.com/Microsoft/nni</p>
  </div>
  <div class="page">
    <p>Mike Liang Systems and Networking Research Group Microsoft Research Asia</p>
    <p>liang.mike@microsoft.com</p>
    <p>www.microsoft.com/en-us/research/people/cmliang</p>
  </div>
</Presentation>
