<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Dynamic Internet Congestion with Bursts</p>
    <p>Stefan Schmid</p>
    <p>Roger Wattenhofer</p>
    <p>Distributed Computing Group, ETH Zurich</p>
    <p>Bangalore, India, December 2006</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 2</p>
    <p>Dynamic Internet</p>
    <p>Internet</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 3</p>
    <p>Dynamic Internet</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 4</p>
    <p>Dynamic Internet</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 5</p>
    <p>Dynamic Internet</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 6</p>
    <p>TCP Congestion Control</p>
    <p>The available bandwidth changes dynamically over time depending on the demands of other computers.</p>
    <p>In order to prevent collapses, hosts in the</p>
    <p>Internet collaboratively reduce load in busy</p>
    <p>times of high congestion!</p>
    <p>Successful strategy: TCP congestion control - Additive Increase, Muliplicative Decrease (AIMD)</p>
    <p>- Indications for congestion: e.g., packet loss</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 7</p>
    <p>Selfish Behavior (1)</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 8</p>
    <p>Selfish Behavior (2)</p>
    <p>Some participants may not care about stability of Internet, but selfishly aim at maximizing own throughput!</p>
    <p>Given the dynamics of the available bandwidth, selfish throughput maximization constitutes an optimization problem!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 9</p>
    <p>In this Paper</p>
    <p>Introduction of models for dynamic changes of congestion.</p>
    <p>Study of selfish (online) algorithms which maximize throughput.</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 10</p>
    <p>Talk Overview</p>
    <p>Model</p>
    <p>Multiplicative Dynamics</p>
    <p>Bursty Dynamics</p>
    <p>Open Research Questions and Conclusion</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 11</p>
    <p>Talk Overview</p>
    <p>Model</p>
    <p>Multiplicative Dynamics</p>
    <p>Bursty Dynamics</p>
    <p>Open Research Questions and Conclusion</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 12</p>
    <p>Model (1)</p>
    <p>We divide time into rounds t, for t = 1, 2, .!</p>
    <p>The available bandwidth at time t is ut</p>
    <p>The selfish sender uses a sending rate xt at time t</p>
    <p>Selfish player does not know ut: All a sender knows is whether her sending in the last round was larger than the available bandwidth (i.e., xt&gt;ut, hence congestion!), or not (binary feedback).</p>
    <p>- If xt&gt;ut packets are dropped by routers.</p>
    <p>- Consequently, a selfish transfer protocol has to decide xt without knowing the present or future available bandwidth: framework for online algorithms!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 13</p>
    <p>Model (2)</p>
    <p>The optimization problem can be formalized as follows!</p>
    <p>Gain of optimal (offline algorithm) OPT:</p>
    <p>Gain of online algorithm ALG:</p>
    <p>Maybe harsh, but retransmissions, timeouts, etc. is overhead!</p>
    <p>t</p>
    <p>rate</p>
    <p>ut</p>
    <p>xt</p>
    <p>Packets come through,</p>
    <p>but opportunity costs!</p>
    <p>Sending rate too large,</p>
    <p>no transmission at all!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 14</p>
    <p>Model (3)</p>
    <p>Goal of the online algorithm is to send always at the rate of the available bandwidth, or slightly lower!</p>
    <p>We are interested in minimizing the strict competitive ratio (worst-case!):</p>
    <p>That is, the gain of ALG should be almost as large as the one of the optimal offline algorithm OPT!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 15</p>
    <p>Talk Overview</p>
    <p>Model</p>
    <p>Multiplicative Dynamics</p>
    <p>Bursty Dynamics</p>
    <p>Open Research Questions and Conclusion</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 16</p>
    <p>Talk Overview</p>
    <p>Model</p>
    <p>Multiplicative Dynamics</p>
    <p>Bursty Dynamics</p>
    <p>Open Research Questions and Conclusion</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 17</p>
    <p>Multiplicative Dynamics (1)</p>
    <p>If ut can change arbitrarily over time, there is no competitive algorithm: ut can always be chosen slightly smaller than xt!</p>
    <p>However, assuming arbitrary changes may also be too pessimistic!</p>
    <p>Consequently, we want to restrict the dynamics.</p>
    <p>Model 1: Multiplicative dynamics changes max by a constant factor , i.e., an adversary (worst-case!) can choose the available bandwidth from the interval</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 18</p>
    <p>Multiplicative Dynamics (2)</p>
    <p>Online Algorithm: After a round with sending rate lower or equal the available bandwidth, increase rate by a factor of , otherwise reduce sending rate by a factor 3</p>
    <p>Analysis: - After a bad round, there will always be a good round due to the sharp cut of the sending rate. - Good rounds are at most 4-competitive.</p>
    <p>- The gain of OPT in bad round is at most a factor  larger than the gain of ALG in the preceding good round. - Consequently,</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 19</p>
    <p>Talk Overview</p>
    <p>Model</p>
    <p>Multiplicative Dynamics</p>
    <p>Bursty Dynamics</p>
    <p>Open Research Questions and Conclusion</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 20</p>
    <p>Talk Overview</p>
    <p>Model</p>
    <p>Multiplicative Dynamics</p>
    <p>Bursty Dynamics</p>
    <p>Open Research Questions and Conclusion</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 21</p>
    <p>Bursty Dynamics (1)</p>
    <p>So far: Adversary can change congestion by at most a constant factor in each round.</p>
    <p>There are many additional models for congestion dynamics, waiting for efficient online algorithms!</p>
    <p>One dynamics model studied on the network layer is network calculus!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 22</p>
    <p>Bursty Dynamics (2)</p>
    <p>Network Calculus is used to analyse queuing strategies in networks from a worst-case perspective (worst-case queuing)!</p>
    <p>Network Caculus are not only interesting on the network layer, but may serve as a good dynamics model on the transport layer as well!</p>
    <p>In our paper, we propose to study Network Calculus models for congestion control!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 23</p>
    <p>Network Calculus (1)</p>
    <p>Traditional Network Calculus - Defines arrival curves (e.g., leaky-bucket arrival curve) - Traffic coming out of a router is assumed to adhere to arrival curve. - If this is the case, bounds for queue lengths and delays can be computed (with min-plus algebra).</p>
    <p>Arrival curve:</p>
    <p>max burst b and rate r</p>
    <p>Total number of bits coming out of</p>
    <p>router should never exceed arrival</p>
    <p>curve attached at all points!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 24</p>
    <p>Network Calculus (2)</p>
    <p>Leaky-bucket arrival curve allows for bursts in the traffic, as long as they are only temporal.</p>
    <p>After quite times with low rates, power can be accumulated for another traffic burst.</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 25</p>
    <p>Dynamic Network Calculus Congestion</p>
    <p>We adopt these properties and allow our congestion adversary to change the available bandwidth with bursts!</p>
    <p>The adversary can choose the new bandwidth as follows:</p>
    <p>Thereby,</p>
    <p>Arrival curve: accumulate</p>
    <p>during quiet times with few changes,</p>
    <p>but at most factor B</p>
    <p>Change in round t</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 26</p>
    <p>Results</p>
    <p>Upper Bound: Online algorithm which cuts sending rate by half after bad rounds, and increases the rate by  B1/3 yields a competitive ratio of</p>
    <p>Lower Bound: No online algorithm can achieve a competitive ratio better than</p>
    <p>against a Network Calculus adversary.</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 27</p>
    <p>Talk Overview</p>
    <p>Model</p>
    <p>Multiplicative Dynamics</p>
    <p>Bursty Dynamics</p>
    <p>Open Research Questions and Conclusion</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 28</p>
    <p>Talk Overview</p>
    <p>Model</p>
    <p>Multiplicative Dynamics</p>
    <p>Bursty Dynamics</p>
    <p>Open Research Questions and Conclusion</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 29</p>
    <p>Open Research Questions</p>
    <p>Selfish TCP: A real threat?</p>
    <p>Verification of model in practice!</p>
    <p>Fill gap between our upper and lower bound!</p>
    <p>Randomized algorithms (also for multiplicative adversary)</p>
    <p>Other arrival curves, study of different dynamics</p>
    <p>More generally: Adaption and analysis of network calculus for other dynamic models! Limitations?</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 30</p>
    <p>Discussion</p>
    <p>Selfishness in congestion control</p>
    <p>- Devise throughput maximizing protocols</p>
    <p>Network Calculus: An interesting model for dynamics! - Lots of future research! - However, challenging analysis!</p>
    <p>Transport layer: Algorithmically less understood than other layers!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ HiPC 2006 31</p>
    <p>Questions and Comments?</p>
    <p>Stefan Schmid Distributed Computing Group</p>
    <p>schmiste@ethz.ch</p>
    <p>http://dcg.ethz.ch/members/stefan.html</p>
    <p>Thank you for your attention!</p>
  </div>
</Presentation>
