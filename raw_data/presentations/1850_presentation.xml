<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>App-Bisect Autonomous Healing for Service-based Apps</p>
    <p>Shriram Rajagopalan Hani Jamjoom</p>
    <p>IBM T. J. Watson Research</p>
  </div>
  <div class="page">
    <p>From Monoliths to Microservices</p>
    <p>Service instances</p>
    <p>Func/onali/es Monolithic Service</p>
    <p>Microservice instances</p>
    <p>Microservices</p>
    <p>Well-defined API</p>
    <p>Each func/onality in its own service</p>
  </div>
  <div class="page">
    <p>From Waterfall to DevOps</p>
    <p>Plan Develop Test Deploy</p>
    <p>months to years</p>
    <p>Features, performance improvements, bug fixes, etc., are periodically delivered as one big update</p>
    <p>hours to days</p>
    <p>Con/nuous delivery of incremental updates. User feedback is constantly monitored and incorporated.</p>
    <p>P T D D P T D D P T D D P T D D P T D D</p>
    <p>Plan Develop Test Deploy</p>
    <p>Deploys 100 a day!</p>
    <p>Deploys 300 a day!</p>
  </div>
  <div class="page">
    <p>Microservices + DevOps</p>
    <p>Applica/on is now a composi/on of loosely coupled microservices</p>
    <p>Individual microservices are owned and operated by independent teams</p>
    <p>Services are updated frequently, independent of other services, while maintaining compa/bility</p>
    <p>Edge Service</p>
    <p>Microservices</p>
    <p>User requests</p>
    <p>C</p>
    <p>F</p>
    <p>B D</p>
    <p>A</p>
    <p>E</p>
    <p>Persistence layer</p>
  </div>
  <div class="page">
    <p>The Availability Problem</p>
    <p>Frequent performance issues due to insufficient tes/ng</p>
    <p>High MTTR  Triaging is /me consuming as knowledge base is spread across teams</p>
    <p>End user experience is impacted un/l the issue is fixed</p>
    <p>Edge Service</p>
    <p>Microservices</p>
    <p>User requests</p>
    <p>C?</p>
    <p>F?</p>
    <p>B? D?</p>
    <p>A?</p>
    <p>E?</p>
    <p>Persistence layer</p>
    <p>Alert! Slow response /me</p>
  </div>
  <div class="page">
    <p>Downgrade parts of app, i.e., one or more services to an older version un/l symptoms disappear</p>
    <p>Autonomic downgrade for immediate response to availability related events</p>
    <p>An Interim Measure</p>
  </div>
  <div class="page">
    <p>Performance monitor  Source of truth for app health  Measures end user experience using various site metrics</p>
    <p>Faults handled  Prolonged periods of poor response /me  High error rates from service API calls  Frequent crashes of service</p>
    <p>Faults not handled  Infrastructure issues</p>
    <p>AssumpRons</p>
  </div>
  <div class="page">
    <p>App-Bisect: Autonomous Healing</p>
    <p>Evaluate all possible compa/ble &amp; older versions of service combina/ons in produc/on, alongside current deployment</p>
    <p>Stop search upon finding the most recent combina/on of versions that offer the desired end user experience</p>
    <p>A B C D E F</p>
    <p>Revision histories</p>
    <p>Major update</p>
    <p>Minor update</p>
  </div>
  <div class="page">
    <p>Leverage version dependencies across services</p>
    <p>When rever/ng a service to its earlier incarna/on, revert dependent services to their most recent and compa/ble version</p>
    <p>Ensures that a deployed combina/on of services is compa/ble</p>
    <p>CompaRble CombinaRons of Microservices</p>
    <p>A B D</p>
    <p>Dependency range</p>
    <p>HEAD v2.3</p>
    <p>v2.2</p>
    <p>v2.1</p>
    <p>v2.0</p>
    <p>v1.1</p>
    <p>v1.0</p>
    <p>{ name: A, version: 5.0,  dependencies: { B: &gt;= 3.0, D: &gt;= 1.0</p>
    <p>|| &lt;= 2.0&quot; }  }</p>
    <p>App Manifest file</p>
    <p>v3.0</p>
    <p>v5.1</p>
  </div>
  <div class="page">
    <p>Bounding Search w/ Global Restore Points</p>
    <p>Global restore points  Created by developers  Signify points in</p>
    <p>applica/ons history where major updates were made, e.g., schema changes</p>
    <p>Cannot revert beyond this point</p>
    <p>Search starts from current version to the most recent global restore point</p>
    <p>A B C D E F</p>
    <p>Global restore point</p>
    <p>Current version</p>
    <p>Search space</p>
  </div>
  <div class="page">
    <p>EvaluaRng Downgraded Versions</p>
    <p>Version-aware rou/ng using SDN infrastructure</p>
    <p>Deploy &amp; route por/on of user traffic through an older service chain</p>
    <p>Monitor applica/on metrics for error symptoms</p>
    <p>Edge Service</p>
    <p>User requests</p>
    <p>C</p>
    <p>F</p>
    <p>B D v2.3</p>
    <p>A v1</p>
    <p>E v1.9</p>
    <p>Persistence layer</p>
    <p>Microservices</p>
    <p>D v2.2</p>
    <p>E v1.8</p>
    <p>App-bisect</p>
  </div>
  <div class="page">
    <p>Leverage the SDN substrate</p>
    <p>Uniquely iden/fy services of a given version using &lt;Machine-IP, SDN-switch-port&gt;</p>
    <p>Setup routes according to the combina/on of versions being tested</p>
    <p>Not the most cleanest solu/on, but requires no modifica/ons to the applica/on</p>
    <p>RouRng Across the Right Versions</p>
  </div>
  <div class="page">
    <p>Open Issues</p>
    <p>Applica/on abstrac/ons for version-aware aware rou/ng</p>
    <p>Dealing with state (data stores) when tes/ng older versions of services</p>
    <p>Edge Service</p>
    <p>User requests</p>
    <p>C</p>
    <p>F</p>
    <p>B D v2.3</p>
    <p>A v1</p>
    <p>E v1.9</p>
    <p>Persistence layer</p>
    <p>Microservices</p>
    <p>E v1.8</p>
    <p>A v0.9</p>
  </div>
  <div class="page">
    <p>Thank You</p>
  </div>
</Presentation>
