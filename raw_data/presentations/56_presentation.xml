<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Department of Computer Science</p>
    <p>Empirical Evaluation of Latency-Sensitive Application</p>
    <p>Performance in the Cloud</p>
    <p>Sean Barker and Prashant Shenoy University of Massachusetts Amherst</p>
  </div>
  <div class="page">
    <p>Cloud Computing</p>
    <p>! Cloud platforms built with data centers: large-scale, concentrated servers clusters  Machines rented out to</p>
    <p>companies or individuals  Hosting for arbitrary applications  May supplement local resources</p>
    <p>! Cheap enough to rent machines by the hour</p>
    <p>Type CPUs Memory Disk Cost/hr</p>
    <p>Small 1 1.7 GB 160 GB $0.085</p>
    <p>Large 4 7.5 GB 850 GB $0.34</p>
    <p>XL 8 15 GB 1690 GB $0.68</p>
    <p>Current prices on Amazon Elastic Compute Cloud (EC2)</p>
  </div>
  <div class="page">
    <p>Multimedia Cloud Computing Scenarios</p>
    <p>! Clouds designed primarily for web &amp; e-commerce apps, but may also be used for multimedia</p>
    <p>! Rent game server for an evening  No firewall or bandwidth issues, only a few dollars</p>
    <p>! Rent high-CPU machines for HD video transcoding  Home PC may take several hours to transcode one video,</p>
    <p>cloud can transcode many in a fraction of this time</p>
    <p>! Rent servers for webcast of live event  Large, inexpensive temporary bandwidth allocation</p>
  </div>
  <div class="page">
    <p>! Data center servers are typically well-equipped  Providers share individual</p>
    <p>machines machines among multiple users</p>
    <p>! Example: one user runs game server, another runs high-performance database on same machine</p>
    <p>! Multimedia has unique performance requirements  Low latency games, low jitter &amp; high bandwidth streaming</p>
    <p>! Are cloud platforms designed for conventional web applications suitable for multimedia?</p>
    <p>Resource Sharing in the Cloud</p>
    <p>Core 1</p>
    <p>Core 2</p>
    <p>Core 3</p>
    <p>Core 4</p>
    <p>Core 1</p>
    <p>Core 2</p>
    <p>Core 3</p>
    <p>Core 4</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>! Motivation</p>
    <p>! Virtualized clouds</p>
    <p>! Amazon EC2 study</p>
    <p>! Laboratory cloud study</p>
    <p>! Real world multimedia case studies</p>
    <p>! Related work &amp; conclusions</p>
  </div>
  <div class="page">
    <p>Virtualized Clouds</p>
    <p>! Cloud platforms are virtualized data centers ! Virtualization facilitates machine distribution</p>
    <p>among multiple users with virtual machines (VMs)</p>
    <p>VM</p>
    <p>Hardware</p>
    <p>VM VM</p>
    <p>Game Server</p>
    <p>Web Server</p>
    <p>Media Server</p>
    <p>Customer A</p>
    <p>Users</p>
    <p>Customer C</p>
    <p>Customer B</p>
  </div>
  <div class="page">
    <p>! Each VM is assigned slice of physical resources ! VM access to hardware managed by hypervisor  Enforces limits and isolates VMs from each other</p>
    <p>! Are these resource sharing mechanisms suitable for the timeliness constraints of multimedia?</p>
    <p>VM VM VM</p>
    <p>App A</p>
    <p>App C</p>
    <p>Users</p>
    <p>App B</p>
    <p>Hardware</p>
    <p>Hypervisor</p>
    <p>Virtual Machine Isolation</p>
    <p>resource starvation</p>
    <p>Hypervisor</p>
    <p>VM VM VM</p>
    <p>App A</p>
    <p>Users</p>
    <p>Hardware</p>
    <p>App B App C</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>! Motivation</p>
    <p>! Virtualized clouds</p>
    <p>! Amazon EC2 study</p>
    <p>! Laboratory cloud study</p>
    <p>! Real world multimedia case studies</p>
    <p>! Related work &amp; conclusions</p>
  </div>
  <div class="page">
    <p>EC2 Study  Overview</p>
    <p>! Amazon Elastic Compute Cloud (EC2)  Popular virtualized cloud platform</p>
    <p>! Unknown applications coexisting on machine  No control over VM placement</p>
    <p>! Goal: evaluate performance with unknown background server load</p>
    <p>! Methodology: measured CPU, disk, and network consistency over period of days</p>
  </div>
  <div class="page">
    <p>EC2 CPU Performance</p>
    <p>Time (5 minute intervals)</p>
    <p>EC2 Local</p>
    <p>Volatility on EC2 vs stability on dedicated server</p>
    <p>no competing VMs: no outliers</p>
  </div>
  <div class="page">
    <p>EC2 Disk Performance</p>
    <p>Time (5 minute intervals)</p>
    <p>EC2 Local</p>
    <p>Similarly: inconsistent EC2 disk performance</p>
    <p>widely fluctuating disk performance</p>
  </div>
  <div class="page">
    <p>EC2 Network Latency (LAN)</p>
    <p>Time (5 minute intervals)</p>
    <p>Latency variations in EC2 LAN</p>
  </div>
  <div class="page">
    <p>EC2 Study  Summary</p>
    <p>! Performance variations observed on EC2  Not observed on local server running a single VM</p>
    <p>! Can only speculate on causes without access to the hypervisor</p>
    <p>! Need to experiment on a controlled platform similar to Amazons</p>
  </div>
  <div class="page">
    <p>Laboratory Cloud Study  Overview</p>
    <p>! Local cloud running the Xen hypervisor  Same virtualization technology used by EC2  Advantage: local cloud gives us control of interference</p>
    <p>! Built-in mechanisms for sharing hardware between VMs  CPU credit scheduler  Round-robin disk servicing  Linux-level tool tc for network sharing</p>
    <p>! How well do these tools isolate background work?</p>
    <p>! Methodology: evaluated performance impact of competing VM</p>
  </div>
  <div class="page">
    <p>CPU Performance with Background Load</p>
    <p>Time (5 second intervals)</p>
    <p>Default 1 to 1 sharing with variable background load</p>
    <p>No background work: VM gets 100% CPU</p>
    <p>Max background work: VM gets 50% CPU</p>
  </div>
  <div class="page">
    <p>Disk Performance with Background Load</p>
    <p>P e r f o r m a n c e I m p a c t ( % )</p>
    <p>Disk Thread Pairs on Collocated VM</p>
    <p>Fair Share Small Read</p>
    <p>Small Write Read Throughput</p>
    <p>Write Throughput</p>
    <p>Degraded by half over fair, but stable with increasing load</p>
    <p>unfair impact</p>
  </div>
  <div class="page">
    <p>Laboratory Cloud Study  Summary</p>
    <p>! Significant interference possible from background VMs</p>
    <p>! Xen configuration can guarantee share of CPU  Default settings allow fluctuation in shared CPU</p>
    <p>! Disk sharing less fair and harder to control  Consistent with observed EC2 behavior</p>
    <p>! Network sharing effects evaluated in case studies on laboratory cloud (next)</p>
  </div>
  <div class="page">
    <p>Case Study 1  Doom 3 Game Server</p>
    <p>! Multiplayer Doom 3 game server</p>
    <p>! Introduced controlled interference as before</p>
    <p>! Measured map load times and server latency</p>
    <p>! Network sharing configuration via tc:  Idle: No bandwidth usage by resource-hog VM  Off (default): No rate-limiting, network free-for-all  Shared: 50% (min) to 100% (max) of bandwidth per VM  Dedicated: 50% (max) of bandwidth per VM</p>
  </div>
  <div class="page">
    <p>Game Server Map Load</p>
    <p>Idle Disk CPU Disk + CPU</p>
    <p>A v e r a g e S e r v e r L o a d T i m e ( m s )</p>
    <p>Collocated VM Activity</p>
    <p>Interference produces up to 50% degradation</p>
  </div>
  <div class="page">
    <p>Game Server Latency</p>
    <p>! Server crippled without bandwidth controls (tc off)</p>
    <p>! Dedicated vs shared bandwidth:  Dedicated: lower latency, higher jitter  Sharing: higher latency, lower jitter</p>
    <p>Configuration Avg. Latency (ms)</p>
    <p>Std. Deviation (jitter)</p>
    <p>Timeouts</p>
    <p>No interference 8.1 10.2 0%</p>
    <p>tc off (free-for-all) N/A N/A 100%</p>
    <p>tc, sharing b/w 33.9 16.9 2%</p>
    <p>tc, dedicated b/w 23.6 29.6 7%</p>
  </div>
  <div class="page">
    <p>Case Study 2  Darwin Streaming Server</p>
    <p>! Streaming video to multiple clients</p>
    <p>! Introduced controlled interference as before</p>
    <p>! Measured sustained streaming bandwidth and stream jitter (latency variation)</p>
    <p>! Varied tc settings and number of clients  Max video stream rate of 1 Mbps per client</p>
  </div>
  <div class="page">
    <p>Streaming Server Bandwidth</p>
    <p>idle (fair) off shared dedicated</p>
    <p>a v e r a g e b i t r a t e p e r s t r e a m ( k b p s )</p>
    <p>tc sharing type</p>
    <p>both tc configurations recovered bandwidth</p>
    <p>decreased stream quality</p>
  </div>
  <div class="page">
    <p>Streaming Server Jitter</p>
    <p>idle (fair) off shared dedicated</p>
    <p>a v e r a g e s t r e a m j i t t e r ( m s )</p>
    <p>tc sharing type</p>
    <p>Jitter improved by shared, but worsened by dedicated</p>
  </div>
  <div class="page">
    <p>Real World Case Studies  Summary</p>
    <p>! Real applications show substantial impacts from background interference</p>
    <p>! Network is particularly vulnerable without administrative controls</p>
    <p>! Proper configuration is important  CPU and network isolation tools fairly well-developed  Disk isolation needs better mechanisms</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>! Fair-share schedulers and quality-of-service  Nieh and Lam (SOSP 97) for multimedia  Sundaram et al. (ACM MM 00) for QoS-aware OS</p>
    <p>! Virtualization and hypervisors  Xen, VMware ESX Server</p>
    <p>! Improving performance isolation  Gupta et al. (Middleware 06) for Xen mechanisms</p>
    <p>! We focus on evaluation of existing mechanisms with specific attention to multimedia</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>! Clouds exhibit performance variations  Applications with timeliness requirements are</p>
    <p>particularly sensitive</p>
    <p>! Appropriate hypervisor configuration can help  In some cases, prevents resource starvation  Some resource sharing mechanisms need improvement</p>
    <p>! Future work: evaluation of non-Xen platforms</p>
    <p>! Questions?</p>
  </div>
</Presentation>
