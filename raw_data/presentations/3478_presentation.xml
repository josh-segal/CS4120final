<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>teEther: Gnawing at Ethereum to Automatically Exploit Smart Contracts</p>
    <p>Johannes Krupp, Christian Rossow</p>
    <p>This project has received funding from the European Unions Horizon 2020 research and innovation programme under grant agreement No 700176</p>
  </div>
  <div class="page">
    <p>In a nutshell</p>
  </div>
  <div class="page">
    <p>In a nutshell</p>
  </div>
  <div class="page">
    <p>Ethereum</p>
    <p>johannes.krupp@cispa.saarland 4</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Smart Contracts</p>
    <p>johannes.krupp@cispa.saarland 6</p>
    <p>Ethereum Virtual Machine (EVM) bytecode</p>
    <p>executed on incoming transaction</p>
    <p>otherwise like regular account:</p>
    <p>- address</p>
    <p>- balance</p>
    <p>use cases:</p>
    <p>- crowdfunding schemes</p>
    <p>- shared wallets</p>
    <p>- games</p>
    <p>-</p>
  </div>
  <div class="page">
    <p>Smart Contracts</p>
    <p>johannes.krupp@cispa.saarland 7</p>
    <p>Ethereum Virtual Machine (EVM) bytecode</p>
    <p>executed on incoming transaction</p>
    <p>otherwise like regular account:</p>
    <p>- address</p>
    <p>- balance</p>
    <p>use cases:</p>
    <p>- crowdfunding schemes</p>
    <p>- shared wallets</p>
    <p>- games</p>
    <p>-</p>
    <p>may contain bugs</p>
    <p>goal: find &amp; exploit bugs</p>
    <p>cannot be updated</p>
  </div>
  <div class="page">
    <p>Smart Contract Exploitation</p>
  </div>
  <div class="page">
    <p>Transactions</p>
    <p>johannes.krupp@cispa.saarland 9</p>
    <p>from sender</p>
    <p>to recipient</p>
    <p>value transferred amount</p>
    <p>- may also be zero</p>
    <p>gas transaction fee</p>
    <p>data input data</p>
    <p>- may be empty</p>
  </div>
  <div class="page">
    <p>Ethereum Virtual Machine (EVM)</p>
    <p>johannes.krupp@cispa.saarland 10</p>
    <p>stack machine</p>
    <p>256 bit wordsize</p>
    <p>~70 instructions</p>
    <p>- arithmetic</p>
    <p>- logic</p>
    <p>- control flow</p>
    <p>- blockchain interaction</p>
  </div>
  <div class="page">
    <p>control flow graph recovery</p>
    <p>Challenges</p>
    <p>johannes.krupp@cispa.saarland 11</p>
  </div>
  <div class="page">
    <p>Control Flow Instructions</p>
    <p>johannes.krupp@cispa.saarland 12</p>
    <p>JUMP</p>
    <p>- unconditional jump</p>
    <p>- jump to target</p>
    <p>JUMPI</p>
    <p>- conditional jump</p>
    <p>- jump to target if test is non-zero</p>
    <p>JUMPDEST</p>
    <p>- marks valid jump target</p>
    <p>- no op</p>
    <p>target</p>
    <p>target test</p>
  </div>
  <div class="page">
    <p>CFG Recovery</p>
    <p>johannes.krupp@cispa.saarland 13</p>
    <p>JUMP JUMPI JUMPDEST</p>
  </div>
  <div class="page">
    <p>CFG Recovery</p>
    <p>johannes.krupp@cispa.saarland 14</p>
    <p>PUSH1 09 CALLVALUE PUSH1 07 JUMPI</p>
    <p>STOP</p>
    <p>JUMPDEST JUMP</p>
    <p>JUMPDEST STOP</p>
    <p>a</p>
  </div>
  <div class="page">
    <p>CFG Recovery</p>
    <p>johannes.krupp@cispa.saarland 15</p>
    <p>PUSH1 09 CALLVALUE PUSH1 07 JUMPI</p>
    <p>STOP</p>
    <p>JUMPDEST JUMP</p>
    <p>JUMPDEST STOP</p>
  </div>
  <div class="page">
    <p>CFG Recovery</p>
    <p>johannes.krupp@cispa.saarland 16</p>
    <p>PUSH1 09 CALLVALUE PUSH1 07 JUMPI</p>
    <p>STOP</p>
    <p>JUMPDEST JUMP</p>
    <p>JUMPDEST STOP</p>
  </div>
  <div class="page">
    <p>CFG Recovery</p>
    <p>johannes.krupp@cispa.saarland 17</p>
    <p>PUSH1 09 CALLVALUE PUSH1 07 JUMPI</p>
    <p>STOP JUMPDEST JUMP</p>
    <p>JUMPDEST STOP</p>
  </div>
  <div class="page">
    <p>CFG Recovery</p>
    <p>johannes.krupp@cispa.saarland 18</p>
    <p>PUSH1 09 CALLVALUE PUSH1 07 JUMPI</p>
    <p>STOP JUMPDEST JUMP</p>
    <p>JUMPDEST STOP</p>
  </div>
  <div class="page">
    <p>CFG Recovery</p>
    <p>johannes.krupp@cispa.saarland 19</p>
    <p>PUSH1 09 CALLVALUE PUSH1 07 JUMPI</p>
    <p>STOP JUMPDEST JUMP</p>
    <p>JUMPDEST STOP</p>
  </div>
  <div class="page">
    <p>CFG Recovery</p>
    <p>johannes.krupp@cispa.saarland 20</p>
    <p>PUSH1 09 CALLVALUE PUSH1 07 JUMPI</p>
    <p>STOP JUMPDEST JUMP</p>
    <p>JUMPDEST STOP</p>
  </div>
  <div class="page">
    <p>CFG Recovery</p>
    <p>johannes.krupp@cispa.saarland 21</p>
    <p>PUSH1 09 CALLVALUE PUSH1 07 JUMPI</p>
    <p>STOP JUMPDEST JUMP</p>
    <p>JUMPDEST STOP</p>
    <p>call.value</p>
  </div>
  <div class="page">
    <p>CFG Recovery</p>
    <p>johannes.krupp@cispa.saarland 22</p>
    <p>PUSH1 09 CALLVALUE PUSH1 07 JUMPI</p>
    <p>STOP JUMPDEST JUMP</p>
    <p>JUMPDEST STOP</p>
  </div>
  <div class="page">
    <p>CFG Recovery</p>
    <p>johannes.krupp@cispa.saarland 23</p>
    <p>PUSH1 09 CALLVALUE PUSH1 07 JUMPI</p>
    <p>STOP JUMPDEST JUMP</p>
    <p>JUMPDEST STOP</p>
  </div>
  <div class="page">
    <p>control flow graph recovery</p>
    <p>Challenges</p>
    <p>johannes.krupp@cispa.saarland 24</p>
    <p>how can we get money from a contract?</p>
  </div>
  <div class="page">
    <p>Ethereum Virtual Machine (EVM)</p>
    <p>johannes.krupp@cispa.saarland 25</p>
    <p>stack machine</p>
    <p>256 bit wordsize</p>
    <p>~70 instructions</p>
    <p>- arithmetic</p>
    <p>- logic</p>
    <p>- control flow</p>
    <p>- blockchain interaction</p>
  </div>
  <div class="page">
    <p>Critical Instructions</p>
    <p>johannes.krupp@cispa.saarland 26</p>
    <p>CALL</p>
    <p>- regular transaction</p>
    <p>- transfer value to to</p>
    <p>SELFDESTRUCT</p>
    <p>- contract destruction</p>
    <p>- transfer funds to recipient</p>
    <p>CALLCODE / DELEGATECALL</p>
    <p>- execute code of target</p>
    <p>- code injection</p>
    <p>to value</p>
    <p>recipient</p>
    <p>target</p>
    <p>must execute one of these</p>
  </div>
  <div class="page">
    <p>Critical Paths</p>
    <p>johannes.krupp@cispa.saarland 27</p>
    <p>data[0:20]</p>
  </div>
  <div class="page">
    <p>Critical Paths</p>
    <p>johannes.krupp@cispa.saarland 28</p>
    <p>data[0:20]0x0000000</p>
  </div>
  <div class="page">
    <p>Critical Paths</p>
    <p>johannes.krupp@cispa.saarland 29</p>
  </div>
  <div class="page">
    <p>Exploit Generation  General Approach</p>
    <p>johannes.krupp@cispa.saarland 30</p>
    <p>- collect path constraints</p>
    <p>- unsatisfiable: generate next path</p>
    <p>- satisfiable: done</p>
    <p>x &gt; 0</p>
    <p>y &gt; 0</p>
  </div>
  <div class="page">
    <p>control flow graph recovery</p>
    <p>contract state</p>
    <p>SHA3 instruction</p>
    <p>Challenges</p>
    <p>johannes.krupp@cispa.saarland 31</p>
  </div>
  <div class="page">
    <p>contract Stateful{</p>
    <p>bool vulnerable = false;</p>
    <p>function exploit(address attacker){ require(vulnerable); attacker.transfer(this.balance);</p>
    <p>}</p>
    <p>function makeVulnerable(){ vulnerable = true;</p>
    <p>}</p>
    <p>}</p>
    <p>function call = transaction</p>
    <p>Contract State</p>
    <p>johannes.krupp@cispa.saarland 32</p>
    <p>state at bytecode level?</p>
  </div>
  <div class="page">
    <p>EVM  Memory Model</p>
    <p>johannes.krupp@cispa.saarland 33</p>
    <p>Stack</p>
    <p>stack</p>
    <p>256 bit words</p>
    <p>volatile</p>
    <p>Memory</p>
    <p>array</p>
    <p>byte-addressable</p>
    <p>volatile</p>
    <p>Storage</p>
    <p>map/dictionary</p>
    <p>256 bit keys, 256 bit values</p>
    <p>persistent</p>
    <p>state change = storage change</p>
  </div>
  <div class="page">
    <p>Storage Instructions</p>
    <p>johannes.krupp@cispa.saarland 34</p>
    <p>SLOAD</p>
    <p>- load value for key</p>
    <p>SSTORE</p>
    <p>- store value at key</p>
    <p>key value</p>
    <p>key</p>
  </div>
  <div class="page">
    <p>State Changing Paths</p>
    <p>johannes.krupp@cispa.saarland 35</p>
    <p>- collect path constraints</p>
    <p>- collect storage reads  &amp; writes</p>
    <p>x  0</p>
    <p>store @ k</p>
    <p>= {}</p>
    <p>=</p>
    <p>= {  0}</p>
  </div>
  <div class="page">
    <p>combine  state changing paths + 1 critical path</p>
    <p>Path Stitching</p>
    <p>johannes.krupp@cispa.saarland 36</p>
    <p>= {}</p>
    <p>=</p>
    <p>= {  0}</p>
    <p>=</p>
    <p>= {}</p>
    <p>= { &gt; 0,  &gt; 0}</p>
    <p>=</p>
    <p>= {0  0, 1 &gt; 0, 1 &gt; 0}</p>
    <p>=      =</p>
    <p>=    = {}</p>
  </div>
  <div class="page">
    <p>control flow graph recovery</p>
    <p>contract state</p>
    <p>SHA3 instruction</p>
    <p>Challenges</p>
    <p>johannes.krupp@cispa.saarland 37</p>
  </div>
  <div class="page">
    <p>SHA3 Instruction</p>
    <p>johannes.krupp@cispa.saarland 38</p>
    <p>SHA3</p>
    <p>- compute Keccak-256 hash over memory[offset : offset + len]</p>
    <p>- used to implement Soliditys mapping type</p>
    <p>offset len</p>
    <p>function check(bytes32 data, bytes32 check){ require(data == 1337 &amp;&amp; sha3(data) == check) //</p>
    <p>= { = &quot;1337&quot;, 3() = }</p>
    <p>How to solve 3() = ?</p>
  </div>
  <div class="page">
    <p>SHA3 Instruction</p>
    <p>johannes.krupp@cispa.saarland 39</p>
    <p>= { = &quot;1337&quot;, 3() = }</p>
    <p>dependent constraint</p>
    <p>= { = &quot;1337&quot;}1. remove dependent constraints 2. solve reduced set 3. compute hash values 4. replace dependent constraints 5. repeat</p>
    <p>3   0985. .</p>
    <p>= { = &quot;1337&quot;, 0985. . = }</p>
    <p>independent</p>
    <p>dependent expression</p>
  </div>
  <div class="page">
    <p>control flow graph recovery</p>
    <p>contract state</p>
    <p>SHA3 instruction</p>
    <p>Challenges</p>
    <p>johannes.krupp@cispa.saarland 40</p>
  </div>
  <div class="page">
    <p>teEther</p>
    <p>teEther</p>
    <p>johannes.krupp@cispa.saarland 41</p>
    <p>CFG recovery</p>
    <p>critical instructions</p>
    <p>path generation</p>
    <p>constraint generation</p>
    <p>path stitching</p>
    <p>exploit generation</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>johannes.krupp@cispa.saarland 42</p>
    <p>contracts from blockchain</p>
    <p>784,344 total</p>
    <p>38,757 unique</p>
    <p>30 min CFG recovery + 30 min exploit generation</p>
    <p>CALL</p>
    <p>CALLCODE</p>
    <p>DELEGATECALL</p>
    <p>SELFDESTRUCT</p>
    <p>No Critical Path Critical Path Exploit Timeout</p>
  </div>
  <div class="page">
    <p>Evaluation - Exploits</p>
    <p>johannes.krupp@cispa.saarland 43</p>
    <p>contracts from blockchain</p>
    <p>784,344 total</p>
    <p>38,757 unique</p>
    <p>30 min CFG recovery + 30 min exploit generation</p>
    <p>630 unique exploits</p>
    <p>1,731 affected contracts</p>
    <p>1,769 total exploits</p>
    <p>CALL</p>
    <p>CALLCODE</p>
    <p>DELEGATECALL</p>
    <p>SELFDESTRUCT</p>
    <p>Exploit Potential Exploit</p>
  </div>
  <div class="page">
    <p>Validation</p>
    <p>johannes.krupp@cispa.saarland 44</p>
    <p>local test network</p>
    <p>three accounts:</p>
    <p>- target contract</p>
    <p>- attacker</p>
    <p>- shellcode contract</p>
    <p>two step validation:</p>
    <p>- update exploit to reflect target storage</p>
    <p>- replay exploit</p>
    <p>CALL</p>
    <p>CALLCODE</p>
    <p>DELEGATECALL</p>
    <p>SELFDESTRUCT</p>
    <p>Successful Failed Update Failed Exploit</p>
  </div>
  <div class="page">
    <p>Validation</p>
    <p>johannes.krupp@cispa.saarland 45</p>
    <p>local test network</p>
    <p>three accounts:</p>
    <p>- target contract</p>
    <p>- attacker</p>
    <p>- shellcode contract</p>
    <p>two step validation:</p>
    <p>- update exploit to reflect target storage</p>
    <p>- replay exploit</p>
    <p>CALL</p>
    <p>CALLCODE</p>
    <p>DELEGATECALL</p>
    <p>SELFDESTRUCT</p>
    <p>Successful Failed Update Failed Exploit</p>
    <p>What are the vulnerabilities?</p>
  </div>
  <div class="page">
    <p>Vulnerabilities</p>
    <p>johannes.krupp@cispa.saarland 46</p>
    <p>Contracts</p>
    <p>Exploitable Source Code Published</p>
    <p>reverse engineering infeasible</p>
    <p>OSINT: publish &amp; verify on etherscan.io</p>
    <p>manual analysis</p>
  </div>
  <div class="page">
    <p>Vulnerabilities</p>
    <p>johannes.krupp@cispa.saarland 47</p>
    <p>logic bugs modifier onlyowner() { require(msg.sender == owner); _;</p>
    <p>}</p>
    <p>!</p>
  </div>
  <div class="page">
    <p>Vulnerabilities</p>
    <p>johannes.krupp@cispa.saarland 48</p>
    <p>logic bugs</p>
    <p>semantic confusion</p>
    <p>msg.value value of current transaction</p>
    <p>this.balance balance of account</p>
  </div>
  <div class="page">
    <p>Vulnerabilities</p>
    <p>johannes.krupp@cispa.saarland 49</p>
    <p>logic bugs</p>
    <p>semantic confusion</p>
    <p>visibility errors</p>
  </div>
  <div class="page">
    <p>contract Bet{</p>
    <p>function play() {</p>
    <p>if(bet1 &gt; bet2){</p>
    <p>win(player1);</p>
    <p>}else if(bet2 &gt; bet1){</p>
    <p>win(player2);</p>
    <p>}else{</p>
    <p>draw(player1, player2);</p>
    <p>}</p>
    <p>}</p>
    <p>}</p>
    <p>Vulnerabilities  Visibility</p>
    <p>johannes.krupp@cispa.saarland 50</p>
  </div>
  <div class="page">
    <p>contract Bet{</p>
    <p>function win(address winner) internal { winner.transfer(AMOUNT_WIN);</p>
    <p>}</p>
    <p>function draw(address player1, address player2) { player1.transfer(AMOUNT_DRAW); player2.transfer(AMOUNT_DRAW);</p>
    <p>}</p>
    <p>}</p>
    <p>Vulnerabilities  Visibility</p>
    <p>johannes.krupp@cispa.saarland 51</p>
    <p>default visibility: public</p>
    <p>call draw(attacker, attacker)</p>
  </div>
  <div class="page">
    <p>Vulnerabilities</p>
    <p>johannes.krupp@cispa.saarland 52</p>
    <p>logic bugs</p>
    <p>semantic confusion</p>
    <p>visibility errors</p>
    <p>constructor errors</p>
  </div>
  <div class="page">
    <p>Vulnerabilities  Constructor</p>
    <p>johannes.krupp@cispa.saarland 53</p>
    <p>contract Owned{</p>
    <p>function Owned() { owner = msg.sender;</p>
    <p>}</p>
    <p>}</p>
    <p>constructor</p>
    <p>executed only once</p>
    <p>msg.sender = contract creator</p>
    <p>contract Owned{</p>
    <p>function owned() { owner = msg.sender;</p>
    <p>}</p>
    <p>}</p>
    <p>regular function</p>
    <p>can be called by anyone</p>
    <p>msg.sender = anyone</p>
  </div>
  <div class="page">
    <p>Vulnerabilities</p>
    <p>johannes.krupp@cispa.saarland 54</p>
    <p>logic bugs</p>
    <p>semantic confusion</p>
    <p>visibility errors</p>
    <p>constructor errors</p>
    <p>Solidity partially at fault</p>
    <p>caused by Solidity syntax?</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>johannes.krupp@cispa.saarland 55</p>
    <p>johannes.krupp@cispa.saarland</p>
    <p>@KruppJohannes</p>
    <p>teEther will be open sourced!</p>
  </div>
</Presentation>
