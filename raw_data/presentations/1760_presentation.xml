<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Maranello: Practical Partial Packet Recovery for 802.11</p>
    <p>Bo Han Aaron Schulman</p>
    <p>Neil Spring Bobby Bhattacharjee</p>
    <p>University of Maryland</p>
    <p>Francesco Gringoli Lorenzo Nava</p>
    <p>University of Brescia</p>
    <p>Lusheng Ji Seungjoon Lee Robert Miller</p>
    <p>AT&amp;T Research</p>
  </div>
  <div class="page">
    <p>Block-based partial packet recovery</p>
    <p>corrupt packet</p>
  </div>
  <div class="page">
    <p>Block-based partial packet recovery</p>
    <p>corrupt packet</p>
  </div>
  <div class="page">
    <p>Block-based partial packet recovery</p>
    <p>corrupt packet</p>
  </div>
  <div class="page">
    <p>Block-based partial packet recovery</p>
    <p>corrupt packet</p>
    <p>repair blocks</p>
  </div>
  <div class="page">
    <p>Block-based partial packet recovery</p>
    <p>repaired packet</p>
  </div>
  <div class="page">
    <p>Block-based partial packet recovery</p>
    <p>Increases throughput because:  Repairs are shorter than retransmissions  Short transmissions have higher delivery probability  Early delivery avoids backoff and low rate</p>
    <p>retransmission</p>
    <p>repaired packet</p>
  </div>
  <div class="page">
    <p>re pa</p>
    <p>ir bi</p>
    <p>ts p</p>
    <p>er in</p>
    <p>co rr</p>
    <p>ec t b</p>
    <p>it</p>
    <p>error traces by average bit error rate</p>
    <p>Symbols (PPR) Ideal Reed Solomon (ZipTx)</p>
    <p>Blocks (Maranello)</p>
    <p>Deployable partial packet recovery</p>
    <p>Symbols (PPR)</p>
    <p>~~ 142</p>
    <p>~~ Full retransmission67</p>
    <p>~~</p>
  </div>
  <div class="page">
    <p>co rr</p>
    <p>up te</p>
    <p>d pa</p>
    <p>ck et</p>
    <p>s</p>
    <p>bits</p>
  </div>
  <div class="page">
    <p>co rr</p>
    <p>up te</p>
    <p>d pa</p>
    <p>ck et</p>
    <p>s</p>
    <p>bits</p>
  </div>
  <div class="page">
    <p>co rr</p>
    <p>up te</p>
    <p>d pa</p>
    <p>ck et</p>
    <p>s</p>
    <p>bits</p>
  </div>
  <div class="page">
    <p>fra ct</p>
    <p>io n</p>
    <p>re pa</p>
    <p>ire d</p>
    <p>by b</p>
    <p>lo ck</p>
    <p>s 1 2 3 4 5 ... 19 20 21 22 23</p>
    <p>Need few blocks for repairs</p>
    <p>fra ct</p>
    <p>io n</p>
    <p>re pa</p>
    <p>ire d</p>
    <p>by b</p>
    <p>lo ck</p>
    <p>s 1 2 3 4 5 ... 19 20 21 22 23</p>
    <p>fra ct</p>
    <p>io n</p>
    <p>re pa</p>
    <p>ire d</p>
    <p>by b</p>
    <p>lo ck</p>
    <p>s 1 2 3 4 5 ... 19 20 21 22 23</p>
  </div>
  <div class="page">
    <p>fra ct</p>
    <p>io n</p>
    <p>re pa</p>
    <p>ire d</p>
    <p>by b</p>
    <p>lo ck</p>
    <p>s 1 2 3 4 5 ... 19 20 21 22 23</p>
    <p>Need few blocks for repairs</p>
    <p>fra ct</p>
    <p>io n</p>
    <p>re pa</p>
    <p>ire d</p>
    <p>by b</p>
    <p>lo ck</p>
    <p>s 1 2 3 4 5 ... 19 20 21 22 23</p>
    <p>fra ct</p>
    <p>io n</p>
    <p>re pa</p>
    <p>ire d</p>
    <p>by b</p>
    <p>lo ck</p>
    <p>s 1 2 3 4 5 ... 19 20 21 22 23</p>
  </div>
  <div class="page">
    <p>fra ct</p>
    <p>io n</p>
    <p>re pa</p>
    <p>ire d</p>
    <p>by b</p>
    <p>lo ck</p>
    <p>s 1 2 3 4 5 ... 19 20 21 22 23</p>
    <p>Need few blocks for repairs</p>
    <p>fra ct</p>
    <p>io n</p>
    <p>re pa</p>
    <p>ire d</p>
    <p>by b</p>
    <p>lo ck</p>
    <p>s 1 2 3 4 5 ... 19 20 21 22 23</p>
    <p>fra ct</p>
    <p>io n</p>
    <p>re pa</p>
    <p>ire d</p>
    <p>by b</p>
    <p>lo ck</p>
    <p>s 1 2 3 4 5 ... 19 20 21 22 23</p>
  </div>
  <div class="page">
    <p>fra ct</p>
    <p>io n</p>
    <p>re pa</p>
    <p>ire d</p>
    <p>by b</p>
    <p>lo ck</p>
    <p>s 1 2 3 4 5 ... 19 20 21 22 23</p>
    <p>Need few blocks for repairs</p>
    <p>32 bit errors, repaired by one block</p>
    <p>fra ct</p>
    <p>io n</p>
    <p>re pa</p>
    <p>ire d</p>
    <p>by b</p>
    <p>lo ck</p>
    <p>s 1 2 3 4 5 ... 19 20 21 22 23</p>
  </div>
  <div class="page">
    <p>fra ct</p>
    <p>io n</p>
    <p>re pa</p>
    <p>ire d</p>
    <p>by b</p>
    <p>lo ck</p>
    <p>s 1 2 3 4 5 ... 19 20 21 22 23</p>
    <p>Need few blocks for repairs</p>
    <p>32 bit errors, repaired by one block</p>
    <p>many bit errors, still correct blocks</p>
  </div>
  <div class="page">
    <p>Maranello design goals</p>
    <p>Compatible with 802.11 (Maintain link latency)  Incremental deployment  Runs on existing hardware  No extra bits for correct packets</p>
  </div>
  <div class="page">
    <p>Firmware suits block repair</p>
    <p>DriverFirmwareGnuRadio</p>
    <p>long delay expensive</p>
    <p>low rate</p>
    <p>deploy completely not compatible</p>
    <p>short delay cheap</p>
    <p>high rate</p>
    <p>deploy incrementally 802.11 compatible</p>
    <p>long delay cheap</p>
    <p>high rate</p>
    <p>deploy incrementally not compatible</p>
    <p>e.g. PPR Maranello e.g. ZipTx</p>
    <p>+ +</p>
    <p>+ ++</p>
    <p>+</p>
  </div>
  <div class="page">
    <p>Broadcom (OpenFWWF) firmware</p>
    <p>enqueue carrier sense transmit wait for ack</p>
    <p>backoff to retransmit</p>
    <p>Receive:</p>
    <p>Transmit:</p>
    <p>validate build and send repair</p>
    <p>build and send nack</p>
    <p>ack</p>
    <p>nack</p>
    <p>packet deliver</p>
    <p>packet</p>
    <p>send ack</p>
    <p>repair patch deliversend ack</p>
  </div>
  <div class="page">
    <p>Broadcom (OpenFWWF) firmware</p>
    <p>enqueue carrier sense transmit wait for ack</p>
    <p>backoff to retransmit</p>
    <p>Receive:</p>
    <p>Transmit:</p>
    <p>validate build and send repair</p>
    <p>build and send nack</p>
    <p>ack</p>
    <p>nack</p>
    <p>packet deliver</p>
    <p>packet</p>
    <p>send ack</p>
    <p>repair patch deliversend ack</p>
  </div>
  <div class="page">
    <p>Broadcom (OpenFWWF) firmware</p>
    <p>enqueue carrier sense transmit wait for ack</p>
    <p>backoff to retransmit</p>
    <p>Receive:</p>
    <p>Transmit:</p>
    <p>validate build and send repair</p>
    <p>build and send nack</p>
    <p>ack</p>
    <p>nack</p>
    <p>packet deliver</p>
    <p>packet</p>
    <p>send ack</p>
    <p>repair patch deliversend ack</p>
  </div>
  <div class="page">
    <p>validate build and send repair</p>
    <p>build and send nack</p>
    <p>ack</p>
    <p>nack</p>
    <p>packet deliver</p>
    <p>packet</p>
    <p>send ack</p>
    <p>repair patch deliversend ack</p>
    <p>Nacking with checksums</p>
    <p>C1 C2 C3 C4 C5</p>
    <p>build repaircompute checksums</p>
    <p>build and send repairbuild and send nack</p>
  </div>
  <div class="page">
    <p>validate build and send repair</p>
    <p>build and send nack</p>
    <p>ack</p>
    <p>nack</p>
    <p>packet deliver</p>
    <p>packet</p>
    <p>send ack</p>
    <p>repair patch deliversend ack</p>
    <p>Nacking with checksums</p>
    <p>C1 C2 C3 C4 C5</p>
    <p>build repaircompute checksums</p>
    <p>build and send repairbuild and send nack</p>
  </div>
  <div class="page">
    <p>validate build and send repair</p>
    <p>build and send nack</p>
    <p>ack</p>
    <p>nack</p>
    <p>packet deliver</p>
    <p>packet</p>
    <p>send ack</p>
    <p>repair patch deliversend ack</p>
    <p>Nacking with checksums</p>
    <p>C1 C2 C3 C4 C5</p>
    <p>build repaircompute checksums</p>
    <p>build and send repairbuild and send nack</p>
  </div>
  <div class="page">
    <p>validate build and send repair</p>
    <p>build and send nack</p>
    <p>ack</p>
    <p>nack</p>
    <p>packet deliver</p>
    <p>packet</p>
    <p>send ack</p>
    <p>repair patch deliversend ack</p>
    <p>Nacking with checksums</p>
    <p>C1 C2 C3 C4 C5</p>
    <p>build repaircompute checksums</p>
    <p>build and send repairbuild and send nack</p>
  </div>
  <div class="page">
    <p>ack</p>
    <p>SIFS</p>
    <p>packet</p>
    <p>ack timeout DIFS &amp; backoffcorrupt packet retransmission</p>
    <p>Correct:</p>
    <p>Retransmission:</p>
  </div>
  <div class="page">
    <p>ack</p>
    <p>SIFS</p>
    <p>packet</p>
    <p>ack timeout DIFS &amp; backoffcorrupt packet retransmission</p>
    <p>Correct:</p>
    <p>Retransmission:</p>
  </div>
  <div class="page">
    <p>Compute block checksums</p>
    <p>10s</p>
    <p>Exploiting 802.11s timing</p>
    <p>ack timeout DIFS &amp; backoffcorrupt packet retransmission</p>
    <p>SIFS</p>
    <p>reserved time for expected ack</p>
    <p>Identify mismatched checksums</p>
    <p>100s</p>
    <p>build nack build repair</p>
  </div>
  <div class="page">
    <p>Fletcher-32</p>
    <p>Operations per 16 bits: two adds, two decrements  All single bit errors, burst errors in a single 16-bit</p>
    <p>block, and two-bit errors separated by at most 16 bits</p>
    <p>CRC-32 &amp; Fletcher-32 find all block errors in 9,911,800 802.11 error packets</p>
    <p>Maranello relies on whole packet CRC-32</p>
  </div>
  <div class="page">
    <p>Cards CPU is not fast enough</p>
    <p>Problem: 4s per 64 byte block (SIFS = 10s)  Insight: Compute block checksums while blocks</p>
    <p>are received</p>
  </div>
  <div class="page">
    <p>Maranello design review</p>
    <p>Goal Solution</p>
    <p>Compatible with 802.11 (Maintain link layer latency)</p>
    <p>Broadcom firmware  Replace ack with nack</p>
    <p>(Fletcher-32 while blocks are received)</p>
    <p>Incremental deployment Legacy 802.11 ignores nacks</p>
    <p>No extra bits for correct packets</p>
    <p>Receiver sends checksums, sender finds the errors</p>
  </div>
  <div class="page">
    <p>Maranello is faster than 802.11</p>
    <p>M ar</p>
    <p>an el</p>
    <p>lo th</p>
    <p>ro ug</p>
    <p>hp ut</p>
    <p>(M bi</p>
    <p>t/s )</p>
  </div>
  <div class="page">
    <p>Retransmission behavior varies</p>
    <p>Windows Broadcom</p>
    <p>Windows Intel</p>
    <p>Windows Atheros</p>
    <p>Linux minstrel Broadcom</p>
    <p>tx ti</p>
    <p>m e</p>
    <p>(m s)</p>
    <p>retransmission rate (Mbit/s)</p>
    <p>ba ck</p>
    <p>of f (</p>
    <p>m s)</p>
    <p>tx ti</p>
    <p>m e</p>
    <p>(m s)</p>
    <p>retransmission rate (Mbit/s)</p>
    <p>ba ck</p>
    <p>of f (</p>
    <p>m s)</p>
    <p>tx ti</p>
    <p>m e</p>
    <p>(m s)</p>
    <p>retransmission rate (Mbit/s)</p>
    <p>ba ck</p>
    <p>of f (</p>
    <p>m s)</p>
    <p>tx ti</p>
    <p>m e</p>
    <p>(m s)</p>
    <p>retransmission rate (Mbit/s)</p>
    <p>ba ck</p>
    <p>of f (</p>
    <p>m s)</p>
  </div>
  <div class="page">
    <p>Trace-driven Maranello simulator</p>
    <p>Insight: Maranello packets are subset of 802.11 Assuming Maranello delivers all nacks successfully</p>
    <p>Intel E R E ER E R</p>
    <p>E R</p>
    <p>R E E R</p>
    <p>R E R</p>
    <p>Maranello Intel</p>
    <p>M R</p>
    <p>E M R</p>
    <p>M R</p>
    <p>EE M R</p>
    <p>E M R</p>
    <p>M R</p>
    <p>time</p>
  </div>
  <div class="page">
    <p>Trace-driven Maranello simulator</p>
  </div>
  <div class="page">
    <p>M R</p>
    <p>E M R</p>
    <p>M R</p>
    <p>EE M R</p>
    <p>E M R</p>
    <p>M R</p>
    <p>Intel E R E ER E R</p>
    <p>E R</p>
    <p>R E E R</p>
    <p>R E R</p>
    <p>Trace-driven Maranello simulator</p>
    <p>Insight: Maranello packets are subset of 802.11 Assuming Maranello delivers all nacks successfully</p>
    <p>Maranello</p>
  </div>
  <div class="page">
    <p>M R</p>
    <p>E M R</p>
    <p>M R</p>
    <p>EE M R</p>
    <p>E M R</p>
    <p>M R</p>
    <p>Intel E R E ER E R</p>
    <p>E R</p>
    <p>R E E R</p>
    <p>R E R</p>
    <p>E R</p>
    <p>M R</p>
    <p>E</p>
    <p>Trace-driven Maranello simulator</p>
    <p>Insight: Maranello packets are subset of 802.11 Assuming Maranello delivers all nacks successfully</p>
    <p>Maranello</p>
  </div>
  <div class="page">
    <p>M R</p>
    <p>E M R</p>
    <p>M R</p>
    <p>EE M R</p>
    <p>E M R</p>
    <p>M R</p>
    <p>Intel E R E ER E R</p>
    <p>E R</p>
    <p>R E E R</p>
    <p>R E R</p>
    <p>Trace-driven Maranello simulator</p>
    <p>Insight: Maranello packets are subset of 802.11 Assuming Maranello delivers all nacks successfully</p>
    <p>Maranello</p>
    <p>E</p>
    <p>E M R</p>
    <p>E R</p>
    <p>E R</p>
    <p>E R</p>
    <p>R</p>
  </div>
  <div class="page">
    <p>M R</p>
    <p>E M R</p>
    <p>M R</p>
    <p>EE M R</p>
    <p>E M R</p>
    <p>M R</p>
    <p>Intel E R E ER E R</p>
    <p>E R</p>
    <p>R E E R</p>
    <p>R E R</p>
    <p>Trace-driven Maranello simulator</p>
    <p>Insight: Maranello packets are subset of 802.11 Assuming Maranello delivers all nacks successfully</p>
    <p>Maranello</p>
    <p>E</p>
    <p>E</p>
    <p>E R</p>
    <p>R</p>
    <p>M R</p>
    <p>M R</p>
  </div>
  <div class="page">
    <p>Avoiding low rate retransmissions</p>
    <p>E R</p>
    <p>E R R</p>
    <p>minstrel Maranello EMR</p>
    <p>M R</p>
  </div>
  <div class="page">
    <p>Maranello increases throughput</p>
    <p>Windows Broadcom</p>
    <p>Windows Intel</p>
    <p>Windows Atheros</p>
    <p>Linux minstrel Broadcom</p>
    <p>tx ti</p>
    <p>m e</p>
    <p>(m s)</p>
    <p>retransmission rate (Mbit/s)</p>
    <p>ba ck</p>
    <p>of f (</p>
    <p>m s)</p>
    <p>tx ti</p>
    <p>m e</p>
    <p>(m s)</p>
    <p>retransmission rate (Mbit/s)</p>
    <p>ba ck</p>
    <p>of f (</p>
    <p>m s)</p>
    <p>tx ti</p>
    <p>m e</p>
    <p>(m s)</p>
    <p>retransmission rate (Mbit/s)</p>
    <p>ba ck</p>
    <p>of f (</p>
    <p>m s)</p>
    <p>tx ti</p>
    <p>m e</p>
    <p>(m s)</p>
    <p>retransmission rate (Mbit/s)</p>
    <p>ba ck</p>
    <p>of f (</p>
    <p>m s)</p>
  </div>
  <div class="page">
    <p>Compatibility with unmodified 802.11</p>
    <p>Maranello is faster than 802.11  Maranello is friendly to 802.11</p>
    <p>both 802.11</p>
    <p>both Mar.</p>
    <p>A Mar.</p>
    <p>B Mar.</p>
    <p>A M</p>
    <p>bi t/s</p>
    <p>B M</p>
    <p>bi t/s</p>
    <p>M M M</p>
    <p>Maranello MaranelloMaranello</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Block-based recovery is simple and powerful.  Maranello in firmware is compatible with 802.11 and</p>
    <p>incrementally deployable on existing APs and cards.</p>
    <p>Maranello increases throughput:  In various wireless environments  For popular retransmission behaviors</p>
    <p>Maranello is fair to unmodified 802.11.</p>
    <p>www.cs.umd.edu/projects/maranello</p>
  </div>
</Presentation>
