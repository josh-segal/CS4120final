<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Embassies: Radically refactoring the web</p>
    <p>John R. Douceur Jon Howell</p>
    <p>Bryan Parno Microsoft Research</p>
  </div>
  <div class="page">
    <p>promise of the web model</p>
  </div>
  <div class="page">
    <p>the web is quite vulnerable</p>
    <p>Buffer overflows</p>
    <p>JavaScript API vulnerabilities</p>
    <p>XSS</p>
    <p>CSRF</p>
    <p>Session fixation</p>
    <p>clickjacking</p>
  </div>
  <div class="page">
    <p>safe web-surfing hygiene?</p>
  </div>
  <div class="page">
    <p>the problem</p>
    <p>Security weaknesses in the web API</p>
    <p>complex execution semantics</p>
    <p>subtle communication &amp; sharing semantics</p>
    <p>communication implicit in execution</p>
    <p>cannot be fixed with a better browser for the same API</p>
  </div>
  <div class="page">
    <p>this talk</p>
    <p>The current API is broken due to conflicting goals</p>
    <p>Propose a new API for the web</p>
    <p>simple execution semantics: binary code</p>
    <p>explicit communication semantics: IP</p>
    <p>supports existing web apps and beyond</p>
    <p>Argue that the new API evolves safely</p>
  </div>
  <div class="page">
    <p>refactoring the browser isnt enough</p>
    <p>[OP, IBOS]</p>
  </div>
  <div class="page">
    <p>refactoring the browser isnt enough</p>
    <p>[Gazelle, Chrome]</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>separate DPI from CEI</p>
  </div>
  <div class="page">
    <p>why is this model different?</p>
  </div>
  <div class="page">
    <p>a ridiculous straw-proposal</p>
  </div>
  <div class="page">
    <p>confounded by reality</p>
    <p>Network reliability High bandwidth</p>
    <p>Low latency Ample server resources</p>
  </div>
  <div class="page">
    <p>the multitenant datacenter</p>
  </div>
  <div class="page">
    <p>the client pico-datacenter</p>
  </div>
  <div class="page">
    <p>the entire Embassies CEI</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>challenge: cross-app interactions</p>
  </div>
  <div class="page">
    <p>interaction: todays form submission</p>
  </div>
  <div class="page">
    <p>interaction: Embassies form submission</p>
  </div>
  <div class="page">
    <p>interaction: todays link coloring</p>
  </div>
  <div class="page">
    <p>interaction: todays link coloring</p>
  </div>
  <div class="page">
    <p>interaction: Embassies link coloring</p>
  </div>
  <div class="page">
    <p>interaction: todays page navigation</p>
  </div>
  <div class="page">
    <p>interaction: Embassies page navigation</p>
  </div>
  <div class="page">
    <p>interaction: Embassies page navigation</p>
  </div>
  <div class="page">
    <p>challenge: app launch performance</p>
  </div>
  <div class="page">
    <p>solution: untrusted cache</p>
  </div>
  <div class="page">
    <p>startup caching is effective</p>
  </div>
  <div class="page">
    <p>isnt 200 ms a lot?</p>
    <p>were only adding it when the user crosses over to a new site.</p>
    <p>within a site, vendors can go faster: SPDY++?</p>
    <p>were loading unoptimized WebKit</p>
    <p>this modest performance problem</p>
    <p>resolves a bucket of security problems</p>
  </div>
  <div class="page">
    <p>fixing flaws: history leaks</p>
  </div>
  <div class="page">
    <p>fixing flaws: cross-site scripting (XSS)</p>
  </div>
  <div class="page">
    <p>fixing flaws: cross-site scripting (XSS)</p>
  </div>
  <div class="page">
    <p>fixing flaws: cross-site scripting (XSS)</p>
  </div>
  <div class="page">
    <p>server analogue: SQL injection</p>
  </div>
  <div class="page">
    <p>server analogue: SQL injection</p>
  </div>
  <div class="page">
    <p>server analogue: SQL injection</p>
  </div>
  <div class="page">
    <p>fixing flaws: cross-site scripting (XSS)</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>The web API conflates CEI and DPI</p>
    <p>A minimal CEI can isolate correctly</p>
    <p>native code allows rich DPIs</p>
    <p>Launching big DPIs isnt cost-prohibitive</p>
    <p>The pico-datacenter analogy makes security tradeoffs obvious</p>
  </div>
  <div class="page">
    <p>research.microsoft.com/embassies/</p>
    <p>linux &amp; microkernel clients</p>
    <p>Webkit with protocol communication</p>
    <p>Gimp, Inkscape, spreadsheet, word processor</p>
    <p>untrusted app cache</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>what about mashups and serendipitous interoperability?</p>
    <p>Today, servers speak open protocols like XML and JSON; we can scrape HTML</p>
    <p>A few standard stacks will use a few standard wire protocols</p>
    <p>Sure, adversarial vendors can obfuscate, but they can do that in JavaScript, too.</p>
  </div>
  <div class="page">
    <p>shouldnt I control my browser?</p>
    <p>Shouldnt I get to control my browser?  ad blocker</p>
    <p>Letting a user give a third-party program (or plugin) full authority opposes vendor autonomy  Trojans / drive-bys</p>
    <p>Autonomy means vendors can provide a predictable, safe experience</p>
  </div>
  <div class="page">
    <p>Accessibility</p>
    <p>Popular stacks (e.g. Windows, Gnome) include accessibility affordances.</p>
  </div>
  <div class="page">
    <p>Cross-architecture compatibility</p>
    <p>Three approaches:</p>
    <p>Managed code (JS, Java, C#) still a fine plan</p>
    <p>just deploy it from the vendor</p>
    <p>Cross-compile. Debian runs on a dozen archs.</p>
    <p>Binary rewriting</p>
    <p>got Apple from 68K to PowerPC to x86</p>
  </div>
  <div class="page">
    <p>Peripherals</p>
    <p>Printers already speak IP</p>
    <p>Google Cloud Print IP-ifies your legacy printer</p>
    <p>Same approach for GPS, cameras</p>
    <p>Disks are easy</p>
    <p>untrusted Seagate app exposes storage</p>
  </div>
  <div class="page">
    <p>GPUs</p>
    <p>Long term:</p>
    <p>treat GPU like CPU</p>
    <p>Intermediate:</p>
    <p>exploit GPU segmentation as memory protection</p>
    <p>Near term:</p>
    <p>Even native CPU is pretty sweet</p>
  </div>
  <div class="page">
    <p>Deployment</p>
    <p>Start with a browser plug-in</p>
    <p>users enjoy rich apps, like NaCl</p>
    <p>Embassies client with compatibility mode</p>
    <p>supply a default DPI for legacy sites;</p>
    <p>Embassies-aware sites explicitly disable legacy mode</p>
  </div>
</Presentation>
