<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Toward Entity Retrieval over</p>
    <p>Structured and Text Data</p>
    <p>Mayssam Sayyadian, Azadeh Shakery, AnHai Doan, ChengXiang Zhai</p>
    <p>Department of Computer Science</p>
    <p>University of Illinois, Urbana-Champaign</p>
    <p>Presentation at ACM SIGIR 2004 Workshop on Information Retrieval and Databases, July 29, 2004</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Management of textual data and structured data is currently separated</p>
    <p>A user is often interested in finding information from both databases and text collections. E.g.,  Course information may be stored in a database;</p>
    <p>course web sites are mostly in text</p>
    <p>Product information may be stored in a database; product reviews are in text</p>
    <p>How do we find information from databases and text collections in an integrative way?</p>
  </div>
  <div class="page">
    <p>Entity Retrieval (ER) over Structured and Text Data</p>
    <p>Problem Definition  Given collections of structured and text data</p>
    <p>Given some known information about a real-world entity</p>
    <p>Find more information about the entity</p>
    <p>Example  Data= DBLP (bib. Database) + Web (text)</p>
    <p>Entity = researcher</p>
    <p>Known information = name of researcher and/or a paper published by the researcher</p>
    <p>Goal = find all papers in DBLP and all web pages mentioning this researcher</p>
  </div>
  <div class="page">
    <p>Entity Retrieval vs. Traditional Retrieval</p>
    <p>ER vs. Database Search  ER requires semantic-level matching</p>
    <p>DB search matches information at the syntacticlevel</p>
    <p>ER vs. Text Search  ER represents a special category of information</p>
    <p>need, which is more objectively defined</p>
    <p>Whats new about ER?</p>
  </div>
  <div class="page">
    <p>Challenges in ER</p>
    <p>Requires semantic-level matching  Both DB search and text search generally match at the</p>
    <p>syntactic level</p>
    <p>E.g., name= John Smith would return all records match the name in DB search</p>
    <p>E.g., query=John Smith would return documents match one or both words</p>
    <p>But John Smith could refer to multiple real-world entities</p>
    <p>Same name for different entities  A unique entity name may appear in different syntactic</p>
    <p>forms in a DB and text collection.  E.g., John Smith -&gt; J. Smith</p>
  </div>
  <div class="page">
    <p>Definition of a Simplified ER Problem</p>
    <p>A={A1, A2, , Ak}</p>
    <p>Relational Table T Attributes</p>
    <p>C={c1=v1, c2=v2, , cn=vn} constraints ciA</p>
    <p>T={t1, t2, , tl} target attributes tiA</p>
    <p>R={r1, r2, , rm} examples of rel docs riD</p>
    <p>Q=(q, R, C, T)Query</p>
    <p>q=Text query</p>
    <p>Document Set D</p>
    <p>Data</p>
    <p>Results</p>
    <p>t1, t2, , tl</p>
    <p>+</p>
    <p>+</p>
  </div>
  <div class="page">
    <p>Finding all Information about John Smith</p>
    <p>DBLP bib. database</p>
    <p>C: {author=John Smith, paper.conferenc=SIGIR}</p>
    <p>T: {paper.title, paper.conference} R: Home page of John Smith</p>
    <p>Q=(q, R, C, T)Query</p>
    <p>q=John Smith</p>
    <p>The Web</p>
    <p>Data</p>
    <p>Results</p>
    <p>Titl conf</p>
    <p>+</p>
    <p>+ Author, title, conf, date</p>
    <p>John Smith is highly ambiguous!</p>
  </div>
  <div class="page">
    <p>ER Strategies</p>
    <p>Separate ER on DB and on text  Q=(q,R,C,T)</p>
    <p>Use Q1=(q,R) to search the text collection</p>
    <p>Use Q2=(C,T) to search the DB</p>
    <p>The main challenge is entity disambiguation</p>
    <p>Integrative ER on DB + Text  Q=(q,R,C,T): use Q to search both the text collection and DB</p>
    <p>Relevant information in DB can help improve search over text</p>
    <p>Relevant information in text can help improve search over DB</p>
    <p>Hypothesis tested in this work</p>
  </div>
  <div class="page">
    <p>Exploit Structured Information to Improve ER on Text</p>
    <p>Given an ER query Q=(q,R,C,T) Assume that we have a basic text search engine</p>
    <p>We may exploit structured information to construct a different text query Qi</p>
    <p>Text Search Engine</p>
    <p>Text results</p>
    <p>QS=(C,T) DB Search</p>
    <p>ER</p>
    <p>Results s1, , sF</p>
    <p>s1, , sF</p>
    <p>Attribute selection</p>
    <p>Qi</p>
    <p>Method 1: Text Only (Baseline) Q1=QT=(q,R)</p>
    <p>Method 2: Add Immediate StructureQ2=(q+s1, , R)</p>
    <p>Method 3: Add All StructuresQ3=(q+s1++sF , R)</p>
    <p>Q4=(q+s1++sF, R) Method 4: Add Selective Structures</p>
  </div>
  <div class="page">
    <p>Attribute Selection Method</p>
    <p>Assumption: An attribute is more useful if it occurs more frequently in the top text documents (returned by the baseline TextOnly method)</p>
    <p>Attribute Selection Procedure  Use the top 25% of the docs returned by TextOnly as</p>
    <p>the reference doc set</p>
    <p>Score each attribute by the average frequency of all the attribute values of the attribute in the reference doc set</p>
    <p>Select the attribute with the highest score to expand the query</p>
  </div>
  <div class="page">
    <p>Experiments</p>
    <p>ER queries: 11 researchers, Q=name (no relevant text doc examples)  DB = DBLP (www.informatik.uni-trier.de/ley/db) , &gt;460,000 articles  Text collection = top 100 web pages returned by Google using the names of the</p>
    <p>Measures:  Precision: percent of pages retrieved that are relevant</p>
    <p>Recall: percent of relevant pages that are retrieved</p>
    <p>F1: a combination of precision and recall</p>
    <p>Retrieval method  Vector space model with BM25 TF</p>
    <p>Scores normalized by the score of the top-ranked document</p>
    <p>A score threshold is used to retrieve a subset of the top 100 pages returned by Google (set to a constant all the time)</p>
    <p>Implemented in Lemur</p>
    <p>ER on DB: the DBLP search engine on the Web with manual selection of relevant tuples</p>
  </div>
  <div class="page">
    <p>Effect of Exploiting Structured Information</p>
    <p>F1 is improved as we exploit more structured information</p>
  </div>
  <div class="page">
    <p>Effect of Attribute Selection</p>
    <p>Conference is a better attribute than co-authors or titles</p>
  </div>
  <div class="page">
    <p>Automatic Attribute Selection</p>
    <p>The attribute score based on value frequency predicts the usefulness of an attribute well</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>We address the problem of finding information from databases and text collections in an integrative way</p>
    <p>We introduced the entity retrieval problem and proposed several methods to exploit structured information to improve ER on text</p>
    <p>With some preliminary experiment results, we show that exploiting relevant structured information can improve ER performance on text</p>
  </div>
  <div class="page">
    <p>Many Further Research Questions</p>
    <p>What is an appropriate query language for ER?  What is an appropriate formal retrieval framework</p>
    <p>for ER?</p>
    <p>What are the best strategies and methods for ER?</p>
  </div>
  <div class="page">
    <p>Thank You!</p>
  </div>
</Presentation>
