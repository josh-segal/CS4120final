<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Cashing out the Great Cannon? On Browser-based DDoS Attacks and Economics</p>
    <p>G. Pellegrino(1), C. Rossow(1), F. J. Ryba(2), T. C. Schmidt(3), M. Whlisch(2)</p>
    <p>(1)CISPA / MMCI, Saarland University (2)Freie Universitt Berlin</p>
    <p>(3)HAW Hamburg</p>
  </div>
  <div class="page">
    <p>August 14, 2015 2</p>
    <p>Classical DDoS Botnets</p>
    <p>Botmaster Infected hosts Target</p>
    <p>C&amp;C server</p>
    <p>HTTP floodHTTP flood</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>DDoS is a severe threat to the Internet</p>
    <p>In classical DDoS botnets:  Infection-based recruitment (Drive-by download, Browser vulns, ...)  Architecture-dependent malware</p>
  </div>
  <div class="page">
    <p>August 14, 2015 3</p>
    <p>Browser-based DDoS Botnet</p>
    <p>Botmaster Browsers Target</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>Browser-based botnet a new type of botnet</p>
    <p>Infectionless bots recruitment  Architecture-independent malware (e.g., OSX, Windows, Linux, Android)</p>
    <p>The Web</p>
  </div>
  <div class="page">
    <p>August 14, 2015 4</p>
    <p>The Great Cannon</p>
    <p>Botmaster Browsers Target</p>
    <p>In March 2015 first browser-based DDoS attacks [CitizenLab]</p>
    <p>Recruitment: Powerful attacker injects JS into HTTP conversations</p>
    <p>We envision also less powerful attacker can launch similar attacks</p>
    <p>The Web</p>
  </div>
  <div class="page">
    <p>August 14, 2015 5</p>
    <p>Threat Model</p>
    <p>Botmaster Browsers Target</p>
    <p>No control of the network, e.g., no ISP</p>
    <p>Infiltrate JS over the Web, e.g., as advertisement [Grossman]</p>
    <p>Economic incentives</p>
    <p>The Web</p>
  </div>
  <div class="page">
    <p>August 14, 2015 6</p>
    <p>Toward a Great Cannon for Cyber-Criminals? Botmaster Target</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>The Web</p>
    <p>Browsers</p>
    <p>GC showed that browsers can be used as bots</p>
  </div>
  <div class="page">
    <p>August 14, 2015 7</p>
    <p>Toward a Great Cannon for Cyber-Criminals? Botmaster Target</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>The Web</p>
    <p>Browsers</p>
    <p>GC showed that browsers can be used as bots</p>
    <p>However, anecdotal knowledge only [Kuppan, Grossman]</p>
  </div>
  <div class="page">
    <p>August 14, 2015 8</p>
    <p>Toward a Great Cannon for Cyber-Criminals? Botmaster Target</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>The Web</p>
    <p>Browsers</p>
    <p>GC showed that browsers can be used as bots</p>
    <p>However, anecdotal knowledge only [Kuppan, Grossman]</p>
    <p>To date, no systematic understanding of browser features to support DDoSes</p>
  </div>
  <div class="page">
    <p>August 14, 2015 9</p>
    <p>Toward a Great Cannon for Cyber-Criminals?</p>
    <p>Promising for less powerful attackers, i.e., criminals with economic incentives</p>
    <p>Botmaster Target</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>Browsers</p>
    <p>The Web</p>
  </div>
  <div class="page">
    <p>August 14, 2015 10</p>
    <p>Toward a Great Cannon for Cyber-Criminals?</p>
    <p>Promising for less powerful attackers, i.e., criminals with economic incentives</p>
    <p>However, little is known about recruitment techniques and costs</p>
    <p>Botmaster Target</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>Browsers</p>
    <p>The Web</p>
  </div>
  <div class="page">
    <p>August 14, 2015 11</p>
    <p>Toward a Great Cannon for Cyber-Criminals?</p>
    <p>Promising for less powerful attackers, i.e., criminals with economic incentives</p>
    <p>However, little is known about recruitment techniques and costs</p>
    <p>Hard to assess if criminals will jump on the wagon of GC-like attacks</p>
    <p>Botmaster Target</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>Browsers</p>
    <p>The Web</p>
  </div>
  <div class="page">
    <p>August 14, 2015 12</p>
    <p>Contents</p>
    <p>Review browser features</p>
    <p>Browser features in DoS attacks</p>
    <p>Cost estimation and comparison</p>
  </div>
  <div class="page">
    <p>August 14, 2015 13</p>
    <p>Browser Features</p>
  </div>
  <div class="page">
    <p>August 14, 2015 14</p>
    <p>Classical DDoS bots: Yoddos/DirtJumper</p>
    <p>Supports different DDoS attacks  TCP, UDP, and HTTP based flooding</p>
    <p>And attack variants:  HTTP reqs. with no recv()</p>
    <p>Via TCP FIN or RST  HTTP custom Host and Referer</p>
    <p>Bypass filters</p>
    <p>Yoddos Attack Commands (Source [Welzel])</p>
  </div>
  <div class="page">
    <p>August 14, 2015 15</p>
    <p>Web Browsers as DDoS bots</p>
    <p>Offer communication APIs  e.g., XMLHttpRequest, WebSocket,</p>
    <p>and Server-Sent Events</p>
    <p>Other DoS-enabling JS APIs  Image and WebWorker APIs</p>
    <p>However, less flexible  No direct access to TCP/UDP</p>
    <p>restricted to extensions...  No IP spoofing</p>
    <p>Reviewed 4 APIs ...</p>
    <p>Yoddos Attack Commands (Source [Welzel])</p>
  </div>
  <div class="page">
    <p>August 14, 2015 16</p>
    <p>XMLHttpRequest API (1/4)</p>
    <p>Send HTTP requests to arbitrary targets</p>
    <p>Restrictions:</p>
    <p>SOP and CORS, but HTTP requests are sent anyway</p>
    <p>var target = &quot;http://target/&quot;; var xhr = new XMLHttpRequest(); xhr.open(&quot;GET&quot;, target); xhr.send();</p>
    <p>var target = &quot;http://target/&quot;; var xhr = new XMLHttpRequest(); xhr.open(&quot;GET&quot;, target); xhr.send();</p>
    <p>Send HTTP request</p>
    <p>Send HTTP request</p>
    <p>Yoddos Attack Commands (Source [Welzel])</p>
  </div>
  <div class="page">
    <p>August 14, 2015 17</p>
    <p>XMLHttpRequest API (2/4)</p>
    <p>Send HTTP requests to arbitrary targets</p>
    <p>Restrictions:</p>
    <p>SOP and CORS, but HTTP requests are sent anyway</p>
    <p>var target = &quot;http://target/&quot;; var xhr = new XMLHttpRequest(); xhr.open(&quot;GET&quot;, target); xhr.send();</p>
    <p>var target = &quot;http://target/&quot;; var xhr = new XMLHttpRequest(); xhr.open(&quot;GET&quot;, target); xhr.send();</p>
    <p>Send HTTP request</p>
    <p>Send HTTP request</p>
    <p>Yoddos Attack Commands (Source [Welzel])</p>
  </div>
  <div class="page">
    <p>August 14, 2015 18</p>
    <p>XMLHttpRequest API (3/4)</p>
    <p>Send HTTP requests to arbitrary targets</p>
    <p>Restrictions:</p>
    <p>SOP and CORS, but HTTP requests are sent anyway</p>
    <p>Additional behaviors:</p>
    <p>Partial control over the TCP socket life-cycle  no rcvd()</p>
    <p>var target = &quot;http://target/&quot;; var xhr = new XMLHttpRequest(); xhr.open(&quot;GET&quot;, target);</p>
    <p>setTimeout(function() { xhr.abort(); }, 10);</p>
    <p>xhr.send();</p>
    <p>var target = &quot;http://target/&quot;; var xhr = new XMLHttpRequest(); xhr.open(&quot;GET&quot;, target);</p>
    <p>setTimeout(function() { xhr.abort(); }, 10);</p>
    <p>xhr.send();</p>
    <p>RST after 10 ms</p>
    <p>RST after 10 ms</p>
    <p>Yoddos Attack Commands (Source [Welzel])</p>
  </div>
  <div class="page">
    <p>August 14, 2015 19</p>
    <p>XMLHttpRequest API (4/4)</p>
    <p>Send HTTP requests to arbitrary targets</p>
    <p>Restrictions:</p>
    <p>SOP and CORS, but HTTP requests are sent anyway</p>
    <p>Additional behaviors:</p>
    <p>Partial control over the TCP socket life-cycle  no rcvd()</p>
    <p>Set/modify request headers</p>
    <p>Except for Host and Referer (and others)</p>
    <p>var target = &quot;http://target/&quot;; var xhr = new XMLHttpRequest(); xhr.open(&quot;GET&quot;, target);</p>
    <p>setTimeout(function() { xhr.abort(); }, 10);</p>
    <p>xhr.send();</p>
    <p>var target = &quot;http://target/&quot;; var xhr = new XMLHttpRequest(); xhr.open(&quot;GET&quot;, target);</p>
    <p>setTimeout(function() { xhr.abort(); }, 10);</p>
    <p>xhr.send();</p>
    <p>RST after 10 ms</p>
    <p>RST after 10 ms</p>
    <p>Yoddos Attack Commands (Source [Welzel])</p>
  </div>
  <div class="page">
    <p>August 14, 2015 20</p>
    <p>Web Sockets (1/2)</p>
    <p>Extension of HTTP</p>
    <p>Establish full-duplex stream-oriented client-server communication channel via the WebSocket Handshake protocol</p>
    <p>Based on a HTTP request/response pair</p>
    <p>var target = &quot;ws://target/&quot;; var ws = new WebSocket(target); var target = &quot;ws://target/&quot;; var ws = new WebSocket(target);</p>
    <p>WebSocket HandshakeWebSocket Handshake</p>
    <p>Yoddos Attack Commands (Source [Welzel])</p>
  </div>
  <div class="page">
    <p>August 14, 2015 21</p>
    <p>Web Sockets (2/2)</p>
    <p>Extension of HTTP</p>
    <p>Establish full-duplex stream-oriented client-server communication channel via the WebSocket Handshake protocol</p>
    <p>Based on a HTTP request/response pair  Additional behaviors:</p>
    <p>Partial control over the TCP socket life-cycle  no rcvd()</p>
    <p>No access to request headers</p>
    <p>var target = &quot;ws://target/&quot;;</p>
    <p>setTimeout(function () { ws.close(); }, 10);</p>
    <p>var ws = new WebSocket(target);</p>
    <p>var target = &quot;ws://target/&quot;;</p>
    <p>setTimeout(function () { ws.close(); }, 10);</p>
    <p>var ws = new WebSocket(target);</p>
    <p>RST after 10ms</p>
    <p>RST after 10ms</p>
    <p>Yoddos Attack Commands (Source [Welzel])</p>
  </div>
  <div class="page">
    <p>August 14, 2015 22</p>
    <p>API Evaluation</p>
  </div>
  <div class="page">
    <p>August 14, 2015 23</p>
    <p>Aggressiveness</p>
    <p>API Browser AVG Reqs/s MAX Reqs/s</p>
    <p>XMLHttpReq. Chrome 1,005 1,886</p>
    <p>Firefox 2,165 2,892</p>
    <p>WebSocket Chrome 34 73</p>
    <p>Firefox 0 0</p>
    <p>Server-Sent Evts Chrome 210 941</p>
    <p>Firefox 258 1,907</p>
    <p>Image Chrome 84 109</p>
    <p>Firefox 751 1,916</p>
    <p>Firefox shows a more aggressive behavior</p>
    <p>18x faster than prior tests: ~170 XHR reqs/s [Kuppan]</p>
  </div>
  <div class="page">
    <p>August 14, 2015 24</p>
    <p>Aggressiveness</p>
    <p>API Browser AVG Reqs/s MAX Reqs/s</p>
    <p>XMLHttpReq. Chrome 1,005 1,886</p>
    <p>Firefox 2,165 2,892</p>
    <p>WebSocket Chrome 34 73</p>
    <p>Firefox 0 0</p>
    <p>Server-Sent Evts Chrome 210 941</p>
    <p>Firefox 258 1,907</p>
    <p>Image Chrome 84 109</p>
    <p>Firefox 751 1,916</p>
    <p>Firefox shows a more aggressive behavior</p>
    <p>18x faster than prior tests: ~170 XHR reqs/s [Kuppan]</p>
    <p>Browser Workers AVG Reqs/s</p>
    <p>Chrome 0 1,359</p>
    <p>Firefox 0 1,456</p>
  </div>
  <div class="page">
    <p>August 14, 2015 25</p>
    <p>Aggressiveness</p>
    <p>API Browser AVG Reqs/s MAX Reqs/s</p>
    <p>XMLHttpReq. Chrome 1,005 1,886</p>
    <p>Firefox 2,165 2,892</p>
    <p>WebSocket Chrome 34 73</p>
    <p>Firefox 0 0</p>
    <p>Server-Sent Evts Chrome 210 941</p>
    <p>Firefox 258 1,907</p>
    <p>Image Chrome 84 109</p>
    <p>Firefox 751 1,916</p>
    <p>Firefox shows a more aggressive behavior</p>
    <p>18x faster than prior tests: ~170 XHR reqs/s [Kuppan]</p>
    <p>~3,000 reqs/s is a severe threat</p>
    <p>Browser Workers AVG Reqs/s</p>
    <p>Chrome 0 1,359</p>
    <p>Firefox 0 1,456</p>
  </div>
  <div class="page">
    <p>August 14, 2015 26</p>
    <p>Bot Recruitment and Cost Estimation</p>
  </div>
  <div class="page">
    <p>August 14, 2015 27</p>
    <p>Recruitment Technique</p>
    <p>Cost depends on the recruitment technique  Techniques</p>
  </div>
  <div class="page">
    <p>August 14, 2015 28</p>
    <p>Ad Networks</p>
    <p>Advertiser uploads Ad into an Ad Network  Ad Network distributes Ads to Publishers then to Visitors</p>
    <p>Advertiser</p>
    <p>Visitors Ad Network</p>
    <p>Blogs/Newspapers/... Buy me!Buy me!</p>
    <p>Buy me!Buy me!Buy me! Buy me!</p>
    <p>Buy me!Buy me!</p>
  </div>
  <div class="page">
    <p>August 14, 2015 29</p>
    <p>Ad Networks</p>
    <p>Botmaster uploads malicious JS  Ad Network distributes malicious JS  Attack launched by displaying the Ad</p>
    <p>Botmaster (Advertiser)</p>
    <p>Target</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>GET / HTTP/1.1\r\n Host: target\r\n []</p>
    <p>Browsers Ad Network</p>
    <p>Blogs/Newspapers/...</p>
  </div>
  <div class="page">
    <p>August 14, 2015 30</p>
    <p>Ad Networks: Cost Estimation</p>
    <p>Google Display Network (May 10-17, 2015)</p>
    <p>Ad: ping our servers every 5 seconds</p>
    <p>Cost per day: 2.4</p>
    <p>Botmaster (Advertiser)</p>
    <p>Our serverBrowsers</p>
    <p>Blogs/Newspapers/...</p>
    <p>HTTP request every 5 secs</p>
    <p>HTTP request every 5 secs</p>
    <p>~27,000 reqs~27,000 reqs</p>
  </div>
  <div class="page">
    <p>August 14, 2015 31</p>
    <p>Ad Networks vs Classical botnets</p>
    <p>Estimation as combination of prior studies (i.e., [Caballero, Rossow])</p>
    <p>Pay-per-Install: malware installation from $6 to $140 for 1000 infections [Caballero]</p>
    <p>0.6 and 14 per bot</p>
    <p>Zeus infiltration 2013: Bots stay up in ~20 days and online for ~11h a day [Rossow]</p>
    <p>Cumulative online time 10 days</p>
    <p>Cost per day between 0.06 and 1.4 (vs. 2.4 of browser-based botnet)</p>
  </div>
  <div class="page">
    <p>August 14, 2015 32</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>August 14, 2015 33</p>
    <p>Conclusion</p>
    <p>Systematically reviewed browser features for DDoS attacks  Interesting firepower w/ variety of behaviors  However, less flexibility wrt. classical bots  New rich set of APIs in the near future</p>
    <p>Estimated costs of browser- vs classical botnets  slightly higher</p>
  </div>
  <div class="page">
    <p>August 14, 2015 34</p>
    <p>Limitations and Future work</p>
    <p>Cost: PPI vs 1 Ad Network  Use larger dataset and other Ad Networks  Explore other recruitment techniques, e.g., Typosquatting  Reduce the cost, e.g., less attractive ads</p>
    <p>Delay between Ad upload and view  Bot control/usability, e.g., C&amp;C servers and responsiveness</p>
    <p>Botnet size less predictable  Study properties and influence</p>
  </div>
  <div class="page">
    <p>August 14, 2015 35</p>
    <p>Takeaway</p>
    <p>Browser-based DDoS botnets are a severe threat  Costs are comparable, however less flexibility  We do ongoing research on this topic</p>
  </div>
  <div class="page">
    <p>August 14, 2015 36</p>
    <p>References</p>
    <p>[CitizenLab] China's Great Cannon, B. Marczak, N. Weaver, J. Dalek, R. Ensafi, D. Fifield, S. McKune, A. Rey, J. Scott-Railton, R. Deibert, V. Paxson. url: https://citizenlab.org/2015/04/chinas-great-cannon/</p>
    <p>[Kuppan] Attacking with HTML5, L. Kuppan, Presentation at Black Hat USA 2010</p>
    <p>[Grossmann] Million Browser Botnet, J. Grossmann and M. Johansen, Presentation at Black Hat USA 2013</p>
    <p>[Akhawe] Towards a Formal Foundation of Web Security, D. Akhawe, A. Barth, P. E. Lam, J. Mitchell, D. Song, CSF'10</p>
    <p>[Caballero] The Commoditization of Malware Distribution, J. Caballero, C. Grier, C. Kreibich, and V. Paxson, Usenix Security Symposioum 2011</p>
    <p>[Rossow] P2PWNED: Modeling and Evaluating the Resilience of Peer-to-Peer Botnets, C. Rossow, D. Andriesse, T. Werner, B. Stone-Gross, D. Plohmann, C.J. Dietrich, H. Bos, IEEE S&amp;P 2013</p>
    <p>[Welzel] On Measuring the Impact of DDoS Botnets, A. Welzel, C. Rossow, H. Bos, EuroSec'14</p>
  </div>
</Presentation>
