<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>SRCX</p>
    <p>Reducing Garbage Collection</p>
    <p>Overhead in SSD Based on</p>
    <p>Workload Prediction</p>
    <p>Pan Yang, Ni Xue, Yuqi Zhang, Yangxu Zhou, Li Sun, Wenwen Chen,</p>
    <p>Zhonggang Chen, Wei Xia, Junke Li, Kihyoun Kwon</p>
    <p>HotStorage19</p>
  </div>
  <div class="page">
    <p>SRCX 1/16</p>
    <p>Background</p>
    <p>NAND flash-based solid-state drives (SSDs) have found wide use</p>
    <p>5 major issues in using SSD</p>
    <p>Unexpected bad performance &amp; QoS</p>
    <p>Limited lifetime</p>
    <p>Sudden failure</p>
    <p>Increasing power consumption</p>
    <p>Low capacity utilization</p>
    <p>Machine learning (ML) technology emerges to optimize SSD utilization</p>
  </div>
  <div class="page">
    <p>SRCX 2/16</p>
    <p>Vision</p>
    <p>Research goal:</p>
    <p>Using ML to analyze workload pattern, and optimizing SSD/NAND storage in</p>
    <p>various scenarios with proactive learning and intelligent policy</p>
  </div>
  <div class="page">
    <p>SRCX 3/16</p>
    <p>Introduction</p>
    <p>Garbage collection (GC) is an essential operation in SSD</p>
    <p>GC has a major impact on both performance and lifetime of SSD</p>
    <p>Valid page copy</p>
    <p>It consumes internal computing and bandwidth resources and decreases the I/O</p>
    <p>response performance</p>
    <p>The more data are migrated, the quicker NAND flash will be worn out</p>
    <p>Block 0</p>
    <p>Invalid</p>
    <p>Invalid</p>
    <p>valid</p>
    <p>Block 1</p>
    <p>Empty</p>
    <p>Empty</p>
    <p>Empty</p>
  </div>
  <div class="page">
    <p>SRCX 4/16</p>
    <p>Introduction</p>
    <p>Reducing valid page copy to improve GC overhead</p>
    <p>Choose victim block with least number of valid pages</p>
    <p>Placing data according to different temperatures</p>
    <p>Hot data : data are updated frequently</p>
    <p>The write access count of LBA is high</p>
    <p>Cold data: data are updated infrequently</p>
    <p>The write access count of LBA is low</p>
    <p>Victim block</p>
    <p>Victim block</p>
    <p>No copy</p>
  </div>
  <div class="page">
    <p>SRCX 5/16</p>
    <p>Introduction</p>
    <p>Classifying data by temperature</p>
    <p>The state-of-the-art</p>
    <p>AutoStream SYSTOR 17  / FStreamFAST18) / PCStream (FAST19)</p>
    <p>Current solutions only focus on detecting current data temperature</p>
    <p>Future temperature should be taken into account in data placement</p>
    <p>Predicting the future data temperature helps to guarantee accuracy</p>
  </div>
  <div class="page">
    <p>SRCX 6/16</p>
    <p>Scheme Design</p>
    <p>Scheme architecture</p>
    <p>Workload features capture (WFC)</p>
    <p>To capture workload profiling data</p>
    <p>Temperature prediction (TP)</p>
    <p>To predict the future temperature</p>
    <p>Block dispatch (BD)</p>
    <p>To dispatch write requests to</p>
    <p>different blocks</p>
    <p>Host</p>
    <p>SSD</p>
    <p>Temperature</p>
    <p>Prediction (TP) Block</p>
    <p>Dispatch</p>
    <p>(BD)</p>
    <p>Workload Features Capture (WFC)</p>
    <p>I/O Data Predicted chunk</p>
    <p>temperature</p>
    <p>I/O profile</p>
    <p>Dispatch data to specified block Blocks</p>
    <p>Host App.</p>
    <p>Hot Data</p>
    <p>Cold Data</p>
  </div>
  <div class="page">
    <p>SRCX 7/16</p>
    <p>Scheme Design</p>
    <p>Workload features capture (WFC)</p>
    <p>Tool  StoneNeedle</p>
    <p>Capturing statistic workload features</p>
    <p>e.g., throughput, bandwidth, I/O size/count, and time interval.</p>
    <p>Deployed in the device driver</p>
    <p>Its open source</p>
    <p>To construct a workload-profiling-data-standard together with all players</p>
    <p>Git repo: https://github.com/Samsung/StoneNeedle</p>
  </div>
  <div class="page">
    <p>SRCX 8/16</p>
    <p>Scheme Design</p>
    <p>Workload features capture (WFC)</p>
    <p>Reducing data volume</p>
    <p>Dividing entire LBA into different chunks</p>
    <p>All the I/O requests falling in the same chunk will be treated as the feature of this chunk.</p>
    <p>Choosing key features</p>
    <p>Choosing features that are closely correlated with temperature</p>
    <p>In each fixed period of time, the temperature and features are recorded as:</p>
    <p>(1,2,3,,) ,</p>
    <p>t  temperature of the t th time period</p>
    <p>feature value of the t th time period.</p>
  </div>
  <div class="page">
    <p>SRCX 9/16</p>
    <p>Scheme Design</p>
    <p>Temperature prediction (TP)</p>
    <p>Problems</p>
    <p>The temperature may change sharply in different periods</p>
    <p>A chunks temperature may be related to other chunks</p>
    <p>The temperature may also be impacted by other features</p>
    <p>Algorithm : Long Short Term Memory (LSTM)</p>
    <p>LSTM can comprehensively consider multiple factors for prediction</p>
  </div>
  <div class="page">
    <p>SRCX 10/16</p>
    <p>Scheme Design</p>
    <p>Temperature prediction (TP)</p>
    <p>LSTM can be seen as a function</p>
    <p>+1=LSTM(+1,) 1  Input: the records of k time periods</p>
    <p>the correlated features f</p>
    <p>the real temperature T</p>
    <p>Output: the predicted temperature of the next time period +1</p>
  </div>
  <div class="page">
    <p>SRCX 11/16</p>
    <p>Scheme Design</p>
    <p>Physical NAND block dispatch (BD)</p>
    <p>How to place data with the predicted temperature?</p>
    <p>Dividing chunks into different temperature ranges</p>
    <p>Mapping the chunks with similar temperature to the same block</p>
    <p>Algorithm : K-Means</p>
    <p>High efficiency</p>
    <p>Temperature</p>
  </div>
  <div class="page">
    <p>SRCX 12/16</p>
    <p>Scheme Design</p>
    <p>Implementation</p>
    <p>Support of SSD</p>
    <p>Directives and Streams (NVMe Spec. 1.3)</p>
    <p>Samsung Multi-Stream SSD (HotStorage14)</p>
    <p>LSTM-training offline/online</p>
    <p>Prediction and dispatch</p>
    <p>WFC outputs rect data</p>
    <p>TP predicts T't+1</p>
    <p>BD dispatches block for I/O according to T't+1</p>
    <p>WFC module</p>
    <p>BD module TP module</p>
    <p>T im</p>
    <p>e p</p>
    <p>e ri</p>
    <p>o d</p>
    <p>s ta</p>
    <p>rt s</p>
    <p>I/O request</p>
    <p>arriving Workload information capture</p>
    <p>Dispatch data according to mapping table</p>
    <p>Predict</p>
    <p>temperature</p>
    <p>T '</p>
    <p>Clustering according to T '</p>
    <p>&amp; Update mapping table</p>
    <p>T im</p>
    <p>e p</p>
    <p>e ri</p>
    <p>o d</p>
    <p>e n d</p>
    <p>s</p>
    <p>Prediction and dispatch process</p>
    <p>Stream 1 Stream 2</p>
    <p>CID SID</p>
  </div>
  <div class="page">
    <p>SRCX 13/16</p>
    <p>Evaluations</p>
    <p>Environment</p>
    <p>Parameters</p>
    <p>The number of the re-quired cluster is 8.</p>
    <p>Each time period lasts for 5 seconds.</p>
    <p>The time step k of LSTM is 5.</p>
    <p>The entire address is divided into 10,000 chunks.</p>
    <p>Processor</p>
    <p>/Memory</p>
    <p>Processor Dual Socket: Intel (R) Xeon (R) CPU E5-2620 v4 @</p>
    <p>Total Logical CPU: 32</p>
    <p>Total Memory: 64 GB</p>
    <p>GPU: NVIDIA GTX 1080, 8G</p>
    <p>Operating</p>
    <p>System</p>
    <p>Distro: CentOS Linux release 7.5.1804 (Core)</p>
    <p>Kernel: 4.4.2, patched for multi-stream support</p>
    <p>Arch : x86_64</p>
    <p>SSD</p>
    <p>SSD: Samsung NVMe PM963 2.5, 960GB</p>
    <p>(Support both normal and multi-stream mode with 8 streams,</p>
    <p>with NAND write and host write values in additional S.M.A.R.T)</p>
    <p>Table 1. Evaluation system configuration</p>
  </div>
  <div class="page">
    <p>SRCX 14/16</p>
    <p>Evaluations</p>
    <p>Scheme effectiveness</p>
    <p>Workload</p>
    <p>FIO</p>
    <p>MySQL</p>
    <p>RocksDB</p>
    <p>Docker</p>
    <p>Comparisons</p>
    <p>Baseline</p>
    <p>AutoStream</p>
    <p>Our scheme (LSTM+KM)</p>
    <p>Measurement  WAF &amp; latency</p>
    <p>The performance and write amplification factor</p>
    <p>(WAF) are improved in various applications.</p>
  </div>
  <div class="page">
    <p>SRCX 15/16</p>
    <p>Evaluations</p>
    <p>Resource consumption</p>
    <p>It takes less than 80ms to generate a new mapping table from the captured features</p>
    <p>The GPU utilization of LSTM is less than 17%</p>
    <p>Our scheme consumes roughly as many resources as legacy SSD with the difference within</p>
  </div>
  <div class="page">
    <p>SRCX 16/16</p>
    <p>Conclusion</p>
    <p>Achievements</p>
    <p>We explored the use of machine learning to improve GC overhead</p>
    <p>We developed a powerful workload information capture tool - StoneNeedle</p>
    <p>The lifetime and performance of SSD are improved effectively</p>
    <p>In the future, we will focus on the following:</p>
    <p>Improving the efficiency and accuracy of our proposed machine learning models</p>
    <p>Optimizing the scheme on host FTL approach</p>
  </div>
  <div class="page">
    <p>SRCX</p>
    <p>Email: pan87.yang@samsung.com</p>
  </div>
</Presentation>
