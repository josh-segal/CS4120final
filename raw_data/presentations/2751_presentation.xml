<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>PCC Vivace: Online-Learning Congestion Control</p>
    <p>Mo Dong1, Tong Meng1, Doron Zarchy2, Engin Arslan3, Yossi Gilad4, P. Brighten Godfrey1, Michael Schapira2</p>
  </div>
  <div class="page">
    <p>Internet Congestion Control</p>
    <p>PCC Vivace: Online-Learning Congestion Control 2</p>
    <p>Reno</p>
    <p>New Reno</p>
    <p>Vegas</p>
    <p>Illinois CUBIC</p>
    <p>Westwood</p>
    <p>H-TCP</p>
    <p>FAST HyblaCompound</p>
    <p>BIC</p>
    <p>Remy</p>
    <p>PCC</p>
    <p>BBR</p>
    <p>[Winstein et al. SIGCOMM13]  Offline-optimization  Generated TCP</p>
    <p>[Dong et al. NSDI15]  Utility framework  Online learning</p>
    <p>[Cardwell et al. Queue 2016]  Bottleneck bandwidth probing  Minimum RTT probing</p>
    <p>Liverpool 2:1 Man City</p>
    <p>Roma 3:0 Barcelona</p>
  </div>
  <div class="page">
    <p>Internet Congestion Control</p>
    <p>Data Packets</p>
    <p>ACKs</p>
    <p>When is a packet sent Whether a packet is lost When is a packet acked</p>
    <p>Assumptions on</p>
    <p>Network</p>
    <p>Change Sending Rate</p>
    <p>PCC Vivace: Online-Learning Congestion Control 3</p>
    <p>Packet loss / RTT increment indicates congestion</p>
  </div>
  <div class="page">
    <p>Internet Congestion Control</p>
    <p>Random loss</p>
    <p>Shallow buffer</p>
    <p>Self-induced congestion</p>
    <p>Congestion from other heavy flows</p>
    <p>PCC Vivace: Online-Learning Congestion Control 4</p>
  </div>
  <div class="page">
    <p>Strong Assumptions Cause Problem</p>
    <p>PCC Vivace: Online-Learning Congestion Control 5</p>
    <p>Packet loss</p>
    <p>Decrease rate a lot</p>
    <p>Maintain rate</p>
    <p>Decrease rate slightly</p>
    <p>Maybe even increase rate</p>
    <p>Abstract assumption cannot capture Internet complexity</p>
    <p>Self-induced congestion</p>
    <p>Congestion from other heavy flows Shallow buffer</p>
    <p>Random loss</p>
    <p>Underlying cause Best response</p>
  </div>
  <div class="page">
    <p>PCC Utility Framework</p>
    <p>Sending rate r</p>
    <p>Internet</p>
    <p>SACK Throughput</p>
    <p>Loss rate</p>
    <p>Utility f(tpt, loss, etc.)</p>
    <p>PCC Vivace: Online-Learning Congestion Control 6</p>
  </div>
  <div class="page">
    <p>PCC Rate Control</p>
    <p>r1</p>
    <p>r2</p>
    <p>u1</p>
    <p>u2 u1 &gt; u2?</p>
    <p>Move to r1</p>
    <p>Move to r2</p>
    <p>PCC Vivace: Online-Learning Congestion Control 7</p>
    <p>Sender selfishly maximizes its own utility (online learning in non-cooperative game)</p>
    <p>(Causal relation)</p>
    <p>Internet</p>
    <p>(Online learning)</p>
  </div>
  <div class="page">
    <p>PCC Design Challenges</p>
    <p>r1 r2</p>
    <p>u1 u2</p>
    <p>u1 &gt; u2?</p>
    <p>PCC Vivace: Online-Learning Congestion Control 8</p>
    <p>utility function Rate control algorithm</p>
    <p>- Capture application performance objectives</p>
    <p>- Guarantee equilibrium with multiple competing senders</p>
    <p>- Guarantee reaching equilibrium upon convergence</p>
    <p>- Rapidly adapt to network dynamics</p>
    <p>Requirements for consistently high performance:</p>
  </div>
  <div class="page">
    <p>PCC Allegro</p>
    <p>Loss-based utility function</p>
    <p>Heuristic rate control</p>
    <p>Fixed rate change step size</p>
    <p>No latency-awareness Can cause bufferbloat</p>
    <p>Slow convergence Slow reaction to network changes</p>
    <p>[Dong et al. NSDI 2015]</p>
    <p>PCC Vivace: Online-Learning Congestion Control 9</p>
  </div>
  <div class="page">
    <p>PCC Vivace: Online-Learning Congestion Control 10</p>
    <p>RTT / loss keeps increasing!</p>
    <p>Overshoot leads to RTT inflation and loss!</p>
    <p>r1 C r2</p>
    <p>r1 C r2</p>
    <p>(Small step size)</p>
    <p>(Large step size)</p>
  </div>
  <div class="page">
    <p>Leveraging powerful tools from online learning theory</p>
    <p>PCC Vivace</p>
    <p>PCC Vivace: Online-Learning Congestion Control 11</p>
    <p>New utility function framework - Latency-awareness - Strictly concave  Equilibrium guarantee - Flexibility among senders</p>
    <p>New control algorithm - Gradient-ascent  Convergence speed/stability - Deals with measurement noise</p>
  </div>
  <div class="page">
    <p>PCC Vivace</p>
    <p>Strictly concave utility function</p>
    <p>PCC Vivace: Online-Learning Congestion Control 12</p>
    <p>No latency inflation upon convergence if</p>
    <p>Tolerate p-random-loss if</p>
    <p>Strict socially concave game Unique convergence equilibrium</p>
  </div>
  <div class="page">
    <p>PCC Vivace</p>
    <p>PCC Vivace: Online-Learning Congestion Control 13</p>
    <p>Sending rate</p>
    <p>Observed utility</p>
    <p>xx- x+</p>
    <p>?</p>
    <p>Techniques to deal with measurement noise:</p>
    <p>- Linear regression - RTT gradient low-pass filter - Double check</p>
    <p>Gradient-ascent rate control</p>
  </div>
  <div class="page">
    <p>PCC Vivace: Online-Learning Congestion Control 14</p>
    <p>Large utility gradient</p>
    <p>Small utility gradient</p>
    <p>r1 C r2</p>
  </div>
  <div class="page">
    <p>PCC Vivace</p>
    <p>PCC Vivace: Online-Learning Congestion Control 15</p>
    <p>&quot;No-regret&quot; guarantee: A Powerful lens for analysis</p>
    <p>Strictly concave utility function</p>
    <p>Gradient-ascent rate control</p>
  </div>
  <div class="page">
    <p>Implementation  UDT-based user-space implementation  Emulab experiments, Amazon EC2 experiments  User-space PCC proxy for video streaming</p>
    <p>Protocols for comparison  TCP variants (TCP CUBIC, TCP Illinois, TCP Vegas, etc.)  BBR  PCC Allegro  PCC Vivace</p>
    <p>Evaluation</p>
    <p>PCC Vivace: Online-Learning Congestion Control 16</p>
  </div>
  <div class="page">
    <p>Latency awareness (100Mbps, 30ms RTT Emulab bottleneck link)</p>
    <p>Vivace Utility Performance</p>
    <p>PCC Vivace: Online-Learning Congestion Control 17</p>
    <p>R TT</p>
    <p>In fla</p>
    <p>tio n</p>
    <p>R at</p>
    <p>io (%</p>
    <p>)</p>
    <p>Buffer Size (KB)</p>
    <p>PCC Vivace PCC Allegro BBR TCP CUBIC TCP Illinois</p>
    <p>&lt; 2ms inflation in all cases 90% smaller than BBR under 2BDP</p>
  </div>
  <div class="page">
    <p>Rapid reaction to network changes (10-100Mbps, 10-100ms RTT, 0-1% random loss)</p>
    <p>Vivace Rate Control Performance</p>
    <p>PCC Vivace: Online-Learning Congestion Control 18</p>
    <p>Se n</p>
    <p>d in</p>
    <p>g R</p>
    <p>at e</p>
    <p>(M b</p>
    <p>p s)</p>
    <p>Time (sec)</p>
    <p>Slow reaction upon RTT surge</p>
    <p>Cannot resist random loss</p>
    <p>Less Packet Losses TCP CUBIC</p>
    <p>BBR</p>
    <p>PCC Allegro PCC Vivace</p>
  </div>
  <div class="page">
    <p>Fair equilibrium (100Mbps, 30ms RTT, 75KB buffer)</p>
    <p>Vivace upon Convergence</p>
    <p>PCC Vivace: Online-Learning Congestion Control 19</p>
    <p>PCC Vivace</p>
    <p>BBR CUBIC</p>
    <p>PCC Allegro-Latency Fast convergence to fair share with high stability</p>
  </div>
  <div class="page">
    <p>TCP Friendliness</p>
    <p>PCC Vivace: Online-Learning Congestion Control 20</p>
    <p>Per-flow share BBR not friendly with small buffer</p>
    <p>BBR keeps grabbing 50%</p>
    <p>bandwidth</p>
    <p>RTT gradient  0, stops being over</p>
    <p>friendly</p>
  </div>
  <div class="page">
    <p>Insights from Learning-Theoretic Tools</p>
    <p>Flexible equilibrium state with heterogeneous senders</p>
    <p>PCC Vivace: Online-Learning Congestion Control 21</p>
  </div>
  <div class="page">
    <p>Limitation in Extremely Dynamic Networks</p>
    <p>PCC Vivace: Online-Learning Congestion Control 22</p>
    <p>LTE (Mahimahi emulator [Netravali et al. ATC 2015])</p>
    <p>Low Throughput</p>
  </div>
  <div class="page">
    <p>PCC Vivace: Online-Learning Congestion Control 23</p>
    <p>https://www.youtube.com/watch?v=Y3IzuCdwdUo&amp;t=27s (Demo comparing PCC with UDP and TCP video streaming)</p>
  </div>
  <div class="page">
    <p>PCC In Action</p>
    <p>Open source release on GitHub (https://github.com/pccproject)  UDP implementation used in experiments presented here  QUIC implementation with Google  Pantheon implementation for test purpose  Kernel implementation in the works</p>
    <p>VACC variant of PCC by and  Kernel implementation with optimizations for video over LTE  Ongoing research project with successful field tests</p>
    <p>PCC Vivace: Online-Learning Congestion Control 24</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>PCC Vivace: Leveraging no-regret learning for congestion control  Consistent high performance as PCC Allegro  Latency awareness, mitigated bufferbloat (latency inflation, congestion</p>
    <p>loss)  Provably fair, yet also flexible equilibrium convergence  Fast and stable convergence, even with changing network conditions  Improved TCP friendliness, safer to deploy</p>
    <p>Thanks for generous project support</p>
    <p>PCC Vivace: Online-Learning Congestion Control 25</p>
  </div>
  <div class="page">
    <p>Thanks!</p>
  </div>
  <div class="page">
    <p>PCC Vivace</p>
    <p>Heuristic rate control</p>
    <p>PCC Vivace: Online-Learning Congestion Control 27</p>
    <p>Gradient-ascent</p>
    <p>Sending rate</p>
    <p>Observed utility</p>
    <p>xx- x+</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>PCC Vivace</p>
    <p>Loss-based utility function</p>
    <p>Heuristic rate control</p>
    <p>PCC Vivace: Online-Learning Congestion Control 28</p>
    <p>Strictly concave Gradient-ascent</p>
    <p>Linear regression Low pass filter (&gt; 0.01)</p>
    <p>L(x+) = 0.01% L(x-) = 2.0% Double check</p>
  </div>
  <div class="page">
    <p>Latency awareness (100Mbps, 30ms RTT Emulab bottleneck link)</p>
    <p>Vivace Utility Performance</p>
    <p>PCC Vivace: Online-Learning Congestion Control 29</p>
    <p>P ac</p>
    <p>ke t</p>
    <p>Lo ss</p>
    <p>R at</p>
    <p>e (%</p>
    <p>)</p>
    <p>Buffer Size (KB)</p>
    <p>PCC Vivace PCC Allegro BBR TCP CUBIC TCP Illinois</p>
    <p>&lt; 0.5% loss with 13.5KB buffer 55% smaller than TCP CUBIC</p>
  </div>
  <div class="page">
    <p>Convergence Speed/Stability Tradeoff (100Mbps, 30ms RTT, 75KB buffer)</p>
    <p>Vivace Rate Control Performance</p>
    <p>PCC Vivace: Online-Learning Congestion Control 30</p>
  </div>
  <div class="page">
    <p>Insights from No-Regret Guarantee</p>
    <p>Random loss tolerance vs. Congestion loss (8Mbps, 25KB per-flow share)</p>
    <p>PCC Vivace: Online-Learning Congestion Control 31</p>
    <p>~15%</p>
    <p>~ 5%</p>
  </div>
  <div class="page">
    <p>Performance in Real-World</p>
    <p>PCC Vivace: Online-Learning Congestion Control 32</p>
  </div>
  <div class="page">
    <p>Limitation of No-Regret</p>
    <p>PCC Vivace: Online-Learning Congestion Control 33</p>
    <p>Sender's choices of rates are asymptotically (across time) no worse, utility-wise, than sending at what would have been (in hindsight) the best fixed rate</p>
    <p>Still make sense in highly dynamic environment?</p>
  </div>
</Presentation>
