<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Properties Semantics Insensitivity Stability Conclusions</p>
    <p>Reexamining some Holy Grails of Provenance</p>
    <p>Boris Glavic Renee J. Miller</p>
    <p>University of Toronto</p>
    <p>UofT:DB Group</p>
    <p>TaPP 2011, June 21, 2011</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Properties Semantics Insensitivity Stability Conclusions</p>
    <p>Insensitivity</p>
    <p>Insensitivity to Query Rewrite</p>
    <p>Equivalent queries have the same provenance</p>
    <p>Q  Q  P(Q, I , t) = P(Q, I , t)</p>
    <p>Holy Grails</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Properties Semantics Insensitivity Stability Conclusions</p>
    <p>Insensitivity</p>
    <p>Insensitivity to Query Rewrite</p>
    <p>Equivalent queries have the same provenance</p>
    <p>Q  Q  P(Q, I , t) = P(Q, I , t) Caveat: Which queries are equivalent?</p>
    <p>Set vs. Bag semantics Query language / Operators</p>
    <p>Holy Grails</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Properties Semantics Insensitivity Stability Conclusions</p>
    <p>Stability</p>
    <p>Stability with Respect to Query Language Extension</p>
    <p>Extend query language with new operators  no change to provenance of queries that do not use new operators</p>
    <p>Holy Grails</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Properties Semantics Insensitivity Stability Conclusions</p>
    <p>Where</p>
    <p>Where [Buneman et al., 2003]</p>
    <p>Captures which attribute values in the result of a query have been copied from which attribute values in the instance. Representation: P(Attr (I ))</p>
    <p>Where: Operator-level syntax-based annotation propagation</p>
    <p>IWhere: Insensitive variant: Union of Where for all Q with Q  Q</p>
    <p>Holy Grails</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Properties Semantics Insensitivity Stability Conclusions</p>
    <p>Where</p>
    <p>Where</p>
    <p>Sensitive, traditionally attributed to being based on query syntax</p>
    <p>Depends on the internal data-flow inside the query</p>
    <p>How values are routed through the query</p>
    <p>IWhere</p>
    <p>Insensitive by combining Where for all equivalent queries</p>
    <p>Counterintuitive effect that if (R, t, A) is in the provenance then all (R, t, A) with t.A = t.A are in the provenance too.</p>
    <p>Reason: Can construct equivalent query adding self-join on A</p>
    <p>Holy Grails</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Properties Semantics Insensitivity Stability Conclusions</p>
    <p>Where</p>
    <p>Example</p>
    <p>Qa = R</p>
    <p>Qb = A,B (R ./A=C AC ,BD (R))</p>
    <p>R A B</p>
    <p>r1 1 2 r2 1 3 r3 2 3 r4 2 5</p>
    <p>Qa &amp; Qb</p>
    <p>A B a1 1 2 a2 1 3 a3 2 3 a4 2 5</p>
    <p>Provenance</p>
    <p>Where(Qa, a1, A) = {(r1, A)} Where(Qb, a1, A) = {(r1, A), (r2, A)} IWhere(Qa, a1, A) = IWhere(Qb, a1, A) = {(r1, A), (r2, A)}</p>
    <p>Holy Grails</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Properties Semantics Insensitivity Stability Conclusions</p>
    <p>Arguments for Insensitivity</p>
    <p>Holy Grails</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Properties Semantics Insensitivity Stability Conclusions</p>
    <p>Instability of IWhere</p>
    <p>IWhere is union of Where for all equivalent queries</p>
    <p>e.g., SPJ and USPJ equivalences are different</p>
    <p>e.g., union Q with a join of Q with some other relation</p>
    <p>Let UWhere be IWhere for USPJ queries</p>
    <p>UWhere an attribute value is annotated with all annotations from attribute positions that have the same value</p>
    <p>Holy Grails</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Properties Semantics Insensitivity Stability Conclusions</p>
    <p>Instability of IWhere</p>
    <p>IWhere is union of Where for all equivalent queries</p>
    <p>e.g., SPJ and USPJ equivalences are different</p>
    <p>e.g., union Q with a join of Q with some other relation</p>
    <p>Let UWhere be IWhere for USPJ queries</p>
    <p>UWhere an attribute value is annotated with all annotations from attribute positions that have the same value</p>
    <p>Holy Grails</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Properties Semantics Insensitivity Stability Conclusions</p>
    <p>Instability of IWhere</p>
    <p>IWhere is union of Where for all equivalent queries</p>
    <p>e.g., SPJ and USPJ equivalences are different</p>
    <p>e.g., union Q with a join of Q with some other relation</p>
    <p>Let UWhere be IWhere for USPJ queries</p>
    <p>UWhere an attribute value is annotated with all annotations from attribute positions that have the same value</p>
    <p>Holy Grails</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Properties Semantics Insensitivity Stability Conclusions</p>
    <p>Instability of IWhere</p>
    <p>IWhere is union of Where for all equivalent queries</p>
    <p>e.g., SPJ and USPJ equivalences are different</p>
    <p>e.g., union Q with a join of Q with some other relation</p>
    <p>Let UWhere be IWhere for USPJ queries</p>
    <p>UWhere an attribute value is annotated with all annotations from attribute positions that have the same value</p>
    <p>Holy Grails</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Properties Semantics Insensitivity Stability Conclusions</p>
    <p>Instability of IWhere</p>
    <p>IWhere is union of Where for all equivalent queries</p>
    <p>e.g., SPJ and USPJ equivalences are different</p>
    <p>e.g., union Q with a join of Q with some other relation</p>
    <p>Let UWhere be IWhere for USPJ queries</p>
    <p>UWhere an attribute value is annotated with all annotations from attribute positions that have the same value</p>
    <p>Holy Grails</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Properties Semantics Insensitivity Stability Conclusions</p>
    <p>Instability of IWhere</p>
    <p>Example</p>
    <p>Qa = R</p>
    <p>R A B</p>
    <p>r1 1 2 r2 1 3 r3 2 3 r4 2 5</p>
    <p>S C</p>
    <p>s1 2 s2 3</p>
    <p>Qa &amp; Qb</p>
    <p>A B a1 1 2 a2 1 3 a3 2 3 a4 2 5</p>
    <p>Provenance</p>
    <p>Where(Qa, a3, A) = {(r3, A)} IWhere(Qa, a3, A) = {(r3, A), (r4, A)}</p>
    <p>UWhere(Qa, a3, A) = {(r3, A), (r4, A), (r1, B), (s1, C )}</p>
    <p>Holy Grails</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Properties Semantics Insensitivity Stability Conclusions</p>
    <p>Conclusions</p>
    <p>Take Away Messages</p>
    <p>Be careful how to achieve a property</p>
    <p>Insensitivity less applicable to semantics that address internal data-flow</p>
    <p>Queries with the same external but possibly different internal behaviour have the same provenance</p>
    <p>Some Things Id Like to See</p>
    <p>Declarative Semantics  derive operator-level construction Semantics model processing, but have a insensitive core</p>
    <p>The never-ending quest: Deal with Negation</p>
    <p>Other data-models (order)</p>
    <p>Holy Grails</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Questions</p>
    <p>Semantics S o u n d</p>
    <p>C o m</p>
    <p>p le</p>
    <p>te</p>
    <p>R e sp</p>
    <p>o n si b le</p>
    <p>In se</p>
    <p>n si ti v e</p>
    <p>(s e t)</p>
    <p>In se</p>
    <p>n si ti v e</p>
    <p>(b a g )</p>
    <p>S ta</p>
    <p>b le</p>
    <p>Why Wit - X - X X X Why - X - - ? X IWhy - X X X X X</p>
    <p>Where Where - - - - ? X IWhere - - - X X</p>
    <p>How - X - - X X</p>
    <p>Lineage-based Lineage X X - - - X PI-CS X X - - - X C-CS X - - - - X</p>
    <p>Causality - X X X X X</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Semantics Summary</p>
    <p>Representation Used by</p>
    <p>P(Attr (I )) Where, IWhere</p>
    <p>P(P(Tuple(I ))) Wit, Why, IWhy</p>
    <p>N[Tuple(I )] How</p>
    <p>{&lt; R1 , . . . , R  n &gt;| Ri  Ri (Q)} Lineage</p>
    <p>P({&lt; t1, . . . , tn &gt;| ti  Ri (Q)  ti =}) PI-CS, CCS</p>
    <p>P(Tuple(I )) Causality</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Sound, Complete, Responsible</p>
    <p>Sound, Complete, Responsible</p>
    <p>Sound: Provenance of t produces nothing different from t. t 6= t  t 6 Q(P(Q, I , t))</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Sound, Complete, Responsible</p>
    <p>Sound, Complete, Responsible</p>
    <p>Sound: Provenance of t produces nothing different from t. t 6= t  t 6 Q(P(Q, I , t))</p>
    <p>Caveat: Semantics of evaluating query over provenance</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Sound, Complete, Responsible</p>
    <p>Sound, Complete, Responsible</p>
    <p>Sound: Provenance of t produces nothing different from t. t 6= t  t 6 Q(P(Q, I , t))</p>
    <p>Complete: Provenance of t produces at least t t  Q(P(Q, I , t))</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Sound, Complete, Responsible</p>
    <p>Sound, Complete, Responsible</p>
    <p>Sound: Provenance of t produces nothing different from t. t 6= t  t 6 Q(P(Q, I , t))</p>
    <p>Complete: Provenance of t produces at least t t  Q(P(Q, I , t))</p>
    <p>Caveat: Semantics of evaluating query over provenance</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Sound, Complete, Responsible</p>
    <p>Sound, Complete, Responsible</p>
    <p>Sound: Provenance of t produces nothing different from t. t 6= t  t 6 Q(P(Q, I , t))</p>
    <p>Complete: Provenance of t produces at least t t  Q(P(Q, I , t))</p>
    <p>Responsible: Every tuple in the provenance of t is necessary to derive t</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Sound, Complete, Responsible</p>
    <p>Sound, Complete, Responsible</p>
    <p>Sound: Provenance of t produces nothing different from t. t 6= t  t 6 Q(P(Q, I , t))</p>
    <p>Complete: Provenance of t produces at least t t  Q(P(Q, I , t))</p>
    <p>Responsible: Every tuple in the provenance of t is necessary to derive t</p>
    <p>Caveat: . . . from every alternative derivation in the provenance . . .</p>
    <p>factor provenance into alterative derivations Caveat: Different ways to model that.</p>
    <p>E.g., t  P(Q, I , t) : t / Q(P(Q, I , t)  {t})</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Sound, Complete, Responsible</p>
    <p>Sound, Complete, Responsible</p>
    <p>Example</p>
    <p>Qb = A,B (R ./A=C AC ,BD (R))</p>
    <p>R A B</p>
    <p>r1 1 2 r2 1 3 r3 2 3 r4 2 5</p>
    <p>Qb</p>
    <p>A B a1 1 2 a2 1 3 a3 2 3 a4 2 5</p>
    <p>Provenance</p>
    <p>P(Qb, I , a1) = {r1, r2}</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Lineage-based</p>
    <p>Lineage-based [Cui et al., 2000]</p>
    <p>Operator-level declarative semantics similar to Why. Provenance is modeled as a list of subsets of the relations accessed by the query (leafs of the algebra tree of Q) Representation: {&lt; R1 , . . . , R</p>
    <p>n &gt;| Ri  Ri (Q)}</p>
    <p>Lineage: List of subsets of the algebra-tree nodes</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Lineage-based</p>
    <p>Lineage-based [Glavic et al., 2009]</p>
    <p>Provenance is modeled as a set of witness lists. A witness list is a list of tuples - one from each relation accessed by the query. Representation: P({&lt; t1, . . . , tn &gt;| ti  Ri (Q)  ti =})</p>
    <p>PI-CS: Lineage with different representation and broader query language coverage</p>
    <p>C-CS: Similar to Where but with tuple granularity</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Lineage-based</p>
    <p>Example</p>
    <p>Qc = A(R)  B (R) Qd = A(R ./B=C S)</p>
    <p>R A B</p>
    <p>r1 1 2 r2 1 3 r3 2 3 r4 2 5</p>
    <p>S C</p>
    <p>s1 2 s2 3</p>
    <p>Qc A</p>
    <p>c1 1 c2 2 c3 3 c4 5</p>
    <p>Qd &amp; Qe</p>
    <p>A d1 1 d2 2</p>
    <p>Provenance</p>
    <p>PI  CS(Qc , c2) = {&lt;, r1 &gt;, &lt; r3, &gt;, &lt; r4, &gt;} PI  CS(Qd , d1) = {&lt; r1, s1 &gt;, &lt; r2, s2 &gt;} C  CS(Qd , d1) = {&lt; r1, &gt;, &lt; r2, &gt;} Lineage(Qd , d1) =&lt; {r1, r2}, {s1, s2} &gt;</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Why</p>
    <p>Why [Buneman et al., 2003]</p>
    <p>Why-provenance models provenance as a set of witnesses. A witness w for a tuple t is a subset of the instance I where t  Q(w ). Representation: P(P(Tuple(I )))</p>
    <p>Wit: Set of all witnesses</p>
    <p>Why: Query-syntax based proof-witnesses</p>
    <p>IWhy: Minimal elements from Wit resp. Why</p>
    <p>Example</p>
    <p>Qa = R</p>
    <p>R A B</p>
    <p>r1 1 2 r2 1 3 r3 2 3 r4 2 5</p>
    <p>Qa</p>
    <p>A B a1 1 2 a2 1 3 a3 2 3 a4 2 5</p>
    <p>Provenance</p>
    <p>Wit(Qa, a1) = {J | J  R  r1  J} Why (Qa, a1) = {{r1}} IWhy (Qa, a1) = {{r1}}</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Why</p>
    <p>Example</p>
    <p>Qa = R</p>
    <p>R A B</p>
    <p>r1 1 2 r2 1 3 r3 2 3 r4 2 5</p>
    <p>Qa</p>
    <p>A B a1 1 2 a2 1 3 a3 2 3 a4 2 5</p>
    <p>Provenance</p>
    <p>Wit(Qa, a1) = {J | J  R  r1  J} Why (Qa, a1) = {{r1}} IWhy (Qa, a1) = {{r1}}</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>How</p>
    <p>Provenance Semirings [Green et al., 2007]</p>
    <p>Tuples of relations annotated with elements from a semiring. Annotation propagation defined for positive relational algebra as operations of the semiring (set difference and aggregration later). Representation: N(Tuple(I ))</p>
    <p>How: Most general form of annotations: polynomials over variable representing the instance tuples. Addition indicates alternative use of tuples; multiplication conjunctive use.</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>How</p>
    <p>Example</p>
    <p>Qb = A,B (R ./A=C AC ,BD (R))</p>
    <p>R A B</p>
    <p>r1 1 2 r2 1 3 r3 2 3 r4 2 5</p>
    <p>Qb</p>
    <p>A B a1 1 2 a2 1 3 a3 2 3 a4 2 5</p>
    <p>Provenance</p>
    <p>How (Qb, a1) = r 2 1 + r1  r2</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Causality</p>
    <p>Causality [Meliou et al., 2010]</p>
    <p>Provenance is modeled as a set of causes. A cause c  I for a tuple t is defined as follows:</p>
    <p>t  Q(I  C ) and t 6 Q(I  C  {c}) Representation: P(Tuple(I ))</p>
    <p>Causality: Set of all causes</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Causality</p>
    <p>Example</p>
    <p>Qa = R</p>
    <p>R A B</p>
    <p>r1 1 2 r2 1 3 r3 2 3 r4 2 5</p>
    <p>Qa</p>
    <p>A B a1 1 2 a2 1 3 a3 2 3 a4 2 5</p>
    <p>Provenance</p>
    <p>Causality (Qa, a1) = {r1}</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Insensitivity to Query Rewrite</p>
    <p>Insensitivity to Query Rewrite</p>
    <p>Equivalent queries have the same provenance</p>
    <p>Q  Q  P(Q, I , t) = P(Q, I , t) Set resp. Bag semantics</p>
    <p>Overview</p>
    <p>Insensitive (Set, Bag) Wit, IWhy, IWhere, Causality</p>
    <p>Insensitive (Bag) How</p>
    <p>Sensitive: Lineage, PI-CS, C-CS, Where</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Why</p>
    <p>Wit</p>
    <p>Defined over black-box behaviour of query  trivially insensitive</p>
    <p>Why</p>
    <p>Sensitive, traditionally attributed to being based on query syntax</p>
    <p>Why may contain tuples that do not contribute to t</p>
    <p>Equivalent queries that apply redundant computations may contain larger provenance</p>
    <p>Caveat: But why does this argument not apply to Wit?</p>
    <p>Positive queries: super-set of a witness is also a witness  tuples used by redundant computations are in Wit</p>
    <p>IWhy</p>
    <p>Minimal elements of Why</p>
    <p>also insensitive</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Why</p>
    <p>Example</p>
    <p>Qa = R</p>
    <p>Qb = A,B (R ./A=C AC ,BD (R))</p>
    <p>R A B</p>
    <p>r1 1 2 r2 1 3 r3 2 3 r4 2 5</p>
    <p>Qa &amp; Qb</p>
    <p>A B a1 1 2 a2 1 3 a3 2 3 a4 2 5</p>
    <p>Provenance</p>
    <p>Wit(Qa, a1) = Wit(Qb, a1) = {J | J  R  r1  J} Why (Qa, a1) = {{r1}} Why (Qb, a1) = {{r1}, {r1, r2}} IWhy (Qa, a1) = IWhy (Qb, a1) = {{r1}}</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Lineage-based</p>
    <p>Provenance representation based on query syntax</p>
    <p>Trivial examples for sensitivity based on reordering of the arguments of commutative operators</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Lineage-based</p>
    <p>Example</p>
    <p>Qd = A(R ./B=C S)</p>
    <p>Qe = A(S ./B=C R)</p>
    <p>R A B</p>
    <p>r1 1 2 r2 1 3 r3 2 3 r4 2 5</p>
    <p>S C</p>
    <p>s1 2 s2 3</p>
    <p>Qd &amp; Qe</p>
    <p>A d1 1 d2 2</p>
    <p>Provenance</p>
    <p>Lineage(Qd , d1) =&lt; {r1, r2}, {s1, s2} &gt; Lineage(Qe , d1) =&lt; {s1, s2}, {r1, r2} &gt;</p>
    <p>PI  CS(Qd , d1) = {&lt; r1, s1 &gt;, &lt; r2, s2 &gt;} PI  CS(Qe , d1) = {&lt; s1, r1 &gt;, &lt; s2, r2 &gt;}</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>How</p>
    <p>Sensitive (Set):</p>
    <p>Insensitive (Bag): Operator semantics defined to take bag semantics into account</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>How</p>
    <p>Example</p>
    <p>Qa = R</p>
    <p>Qb = A,B (R ./A=C AC ,BD (R))</p>
    <p>R A B</p>
    <p>r1 1 2 r2 1 3 r3 2 3 r4 2 5</p>
    <p>Qa &amp; Qb</p>
    <p>A B a1 1 2 a2 1 3 a3 2 3 a4 2 5</p>
    <p>Provenance</p>
    <p>How (Qa, a1) = r1</p>
    <p>How (Qb, a1) = r 2 1 + r1  r2</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Causality</p>
    <p>Trivially insensitive: Defined over the black-box behaviour of a query</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
  <div class="page">
    <p>UofT:DB Group</p>
    <p>Questions Overview Properties Semantics Insensitivity</p>
    <p>Causality</p>
    <p>Example</p>
    <p>Qa = R</p>
    <p>Qb = A,B (R ./A=C AC ,BD (R))</p>
    <p>R A B</p>
    <p>r1 1 2 r2 1 3 r3 2 3 r4 2 5</p>
    <p>Qa &amp; Qb</p>
    <p>A B a1 1 2 a2 1 3 a3 2 3 a4 2 5</p>
    <p>Provenance</p>
    <p>Causality (Qa, a1) = Causality (Qb, a1) = {r1}</p>
    <p>Reexamining some Holy Grails of Provenance</p>
  </div>
</Presentation>
