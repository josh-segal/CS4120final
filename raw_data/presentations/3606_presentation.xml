<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Hao Chen (Microsoft)</p>
    <p>Ilaria Chillotti (KU Leuven)</p>
    <p>Yihe Dong (Microsoft)</p>
    <p>Oxana Poburinnaya (University of Rochester)</p>
    <p>Ilya Razenshteyn (Microsoft)</p>
    <p>Sadegh Riazi (UCSD)</p>
  </div>
  <div class="page">
    <p>Two or more parties want to perform some computation on their private data, and only reveal the output</p>
    <p>Example applications:  Private set intersection  Privacy-preserving machine learning</p>
    <p>Security notions: passive/semi-honest, covert, active/malicious</p>
  </div>
  <div class="page">
    <p>Given:  Dataset:  points  from a metric space  = (, )</p>
    <p>Query:  A point</p>
    <p>Goal:  Find  data points closest to the query</p>
    <p>Can be used for similarity search</p>
  </div>
  <div class="page">
    <p>Server holds a dataset, client holds one or several queries</p>
    <p>Goal:  Server learns nothing</p>
    <p>Client learns nothing about the dataset except (approximate) answers to the queries</p>
    <p>Accuracy vs. time, communication, number of rounds</p>
    <p>Focus on the Euclidean distance</p>
    <p>Applications: face recognition/biometric identification, searching medical data, etc.</p>
  </div>
  <div class="page">
    <p>[Erkin, Franz, Guajardo, Katzenbeisser 2009] [Sadeghi, Schneider, Wehrenberg 2009] [Barni, Bianchi, Catalano, Raimondo, Labati, Failla, Fiore, Lazzeretti, Piuri, Scotti, Pivo 2010] [Evans, Huang, Katz, Malka 2011] [Demmler, Schneider, Zohner 2015] [Songhori, Hussain, Sadeghi, Koushanfar 2015] [Riazi, Chen, Shrivastava, Wallach, Koushanfar 2016] [Shaul, Feldman, Rus 2018] [Asharov, Halevi, Lindell, Rabin 2018] [Riazi, Javaheripi, Hussain, Koushanfar 2019]</p>
    <p>All except one work implement linear scan securely</p>
  </div>
  <div class="page">
    <p>Linear scan  Query time:  distance computations</p>
    <p>Too slow for massive datasets</p>
    <p>Sublinear-time algorithms  Approximate answers</p>
    <p>Might not work well with secure computation</p>
  </div>
  <div class="page">
    <p>We propose two algorithms for secure approximate k-NNS:  Optimized linear scan</p>
    <p>Cluster-based algorithm</p>
    <p>We implemented them securely using a combination of Homomorphic encryption (HE), Garbled circuits (GC), and Oblivious ROM (OROM)</p>
  </div>
  <div class="page">
    <p>Linear scan: compute distances + select  smallest</p>
    <p>Compute distance using HE and top- selection using GC</p>
    <p>top- selection becomes the bottleneck</p>
    <p>Alice: query  Bob: dataset  = {}=1</p>
    <p>GC</p>
    <p>IDs of  closest points</p>
    <p>HE</p>
    <p>{       mod }=1</p>
    <p>{}=1</p>
  </div>
  <div class="page">
    <p>2 =  2 +</p>
    <p>Enough to compute 2 ,</p>
    <p>Use BFV scheme [Brakerski 2012] [Fan, Vercauteren 2012] as implemented in Microsoft SEAL</p>
    <p>Client encrypts the query, sends it to the server, server performs additions and multiplications by a plaintext</p>
    <p>Heavily vectorized</p>
    <p>dataset</p>
    <p>query</p>
  </div>
  <div class="page">
    <p>For n values with t bits each, nave circuit need O(tnk) gates</p>
    <p>Randomized circuit with (   + poly  ) gates  For every input 1, 2,  ,  circuit outputs  smallest numbers whp</p>
    <p>Partition into  random groups of size /</p>
    <p>Find minimum in each group: () gates total</p>
    <p>Compute top- among the minima: () gates</p>
    <p>Can choose  =  2  such that correct w.p. 1</p>
    <p>Overall, ( + 3 ) comparisons, (   + 3  ) gates</p>
  </div>
  <div class="page">
    <p>-means clustering on the dataset</p>
    <p>Compute  centers closest to the query</p>
    <p>Return closest points from these clusters</p>
    <p>Run linear scan with retrieved points</p>
  </div>
  <div class="page">
    <p>Compute distances to centers using HE</p>
    <p>Choose several closest centers using GC</p>
    <p>Retrieve (secret shares of) points from the corresponding clusters using OROM (one entry per cluster)</p>
    <p>Compute distances to the retrieved points using HE</p>
    <p>Choose closest points using GC</p>
  </div>
  <div class="page">
    <p>Alice:  Bob: [1 ]</p>
    <p>Securely returns [] to Alice</p>
    <p>Linear communication complexity if done in GC  Use [Doerner, Shelat 2017]: (log ) communication</p>
    <p>~ log  rounds</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>We improved the performance of secure k nearest neighbors</p>
    <p>(Much) faster secure implementation of the linear scan  Small Boolean circuit for top- (two new constructions)</p>
    <p>First secure implementation of a sublinear time algorithm  New algorithm tailored to secure computation</p>
    <p>A number of optimizations to HE, GC, OROM  Dramatically improved concrete efficiency</p>
    <p>Can find 10-NN on 10M 96-dimensional vectors with accuracy 0.9 in under 6 seconds  Up to 31x faster than (optimally implemented) prior work</p>
  </div>
  <div class="page">
    <p>Contact: Hao Chen (haoche@microsoft.com)</p>
  </div>
</Presentation>
