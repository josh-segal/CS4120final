<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Trade &amp; Cap: A Customer-Managed, Market-Based System for Trading Bandwidth Allowances at a Shared Link</p>
    <p>Azer Bestavros Computer Science Department</p>
    <p>Boston University</p>
    <p>Joint work with</p>
    <p>Jorge Londono (BU U Pontificia Bolivariana)</p>
    <p>http://www.cs.bu.edu/groups/wing</p>
    <p>Jorge Londono (BU U Pontificia Bolivariana) Nikos Laoutaris (BU Telefonica)</p>
    <p>Usenix/ACM NetEcon10, Vancouver, Canada October 3, 2010</p>
    <p>Todays last mile</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 2</p>
    <p>The perils of the fixed pricing model</p>
    <p>Its here to stay; metered pricing rejected</p>
    <p>Implications: Customer has no incentive to save bandwidth</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 3</p>
    <p>ISP cost depends on peak demand  95/5 rule Reigning in bandwidth hogs is incompatible with Net Neutrality</p>
    <p>Must devise mechanisms that take ISPs out of the traffic shaping business</p>
    <p>DSLAM last-mile architecture</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 4</p>
    <p>Traffic shaping done at BRAS</p>
    <p>Broadband Remote Access Server</p>
    <p>DSL Access Multiplexer</p>
    <p>Solution: Create a marketplace</p>
    <p>Recognize the two types of user traffic: Reserved Traffic (RT)</p>
    <p>For interactive browsing, VoIP, messaging, gaming,  Limited bandwidth; highly sensitive to response time</p>
    <p>Fluid Traffic (FT)</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 5</p>
    <p>Fluid Traffic (FT) P2P, Network backup, Netflix/software downloads,  Open-ended bandwidth; less sensitive to response time</p>
    <p>Create a marketplace: 1. Give users rights to DSLAM bandwidth, and 2. Let users trade RT/FT allocations over time</p>
    <p>The Marketplace</p>
    <p>Each user gets a fixed budget per epoch Budget proportional to level of service An epoch is a fixed number of time-slots, e.g., 1 day = 288 5-min slots</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 6</p>
    <p>Trade &amp; Cap User engages in a pure strategies game that yields a schedule for its RT bandwidth User acquires as much FT bandwidth as its remaining budget would allow</p>
  </div>
  <div class="page">
    <p>Trading Phase: Strategy Space</p>
    <p>Session: An RT session is the sequence of slots during which an RT application is active</p>
    <p>Slack:</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 7</p>
    <p>User may have flexibility in scheduling RT sessions; slack specifies the number of slots that an RT session is allowed to be shifted back/forth</p>
    <p>Strategy Space: The set of all possible arrangements of RT sessions within allowable slack define the strategy space for a user</p>
    <p>Trading Phase: Cost Function</p>
    <p>Let xik be the bandwidth used in slot k by a chosen RT session schedule for user i. The cost incurred by user i is given by:</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 8</p>
    <p>Cost of user i depends on the choices made by other users  hence the game!</p>
    <p>==</p>
    <p>slotsk usersj jkik</p>
    <p>slotsk kiki xxUxc</p>
    <p>Trading Phase: Illustration</p>
    <p>Cost(User 2) = 6</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 99</p>
    <p>User 1 User 1</p>
    <p>User 2 User 2</p>
    <p>Up 2 2 20 0 01 1</p>
    <p>Trading Phase: Illustration</p>
    <p>Cost(User 2) = 4</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 10</p>
    <p>User 1 User 1</p>
    <p>User 2 User 2</p>
    <p>Up 1 2 11 0 11 1</p>
    <p>Trading Phase: Best Response</p>
    <p>BR of user i is a schedule of RT sessions that minimizes its cost ci Computing BR is NP-hard, equivalent to solving a generalized knapsack problem</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 11</p>
    <p>Dynamic programming solution is pseudo-polynomial in the product of the number of sessions and number of slots Scales well for all practical settings  100s of users and 100s of slots</p>
    <p>Trading Phase: Findings</p>
    <p>Provably converges to Nash Equilibrium, even in presence of constraints For n users, Price of Anarchy is n, but in practice below 2, especially for n&gt;10</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 12</p>
    <p>Experimentally, large reduction of peak utilization, even with small flexibility</p>
  </div>
  <div class="page">
    <p>Capping Phase: Best Response</p>
    <p>BR of user i is to maximize total FT allocation</p>
    <p>= slotsk</p>
    <p>iki ww</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 13</p>
    <p>subject to the budget constraint</p>
    <p>ii slotsk usersj</p>
    <p>jkik cBwUw =</p>
    <p>+</p>
    <p>0</p>
    <p>Capping Phase: Budget</p>
    <p>Let V be some desirable upper bound on the total traffic per slot The ISP sets a target capacity C = V/R, where R  1 reflects its resistance to traffic Th ISP ll t C i ti</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 14</p>
    <p>The ISP allocates C in some proportion (e.g., equally) to all n users over all slots This constitutes the budget B assigned to a user over an epoch T</p>
    <p>T n C</p>
    <p>B =</p>
    <p>Capping Phase: Findings</p>
    <p>Locally computing BR is efficient using Lagrange Multipliers method</p>
    <p>Provably, converges to a unique global (social) optimum that maximizes the FT</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 15</p>
    <p>( ) p allocations of all users (thus could be done centrally by ISP)</p>
    <p>Experimentally, smoothes the aggregate RT+FT traffic to any desirable level controlled by the resistance parameter R</p>
    <p>Trade &amp; Cap: Implementation</p>
    <p>On Client Side (e.g., DSL Modem): + Strategic agent to execute Trade &amp; Cap + Operational service to profile, classify, and shape</p>
    <p>Bulk traffic</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 16</p>
    <p>ISP Side (e.g., DSLAM or BRAS): + Support exchange between strategic agents + Enforce total traffic/slot/user from Trade &amp; Cap</p>
    <p>Interactive traffic</p>
    <p>Trade &amp; Cap: Implementation</p>
    <p>Linux BoxesTrace-driven workload</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 17</p>
    <p>Trade &amp; Cap: Implementation notes</p>
    <p>User Input: As simple as checking box to join marketplace, and as elaborate as micromanaging RT slacks May set a fraction of budget as insurance</p>
    <p>Client side Profiler:Client-side Profiler: May be explicitly controlled by applications (or user settings)</p>
    <p>Client-side Traffic Shaper: Work-conserving (not reservation based) Linux Hierarchical Token Bucket (HTB) Allows FT to use underutilized RT bandwidth</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 18</p>
  </div>
  <div class="page">
    <p>Experimental Evaluation</p>
    <p>Workload Derived from WAN traces of MAWI project</p>
    <p>Identify users from volume and direction of flows to kno n po ts (e g most</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 19</p>
    <p>known ports (e.g., most traffic destined to port 80) Identify user RT sessions using thresholds on per-IP traffic intensities over time Slack introduced using various models (e.g., fixed, proportional, etc.)</p>
    <p>Reported results are negatively impacted by less-than-ideal (atypical) trace.</p>
    <p>Trading Phase: Experimental PoA</p>
    <p>Over 5 slots Over 10 slots</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 20</p>
    <p>Theoretical PoA is n but not in practice</p>
    <p>Trading Phase: Smoothing effect</p>
    <p>Value proposition to ISPs Max Slack</p>
    <p>Reduction in 95%</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 21</p>
    <p>Tr af</p>
    <p>fi c</p>
    <p>V ol</p>
    <p>u m</p>
    <p>e /</p>
    <p>S lo</p>
    <p>t</p>
    <p>C D</p>
    <p>F</p>
    <p>Time Slot Traffic Volume / Slot</p>
    <p>Trade &amp; Cap: Flexibility pays off!</p>
    <p>Value proposition to customers</p>
    <p>ra ff</p>
    <p>ic (</p>
    <p>FT )</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 22</p>
    <p>Total Reserved Traffic (RT) in MB</p>
    <p>N or</p>
    <p>m al</p>
    <p>iz ed</p>
    <p>F lu</p>
    <p>id T</p>
    <p>r</p>
    <p>Trade &amp; Cap</p>
    <p>A win-win for ISPs and customers</p>
    <p>V ol</p>
    <p>u m</p>
    <p>e</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 23</p>
    <p>Time Slot</p>
    <p>N or</p>
    <p>m al</p>
    <p>iz ed</p>
    <p>T ra</p>
    <p>ff ic</p>
    <p>V</p>
    <p>Trade &amp; Cap: Beyond DSLAMs</p>
    <p>Trade &amp; Cap is a general mechanism It can be used to coordinate how a shared resource is used by selfish parties who are not subject to the pay as you go model  e.g., fixed pricing</p>
    <p>Examples Coordinating consumption of reserved versus fluid (CPU/network) capacities of VMs sharing a single host Coordinating reserved versus fluid bandwidth utilization by multiple ISP customers (e.g., enterprises)</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 24</p>
  </div>
  <div class="page">
    <p>Selfish Resource Packing Problems</p>
    <p>Shared bandwidth arbitration Trade &amp; Cap A temporal packing game</p>
    <p>Time</p>
    <p>Lo ad</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 25</p>
    <p>Cloud resource acquisition Colocation Games A spatial packing game</p>
    <p>Resource Instances</p>
    <p>Lo ad</p>
    <p>Colocation Games</p>
    <p>Tasks</p>
    <p>September 24, 2010 Network and Cloud Resource Packing Games @ BU 26</p>
    <p>CLOUDCOMMONS: Architecture</p>
    <p>September 24, 2010 Network and Cloud Resource Packing Games @ BU 27</p>
    <p>CLOUDCOMMONS: Benefit to users</p>
    <p>September 24, 2010 Network and Cloud Resource Packing Games @ BU 28</p>
    <p>Multi-dimensional Planet-Lab trace-driven experiments (Overheads/costs of all XCS services included)</p>
    <p>Conclusion</p>
    <p>In many settings, resource management can only be seen as a strategic game among rational peers By setting up the right mechanism, one can ensure convergence and efficiency New services are needed to support strategic and</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 29</p>
    <p>operational aspects of these mechanisms</p>
    <p>Trade &amp; Cap is an example of such mechanisms It coordinates the shared use of a resource by trading in rights to quality for volume It has been implemented in a last-mile setting as a proof of concept with very promising performance</p>
    <p>Publications</p>
    <p>netEmbed: A service for embedding distributed applications (Demo). Londono and Bestavros. ACM/Usenix Middleware07.</p>
    <p>netEmbed: A resource mapping service for distributed applications. Londono and Bestavros. IEEE/ACM IPDPS08.</p>
    <p>Colocation games with application to distributed resource management. Londono, Bestavros, and Teng. USENIX HotCloud'09.</p>
    <p>October 3, 2010 Trade and Cap @ Usenix/ACM NetEcon'10 30</p>
    <p>Colocation as a Service: Strategic &amp; operational cloud colocation services. Ishakian, Sweha, Londono, and Bestavros. IEEE NCA10.</p>
    <p>Trade &amp; Cap: A customer-managed system for trading bandwidth at a shared link. Londono, Bestavros, and Laoutaris. ACM/Usenix NetEcon10.</p>
    <p>http://csr.bu.edu/cc</p>
  </div>
</Presentation>
