<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Yuanwei Lu1,2, Guo Chen3, Bojie Li1,2, Kun Tan4, Yongqiang Xiong2, Peng Cheng2, Jiansong Zhang2, Enhong Chen1, Thomas Moscibroda5</p>
  </div>
  <div class="page">
    <p>Low and stable base latency: &lt;10s</p>
    <p>High throughput with low CPU overhead</p>
  </div>
  <div class="page">
    <p>e.g. Half of the traffic in a online service datacenter is RDMA [1]</p>
    <p>Lots of parellel paths between any pair of nodes</p>
    <p>Hot spot caused high latency and low throughput  Not robust to failure</p>
    <p>[1] Guo, Chuanxiong, et al. &quot;RDMA over Commodity Ethernet at Scale. &quot;Proceedings of the 2016 conference on ACM SIGCOMM 2016 Conference. ACM, 2016.</p>
  </div>
  <div class="page">
    <p>TCP/IP RDMA</p>
    <p>Multi-path TCP</p>
    <p>Multi-path Transport ?</p>
  </div>
  <div class="page">
    <p>[1] Kalia, Anuj, Michael Kaminsky, and David G. Andersen. &quot;Design Guidelines for High Performance RDMA Systems.&quot; 2016 USENIX Annual Technical Conference (USENIX ATC 16). 2016.</p>
    <p>MP-RDMA design needs to add as little hardware memory footprint as possible compared with existing single-path RDMA</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>#2: How to track out-of-order packets with small on-chip memory footprint?</p>
    <p>#3: How to provide message ordering without hurting performance?</p>
  </div>
  <div class="page">
    <p>Tracking the transmission and congestion states on every paths</p>
    <p>Challenge #1: How to achieve congestion-aware traffic split without per-path states at NIC?</p>
  </div>
  <div class="page">
    <p>Insight: window-based protocol with ACK clocking</p>
  </div>
  <div class="page">
    <p>cWnd 6 Inflight 0 aWnd 6</p>
  </div>
  <div class="page">
    <p>cWnd 6 Inflight 6 aWnd 0</p>
  </div>
  <div class="page">
    <p>cWnd 6 Inflight 6 aWnd 0</p>
    <p>ECN ECN</p>
  </div>
  <div class="page">
    <p>cWnd 6 Inflight 6 aWnd 0 ECN</p>
    <p>ECN</p>
  </div>
  <div class="page">
    <p>cWnd 5.5 Inflight 5 aWnd 0.5 ECN</p>
    <p>ECN</p>
  </div>
  <div class="page">
    <p>cWnd 5.5 Inflight 5 aWnd 0.5 ECN 2</p>
  </div>
  <div class="page">
    <p>cWnd 5 Inflight 4 aWnd 1 ECN 2</p>
  </div>
  <div class="page">
    <p>cWnd 5 Inflight 5 aWnd 0</p>
  </div>
  <div class="page">
    <p>cWnd 5 Inflight 3 aWnd 2</p>
  </div>
  <div class="page">
    <p>cWnd 5 Inflight 5 aWnd 0</p>
  </div>
  <div class="page">
    <p>cWnd 5 Inflight 5 aWnd 0</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>#1: How to achieve congestion-aware traffic split without per-path states at NIC?</p>
    <p>#2: How to track out-of-order packets with small on-chip memory footprint?</p>
    <p>#3: How to provide message ordering without hurting performance?</p>
  </div>
  <div class="page">
    <p>Need meta data to track out-of-order</p>
    <p>Large under certain scenarios  e.g. Link downgrade: 1.2KB bitmap  e.g. PFC pause: infinite</p>
    <p>Challenge #2: How to track out-of-order packets with small on-chip memory footprint?</p>
  </div>
  <div class="page">
    <p>good pathsbad paths</p>
  </div>
  <div class="page">
    <p>3 snd_ooh 0 snd_ool 0 1 2</p>
  </div>
  <div class="page">
    <p>3 snd_ooh 0 snd_ool 0 1 2</p>
  </div>
  <div class="page">
    <p>3 snd_ooh 4 snd_ool 1 1 2</p>
  </div>
  <div class="page">
    <p>3 snd_ooh 6 snd_ool 3 1 2</p>
  </div>
  <div class="page">
    <p>3 snd_ooh 6 snd_ool 3</p>
  </div>
  <div class="page">
    <p>3 snd_ooh 6 snd_ool 3</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>#1: How to achieve congestion-aware traffic split without per-path states at NIC?</p>
    <p>#2: How to track out-of-order packets with small on-chip memory footprint?</p>
    <p>#3: How to provide message ordering without hurting performance?</p>
  </div>
  <div class="page">
    <p>Problem: application may assume in-order messages delivery  Nave solution: stop and wait  Throughput downgrade</p>
    <p>WRITE 1: Data WRITE 2: meta data</p>
    <p>Application poll on meta data</p>
    <p>Message 1 Message 2</p>
    <p>Challenge #3: How to provide message ordering without hurting the application performance?</p>
  </div>
  <div class="page">
    <p>A synchronise message is guaranteed to arrive after all previous messages</p>
    <p>A synchronise message just wait ! before previous messages  !=/(#$%&amp;/'((), large enough to avoid out-of-order</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Altera Stratix V D5 FPGA board with two 40Gb Ethernet ports  14 elements, ~2K lines of OpenCL code</p>
    <p>Dependency: 9 cycles  Clock Frequency: ~206MHz</p>
    <p>Dependency: 3 cycles  Clock Frequency: ~196MHz</p>
    <p>[1] Li, Bojie, et al. &quot;ClickNP: Highly flexible and High-performance Network Processing with Reconfigurable Hardware.&quot; ACM SIGCOMM 2016 Conference.</p>
  </div>
  <div class="page">
    <p>Conclusion: MP-RDMA can be implemented in hardware with high performance</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>47.05% higher application throughput v.s. DCQCN</p>
  </div>
  <div class="page">
    <p>Under loss: &gt; 3x throughput improvement</p>
  </div>
  <div class="page">
    <p>No per-path states  Out-of-order aware path selection  Synchronise mechanism to ensure message ordering</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
</Presentation>
