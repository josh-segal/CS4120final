<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Multipath Transport for Virtual Private Networks</p>
    <p>Daniel Lukaszewski1 Geoffrey Xie2</p>
    <p>USENIX Security 2017 Computer Security Experimentation and Test, 2017</p>
  </div>
  <div class="page">
    <p>Motivating Scenario</p>
    <p>VPNs provide increases security of Internet traffic</p>
    <p>Additional overhead results in reduced end-to-end speeds</p>
    <p>TCP tunnels may suffer from TCP-in-TCP effects (Why TCP in TCP is a Bad Idea, Olaf Titz, 2001)</p>
    <p>Web/VPN Client</p>
    <p>VPN Server</p>
    <p>Web Server</p>
    <p>P1*</p>
    <p>P1</p>
    <p>P2</p>
    <p>P2*</p>
    <p>IPcP1* IPs Transport</p>
    <p>ENCAPSULATION</p>
    <p>P1</p>
    <p>IPtuncP1 IPweb TCP DATA</p>
    <p>IPwebP2 IPtunc TCP DATA</p>
    <p>IPsP2* IPc Transport P2</p>
  </div>
  <div class="page">
    <p>Motivating Scenario</p>
    <p>VPNs provide increases security of Internet traffic</p>
    <p>Additional overhead results in reduced end-to-end speeds</p>
    <p>TCP tunnels may suffer from TCP-in-TCP effects (Why TCP in TCP is a Bad Idea, Olaf Titz, 2001)</p>
    <p>Two layers of congestion control Packet loss on lower layer can increase RTO Upper layer has shorter RTO causing unnecessary re-transmissions</p>
    <p>IPcP1* IPs TCP IPtunc</p>
    <p>P1</p>
    <p>IPweb TCP DATA</p>
    <p>RTOL: 2 sec RTOU : 1 sec</p>
  </div>
  <div class="page">
    <p>UDP vs. TCP Tunnels</p>
    <p>UDP tunnels remove extra layer of congestion control</p>
    <p>Usually default mode for tunnel setup</p>
    <p>Multipath Transport Protocols Further Improve Performance</p>
  </div>
  <div class="page">
    <p>UDP vs. TCP Tunnels</p>
    <p>UDP tunnels remove extra layer of congestion control</p>
    <p>Usually default mode for tunnel setup</p>
    <p>Multipath Transport Protocols Further Improve Performance</p>
  </div>
  <div class="page">
    <p>Related Multipath Work</p>
    <p>MPTCP:</p>
    <p>Improving Multipath TCP [C. Paasch, 2014] PhD Dissertation In depth design and analysis of MPTCP</p>
    <p>Binder [Boccassi et. al, 2013] MPTCP with gateway-to-gateway VPN model Aggregate paths in community network</p>
    <p>MPUDP:</p>
    <p>MP-MOSH [Boutier and Chroboczeck, 2015] Multiple UDP paths established for Mobile Shell (MOSH) application Not a general solution since application specific</p>
  </div>
  <div class="page">
    <p>How MPTCP Establishes Connection</p>
    <p>Client Server</p>
    <p>SYNMP CAPABLE</p>
    <p>SYN/ACKMP CAPABLE</p>
    <p>Kc</p>
    <p>ACK</p>
    <p>Ks</p>
    <p>Kc , Ks</p>
    <p>SYNMP JOIN</p>
    <p>SYN/ACKMP JOIN</p>
    <p>Tokens</p>
    <p>ACKMP JOIN</p>
    <p>HMA Cs</p>
    <p>ACK</p>
    <p>HMACc</p>
  </div>
  <div class="page">
    <p>MPTCP Path Managers</p>
    <p>Ndiffports:</p>
    <p>MPTCP Client MPTCP Server Port 1</p>
    <p>Port 3</p>
    <p>Port 2</p>
    <p>Fullmesh:</p>
    <p>MPTCP Client MPTCP Server</p>
    <p>Wi-Fi</p>
    <p>LTE</p>
  </div>
  <div class="page">
    <p>Design Testbed</p>
    <p>Physical Linux machines operating Ubuntu 14.04</p>
    <p>MPTCP v0.90 on VPN Client and VPN Server</p>
    <p>OpenVPN 2.3.12</p>
    <p>VPN Server</p>
    <p>Primary Link (10 Mbps)</p>
    <p>Secondary Link (10 Mbps)</p>
    <p>VPN/Web Client</p>
    <p>Web Server</p>
    <p>(1 Gbps)</p>
  </div>
  <div class="page">
    <p>Traffic Loss Models</p>
    <p>Uniform: basic loss model in Linux traffic controller (tc)</p>
    <p>Gilbert-Elliot (GE):</p>
    <p>Gap 1  k</p>
    <p>Burst 1  h</p>
    <p>r</p>
    <p>p</p>
  </div>
  <div class="page">
    <p>Design Metrics General:</p>
    <p>Goodput primary measure of performance</p>
    <p>Link Speeds:</p>
    <p>VPN Client  VPN Server: 10 Mbps VPN Server  Web Server: 1 Gbps</p>
    <p>RTTs: 1, 10, 20, 40, 60, 80, 100ms</p>
    <p>No VPN encryption or compression to facilitate data analysis</p>
    <p>Asymmetric RTT Ratios:</p>
    <p>RTT Ratio Primary Path Secondary Path 1:1 20ms 20ms</p>
  </div>
  <div class="page">
    <p>MPTCP: Symmetric Links</p>
    <p>Fullmesh and Ndiffports show improvements over single path TCP</p>
    <p>Performance under 1% packet loss:</p>
    <p>(a) Uniform loss probability (b) GE bursty loss model</p>
  </div>
  <div class="page">
    <p>MPTCP: Assymetric Links</p>
    <p>Multiple links unlikely to have same delay rates</p>
    <p>MPTCP handles larger ratios of path asymmetry without significant performance loss</p>
  </div>
  <div class="page">
    <p>MPUDP Design</p>
    <p>Leverage existing MPTCP Linux kernel</p>
    <p>Used Linux Kernel Modules (LKM) to facilitate testing</p>
    <p>Allowed quickly changing MPUDP parameters without need to re-compile kernel Changed code in udp.c kernel file to allow LKM to change operation of UDP protocol</p>
    <p>Probabilistic shift of traffic across primary and secondary links (50/50)</p>
    <p>Keep simplistic design of UDP</p>
    <p>Overwrite incoming IP to match primary VPN link IP if over secondary link</p>
  </div>
  <div class="page">
    <p>MPUDP Evaluation: Initial Results</p>
    <p>Test under 0 simulated packet losses</p>
    <p>MPUDP maintains high goodput values as MPTCP begins to suffer</p>
  </div>
  <div class="page">
    <p>Detailed Look at MPTCP vs. MPUDP Download</p>
    <p>Evaluated the first 0.3 seconds of download at 40ms RTT</p>
    <p>MPTCP slower to grab available bandwidth</p>
    <p>(c) MPTCP (d) MPUDP</p>
  </div>
  <div class="page">
    <p>MPUDP Evaluation: Symmetric Links</p>
    <p>MPUDP still shows improvements</p>
    <p>(e) 1% Packet Loss (Uniform) (f) 3% Packet Loss (GE)</p>
  </div>
  <div class="page">
    <p>MPUDP Evaluation: Asymmetric Links</p>
    <p>When ratio low, MPUDP performs slightly better than MPTCP</p>
  </div>
  <div class="page">
    <p>Effects of Changing MPUDP Split Settings</p>
    <p>(g) 75/25 Split (h) 90/10 Split</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Key Take-Aways:</p>
    <p>MPTCP can provide increased performance when used for VPN tunnels</p>
    <p>MPUDP tunnels are capable of out-performing MPTCP tunnels</p>
    <p>Future Work</p>
    <p>Provide mechanism for MPUDP to track link characteristics</p>
    <p>Expand analysis to end-to-end UDP traffic</p>
    <p>Evaluate the possible benefits of adding a FEC mechanism to MPUDP</p>
  </div>
</Presentation>
