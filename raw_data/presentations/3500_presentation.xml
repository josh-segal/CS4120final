<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Freezing the Web: A Study of ReDoS Vulnerabilities in JavaScript-based Web Servers</p>
    <p>Cristian-Alexandru Staicu Michael Pradel</p>
    <p>TU Darmstadt</p>
    <p>www.software-lab.org</p>
  </div>
  <div class="page">
    <p>Regular Expression Denial of Service (ReDoS)</p>
    <p>input: Lorem ipsum</p>
    <p>input.match(regexp);</p>
    <p>processing time: O(1)</p>
    <p>inp ut:</p>
    <p>ao As,</p>
    <p>x 1 000</p>
    <p>pro ces</p>
    <p>sin g t</p>
    <p>im e:</p>
    <p>O(n x ),x</p>
    <p>&gt; 1</p>
  </div>
  <div class="page">
    <p>Regular Expression Denial of Service (ReDoS)</p>
    <p>input: Lorem ipsum</p>
    <p>input.match(regexp);</p>
    <p>processing time: O(1)</p>
    <p>inp ut:</p>
    <p>ao As,</p>
    <p>x 1 000</p>
    <p>pro ces</p>
    <p>sin g t</p>
    <p>im e:</p>
    <p>O(n x ),x</p>
    <p>&gt; 1</p>
  </div>
  <div class="page">
    <p>Regular Expression Denial of Service (ReDoS)</p>
    <p>input: Lorem ipsum</p>
    <p>input.match(regexp);</p>
    <p>processing time: O(1)</p>
    <p>inp ut:</p>
    <p>ao As,</p>
    <p>x 1 000</p>
    <p>pro ces</p>
    <p>sin g t</p>
    <p>im e:</p>
    <p>O(n x ),x</p>
    <p>&gt; 1</p>
  </div>
  <div class="page">
    <p>Regular Expression Denial of Service (ReDoS)</p>
    <p>input: Lorem ipsum</p>
    <p>input.match(regexp);</p>
    <p>processing time: O(1)</p>
    <p>inp ut:</p>
    <p>ao As,</p>
    <p>x 1 000</p>
    <p>pro ces</p>
    <p>sin g t</p>
    <p>im e:</p>
    <p>O(n x ),x</p>
    <p>&gt; 1</p>
  </div>
  <div class="page">
    <p>Regular Expression Denial of Service (ReDoS)</p>
    <p>input: Lorem ipsum</p>
    <p>input.match(regexp);</p>
    <p>processing time: O(1)</p>
    <p>inp ut:</p>
    <p>ao As,</p>
    <p>x 1 000</p>
    <p>pro ces</p>
    <p>sin g t</p>
    <p>im e:</p>
    <p>O(n x ),x</p>
    <p>&gt; 1</p>
  </div>
  <div class="page">
    <p>Regular Expression Denial of Service (ReDoS)</p>
    <p>input: Lorem ipsum</p>
    <p>input.match(regexp);</p>
    <p>processing time: O(1)</p>
    <p>inp ut:</p>
    <p>ao As,</p>
    <p>x 1 000</p>
    <p>pro ces</p>
    <p>sin g t</p>
    <p>im e:</p>
    <p>O(n x ),x</p>
    <p>&gt; 1</p>
  </div>
  <div class="page">
    <p>Regular Expression Denial of Service (ReDoS)</p>
    <p>input: Lorem ipsum</p>
    <p>input.match(regexp);</p>
    <p>processing time: O(1)</p>
    <p>inp ut:</p>
    <p>ao As,</p>
    <p>x 1 000</p>
    <p>pro ces</p>
    <p>sin g t</p>
    <p>im e:</p>
    <p>O(n x ),x</p>
    <p>&gt; 1</p>
  </div>
  <div class="page">
    <p>This Talk</p>
    <p>ReDoS affects libraries we identify 25 vulnerabilities in popular npm modules</p>
    <p>ReDoS affects websites hundreds of live websites are vulnerable</p>
    <p>Novel methodology library vulnerability  website vulnerability</p>
  </div>
  <div class="page">
    <p>This Talk</p>
    <p>ReDoS affects libraries we identify 25 vulnerabilities in popular npm modules</p>
    <p>ReDoS affects websites hundreds of live websites are vulnerable</p>
    <p>Novel methodology library vulnerability  website vulnerability</p>
  </div>
  <div class="page">
    <p>This Talk</p>
    <p>ReDoS affects libraries we identify 25 vulnerabilities in popular npm modules</p>
    <p>ReDoS affects websites hundreds of live websites are vulnerable</p>
    <p>Novel methodology library vulnerability  website vulnerability</p>
  </div>
  <div class="page">
    <p>Backtracking-based Matching</p>
    <p>var regEx = /^a*a*b$/;</p>
    <p>start 3 4 5 6</p>
    <p>accept</p>
    <p>a</p>
    <p>b</p>
    <p>a</p>
  </div>
  <div class="page">
    <p>Backtracking-based Matching</p>
    <p>var regEx = /^a*a*b$/;</p>
    <p>start 3 4 5 6</p>
    <p>accept</p>
    <p>a</p>
    <p>b</p>
    <p>a</p>
  </div>
  <div class="page">
    <p>Backtracking-based Matching</p>
    <p>var regEx = /^a*a*b$/;</p>
    <p>start 3 4 5 6</p>
    <p>accept</p>
    <p>a</p>
    <p>b</p>
    <p>a</p>
    <p>input: ab</p>
  </div>
  <div class="page">
    <p>Backtracking-based Matching</p>
    <p>var regEx = /^a*a*b$/;</p>
    <p>start 3 4 5 6</p>
    <p>accept</p>
    <p>a</p>
    <p>b</p>
    <p>a</p>
    <p>input: aab</p>
  </div>
  <div class="page">
    <p>Backtracking-based Matching</p>
    <p>var regEx = /^a*a*b$/;</p>
    <p>start 3 4 5 6</p>
    <p>accept</p>
    <p>a</p>
    <p>b</p>
    <p>a</p>
    <p>input: aab</p>
  </div>
  <div class="page">
    <p>Backtracking-based Matching</p>
    <p>var regEx = /^a*a*b$/;</p>
    <p>start 3 4 5 6</p>
    <p>accept</p>
    <p>a</p>
    <p>b</p>
    <p>a</p>
    <p>input: aaaaaaaaaaaaaaaaaaaa</p>
  </div>
  <div class="page">
    <p>Backtracking-based Matching</p>
    <p>var regEx = /^a*a*b$/;</p>
    <p>start 3 4 5 6</p>
    <p>accept</p>
    <p>a</p>
    <p>b</p>
    <p>a</p>
    <p>input: aaaaaaaaaaaaaaaaaaaa</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>Npm modules (Phase 1) ReDoS analysis</p>
    <p>of libraries</p>
    <p>Exploits creation</p>
    <p>Module level vulnerabilities</p>
    <p>Usage scenarios (Phase 2)</p>
    <p>List of websites using Node.js</p>
    <p>ReDoS analysis of websites</p>
    <p>Payloads using HTTP requests</p>
    <p>List of vulnerable websites</p>
    <p>(Phase 3)</p>
    <p>Local machines</p>
    <p>Live websites</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>Npm modules (Phase 1) ReDoS analysis</p>
    <p>of libraries</p>
    <p>Exploits creation</p>
    <p>Module level vulnerabilities</p>
    <p>Usage scenarios (Phase 2)</p>
    <p>List of websites using Node.js</p>
    <p>ReDoS analysis of websites</p>
    <p>Payloads using HTTP requests</p>
    <p>List of vulnerable websites</p>
    <p>(Phase 3)</p>
    <p>Local machines</p>
    <p>Live websites</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>Npm modules (Phase 1) ReDoS analysis</p>
    <p>of libraries</p>
    <p>Exploits creation</p>
    <p>Module level vulnerabilities</p>
    <p>Usage scenarios (Phase 2)</p>
    <p>List of websites using Node.js</p>
    <p>ReDoS analysis of websites</p>
    <p>Payloads using HTTP requests</p>
    <p>List of vulnerable websites</p>
    <p>(Phase 3)</p>
    <p>Local machines</p>
    <p>Live websites</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>Npm modules (Phase 1) ReDoS analysis</p>
    <p>of libraries</p>
    <p>Exploits creation</p>
    <p>Module level vulnerabilities</p>
    <p>Usage scenarios (Phase 2)</p>
    <p>List of websites using Node.js</p>
    <p>ReDoS analysis of websites</p>
    <p>Payloads using HTTP requests</p>
    <p>List of vulnerable websites</p>
    <p>(Phase 3)</p>
    <p>Local machines</p>
    <p>Live websites</p>
  </div>
  <div class="page">
    <p>Setup</p>
    <p>measure in single instance setup</p>
    <p>analyze 2,800 websites from Top 1 million</p>
    <p>manually analyze popular packages</p>
    <p>fifth most-dependent upon npm package</p>
  </div>
  <div class="page">
    <p>Node.js Particularities</p>
    <p>Event Loop (JS code)</p>
    <p>e1</p>
    <p>e2</p>
    <p>e3</p>
    <p>...</p>
    <p>file system</p>
    <p>network</p>
    <p>process</p>
    <p>...</p>
    <p>Events Workers</p>
    <p>bloc king</p>
    <p>I/O</p>
    <p>callback</p>
    <p>Regex.match()</p>
  </div>
  <div class="page">
    <p>Node.js Particularities</p>
    <p>Event Loop (JS code)</p>
    <p>e1</p>
    <p>e2</p>
    <p>e3</p>
    <p>...</p>
    <p>file system</p>
    <p>network</p>
    <p>process</p>
    <p>...</p>
    <p>Events Workers</p>
    <p>bloc king</p>
    <p>I/O</p>
    <p>callback</p>
    <p>Regex.match()</p>
  </div>
  <div class="page">
    <p>Node.js Particularities (2)</p>
    <p>Node.js application</p>
    <p>strings utility</p>
    <p>templates engine</p>
    <p>DB access</p>
    <p>headers parser</p>
    <p>vulnerable module</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
  </div>
  <div class="page">
    <p>Ethical Considerations</p>
    <p>Few payloads 80 requests in total</p>
    <p>Iterative probing most websites use redundancy</p>
    <p>Safety mechanism stop after timeout or error</p>
    <p>Vulnerabilities disclosure the majority of them have been fixed</p>
  </div>
  <div class="page">
    <p>Ethical Considerations</p>
    <p>Few payloads 80 requests in total</p>
    <p>Iterative probing most websites use redundancy</p>
    <p>Safety mechanism stop after timeout or error</p>
    <p>Vulnerabilities disclosure the majority of them have been fixed</p>
  </div>
  <div class="page">
    <p>Ethical Considerations</p>
    <p>Few payloads 80 requests in total</p>
    <p>Iterative probing most websites use redundancy</p>
    <p>Safety mechanism stop after timeout or error</p>
    <p>Vulnerabilities disclosure the majority of them have been fixed</p>
  </div>
  <div class="page">
    <p>Ethical Considerations</p>
    <p>Few payloads 80 requests in total</p>
    <p>Iterative probing most websites use redundancy</p>
    <p>Safety mechanism stop after timeout or error</p>
    <p>Vulnerabilities disclosure the majority of them have been fixed</p>
  </div>
  <div class="page">
    <p>Ethical Considerations</p>
    <p>Few payloads 80 requests in total</p>
    <p>Iterative probing most websites use redundancy</p>
    <p>Safety mechanism stop after timeout or error</p>
    <p>Vulnerabilities disclosure the majority of them have been fixed</p>
  </div>
  <div class="page">
    <p>Phase 1: Npm Analysis</p>
    <p>Criterion for vulnerable libraries</p>
    <p>We consider a module to be vulnerable iff we find an input that</p>
    <p>is at most 80,000 characters long,</p>
    <p>whose matching time takes more than 5 seconds.</p>
    <p>Manual analysis of regular expressions and information flow</p>
    <p>Manually written exploits</p>
  </div>
  <div class="page">
    <p>Phase 1: Npm Analysis</p>
    <p>Criterion for vulnerable libraries</p>
    <p>We consider a module to be vulnerable iff we find an input that</p>
    <p>is at most 80,000 characters long,</p>
    <p>whose matching time takes more than 5 seconds.</p>
    <p>Manual analysis of regular expressions and information flow</p>
    <p>Manually written exploits</p>
  </div>
  <div class="page">
    <p>Phase 1: Npm Analysis</p>
    <p>Criterion for vulnerable libraries</p>
    <p>We consider a module to be vulnerable iff we find an input that</p>
    <p>is at most 80,000 characters long,</p>
    <p>whose matching time takes more than 5 seconds.</p>
    <p>Manual analysis of regular expressions and information flow</p>
    <p>Manually written exploits</p>
  </div>
  <div class="page">
    <p>Phase 1: Vulnerable Regular Expressions</p>
    <p>One bug bounty</p>
    <p>Example 1: content</p>
    <p>/^([^\/]+\/[^\s;]+) (?:(?:\s*;\s*boundary =(?:&quot;([^&quot;</p>
    <p>]+)&quot;|([^;&quot;]+)))|(?:\s*;\s*[^=]+=(?:(?:&quot;(?:[^&quot;</p>
    <p>]+)&quot;)|(?:[^;&quot;]+))))*$/i</p>
    <p>Example 2: ua-parser-js</p>
    <p>/ip[honead ]+(.* os\s([\w]+)*\ slike\smac |;\ sopera)/</p>
  </div>
  <div class="page">
    <p>Phase 1: Vulnerable Regular Expressions</p>
    <p>One bug bounty</p>
    <p>Example 1: content</p>
    <p>/^([^\/]+\/[^\s;]+) (?:(?:\s*;\s*boundary =(?:&quot;([^&quot;</p>
    <p>]+)&quot;|([^;&quot;]+)))|(?:\s*;\s*[^=]+=(?:(?:&quot;(?:[^&quot;</p>
    <p>]+)&quot;)|(?:[^;&quot;]+))))*$/i</p>
    <p>Example 2: ua-parser-js</p>
    <p>/ip[honead ]+(.* os\s([\w]+)*\ slike\smac |;\ sopera)/</p>
  </div>
  <div class="page">
    <p>Phase 1: Vulnerable Regular Expressions</p>
    <p>One bug bounty</p>
    <p>Example 1: content</p>
    <p>/^([^\/]+\/[^\s;]+) (?:(?:\s*;\s*boundary =(?:&quot;([^&quot;</p>
    <p>]+)&quot;|([^;&quot;]+)))|(?:\s*;\s*[^=]+=(?:(?:&quot;(?:[^&quot;</p>
    <p>]+)&quot;)|(?:[^;&quot;]+))))*$/i</p>
    <p>Example 2: ua-parser-js</p>
    <p>/ip[honead ]+(.* os\s([\w]+)*\ slike\smac |;\ sopera)/</p>
  </div>
  <div class="page">
    <p>Phase 1: Vulnerable Regular Expressions</p>
    <p>One bug bounty</p>
    <p>Example 1: content</p>
    <p>/^([^\/]+\/[^\s;]+) (?:(?:\s*;\s*boundary =(?:&quot;([^&quot;</p>
    <p>]+)&quot;|([^;&quot;]+)))|(?:\s*;\s*[^=]+=(?:(?:&quot;(?:[^&quot;</p>
    <p>]+)&quot;)|(?:[^;&quot;]+))))*$/i</p>
    <p>Example 2: ua-parser-js</p>
    <p>/ip[honead ]+(.* os\s([\w]+)*\ slike\smac |;\ sopera)/</p>
  </div>
  <div class="page">
    <p>Phase 1: Vulnerable Regular Expressions</p>
    <p>One bug bounty</p>
    <p>Example 1: content</p>
    <p>/^([^\/]+\/[^\s;]+) (?:(?:\s*;\s*boundary =(?:&quot;([^&quot;</p>
    <p>]+)&quot;|([^;&quot;]+)))|(?:\s*;\s*[^=]+=(?:(?:&quot;(?:[^&quot;</p>
    <p>]+)&quot;)|(?:[^;&quot;]+))))*$/i</p>
    <p>Example 2: ua-parser-js</p>
    <p>/ip[honead ]+(.* os\s([\w]+)*\ slike\smac |;\ sopera)/</p>
  </div>
  <div class="page">
    <p>Phase 2: HTTP-level Payload Creation</p>
    <p>Local Node.js installation</p>
    <p>For each payload, create a usage scenario</p>
    <p>var MobileDetect = require(&quot;mobile -detect&quot;);</p>
    <p>var headers = req.headers[&quot;user -agent&quot;];</p>
    <p>var md = new MobileDetect(headers);</p>
    <p>md.phone();</p>
    <p>For each scenario, create HTTP level payloads</p>
    <p>In total 8 payloads corresponding to 8 popular modules</p>
  </div>
  <div class="page">
    <p>Phase 2: HTTP-level Payload Creation</p>
    <p>Local Node.js installation</p>
    <p>For each payload, create a usage scenario</p>
    <p>var MobileDetect = require(&quot;mobile -detect&quot;);</p>
    <p>var headers = req.headers[&quot;user -agent&quot;];</p>
    <p>var md = new MobileDetect(headers);</p>
    <p>md.phone();</p>
    <p>For each scenario, create HTTP level payloads</p>
    <p>In total 8 payloads corresponding to 8 popular modules</p>
  </div>
  <div class="page">
    <p>Phase 2: HTTP-level Payload Creation</p>
    <p>Local Node.js installation</p>
    <p>For each payload, create a usage scenario</p>
    <p>var MobileDetect = require(&quot;mobile -detect&quot;);</p>
    <p>var headers = req.headers[&quot;user -agent&quot;];</p>
    <p>var md = new MobileDetect(headers);</p>
    <p>md.phone();</p>
    <p>For each scenario, create HTTP level payloads</p>
    <p>In total 8 payloads corresponding to 8 popular modules</p>
  </div>
  <div class="page">
    <p>Phase 2: HTTP-level Payload Creation</p>
    <p>Local Node.js installation</p>
    <p>For each payload, create a usage scenario</p>
    <p>var MobileDetect = require(&quot;mobile -detect&quot;);</p>
    <p>var headers = req.headers[&quot;user -agent&quot;];</p>
    <p>var md = new MobileDetect(headers);</p>
    <p>md.phone();</p>
    <p>For each scenario, create HTTP level payloads</p>
    <p>In total 8 payloads corresponding to 8 popular modules</p>
  </div>
  <div class="page">
    <p>Phase 2: HTTP-level Payload Creation</p>
    <p>Local Node.js installation</p>
    <p>For each payload, create a usage scenario</p>
    <p>var MobileDetect = require(&quot;mobile -detect&quot;);</p>
    <p>var headers = req.headers[&quot;user -agent&quot;];</p>
    <p>var md = new MobileDetect(headers);</p>
    <p>md.phone();</p>
    <p>For each scenario, create HTTP level payloads</p>
    <p>In total 8 payloads corresponding to 8 popular modules</p>
  </div>
  <div class="page">
    <p>Phase 2: Input Dependency</p>
    <p>M a tc</p>
    <p>h in</p>
    <p>g t</p>
    <p>im e (</p>
    <p>m s)</p>
    <p>Input size (number of characters)</p>
    <p>ua-parser-js</p>
  </div>
  <div class="page">
    <p>Phase 2: Input Dependency</p>
    <p>M a tc</p>
    <p>h in</p>
    <p>g t</p>
    <p>im e (</p>
    <p>m s)</p>
    <p>Input size (number of characters)</p>
    <p>ua-parser-js</p>
    <p>useragent</p>
  </div>
  <div class="page">
    <p>Phase 2: Input Dependency</p>
    <p>M a tc</p>
    <p>h in</p>
    <p>g t</p>
    <p>im e (</p>
    <p>m s)</p>
    <p>Input size (number of characters)</p>
    <p>charset</p>
    <p>fresh</p>
    <p>forwarded</p>
    <p>content</p>
    <p>mobile-detect</p>
    <p>platform</p>
    <p>ua-parser-js</p>
    <p>useragent</p>
  </div>
  <div class="page">
    <p>Phase 3: Websites Analysis</p>
    <p>P1</p>
    <p>P2</p>
    <p>P3</p>
    <p>P4</p>
    <p>P5</p>
  </div>
  <div class="page">
    <p>Phase 3: Websites Analysis</p>
    <p>P1</p>
    <p>P2</p>
    <p>P3</p>
    <p>P4</p>
    <p>P5</p>
  </div>
  <div class="page">
    <p>Phase 3: Websites Analysis</p>
    <p>P1</p>
    <p>P2</p>
    <p>P3</p>
    <p>P4</p>
    <p>P5</p>
  </div>
  <div class="page">
    <p>Phase 3: Websites Analysis</p>
    <p>P1</p>
    <p>P2</p>
    <p>P3</p>
    <p>P4</p>
    <p>P5</p>
    <p>Criterion for vulnerable websites</p>
    <p>We consider a website to be vulnerable iff:</p>
    <p>statistically significant difference between the response times to random and crafted inputs,</p>
    <p>this difference increases when the input size increases.</p>
  </div>
  <div class="page">
    <p>Phase 3: Response Time of a Non-Vulnerable Website</p>
    <p>P 1</p>
    <p>P 2</p>
    <p>P 3</p>
    <p>P 4</p>
    <p>P 5</p>
    <p>R e sp</p>
    <p>o n se</p>
    <p>t im</p>
    <p>e (</p>
    <p>m s)</p>
    <p>Payload number (increasing in size)</p>
    <p>Random Crafted</p>
  </div>
  <div class="page">
    <p>Phase 3: Response Time of a Vulnerable Website</p>
    <p>P 1</p>
    <p>P 2</p>
    <p>P 3</p>
    <p>P 4</p>
    <p>P 5</p>
    <p>R e sp</p>
    <p>o n se</p>
    <p>t im</p>
    <p>e (</p>
    <p>m s)</p>
    <p>Payload number (increasing in size)</p>
    <p>Random Crafted</p>
  </div>
  <div class="page">
    <p>Phase 3: Number of Vulnerable Websites</p>
    <p>Exploit Number of sites affected</p>
    <p>fresh 241 forwarded 99</p>
    <p>ua-parser-js 41 useragent 16</p>
    <p>mobile-detect 9 platform 8 charset 3 content 0</p>
    <p>In total: 339 (11%) websites are vulnerable</p>
  </div>
  <div class="page">
    <p>Defenses</p>
    <p>N u m</p>
    <p>b e r</p>
    <p>o f w</p>
    <p>e b si</p>
    <p>te s</p>
    <p>Accepted header size</p>
    <p>charset</p>
  </div>
  <div class="page">
    <p>Defenses</p>
    <p>N u m</p>
    <p>b e r</p>
    <p>o f w</p>
    <p>e b si</p>
    <p>te s</p>
    <p>Accepted header size</p>
    <p>fresh</p>
    <p>forwarded</p>
    <p>ua-parser-js</p>
    <p>useragent</p>
    <p>mobile-detect</p>
    <p>platform</p>
    <p>charset</p>
    <p>content</p>
  </div>
  <div class="page">
    <p>Defenses (2)</p>
    <p>Linear time matching algorithms / hybrid Rust programming language</p>
    <p>Timeout on matching regular expressions [Davis et al., USENIX Security, 2018], .NET framework</p>
    <p>Tooling support for identifying ReDoS Java programming language [Wustholz et al., TACAS, 2017]</p>
  </div>
  <div class="page">
    <p>Defenses (2)</p>
    <p>Linear time matching algorithms / hybrid Rust programming language</p>
    <p>Timeout on matching regular expressions [Davis et al., USENIX Security, 2018], .NET framework</p>
    <p>Tooling support for identifying ReDoS Java programming language [Wustholz et al., TACAS, 2017]</p>
  </div>
  <div class="page">
    <p>Defenses (2)</p>
    <p>Linear time matching algorithms / hybrid Rust programming language</p>
    <p>Timeout on matching regular expressions [Davis et al., USENIX Security, 2018], .NET framework</p>
    <p>Tooling support for identifying ReDoS Java programming language [Wustholz et al., TACAS, 2017]</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>ReDoS is a widespread problem in npm modules,</p>
    <p>Npm modules vulnerabilities can be exploited in live websites</p>
    <p>ReDoS vulnerabilities can be used to fingerprint web servers</p>
    <p>More tools are needed to mitigate the ReDoS risk</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>ReDoS is a widespread problem in npm modules,</p>
    <p>Npm modules vulnerabilities can be exploited in live websites</p>
    <p>ReDoS vulnerabilities can be used to fingerprint web servers</p>
    <p>More tools are needed to mitigate the ReDoS risk</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>ReDoS is a widespread problem in npm modules,</p>
    <p>Npm modules vulnerabilities can be exploited in live websites</p>
    <p>ReDoS vulnerabilities can be used to fingerprint web servers</p>
    <p>More tools are needed to mitigate the ReDoS risk</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>ReDoS is a widespread problem in npm modules,</p>
    <p>Npm modules vulnerabilities can be exploited in live websites</p>
    <p>ReDoS vulnerabilities can be used to fingerprint web servers</p>
    <p>More tools are needed to mitigate the ReDoS risk</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>ReDoS is a widespread problem in npm modules,</p>
    <p>Npm modules vulnerabilities can be exploited in live websites</p>
    <p>ReDoS vulnerabilities can be used to fingerprint web servers</p>
    <p>More tools are needed to mitigate the ReDoS risk</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>ReDoS is a widespread problem in npm modules,</p>
    <p>Npm modules vulnerabilities can be exploited in live websites</p>
    <p>ReDoS vulnerabilities can be used to fingerprint web servers</p>
    <p>More tools are needed to mitigate the ReDoS risk</p>
  </div>
  <div class="page">
    <p>Is Response Time a Good Estimator?</p>
    <p>R e sp</p>
    <p>o n se</p>
    <p>t im</p>
    <p>e (</p>
    <p>m s)</p>
    <p>Matching time (ms)</p>
  </div>
  <div class="page">
    <p>Popularity of Vulnerable Websites</p>
    <p>N u m</p>
    <p>b e r</p>
    <p>o f v u ln</p>
    <p>e ra</p>
    <p>b le</p>
    <p>w e b si</p>
    <p>te s</p>
    <p>Popularity ranking</p>
  </div>
  <div class="page">
    <p>Dimensioning Payloads</p>
    <p>Module P1 P2 P3 P4 P5 100ms 200ms 500ms 1s 2s</p>
    <p>fresh 12,000 17,000 27,000 37,500 53,500 forwarded 12,000 17,000 26,500 38,000 53,500 useragent 500 650 925 1,150 1,450</p>
    <p>ua-parser-js 38 39 40 41 42 mobile-detect 10,500 15,500 25,000 36,500 50,500</p>
    <p>platform 7,500 11,000 17,500 25,000 34,500 charset 10,500 15,500 24,000 34,000 48,000 content 8,000 11,000 18,000 25,500 35,500</p>
  </div>
</Presentation>
