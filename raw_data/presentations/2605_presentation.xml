<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Wei Bai, Li Chen, Kai Chen, Dongsu Han (KAIST), Chen Tian (NJU), Hao Wang</p>
    <p>Sing Group @ Hong Kong University of Science and Technology</p>
    <p>Information-Agnostic Flow Scheduling for Commodity Data Centers</p>
  </div>
  <div class="page">
    <p>Data Center Transport</p>
    <p>Cloud applications</p>
    <p>Desire low latency for short messages</p>
    <p>Goal: Minimize flow completion time (FCT)</p>
    <p>Many flow scheduling proposals</p>
  </div>
  <div class="page">
    <p>The State-of-the-art Solutions</p>
    <p>PDQ [SIGCOMM12]</p>
    <p>pFabric [SIGCOMM13]</p>
    <p>PASE [SIGCOMM14]</p>
    <p>All assume prior knowledge of flow size information to approximate ideal preemptive Shortest Job First (SJF) with customized network elements</p>
  </div>
  <div class="page">
    <p>The State-of-the-art Solutions</p>
    <p>PDQ [SIGCOMM12]</p>
    <p>pFabric [SIGCOMM13]</p>
    <p>PASE [SIGCOMM14]</p>
    <p>All assume prior knowledge of flow size information to approximate ideal preemptive Shortest Job First (SJF) with customized network elements</p>
    <p>Not feasible for some applications 4</p>
  </div>
  <div class="page">
    <p>The State-of-the-art Solutions</p>
    <p>PDQ [SIGCOMM12]</p>
    <p>pFabric [SIGCOMM13]</p>
    <p>PASE [SIGCOMM14]</p>
    <p>All assume prior knowledge of flow size information to approximate ideal preemptive Shortest Job First (SJF) with customized network elements</p>
    <p>Hard to deploy in practice 5</p>
  </div>
  <div class="page">
    <p>Question</p>
    <p>Without prior knowledge of flow size information, how to minimize FCT in commodity data centers?</p>
  </div>
  <div class="page">
    <p>Design Goal 1</p>
    <p>Without prior knowledge of flow size information, how to minimize FCT in commodity data centers?</p>
    <p>Information-agnostic: not assume a priori knowledge of flow size information available from the applications</p>
  </div>
  <div class="page">
    <p>Design Goal 2</p>
    <p>Without prior knowledge of flow size information, how to minimize FCT in commodity data centers?</p>
    <p>FCT minimization: minimize average and tail FCTs of short flows &amp; not adversely affect FCTs of large flows</p>
  </div>
  <div class="page">
    <p>Design Goal 3</p>
    <p>Without prior knowledge of flow size information, how to minimize FCT in commodity data centers?</p>
    <p>Readily-deployable: work with existing commodity switches &amp; be compatible with legacy network stacks</p>
  </div>
  <div class="page">
    <p>Question</p>
    <p>Without prior knowledge of flow size information, how to minimize FCT in commodity data centers?</p>
    <p>Our answer: PIAS</p>
  </div>
  <div class="page">
    <p>PIASS DESIGN</p>
  </div>
  <div class="page">
    <p>Design Rationale</p>
    <p>PIAS performs Multi-Level Feedback Queue (MLFQ) to emulate Shortest Job First</p>
    <p>Priority 1</p>
    <p>Priority 2</p>
    <p>Priority K</p>
    <p>High</p>
    <p>Low 12</p>
  </div>
  <div class="page">
    <p>Design Rationale</p>
    <p>PIAS performs Multi-Level Feedback Queue (MLFQ) to emulate Shortest Job First</p>
    <p>Priority 1</p>
    <p>Priority 2</p>
    <p>Priority K</p>
  </div>
  <div class="page">
    <p>Simple Example Illustrating PIAS</p>
    <p>Congestion</p>
  </div>
  <div class="page">
    <p>Simple Example Illustrating PIAS</p>
    <p>Priority 1</p>
    <p>Priority 2</p>
    <p>Priority 4</p>
    <p>Flow 1 with 10 packets and flow 2 with 2 packets arrive</p>
    <p>Priority 3</p>
  </div>
  <div class="page">
    <p>Simple Example Illustrating PIAS</p>
    <p>Priority 1</p>
    <p>Priority 2</p>
    <p>Priority 4</p>
    <p>Flow 1 and 2 transmit simultaneously</p>
    <p>Priority 3</p>
  </div>
  <div class="page">
    <p>Simple Example Illustrating PIAS</p>
    <p>Priority 1</p>
    <p>Priority 2</p>
    <p>Priority 4</p>
    <p>Flow 2 finishes while flow 1 is demoted to priority 2</p>
    <p>Priority 3</p>
  </div>
  <div class="page">
    <p>Simple Example Illustrating PIAS</p>
    <p>Priority 1</p>
    <p>Priority 2</p>
    <p>Priority 4</p>
    <p>Flow 3 with 2 packets arrives</p>
    <p>Priority 3</p>
  </div>
  <div class="page">
    <p>Simple Example Illustrating PIAS</p>
    <p>Priority 1</p>
    <p>Priority 2</p>
    <p>Priority 4</p>
    <p>Flow 3 and 1 transmit simultaneously</p>
    <p>Priority 3</p>
  </div>
  <div class="page">
    <p>Simple Example Illustrating PIAS</p>
    <p>Priority 1</p>
    <p>Priority 2</p>
    <p>Priority 4</p>
    <p>Flow 3 finishes while flow 1 is demoted to priority 3</p>
    <p>Priority 3</p>
  </div>
  <div class="page">
    <p>Simple Example Illustrating PIAS</p>
    <p>Priority 1</p>
    <p>Priority 2</p>
    <p>Priority 4</p>
    <p>Flow 4 with 2 packets arrives</p>
    <p>Priority 3</p>
  </div>
  <div class="page">
    <p>Simple Example Illustrating PIAS</p>
    <p>Priority 1</p>
    <p>Priority 2</p>
    <p>Priority 4</p>
    <p>Flow 4 and 1 transmit simultaneously</p>
    <p>Priority 3</p>
  </div>
  <div class="page">
    <p>Simple Example Illustrating PIAS</p>
    <p>Priority 1</p>
    <p>Priority 2</p>
    <p>Priority 4</p>
    <p>Priority 3</p>
    <p>Flow 4 finishes while flow 1 is demoted to priority 4</p>
  </div>
  <div class="page">
    <p>Simple Example Illustrating PIAS</p>
    <p>Priority 1</p>
    <p>Priority 2</p>
    <p>Priority 4</p>
    <p>Priority 3</p>
    <p>Eventually, flow 1 finishes in priority 4</p>
    <p>With MLFQ, PIAS can emulate Shortest Job First without prior knowledge of flow size information</p>
  </div>
  <div class="page">
    <p>How to implement?</p>
    <p>Priority 1</p>
    <p>Priority 2</p>
    <p>Priority K</p>
    <p>Strict priority queueing on switches</p>
    <p>Packet tagging as a shim layer at end hosts</p>
    <p>priorities:  1</p>
    <p>1 demotion thresholds:  (1      1)</p>
    <p>The threshold to demote priority from 1 to  is 1</p>
  </div>
  <div class="page">
    <p>How to implement?</p>
    <p>Priority 1</p>
    <p>Priority 2</p>
    <p>Priority K</p>
    <p>Strict priority queueing on switches</p>
    <p>Packet tagging as a shim layer at end hosts</p>
  </div>
  <div class="page">
    <p>How to implement?</p>
    <p>Priority 1</p>
    <p>Priority 2</p>
    <p>Priority K</p>
    <p>Strict priority queueing on switches</p>
    <p>Packet tagging as a shim layer at end hosts</p>
  </div>
  <div class="page">
    <p>How to implement?</p>
    <p>Priority 1</p>
    <p>Priority 2</p>
    <p>Priority K</p>
    <p>Strict priority queueing on switches</p>
    <p>Packet tagging as a shim layer at end hosts</p>
  </div>
  <div class="page">
    <p>Thresholds depend on:</p>
    <p>Flow size distribution</p>
    <p>Traffic load</p>
    <p>Solution:</p>
    <p>Solve a FCT minimization problem to calculate demotion thresholds</p>
    <p>Problem:</p>
    <p>Traffic is highly dynamic</p>
    <p>Determine Thresholds</p>
    <p>Traffic variations -&gt; Mismatched thresholds</p>
  </div>
  <div class="page">
    <p>Impact of Mismatches</p>
    <p>High</p>
    <p>Low</p>
  </div>
  <div class="page">
    <p>When the threshold is perfect (20KB)</p>
    <p>Impact of Mismatches</p>
  </div>
  <div class="page">
    <p>When the threshold is too small (10KB)</p>
    <p>Impact of Mismatches</p>
    <p>Increased latency for short flows</p>
  </div>
  <div class="page">
    <p>When the threshold is too large (1MB)</p>
    <p>Impact of Mismatches</p>
    <p>Increased latency for short flows</p>
    <p>Leverage ECN to keep low buffer occupation</p>
  </div>
  <div class="page">
    <p>When the threshold is too small (10KB)</p>
    <p>Handle Mismatches</p>
    <p>ECN can keep low latency If we enable ECN</p>
  </div>
  <div class="page">
    <p>When the threshold is too large (1MB)</p>
    <p>Handle Mismatches</p>
    <p>ECN can keep low latency If we enable ECN</p>
  </div>
  <div class="page">
    <p>PIAS in 1 Slide</p>
    <p>PIAS packet tagging</p>
    <p>Maintain flow states and mark packets with priority</p>
    <p>PIAS switches</p>
    <p>Enable strict priority queueing and ECN</p>
    <p>PIAS rate control</p>
    <p>Employ Data Center TCP to react to ECN</p>
  </div>
  <div class="page">
    <p>Testbed Experiments</p>
    <p>PIAS prototype</p>
    <p>http://sing.cse.ust.hk/projects/PIAS</p>
    <p>Testbed Setup</p>
    <p>A Gigabit Pronto-3295 switch</p>
    <p>16 Dell servers</p>
    <p>Benchmarks</p>
    <p>Web search (DCTCP paper)</p>
    <p>Data mining (VL2 paper)</p>
    <p>Memcached</p>
  </div>
  <div class="page">
    <p>Small Flows (&lt;100KB)</p>
    <p>Web Search Data Mining</p>
    <p>Compared to DCTCP, PIAS reduces average FCT of small flows by up to 47% and 45%</p>
  </div>
  <div class="page">
    <p>NS2 Simulation Setup</p>
    <p>Topology</p>
    <p>144-host leaf-spine fabric with 10G/40G links</p>
    <p>Workloads</p>
    <p>Web search (DCTCP paper)</p>
    <p>Data mining (VL2 paper)</p>
    <p>Schemes</p>
    <p>Information-agnostic: PIAS, DCTCP and L2DCT</p>
    <p>Information-aware: pFabric</p>
  </div>
  <div class="page">
    <p>Overall Performance</p>
    <p>Web Search Data Mining</p>
    <p>PIAS has an obvious advantage over DCTCP and L2DCT in both workloads.</p>
  </div>
  <div class="page">
    <p>Small Flows (&lt;100KB)</p>
    <p>Simulations confirm testbed experiment results</p>
    <p>Web Search Data Mining</p>
  </div>
  <div class="page">
    <p>Comparison with pFabric</p>
    <p>PIAS only has 4.9% performance gap to pFabric for small flows in data mining workload</p>
    <p>Web Search Data Mining</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>PIAS: practical and effective</p>
    <p>Not assume flow information from applications</p>
    <p>Enforce Multi-Level Feedback Queue scheduling</p>
    <p>Use commodity switches &amp; legacy network stacks</p>
    <p>Information-agnostic</p>
    <p>FCT minimization</p>
    <p>Readily deployable</p>
  </div>
  <div class="page">
    <p>Thanks!</p>
  </div>
  <div class="page">
    <p>Starvation</p>
    <p>Measurement</p>
    <p>5000 flows, 5.7 million MTU-sized packets</p>
    <p>200 timeouts, 31 two consecutive timeouts</p>
    <p>Solutions</p>
    <p>Per-port ECN pushes back high priority flows when many low priority flow get starved</p>
    <p>Treating a long-term starved flow as a new flow</p>
  </div>
  <div class="page">
    <p>Persistent Connections</p>
    <p>Solution: periodically reset flow states based on more behaviors of traffic</p>
    <p>When a flow idles for some time, we reset the bytes sent of this flow to 0.</p>
    <p>Define a flow as packets demarcated by incoming packets with payload within a single connection</p>
  </div>
</Presentation>
