<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Yanlei Diao Shariq Rizvi</p>
    <p>Michael J. Franklin</p>
    <p>EECS, U.C. Berkeley</p>
    <p>Towards an Internet-Scale XML Dissemination Service</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>XML dissemination services</p>
    <p>System model</p>
    <p>Core techniques</p>
    <p>Status and conclusions</p>
  </div>
  <div class="page">
    <p>Applications of XML Dissemination</p>
    <p>News feeds via RSS (Really Simple Syndication)  My Yahoo!: updated headlines from BBC, CNet, NPR.</p>
    <p>Mobile services  Mobile operators: connect content providers with millions of clients</p>
    <p>running a multitude of operating systems.</p>
    <p>Stock tickers  QuoteMedia: fast access to real-time and historical stock data.</p>
    <p>Online auctions:  freebidingtools.com: create your own feed for your favorite eBay</p>
    <p>search.</p>
    <p>Network monitoring:  Ganglia: a distributed monitoring system for clusters and grids.</p>
  </div>
  <div class="page">
    <p>YFilter: An XML Dissemination Service</p>
    <p>User queries: Specification of data interests, written in an XML query language.</p>
    <p>Data sources: Continuously publish XML data items.</p>
    <p>Data Source</p>
    <p>Data Source</p>
    <p>Data Source</p>
    <p>XML streams</p>
    <p>user queries</p>
    <p>query results</p>
    <p>The service: Delivers to each user the XML data items that match her data interests; the delivered results are presented in a customized format.</p>
    <p>YFilter</p>
  </div>
  <div class="page">
    <p>YFilter</p>
    <p>ONYX: Large-Scale XML Dissemination</p>
    <p>Broker Broker</p>
    <p>Broker</p>
    <p>Broker Broker Broker</p>
    <p>Data Source Data Source Data Source</p>
    <p>U1 U2 U3 U4 U5</p>
    <p>ONYX  Operator Network using</p>
    <p>YFilter for XML Dissemination</p>
    <p>An overlay network of information brokers running YFilter.</p>
    <p>Underlying infrastructures:  A dedicated network  Peer-to-peer  Collaboration among</p>
    <p>administrative domains</p>
  </div>
  <div class="page">
    <p>Design Space: Expressiveness</p>
    <p>Expressiveness: data model + query language a service supports  Subject-based</p>
    <p>Messages: a subject label  Queries: a specific label or a wildcard</p>
    <p>Predicate-based  Messages: attribute-value pairs  Queries: a set of predicates</p>
    <p>XML filtering  Messages: XML  Queries: subset of XPath 1.0</p>
    <p>XML filtering and transformation  Messages: XML  Queries: subset of XQuery</p>
  </div>
  <div class="page">
    <p>Design Space: Why Distributed Processing?</p>
    <p>Privacy  Regulations: e.g., CA Senate Bill No. 1386.  Policies: e.g., customers data stay behind the firewall.</p>
    <p>Locality of data interests  Disseminate regional data directly to local subscribers.</p>
    <p>Scalability  Data volume: number of messages per second up to thousands,</p>
    <p>message size from 1 KB to 20 KB.  Query population: up to millions.  Frequency of query updates: from a daily basis to every few minutes.  Result Volume: can amplify the input data volume by a large factor.</p>
  </div>
  <div class="page">
    <p>Expressive -ness</p>
    <p>Distribution</p>
    <p>No</p>
    <p>Yes</p>
    <p>Related Systems</p>
    <p>ONYX</p>
  </div>
  <div class="page">
    <p>Content of the Paper</p>
    <p>Content-driven routing  Need to handle both structural and value-based constraints.  Leverage YFilter: NFA-based operator networks, distributed construction.</p>
    <p>Filtering power of routing (i.e., fraction of messages filtered)  Filtering power can be inherently limited.  Use query partitioning (if possible) to improve it.</p>
    <p>Distributed transformation  Currently either at the publishers side or at the edge brokers.  Perform cascading message transformation during routing.</p>
    <p>Efficient XML transmission  Verbosity of XML, and XML parsing at each routing step.  Investigate different XML formats for XML transmission.</p>
    <p>Detailed architectural design  Other optimization techniques</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>XML dissemination services</p>
    <p>System model</p>
    <p>Core techniques</p>
    <p>Status and conclusions</p>
  </div>
  <div class="page">
    <p>Operations on Data/Query flows</p>
    <p>Data Source</p>
    <p>Broker 1</p>
    <p>Broker 2</p>
    <p>Broker 4</p>
    <p>Broker 3</p>
    <p>Broker 5 Broker 6</p>
    <p>query</p>
    <p>flow</p>
    <p>data</p>
    <p>flow</p>
    <p>Broker 2:</p>
    <p>/nitf/head/pubdata[@edition.area=NY]</p>
    <p>Broker 4:</p>
    <p>/nitf/head/pubdata[@edition.area=SF]</p>
    <p>Broker 5:</p>
    <p>/nitf//toject.subject[@toject.subject.type=Stock] or</p>
    <p>/nitf//toject.subject[@toject.subject.matter=fishing]</p>
    <p>Broker 6:</p>
    <p>/nitf//toject.subject[@toject.subject.type =Sports]</p>
    <p>Broker 2:</p>
    <p>Q1: /nitf[head/pubdata[@edition.area=SF]]</p>
    <p>[.//toject.subject[@toject.subject.type=Stock]]</p>
    <p>Q2: /nitf[head/pubdata[@edition.area=SF]]</p>
    <p>[.//toject.subject[@toject.subject.matter=fishing]]</p>
    <p>Q3: /nitf[head/pubdata[@edition.area=SF]]</p>
    <p>[.//series[@series.name=Tide Forecasts]]</p>
    <p>Q5:</p>
    <p>Q4:</p>
    <p>[a transformation query*]</p>
  </div>
  <div class="page">
    <p>System Tasks on Data/Query Planes</p>
    <p>Processing planes: query plane and data plane</p>
    <p>Planes System Tasks</p>
    <p>Query Plane Data Plane</p>
    <p>Content-driven routing</p>
    <p>Incremental transformation</p>
    <p>Final query processing</p>
    <p>Build routing tables Lookup in routing tables</p>
    <p>Build transformation</p>
    <p>plans</p>
    <p>Execute transformation</p>
    <p>plans</p>
    <p>Build query plans Execute query plans</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>XML dissemination services</p>
    <p>System model</p>
    <p>Core techniques</p>
    <p>Status and conclusions</p>
  </div>
  <div class="page">
    <p>Routing Table Design</p>
    <p>A routing table: mapping from output links to routing queries.  a routing query: the data interests of queries down from an output link.  data interest of a query: XPath expressions, for and where clauses of</p>
    <p>FLWOR expressions.</p>
    <p>Routing table design  a canonical form of routing queries;  a representation of routing tables; and  an algorithm constructing them from a distributed query population.</p>
    <p>Two (conflicting) goals  High filtering power of routing</p>
    <p>Fraction of messages filtered in routing.  High routing efficiency</p>
    <p>Number of messages routed per second.</p>
  </div>
  <div class="page">
    <p>Q1:</p>
    <p>/nitf</p>
    <p>[head/pubdata[@edition.area=SF]]</p>
    <p>[.//tobject.subject[@tobject.subject.type=Stock]]</p>
    <p>An XML filtering and transformation engine that processes multiple queries in a shared fashion.</p>
    <p>A Non-Deterministic Finite Automaton (NFA)-based operator network.</p>
    <p>Benefits for routing:  Fast structure matching.  A small maintenance cost for query updates.  Extensibility for supporting new operators.</p>
    <p>YFilter Basics</p>
    <p>Q2:</p>
    <p>/nitf</p>
    <p>[head/pubdata[@edition.area=SF]]</p>
    <p>[.//tobject.subject[@tobject.subject.matter=fishing]]</p>
    <p>pubdata toject. subject</p>
    <p>nitf</p>
    <p>head</p>
    <p>*</p>
    <p>Q1</p>
    <p>Q2</p>
    <p>Y. Diao and M.J. Franklin. Query Processing for High-Volume XML Message Brokering. VLDB 2003.</p>
    <p>Y. Diao, et al. Path Sharing and Predicate Evaluation for High-Performance XML Filtering. TODS, Dec. 2003.</p>
    <p>YFilter v1.0 release: Coming later this month!</p>
  </div>
  <div class="page">
    <p>Our Solution</p>
    <p>Routing queries are a disjunction of path expressions  Each XPath expression (equivalent of the for and where clauses of</p>
    <p>FLOWR expressions) is a routing query.</p>
    <p>Multiple routing queries can be connected by or.</p>
    <p>Routing table representation  Merge routing queries into a single combined operator network.</p>
    <p>Construction algorithm  Map(): a user query  a routing query in the canonical form.</p>
    <p>Collect(): routing queries sent from child brokers  a routing table.</p>
    <p>Aggregate(): all the routing queries (at a node) a new routing query.</p>
  </div>
  <div class="page">
    <p>Broker 4</p>
    <p>from Broker 5 from Broker 6</p>
    <p>An Example Scenario</p>
    <p>Broker 6</p>
    <p>Q3: /nitf[head/pubdata/@edition.area=SF]</p>
    <p>[.//series/series.name=Tide Forecasts ]</p>
    <p>Routing queries Map( ) (6a)</p>
    <p>A new routing query Aggregate( )</p>
    <p>(6b) Broker 5</p>
    <p>Q1: /nitf[head/pubdata/@edition.area=SF]</p>
    <p>[.//toject.subject/@toject.subject.type=Stock ]</p>
    <p>Q2: /nitf[head/pubdata/@edition.area=SF]</p>
    <p>[.//toject.subject/@toject.subject.matter=fishing]</p>
    <p>Routing queries Map( ) (5a)</p>
    <p>A new routing query Aggregate( )</p>
    <p>(5b)</p>
    <p>Routing Table</p>
    <p>(mapping from links to routing queries)</p>
    <p>Collect( )</p>
    <p>(4c)</p>
    <p>A new routing query</p>
    <p>Aggregate( )</p>
    <p>(4d)</p>
  </div>
  <div class="page">
    <p>Example (continued)</p>
    <p>(5a)</p>
    <p>Q1 Q2</p>
    <p>pubdata toject. subject</p>
    <p>nitf</p>
    <p>head</p>
    <p>*</p>
    <p>(6a)</p>
    <p>Q3</p>
    <p>pubdata</p>
    <p>nitf</p>
    <p>head</p>
    <p>*</p>
    <p>(5b)</p>
    <p>pubdata toject. subject</p>
    <p>nitf</p>
    <p>head</p>
    <p>*</p>
    <p>Broker5 Broker5</p>
    <p>(6b)</p>
    <p>pubdata</p>
    <p>nitf</p>
    <p>head</p>
    <p>*</p>
    <p>Broker6</p>
    <p>Map( ) &amp; Aggregate( ) Map( ) &amp; Aggregate( )</p>
    <p>Collect( )</p>
    <p>Broker6</p>
    <p>(4c)</p>
    <p>pubdata toject. subject</p>
    <p>nitf</p>
    <p>head</p>
    <p>* 1</p>
    <p>series</p>
    <p>Broker5 Broker5</p>
  </div>
  <div class="page">
    <p>Combined one: sharing may sacrifice the short-cut evaluation strategy.</p>
    <p>Solution: dynamic pruning of the operator network at runtime</p>
    <p>Each operator/NFA state has a static set of broker ids that it can reach.</p>
    <p>System keeps a dynamic set of broker ids that have been reached.</p>
    <p>YFilter execution is extended to prune the operator network using these sets.</p>
    <p>Sharing and Short-cut Evaluation</p>
    <p>A problem with sharing  Separate routing query representations: short-cut evaluation.</p>
    <p>(4c)</p>
    <p>Broker 5: Broker 6:</p>
    <p>(5b) (6b)</p>
    <p>(5b)</p>
    <p>pubdata toject. subject</p>
    <p>nitf</p>
    <p>head</p>
    <p>*</p>
    <p>Broker5 Broker5</p>
    <p>(6b)</p>
    <p>pubdata</p>
    <p>nitf</p>
    <p>head</p>
    <p>*</p>
    <p>Broker6</p>
    <p>(4c)</p>
    <p>pubdata toject. subject</p>
    <p>nitf</p>
    <p>head</p>
    <p>*</p>
    <p>series</p>
    <p>Broker5 Broker5 Broker6</p>
  </div>
  <div class="page">
    <p>Other Routing Considerations:</p>
    <p>Content Generalization  Large routing tables can be a problem.  Introduce content generation as an additional step in Collect( ) or</p>
    <p>Aggregate( ).  Generalization methods.  Trade off filtering power for routing (space) efficiency.</p>
    <p>Filtering Power of Routing  Fraction of messages filtered by routing.</p>
    <p>Selectivity of the union of the user queries at the node.  Loss in precision in the routing queries representing this node.</p>
    <p>If inherently low, partition the query population to improve it.  An Exclusiveness Pattern: e.g., /a/b[@id=?]  Identify a set of such patterns, and partition queries using them.</p>
  </div>
  <div class="page">
    <p>Status and Conclusions</p>
    <p>We present a detailed architectural design of ONYX.</p>
    <p>We address fundamental issues.  YFilters NFA-based operator networks are good for routing!  Locality of data interests is key to filtering power!</p>
    <p>This is an area full of opportunities for optimization.  Improving routing efficiency.  Improving filtering power of routing.  Incremental message transformation.  Sharing among different processing tasks.  Schema-based optimization</p>
    <p>Queries bring intelligence to the network routing fabric.</p>
    <p>Status: YFilter release, XML transmission, other implementation underway.</p>
  </div>
  <div class="page">
    <p>Questions</p>
  </div>
</Presentation>
