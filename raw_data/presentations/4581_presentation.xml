<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Algorithmic Models for Sensor Networks Stefan Schmid and Roger Wattenhofer</p>
    <p>WPDRTS, Island of Rhodes, Greece, 2006</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 2</p>
    <p>Algorithmic Models</p>
    <p>Why are models needed? - Formal proofs of correctness, efficiency, real-time guarantees,</p>
    <p>- Common basis to compare results?</p>
    <p>A typical problem in sensor networks:</p>
    <p>Find the destination! source</p>
    <p>destination</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 3</p>
    <p>Finding a Destination</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 4</p>
    <p>Finding a Destination Efficiently: Backbone</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 5</p>
    <p>Backbone</p>
    <p>Idea: Some nodes become backbone nodes (gateways). Each node can access and be accessed by at least one backbone node.</p>
    <p>Routing:</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 6</p>
    <p>(Connected) Dominating Set</p>
    <p>A Dominating Set DS is a subset of nodes such that each node is either in DS or has a neighbor in DS.</p>
    <p>A Connected Dominating Set CDS is a connected DS, that is, there is a path between any two nodes in CDS that does not use nodes that are not in CDS.</p>
    <p>A CDS is a good choice for a backbone.</p>
    <p>It might be favorable to have few nodes in the CDS. This is known as the Minimum CDS problem.</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 7</p>
    <p>A Famous Dominating Set</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 8</p>
    <p>Algorithm 1</p>
    <p>Input:</p>
    <p>Local Graph</p>
    <p>Fractional</p>
    <p>Dominating Set</p>
    <p>Dominating</p>
    <p>Set</p>
    <p>Connected</p>
    <p>Dominating Set</p>
    <p>Phase C:</p>
    <p>Connect DS</p>
    <p>by tree of</p>
    <p>bridges</p>
    <p>Phase B:</p>
    <p>Probabilistic</p>
    <p>algorithm</p>
    <p>Phase A:</p>
    <p>Distributed</p>
    <p>linear program</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 9</p>
    <p>Algorithm 1: Phase A</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 10</p>
    <p>Algorithm 1: Phase B</p>
    <p>Each node applies the following algorithm:</p>
    <p>From phase A Highest degree in distance 2</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 11</p>
    <p>Algorithm 2: Idea</p>
    <p>tra ns</p>
    <p>m iss</p>
    <p>io n</p>
    <p>ra di</p>
    <p>us</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 12</p>
    <p>Algorithm 2</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 13</p>
    <p>The model determines the distributed</p>
    <p>complexity of clustering</p>
    <p>Comparison</p>
    <p>Algorithm 1</p>
    <p>Algorithm computes DS</p>
    <p>k2+O(1) transmissions/node</p>
    <p>O(O(1)/k log ) approximation</p>
    <p>Quite complex!</p>
    <p>Performance OK</p>
    <p>Algorithm 2</p>
    <p>Algorithm computes DS</p>
    <p>1 transmission/node</p>
    <p>O(1) approximation</p>
    <p>Easy!</p>
    <p>Performance great!</p>
    <p>G en</p>
    <p>er al</p>
    <p>G ra</p>
    <p>ph !</p>
    <p>N o</p>
    <p>P os</p>
    <p>iti on</p>
    <p>In fo</p>
    <p>rm at</p>
    <p>io n!</p>
    <p>U ni</p>
    <p>t D is</p>
    <p>k G</p>
    <p>ra ph</p>
    <p>O nl</p>
    <p>y!</p>
    <p>R eq</p>
    <p>ui re</p>
    <p>s G</p>
    <p>P S D</p>
    <p>ev ic</p>
    <p>e!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 14</p>
    <p>Relation Between Algorithms and Models</p>
    <p>too pessimistic too optimistic</p>
    <p>General</p>
    <p>Graph UDG</p>
    <p>GPS</p>
    <p>UDG</p>
    <p>Distances</p>
    <p>Bounded</p>
    <p>Independence UBG</p>
    <p>Distances</p>
    <p>too realistic too simplistic</p>
    <p>Message</p>
    <p>Passing</p>
    <p>Models</p>
    <p>Physical Signal</p>
    <p>Propagation</p>
    <p>Radio Network</p>
    <p>Model</p>
    <p>Unstructured Radio</p>
    <p>Network Model</p>
    <p>UDG, no</p>
    <p>Distances</p>
    <p>Time:</p>
    <p>Approximation:</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 15</p>
    <p>Lets Talk about Models!</p>
    <p>Why models for sensor networks?</p>
    <p>- Allows precise evaluation of algorithms</p>
    <p>- Analysis of correctness and efficiency (proofs)</p>
    <p>Goal of model designer?</p>
    <p>- Simplifications and abstractions</p>
    <p>- But close to reality!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 16</p>
    <p>Lets Talk about Models!</p>
    <p>Model for what?</p>
    <p>- Connectivity</p>
    <p>- Interference - Algorithm type - Node distribution</p>
    <p>- Energy consumption</p>
    <p>- etc.!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 17</p>
    <p>Lets Talk about Models!</p>
    <p>Algorithmic models often inspired by - Connections =&gt; Graph Theory - Transmission ranges, interference,  =&gt; Geometry</p>
    <p>Goal of our paper: - Survey of simple algorithmic models - higher level abstractions</p>
    <p>We ask:</p>
    <p>- How are models related to each other?</p>
    <p>- When should which model be preferred?</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 18</p>
    <p>Connectivity: Unit Disk Graph</p>
    <p>Which nodes are adjacent to a given node v?</p>
    <p>Example: Unit Disk Graph (UDG) - Classic Model from computational geometry - {u,v} 2 E , |u,v|  1</p>
    <p>Pro - Very simple - Analytically tractable - Realistic for unobstructed environments</p>
    <p>Contra - Too simple - Not realistic for inner-city networks with many buildings etc.</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 19</p>
    <p>Connectivity: Unit Disk Graph</p>
    <p>R</p>
    <p>R</p>
    <p>Unit Disk GraphUnit Disk Graph</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 20</p>
    <p>Connectivity: Quasi Unit Disk Graph</p>
    <p>More realistic: Quasi UDG (QUDG) - two radii - {u,v} 2 E , |u,v|   - {u,v} 2 E , |u,v| &gt; 1 - otherwise: It depends!</p>
    <p>It depends -  on an adversary, -  on probabilistic model, - etc.!</p>
    <p>Advantage: More flexible and realistic than UDG!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 21</p>
    <p>Connectivity: Drawbacks of QUDG</p>
    <p>How realistic is QUDG? - if there is a wall -  u and v can be close but not adjacent - =&gt; QUDG model requires very small</p>
    <p>However, although if there are walls, connectivity typically still adheres to certain geometric constraints! - Resort to general connectivity graphs too pessimistic!</p>
    <p>Observation: Even in complex environments, the neighbors of a node are often also neighboring (cf wall example)</p>
    <p>- Motivation for Bounded Independence Graph!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 22</p>
    <p>Connectivity: Bounded Independence Graph</p>
    <p>Bounded Independence Graph (BIG)</p>
    <p>Size of any independent set grows polynomially with the hop distance r</p>
    <p>- typically: in O(rc) for constant c 2</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 23</p>
    <p>Connectivity : Unit Ball Graph</p>
    <p>Finally, there are many interesting UDG generalizations</p>
    <p>Example: Unit Ball Graph (UBG)</p>
    <p>- Nodes are assumed to form a doubling metric - The set of nodes at distance r of a node u can be covered by a constant number of balls of radius r/2 around other nodes, for all r</p>
    <p>- i.e., Bu(r) i=1c Bui(r/2), 8 r</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 24</p>
    <p>Connectivity: Unit Ball Graph</p>
    <p>S</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 25</p>
    <p>Connectivity Put into Perspective (1)</p>
    <p>Fact: UDG is a QUDG -  = 1</p>
    <p>However, in the QUDG with constant , the set of nodes in radius r can always be covered by a constant number of balls of radius r/2 and hence:</p>
    <p>Fact: QUDG is a UBG</p>
    <p>UDG</p>
    <p>QUDG</p>
    <p>UBG</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 26</p>
    <p>Connectivity Put into Perspective (2)</p>
    <p>Fact: The UBG is a BIG.</p>
    <p>- The size of the independent sets of any UBG is polynomially bounded.</p>
    <p>Fact: A BIG is of course a special kind of a general graph (GG).</p>
    <p>QUDG</p>
    <p>UBG</p>
    <p>BIG</p>
    <p>GG</p>
    <p>UDG</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 27</p>
    <p>More Models!</p>
    <p>Interference - Which senders can disturb the reception of which other peers?</p>
    <p>Node distribution</p>
    <p>Location information - GPS / Galileo device, etc.?</p>
    <p>Etc.!</p>
    <p>vs vs</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 28</p>
    <p>Choice of Model (1)</p>
    <p>Which model to choose?</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 29</p>
    <p>Choice of Model (2)</p>
    <p>Which model to choose?</p>
    <p>too pessimistic too optimistic</p>
    <p>General</p>
    <p>Graph UDG</p>
    <p>Quasi</p>
    <p>UDG</p>
    <p>d</p>
    <p>Bounded</p>
    <p>Independence</p>
    <p>Unit Ball</p>
    <p>Graph</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 30</p>
    <p>Choice of Model (3)</p>
    <p>Note: An algorithm which is correct in a higher model is also correct in a lower model in our figure.</p>
    <p>Robustness and correctness properties of an algorithm should be proven in a model as high as possible!</p>
    <p>For efficiency considerations, however, a less conservative and more idealistic model might be fine!</p>
    <p>And: Study of simpler models might give insights into how algorithms for general model could look like!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 31</p>
    <p>Conclusion</p>
    <p>Our paper -  surveys models for connectivity, interference, etc. -  mostly simplistic models (high-level) only. -  a first step to put things into perspective!</p>
    <p>Models -  influence design, performance, correctness of algorithms! -  are more sophisticated than some years ago. -  still require lot of research. -  are not even completely known by experts! -  raise interesting questions of how they are related!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 32</p>
    <p>Thank you for your attention!</p>
  </div>
  <div class="page">
    <p>Stefan Schmid, ETH Zurich @ WPDRTS 2006 33</p>
    <p>Questions? / Feedback?</p>
  </div>
</Presentation>
