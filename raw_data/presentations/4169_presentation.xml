<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management</p>
    <p>R. Cameron Harvey, Ahmed Hamza, Cong Ly, Mohamed Hefeeda</p>
    <p>Network Systems Laboratory Simon Fraser University</p>
    <p>November 16, 2010</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 1 / 32</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 2 / 32</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Outline</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 3 / 32</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Mobile Gaming</p>
    <p>Mobile gaming revenues are estimated to reach $1.5 billion in the US by 2014 [eMarketer]</p>
    <p>Mobile gaming market is predicted to reach $18 billion by 2014 (%16.6 annual growth rate) [Pyramid Research] In 2010, factory unit shipments of game-capable mobile phones are forecasted to reach 1.27 billion [iSuppli Corp] In addition to commercially available games, many games have been ported to Android-based phones/devices (e.g. Kwaak3)</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 4 / 32</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Motivation</p>
    <p>Gaming uses a lot of power The screen is always on CPU used more intensively (calculations and rendering) Wireless network interface for communication</p>
    <p>Wireless network interface card can account for up to 70% of total power consumption in mobile devices Muliplayer games need to send state updates to maintain game state consistency among players Power Consumption vs. Consistency</p>
    <p>How can we reduce energy consumption of wireless interface without greatly affecting consistency?</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 5 / 32</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Outline</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 6 / 32</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Related Work</p>
    <p>IEEE 802.11 Power Saving Mode (PSM) Only available in infrastructure mode Gaming traffic has real-time constraints [CC6]</p>
    <p>Bounded-Slowdown Dynamically adapts sleep periods to past network activity Requires making changes to existing protocols and standards</p>
    <p>Minimize energy consumption by turning off the wireless interface [SBS02] [ZMG05]</p>
    <p>Scheduling algorithms to determine sleep periods Formulate a complex scheduling algorithm</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 7 / 32</p>
  </div>
  <div class="page">
    <p>Dead Reckoning</p>
    <p>Outline</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 8 / 32</p>
  </div>
  <div class="page">
    <p>Dead Reckoning</p>
    <p>Dead Reckoning</p>
    <p>Multiplayer games Avatar games (player controls a single character)</p>
    <p>first-person avatar: players view is through the characters eyes third-person avatar: player sees the character from a distance</p>
    <p>Omnipresent games (player concurrently controls a group of characters)</p>
    <p>can interact with objects close to any of the characters include real-time strategy games and simulation games</p>
    <p>After agreeing on game settings (e.g. map and rules), players form a gaming session One client is chosen as the authoritative host (to maintain consistency)</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 9 / 32</p>
  </div>
  <div class="page">
    <p>Dead Reckoning</p>
    <p>Dead Reckoning</p>
    <p>Dead Reckoning (DR) The process of estimating the future position of an object given its original position, intended course, velocity, and amount of time passed</p>
    <p>DR is used to hide network latency and reduce network traffic in multiplayer games</p>
    <p>Extrapolate behavior and state of gaming objects  can continue rendering frames even if game-state updates are late.</p>
    <p>A dead reckoning vector typically contains: Current position of the player (in terms of x, y, and z coordinates) Velocity</p>
    <p>Clients agree on a predictive contract mechanism, and ensure the two models do not deviate beyond a threshold Dead reckoning error is the deviation between actual and extrapolated trajectories</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 10 / 32</p>
  </div>
  <div class="page">
    <p>Dead Reckoning</p>
    <p>Dead Reckoning</p>
    <p>DR Extrapolated Path</p>
    <p>Actual Path</p>
    <p>Game</p>
    <p>Updates</p>
    <p>Game</p>
    <p>Updates</p>
    <p>Game</p>
    <p>Updates</p>
    <p>Game</p>
    <p>Updates</p>
    <p>Export</p>
    <p>Error</p>
    <p>Time X</p>
    <p>Y</p>
    <p>Figure: Dead reckoning</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 11 / 32</p>
  </div>
  <div class="page">
    <p>Dead Reckoning</p>
    <p>Potential Sleep Periods</p>
    <p>Time</p>
    <p>Receive</p>
    <p>Packets</p>
    <p>Transmit</p>
    <p>Packets</p>
    <p>Frame 1</p>
    <p>Quiet Period</p>
    <p>Compute</p>
    <p>Export Error</p>
    <p>Quiet Period</p>
    <p>Skip</p>
    <p>Send</p>
    <p>Frame 2</p>
    <p>Receive</p>
    <p>Packets</p>
    <p>Quiet Period</p>
    <p>Figure: Game interactions with the wireless interface</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 12 / 32</p>
  </div>
  <div class="page">
    <p>Dead Reckoning Sleep (DRS) Algorithm</p>
    <p>Outline</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 13 / 32</p>
  </div>
  <div class="page">
    <p>Dead Reckoning Sleep (DRS) Algorithm</p>
    <p>Dead Reckoning Sleep (DRS) Algorithm</p>
    <p>Idea: exploit dead reckoning to predict periods of inactivity in the wireless device during game play Predict how long it will take before the next update will occur</p>
    <p>Based on how close the current DR error is to the threshold Divide threshold value for each DR variable into n intervals</p>
    <p>Each interval has a corresponding storage bin for the statistical information used to predict when the wireless interface will be needed</p>
    <p>A bin maintains a weighted moving average for the time duration until threshold is exceeded If the receiver is sleeping, state updates are cached by authoritative server</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 14 / 32</p>
  </div>
  <div class="page">
    <p>Dead Reckoning Sleep (DRS) Algorithm</p>
    <p>Dead Reckoning Sleep (DRS)</p>
    <p>Bin 9</p>
    <p>Bin 3</p>
    <p>Bin 2</p>
    <p>Bin 9</p>
    <p>Bin 3</p>
    <p>Bin 1</p>
    <p>Position Error Sleep Threshold</p>
    <p>Orientation Error Sleep Threshold</p>
    <p>Bin 0 Bin 0</p>
    <p>sleepTime = 750 ms sleepTime = 360 ms</p>
    <p>SleepTime = min( 750 , 360 )</p>
    <p>= 360 ms</p>
    <p>Bin 3</p>
    <p>Bin 2</p>
    <p>Bin 1</p>
    <p>Figure: Threshold partitioning</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 15 / 32</p>
  </div>
  <div class="page">
    <p>Dead Reckoning Sleep (DRS) Algorithm</p>
    <p>Dead Reckoning Sleep (DRS) Algorithm</p>
    <p>Estimated Sleep Time</p>
    <p>estSTi = (1 )  estSTi +   (currentIntervali )</p>
    <p>Variability Estimation</p>
    <p>DevSTi = (1 )  DevSTi +   |estSTi  currentIntervali|</p>
    <p>Sleep Time</p>
    <p>sleepTimei = estSTi i  (DevSTi )</p>
    <p>: conservative offset factor to mitigate the variability and to ensure we do not sleep too long</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 16 / 32</p>
  </div>
  <div class="page">
    <p>Dead Reckoning Sleep (DRS) Algorithm</p>
    <p>Input: N: Number of DR variables Input: error[], threshold[]: DR errors and thresholds Input: PSP: Power saving profile Input: Wireless state Input: Q: Queue for DR error bins for i  0 to N  1 do</p>
    <p>if error [i] &lt; threshold [i] then Add bin corresponding to error [i] to Q; sleepTime[i]  0;</p>
    <p>else Update weighted averages of queued bins; Empty Q; if wireless is sleeping then</p>
    <p>Wake wireless; else</p>
    <p>Send update; end</p>
    <p>end end Put wireless to sleep for PSP  min0iN1(sleepTime[i]);</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 17 / 32</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Outline</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 18 / 32</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Evaluation of DRS Algorithm</p>
    <p>Modify the Game Latency Simulator (GLS) from University of Oslo Wireless controller module which implements DRS Power consumption model based on the characteristics of Cisco AIR-PCM350</p>
    <p>Simulate a two hour game session between two players Chosen values for  and  are 0.125, 0.25, respectively Defaults: frame duration = 40 ms, PSP = 1.0, granularity = 10, threshold factor = 0.8 Evaluation Metrics</p>
    <p>Energy savings, average estimation error, and average position deviation.</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 19 / 32</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>BZFlag</p>
    <p>Figure: Screen capture from BZFlag</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 20 / 32</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Game Latency Simulator</p>
    <p>Figure: Screen capture from GLS</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 21 / 32</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Gamma Effect</p>
    <p>A ve</p>
    <p>ra ge</p>
    <p>P ow</p>
    <p>er Sa</p>
    <p>vi ng</p>
    <p>s (%</p>
    <p>)</p>
    <p>Gamma () Range 15 25 35 45</p>
    <p>A ve</p>
    <p>ra ge</p>
    <p>E st</p>
    <p>im at</p>
    <p>io n</p>
    <p>E rr</p>
    <p>or (m</p>
    <p>s)</p>
    <p>Gamma () Range</p>
    <p>Tradeoff: Wider  range  more power savings Narrower  range  fewer estimation errors</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 22 / 32</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Gamma Effect</p>
    <p>About 60% of the estimation errors are 300 ms or less</p>
    <p>Estimation Error (ms)</p>
    <p>C D</p>
    <p>F</p>
    <p>Figure: Cummulative Distribution Function of Estimation Errors ( : 3  5)</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 23 / 32</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Power Savings</p>
    <p>Energy savings are more pronounced at higher frame rates</p>
    <p>x 10 6</p>
    <p>Simulation Time (ms)</p>
    <p>C um</p>
    <p>ul at</p>
    <p>iv e</p>
    <p>E ne</p>
    <p>rg y</p>
    <p>C on</p>
    <p>su m</p>
    <p>pt io</p>
    <p>n (m</p>
    <p>J)</p>
    <p>Base 20 ms 40 ms 60 ms 80 ms 120 ms</p>
    <p>Figure: Cumulative energy consumption at various frame durations</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 24 / 32</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Average Sleep Time Estimation Errors</p>
    <p>Number of Bins Per DR Variable</p>
    <p>A ve</p>
    <p>ra ge</p>
    <p>E st</p>
    <p>im at</p>
    <p>io n</p>
    <p>E rr</p>
    <p>or (m</p>
    <p>s)</p>
    <p>Frame Duration (ms)</p>
    <p>A ve</p>
    <p>ra ge</p>
    <p>E st</p>
    <p>im at</p>
    <p>io n</p>
    <p>E rr</p>
    <p>or (m</p>
    <p>s) Average sleep time estimation error increases almost exponentially as the framerate is increases</p>
    <p>Higher framerates  sleep durations span more frames, with the first frame being closer to the beginning of the sleep cycle</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 25 / 32</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Average Position Deviation</p>
    <p>Frame Duration (ms)</p>
    <p>A ve</p>
    <p>ra ge</p>
    <p>P os</p>
    <p>it io</p>
    <p>n D</p>
    <p>ev ia</p>
    <p>ti on</p>
    <p>(m )</p>
    <p>Base DRS</p>
    <p>Figure: Average position deviation vs. frame duration</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 26 / 32</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Average Position Deviation</p>
    <p>Number of Bins Per Partition</p>
    <p>A ve</p>
    <p>ra ge</p>
    <p>P os</p>
    <p>it io</p>
    <p>n D</p>
    <p>ev ia</p>
    <p>ti on</p>
    <p>(m )</p>
    <p>Base DRS</p>
    <p>Figure: Average position deviation vs. granularity of partitions</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 27 / 32</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Outline</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 28 / 32</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Conclusions</p>
    <p>Mobile gaming is gaining popularity with a rapidly growing market Wireless network interface is one of the main sources of power drain in mobile devices Proposed a new power saving algorithm utilizing dead reckoning to predict wireless interface sleep cycles Simulation results show that power savings up to 36% can be achieved in most gaming sessions using the DRS algorithm Power savings come at some cost in terms of game state consistency</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 29 / 32</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Future Work</p>
    <p>Study implications of cheating during game play on power management algorithms Develop a testbed and implement DRS into the BZFlag code Extend our implementation to mobile devices such as the Google Nexus One phone</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 30 / 32</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>References</p>
    <p>[SBS02] E. Shih, P. Bahl, and M. J. Sinclair, Wake on wireless: an event driven energy saving strategy for battery operated devices, MobiCom02, 2002.</p>
    <p>[ZMG05] T. Zhang, S. Madhani, P. Gurung, and E. van den Berg, Reducing energy consumption on mobile devices with WiFi interfaces, GLOBECOM05, 2005.</p>
    <p>[CC06] M. Claypool and K. Claypool, Latency and player actions in online games, Communications of the ACM, 2006.</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 31 / 32</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Thank You</p>
    <p>Questions?</p>
    <p>Energy-Efficient Gaming on Mobile Devices using Dead Reckoning-based Power Management November 16, 2010 32 / 32</p>
  </div>
</Presentation>
