<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>A Case for Fine Grained Traffic</p>
    <p>Engineering in Data CentersEngineering in Data Centers</p>
    <p>Theophilus Benson*, Ashok Anand*, Aditya Akella*, Ming Zhang+</p>
    <p>*University of Wisconsin, Madison</p>
    <p>+ Microsoft Research</p>
  </div>
  <div class="page">
    <p>Why are Data Centers Important?</p>
    <p>Congestion == bad app. performance  Bad app performance == user dissatisfaction  User dissatisfaction == loss of revenue  Traffic engineering is crucial</p>
    <p>IM: low B/W, loose latency  Multimedia: low B/W, strict latency  Games: high B/W, strict latency</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background  Traffic Engineering in data centers  Design goals for ideal TE  MicroTE MicroTE  Conclusion</p>
  </div>
  <div class="page">
    <p>Options for TE in Data Centers?</p>
    <p>Current supported techniques  Equal Cost MultiPath (ECMP)  Spanning Tree Protocol (STP)</p>
    <p>Proposed (ECMP based) Proposed (ECMP based)  Fat-Tree, VL2</p>
    <p>Other existing  TEXCP, COPE,, OSPF link tuning</p>
  </div>
  <div class="page">
    <p>Properties of Data Center Traffic</p>
    <p>Flows are small and short-lived [Kandula et. al, 2009]  Traffic is bursty [Benson et. al, 2009]  Traffic is unpredictable at 100 secs [Maltz et. al, 2009]</p>
  </div>
  <div class="page">
    <p>How do we evaluate TE?</p>
    <p>Data center traces  Cloud data center</p>
    <p>Map-reduce app  ~1500 servers,  ~80 switches</p>
    <p>.  1 sec snapshots for 24 hours</p>
    <p>Simulator  Input:</p>
    <p>Traffic matrix, Topology ,Traffic Engineering  Output:</p>
    <p>link utilization</p>
  </div>
  <div class="page">
    <p>Draw Backs of Existing TE</p>
    <p>STP does not use multiple path  ECMP does not adapt to burstiness</p>
  </div>
  <div class="page">
    <p>Draw Backs of Proposed TE</p>
    <p>Fat-Tree  Rehash flows  Local opt. != global opt.</p>
    <p>VL2  Coarse grained flow</p>
    <p>assignment</p>
    <p>VL2 &amp; Fat-Tree do not adapt to burstiness</p>
  </div>
  <div class="page">
    <p>Draw Backs of Other Approaches</p>
    <p>Egress</p>
    <p>TEXCP, COPE . OSPF link tuning</p>
    <p>Ingress x</p>
    <p>Unable to react fast enough (below 100 secs)</p>
  </div>
  <div class="page">
    <p>Design Requirements for TE</p>
    <p>Calculate paths &amp; reconfigure network  Use all network paths  Use global view  Must react quickly</p>
    <p>.</p>
    <p>How predictable is traffic?</p>
  </div>
  <div class="page">
    <p>Is Data Center Traffic Predictable?</p>
    <p>YES! 33% of traffic is predictable</p>
  </div>
  <div class="page">
    <p>How Long is Traffic Predictable?</p>
    <p>TE must react in under 2 seconds</p>
  </div>
  <div class="page">
    <p>MicroTE: Architecture</p>
    <p>.</p>
    <p>Monitoring Component Routing Component</p>
    <p>Network Controller.</p>
    <p>Based on OpenFlow framework  Global view:</p>
    <p>created by network controller</p>
    <p>React to predictable traffic:  routing component tracks demand history</p>
    <p>All N/W paths:  routing component creates routes using all paths</p>
  </div>
  <div class="page">
    <p>Routing Component</p>
    <p>Step 1: Determine predictable traffic  Step 2: Route along rarely utilized paths</p>
    <p>Currently use LP  Faster Algorithm == future work Faster Algorithm == future work</p>
    <p>Step 3: Set ECMP for other traffic  Step 4: Return routes</p>
  </div>
  <div class="page">
    <p>Routing Component</p>
    <p>Calculate Network Routes for predictable traffic</p>
    <p>Determine Predictable ToRs</p>
    <p>New Global View</p>
    <p>Now: Use LP</p>
    <p>Future: Use heuristic</p>
    <p>Return Calculated Routes</p>
    <p>predictable traffic</p>
    <p>Set ECMP for unpredictable traffic</p>
    <p>NoYes</p>
    <p>Return Nothing</p>
    <p>Significant Change in Routes?</p>
    <p>Add Network View to History</p>
  </div>
  <div class="page">
    <p>Tradeoffs: Monitoring Component</p>
    <p>.</p>
    <p>Monitoring Component</p>
    <p>Network Controller</p>
    <p>Routing Component</p>
    <p>Switch based  Low complexity  High overhead</p>
    <p>End-host based  Low overhead  High complexity</p>
    <p>.</p>
  </div>
  <div class="page">
    <p>Preliminary Evaluation</p>
    <p>Outperforms ECMP  Slightly worse than optimal</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Study existing TE  Found them lacking (15-20%)</p>
    <p>Study data center traffic  Discovered traffic predictability (33% for 2 secs) Discovered traffic predictability (33% for 2 secs)</p>
    <p>Guidelines for ideal TE  MicroTE</p>
    <p>Implementation of ideal TE  Preliminary evaluation</p>
  </div>
  <div class="page">
    <p>Thank You</p>
    <p>Questions?</p>
  </div>
</Presentation>
