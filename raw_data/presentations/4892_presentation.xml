<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Dealing with the Deep Web and all its Quirks</p>
    <p>(joint work with M. Bienvenu, D. Deutch, D. Martinenghi, and F. Suchanek)</p>
    <p>PIERRE SENELLART</p>
  </div>
  <div class="page">
    <p>The Deep Web</p>
    <p>Definition (Deep Web, Hidden Web, Invisible Web) All the content on the Web that is not directly accessible through hyperlinks. In particular: HTML forms, Web services.</p>
    <p>Size estimate: 500 times more content than on the surface Web! [BrightPlanet, 2001]. Hundreds of thousands of deep Web databases [Chang et al., 2004]</p>
  </div>
  <div class="page">
    <p>Sources of the Deep Web</p>
    <p>Example</p>
    <p>Yellow Pages and other directories;</p>
    <p>Library catalogs;</p>
    <p>Weather services;</p>
    <p>Real-estate agencies;</p>
    <p>etc.</p>
    <p>. . . but also lots of information available on the surface Web, but that may be interesting to retrieve from the deep Web:</p>
    <p>more structured</p>
    <p>easier to retrieve the information of interest</p>
    <p>less network accesses to crawl the whole database</p>
  </div>
  <div class="page">
    <p>A Quirky Deep Web</p>
    <p>Numerous works on form understanding and information extraction from the deep Web [He et al., 2007, Varde et al., 2009, Khare et al., 2010]</p>
    <p>Formal models for answering queries under access pattern restrictions [Li and Chang, 2001, Cal and Martinenghi, 2008, Cal and Martinenghi, 2010, Benedikt et al., 2012a]</p>
    <p>Siphoning of hidden Web databases [Barbosa and Freire, 2004, Jin et al., 2011, Sheng et al., 2012]</p>
    <p>Those works ignore lots of quirky dimensions of deep Web interfaces</p>
    <p>Here: towards a more comprehensive framework for deep Web modeling and querying</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Deep Web Quirks</p>
    <p>Towards a Data Model and Query Language</p>
    <p>Problems of Interest</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Views Deep Web sources offer views over (most often relational) data, through, at the very least:</p>
    <p>selection (depending on users query, or implicit in the service), in particular inequalities</p>
    <p>projection (not available attributes are exported by a given service)</p>
    <p>And also (but less critically):</p>
    <p>joins (quite common in a Web application  but from an outsiders perspective, often enough to see the result of a join as the relation of interest)</p>
    <p>union, intersection, difference, etc. (relatively rare)</p>
    <p>aggregation (usually not the most important part of the service)</p>
    <p>more complex processing (rare in practice)</p>
  </div>
  <div class="page">
    <p>Limited access patterns</p>
    <p>Australian Yellow Pages search form:</p>
    <p>Required attributes, dependencies between attributes of the form, etc.</p>
  </div>
  <div class="page">
    <p>Limited access patterns</p>
    <p>Australian Yellow Pages search form:</p>
    <p>Required attributes, dependencies between attributes of the form, etc.</p>
  </div>
  <div class="page">
    <p>Ranking of results</p>
    <p>IMDb advanced search sort criteria:</p>
    <p>Different possible sort criteria, some according to non-exported attributes</p>
  </div>
  <div class="page">
    <p>Paging</p>
    <p>Paging in IMDb:</p>
    <p>Each page of results requires a separate network access, and therefore has a cost</p>
  </div>
  <div class="page">
    <p>Overflow</p>
    <p>What you get when you try to access the 100,001-th result to an IMDb advanced query:</p>
    <p>Only a (top-ranked) subset of the results is available for each access</p>
  </div>
  <div class="page">
    <p>Policy limitations</p>
    <p>Twitter API rate limitation:</p>
    <p>Limited rate of queries per minute, hour, query. . . Several services of the same source may share the same limits.</p>
  </div>
  <div class="page">
    <p>Incomplete information: Projection</p>
    <p>Several views of the same information on IMDB:</p>
    <p>Same relation(s), different attributes projected out</p>
  </div>
  <div class="page">
    <p>Incomplete information: Projection Several views of the same information on IMDB:</p>
    <p>Same relation(s), different attributes projected out</p>
  </div>
  <div class="page">
    <p>Incomplete information: Projection</p>
    <p>Several views of the same information on IMDB:</p>
    <p>Same relation(s), different attributes projected out</p>
  </div>
  <div class="page">
    <p>Incomplete information: Granularity</p>
    <p>Release date API on IMDb:</p>
    <p>The granularity of the presented information may not be the most precise one</p>
  </div>
  <div class="page">
    <p>Recency Savills property search:</p>
    <p>Publication time is a special attribute of interest:</p>
    <p>may or may not be exported</p>
    <p>may or may not be queriable (sometimes in a very weird way!)</p>
    <p>often used as a ranking criterion</p>
    <p>granularity plays an important role</p>
    <p>publication date &lt; query date</p>
  </div>
  <div class="page">
    <p>Uncertainty in the ranking</p>
    <p>Amazon Books sorting options:</p>
    <p>Proprietary ranking functions</p>
    <p>Weighted combination of attributes with unknown weights [Soliman et al., 2011]</p>
    <p>Ranking according to an unexported attribute</p>
  </div>
  <div class="page">
    <p>Dependencies across services Some of IMDb advanced search options:</p>
    <p>services of the same source provide different correlated views of the same data</p>
    <p>dependencies (inclusion) across services are common too</p>
    <p>a given service often satisfies some key dependencies</p>
  </div>
  <div class="page">
    <p>But also. . .</p>
    <p>non-conjunctive forms (common in digital library applications)</p>
    <p>unknown characteristics of information retrieval systems (keyword querying vs exact querying, indexing of stop words, stemming used, etc.)</p>
    <p>intricate interactions (AJAX autocompletion, submitting a form as a first step before submitting another form, etc.)</p>
    <p>potential side effects of a service</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Deep Web Quirks</p>
    <p>Towards a Data Model and Query Language Desiderata Example Syntax</p>
    <p>Problems of Interest</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Deep Web Quirks</p>
    <p>Towards a Data Model and Query Language Desiderata Example Syntax</p>
    <p>Problems of Interest</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Features of the query language</p>
    <p>What does a user need out of a deep Web query language?</p>
    <p>Selection, projection, joins, union (of different sources)</p>
    <p>Custom ranking</p>
    <p>Top-k results of a query</p>
    <p>But also:</p>
    <p>Proper uncertainty management</p>
    <p>Deduplication of query results</p>
    <p>Diversification of query results</p>
    <p>Explanation of query results</p>
  </div>
  <div class="page">
    <p>Desirable model properties</p>
    <p>Declarative framework (specifying what a user wants, not how to retrieve it)</p>
    <p>Composability: Web services, queries, materialized views expressible in a common language</p>
    <p>Incremental maintenance support</p>
    <p>Familiarity with the query language (e.g., relying on SQL when possible)</p>
    <p>Cost model for accessing a deep Web source, paging, utilizing a materialized view, etc.</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Deep Web Quirks</p>
    <p>Towards a Data Model and Query Language Desiderata Example Syntax</p>
    <p>Problems of Interest</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Example service: Hotel availability</p>
    <p>C R E A T E VIEW H o t e l s S e r v i c e 1 ( $c , $o ) AS S E L E C T name , city , price , A v a i l a b l e R o o m s ,</p>
    <p>rating , DAY ( L a s t U p d a t e ) FROM H o t e l s 1 W H E R E city = $c O R D E R BY r a t i n g DESC L I M I T $o ,10 UP TO 1000</p>
    <p>Parametrized view over a (hidden) source relation</p>
    <p>Main idea: Reproduce a (possible) SQL implementation of the view</p>
    <p>Showcased: selection, projection, access patterns, granularity, ranking, paging, overflow</p>
  </div>
  <div class="page">
    <p>Example service: Mapping</p>
    <p>C R E A T E VIEW M a p S e r v i c e ( $locX , $locY , $radius , $o ) AS S E L E C T name , H o t e l L o c X , H o t e l L o c Y , s q u a r e ( H o t e l L o c X - $ l o c X ) + s q u a r e ( H o t e l L o c Y - $ l o c Y ) As D FROM G e o D B W H E R E D &lt; s q u a r e ( $ r a d i u s ) O R D E R BY S q r D i s t ASC L I M I T $o ,10</p>
  </div>
  <div class="page">
    <p>Query</p>
    <p>S E L E C T H o t e l s 1 . name , H o t e l s 2 . name FROM ( H o t e l s S e r v i c e 1 + H o t e l s S e r v i c e 2 + M a p S e r v i c e ) As H1 ,</p>
    <p>( H o t e s l S e r v i c e 1 + H o t e l s S e r v i c e 2 + M a p S e r v i c e ) As H2 W H E R E H1 . city =  I s t a n b u l  AND H2 . city =  I s t a n b u l  AND H1 . r a t i n g &gt; 4 AND H2 . r a t i n g &gt; 4 AND s q u a r e ( H1 . H o t e l L o c X - H2 . H o t e l L o c X ) +</p>
    <p>s q u a r e ( H1 . H o t e l L o c Y - H2 . H o t e l L o c Y ) &lt; 1000</p>
    <p>The + operator combines services using any combination of accesses (in particular, union, natural join)</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Deep Web Quirks</p>
    <p>Towards a Data Model and Query Language</p>
    <p>Problems of Interest</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Problems of Interest</p>
    <p>Algorithms for, and complexity of, the following problems:</p>
    <p>Given a collection of services, is a query realizable? Combines problems from answering queries using views [Halevy, 2001], limited access patterns [Cal and Martinenghi, 2010], feasability of a ranking function, taking into account overflow. . .</p>
    <p>What is the optimal plan for realizing a query? Static plans: requires a proper query plan (recursive) formalism,</p>
    <p>and a static cost model Dynamic plans: partial execution and reevaluation of the cost</p>
    <p>what is the best access I can do at a given time [Benedikt et al., 2011]</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Deep Web Quirks</p>
    <p>Towards a Data Model and Query Language</p>
    <p>Problems of Interest</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Inference of the model from real services How to automatically infer such a model from real-world forms?</p>
    <p>Heuristics to detect paging, overflow, etc.</p>
    <p>Combine classical form understanding and information extraction systems to understand the properties of a service: making assumptions, and then probing to confirm these assumptions [Oita et al., 2012]</p>
    <p>Software testing methods to test a wide range of possible combinations of attributes and infer the corresponding behavior of the interface</p>
    <p>Perform static analysis on client-side code to detect all such characteristics enforced on the client side [Benedikt et al., 2012b]</p>
    <p>Make use of the different services of the same source to holistically learn their characteristics</p>
  </div>
  <div class="page">
    <p>Summary and perspectives</p>
    <p>Many quirky aspects often ignored but crucial in deep Web services</p>
    <p>A proper query answering system requires consider them together, not in isolation</p>
    <p>Towards a composable, declarative, model for deep Web querying together with a cost model</p>
    <p>Full design of the data and query model</p>
    <p>Characterization of the complexity of the considered problems</p>
    <p>Query planning algorithms</p>
  </div>
  <div class="page">
    <p>Summary and perspectives</p>
    <p>Many quirky aspects often ignored but crucial in deep Web services</p>
    <p>A proper query answering system requires consider them together, not in isolation</p>
    <p>Towards a composable, declarative, model for deep Web querying together with a cost model</p>
    <p>Full design of the data and query model</p>
    <p>Characterization of the complexity of the considered problems</p>
    <p>Query planning algorithms</p>
  </div>
  <div class="page">
    <p>References I</p>
    <p>Luciano Barbosa and Juliana Freire. Siphoning hidden-Web data through keyword-based interfaces. In Proc. Simpsio Brasileiro de Bancos de Dados, Braslia, Brasil, October 2004.</p>
    <p>Michael Benedikt, Georg Gottlob, and Pierre Senellart. Determining relevance of accesses at runtime. In PODS, 2011.</p>
    <p>Michael Benedikt, Pierre Bourhis, and Clemens Ley. Querying schemas with access restrictions. PVLDB, 5(7), 2012a.</p>
    <p>Michael Benedikt, Tim Furche, Andreas Savvides, and Pierre Senellart. ProFoUnd: Program-analysisbased form understanding. In WWW, 2012b. Demonstration.</p>
    <p>BrightPlanet. The deep Web: Surfacing hidden value. White Paper, July 2001.</p>
  </div>
  <div class="page">
    <p>References II Andrea Cal and Davide Martinenghi. Querying Data under Access Limitations. In ICDE, 2008.</p>
    <p>Andrea Cal and Davide Martinenghi. Querying the deep web. In EDBT, 2010. Tutorial.</p>
    <p>Kevin Chen-Chuan Chang, Bin He, Chengkai Li, Mitesh Patel, and Zhen Zhang. Structured databases on the Web: Observations and implications. SIGMOD Record, 33(3):6170, September 2004.</p>
    <p>Alon Y. Halevy. Answering queries using views: A survey. VLDB J., 10(4), 2001.</p>
    <p>Bin He, Mitesh Patel, Zhen Zhang, and Kevin Chen-Chuan Chang. Accessing the deep Web: A survey. Communications of the ACM, 50(2):94101, 2007.</p>
  </div>
  <div class="page">
    <p>References III</p>
    <p>Xin Jin, Nan Zhang, and Gautam Das. Attribute domain discovery for hidden Web databases. In SIGMOD, 2011.</p>
    <p>Ritu Khare, Yuan An, and Il-Yeol Song. Understanding deep Web search interfaces: a survey. SIGMOD Record, 39(1), 2010.</p>
    <p>Chen Li and Edward Chang. Answering queries with useful bindings. ACM TODS, 26(3), 2001.</p>
    <p>Marilena Oita, Antoine Amarilli, and Pierre Senellart. Cross-fertilizing deep Web analysis and ontology enrichment. In VLDS, 2012.</p>
    <p>Cheng Sheng, Nan Zhang, Yufei Tao, and Xin Jin. Optimal algorithms for crawling a hidden database in the Web. PVLDB, 5(11), 2012.</p>
  </div>
  <div class="page">
    <p>References IV</p>
    <p>Mohamed A. Soliman, Ihab F. Ilyas, Davide Martinenghi, and Marco Tagliasacchi. Ranking with uncertain scoring functions: semantics and sensitivity measures. In SIGMOD, 2011.</p>
    <p>Aparna Varde, Fabian M. Suchanek, Richi Nayak, and Pierre Senellart. Knowledge discovery over the deep Web, semantic Web and XML. In Proc. DASFAA, pages 784788, Brisbane, Australia, April 2009. Tutorial.</p>
  </div>
</Presentation>
