<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Towards Supporting Millions of Users in Modifiable Virtual Environments by Redesigning Minecraft-Like Games as</p>
    <p>Serverless Systems</p>
    <p>j.j.r.donkervliet@vu.nl @jdonkervliet https://atlarge-research.com/opencraft/</p>
    <p>Jesse Donkervliet, Animesh Trivedi, Alexandru Iosup</p>
  </div>
  <div class="page">
    <p>Gaming by the Numbers</p>
    <p>Sources: https://news.xbox.com/en-us/2020/05/18/minecraft-connecting-more-players-than-ever-before/, https://www.comscore.com/Insights/PressReleases/2020/1/Comscore-Reports-Highest-Ever-Worldwide-Box-Office, https://www.riaa.com/riaa-releases-2019-year-end-music-industry-revenue-report/, https://techcrunch.com/2017/04/04/apple-pushes-the-reset-button-on-the-mac-pro/</p>
    <p>The 2019 annual revenue from the gaming industry was $152.1 billion  More than 10 times US recorded music revenue  More than 3 times the global box office revenue</p>
    <p>Minecraft has sold more than 200 million copies</p>
    <p>More than 126 million people play Minecraft every month  More than the number of users of MacOS</p>
  </div>
  <div class="page">
    <p>Features of Modifiable Virtual Environments (MVEs) are Generally Beneficial Uses of MVEs include: 1. Entertainment 2. Education 3. Activism 4. Bringing people together in</p>
    <p>times of crisis</p>
    <p>Sources: http://www.adweek.com/creativity/how-greenpeace-used-minecraft-to-stop-illegal-logging-in-europes-last-lowland-primeval-forest/, https://news.xbox.com/en-us/2020/05/18/minecraft-connecting-more-players-than-ever-before/, https://education.minecraft.net/lessons/history-blocks, https://www.theverge.com/2020/4/22/21231359/pussy-riot-idles-minecraft-festival-block-by-blockwest</p>
  </div>
  <div class="page">
    <p>MVE Scalability Challenge</p>
    <p>Minecraft supports 126 million active monthly players, but only by using isolated instances that do not scale beyond a few hundred players.1</p>
    <p>Sources: 1: Yardstick: A benchmark for minecraft-like services, Jerom van der Sar et al. ICPE2019. https://www.nme.com/news/music/minecraft-music-festival-block-by-blockwest-postponed-after-servers-crash-2653948 4</p>
  </div>
  <div class="page">
    <p>A modifiable virtual environment is a real-time, online, multi-user environment which allows its users (i.e., players) to: 1. modify the virtual worlds objects (e.g., player apparel) 2. modify the virtual worlds parts (e.g., terrain) 3. create new content by connecting components 4. interact with the world through programs</p>
    <p>Definition of a Modifiable Virtual Enviroment (MVE)</p>
    <p>Unique to MVEs</p>
  </div>
  <div class="page">
    <p>Main Contributions</p>
  </div>
  <div class="page">
    <p>MVE Model and Deployment</p>
  </div>
  <div class="page">
    <p>Inside a Modifiable Virtual Environment MVEs typically use a clients/server architecture</p>
    <p>MVE Client MVE Server</p>
    <p>User Device</p>
    <p>MVE Server</p>
    <p>MVE client</p>
    <p>simulator networking</p>
    <p>rendering</p>
    <p>networking</p>
    <p>simulators: - entities - objects - parts - components - programs</p>
    <p>world generator</p>
    <p>virtual world data (global)</p>
    <p>virtual world data (view)</p>
    <p>D3 thin client</p>
    <p>Player inputs Game state Videolegend: MVE process MVE virtual world</p>
    <p>Other MVE services Deployment environment</p>
    <p>player move</p>
    <p>switch lever</p>
    <p>terrain data</p>
    <p>game analytics</p>
    <p>video streaming</p>
    <p>MVE server</p>
    <p>MVE server</p>
    <p>D1</p>
    <p>D2 MVE client</p>
    <p>MVE client</p>
  </div>
  <div class="page">
    <p>Inside a Modifiable Virtual Environment MVEs typically use a clients/server architecture The unique MVEs features are typically handled by the server</p>
    <p>MVE Client MVE Server</p>
    <p>User Device</p>
    <p>MVE Server</p>
    <p>MVE client</p>
    <p>simulator networking</p>
    <p>rendering</p>
    <p>networking</p>
    <p>simulators: - entities - objects - parts - components - programs</p>
    <p>world generator</p>
    <p>virtual world data (global)</p>
    <p>virtual world data (view)</p>
    <p>D3 thin client</p>
    <p>Player inputs Game state Videolegend: MVE process MVE virtual world</p>
    <p>Other MVE services Deployment environment</p>
    <p>player move</p>
    <p>switch lever</p>
    <p>terrain data</p>
    <p>game analytics</p>
    <p>video streaming</p>
    <p>MVE server</p>
    <p>MVE server</p>
    <p>D1</p>
    <p>D2 MVE client</p>
    <p>MVE client</p>
  </div>
  <div class="page">
    <p>Deployment Models and Limitations</p>
    <p>User Device</p>
    <p>MVE Client MVE Server</p>
    <p>Cloud Environment</p>
    <p>MVE Client MVE Server</p>
    <p>MVE Client MVE Serverthin client</p>
    <p>D1</p>
    <p>D2</p>
    <p>D3</p>
  </div>
  <div class="page">
    <p>Vision for Large-Scale MVEs Minecraft-like games and, more generally, MVEs, will become cloudbased services scalable to millions of concurrent players (users).</p>
    <p>CloudletUser Device Cloud Environment</p>
    <p>move (insuff. res. on device)</p>
    <p>video streaming</p>
    <p>move (reduce latency)</p>
    <p>player simulator</p>
    <p>world generator</p>
    <p>game analytics</p>
    <p>NPC simulator NPC</p>
    <p>simulator NPC</p>
    <p>simulator</p>
    <p>program simulator program simulator program simulator</p>
    <p>rendering</p>
    <p>state sychronizer</p>
    <p>state sychronizer</p>
    <p>state sychronizer</p>
    <p>move (reduce bandwidth)</p>
    <p>move (increase perf.)</p>
    <p>component simulator</p>
    <p>move (increase privacy)</p>
    <p>move (increase perf.)</p>
    <p>Player inputs Game state Videolegend:</p>
    <p>MVE virtual world Other MVE services Deployment environment</p>
    <p>Move service</p>
  </div>
  <div class="page">
    <p>Serverless Operation  Operated professionally by the</p>
    <p>cloud operator  Provisioned on-demand by the</p>
    <p>game developer or operator</p>
    <p>Independently scheduling services improves scalability and elasticity  Increased modularity</p>
    <p>simplifies development</p>
    <p>CloudletUser Device Cloud Environment</p>
    <p>move (insuff. res. on device)</p>
    <p>video streaming</p>
    <p>move (reduce latency)</p>
    <p>player simulator</p>
    <p>world generator</p>
    <p>game analytics</p>
    <p>NPC simulator NPC</p>
    <p>simulator NPC</p>
    <p>simulator</p>
    <p>program simulator program simulator program simulator</p>
    <p>rendering</p>
    <p>state sychronizer</p>
    <p>state sychronizer</p>
    <p>state sychronizer</p>
    <p>move (reduce bandwidth)</p>
    <p>move (increase perf.)</p>
    <p>component simulator</p>
    <p>move (increase privacy)</p>
    <p>move (increase perf.)</p>
    <p>Player inputs Game state Videolegend:</p>
    <p>MVE virtual world Other MVE services Deployment environment</p>
    <p>Move service</p>
  </div>
  <div class="page">
    <p>Specialized Consistency Models  Quantify the amount of</p>
    <p>inconsistency in the system  Use policies that selectively</p>
    <p>and temporarily allow inconsistencies in places where players are unlikely to notice</p>
    <p>Improve scalability without reducing player experience</p>
    <p>CloudletUser Device Cloud Environment</p>
    <p>move (insuff. res. on device)</p>
    <p>video streaming</p>
    <p>move (reduce latency)</p>
    <p>player simulator</p>
    <p>world generator</p>
    <p>game analytics</p>
    <p>NPC simulator NPC</p>
    <p>simulator NPC</p>
    <p>simulator</p>
    <p>program simulator program simulator program simulator</p>
    <p>rendering</p>
    <p>state sychronizer</p>
    <p>state sychronizer</p>
    <p>state sychronizer</p>
    <p>move (reduce bandwidth)</p>
    <p>move (increase perf.)</p>
    <p>component simulator</p>
    <p>move (increase privacy)</p>
    <p>move (increase perf.)</p>
    <p>Player inputs Game state Videolegend:</p>
    <p>MVE virtual world Other MVE services Deployment environment</p>
    <p>Move service</p>
  </div>
  <div class="page">
    <p>Differentiated Deployment  MVE services are deployed</p>
    <p>across user devices, clouds, and cloudlets, depending on available resources and QoS constraints.</p>
    <p>Support user devices with few resources  Reduce load on the cloud</p>
    <p>and core network when possible</p>
    <p>CloudletUser Device Cloud Environment</p>
    <p>move (insuff. res. on device)</p>
    <p>video streaming</p>
    <p>move (reduce latency)</p>
    <p>player simulator</p>
    <p>world generator</p>
    <p>game analytics</p>
    <p>NPC simulator NPC</p>
    <p>simulator NPC</p>
    <p>simulator</p>
    <p>program simulator program simulator program simulator</p>
    <p>rendering</p>
    <p>state sychronizer</p>
    <p>state sychronizer</p>
    <p>state sychronizer</p>
    <p>move (reduce bandwidth)</p>
    <p>move (increase perf.)</p>
    <p>component simulator</p>
    <p>move (increase privacy)</p>
    <p>move (increase perf.)</p>
    <p>Player inputs Game state Videolegend:</p>
    <p>MVE virtual world Other MVE services Deployment environment</p>
    <p>Move service</p>
  </div>
  <div class="page">
    <p>Future Research Areas Towards Scalable, Cloud-Based MVEs</p>
  </div>
  <div class="page">
    <p>Serverless functions for independent scheduling of MVE services Using existing serverless architectures for MVE-related services  E.g., using PyWren,1 Graphless2 for game analytics</p>
    <p>Supporting more complex MVE services  E.g., generating terrain, simulators  Guaranteeing non-functional properties  Keeping (shared) state, communicating with other functions3</p>
  </div>
  <div class="page">
    <p>Dynamic consistency units to control and limit MVE inconsistency Quantifying and limiting inconsistency is possible using consistency units.1</p>
    <p>How to adapt this model for MVEs?  Real-time, interactive system  Players joining and leaving; players creating and removing content  Varying consistency requirements</p>
  </div>
  <div class="page">
    <p>Schedule services at cloudlets to resources to improve QoS and cost Using cloudlets for gaming looks promising  Offloading,1 rendering,2 game analytics3</p>
    <p>Supporting more MVE services  Moving computational MVE services to the edge  Concurrent rendering for gameplay broadcasting  Efficient resource usage  Storing and caching data</p>
  </div>
  <div class="page">
    <p>Take-Home Message</p>
  </div>
  <div class="page">
    <p>Towards Supporting Millions of Users in Modifiable Virtual Environments by Redesigning Minecraft-Like Games as</p>
    <p>Serverless Systems</p>
    <p>j.j.r.donkervliet@vu.nl @jdonkervliet https://atlarge-research.com/opencraft/</p>
    <p>Jesse Donkervliet, Animesh Trivedi, Alexandru Iosup</p>
  </div>
</Presentation>
