<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Teaching Software Projects at Universities in Tampere</p>
    <p>Lecturer Tero Ahtee, TUT, Institute of Software Systems</p>
    <p>Lecturer Timo Poranen, UTA, Department of Computer Sciences</p>
    <p>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</p>
    <p>TUT: 8 prof., 80 staff. Annually 100 masters, 2 PhD. UTA: 8 prof., 90 staff. Annually 50 masters, 5 PhDs.</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Software project courses are important for all information technology students:</p>
    <p>The course integrates the knowledge and skills from earlier courses</p>
    <p>(Probably) All software products are constructed in industry in projects or projects. Project skills are essential for all students</p>
    <p>The course gives a possibility to learn how to make a large software in a right way</p>
    <p>Provides a natural way to co-operate with industry (and other universities etc.)</p>
  </div>
  <div class="page">
    <p>Contents of this presentation</p>
    <p>Software projects at Tampere University of Technology and at University of Tampere</p>
    <p>Educational aims Main quality issues Lessons learnt in teaching Success and failure factors for projects Course improvement ideas Conclusions, and questions</p>
  </div>
  <div class="page">
    <p>Project courses overview</p>
    <p>Free, by students</p>
    <p>Set, by staffProject subject</p>
    <p>YesYes Possible for foreign students</p>
    <p>From group From senior course</p>
    <p>Project manager</p>
    <p>Free, by students</p>
    <p>Set, by staff Group forming</p>
    <p>TUT (4th year) UTA (3rd year)</p>
  </div>
  <div class="page">
    <p>Project subjects 2006-07</p>
    <p>TUT  12 www  4 mobile/embedded  10 stand-alone applications.</p>
    <p>UTA:  13 www  3 mobile  2 stand-alone applications.</p>
  </div>
  <div class="page">
    <p>Sample schedules</p>
    <p>V i i k k o</p>
    <p>T u n n it</p>
    <p>P P</p>
    <p>L A</p>
    <p>N v</p>
    <p>a lm</p>
    <p>is</p>
    <p>R S</p>
    <p>P E</p>
    <p>C v</p>
    <p>a lm</p>
    <p>is</p>
    <p>T P</p>
    <p>L A</p>
    <p>N v</p>
    <p>a lm</p>
    <p>is</p>
    <p>IP L</p>
    <p>A N</p>
    <p>v a</p>
    <p>lm is</p>
    <p>P P</p>
    <p>L A</p>
    <p>N</p>
    <p>P P L A N</p>
    <p>T P L A N</p>
    <p>F S P E C</p>
    <p>D E S IG N</p>
    <p>T R E P</p>
    <p>September October November Decenmber January February March April</p>
  </div>
  <div class="page">
    <p>Reported consumption of refreshment drinks during project weeks (TUT)</p>
  </div>
  <div class="page">
    <p>Project Course statistics 1</p>
  </div>
  <div class="page">
    <p>Project Course statistics 2</p>
    <p>Sample data from TUT projects 2006-07: 2946 - 34304 LOC 2574 - 27839 SLOC 18 - 160 classes 5 - 20 screens Up to 213 code files Productivity: e.g. 64 LOC/day Productivity: e.g. 10 LOC/hour (total hours) 285 - 709 document pages.</p>
  </div>
  <div class="page">
    <p>Course goals and educational aims Working in a large (1000 hours) sw project From requirements via design to features Constructing a real software product Writing technical documentation, understanding documentation</p>
    <p>Inspections (the formal ones, not reviews) Communication is not easy Group working Presentations Number of working days != calendar days (Xmas) Students have to think (a lot)!</p>
    <p>There is no silver bullet!</p>
  </div>
  <div class="page">
    <p>Quality issues 1: documents</p>
    <p>Both courses have extensive document templates Compulsory documents:</p>
    <p>Preliminary analysis / Feasibility study  Project plan  Requirements specification  Design document  Test plan  Test report  Final report  User manual, maintenance guide (at TUT)</p>
    <p>Other docs: depends on the project!</p>
  </div>
  <div class="page">
    <p>Quality issues 2: life-cycle models</p>
    <p>At TUT the used life-cycle model has not been set to any specific. Most have followed more or less waterfall model. Last course had 5 incremental groups. Early prototype has been encouraged.</p>
    <p>At UTA, students can choose their model, too. This started last year, before that only waterfall model was allowed.</p>
    <p>For UTA development model distribution, see page 2 of technical report Software Projects 2007</p>
    <p>http://www.cs.uta.fi/reports/dsarja/D-2007-7.pdf  8 Incremental, 6 waterfall, 4 iterative.</p>
  </div>
  <div class="page">
    <p>Quality issues 3: working methods Weekly reporting is compulsory Groups are encouraged to meet weekly, internet meetings should be used only in exceptional cases. Discussion forums are ok!</p>
    <p>(Programming) Workshops (hack fest / code camp) are often productive</p>
    <p>Project organisation at UTA: Project Manager and team. Steering group contains at least client, project manager, and lecturer. Meetings only in emergency situation.</p>
    <p>Version management (CVS, Subversion)  Compulsory inspections with some regular meetings with the course staff.</p>
  </div>
  <div class="page">
    <p>Quality issues 4: weekly reporting</p>
    <p>PROJECT _XYZ_ WEEKLY REPORT Subject: Project XYZ week 42</p>
    <p>PROJECT: (name or identification) DATE, NUMBER OF WEEK: IN WHAT PHASE OF PROJECT WE ARE NOW: SCHEDULE (OK or changes if exist): WHAT HAVE BEEN DONE AFTER PREVIOUS WEEKLY REPORT: WHAT WILL BE DONE BEFORE NEXT WEEKLY REPORT: NEXT MILESTONE/DELIVERABLE (what and when): WORKING HOURS OF PROJECT PERSONNEL: PROBLEMS IF EXIST (why ? how to solve them ?): WHAT PLANS HAVE BEEN CHANGED: MISCELLANEOUS (OTHER THINGS TO MENTION):</p>
  </div>
  <div class="page">
    <p>Quality issues 5: work distribution</p>
    <p>Some UTA weekly working hours Some TUT weekly working hours</p>
  </div>
  <div class="page">
    <p>Quality issues 6: Working hour table</p>
    <p>An example of TUT working hours table</p>
  </div>
  <div class="page">
    <p>Reported daily working time, according to CVS statistics (TUT)</p>
  </div>
  <div class="page">
    <p>Quality issues 7: Inspections</p>
    <p>Needed information for statistics: preparation time inspection time number of findings number of pages.</p>
    <p>TUT: 5+1 UTA: 4 inspections.</p>
  </div>
  <div class="page">
    <p>Quality issues 8: Inspection statistics</p>
    <p>Students like very much all kind of feedback.</p>
  </div>
  <div class="page">
    <p>Quality issues 9: final report, presentation and meeting After the project, groups have a public final presentation. Groups write final report, according to a document template.</p>
    <p>Main issues are  Risks and risk management during the project  Project management  Methods and tools (e.g. working hours)  Experiences and lessons learnt  Comments about the course  Statistics</p>
    <p>Final report is discussed with the group in the final meeting.</p>
  </div>
  <div class="page">
    <p>Lessons learnt (teaching) Try to collect data from projects systematically There is no upper limit for supervision hours for some project groups...</p>
    <p>A reasonable guidance limit and the number of course staff is a compromise (dept's resources)</p>
    <p>Co-operation with other courses (and universities) takes time, but is often very fruitfull and gives realism to the projects</p>
    <p>All projects are different, so you won't get too bored... (adds motivation in many ways)</p>
    <p>How to combine teaching and research? Own research projects and then publications...</p>
    <p>(a university lecturer is not required to do any research or PhD studies)</p>
  </div>
  <div class="page">
    <p>Project success factors</p>
    <p>Motivated students (almost all are) A client who has time to answer groups questions, and who is motivated, too</p>
    <p>Already familiar with tools Cool and interesting project topic Not too large and heavy project size Problems should be handled when they occur, not after the project!</p>
    <p>Programming should be started quite soon to avoid too optimistic productivity estimations. Especially in new technology projects.</p>
  </div>
  <div class="page">
    <p>Project failure factors</p>
    <p>Working while studying (most students do) Poor understanding about projects subject and clients business</p>
    <p>New tools No experience in estimating project size Third party components</p>
    <p>Trust me, this is a small and easy project a trained monkey can code this in three months</p>
    <p>I think you already know that, so I dont need to mention or document it it is so obvious that everybody knows it.</p>
  </div>
  <div class="page">
    <p>Future development ideas</p>
    <p>More collaboration with other courses (e.g. testing)</p>
    <p>More incremental/agile projects</p>
    <p>Comparison and study of groups working hours between universities (statistics).</p>
    <p>There is still a major challenge: students do not learn project work and management, and project size estimation, by reading a book. They have to complete a real project to learn those skills, and that takes time.</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Can, and should, be departments flagship course Gathers students all previous knowledge and skills Needs good basis; several large programming courses, sw eng basics and methods, data structures, sw architecture, testing, usability, databases, and maintenance courses</p>
    <p>Is demanding groupwork, but rewarding Respected by industry companies Enables seeding good sw eng practices to industry (e.g. inspections and final reports).</p>
  </div>
  <div class="page">
    <p>Conclusions ;-)</p>
    <p>A university without a sw project course is a loser Students consider Project Courses very good and important for their future</p>
    <p>Project Course is not project curse No known suicides or divorces among students ! Even course staff has survived many years the workload (The primary directive at TUT: absolutely NO project teaching between 00 and 06 hours Mon-Fri, and weekly working hours MUST always be under 100).</p>
    <p>Lecturer: No pain, no gain. Students: Not all pain is gain.</p>
  </div>
  <div class="page">
    <p>Some early hours work during cold dark nights</p>
    <p>Test plan: &quot;8.3.1.4 Test Group: Exit The Program There may be some impossible ways to exit the program that</p>
    <p>are not tested.&quot;</p>
    <p>Design document: &quot;2.1 Application environment It is an independent single-user software that doesn't need any</p>
    <p>other programs but by itself it doesn't do anything.&quot;</p>
    <p>Project plan: &quot;3.1.1 To the client When the project completes with success, the product is to be</p>
    <p>a part of later-finishing, more exhausting application.&quot; [should be exhaustive]</p>
  </div>
  <div class="page">
    <p>Thank you for listening the presentation!</p>
    <p>Now some questions about Project Courses ??? Any?</p>
  </div>
  <div class="page">
    <p>Project Course staff at TUT</p>
  </div>
  <div class="page">
    <p>We would like to hear other project courses experiences and statistics !</p>
    <p>tensu@cs.tut.fi tp@cs.uta.fi</p>
  </div>
</Presentation>
