<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Its Time to Revisit LRU vs. FIFO</p>
    <p>Ohad Eytan1,2, Danny Harnik1, Effi Ofer1,</p>
    <p>Roy Friedman2 and Ronen Kat1</p>
    <p>July 13, 2020</p>
    <p>HotStorage 20</p>
  </div>
  <div class="page">
    <p>The Essence of Caching</p>
    <p>A fast but relatively small storage location</p>
    <p>Temporarily store items from the real storage</p>
    <p>Improves performance if hit-ratio is high</p>
  </div>
  <div class="page">
    <p>The Essence of Caching</p>
    <p>A fast but relatively small storage location</p>
    <p>Temporarily store items from the real storage</p>
    <p>Improves performance if hit-ratio is high</p>
    <p>Hit</p>
    <p>Miss</p>
  </div>
  <div class="page">
    <p>LRU &amp; FIFO</p>
    <p>Least Recently Used and First In First Out Policies</p>
    <p>The core component of the cache is the admission/eviction policy  FIFO - holds the items in a queue:</p>
    <p>? On a miss: admit new item to the queue and evict the next in line</p>
    <p>? On a hit: no update is needed</p>
    <p>LRU - holds the items in a list: ? On a miss: add new item to list tail and evict item from list head</p>
    <p>? On a hit: move item to the list tail</p>
    <p>Both are simple &amp; efficient</p>
  </div>
  <div class="page">
    <p>Traditionally: LRU Considered Better</p>
  </div>
  <div class="page">
    <p>Traditionally: LRU Considered Better</p>
  </div>
  <div class="page">
    <p>Traditionally: LRU Considered Better</p>
  </div>
  <div class="page">
    <p>Traditionally: LRU Considered Better</p>
  </div>
  <div class="page">
    <p>Traditionally: LRU Considered Better</p>
  </div>
  <div class="page">
    <p>Traditionally: LRU Considered Better</p>
    <p>Does it still hold?</p>
  </div>
  <div class="page">
    <p>New World</p>
    <p>New workloads: ? Old world: file and block storage</p>
    <p>? Today: videos, social networks, big data,</p>
    <p>machine/deep learning</p>
    <p>In particular we are interested in object storage (e.g. Amazon S3, IBM COS)</p>
    <p>New scale of data: ? Orders of magnitude higher</p>
    <p>? Emergence of cloud storage and persistent</p>
    <p>storage caches</p>
    <p>? Cache metadata can potentially surpass memory</p>
  </div>
  <div class="page">
    <p>New World</p>
    <p>New workloads: ? Old world: file and block storage</p>
    <p>? Today: videos, social networks, big data,</p>
    <p>machine/deep learning</p>
    <p>In particular we are interested in object storage (e.g. Amazon S3, IBM COS)</p>
    <p>New scale of data: ? Orders of magnitude higher</p>
    <p>? Emergence of cloud storage and persistent</p>
    <p>storage caches</p>
    <p>? Cache metadata can potentially surpass memory</p>
  </div>
  <div class="page">
    <p>Motivation - Cloud Object Storage</p>
    <p>Data resides on an infinite scale remote hub  Local limited scale on a local spoke to improve latency</p>
    <p>? Possibly 100s of TBs in size</p>
    <p>? Some of the metadata will have to reside on persistent storage</p>
  </div>
  <div class="page">
    <p>Our Cost Model</p>
    <p>Metadata accesses:</p>
    <p>Hit rate paints only part of the picture  We formulated a cost model that accounts also for persistent</p>
    <p>storage latency:</p>
    <p>CostLRU = HRLRU  data+metadata</p>
    <p>(`Cache + `CacheMD ) + (1  HRLRU )  data</p>
    <p>`Remote</p>
    <p>CostFIFO = HRFIFO  data</p>
    <p>`Cache + (1  HRFIFO )  data</p>
    <p>`Remote</p>
  </div>
  <div class="page">
    <p>Our Cost Model</p>
    <p>Metadata accesses:</p>
    <p>Hit rate paints only part of the picture</p>
    <p>We formulated a cost model that accounts also for persistent storage latency:</p>
    <p>CostLRU = HRLRU  data+metadata</p>
    <p>(`Cache + `CacheMD ) + (1  HRLRU )  data</p>
    <p>`Remote</p>
    <p>CostFIFO = HRFIFO  data</p>
    <p>`Cache + (1  HRFIFO )  data</p>
    <p>`Remote</p>
  </div>
  <div class="page">
    <p>Our Cost Model</p>
    <p>Metadata accesses:</p>
    <p>Hit rate paints only part of the picture  We formulated a cost model that accounts also for persistent</p>
    <p>storage latency:</p>
    <p>CostLRU = HRLRU  data+metadata</p>
    <p>(`Cache + `CacheMD ) + (1  HRLRU )  data</p>
    <p>`Remote</p>
    <p>CostFIFO = HRFIFO  data</p>
    <p>`Cache + (1  HRFIFO )  data</p>
    <p>`Remote</p>
  </div>
  <div class="page">
    <p>IBM Cloud Object Storage Traces</p>
    <p>We collected 99 traces from IBM public Cloud Object Storage service  Over 850 millions accesses to over 150TB of data</p>
    <p>Some observations about the IBM traces: Great variance in object sizes Great variance in access patterns</p>
    <p>We are publishing the traces and encourage you to use it</p>
  </div>
  <div class="page">
    <p>IBM Cloud Object Storage Traces</p>
    <p>We collected 99 traces from IBM public Cloud Object Storage service  Over 850 millions accesses to over 150TB of data  Some observations about the IBM traces: Great variance in object sizes Great variance in access patterns</p>
    <p>We are publishing the traces and encourage you to use it</p>
  </div>
  <div class="page">
    <p>IBM Cloud Object Storage Traces</p>
    <p>We collected 99 traces from IBM public Cloud Object Storage service  Over 850 millions accesses to over 150TB of data  Some observations about the IBM traces: Great variance in object sizes Great variance in access patterns</p>
    <p>We are publishing the traces and encourage you to use it 7</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>We evaluated FIFO vs. LRU using 4 sets of traces:</p>
    <p>Group Traces Accesses Objects Objects Size</p>
    <p>Name # Millions Millions Gigabytes</p>
    <p>MSR 3 68 24 905</p>
    <p>SYSTOR 3 235 154 4,538</p>
    <p>TPCC 8 94 76 636</p>
    <p>IBM COS 99 858 149 161,869</p>
    <p>Tested different cache sizes (as percentage of trace object size)  Simulated different ratios between latency of cache and remote</p>
  </div>
  <div class="page">
    <p>Results</p>
    <p>Pure Hit Rate:</p>
  </div>
  <div class="page">
    <p>Results</p>
    <p>Cost Winners:</p>
    <p>`Cache = 1, `Remote = 50</p>
  </div>
  <div class="page">
    <p>Results</p>
    <p>Cost Heatmap:</p>
    <p>`Cache = 1, `Remote = 50</p>
    <p>Cache Size = 30%</p>
  </div>
  <div class="page">
    <p>Conclusions &amp; Discussion</p>
    <p>Its no longer clear that LRU is a better choice than FIFO  Hit rate doesnt tell the entire story  Our IBM COS traces can provide new insights and opportunities</p>
    <p>for research</p>
  </div>
  <div class="page">
    <p>Thank You!</p>
    <p>Ohad Eytan Effi Ofer</p>
    <p>ohadey@cs.technion.ac.il effio@il.ibm.com</p>
    <p>Danny Harnik</p>
    <p>dannyh@il.ibm.com</p>
    <p>Roy Friedman Ronen Kat</p>
    <p>roy@cs.technion.ac.il ronenkat@il.ibm.com</p>
  </div>
</Presentation>
