<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Shattered Chain of Trust: Understanding Security Risks in</p>
    <p>Cross-Cloud IoT Access Delegation</p>
    <p>Bin Yuan, Yan Jia, Luyi Xing,</p>
    <p>Dongfang Zhao, Xiaofeng Wang, Deqing Zou, Hai Jin, Yuqing Zhang</p>
  </div>
  <div class="page">
    <p>IoT Cloud</p>
    <p>The Cloud-based IoT Access</p>
    <p>Operated by  IoT device vendors</p>
    <p>Philips, August, LIFX, etc.</p>
    <p>Cloud service providers</p>
    <p>Google, Amazon, IFTTT, etc.</p>
  </div>
  <div class="page">
    <p>Cross-vendor/cross-cloud device control</p>
    <p>Manage different vendor devices through the same console</p>
    <p>Sharing of device access</p>
    <p>Share the access to the lock to an Airbnb guest (temporarily)</p>
    <p>Tuya plug LIFX bulb August lock</p>
    <p>A user uses Google Home to control all her devices from different vendors (e.g., Tuya plug, LIFX bulb, August lock)</p>
    <p>Cross-Cloud IoT Device Access</p>
  </div>
  <div class="page">
    <p>Delegation mechanisms in the wild  OAuth and its customization</p>
    <p>Actions on Google</p>
    <p>Custom authorization</p>
    <p>IFTTT &amp; SmartThings</p>
    <p>Convoluted delegation chain  across different clouds and users</p>
    <p>Cross-Cloud IoT Device Access Delegation</p>
    <p>IoT Devices</p>
    <p>register</p>
    <p>Device</p>
    <p>Vendor</p>
    <p>Cloud</p>
    <p>IoT</p>
    <p>Cloud</p>
    <p>delegate</p>
    <p>IoT</p>
    <p>Cloud</p>
    <p>delegate</p>
    <p>IoT</p>
    <p>Cloud</p>
    <p>delegate</p>
    <p>UserUser</p>
    <p>delegate delegate</p>
    <p>IoT</p>
    <p>Cloud</p>
    <p>IoT</p>
    <p>Cloud</p>
    <p>delegate delegate</p>
  </div>
  <div class="page">
    <p>Threat model</p>
    <p>Delegatee user can be malicious, while the administrator, cloud, and device are benign</p>
    <p>Goal of the adversary is to get unauthorized access to IoT devices</p>
    <p>The adversary would make full use of his power to acquire useful information, e.g., make API calls, extract information from system logs, official documentations and capture network traffic generated by/for his mobile app</p>
    <p>Security requirements</p>
    <p>Safe and consistent delegation policies</p>
    <p>Non-bypassable and transitive delegation control</p>
    <p>Threat Model &amp; Security Requirements</p>
  </div>
  <div class="page">
    <p>Theoretic models analyzed before  all parties run the same delegation protocol and interact through unified</p>
    <p>interfaces</p>
    <p>Delegation in todays real-world IoT clouds  individual, heterogeneous delegation protocols</p>
    <p>incompatible with other clouds</p>
    <p>not being properly verified</p>
    <p>Risks in Cross-Cloud Delegation</p>
  </div>
  <div class="page">
    <p>Violation of transitive delegation control in Tuya</p>
    <p>Google Home still holds a valid OAuth token ( issued by the Tuya cloud during the OAuth operation), allowing Google Home to access the Tuya plug even after the un-share operation</p>
    <p>Vulnerable Cross-Cloud IoT Delegation: a motivating example</p>
    <p>Tuya plug</p>
    <p>Register/Bind</p>
    <p>Tuya cloud Tuya user Google Home</p>
    <p>OAuth Token</p>
    <p>OAuthShare</p>
    <p>Un-Share</p>
  </div>
  <div class="page">
    <p>Observations from the Tuya Case</p>
    <p>Multiple operations supported in an IoT setting</p>
    <p>Data flow (e.g., token issuing and distributing) along with operations</p>
    <p>Access control check and access request forwarding</p>
    <p>Multi-step access path (with a valid token)</p>
  </div>
  <div class="page">
    <p>Towards Vulnerability Discovery More Automatically</p>
    <p>Formal verification based IoT cross-cloud delegation vulnerability discovery</p>
    <p>Common delegation pattern identified in different settings</p>
  </div>
  <div class="page">
    <p>Security property</p>
    <p>unauthorized delegatee user should not have a path to the IoT devices which he is not entitled to access</p>
    <p>VerioT: the first (semi-automatic) verification tool for IoT cross-cloud delegation vulnerability discovery</p>
    <p>IoT delegation modeled as a transition system  is the set of actors (e.g., device, cloud, user)</p>
    <p>is the set of operations (e.g., OAuth, share, un-share, bind, unbind, APIRequest, etc.)</p>
    <p>is the set of states, where is the initial state (where no delegation happens)</p>
    <p>Tokens received and issued during delegation and the access control mapping between these tokens</p>
    <p>is a function that drives the transition from one state to the next</p>
    <p>Detecting flaws</p>
    <p>leveraging a model checker to verify whether pre-defined security properties hold in the model</p>
  </div>
  <div class="page">
    <p>Modeling different real-world IoT system</p>
    <p>Refinement: base model, operation template, and configuration</p>
    <p>VerioT: the first (semi-automatic) verification tool for IoT cross-cloud delegation vulnerability discovery</p>
    <p>The architecture of VerioT</p>
  </div>
  <div class="page">
    <p>Mis-aligned security requirements between clouds</p>
    <p>Googles lack of knowledge about the security implication of SmartThings device ID</p>
    <p>Findings 1: Inadequate Cross-Cloud Coordination</p>
    <p>Malicious delegatee user (e.g., an Airbnb guest) can use the device ID to spoof events to trigger SmartThings to open the lock even after he checks out</p>
    <p>Google Home cloud</p>
    <p>August</p>
    <p>smart lock</p>
    <p>SmartThings cloud SmartThings</p>
    <p>switch</p>
    <p>SmartThings</p>
    <p>hub</p>
    <p>SmartAPPBind</p>
    <p>deviceID</p>
    <p>OAuth</p>
    <p>Google Home user</p>
    <p>delegatee user</p>
    <p>Share</p>
    <p>deviceID</p>
    <p>Un-OAuth</p>
    <p>Unauthorized access path</p>
  </div>
  <div class="page">
    <p>Philips Hue</p>
    <p>user</p>
    <p>Share</p>
    <p>Incomplete revocation scheme in the delegator cloud</p>
    <p>Philips Hue cloud only invalidates the token which is used for access check in the device, not the token that is used for authentication in the cloud</p>
    <p>Findings 2: Inadequate Policy Enforcement</p>
    <p>Malicious delegatee user can abuse the API to regain remote access to the Philips Hue devices even after the administrator revokes his access right</p>
    <p>Un-share</p>
    <p>APIRequest</p>
    <p>delegatee cloud</p>
    <p>Whitelist ID</p>
    <p>OAuth Token</p>
    <p>Unauthorized access path</p>
    <p>Philips Hue</p>
    <p>devices</p>
    <p>Bind</p>
    <p>Philips Hue</p>
    <p>cloud</p>
    <p>Whitelist ID</p>
  </div>
  <div class="page">
    <p>Root cause</p>
    <p>Heterogeneous and ad-hoc delegation process (because of the absence of a standardized, fully verified cross-cloud delegation protocol)</p>
    <p>Lessons learnt</p>
    <p>The caution one should take when applying a custom cross-cloud authorization scheme to todays already complicated IoT delegation</p>
    <p>the delegator and the delegatee violate each others security policies</p>
    <p>problematic security policy enforcement due to lack of rigorous verification</p>
    <p>New design principles</p>
    <p>Communicating security assumptions and constraints</p>
    <p>Decoupling the delegatee and the delegator clouds</p>
    <p>Verifying delegation design whenever possible</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Thanks!</p>
    <p>Please refer to our website for the source code of our tool, the vendor response to our responsible disclosure, the PoC attack demos and the full list of affected vendors</p>
    <p>https://sites.google.com/view/shattered-chain-of-trust-under/home?authuser=0</p>
  </div>
</Presentation>
