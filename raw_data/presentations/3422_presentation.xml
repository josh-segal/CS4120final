<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Malton: Towards On-Device Non-Invasive Mobile Malware Analysis for ART</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>https://www.gdatasoftware.com/blog/2017/04/29666-malware-trends-2017</p>
  </div>
  <div class="page">
    <p>https://www.gdatasoftware.com/blog/2017/04/29666-malware-trends-2017</p>
    <p>In 2016, a malware per 4.6 sec</p>
  </div>
  <div class="page">
    <p>https://www.gdatasoftware.com/blog/2017/04/29666-malware-trends-2017</p>
    <p>In 2016, a malware per 4.6 sec In Q1/2017, a malware per 4.2 sec</p>
  </div>
  <div class="page">
    <p>Existing Android Malware Analysis Tools</p>
  </div>
  <div class="page">
    <p>Focus on a specific layer 1</p>
    <p>e.g., DroidBox (Android framework layer), DroidTrace (System layer)</p>
    <p>Existing Android Malware Analysis Tools</p>
  </div>
  <div class="page">
    <p>Focus on a specific layer 1</p>
    <p>e.g., DroidBox (Android framework layer), DroidTrace (System layer)</p>
    <p>Run in the emulator2 e.g., DroidScope, Copperdroid (QEMU)</p>
    <p>Existing Android Malware Analysis Tools</p>
  </div>
  <div class="page">
    <p>Focus on a specific layer 1</p>
    <p>e.g., DroidBox (Android framework layer), DroidTrace (System layer)</p>
    <p>Run in the emulator2 e.g., DroidScope, Copperdroid (QEMU)</p>
    <p>Modify the DVM or the compiler of ART3 e.g., TaindDroid (DVM), TaintART, ARTist (dex2oat of ART)</p>
    <p>Existing Android Malware Analysis Tools</p>
  </div>
  <div class="page">
    <p>Focus on a specific layer 1</p>
    <p>e.g., DroidBox (Android framework layer), DroidTrace (System layer)</p>
    <p>Run in the emulator2 e.g., DroidScope, Copperdroid (QEMU)</p>
    <p>Modify the DVM or the compiler of ART3 e.g., TaindDroid (DVM), TaintART, ARTist (dex2oat of ART)</p>
    <p>Existing Android Malware Analysis Tools</p>
  </div>
  <div class="page">
    <p>Malware</p>
  </div>
  <div class="page">
    <p>Mechanisms for evading detection</p>
    <p>Malware</p>
  </div>
  <div class="page">
    <p>Mechanisms for evading detection</p>
    <p>Detect Android emulator1</p>
    <p>Malware</p>
  </div>
  <div class="page">
    <p>Mechanisms for evading detection</p>
    <p>Detect Android emulator1</p>
    <p>Anti Debugging2</p>
    <p>Malware</p>
  </div>
  <div class="page">
    <p>Mechanisms for evading detection</p>
    <p>Detect Android emulator1</p>
    <p>Anti Debugging2</p>
    <p>Obfuscation and packing3 Malware</p>
  </div>
  <div class="page">
    <p>Mechanisms for evading detection</p>
    <p>Detect Android emulator1</p>
    <p>Anti Debugging2</p>
    <p>Obfuscation and packing3</p>
    <p>Malton</p>
    <p>Malware</p>
  </div>
  <div class="page">
    <p>On-device and Non-invasive Analysis for ART</p>
    <p>Mechanisms for evading detection</p>
    <p>Detect Android emulator1</p>
    <p>Anti Debugging2</p>
    <p>Obfuscation and packing3</p>
    <p>Malton</p>
    <p>Malware</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Motivating Example</p>
    <p>The New Android Runtime (ART)</p>
    <p>Malton</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Motivating Example</p>
  </div>
  <div class="page">
    <p>Handle received SMS</p>
    <p>Motivating Example</p>
  </div>
  <div class="page">
    <p>Motivating Example</p>
  </div>
  <div class="page">
    <p>Handle received SMS Check the source of SMS</p>
    <p>Parse commands in SMS</p>
    <p>Motivating Example</p>
  </div>
  <div class="page">
    <p>Handle received SMS Check the source of SMS</p>
    <p>Parse commands in SMS</p>
    <p>Take actions according to commands</p>
    <p>Motivating Example</p>
  </div>
  <div class="page">
    <p>Challenges</p>
  </div>
  <div class="page">
    <p>Challenges</p>
  </div>
  <div class="page">
    <p>Identify the cross-layer information flow</p>
    <p>Challenges</p>
  </div>
  <div class="page">
    <p>Identify the cross-layer information flow</p>
    <p>Challenges</p>
  </div>
  <div class="page">
    <p>Expose all malicious payloads triggered by various commands efficiently</p>
    <p>Identify the cross-layer information flow</p>
    <p>Challenges</p>
  </div>
  <div class="page">
    <p>Expose all malicious payloads triggered by various commands efficiently</p>
    <p>Identify the cross-layer information flow</p>
    <p>Challenges</p>
  </div>
  <div class="page">
    <p>Force app to execute a certain path if the desired input cannot be generated.</p>
    <p>Expose all malicious payloads triggered by various commands efficiently</p>
    <p>Identify the cross-layer information flow</p>
    <p>Challenges</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Motivating Example</p>
    <p>The New Android Runtime (ART)</p>
    <p>Malton</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>libdvm.so Dalvik bytecode</p>
    <p>DEX</p>
    <p>dexopt</p>
    <p>ODEX</p>
    <p>Dalvik bytecode</p>
    <p>Just in Time</p>
    <p>Optimized bytecode</p>
    <p>Runtime</p>
    <p>DVM</p>
    <p>Android Runtime</p>
  </div>
  <div class="page">
    <p>libdvm.so Dalvik bytecode</p>
    <p>DEX</p>
    <p>dexopt</p>
    <p>ODEX</p>
    <p>Dalvik bytecode</p>
    <p>Just in Time</p>
    <p>Optimized bytecode</p>
    <p>Runtime</p>
    <p>DVM</p>
    <p>libart.so Either bytecode or native code</p>
    <p>DEX</p>
    <p>dex2oat</p>
    <p>OAT Native code and bytecode</p>
    <p>Dalvik bytecode</p>
    <p>Ahead of Time</p>
    <p>ART</p>
    <p>Android Runtime</p>
  </div>
  <div class="page">
    <p>The OAT File</p>
  </div>
  <div class="page">
    <p>The OAT File</p>
    <p>Parse OAT files</p>
  </div>
  <div class="page">
    <p>The OAT File</p>
    <p>Parse OAT files</p>
    <p>Get the code regions of compiled methods</p>
  </div>
  <div class="page">
    <p>The OAT File</p>
    <p>Parse OAT files</p>
    <p>Get the code regions of compiled methods</p>
    <p>Track methods according to the execution of the compiled code</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Motivating Example</p>
    <p>The New Android Runtime (ART)</p>
    <p>Malton</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>Running on a real device;  Conducting cross-layer monitoring and information flow tracking;  Doesnt need to modify the app.</p>
  </div>
  <div class="page">
    <p>Malton</p>
    <p>Running on a real device;  Conducting cross-layer monitoring and information flow tracking;  Doesnt need to modify the app.</p>
  </div>
  <div class="page">
    <p>Malton</p>
    <p>Running on a real device;  Conducting cross-layer monitoring and information flow tracking;  Doesnt need to modify the app.</p>
  </div>
  <div class="page">
    <p>Malton</p>
    <p>Running on a real device;  Conducting cross-layer monitoring and information flow tracking;  Doesnt need to modify the app.</p>
  </div>
  <div class="page">
    <p>Malton</p>
    <p>Running on a real device;  Conducting cross-layer monitoring and information flow tracking;  Doesnt need to modify the app.</p>
    <p>Comprehensive Behaviors</p>
  </div>
  <div class="page">
    <p>Malton</p>
    <p>Running on a real device;  Conducting cross-layer monitoring and information flow tracking;  Doesnt need to modify the app.</p>
    <p>Comprehensive Behaviors</p>
  </div>
  <div class="page">
    <p>M alton</p>
    <p>The Design of Malton</p>
    <p>Android Application (APK)</p>
    <p>Smartphone</p>
    <p>Android Framework</p>
    <p>Android Runtime</p>
    <p>System Libraries</p>
    <p>Kernel</p>
  </div>
  <div class="page">
    <p>Android Framework Layer</p>
  </div>
  <div class="page">
    <p>Android Framework Layer</p>
    <p>OAT File Parser  Get the beginning addresses of the compiled methods.  Get the types of the methods parameters and return values.</p>
  </div>
  <div class="page">
    <p>Android Framework Layer</p>
    <p>OAT File Parser  Get the beginning addresses of the compiled methods.  Get the types of the methods parameters and return values.</p>
    <p>Java Method Tracker  Get information about the invoked methods with their parameters.  Get information about the returned methods with results.</p>
  </div>
  <div class="page">
    <p>Android Framework Layer</p>
    <p>OAT File Parser  Get the beginning addresses of the compiled methods.  Get the types of the methods parameters and return values.</p>
    <p>Java Method Tracker  Get information about the invoked methods with their parameters.  Get information about the returned methods with results.</p>
    <p>Java Object Parser  Get the content stored in Java class instance.</p>
    <p>(i.e., result of TelephonyManager.getDeviceId() )</p>
  </div>
  <div class="page">
    <p>Android Framework Layer</p>
    <p>OAT File Parser  Get the beginning addresses of the compiled methods.  Get the types of the methods parameters and return values.</p>
    <p>Java Method Tracker  Get information about the invoked methods with their parameters.  Get information about the returned methods with results.</p>
    <p>Java Object Parser  Get the content stored in Java class instance.</p>
    <p>(i.e., result of TelephonyManager.getDeviceId() )</p>
    <p>StringObject object_.klass_ object_.monitor_ .. value: 6534900622308366</p>
  </div>
  <div class="page">
    <p>Android Framework Layer</p>
    <p>OAT File Parser  Get the beginning addresses of the compiled methods.  Get the types of the methods parameters and return values.</p>
    <p>Java Method Tracker  Get information about the invoked methods with their parameters.  Get information about the returned methods with results.</p>
    <p>Java Object Parser  Get the content stored in Java class instance.</p>
    <p>(i.e., result of TelephonyManager.getDeviceId() )</p>
    <p>StringObject object_.klass_ object_.monitor_ .. value: 6534900622308366</p>
  </div>
  <div class="page">
    <p>Android Runtime Layer</p>
  </div>
  <div class="page">
    <p>Android Runtime Layer</p>
    <p>Native Code Loading  Track the dynamically loaded native code</p>
  </div>
  <div class="page">
    <p>Android Runtime Layer</p>
    <p>Native Code Loading  Track the dynamically loaded native code</p>
    <p>Java Code Loading  Track the dynamically loaded Java code</p>
  </div>
  <div class="page">
    <p>Android Runtime Layer</p>
    <p>Native Code Loading  Track the dynamically loaded native code</p>
    <p>Java Code Loading  Track the dynamically loaded Java code</p>
    <p>JNI Invocation  Track the native methods invoked by Java code</p>
  </div>
  <div class="page">
    <p>Android Runtime Layer</p>
    <p>Native Code Loading  Track the dynamically loaded native code</p>
    <p>Java Code Loading  Track the dynamically loaded Java code</p>
    <p>JNI Invocation  Track the native methods invoked by Java code</p>
    <p>JNI Reflection  Track the Java methods invoked by native code</p>
  </div>
  <div class="page">
    <p>Android Runtime Layer</p>
    <p>Native Code Loading  Track the dynamically loaded native code</p>
    <p>Java Code Loading  Track the dynamically loaded Java code</p>
    <p>JNI Invocation  Track the native methods invoked by Java code</p>
    <p>JNI Reflection  Track the Java methods invoked by native code</p>
    <p>Java Reflection  Track the Java methods invoked through Java reflection</p>
  </div>
  <div class="page">
    <p>Android Runtime Layer</p>
    <p>Native Code Loading  Track the dynamically loaded native code</p>
    <p>Java Code Loading  Track the dynamically loaded Java code</p>
    <p>JNI Invocation  Track the native methods invoked by Java code</p>
    <p>JNI Reflection  Track the Java methods invoked by native code</p>
    <p>Java Reflection  Track the Java methods invoked through Java reflection</p>
    <p>Malton can be easily extended to support the tracking of new behaviors.</p>
  </div>
  <div class="page">
    <p>System Layer</p>
  </div>
  <div class="page">
    <p>System Layer</p>
    <p>Network Operations  Monitor information leaked through network.  Monitor the received remote commands.</p>
  </div>
  <div class="page">
    <p>System Layer</p>
    <p>Network Operations  Monitor information leaked through network.  Monitor the received remote commands.</p>
    <p>File Operations  Monitor the access of personal files in storage.  Monitor dynamically released and deleted data.</p>
  </div>
  <div class="page">
    <p>System Layer</p>
    <p>Network Operations  Monitor information leaked through network.  Monitor the received remote commands.</p>
    <p>File Operations  Monitor the access of personal files in storage.  Monitor dynamically released and deleted data.</p>
    <p>Memory Operations  Monitor dynamically memory modification .</p>
  </div>
  <div class="page">
    <p>System Layer</p>
    <p>Network Operations  Monitor information leaked through network.  Monitor the received remote commands.</p>
    <p>File Operations  Monitor the access of personal files in storage.  Monitor dynamically released and deleted data.</p>
    <p>Memory Operations  Monitor dynamically memory modification .</p>
    <p>Process Operations  Monitor protection behaviors (e.g., anti-emulator and anti-debugging)</p>
  </div>
  <div class="page">
    <p>Instruction Layer</p>
  </div>
  <div class="page">
    <p>Instruction Layer</p>
    <p>Taint Propagation Track the information leakage flow.</p>
  </div>
  <div class="page">
    <p>Instruction Layer</p>
    <p>Taint Propagation Track the information leakage flow.</p>
    <p>In-memory Concolic Execution Explore more execution paths.</p>
  </div>
  <div class="page">
    <p>Instruction Layer</p>
    <p>Taint Propagation Track the information leakage flow.</p>
    <p>In-memory Concolic Execution Explore more execution paths.</p>
    <p>Direct Execution Explore execution path, of which no input is generated.</p>
  </div>
  <div class="page">
    <p>Taint Propagation</p>
    <p>We propagate taint tags according to the logics of 9 IR statements and 11 IR expressions.</p>
    <p>t12 = Load(0xabcd1234) Put(8) = t12</p>
    <p>Execution</p>
  </div>
  <div class="page">
    <p>Taint Propagation</p>
    <p>We propagate taint tags according to the logics of 9 IR statements and 11 IR expressions.</p>
    <p>t12 = Load(0xabcd1234) Put(8) = t12</p>
    <p>Taint(t12) = Taint(0xabcd1234) Taint(8) = Taint(t12)</p>
    <p>Execution Taint propagations</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>CMD</p>
    <p>Z3 Resolver</p>
    <p>Desktop</p>
    <p>APP</p>
    <p>Phone Concolic Execution with Offloading Mechanism</p>
    <p>cq</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>CMD</p>
    <p>Z3 Resolver</p>
    <p>Desktop</p>
    <p>APP</p>
    <p>Phone</p>
    <p>Constraints</p>
    <p>Concolic Execution with Offloading Mechanism</p>
    <p>cq</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>CMD</p>
    <p>Z3 Resolver</p>
    <p>Desktop</p>
    <p>APP</p>
    <p>Phone</p>
    <p>Constraints</p>
    <p>Inputs</p>
    <p>Concolic Execution with Offloading Mechanism</p>
    <p>cq</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>CMD</p>
    <p>cq</p>
    <p>qf</p>
    <p>df</p>
    <p>CMD</p>
    <p>Z3 Resolver</p>
    <p>Desktop</p>
    <p>APP</p>
    <p>Phone</p>
    <p>Constraints</p>
    <p>Inputs</p>
    <p>Concolic Execution with Offloading Mechanism</p>
    <p>cq</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>CMD</p>
    <p>cq</p>
    <p>qf</p>
    <p>df</p>
    <p>CMD</p>
    <p>Z3 Resolver</p>
    <p>Desktop</p>
    <p>APP</p>
    <p>Phone</p>
    <p>Constraints</p>
    <p>Inputs</p>
    <p>Concolic Execution with Offloading Mechanism</p>
    <p>Constraints: CMD == cq ? CMD == qf ? CMD == df ?</p>
    <p>cq</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>CMD</p>
    <p>cq</p>
    <p>qf</p>
    <p>df</p>
    <p>CMD</p>
    <p>Z3 Resolver</p>
    <p>Desktop</p>
    <p>APP</p>
    <p>Phone</p>
    <p>Constraints</p>
    <p>Inputs</p>
    <p>Concolic Execution with Offloading Mechanism</p>
    <p>Constraints: CMD == cq ? CMD == qf ? CMD == df ?</p>
    <p>Inputs: CMD = cq CMD = qf CMD = df</p>
    <p>cq</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>CMD</p>
    <p>cq</p>
    <p>qf</p>
    <p>df</p>
    <p>CMD</p>
    <p>Z3 Resolver</p>
    <p>Desktop</p>
    <p>APP</p>
    <p>Phone</p>
    <p>Constraints</p>
    <p>Inputs</p>
    <p>Concolic Execution with Offloading Mechanism</p>
    <p>Constraints: CMD == cq ? CMD == qf ? CMD == df ?</p>
    <p>Inputs: CMD = cq CMD = qf CMD = df</p>
    <p>CMD = cq</p>
    <p>CMD</p>
    <p>cq</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>CMD</p>
    <p>cq</p>
    <p>qf</p>
    <p>df</p>
    <p>CMD</p>
    <p>qf</p>
    <p>CMD = qf</p>
    <p>Z3 Resolver</p>
    <p>Desktop</p>
    <p>APP</p>
    <p>Phone</p>
    <p>Constraints</p>
    <p>Inputs</p>
    <p>Concolic Execution with Offloading Mechanism</p>
    <p>Constraints: CMD == cq ? CMD == qf ? CMD == df ?</p>
    <p>Inputs: CMD = cq CMD = qf CMD = df</p>
    <p>CMD = cq</p>
    <p>CMD</p>
    <p>cq</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>CMD</p>
    <p>cq</p>
    <p>qf</p>
    <p>df</p>
    <p>CMD</p>
    <p>qf</p>
    <p>CMD = qf</p>
    <p>Z3 Resolver</p>
    <p>Desktop</p>
    <p>APP</p>
    <p>Phone</p>
    <p>Constraints</p>
    <p>Inputs</p>
    <p>Concolic Execution with Offloading Mechanism</p>
    <p>Constraints: CMD == cq ? CMD == qf ? CMD == df ?</p>
    <p>Inputs: CMD = cq CMD = qf CMD = df</p>
    <p>CMD = cq</p>
    <p>CMD</p>
    <p>CMD = df</p>
    <p>df</p>
    <p>cq</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>CMD</p>
    <p>cq</p>
    <p>qf</p>
    <p>df</p>
    <p>CMD</p>
    <p>qf</p>
    <p>CMD = qf</p>
    <p>Z3 Resolver</p>
    <p>Desktop</p>
    <p>APP</p>
    <p>Phone</p>
    <p>Constraints</p>
    <p>Inputs</p>
    <p>Concolic Execution with Offloading Mechanism</p>
    <p>Constraints: CMD == cq ? CMD == qf ? CMD == df ?</p>
    <p>Inputs: CMD = cq CMD = qf CMD = df</p>
    <p>CMD = cq</p>
    <p>CMD</p>
    <p>CMD = df</p>
    <p>df</p>
    <p>cq</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>In-memory optimization Run specified code regions iteratively with different inputs</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>In-memory optimization Run specified code regions iteratively with different inputs</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>In-memory optimization Run specified code regions iteratively with different inputs</p>
    <p>cm d =cm</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>In-memory optimization Run specified code regions iteratively with different inputs</p>
    <p>cm d =cm</p>
    <p>cm d =cq</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>In-memory optimization Run specified code regions iteratively with different inputs</p>
    <p>cm d =cm</p>
    <p>cm d =cq</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>In-memory optimization Run specified code regions iteratively with different inputs</p>
    <p>cm d =cm</p>
    <p>cm d =cq</p>
    <p>Direct Execution Force an app execute a path without input</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>In-memory optimization Run specified code regions iteratively with different inputs</p>
    <p>cm d =cm</p>
    <p>cm d =cq</p>
    <p>Direct Execution Force an app execute a path without input</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>In-memory optimization Run specified code regions iteratively with different inputs</p>
    <p>cm d =cm</p>
    <p>cm d =cq</p>
    <p>Direct Execution Force an app execute a path without input</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>In-memory optimization Run specified code regions iteratively with different inputs</p>
    <p>cm d =cm</p>
    <p>cm d =cq</p>
    <p>Direct Execution Force an app execute a path without input</p>
    <p>IR: if(t) Return Set t = False</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Motivating Example</p>
    <p>The New Android Runtime (ART)</p>
    <p>Malton</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Discovering Sensitive Operations</p>
    <p>Behavior CopperDroid DroidBox Malton</p>
    <p>Personal Info 435 (85.0%) 135 (26.4%) 511 (99.8%)</p>
    <p>Network access 351 (68.5%) 211 (41.2%) 445 (86.9%)</p>
    <p>File access 438 (85.5%) 509 (99.4%) 512 (100%)</p>
    <p>Phone call 52 (10.1%) 1 (0.2%) 59 (11.5%)</p>
    <p>Send SMS 26 (5.1%) 15 (2.9%) 28 (5.5%)</p>
    <p>Java code loading NA 509 (99.4%) 512 (100%)</p>
    <p>Anti-debugging 4 (0.8%) NA 4 (0.8%)</p>
    <p>Native code loading NA NA 160 (31.2%)  512 samples and results of CopperDroid are downloaded from its web servers.</p>
  </div>
  <div class="page">
    <p>Discovering Sensitive Operations</p>
    <p>Behavior CopperDroid DroidBox Malton</p>
    <p>Personal Info 435 (85.0%) 135 (26.4%) 511 (99.8%)</p>
    <p>Network access 351 (68.5%) 211 (41.2%) 445 (86.9%)</p>
    <p>File access 438 (85.5%) 509 (99.4%) 512 (100%)</p>
    <p>Phone call 52 (10.1%) 1 (0.2%) 59 (11.5%)</p>
    <p>Send SMS 26 (5.1%) 15 (2.9%) 28 (5.5%)</p>
    <p>Java code loading NA 509 (99.4%) 512 (100%)</p>
    <p>Anti-debugging 4 (0.8%) NA 4 (0.8%)</p>
    <p>Native code loading NA NA 160 (31.2%)  512 samples and results of CopperDroid are downloaded from its web servers.</p>
  </div>
  <div class="page">
    <p>Discovering Sensitive Operations</p>
    <p>Result: Malton can capture more sensitive behaviors thanks to its on-device and cross-layer inspection.</p>
    <p>Behavior CopperDroid DroidBox Malton</p>
    <p>Personal Info 435 (85.0%) 135 (26.4%) 511 (99.8%)</p>
    <p>Network access 351 (68.5%) 211 (41.2%) 445 (86.9%)</p>
    <p>File access 438 (85.5%) 509 (99.4%) 512 (100%)</p>
    <p>Phone call 52 (10.1%) 1 (0.2%) 59 (11.5%)</p>
    <p>Send SMS 26 (5.1%) 15 (2.9%) 28 (5.5%)</p>
    <p>Java code loading NA 509 (99.4%) 512 (100%)</p>
    <p>Anti-debugging 4 (0.8%) NA 4 (0.8%)</p>
    <p>Native code loading NA NA 160 (31.2%)  512 samples and results of CopperDroid are downloaded from its web servers.</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>Command Detected behavior No. of executed blocks</p>
    <p>cq Read information SMS contents, contacts, device model and system version, then send to 292019159c@fcvh77f.com with password aAaccvv11 through SMTP protocol.</p>
    <p>qf Send SMS to all contacts with no SMS content. 7k/20537k</p>
    <p>df Send SMS to specified number, and both the number and content are specified by the command SMS.</p>
    <p>zy Set unconditional call forwarding through making call to **21* targetNum%23. 8k/22848k</p>
    <p>by Set call forwarding when the phone is busy through making call to %23%23targetNum%23.</p>
    <p>ld, fd, dh, cz, fx, sx, dc, bc</p>
    <p>Modify the its configuration file zzxx.xml. 5k-18k/20403k-20452k</p>
    <p>Others Tell the controller the command format is error by replying an SMS. 15k/20443k</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>Command Detected behavior No. of executed blocks</p>
    <p>cq Read information SMS contents, contacts, device model and system version, then send to 292019159c@fcvh77f.com with password aAaccvv11 through SMTP protocol.</p>
    <p>qf Send SMS to all contacts with no SMS content. 7k/20537k</p>
    <p>df Send SMS to specified number, and both the number and content are specified by the command SMS.</p>
    <p>zy Set unconditional call forwarding through making call to **21* targetNum%23. 8k/22848k</p>
    <p>by Set call forwarding when the phone is busy through making call to %23%23targetNum%23.</p>
    <p>ld, fd, dh, cz, fx, sx, dc, bc</p>
    <p>Modify the its configuration file zzxx.xml. 5k-18k/20403k-20452k</p>
    <p>Others Tell the controller the command format is error by replying an SMS. 15k/20443k</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>Command Detected behavior No. of executed blocks</p>
    <p>cq Read information SMS contents, contacts, device model and system version, then send to 292019159c@fcvh77f.com with password aAaccvv11 through SMTP protocol.</p>
    <p>qf Send SMS to all contacts with no SMS content. 7k/20537k</p>
    <p>df Send SMS to specified number, and both the number and content are specified by the command SMS.</p>
    <p>zy Set unconditional call forwarding through making call to **21* targetNum%23. 8k/22848k</p>
    <p>by Set call forwarding when the phone is busy through making call to %23%23targetNum%23.</p>
    <p>ld, fd, dh, cz, fx, sx, dc, bc</p>
    <p>Modify the its configuration file zzxx.xml. 5k-18k/20403k-20452k</p>
    <p>Others Tell the controller the command format is error by replying an SMS. 15k/20443k</p>
    <p>With in-memory optimization: 5k</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>Command Detected behavior No. of executed blocks</p>
    <p>cq Read information SMS contents, contacts, device model and system version, then send to 292019159c@fcvh77f.com with password aAaccvv11 through SMTP protocol.</p>
    <p>qf Send SMS to all contacts with no SMS content. 7k/20537k</p>
    <p>df Send SMS to specified number, and both the number and content are specified by the command SMS.</p>
    <p>zy Set unconditional call forwarding through making call to **21* targetNum%23. 8k/22848k</p>
    <p>by Set call forwarding when the phone is busy through making call to %23%23targetNum%23.</p>
    <p>ld, fd, dh, cz, fx, sx, dc, bc</p>
    <p>Modify the its configuration file zzxx.xml. 5k-18k/20403k-20452k</p>
    <p>Others Tell the controller the command format is error by replying an SMS. 15k/20443k</p>
    <p>With in-memory optimization: 5k</p>
    <p>Without in-memory optimization: 22,970k</p>
  </div>
  <div class="page">
    <p>Path Exploration</p>
    <p>Result: Malton can explore paths effectively and efficiently because of the in-memory optimized concolic execution.</p>
    <p>Command Detected behavior No. of executed blocks</p>
    <p>cq Read information SMS contents, contacts, device model and system version, then send to 292019159c@fcvh77f.com with password aAaccvv11 through SMTP protocol.</p>
    <p>qf Send SMS to all contacts with no SMS content. 7k/20537k</p>
    <p>df Send SMS to specified number, and both the number and content are specified by the command SMS.</p>
    <p>zy Set unconditional call forwarding through making call to **21* targetNum%23. 8k/22848k</p>
    <p>by Set call forwarding when the phone is busy through making call to %23%23targetNum%23.</p>
    <p>ld, fd, dh, cz, fx, sx, dc, bc</p>
    <p>Modify the its configuration file zzxx.xml. 5k-18k/20403k-20452k</p>
    <p>Others Tell the controller the command format is error by replying an SMS. 15k/20443k</p>
    <p>With in-memory optimization: 5k</p>
    <p>Without in-memory optimization: 22,970k</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Motivating Example</p>
    <p>The New Android Runtime</p>
    <p>Malton</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
  <div class="page"/>
</Presentation>
