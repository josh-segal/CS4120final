<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Weiss</p>
    <p>Berlin Institute of TechnologyBerlin Institute of Technology FG Security in Telecommunications</p>
    <p>SMS of Death: from analyzing to attacking mobile phones on a large scale</p>
    <p>USENIX Security 2011</p>
    <p>Collin Mulliner, Nico Golde, Jean-Pierre Seifert</p>
    <p>{collin,nico,jpseifert}@sec.t-labs.tu-berlin.de</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Mobile phone security is a hot topic, but...  Previous work only focused on smartphones</p>
    <p>We always got the question: can you hack my cheap phone?  Cheap phone  Feature Phone</p>
    <p>This work targets feature phones  We investigate the (in)security of SMS implementations</p>
  </div>
  <div class="page">
    <p>So what is a Feature Phone?</p>
    <p>Mobile phone with additional features  feature phone  Web browser, MP3 player, ....</p>
    <p>Single CPU device (smartphones normally have 2 CPUs)  Baseband and applications run on same processor</p>
    <p>3rd party applications just J2ME, BREW,   No native code!</p>
    <p>Reasons why feature phones are still very popular  Price, battery run time, rugged case, ...</p>
  </div>
  <div class="page">
    <p>Why Feature Phones?</p>
    <p>World wide ~4.6 billion mobile phone users  Only 16% of mobile phones in the world are smart phones!</p>
    <p>A little more in the western world  Therefore, feature phones  large impact!  Feature phones haven been mostly ignored by other work.</p>
  </div>
  <div class="page">
    <p>Contributions</p>
    <p>Vulnerability Analysis Framework for Feature Phones  Novel method for crash monitoring  Analysis method based on a small GSM base station</p>
    <p>Bugs Present in Most Feature Phone Platforms  Bugs can be abused for Denial-of-Service attacks</p>
    <p>Attack Impact  Large scale attacks possible with only a few bugs  End users, manufacturers, operators</p>
  </div>
  <div class="page">
    <p>Feature Phone Platforms</p>
    <p>Manufacturer has one OS for their entire line of feature phones  Nokia S40, Sony Ericsson OSE,</p>
  </div>
  <div class="page">
    <p>Manufacturer Selection</p>
    <p>Way too many mobile phone manufacturers  We can't analyze after all of them</p>
    <p>Select the few ones that have a relevant market share  This makes sure that we have a global effect, remember</p>
    <p>our aim is large scale!</p>
    <p>? ? ?</p>
  </div>
  <div class="page">
    <p>Manufacturer Selection</p>
    <p>Way too many mobile phone manufacturers  We can't analyze after all of them</p>
    <p>Select the few ones that have a relevant market share  This makes sure that we have a global effect, remember</p>
    <p>our aim is large scale!</p>
    <p>? ? ?</p>
  </div>
  <div class="page">
    <p>Selected Manufacturers</p>
    <p>Nokia, Samsung, Sony Ericsson, LG, Motorola, and Micromax  Micromax is a very popular brand in India</p>
    <p>Market shares provide a good basis for targeted attacks  Say you want to attack mobile users in Germany</p>
    <p>you just look at the market shares for Germany and know what device(s) to target</p>
  </div>
  <div class="page">
    <p>Acquiring Phones</p>
    <p>We need a phones from all our selected manufacturers  We selected 6 manufacturers...</p>
    <p>Buying them new is no option, since this becomes expensive  About 150 Euro per phone</p>
    <p>eBay is our friend ;)  Decent feature phones are</p>
    <p>still expensive  We bought many half broken</p>
    <p>phones (5...30 Euro)</p>
    <p>Phones from eBay are always fun...  Many phones don't really allow a hard reset</p>
    <p>Phones still have: SMS, appointments, and pictures...</p>
  </div>
  <div class="page">
    <p>Why SMS (Short Message Service)?</p>
    <p>Supported by every mobile phone  ...and of course by every mobile operator</p>
    <p>Works everywhere in the world  Attacker can be located anywhere  No proximity required</p>
    <p>A ton of features  Flash SMS, VCard, MMS notification, multipart,</p>
    <p>port addressing, SIM toolkit, ...  Many implemented but rarely used (untested code!)</p>
    <p>Mostly no user interaction required  True remote bugs!</p>
  </div>
  <div class="page">
    <p>Analyzing Feature Phones  (the challenges)</p>
    <p>Completely closed system  Too many platforms</p>
    <p>No native 3rd party applications  No SDK and no debugger</p>
    <p>JTAG is no solution  Need detailed platform knowledge to use JTAG for serious work  Infeasible to hook up JTAG on 10+ different phones</p>
    <p>Reverse Engineering is a lot of work  Multiple platforms make it even worse</p>
    <p>Further: sending a lot of SMS messages is pricey</p>
  </div>
  <div class="page">
    <p>Our Solution</p>
    <p>Use our own GSM network for analysis  SMS messages for free  Speed improvement over real operator network  Full control over the entire environment  Use phone  BTS communication for analysis</p>
    <p>Fuzzing-based testing  No source code no reverse engineering required  Make test cases once  use them for all phones</p>
    <p>Fuzzing requires monitoring  Without monitoring fuzzing is useless!</p>
  </div>
  <div class="page">
    <p>GSM Network Equipment</p>
    <p>Industry traditionally very closed  Protocol specs exist (&gt;1k PDFs)  No public documentation of GSM equipment</p>
    <p>OpenBSC, OpenBTS, OsmocomBB are game changers</p>
    <p>OpenBSC:  Free Software implementing A-bis over IP  Minimal subset of HLR, MSC, SMSC, BSC, and AUC  Supports a number of different base transceiver stations</p>
  </div>
  <div class="page">
    <p>Our Setup</p>
    <p>Laptop (running OpenBSC), nanoBTS, and some phones</p>
  </div>
  <div class="page">
    <p>A typical GSM network (simplified)</p>
  </div>
  <div class="page">
    <p>SMS submission</p>
  </div>
  <div class="page">
    <p>SMS delivery</p>
  </div>
  <div class="page">
    <p>OpenBSC and SMS</p>
    <p>Supports SMS from phone  phone</p>
    <p>Provides text-based interface for text-only SMS messages  by default not fuzzing friendly</p>
    <p>Only text  Very slow/for attached subscribers  Stored message sent to all subscribers</p>
  </div>
  <div class="page">
    <p>OpenBSC Modifications</p>
    <p>Injection of pre-encoded SMS in PDU format (SMS_SUBMIT)</p>
    <p>Relaxed message checking  Allow fuzzed/unsupported message types</p>
    <p>Logging  Phone feedback: Memory full, Protocol errors,   Channel release states (break downs)</p>
    <p>Event  message mapping</p>
    <p>phone (1331) went offline at 2010-10-29 14:28:37, checking last sms... the error was very likely caused by the following sms: 41000491311300f1880500034affdb4040404040404....</p>
  </div>
  <div class="page">
    <p>Monitoring the Phones</p>
    <p>Messages sent over SDCCH/SACCH  Monitor feedback and channel tear down</p>
  </div>
  <div class="page">
    <p>Additional monitoring</p>
    <p>Finding more than crashes  State mess up  swallowed messages</p>
    <p>Health monitoring with echo server on the phone  Binds to SMS port  Receives incoming message  Replies with message to special number  Implemented in J2ME</p>
    <p>Inject echo SMS every N messages  Check message counter in SMSC database (OpenBSC)</p>
  </div>
  <div class="page">
    <p>Test cases</p>
    <p>Multipart  UDH (reference, parts, current part)</p>
    <p>MMS notification  Various variable length strings</p>
    <p>Simple text  Invalid alphabet encoding (array out of bounds)</p>
    <p>Flash SMS  Separated code paths  Multipart</p>
    <p>TP-PID/TP-DCS combinations  In combination with UD payload</p>
    <p>~120k messages</p>
  </div>
  <div class="page">
    <p>Fuzzing trial</p>
    <p>Python library for SMS generation</p>
    <p>Submit ~1000 of messages to OpenBSC  Stored in SMSC database</p>
    <p>Send message to fuzz-phone(s)  Open channel  Send message 1...n  Close channel</p>
    <p>Script evaluating added logging  Flag invalid messages  Monitor channel breakdown  SMS</p>
  </div>
  <div class="page">
    <p>The Complete (logical) Setup</p>
  </div>
  <div class="page">
    <p>Results</p>
    <p>Fuzzed for quite some time  Took a lot of work</p>
    <p>A lot of automation but you still have to...  Delete messages by hand  Get phones out of the totally stuck mode  hard reset</p>
    <p>We were mostly looking for crashes that...  Disconnect phone from network  Reboot the phone</p>
    <p>Here are some interesting bugs we found!</p>
  </div>
  <div class="page">
    <p>Nokia S40</p>
    <p>The world wide market leader!  S40  Nokia's feature phone platform</p>
    <p>Our test phones: 3110c, 6300, 6233, 6131 NFC,...</p>
    <p>BUG  8 bit class 0 (Flash SMS) with certain TP-UD payload</p>
    <p>Impact  Nokia White Screen of Death  Interface reboot  Disconnect phone from network (interrupting call)  Message ACK never reaches network (more on that later...)  Message not visible on the phone  Watchdog shuts down phone after repeated crashes</p>
  </div>
  <div class="page">
    <p>Sony Ericsson</p>
    <p>Very common in Germany (22% market share)  Test phones: w800i, w810i, w890i, Aino (May 2010)</p>
    <p>BUG  Certain (reserved) TP-PID value &amp; &gt;= certain length TP-UD</p>
    <p>Impact  Complete phone reboot  Disconnect phone from network (interrupting call)  Message ACK never reaches network (again, later...)  Message not visible on phone  Sometimes also completely freezes  Errm, one test phone bricked</p>
  </div>
  <div class="page">
    <p>LG Electronics</p>
    <p>Test phone: LG GM360, likely more phones affected</p>
    <p>BUG  Classic buffer overflow in various MMS notification fields</p>
    <p>Impact  Phone reboots  If PIN set  phone locked (permanently offline)  Disconnects from network (interrupting calls)  Same happens on opening the message</p>
    <p>Good target for future work (reversing/code execution)</p>
  </div>
  <div class="page">
    <p>Motorola</p>
    <p>Test Phones: Razr, Rokr, SVLR L7</p>
    <p>BUG  Internet Electronic Mail interworking (0x32)</p>
    <p>+ certain payload  Impact</p>
    <p>Flashing white screen  User interface restart  Network disconnect (interrupt calls)</p>
    <p>Rather fragile devices, couldn't test in-depth due full memory, weird behavior...</p>
  </div>
  <div class="page">
    <p>Micromax</p>
    <p>Number three (3) manufacturer in India!  Test phone: X114 (tested briefly, last arrived phone)</p>
    <p>BUG  Multipart assembly madness again (this time Flash)  Reference id has to be unused (no problem)</p>
    <p>Impact  Few seconds after receipt  black screen  Network disconnect (interrupt calls)  Message is silent</p>
  </div>
  <div class="page">
    <p>Notifying Vendors</p>
    <p>Nokia  no problem, got contacts from the past</p>
    <p>Sony Ericsson  Painful, but we met some guy at a security conference ;-)</p>
    <p>Motorola  security@motorola.com does not really work that well</p>
    <p>Samsung  Contacted</p>
    <p>LG  Haven't found a security contact, but contacted through GSMA</p>
    <p>Micromax  Haven't found a security contact, contacted through GSMA</p>
  </div>
  <div class="page">
    <p>The Special early Crash</p>
    <p>Some bugs crash the phone before ACKing the SMS to the net  Nokia + Sony Ericsson</p>
    <p>Results: Network believes SMS was not received</p>
    <p>Action: SMSC tries to re-transmit message  Phone crashes again  Repeat...  Fix: move SIM card to non affected phone</p>
  </div>
  <div class="page">
    <p>The Special early Crash</p>
    <p>Some bugs crash the phone before ACKing the SMS to the net  Nokia + Sony Ericsson</p>
    <p>Results: Network believes SMS was not received</p>
    <p>Action: SMSC tries to re-transmit message  Phone crashes again  Repeat...  Fix: move SIM card to non affected phone</p>
    <p>Conclusion: Abuse behavior for attack amplification  Send one message  network makes phone crash</p>
    <p>multiple times  How often and in what interval is this happening?</p>
  </div>
  <div class="page">
    <p>Testing SMS Re-Transmits Timings</p>
    <p>Linux PC with Bluetooth dongle + Sony Ericsson phone</p>
    <p>Monitor phone using Bluetooth RFCOMM link  Connect to Dialup Networking Service  Wait until Bluetooth link gets disconnected (phone reboots!)</p>
    <p>Attack phone, count reboots  Let it run for a few days (swap SIM cards in between)</p>
  </div>
  <div class="page">
    <p>SMS Re-Transmit Timings for German MNOs</p>
    <p>Additional delivery attempt 20/24 hours after last attempt shown in graph</p>
  </div>
  <div class="page">
    <p>Attacks</p>
    <p>Clearly bugs can be used for attacks</p>
    <p>Disconnect calls  With just 1 SMS, to either side of the call (if both are mobile)</p>
    <p>Make sure a specific person is not reachable  Send an SMS every few seconds  Costs a lot, but maybe its worth it  If the phone switches off it will be cheap (Nokia)</p>
  </div>
  <div class="page">
    <p>Large Scale Attacks... possible</p>
    <p>Mobile Network Operator (MNO)  disconnect his customers  Make him look bad  Extort him (organized crime)</p>
    <p>(customers might claim their phone to be broken)  Smaller operator will likely have issues with a massive</p>
    <p>number of reconnecting phones</p>
    <p>Manufacturer  attack random people owning specific brand  Make them look bad  Extort him (organized crime)</p>
    <p>Public Distress  disconnect a lot of people  Next big outdoor event (protest, festival, etc...)  Police often relies on mobile phones  Remember Estonia 2007?</p>
    <p>(will become expensive)</p>
  </div>
  <div class="page">
    <p>Sending large Quantities of SMS Messages</p>
    <p>Using a few normal phones wont work  Very slow, pricey, easily traceable, ...</p>
    <p>Bulk SMS operators (the guys you go to for SMS spam)  Cheap, no-questions asked, high injection rate</p>
    <p>Smart/mobile phone botnets  Cheap (free!), fast if you have a large botnet</p>
    <p>(remember all those jailbroken iPhones with SSH and default root password?)</p>
    <p>SS7 Access  SPEED, good price, hard to trace, no content limitations</p>
    <p>(you are/know an operator)</p>
  </div>
  <div class="page">
    <p>Countermeasures: SMS filtering by MNOs</p>
    <p>Mobile Network Operators can filter SMS messages</p>
    <p>But filter software seems not well prepared for binary  Mostly designed to fight SMS spam and filter political content</p>
    <p>How to configure filters? (work done after this paper was finished)  We don't want to publish payloads (deal with manufacturers!)</p>
    <p>We compiled a white paper that tells you what to filter</p>
    <p>White paper is available from:</p>
    <p>http://tinyurl.com/smssecurity/</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>With openness on the GSM network side one can find bugs in the closed mobile phones</p>
    <p>Bugs in all major feature phone platforms!</p>
    <p>Large scale attacks are possible with this bug arsenal</p>
    <p>SMS re-transmit by operator amplifies the attacks</p>
    <p>Attack against users possibly can lead to attack against operator</p>
    <p>Manufacturers need to provide updates for feature phones</p>
  </div>
  <div class="page">
    <p>Q &amp; A</p>
    <p>Thank you for your attention!</p>
    <p>Question?</p>
  </div>
  <div class="page">
    <p>Demo Video</p>
  </div>
</Presentation>
