<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Mandatory Access Control for the Android Dalvik VM ESOS13</p>
    <p>Aline Bousquet, Jrmy Briffaut, Laurent Clevy, Christian Toinard, Benjamin Venelle</p>
    <p>June 25, 2013</p>
    <p>Esos13 Mandatory Access Control for the Android Dalvik VM 1 / 12</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Android</p>
    <p>Android: 96 new threats detected in Q4 2012 (F-Secure) 238 new threats detected in 2012 (F-Secure), i.e. 79% of the threats detected on mobiles.</p>
    <p>SEAndroid: existing protection at the system level (processes, files, but not an application)</p>
    <p>Java: The JVM provides new vectors of attacks (Kaspersky Labs) Vulnerabilities of the JVM affecting Facebook and Twitter</p>
    <p>SEDalvik: our protection for the VM level, using the same concepts as SEAndroid</p>
    <p>Esos13 Mandatory Access Control for the Android Dalvik VM 2 / 12</p>
  </div>
  <div class="page">
    <p>MAC on Androids VM: SEDalvik General approach</p>
    <p>SEDalvik: Mandatory Access Control system</p>
    <p>MAC = Mandatory Access Control Can guarantee security properties, as opposed to Discretionary Access Control</p>
    <p>SEDalvik = Security Enhanced Dalvik Is a MAC model for Androids applications Is also a MAC implementation for Dalvik Controls interactions inside Dalvik</p>
    <p>Why use MAC inside the Dalvik VM? Control of the interactions between all the Java objects No modifications of the applications are needed: self-organization</p>
    <p>Esos13 Mandatory Access Control for the Android Dalvik VM 3 / 12</p>
  </div>
  <div class="page">
    <p>MAC on Androids VM: SEDalvik General approach</p>
    <p>Requirements</p>
    <p>SEDalvik proposes the following MAC approach: Type Enforcement to control interactions between source and target objects:</p>
    <p>Source</p>
    <p>Java Object</p>
    <p>ID_1</p>
    <p>Target</p>
    <p>Java Object</p>
    <p>ID_2</p>
    <p>Interaction</p>
    <p>Method Call / Field Access</p>
    <p>A reference monitor to intercept all interactions To be able to label each object: class signature and instance ID Fine grain access control:</p>
    <p>(ObjectA, MethodA) {is allowed to call} (ObjectB, MethodB) (ObjectA, MethodA) {is allowed to access} (ObjectB, FieldB)</p>
    <p>Esos13 Mandatory Access Control for the Android Dalvik VM 4 / 12</p>
  </div>
  <div class="page">
    <p>MAC on Androids VM: SEDalvik General approach</p>
    <p>Requirements</p>
    <p>SEDalvik proposes the following MAC approach: Type Enforcement to control interactions between source and target objects:</p>
    <p>Source</p>
    <p>Java Object</p>
    <p>ID_1</p>
    <p>Target</p>
    <p>Java Object</p>
    <p>ID_2</p>
    <p>Interaction</p>
    <p>Method Call / Field Access</p>
    <p>A reference monitor to intercept all interactions To be able to label each object: class signature and instance ID Fine grain access control:</p>
    <p>(ObjectA, MethodA) {is allowed to call} (ObjectB, MethodB) (ObjectA, MethodA) {is allowed to access} (ObjectB, FieldB)</p>
    <p>Esos13 Mandatory Access Control for the Android Dalvik VM 4 / 12</p>
  </div>
  <div class="page">
    <p>MAC on Androids VM: SEDalvik General approach</p>
    <p>Requirements</p>
    <p>SEDalvik proposes the following MAC approach: Type Enforcement to control interactions between source and target objects:</p>
    <p>Source</p>
    <p>Java Object</p>
    <p>ID_1</p>
    <p>Target</p>
    <p>Java Object</p>
    <p>ID_2</p>
    <p>Interaction</p>
    <p>Method Call / Field Access</p>
    <p>A reference monitor to intercept all interactions To be able to label each object: class signature and instance ID Fine grain access control:</p>
    <p>(ObjectA, MethodA) {is allowed to call} (ObjectB, MethodB) (ObjectA, MethodA) {is allowed to access} (ObjectB, FieldB)</p>
    <p>Esos13 Mandatory Access Control for the Android Dalvik VM 4 / 12</p>
  </div>
  <div class="page">
    <p>MAC on Androids VM: SEDalvik General approach</p>
    <p>Requirements</p>
    <p>SEDalvik proposes the following MAC approach: Type Enforcement to control interactions between source and target objects:</p>
    <p>Source</p>
    <p>Java Object</p>
    <p>ID_1</p>
    <p>Target</p>
    <p>Java Object</p>
    <p>ID_2</p>
    <p>Interaction</p>
    <p>Method Call / Field Access</p>
    <p>A reference monitor to intercept all interactions To be able to label each object: class signature and instance ID Fine grain access control:</p>
    <p>(ObjectA, MethodA) {is allowed to call} (ObjectB, MethodB) (ObjectA, MethodA) {is allowed to access} (ObjectB, FieldB)</p>
    <p>Esos13 Mandatory Access Control for the Android Dalvik VM 4 / 12</p>
  </div>
  <div class="page">
    <p>MAC on Androids VM: SEDalvik Architecture</p>
    <p>Policy</p>
    <p>SEDalviks MAC policy is composed of: 1 Files for labeling the source and target objects 2 Files including MAC rules : Source  Permission  Target</p>
    <p>Policy generation: Policy can be generated when an application is installed Policy can be provided with an application</p>
    <p>Esos13 Mandatory Access Control for the Android Dalvik VM 5 / 12</p>
  </div>
  <div class="page">
    <p>MAC on Androids VM: SEDalvik Architecture</p>
    <p>Architecture</p>
    <p>Dalvik VM</p>
    <p>Decision engine (C library)</p>
    <p>Object_A Method_1</p>
    <p>Object_B Method_2</p>
    <p>Policy files</p>
    <p>Take a decision</p>
    <p>Get data</p>
    <p>Send data</p>
    <p>Enforce decision Send decision</p>
    <p>SEDalvik</p>
    <p>Interception engine</p>
    <p>If a matching rule is found, the interaction can continue Else the interaction is stopped</p>
    <p>Esos13 Mandatory Access Control for the Android Dalvik VM 6 / 12</p>
  </div>
  <div class="page">
    <p>Experiment Usecase</p>
    <p>A privilege escalation attack</p>
    <p>Name Phone</p>
    <p>User Address Book</p>
    <p>MaliciousWriteContacts</p>
    <p>Permissions: NONE</p>
    <p>PrivilegedWriteContacts</p>
    <p>Permissions: WRITE_CONTACTS</p>
    <p>Create contact</p>
    <p>A privileged escalation has been performed</p>
    <p>Esos13 Mandatory Access Control for the Android Dalvik VM 7 / 12</p>
  </div>
  <div class="page">
    <p>Experiment Usecase</p>
    <p>Policy extract</p>
    <p>Security labels:</p>
    <p>Lpkg/privileged/PrivilegedWriteContactActivity; privilegedwritecontactactivity_j</p>
    <p>Lpkg/malicious/MaliciousWriteContactActivity; maliciouswritecontactactivity_j</p>
    <p>Rules allowing interactions:</p>
    <p>allow android_widget_button_j android_content_intent_j from onClick invoke (init)</p>
    <p># allow android_widget_button_j maliciouswritecontactactivity_j from onClick invoke startService</p>
    <p>allow object_j android_content_intent_j from createFromParcel invoke (init)</p>
    <p>The policy for this usecase has about 600 labels and 10200 rules.</p>
    <p>Esos13 Mandatory Access Control for the Android Dalvik VM 8 / 12</p>
  </div>
  <div class="page">
    <p>Experiment Usecase</p>
    <p>Results</p>
    <p>[traceid=62472;stamp=27241435;pid=592] type=allow scontext=object_j tcontext=android_content_intent_j { onClick invoke (init) } sinstance=5328 tinstance=7472</p>
    <p>[traceid=62507;stamp=27251525;pid=592] type=deny scontext=object_j tcontext=maliciouswritecontactactivity_j { onClick invoke startService } sinstance=5328 tinstance=1736</p>
    <p>This solution blocks all messages sent by the malicious application  Too general Need a more precise way to stop messages:</p>
    <p>Block the message during the transmission Use a reference monitor that can detect sequences of interactions</p>
    <p>Esos13 Mandatory Access Control for the Android Dalvik VM 9 / 12</p>
  </div>
  <div class="page">
    <p>Experiment Performances</p>
    <p>Benchmark</p>
    <p>Other Runs, Without SEDalvik First Run, With SEDalvik</p>
    <p>Other Runs, With SEDalvik</p>
    <p>Display MaliciousApp</p>
    <p>Display PrivilegedApp</p>
    <p>Create Contact</p>
    <p>Send Intent</p>
    <p>T im</p>
    <p>e (</p>
    <p>in m</p>
    <p>s. )</p>
    <p>Important overhead for the graphical part  possible improvement Small overhead for critical parts (sending intent, actions on personal data)</p>
    <p>Esos13 Mandatory Access Control for the Android Dalvik VM 10 / 12</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Conclusion</p>
    <p>SEDalvik A MAC implementation for Dalvik Tested on Android emulator and device</p>
    <p>Self-organizing: Self-configuration No modification of the applications needed</p>
    <p>Future works: SEDalvik+SEAndroid for in-depth control of the interactions (OS, Java application), SEDalvik+SEAndroid+PIGA to guarantee advanced security properties by controlling direct/indirect flows</p>
    <p>Esos13 Mandatory Access Control for the Android Dalvik VM 11 / 12</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Questions?</p>
    <p>Esos13 Mandatory Access Control for the Android Dalvik VM 12 / 12</p>
  </div>
</Presentation>
