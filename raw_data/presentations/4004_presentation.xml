<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Off-Path Attacking the Web</p>
    <p>Yossi Gilad and Amir Herzberg Computer Science Department, Bar Ilan University</p>
    <p>WOOT12 presentation</p>
  </div>
  <div class="page">
    <p>Oscar: the Off-Path Attacker</p>
    <p>Bob, I leave you! Alice</p>
    <p>Bob, I love you! Alice</p>
  </div>
  <div class="page">
    <p>Why Off-Path Attacks?</p>
    <p>Why not MitM, Eavesdropping?  Harder: physical access or control sw/router</p>
    <p>Can Oscar spoof IP packets?  Often not: most ISPs ingress-filter</p>
    <p>But enough ISPs dont not so easy to filter</p>
    <p>What of challenge-response like TCP, DNS?  Correct use of challenge-response suffices</p>
    <p>But: Often, challenge-response used incorrectly  Since used for other purposes, e.g., SEQ/ACK</p>
    <p>This work: Off-path Web-site Injection  Allows XSS, phishing and more</p>
  </div>
  <div class="page">
    <p>Related Works</p>
    <p>(Off-path) TCP injections:</p>
    <p>Predictable ISNs: Morris85, Mitnick95, Zalewski01,05  Address-based client authentication vulnerable [Bellovin89]</p>
    <p>`PoC` for Windows clients: klm07  We improve (FW, efficiency), extend to exploit</p>
    <p>QianMao12, QMXie12: (limited) malware  QM12: Also assumes seq#-checking-fw</p>
    <p>And: only learns server seq#  cant inject to Windows</p>
    <p>Other off-path attacks (not injections)  TCP &amp; Tor traffic analysis: GiladH12</p>
    <p>DNS poisoning: Kaminsky08; H+Shulman12</p>
    <p>IP packet intercept, modify and kill: GiladH11</p>
  </div>
  <div class="page">
    <p>Attack Goal and Scenario</p>
    <p>Internet 1. Surf to Oscar.com</p>
  </div>
  <div class="page">
    <p>Attack and Talk Overview</p>
    <p>Learn connection identifiers (IPs:ports)</p>
    <p>Learn servers sequence number</p>
    <p>Learn clients sequence number</p>
    <p>Exploit(s):  XSS</p>
    <p>CSRF</p>
    <p>Phishing</p>
    <p>[Defenses and conclusions]</p>
  </div>
  <div class="page">
    <p>Learning connection identifiers</p>
    <p>Identifiers: &lt;srcIP:srcPort, dstIP:dstPort&gt;</p>
    <p>Puppet opens connection to Bob (server)  ServerIP:port selected by puppet (attacker)</p>
    <p>Client IP: known from client connection to Oscar</p>
    <p>Client port: sequentially assigned [Windows,]</p>
    <p>Not sequential? Test all (cf. [GiladH12])</p>
  </div>
  <div class="page">
    <p>Finding Server SEQuence Number</p>
    <p>How? Use TCP responses to probe packets  Empty-ack packets provide useful response:</p>
    <p>If SEQ out of WIN: send ACK (to re-sync)</p>
    <p>If SEQ is within WIN: no response (to avoid `storm)</p>
    <p>How to detect if response is sent?  Use IP-ID side channel!</p>
    <p>IP-ID: 16 bit identifier in IP header  Used to correctly reconstruct packet from fragments</p>
    <p>In Windows: globally- incrementing counter</p>
    <p>One connection (to attacker) leaks info about another!</p>
    <p>Old trick: NMAPs idle-scan, Bellovin machine-count,</p>
  </div>
  <div class="page">
    <p>Finding Server SEQuence Number</p>
    <p>Found  binary search finds exact SEQ !!</p>
  </div>
  <div class="page">
    <p>Attack and Talk Overview</p>
    <p>Puppet opens connection to server  Known IPs and server port</p>
    <p>Learn connection identifiers (client port)</p>
    <p>Learn servers sequence number</p>
    <p>Learn clients sequence number</p>
    <p>Exploit(s):  XSS</p>
    <p>CSRF</p>
    <p>Phishing</p>
    <p>[Defenses and conclusions]</p>
  </div>
  <div class="page">
    <p>Finding Client SEQuence Number</p>
    <p>We already know server seq (and IPs, ports)</p>
    <p>To find client seq#: send pkt w/ data  With servers IP:port, correct seq#</p>
    <p>TCPs handling depends on Ack#:</p>
    <p>For Windows clients:  As of XP SP2</p>
    <p>Silently discards pkt with `old` ack number</p>
    <p>Otherwise: send ACK</p>
    <p>Leaks: Ack#&gt;UNA</p>
    <p>Binary search</p>
    <p>UnAcked</p>
    <p>Next</p>
    <p>Process</p>
    <p>Windows: silently discard RFC: Process (often, ack)</p>
    <p>Discard and send duplicate Ack</p>
  </div>
  <div class="page">
    <p>TCP Injection: Challenges</p>
    <p>Firewall passing: Ok</p>
    <p>Lost probes: double-check `no-ack` events</p>
    <p>Lost query/answer: detect via TCPs Acks</p>
    <p>Irrelevant packet sent (IP-ID incremented): repeat `suspect tests</p>
    <p>Not too many extra checks (or failures)  When in doubt, read the paper!</p>
    <p>Results</p>
  </div>
  <div class="page">
    <p>TCP Injection: Success Rates</p>
    <p>Scenario:  Apache server, Windows clients, 10Mbps</p>
    <p>Attacker: 1Mbps; RTT to client: 100msec</p>
    <p>Avg. time: 102sec [std deviation: 18sec]</p>
  </div>
  <div class="page">
    <p>Attack and Talk Overview</p>
    <p>Puppet opens connection to server  Known IPs and server port</p>
    <p>Learn connection identifiers (client port)</p>
    <p>Learn servers sequence number</p>
    <p>Learn clients sequence number</p>
    <p>Exploit(s):  XSS</p>
    <p>CSRF</p>
    <p>Phishing</p>
    <p>[Defenses and conclusions]</p>
  </div>
  <div class="page">
    <p>Exploiting Injections: XSS, CSRF</p>
    <p>Cross Site Scripting (XSS): cause browser to run MalScript in context of victim.com  Known XSS: exploit bug in site or browser</p>
    <p>Off-path-injected XSS: no need for vulnerable site/browser!</p>
    <p>Can post fake requests  like CSRF, but</p>
    <p>Circumvents: SOP, origin header, CSP, referrer</p>
  </div>
  <div class="page">
    <p>XSS Exploit: Results</p>
    <p>Top 1024 sites, 10Mb win clients, 1Mb Oscar</p>
    <p>Avg 32 pkts/s `noise`</p>
    <p>Immune sites: mostly SSL or non-persistent</p>
  </div>
  <div class="page">
    <p>Phishing by Injection</p>
    <p>Off-path XSS, CSRF may fail:  To collect user-entered data, e.g., passwords</p>
    <p>Esp. if site uses SSL for passwords</p>
    <p>Alternative: phish / deface !  Change contents: steal PWDs, push malware</p>
  </div>
  <div class="page">
    <p>Phishing by Injection</p>
    <p>Off-path XSS, CSRF may fail:  To collect user-entered data, e.g., passwords</p>
    <p>Esp. if site uses SSL for passwords</p>
    <p>Alternative: phish / deface !  Change contents: steal PWDs, push malware</p>
    <p>Spoof page only when user asks for it  Puppet maintains open connection</p>
    <p>Detect user requesting victim page  By detecting increase in client-seq-number</p>
    <p>`Kill` real response from server  Send data with servers SEQ in advance</p>
  </div>
  <div class="page">
    <p>Defenses and Conclusions</p>
    <p>Defenses  Client: Use unpredictable IP-ID, ports</p>
    <p>Not random see paper for details</p>
    <p>Server / FW: drop connections with too many suspect (empty) Acks</p>
    <p>Conclusions  TCP may not be secure against off-path !</p>
    <p>SOP is not much better than client address auth!</p>
    <p>Use `real security: SSL/TLS, IPsec, etc.</p>
    <p>Attacks may be improved, abused further</p>
  </div>
  <div class="page">
    <p>Thank You!</p>
    <p>Questions?</p>
    <p>Demo??</p>
  </div>
</Presentation>
