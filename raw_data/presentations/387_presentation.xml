<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>SPORC! Group Collaboration using Untrusted Cloud Resources!</p>
    <p>Ariel J. Feldman, William P. Zeller, Michael J. Freedman, Edward W. Felten!</p>
  </div>
  <div class="page">
    <p>Cloud deployment: pro &amp; con!</p>
    <p>Cloud deployment is attractive!  Scalable, highly available, globally accessible!  Real-time collaboration!</p>
    <p>For user-facing applications: (e.g. word processing, calendaring, e-mail, IM)!</p>
    <p>But, theres a price!</p>
    <p>Must trust the cloud provider for confidentiality and integrity!</p>
  </div>
  <div class="page">
    <p>SPORC goals!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 3!</p>
    <p>Untrusted servers!  Cant read user data!  Cant tamper with user data without</p>
    <p>risking detection!  Clients can recover from tampering!</p>
    <p>Practical cloud apps!  Flexible framework!  Real-time collaboration!  Work offline!</p>
  </div>
  <div class="page">
    <p>Server!</p>
    <p>Making servers untrusted!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 4!</p>
    <p>Encrypted! state!</p>
    <p>App logic!</p>
    <p>SPORC Servers limited role:!  Storage!  Ordering msgs!</p>
    <p>State!</p>
    <p>Client 1! Copy of</p>
    <p>state! App logic!</p>
    <p>Client 2! Copy of</p>
    <p>state! App logic! Client!App logic! App logic!</p>
    <p>Server!</p>
  </div>
  <div class="page">
    <p>Problem #1:!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 5!</p>
    <p>Client 1! Copy of</p>
    <p>state! App logic!</p>
    <p>Client 2! Copy of</p>
    <p>state! App logic! Client!</p>
    <p>How do you keep clients local copies consistent?!</p>
    <p>(esp. with offline access)! Server!</p>
    <p>Encrypted! state!</p>
  </div>
  <div class="page">
    <p>Problem #2:!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 6!</p>
    <p>Client 1! Copy of</p>
    <p>state! App logic!</p>
    <p>Client 2! Copy of</p>
    <p>state! App logic! Client!</p>
    <p>How do you deal with a malicious server?!</p>
    <p>Server! Encrypted!</p>
    <p>state!</p>
  </div>
  <div class="page">
    <p>Keeping clients in sync!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 7!</p>
    <p>Operational transformation (OT) [EG89]! (Used in Google Docs, EtherPad, etc.)!</p>
    <p>Alice! Bob!</p>
    <p>Server!</p>
    <p>ins ABC!</p>
    <p>ins DE!</p>
    <p>del 4!del 2! ins ABC!</p>
    <p>ins DE!</p>
    <p>Ops:!</p>
    <p>State:!ABCDE! ABCDE!ACDE! ABCE!</p>
    <p>del 4!del 2!</p>
    <p>del 2!del 4!</p>
    <p>del 2!del 4!</p>
    <p>ACD! ACE!</p>
    <p>del 2!del 3!</p>
    <p>T! T!</p>
    <p>ACE! ACE!</p>
    <p>OT can sync arbitrarily divergent clients!</p>
    <p>Ops:!</p>
    <p>State:!</p>
  </div>
  <div class="page">
    <p>Dealing with a malicious server! Digital signatures arent enough! Server can equivocate!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 8!</p>
    <p>A! B! C! A!C!fork* consistency [LM07]!  Honest server: linearizability!  Malicious server: Alice and Bob</p>
    <p>detect equivocation after exchanging 2 messages!</p>
    <p>Embed history hash in every message!</p>
    <p>Server can still fork the clients, but cant unfork!</p>
    <p>Client!</p>
    <p>Server!</p>
    <p>Client!</p>
  </div>
  <div class="page">
    <p>System design!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 9!</p>
    <p>Client app! Local ! state!</p>
    <p>SPORC lib!</p>
  </div>
  <div class="page">
    <p>System design!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 10!</p>
    <p>Client app! Local ! state!</p>
    <p>SPORC lib!</p>
    <p>Committed! Pending!</p>
    <p>fork*! consistent!</p>
    <p>causally! consistent!</p>
  </div>
  <div class="page">
    <p>System design!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 11!</p>
    <p>Client app! Local ! state!</p>
    <p>SPORC lib!</p>
    <p>Committed! Pending!</p>
    <p>Server! Encrypted state!</p>
    <p>Encrypt &amp; sign!</p>
  </div>
  <div class="page">
    <p>System design!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 12!</p>
    <p>Client app! Local ! state!</p>
    <p>SPORC lib!</p>
    <p>Committed! Pending!</p>
    <p>Server! Encrypted state!</p>
    <p>Client! Verify &amp; decrypt!</p>
    <p>Compare history hashes!</p>
  </div>
  <div class="page">
    <p>System design!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 13!</p>
    <p>Client app! Local ! state!</p>
    <p>SPORC lib!</p>
    <p>Committed! Pending!</p>
    <p>Server! Encrypted state!</p>
    <p>Client! Decrypt &amp; verify!</p>
    <p>T!</p>
  </div>
  <div class="page">
    <p>System design!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 14!</p>
    <p>Client app! Local ! state!</p>
    <p>SPORC lib!</p>
    <p>Committed! Pending!</p>
    <p>Server! Encrypted state!</p>
    <p>Client!</p>
    <p>T!</p>
  </div>
  <div class="page">
    <p>Access control!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 15!</p>
    <p>Challenges!  Server cant do it  its untrusted!!  Preserving causality!  Concurrency makes it harder!</p>
    <p>Solutions!  Ops encrypted with symmetric key shared by clients !  ACL changes are ops too!  Concurrent ACL changes handled with barriers!</p>
    <p>Encrypted! state!</p>
  </div>
  <div class="page">
    <p>Adding a user!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 16!</p>
    <p>Alice! Bob!</p>
    <p>Server!</p>
    <p>Charlie! Group members:!</p>
    <p>ModifyUserOp!</p>
    <p>Add Charlie!</p>
    <p>ECharlie_pk(k)!</p>
  </div>
  <div class="page">
    <p>Removing a user!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 17!</p>
    <p>Alice! Bob!</p>
    <p>Server!</p>
    <p>Charlie! Group members:!</p>
    <p>ModifyUserOp!</p>
    <p>Rm Charlie!</p>
    <p>Ealice_pk(k)!</p>
    <p>Ebob_pk(k)!</p>
    <p>Ek(k)!</p>
    <p>Charlie!</p>
  </div>
  <div class="page">
    <p>BARRIER! BARRIER!</p>
    <p>Barriers: dealing with concurrency!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 18!</p>
    <p>Alice! Bob!</p>
    <p>Server!</p>
    <p>Group members:! Charlie!</p>
    <p>ModifyUserOp!</p>
    <p>Rm Charlie!</p>
    <p>Ek1(k)!</p>
    <p>Eve!</p>
    <p>ModifyUserOp!</p>
    <p>Rm Eve!</p>
    <p>Ek2(k)!</p>
    <p>ModifyUserOp!</p>
    <p>Rm Eve!</p>
    <p>Ek2(k)!</p>
    <p>Rm Charlie!</p>
    <p>Ek1(k)!</p>
    <p>ModifyUserOp!</p>
    <p>Rm Eve!</p>
    <p>Ek2(k1)!</p>
    <p>ModifyUserOp!</p>
    <p>Rm Eve!</p>
    <p>Ek2(k1)!</p>
    <p>Clients check on the server!</p>
  </div>
  <div class="page">
    <p>Recovering from a fork!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 19!</p>
    <p>Alices history:</p>
    <p>Bobs history:</p>
    <p>Can use OT to resolve malicious forks too!</p>
    <p>Fork!!</p>
  </div>
  <div class="page">
    <p>Implementation!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 20!</p>
    <p>Client lib + generic server! App devs only need to define ops and provide a</p>
    <p>transformation function!</p>
    <p>Demo apps: key value store, browser-based collaborative text editor!</p>
    <p>Java CLI version + browser-based version (GWT)!</p>
  </div>
  <div class="page">
    <p>Evaluation!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 21!</p>
    <p>Setup!  Tested Java CLI version!  8-core 2.3 GHz AMD machines!</p>
    <p>1 for server!  4 for clients (often &gt;1 instance per machine)!</p>
    <p>Gigabit LAN!</p>
    <p>Microbenchmarks!  Latency!  Server throughput!  Time-to-join (in paper)!</p>
  </div>
  <div class="page">
    <p>Latency!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 22!</p>
    <p>Low load! (1 client writer)!</p>
    <p>High load! (all clients are writers)!</p>
    <p>(Text editor app)!</p>
  </div>
  <div class="page">
    <p>Server throughput!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 23!</p>
    <p>T h</p>
    <p>ro u</p>
    <p>g h</p>
    <p>p u</p>
    <p>t (M</p>
    <p>B /s</p>
    <p>)</p>
    <p>O p</p>
    <p>e ra</p>
    <p>ti o</p>
    <p>n s</p>
    <p>p e r</p>
    <p>se c o</p>
    <p>n d</p>
    <p>Payload size (KB)</p>
    <p>MB/s ops/s</p>
    <p>T h ro</p>
    <p>u g h p u t</p>
    <p>(M B</p>
    <p>/s )</p>
    <p>O p e ra</p>
    <p>ti o n s</p>
    <p>p e r</p>
    <p>se c o n d</p>
    <p>Payload size (KB)</p>
    <p>MB/s</p>
  </div>
  <div class="page">
    <p>Conclusion!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 24!</p>
    <p>Practical cloud apps + untrusted servers!</p>
    <p>Operational transformation + fork* consistency!</p>
    <p>Dynamic access control and key distribution!</p>
    <p>Recovery from malicious forks!</p>
  </div>
  <div class="page">
    <p>Thank you!</p>
    <p>SPORC: Group Collaboration using Untrusted Cloud Resources  OSDI 10/5/10! 25!</p>
    <p>Questions?!</p>
    <p>ajfeldma@cs.princeton.edu! *!</p>
    <p>*http://www.snowpeak.com/tableware/cutlery/titanium-original-spork-sct-004.html!</p>
  </div>
</Presentation>
