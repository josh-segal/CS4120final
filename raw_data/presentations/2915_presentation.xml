<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Eternal Sunshine of the Spotless Machine: Protecting Privacy with</p>
    <p>Ephemeral Channels Alan M. Dunn, Michael Z. Lee, Suman Jana, Sangman Kim,</p>
    <p>Mark Silberstein, Yuanzhong Xu, Vitaly Shmatikov, Emmett Witchel</p>
    <p>University of Texas at Austin</p>
    <p>OSDI 2012</p>
    <p>October 8, 2012</p>
  </div>
  <div class="page">
    <p>Wanted: Application Privacy</p>
    <p>Goal: Run programs without leaving traces</p>
    <p>Current state: Private browsing</p>
    <p>Popular feature in web browsers</p>
    <p>Ideal: When private browsing</p>
    <p>session terminates, all traces</p>
    <p>erased</p>
    <p>VoIP conversation with lawyer</p>
    <p>Biomedical researcher accessing data</p>
    <p>Website access</p>
  </div>
  <div class="page">
    <p>A Privacy Problem</p>
    <p>Private browsing unachieved</p>
    <p>Evidence of site visits leaks into OS [Aggrawal, 2010]</p>
    <p>Problem: No system support</p>
    <p>Applications interact with user and world</p>
    <p>Data leaks into OS, system services</p>
    <p>Applications cannot remove traces they leave</p>
  </div>
  <div class="page">
    <p>Example: Browsing a Website</p>
    <p>Network</p>
    <p>Audio</p>
    <p>What traces still remain on the computer?</p>
    <p>X</p>
  </div>
  <div class="page">
    <p>Leaks From Browsing</p>
    <p>X server caches, graphics drivers</p>
    <p>PulseAudio server</p>
    <p>Memory contents: Complete packets, like:</p>
    <p>HTTP/1.1 200 OK</p>
    <p>Date: Mon, 17 Sep 2012</p>
    <p>Server: Apache/2.2.14</p>
    <p>Network</p>
    <p>Audio</p>
  </div>
  <div class="page">
    <p>Secure Deallocation Is Not Enough</p>
    <p>Secure deallocation: Zero memory when freed</p>
    <p>Research implementation [Chow, 2005]</p>
    <p>PaX: Security patch for Linux kernel</p>
    <p>Sensitive data remains allocated</p>
    <p>X caches, PulseAudio buffers not freed</p>
  </div>
  <div class="page">
    <p>Resisting a Strong Adversary</p>
    <p>Goal: Provide forensic deniability  no evidence left for non-concurrent attacker</p>
    <p>Once program terminated, protection maintained under extreme circumstances</p>
    <p>Computer physically seized Root-level compromise (after program terminates)</p>
  </div>
  <div class="page">
    <p>Goals</p>
    <p>Provide privacy</p>
    <p>Private sessions with forensic deniability</p>
    <p>Maintain usability</p>
    <p>Simultaneous private/non-private applications</p>
    <p>Support a wide variety of private applications</p>
    <p>Pay as you go - costs only for private programs</p>
    <p>Impose low overhead</p>
  </div>
  <div class="page">
    <p>Lacuna</p>
    <p>System to accomplish our privacy and usability goals</p>
    <p>Host OS (Linux), VMM (QEMU-KVM) modified</p>
    <p>Applications unmodified</p>
    <p>lacuna [luh-kyoo-nuh] 1. a gap or missing part, as in a manuscript, series, or logical argument...</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Design</p>
    <p>Erasable program container</p>
    <p>Allow communication with peripherals</p>
    <p>Evaluation</p>
    <p>Lacuna provides privacy</p>
    <p>Lacuna maintains usability</p>
  </div>
  <div class="page">
    <p>Erasable Program Container</p>
    <p>Program</p>
    <p>Process</p>
    <p>Process</p>
    <p>Process</p>
    <p>VM contains Inter-Process Communication</p>
    <p>VM alone is insufficient</p>
  </div>
  <div class="page">
    <p>Communicating with Peripherals</p>
    <p>- Sensitive data</p>
    <p>Host OS</p>
    <p>X App 1</p>
    <p>App 2</p>
    <p>Program</p>
    <p>Driver Dependencies on rest of OS</p>
    <p>Program must communicate with</p>
    <p>peripheral</p>
  </div>
  <div class="page">
    <p>Communicating with Peripherals</p>
    <p>- Sensitive data</p>
    <p>Host OS</p>
    <p>X App 1</p>
    <p>App 2</p>
    <p>Driver Dependencies on rest of OS</p>
    <p>Program</p>
    <p>Code with potential data exposure</p>
    <p>Host OS</p>
    <p>X</p>
  </div>
  <div class="page">
    <p>Two Peripheral Types</p>
    <p>- Sensitive data</p>
    <p>Host OS</p>
    <p>- Encrypted data</p>
    <p>Encrypt before data passes through OS</p>
    <p>Swap</p>
    <p>VM writes</p>
    <p>Must ensure no traces left that are readable later</p>
    <p>Solve with ephemeral channels</p>
  </div>
  <div class="page">
    <p>Ensuring No Readable Traces</p>
    <p>Host OS</p>
    <p>Program</p>
    <p>Strategy 1: Leave no trace</p>
    <p>Strategy 2: Make traces unreadable later</p>
  </div>
  <div class="page">
    <p>Host OS</p>
    <p>Ephemeral Channels</p>
    <p>Proxy</p>
    <p>Erase channel key</p>
    <p>- Encrypted data</p>
    <p>- Sensitive data</p>
    <p>Encrypted ephemeral</p>
    <p>channel</p>
    <p>Hardware ephemeral</p>
    <p>channel Guest control of hardware</p>
    <p>(complex OS paths)</p>
    <p>Traces now cryptographically</p>
    <p>erased</p>
  </div>
  <div class="page">
    <p>Channel Type Comparison</p>
    <p>Hardware Encrypted</p>
    <p>Host drivers unmodified</p>
    <p>Host code never sees unencrypted data</p>
    <p>Hardware virtualization support</p>
    <p>unnecessary</p>
    <p>(No graphics)</p>
    <p>Guest modification unnecessary</p>
    <p>(Run Windows, Linux, unmodified programs)</p>
  </div>
  <div class="page">
    <p>Encrypted Graphics Channel</p>
    <p>No hardware virtualization support for graphics</p>
    <p>Solution: Encrypt VM output to GPU memory</p>
    <p>Emulated graphics card</p>
    <p>GPU memory</p>
    <p>CUDA</p>
    <p>Host OS</p>
    <p>Driver</p>
  </div>
  <div class="page">
    <p>Hardware USB Channel</p>
    <p>Switch into private mode</p>
    <p>USB host controller HW</p>
    <p>Controller under guest control</p>
    <p>USB keyboard USB mouse</p>
    <p>Host OS</p>
    <p>Driver</p>
    <p>Controller: non-private Controller: private</p>
    <p>Encrypted USB, audio, network channels described in paper</p>
  </div>
  <div class="page">
    <p>Sanitizing Storage</p>
    <p>Encrypt VM writes to storage  VM image file unmodified</p>
    <p>Diffs file contains VM writes to storage</p>
    <p>Diffs file encrypted</p>
    <p>Leave no evidence of which storage locations read  Free buffer cache pages for VM image file only</p>
    <p>Encrypt swapped memory from private VM  Encrypt swapped pages for VMM process only</p>
    <p>Encryption keys erased on VM exit</p>
    <p>Techniques here pay as you go</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Lacuna provides privacy</p>
    <p>Measure that Lacuna does not leak private data</p>
    <p>Quantify size of code that handles sensitive data</p>
    <p>Lacuna maintains usability</p>
    <p>Low switch time to private environment</p>
    <p>Application performance near that of running program in VM</p>
    <p>More evaluation in paper</p>
  </div>
  <div class="page">
    <p>Lacuna Protects Privacy</p>
    <p>Experiment to locate leaks</p>
    <p>Inject random tokens into peripheral I/O paths, scan memory to locate [Chow, 2005]</p>
    <p>Tokens almost always found without Lacuna</p>
    <p>Tokens never found with Lacuna</p>
    <p>Host OS</p>
  </div>
  <div class="page">
    <p>Little Code Handles Sensitive Data</p>
    <p>Subsystem Lines of Code</p>
    <p>Graphics 725 (CUDA)</p>
    <p>Sound 200 (out) 108 (in)</p>
    <p>USB 414</p>
    <p>Network 208</p>
    <p>Measurements are lines of code outside of QEMU that handle unencrypted data  Data within QEMU erased at VM exit</p>
  </div>
  <div class="page">
    <p>Time to Switch to Private Programs is Low</p>
    <p>Channel Type Switch Time (s)</p>
    <p>USB passthrough (encrypted)</p>
    <p>keyboard 1.4  0.2</p>
    <p>keyboard + mouse 2.3  0.2</p>
    <p>PCI assignment (hardware)</p>
    <p>keyboard 2.4  0.2</p>
    <p>keyboard + mouse 3.8  0.2</p>
    <p>USB driver disconnect significant (0.8-1.0 s)</p>
    <p>Switch time achieved by eliminating two extra disconnects in guest USB initialization</p>
  </div>
  <div class="page">
    <p>Impact on Full-System Workloads is Low</p>
    <p>Video (75 s)</p>
    <p>Browser (20 s)</p>
    <p>Office Suite (175 s)</p>
    <p>QEMU 32.2  7.4 25.9  1.3 8.1  1.2</p>
    <p>Lacuna 49.7  0.3 (+ 17.5)</p>
    <p>Benchmarks  MPlayer: Watch video in across network  Firefox: Browse Alexa top 20 websites  LibreOffice: Create 2,994-character, 32-image</p>
    <p>document</p>
    <p>No execution slowdown, higher CPU utilization</p>
    <p>Measurements are % CPU utilization</p>
    <p>CPU utilization lowered by hardware AES (AES-NI)</p>
    <p>Worst case: additional 20 percentage points</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Modern computer systems leak secrets</p>
    <p>Lacuna provides forensic deniability: secrets removed after program termination</p>
    <p>Ephemeral channels provide private peripheral I/O</p>
    <p>Lacuna runs full-system workloads efficiently</p>
  </div>
</Presentation>
