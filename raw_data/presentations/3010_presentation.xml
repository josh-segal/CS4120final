<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Yak: A High-Performance Big-Data-Friendly Garbage Collector</p>
    <p>Khanh Nguyen, Lu Fang, Guoqing Xu, Brian Demsky, Sanazsadat Alamian</p>
    <p>University of Chicago ETH ZrichUniversity of California, Irvine Shan Lu Onur Mutlu</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Naiad</p>
  </div>
  <div class="page">
    <p>Background: GC</p>
    <p>Heap</p>
  </div>
  <div class="page">
    <p>Background: GC</p>
    <p>Heap</p>
  </div>
  <div class="page">
    <p>Background: GC</p>
    <p>Heap</p>
  </div>
  <div class="page">
    <p>Background: GC</p>
    <p>Heap</p>
  </div>
  <div class="page">
    <p>Background: GC</p>
    <p>Heap</p>
  </div>
  <div class="page">
    <p>Background: GC</p>
    <p>Heap</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Scalability JVM crashes</p>
    <p>due to OutOfMemory error at early stage</p>
    <p>[Fang et al., SOSP15]</p>
  </div>
  <div class="page">
    <p>Scalability JVM crashes</p>
    <p>due to OutOfMemory error at early stage</p>
    <p>[Fang et al., SOSP15]</p>
    <p>Management cost GC time accounts for</p>
    <p>up to 50% of the execution time</p>
    <p>[Bu et al., ISMM13]</p>
  </div>
  <div class="page">
    <p>Scalability JVM crashes</p>
    <p>due to OutOfMemory error at early stage</p>
    <p>[Fang et al., SOSP15]</p>
    <p>Management cost GC time accounts for</p>
    <p>up to 50% of the execution time</p>
    <p>[Bu et al., ISMM13]</p>
  </div>
  <div class="page">
    <p>Two Paths, Two Hypotheses</p>
    <p>Data Loads and Feeds</p>
    <p>Queries and Results</p>
    <p>Data Publishing</p>
    <p>Cloud</p>
    <p>Cluster Controller</p>
    <p>Node Controller ...</p>
    <p>Node Controller</p>
    <p>Aggregate Join UDF Aggregate Join UDF</p>
    <p>Partitioner</p>
  </div>
  <div class="page">
    <p>Two Paths, Two Hypotheses</p>
    <p>Data Loads and Feeds</p>
    <p>Queries and Results</p>
    <p>Data Publishing</p>
    <p>Cloud</p>
    <p>Cluster Controller</p>
    <p>Node Controller ...</p>
    <p>Node Controller</p>
    <p>Aggregate Join UDF Aggregate Join UDF</p>
    <p>Partitioner</p>
  </div>
  <div class="page">
    <p>Two Paths, Two Hypotheses</p>
    <p>Data Loads and Feeds</p>
    <p>Queries and Results</p>
    <p>Data Publishing</p>
    <p>Cloud</p>
    <p>Cluster Controller</p>
    <p>Node Controller ...</p>
    <p>Node Controller</p>
    <p>Aggregate Join UDF Aggregate Join UDF</p>
    <p>Partitioner</p>
    <p>Control path Data path</p>
  </div>
  <div class="page">
    <p>Two Paths, Two Hypotheses</p>
    <p>Data Loads and Feeds</p>
    <p>Queries and Results</p>
    <p>Data Publishing</p>
    <p>Cloud</p>
    <p>Cluster Controller</p>
    <p>Node Controller ...</p>
    <p>Node Controller</p>
    <p>Aggregate Join UDF Aggregate Join UDF</p>
    <p>Partitioner</p>
    <p>Control path</p>
  </div>
  <div class="page">
    <p>Two Paths, Two Hypotheses</p>
    <p>Data Loads and Feeds</p>
    <p>Queries and Results</p>
    <p>Data Publishing</p>
    <p>Cloud</p>
    <p>Cluster Controller</p>
    <p>Node Controller ...</p>
    <p>Node Controller</p>
    <p>Aggregate Join UDF Aggregate Join UDF</p>
    <p>Partitioner</p>
    <p>Control path</p>
    <p>MASTER</p>
  </div>
  <div class="page">
    <p>Two Paths, Two Hypotheses</p>
    <p>Data Loads and Feeds</p>
    <p>Queries and Results</p>
    <p>Data Publishing</p>
    <p>Cloud</p>
    <p>Cluster Controller</p>
    <p>Node Controller ...</p>
    <p>Node Controller</p>
    <p>Aggregate Join UDF Aggregate Join UDF</p>
    <p>Partitioner</p>
    <p>Control path</p>
    <p>MASTER</p>
  </div>
  <div class="page">
    <p>Two Paths, Two Hypotheses</p>
    <p>Data Loads and Feeds</p>
    <p>Queries and Results</p>
    <p>Data Publishing</p>
    <p>Cloud</p>
    <p>Cluster Controller</p>
    <p>Node Controller ...</p>
    <p>Node Controller</p>
    <p>Aggregate Join UDF Aggregate Join UDF</p>
    <p>Partitioner</p>
    <p>Control path</p>
    <p>MASTER</p>
    <p>SLAVE SLAVE</p>
  </div>
  <div class="page">
    <p>Two Paths, Two Hypotheses</p>
    <p>Data Loads and Feeds</p>
    <p>Queries and Results</p>
    <p>Data Publishing</p>
    <p>Cloud</p>
    <p>Cluster Controller</p>
    <p>Node Controller ...</p>
    <p>Node Controller</p>
    <p>Aggregate Join UDF Aggregate Join UDF</p>
    <p>Partitioner</p>
    <p>Control path</p>
  </div>
  <div class="page">
    <p>Two Paths, Two Hypotheses</p>
    <p>Data Loads and Feeds</p>
    <p>Queries and Results</p>
    <p>Data Publishing</p>
    <p>Cloud</p>
    <p>Cluster Controller</p>
    <p>Node Controller ...</p>
    <p>Node Controller</p>
    <p>Aggregate Join UDF Aggregate Join UDF</p>
    <p>Partitioner</p>
    <p>Data path</p>
  </div>
  <div class="page">
    <p>Two Paths, Two Hypotheses</p>
    <p>Data Loads and Feeds</p>
    <p>Queries and Results</p>
    <p>Data Publishing</p>
    <p>Cloud</p>
    <p>Cluster Controller</p>
    <p>Node Controller ...</p>
    <p>Node Controller</p>
    <p>Aggregate Join UDF Aggregate Join UDF</p>
    <p>Partitioner</p>
    <p>Data path</p>
  </div>
  <div class="page">
    <p>WordCount</p>
  </div>
  <div class="page">
    <p>WordCount</p>
    <p>Document</p>
    <p>Mapper</p>
  </div>
  <div class="page">
    <p>WordCount</p>
    <p>Document</p>
    <p>setup</p>
    <p>Mapper</p>
  </div>
  <div class="page">
    <p>WordCount</p>
    <p>Document</p>
    <p>setup</p>
    <p>Mapper</p>
  </div>
  <div class="page">
    <p>WordCount</p>
    <p>Document</p>
    <p>setup</p>
    <p>map</p>
    <p>Mapper</p>
  </div>
  <div class="page">
    <p>WordCount</p>
    <p>Document</p>
    <p>setup</p>
    <p>map</p>
    <p>Mapper</p>
    <p>Heap</p>
  </div>
  <div class="page">
    <p>WordCount</p>
    <p>Document</p>
    <p>setup</p>
    <p>map</p>
    <p>Mapper</p>
    <p>Heap</p>
  </div>
  <div class="page">
    <p>WordCount</p>
    <p>Document</p>
    <p>setup</p>
    <p>map</p>
    <p>Mapper</p>
    <p>Heap</p>
  </div>
  <div class="page">
    <p>WordCount</p>
    <p>Document</p>
    <p>setup</p>
    <p>map</p>
    <p>Mapper</p>
    <p>Heap</p>
  </div>
  <div class="page">
    <p>WordCount</p>
    <p>Document</p>
    <p>setup</p>
    <p>map</p>
    <p>Mapper</p>
    <p>Heap</p>
  </div>
  <div class="page">
    <p>WordCount</p>
    <p>Document</p>
    <p>setup</p>
    <p>map</p>
    <p>cleanup</p>
    <p>Mapper</p>
    <p>Heap</p>
  </div>
  <div class="page">
    <p>WordCount</p>
    <p>Document</p>
    <p>setup</p>
    <p>map</p>
    <p>cleanup</p>
    <p>Mapper</p>
    <p>Heap</p>
  </div>
  <div class="page">
    <p>WordCount</p>
    <p>Document</p>
    <p>setup</p>
    <p>map</p>
    <p>cleanup</p>
    <p>Mapper</p>
    <p>Heap setup</p>
    <p>cleanup</p>
  </div>
  <div class="page">
    <p>Many data objects have the same life span:</p>
    <p>WordCount</p>
    <p>Document</p>
    <p>setup</p>
    <p>map</p>
    <p>cleanup</p>
    <p>Mapper</p>
    <p>Heap</p>
  </div>
  <div class="page">
    <p>Many data objects have the same life span:</p>
    <p>WordCount</p>
    <p>Document</p>
    <p>setup</p>
    <p>map</p>
    <p>cleanup</p>
    <p>Mapper</p>
    <p>Heap</p>
    <p>GC</p>
  </div>
  <div class="page">
    <p>Many data objects have the same life span:</p>
    <p>WordCount</p>
    <p>Document</p>
    <p>setup</p>
    <p>map</p>
    <p>cleanup</p>
    <p>Mapper</p>
    <p>Heap</p>
    <p>GC run in the middle is wasted</p>
    <p>GC</p>
  </div>
  <div class="page">
    <p>Many data objects have the same life span:</p>
    <p>WordCount</p>
    <p>Document</p>
    <p>setup</p>
    <p>map</p>
    <p>cleanup</p>
    <p>Mapper</p>
    <p>Heap</p>
    <p>GC run in the middle is wasted  Can be efficiently reclaimed together</p>
    <p>GC</p>
    <p>Memory Region</p>
  </div>
  <div class="page">
    <p>Many data objects have the same life span:</p>
    <p>WordCount</p>
    <p>Document</p>
    <p>setup</p>
    <p>map</p>
    <p>cleanup</p>
    <p>Mapper</p>
    <p>Heap</p>
    <p>GC run in the middle is wasted  Can be efficiently reclaimed together</p>
    <p>GC</p>
    <p>Memory Region</p>
  </div>
  <div class="page">
    <p>Many data objects have the same life span:</p>
    <p>WordCount</p>
    <p>Document</p>
    <p>setup</p>
    <p>map</p>
    <p>cleanup</p>
    <p>Mapper</p>
    <p>GC run in the middle is wasted  Can be efficiently reclaimed together</p>
    <p>GC</p>
    <p>Memory Region</p>
  </div>
  <div class="page">
    <p>Region-based Memory Management</p>
    <p>Sophisticated static analysis wont work for data-intensive systems</p>
  </div>
  <div class="page">
    <p>Region-based Memory Management</p>
    <p>Sophisticated static analysis wont work for data-intensive systems</p>
    <p>What about control path?</p>
  </div>
  <div class="page">
    <p>Region-based Memory Management</p>
    <p>Sophisticated static analysis wont work for data-intensive systems</p>
    <p>What about control path?</p>
    <p>generational GC</p>
    <p>region-based memory</p>
    <p>management 8</p>
  </div>
  <div class="page">
    <p>Yak Approach</p>
    <p>Heap</p>
  </div>
  <div class="page">
    <p>Yak Approach</p>
    <p>Data SpaceControl Space</p>
  </div>
  <div class="page">
    <p>Yak Approach</p>
    <p>Data SpaceControl Space</p>
    <p>Generational GC</p>
  </div>
  <div class="page">
    <p>Yak Approach</p>
    <p>Data SpaceControl Space</p>
    <p>Generational GC Region-based Memory Management</p>
  </div>
  <div class="page">
    <p>Reduced memory management cost</p>
    <p>Yak Approach</p>
    <p>Data SpaceControl Space</p>
    <p>Generational GC Region-based Memory Management</p>
  </div>
  <div class="page">
    <p>Reduced memory management cost</p>
    <p>Yak Approach</p>
    <p>Data SpaceControl Space</p>
    <p>Generational GC Region-based Memory Management</p>
    <p>annotate epoch boundary: - epoch_start() - epoch_end()</p>
  </div>
  <div class="page">
    <p>Correctness</p>
    <p>Region</p>
  </div>
  <div class="page">
    <p>Correctness</p>
    <p>Region</p>
  </div>
  <div class="page">
    <p>Correctness</p>
    <p>User-based approach solution:  Facade [Nguyen et al., ASPLOS15]</p>
  </div>
  <div class="page">
    <p>Correctness</p>
    <p>User-based approach solution:  Facade [Nguyen et al., ASPLOS15]</p>
    <p>annotation &amp; refactoring</p>
  </div>
  <div class="page">
    <p>Correctness</p>
    <p>User-based approach solution:  Facade [Nguyen et al., ASPLOS15]</p>
    <p>annotation &amp; refactoring</p>
    <p>Developers</p>
  </div>
  <div class="page">
    <p>Correctness</p>
    <p>User-based approach solution:  Facade [Nguyen et al., ASPLOS15]</p>
    <p>annotation &amp; refactoring</p>
    <p>Yak Developers</p>
  </div>
  <div class="page">
    <p>Yak: An Automatic Solution  Yak: the first hybrid GC</p>
  </div>
  <div class="page">
    <p>Yak: An Automatic Solution  Yak: the first hybrid GC</p>
    <p>Implemented in OpenJDK 8  Modified the interpreter, two JIT compilers, the heap</p>
    <p>layout, the Parallel Scavenge GC  NO code refactoring needed;</p>
    <p>correctness guaranteed by the system</p>
  </div>
  <div class="page">
    <p>Yak: An Automatic Solution  Yak: the first hybrid GC</p>
    <p>Implemented in OpenJDK 8  Modified the interpreter, two JIT compilers, the heap</p>
    <p>layout, the Parallel Scavenge GC  NO code refactoring needed;</p>
    <p>correctness guaranteed by the system  On average, vs. default production GC (PS):</p>
    <p>Reduce 33% execution time  Reduce 78% GC time</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>How to create regions?  How to reclaim regions correctly?</p>
  </div>
  <div class="page">
    <p>How to Create Regions?</p>
    <p>A region starts at a call to epoch-start and ends at a call to epoch-end  The location of epochs affects performance</p>
    <p>but not correctness</p>
    <p>Regions are thread-local  Regions can be nested</p>
  </div>
  <div class="page">
    <p>void main() {</p>
    <p>} //end of main</p>
    <p>How to Create Regions?</p>
  </div>
  <div class="page">
    <p>CS,* void main() {</p>
    <p>} //end of main</p>
    <p>How to Create Regions?</p>
  </div>
  <div class="page">
    <p>CS,*</p>
    <p>void main() {</p>
    <p>} //end of main</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>epoch #1</p>
    <p>How to Create Regions?</p>
  </div>
  <div class="page">
    <p>CS,*</p>
    <p>void main() {</p>
    <p>} //end of main</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>epoch #1</p>
    <p>epoch #2</p>
    <p>How to Create Regions?</p>
  </div>
  <div class="page">
    <p>CS,*</p>
    <p>void main() {</p>
    <p>} //end of main</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>epoch #1</p>
    <p>epoch #2</p>
    <p>epoch #3</p>
    <p>How to Create Regions?</p>
  </div>
  <div class="page">
    <p>Region Semilattice</p>
    <p>CS,*</p>
    <p>region</p>
    <p>void main() {</p>
    <p>} //end of main</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>epoch #1</p>
    <p>epoch #2</p>
    <p>epoch #3</p>
  </div>
  <div class="page">
    <p>Region Semilattice</p>
    <p>CS,*</p>
    <p>region</p>
    <p>void main() {</p>
    <p>} //end of main</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>JOIN( , ) = 3,t1 2,t1 2,t1</p>
    <p>epoch #1</p>
    <p>epoch #2</p>
    <p>epoch #3</p>
  </div>
  <div class="page">
    <p>Region Semilattice</p>
    <p>CS,*</p>
    <p>region</p>
    <p>void main() {</p>
    <p>} //end of main</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>JOIN( , ) = 3,t1 2,t1 2,t1</p>
    <p>epoch #1</p>
    <p>epoch #2</p>
    <p>epoch #3</p>
  </div>
  <div class="page">
    <p>Region Semilattice</p>
    <p>CS,*</p>
    <p>region</p>
    <p>void main() {</p>
    <p>} //end of main</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>JOIN( , ) = 2,t1 2,t2 CS,*</p>
    <p>epoch #1</p>
    <p>epoch #2</p>
    <p>epoch #3</p>
  </div>
  <div class="page">
    <p>Region Semilattice</p>
    <p>CS,*</p>
    <p>region</p>
    <p>void main() {</p>
    <p>} //end of main</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>epoch_start(); for( ) {</p>
    <p>} epoch_end();</p>
    <p>JOIN( , ) = 2,t1 2,t2 CS,*</p>
    <p>epoch #1</p>
    <p>epoch #2</p>
    <p>epoch #3</p>
  </div>
  <div class="page">
    <p>How to Reclaim Regions Correctly?</p>
    <p>Object Promotion Algorithm</p>
  </div>
  <div class="page">
    <p>How to Reclaim Regions Correctly?</p>
    <p>Object Promotion Algorithm Two key tasks:</p>
    <p>What: Identify escaping objects:</p>
  </div>
  <div class="page">
    <p>How to Reclaim Regions Correctly?</p>
    <p>Object Promotion Algorithm Two key tasks:</p>
    <p>What: Identify escaping objects: Tracking of cross-region/space references in write barrier  A fast path for intra-region references  Inter-region references are recorded in the</p>
    <p>remember sets of their destination regions</p>
  </div>
  <div class="page">
    <p>How to Reclaim Regions Correctly?</p>
    <p>Object Promotion Algorithm Two key tasks:</p>
    <p>What: Identify escaping objects: Tracking of cross-region/space references in write barrier  A fast path for intra-region references  Inter-region references are recorded in the</p>
    <p>remember sets of their destination regions</p>
    <p>Where: Decide the relocation destination:</p>
  </div>
  <div class="page">
    <p>How to Reclaim Regions Correctly?</p>
    <p>Object Promotion Algorithm Two key tasks:</p>
    <p>What: Identify escaping objects: Tracking of cross-region/space references in write barrier  A fast path for intra-region references  Inter-region references are recorded in the</p>
    <p>remember sets of their destination regions</p>
    <p>Where: Decide the relocation destination: Query region semilattice</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>&lt;r2, t1&gt;</p>
    <p>&lt;r1, t1&gt;&lt;CS,*&gt;</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>&lt;r2, t1&gt;</p>
    <p>&lt;r1, t1&gt;&lt;CS,*&gt;</p>
    <p>Remember Set</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>&lt;r2, t1&gt;</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
    <p>Remember Set</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>&lt;r2, t1&gt;</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
    <p>Remember Set</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>&lt;r2, t1&gt;</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
    <p>Barrier</p>
    <p>Remember Set</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>&lt;r2, t1&gt;</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
    <p>t2s stack t3s stack</p>
    <p>Barrier</p>
    <p>Remember Set</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>&lt;r2, t1&gt;</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
    <p>t2s stack t3s stack</p>
    <p>Barrier</p>
    <p>Remember Set</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>&lt;r2, t1&gt;</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
    <p>t2s stack t3s stack</p>
    <p>Barrier escaping roots</p>
    <p>Remember Set</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>&lt;r2, t1&gt;</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
    <p>t2s stack t3s stack</p>
    <p>Barrier escaping roots</p>
    <p>Remember Set</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>&lt;r2, t1&gt;</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
    <p>t2s stack t3s stack</p>
    <p>Barrier escaping roots</p>
    <p>Remember Set</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>&lt;r2, t1&gt;</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
    <p>t2s stack t3s stack</p>
    <p>Barrier escaping roots</p>
    <p>Remember Set</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>&lt;r2, t1&gt;</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
    <p>t2s stack t3s stack</p>
    <p>Barrier escaping roots</p>
    <p>Remember Set</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>&lt;r2, t1&gt;</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
    <p>t2s stack t3s stack</p>
    <p>Barrier escaping roots</p>
    <p>Remember Set</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>&lt;r2, t1&gt;</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
    <p>t2s stack t3s stack</p>
    <p>Barrier escaping roots</p>
    <p>Remember Set</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>&lt;r2, t1&gt;</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
    <p>t2s stack t3s stack</p>
    <p>Barrier escaping roots</p>
    <p>Remember Set</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>&lt;r2, t1&gt;</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
    <p>t2s stack t3s stack</p>
    <p>Barrier escaping roots</p>
    <p>Remember Set</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
    <p>t2s stack t3s stack</p>
    <p>Barrier</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
    <p>t2s stack t3s stack</p>
  </div>
  <div class="page">
    <p>Region Deallocation epoch_end()</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
  </div>
  <div class="page">
    <p>Region Deallocation</p>
    <p>t1s stack &lt;r1, t1&gt;&lt;CS,*&gt;</p>
  </div>
  <div class="page">
    <p>Evaluations 3 real-world systems, 9 applications:</p>
    <p>Hadoop  Popular distributed MapReduce implementation</p>
    <p>Hyracks [Borkar et al., ICDE11]  Data-parallel platform to run data-intensive jobs</p>
    <p>on a cluster of shared-nothing machines</p>
    <p>GraphChi [Kyrola et al., OSDI12]  High-performance graph analytical framework</p>
    <p>for a single machine</p>
  </div>
  <div class="page">
    <p>Hy ra</p>
    <p>ck s</p>
    <p>Ha do</p>
    <p>op</p>
    <p>G ra</p>
    <p>ph Ch</p>
    <p>i</p>
    <p>Hy ra</p>
    <p>ck s</p>
    <p>Ha do</p>
    <p>op</p>
    <p>G ra</p>
    <p>ph Ch</p>
    <p>i</p>
    <p>Hy ra</p>
    <p>ck s</p>
    <p>Ha do</p>
    <p>op</p>
    <p>G ra</p>
    <p>ph Ch</p>
    <p>i</p>
    <p>Improvement Summary</p>
    <p>No rm</p>
    <p>al ize</p>
    <p>d Pe</p>
    <p>rfo rm</p>
    <p>an ce</p>
    <p>(t o</p>
    <p>PS )</p>
  </div>
  <div class="page">
    <p>Hy ra</p>
    <p>ck s</p>
    <p>Ha do</p>
    <p>op</p>
    <p>G ra</p>
    <p>ph Ch</p>
    <p>i</p>
    <p>Hy ra</p>
    <p>ck s</p>
    <p>Ha do</p>
    <p>op</p>
    <p>G ra</p>
    <p>ph Ch</p>
    <p>i</p>
    <p>Hy ra</p>
    <p>ck s</p>
    <p>Ha do</p>
    <p>op</p>
    <p>G ra</p>
    <p>ph Ch</p>
    <p>i</p>
    <p>Improvement Summary</p>
    <p>No rm</p>
    <p>al ize</p>
    <p>d Pe</p>
    <p>rfo rm</p>
    <p>an ce</p>
    <p>(t o</p>
    <p>PS )</p>
  </div>
  <div class="page">
    <p>Hy ra</p>
    <p>ck s</p>
    <p>Ha do</p>
    <p>op</p>
    <p>G ra</p>
    <p>ph Ch</p>
    <p>i</p>
    <p>Hy ra</p>
    <p>ck s</p>
    <p>Ha do</p>
    <p>op</p>
    <p>G ra</p>
    <p>ph Ch</p>
    <p>i</p>
    <p>Hy ra</p>
    <p>ck s</p>
    <p>Ha do</p>
    <p>op</p>
    <p>G ra</p>
    <p>ph Ch</p>
    <p>i</p>
    <p>Improvement Summary</p>
    <p>No rm</p>
    <p>al ize</p>
    <p>d Pe</p>
    <p>rfo rm</p>
    <p>an ce</p>
    <p>(t o</p>
    <p>PS )</p>
  </div>
  <div class="page">
    <p>Hy ra</p>
    <p>ck s</p>
    <p>Ha do</p>
    <p>op</p>
    <p>G ra</p>
    <p>ph Ch</p>
    <p>i</p>
    <p>Hy ra</p>
    <p>ck s</p>
    <p>Ha do</p>
    <p>op</p>
    <p>G ra</p>
    <p>ph Ch</p>
    <p>i</p>
    <p>Hy ra</p>
    <p>ck s</p>
    <p>Ha do</p>
    <p>op</p>
    <p>G ra</p>
    <p>ph Ch</p>
    <p>i</p>
    <p>Improvement Summary</p>
    <p>No rm</p>
    <p>al ize</p>
    <p>d Pe</p>
    <p>rfo rm</p>
    <p>an ce</p>
    <p>(t o</p>
    <p>PS )</p>
  </div>
  <div class="page">
    <p>More Data in the Paper</p>
    <p>Statistics on Yaks heap  Overhead breakdown</p>
    <p>Write barrier cost  Extra space cost</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Goal: Reduce memory management cost in Big Data systems</p>
    <p>Solution: Yak, the first hybrid GC  33% execution time savings</p>
  </div>
  <div class="page">
    <p>Thank You!</p>
  </div>
</Presentation>
