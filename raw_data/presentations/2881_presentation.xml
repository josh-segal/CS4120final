<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Ersin kszolu</p>
    <p>Dan S. Wallach</p>
    <p>EVT/WOTE 09</p>
    <p>AUGUST 10, 2009</p>
  </div>
  <div class="page">
    <p>VoteBox  Full featured DRE voting machine</p>
    <p>Paper in USENIX Security Symposium 2008</p>
  </div>
  <div class="page">
    <p>Pre-rendered user interface</p>
    <p>simplifies the graphics</p>
    <p>subsystem &amp; code size</p>
    <p>Elgamal ballot encryption</p>
    <p>allows tallying the votes independently</p>
    <p>Challenge option</p>
    <p>casts the votes as intended</p>
    <p>Network ballot replication</p>
    <p>increases the availability of voting</p>
    <p>records</p>
  </div>
  <div class="page">
    <p>One way of encryption</p>
    <p>Two ways of decryption</p>
  </div>
  <div class="page">
    <p>In a tampered VoteBox, we cannot detect privacy attacks  The random number can be used as a subliminal channel</p>
    <p>VoteBox still needs to be smaller</p>
    <p>EVM Language LOC</p>
    <p>Pvote Python 460</p>
    <p>VoteBox Java 14500</p>
    <p>Diebold AccuVote TSX C++ 64000</p>
    <p>Sequoia Edge C 124000</p>
  </div>
  <div class="page">
    <p>Minimized code size for easier inspection</p>
    <p>End to end cryptography</p>
    <p>Better random numbers</p>
    <p>Additional tamper-evidence mechanism</p>
    <p>Hardware and software hybrid</p>
    <p>Challenge option</p>
    <p>Elgamal Encryption</p>
    <p>Pre-rendered GUI</p>
    <p>Session ID Bitstream Readback</p>
    <p>True Random Number Generator</p>
  </div>
  <div class="page">
    <p>A blank chip that the user can program on the field</p>
    <p>Emulate any chip</p>
    <p>Used for prototyping custom silicon</p>
    <p>Accelerate designs taking the advantage of the parallelism</p>
    <p>Widely deployed in the industry ($2.75 billion in 2010)</p>
    <p>Fast time to market</p>
    <p>Low initial cost</p>
    <p>Re-programmable hence easy to update</p>
  </div>
  <div class="page">
    <p>500k gate FPGA Chip</p>
    <p>Flash RAM</p>
    <p>DRAM</p>
    <p>VGA port</p>
    <p>Dot Matrix LCD (2x16)</p>
    <p>A rotary encoder</p>
    <p>RS232 serial ports</p>
    <p>Buttons and switches</p>
    <p>USB configuration port</p>
    <p>No CPU, GPU, network chip</p>
  </div>
  <div class="page">
    <p>Network replication and storage facilities  We have limited space on board</p>
    <p>Ethernet communication module  Instead we have RS232 port</p>
    <p>High resolution bitmap based GUI  We have character graphics</p>
  </div>
  <div class="page">
    <p>VoteBox Classic vs. VoteBox Nano</p>
  </div>
  <div class="page">
    <p>X Y color textX Y color text</p>
  </div>
  <div class="page">
    <p>IEEE port standard for ICs to:  Debug</p>
    <p>Program</p>
    <p>Monitor</p>
    <p>Daisy chain connection for all the components on board  One wire data in</p>
    <p>One wire data out 1. Bitstream upload and download</p>
    <p>USB</p>
    <p>For FPGAs, JTAG is used for</p>
  </div>
  <div class="page">
    <p>Programming</p>
    <p>USB  JTAG</p>
    <p>..XXXX</p>
    <p>Done !!!</p>
    <p>..9F23..9F23 Triggers</p>
    <p>Session ID</p>
    <p>Captured from TRNG</p>
  </div>
  <div class="page">
    <p>Programming</p>
    <p>USB  JTAG</p>
    <p>..0932..9F23..7FED..1456..3247..6831..127F..E2D6..E12C..FAFA..ED92..259A..2201..F032..CC21..0932..0932</p>
    <p>Write it down!</p>
    <p>FPGA is sealed</p>
    <p>Done !!!</p>
    <p>The design is ready!</p>
  </div>
  <div class="page">
    <p>..0932</p>
    <p>Readback bitstream</p>
    <p>Done !!!</p>
    <p>..0932..7FED..1456..3247..6831..127F..E2D6..E12C..FAFA..ED92..259A..2201..F032..CC21Same ?</p>
    <p>Compare</p>
    <p>Seal is broken</p>
  </div>
  <div class="page">
    <p>Upload a new bitstream</p>
    <p>Elections Start</p>
    <p>Elections End</p>
    <p>Change software</p>
    <p>JTAG port is monitored</p>
    <p>Session ID is read-only</p>
    <p>Evil bitstream</p>
    <p>Session ID</p>
    <p>Bitstream verification</p>
    <p>Elections Start</p>
    <p>Elections End</p>
    <p>Evil bitstream</p>
    <p>Session ID</p>
    <p>Bitstream verification</p>
    <p>Honest bitstream</p>
  </div>
  <div class="page">
    <p>EVM Language LOC Pvote Python 460</p>
    <p>VoteBox Nano C 996</p>
    <p>VoteBox (Stripped) Java ~7300</p>
    <p>VoteBox (Full) Java 14500</p>
    <p>Diebold AccuVote TSX C++ 64000</p>
    <p>Sequoia Edge C 124000</p>
  </div>
  <div class="page">
    <p>Pvote</p>
    <p>VoteBox (Full)</p>
    <p>VoteBox Nano</p>
    <p>Python Libraries</p>
    <p>Linux Kernel</p>
    <p>PR-GUI SHA1</p>
    <p>JAVA Libraries</p>
    <p>Linux Kernel</p>
    <p>PR-GUI Network</p>
    <p>ballot rep.</p>
    <p>Challenge Elgamal enc.</p>
    <p>DSA</p>
    <p>FPGA Modules Custom Modules</p>
    <p>PR-GUI TRNG</p>
    <p>Challenge Elgamal enc. DSA</p>
    <p>Session ID</p>
  </div>
  <div class="page">
    <p>We have shown that a very compact EVM can be built using an FPGA with following features:</p>
    <p>Elgamal Encryption and</p>
    <p>DSA</p>
    <p>Externally verifiable attestation</p>
    <p>Pre-rendered GUI</p>
    <p>No underlying OS</p>
    <p>True Random Number Generator</p>
    <p>Challenge Option</p>
  </div>
  <div class="page">
    <p>At the last step, the voter is given two options</p>
    <p>FPGA only publishes the random numbers, the secret key is still safe</p>
    <p>With a certain amount of challenges, the results are reliable enough</p>
    <p>Cast</p>
    <p>The votes are valid Usual flow</p>
    <p>Challenge</p>
    <p>The votes are invalidated FPGA reveals the random numbers</p>
  </div>
  <div class="page">
    <p>TRNG has 128 ring oscillators, each consisting</p>
    <p>of 3 inverters</p>
    <p>fs is 25 MHz and throughput is 195 kB/s.</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Theft of the device</p>
    <p>No secret data is stored in long term</p>
    <p>Tapping serial port</p>
    <p>The votes are encrypted</p>
    <p>Encryption is probabilistic</p>
  </div>
  <div class="page">
    <p>Hardware LOC</p>
    <p>Crypto Module 760</p>
    <p>TRNG 520</p>
    <p>Other 483</p>
    <p>Total 1763</p>
  </div>
  <div class="page">
    <p>TDI: (Test Data In) TDO: (Test Data Out) TCK: (Test Clock) TMS: (Test Mode Select)</p>
    <p>The line is tripwired to the Session ID</p>
  </div>
  <div class="page">
    <p>Xilinx Spartan-3E 500 Starter Kit</p>
    <p>500k gate FPGA Chip</p>
    <p>Flash RAM (16 MB)</p>
    <p>DRAM (32 MB)</p>
    <p>VGA port</p>
    <p>Dot Matrix LCD (2x16)</p>
    <p>A rotary encoder</p>
    <p>RS232 serial ports</p>
    <p>Buttons and switches</p>
    <p>USB configuration port</p>
    <p>Ethernet Port</p>
    <p>PS/2 port</p>
    <p>8 LEDs</p>
  </div>
  <div class="page">
    <p>TDI: (Test Data In) TDO: (Test Data Out) TCK: (Test Clock) TMS: (Test Mode Select)</p>
    <p>USB</p>
    <p>JTAG</p>
    <p>For FPGAs JTAG is used for</p>
    <p>The line is tripwired to the Session ID</p>
  </div>
  <div class="page"/>
</Presentation>
