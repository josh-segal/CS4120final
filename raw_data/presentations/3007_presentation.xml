<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>2016 IBM Corporation</p>
    <p>XFT: Practical Fault Tolerance beyond Crashes</p>
    <p>OSDI 2016, November 3 2016, Savannah, GA, USA</p>
    <p>Shengyun Liu (NUDT, China)</p>
    <p>Paolo Viotti (EURECOM, France)</p>
    <p>Christian Cachin (IBM Research  Zurich)</p>
    <p>Vivien Quma (INP Grenoble, France)</p>
    <p>Marko Vukoli (IBM Research  Zurich)</p>
  </div>
  <div class="page">
    <p>Fault tolerance</p>
    <p>Building systems that tolerate machine and network faults</p>
    <p>What machine faults?</p>
    <p>Crash faults (CFT)</p>
    <p>Non-crash (a.k.a. Byzantine) faults (BFT) Data losses, omissions, data corruptions, bugs, misconfigurations, hardware faults, cosmic rays,</p>
    <p>incorrect firmware, operator errors,  and malicious behavior</p>
  </div>
  <div class="page">
    <p>Network faults (a.k.a network partitions, asynchrony)</p>
    <p>Reflect the inability of correct machines</p>
    <p>to communicate in a timely manner (i.e., synchronously)</p>
    <p>a partitioned machine</p>
  </div>
  <div class="page">
    <p>This paper in one slide: XFT (cross fault tolerance)</p>
    <p>in absence of non-crash faults</p>
    <p>the same fault-tolerance guarantees as asynchronous CFT</p>
    <p>(i.e., with the same thresholds)</p>
    <p>in presence of non-crash faults</p>
    <p>fault-tolerance guarantees as long as</p>
    <p>the number of faulty or partitioned machines is within a threshold</p>
    <p>XFT showcase: XPaxos</p>
    <p>The first state-machine replication (SMR) protocol in the XFT model</p>
    <p>(almost) as efficient as optimized CFT Paxos 4</p>
    <p>+ +  t</p>
    <p>&gt; 0</p>
  </div>
  <div class="page">
    <p>CFT vs. BFT deterministic SMR</p>
    <p>CFT SMR state-of-the-art</p>
    <p>(e.g., Paxos, RAFT, Zab)</p>
    <p>BFT SMR state-of-the-art</p>
    <p>(e.g., PBFT, Zyzzyva, Chain/Aliph)</p>
    <p>Efficient message patterns Inefficient message patterns</p>
    <p>client</p>
    <p>leader</p>
    <p>replica</p>
    <p>replica</p>
    <p>Paxos</p>
    <p>replica</p>
    <p>PBFT [TOCS02]</p>
    <p>Zyzzyva [TOCS09]</p>
    <p>Chain/Aliph [TOCS15]</p>
    <p>t=1</p>
    <p>NB: These are only common-case message patterns</p>
  </div>
  <div class="page">
    <p>FT guarantees: CFT SMR</p>
    <p>Crash faults</p>
    <p>Non-crash faults</p>
    <p>m a</p>
    <p>c h</p>
    <p>in e</p>
    <p>f a</p>
    <p>u lt s</p>
    <p>Consistency w. any number of machine faults</p>
    <p>Availability w. up to n/2 machine faults</p>
    <p>Performance/cost very good (production use)</p>
    <p>Consistency w. any number of</p>
    <p>faulty or partitioned machines</p>
    <p>none none</p>
    <p>Availability w. up to n/2</p>
    <p>faulty or partitioned machines</p>
    <p>Network faults? yesno</p>
  </div>
  <div class="page">
    <p>FT guarantees: BFT SMR</p>
    <p>Crash faults</p>
    <p>Non-crash faults</p>
    <p>m a</p>
    <p>c h</p>
    <p>in e</p>
    <p>f a</p>
    <p>u lt s</p>
    <p>Consistency w. any number of machine faults</p>
    <p>Availability w. up to n/3 machine faults</p>
    <p>Performance/cost poor (compared to CFT)</p>
    <p>Consistency &amp; Availability w. up to n/3 machine faults</p>
    <p>Consistency w. up to n/3 machine faults and any no. of partitioned machines</p>
    <p>Consistency w. any number of</p>
    <p>faulty or partitioned machines</p>
    <p>Availability w. up to n/3</p>
    <p>faulty or partitioned machines</p>
    <p>Availability w. up to n/3</p>
    <p>faulty or partitioned machines</p>
    <p>Network faults? yesno</p>
  </div>
  <div class="page">
    <p>x = null</p>
    <p>The Cost of Asynchronous BFT (Infamous 3t+1)</p>
    <p>write(I like you)</p>
    <p>x = I like you</p>
    <p>x = I like youx = null</p>
    <p>read()null</p>
    <p>t = 1</p>
    <p>and</p>
    <p>Such a particular adversary is in many use cases</p>
    <p>irrelevant</p>
    <p>&gt; 0 + +  n/2n/3 &gt;</p>
    <p>The cost of BFT comes from providing consistency when</p>
  </div>
  <div class="page">
    <p>XFT (cross fault tolerance)</p>
    <p>in absence of non-crash faults</p>
    <p>the same fault-tolerance guarantees as asynchronous CFT</p>
    <p>(i.e., with the same thresholds)</p>
    <p>in presence of non-crash faults</p>
    <p>fault-tolerance guarantees as long as</p>
    <p>the number of faulty or partitioned machines is within a threshold</p>
    <p>XFT showcase: XPaxos</p>
    <p>The first state-machine replication (SMR) protocol in the XFT model</p>
    <p>(almost) as efficient as optimized CFT Paxos 9</p>
    <p>+ +  t</p>
    <p>&gt; 0</p>
  </div>
  <div class="page">
    <p>XPaxos: XFT SMR</p>
    <p>Crash faults</p>
    <p>Non-crash faults</p>
    <p>m a</p>
    <p>c h</p>
    <p>in e</p>
    <p>f a</p>
    <p>u lt s</p>
    <p>Consistency w. any number of machine faults</p>
    <p>Availability w. up to n/2 machine faults</p>
    <p>Performance/cost very good (compared to CFT)</p>
    <p>Consistency w. any number of</p>
    <p>faulty or partitioned machines</p>
    <p>Availability w. up to n/2</p>
    <p>faulty or partitioned machines</p>
    <p>Consistency &amp; Availability w. up to n/2 machine faults Availability</p>
    <p>w. up to n/2 faulty or partitioned machines</p>
    <p>Consistency w. up to n/2</p>
    <p>faulty or partitioned machines</p>
    <p>Network faults? yesno</p>
  </div>
  <div class="page">
    <p>XPaxos message pattern (common case)</p>
    <p>client</p>
    <p>leader</p>
    <p>replica</p>
    <p>replica</p>
    <p>Paxos (t=1)</p>
    <p>client</p>
    <p>leader</p>
    <p>replica</p>
    <p>replica</p>
    <p>XPaxos (t=1)</p>
    <p>Digitally signed messages</p>
    <p>client</p>
    <p>leader</p>
    <p>replica</p>
    <p>replica</p>
    <p>XPaxos (t&gt;1, here t=2)</p>
    <p>replica</p>
    <p>replica</p>
    <p>client</p>
    <p>leader</p>
    <p>replica</p>
    <p>replica</p>
    <p>Paxos (t&gt;1, here t=2)</p>
    <p>replica</p>
    <p>replica</p>
  </div>
  <div class="page">
    <p>View-change sketch: a problem</p>
    <p>view 1 view 2</p>
    <p>What happened in view1?</p>
    <p>Nothing!</p>
    <p>t+1 replicas</p>
    <p>t+1 replicas</p>
  </div>
  <div class="page">
    <p>View-change sketch: XPaxos solution</p>
    <p>view 1 view 2</p>
    <p>Wait for at least 1 response +</p>
    <p>Connection timeout to all t+1 replicas (including at least one correct)</p>
    <p>Nothing!</p>
    <p>t+1 replicas</p>
    <p>t+1 replicas</p>
    <p>t+1 replicas</p>
    <p>what happened in view1?</p>
  </div>
  <div class="page">
    <p>Deployment: geo-replication playground</p>
  </div>
  <div class="page">
    <p>Choosing the timeout (for view-change)</p>
    <p>Machines TCP ping-ing each other every 100ms for 3 months</p>
    <p>Amazon AWS EC2 micro VMs in 6 regions  US West (CA), US East (VA), Ireland (EU), Brazil (BR), Tokyo (JP), Sydney (AU)</p>
    <p>IBM Softlayer  Mexico (MX), San Jose (CA), Washington (DC), London (UK), Tokyo (JP), Sydney (AU)</p>
    <p>Round-trip</p>
    <p>Latency [ms] avg 99% 99.9% 99.99% max</p>
    <p>min 85 [CA-VA] 130 [CA-JP] 1082 [CA-VA] 1097 [CA-VA] 5208 [JP-AU]</p>
    <p>max 401 [AU-BR] 516 [AU-BR] 1474 [AU-BR] 2495 [JP-BR] 169749 [VA-EU]</p>
    <p>&lt; 2.5s</p>
    <p>Round-trip</p>
    <p>Latency [ms] avg 99.99% Max</p>
    <p>min 65 [CA-MX] 1077 [CA-DC] 3476 [UK-DC]</p>
    <p>max 305 [UK-AU] 1440 [UK-AU] 127869 [JP-DC]</p>
    <p>&lt; 1.5s</p>
  </div>
  <div class="page">
    <p>Performance (ZooKeeper on Amazon EC2 testbed)</p>
    <p>XPaxos</p>
    <p>Zab</p>
    <p>(CFT)</p>
    <p>(optimized) Paxos</p>
    <p>(CFT)</p>
    <p>State-of-the-art</p>
    <p>BFT</p>
    <p>t=1</p>
    <p>write-only workload</p>
    <p>closed-loop</p>
  </div>
  <div class="page">
    <p>Where/when to use XFT?</p>
    <p>Tolerating accidental non-crash (Byzantine) faults</p>
    <p>Wide-area networks and geo-replicated systems</p>
    <p>When adversary cannot control the network at will</p>
    <p>Permissioned blockchain</p>
    <p>www.hyperledger.org</p>
  </div>
  <div class="page">
    <p>Thank you!</p>
    <p>IBM Research - Zurich is hiring Keywords: distributed systems</p>
    <p>fault-tolerance consistency blockchain</p>
  </div>
</Presentation>
