<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>A MEASUREMENT STUDY ON CO-RESIDENCE THREAT INSIDE THE CLOUD</p>
    <p>Zhang Xu College of William and Mary Haining Wang University of Delaware Zhenyu Wu NEC Laboratories America</p>
  </div>
  <div class="page">
    <p>Cloud Becomes Tempting Target</p>
    <p>Attacker</p>
    <p>Valuable targets:  Banking, medical information, etc.  Enterprise sensitive information  Business competitor</p>
  </div>
  <div class="page">
    <p>Threats inside the Cloud</p>
    <p>Attack from inside  More victim information  More attack vectors  More stealthy</p>
  </div>
  <div class="page">
    <p>Co-residence Threats  Co-residence:</p>
    <p>In a public multi-tenant cloud, several virtual machines/physical machines owned by different users are located in the same physical area</p>
    <p>Attacks upon co-residence:  Machine level</p>
    <p>VMs locating in the same physical machine  Covert channel  Side channel</p>
    <p>Rack level  VMs locating in the same rack  Power attack</p>
    <p>XX L3 cache</p>
    <p>Memory Bus</p>
    <p>Victim Attacker</p>
  </div>
  <div class="page">
    <p>Understanding the Battle in Cloud</p>
  </div>
  <div class="page">
    <p>Our Measurement Study  Quantify the co-residence inside the cloud.</p>
    <p>Understanding how cloud vendor adjusted VM placement policy and the impact on co-residence threat.</p>
    <p>Understanding how cloud vendor adjusted networking management with the impact on co-residence threat.</p>
    <p>Understanding co-residence threats in a defensive service: Virtual Private Cloud.</p>
  </div>
  <div class="page">
    <p>Amazon EC2  Pioneer of Infrastructure as a Service with largest business scale</p>
    <p>Most businesses are held in US-east region (North Virginia)</p>
    <p>Instance type  t1.micro, m1.small, m3.large, .  Indicate the size of the VM  Indicate the physical machine model hosting the instance</p>
    <p>Availability zones  Logical area in data center  4 zones in us-east region: 1a, 1b, 1c, 1d</p>
  </div>
  <div class="page">
    <p>Our Measurement Study  Quantify the co-residence threat in the cloud.</p>
    <p>Understanding how cloud vendor adjusted VM placement policy and the impact on co-residence threat.</p>
    <p>Understanding how cloud vendor adjusted networking management and the impact on co-residence threat.</p>
    <p>Understanding co-residence threats in a defensive service: Virtual Private Cloud.</p>
  </div>
  <div class="page">
    <p>Co-residence Quantification</p>
    <p>Achieving random co-residence pair  Using two accounts to launch instances  Achieve any pair of co-residence instance</p>
    <p>Number of instances required to achieve co-residence</p>
    <p>Time taken to achieve co-residence Money cost to achieve coresidence</p>
  </div>
  <div class="page">
    <p>Co-residence Quantification  Achieving co-residence with a target</p>
    <p>Select a specific target  Achieve co-residence with the target</p>
    <p>Number of instances required to achieve co-residence</p>
    <p>Time taken to achieve co-residence Money cost to achieve coresidence</p>
  </div>
  <div class="page">
    <p>Co-residence Quantification  Achieving rack-level co-residence</p>
    <p>Leveraging ToR information (the first hop in trace-routing path)</p>
  </div>
  <div class="page">
    <p>Increasing Difficulty  Compared with 2008 and 2012 results</p>
    <p>[Ristenpart09]</p>
    <p>[Wu12]</p>
  </div>
  <div class="page">
    <p>Our Measurement Study  Quantify the co-residence threat in cloud.</p>
    <p>Understanding how cloud vendor adjusted VM placement policy and the impact on co-residence threat.</p>
    <p>Understanding how cloud vendor adjusted networking management and the impact on co-residence threat.</p>
    <p>Understanding co-residence threats in a defensive service: Virtual Private Cloud.</p>
  </div>
  <div class="page">
    <p>Battle in VM placement  Larger pool</p>
    <p>2008: 1,785 m1.small instances on 87 physical machines  2014: 1,800 m1.small instances on 59 racks (at least 600 physical</p>
    <p>machines)</p>
    <p>Reduced placement locality</p>
  </div>
  <div class="page">
    <p>VM placement  Location associated with instance type, i.e. type locality</p>
  </div>
  <div class="page">
    <p>VM placement  Location associated with availability zones, i.e. zone locality</p>
  </div>
  <div class="page">
    <p>Battle in VM placement  Larger pool</p>
    <p>2008: 1,785 m1.small instances on 87 physical machines  2014: 1,800 m1.small instances on 59 racks (at least 600 physical</p>
    <p>machines)</p>
    <p>Reduced placement locality</p>
    <p>More dynamic assignment  Public-private IP address mapping changes frequently  Different types of instances can be placed in same physical machine</p>
  </div>
  <div class="page">
    <p>Our Measurement Study  Quantify the co-residence threat in cloud.</p>
    <p>Understanding how cloud vendor adjusted VM placement policy and the impact on co-residence threat.</p>
    <p>Understanding how cloud vendor adjusted networking management and the impact on co-residence threat.</p>
    <p>Understanding co-residence threats in a defensive service: Virtual Private Cloud.</p>
  </div>
  <div class="page">
    <p>Networking Management  Measurement methodology</p>
    <p>Trace-routing from multiple sources to random instances in EC2</p>
    <p>Trace-routing among controlled instances</p>
    <p>Neighborhood trace-routing  From a source instance, perform trace routing to all those instances that</p>
    <p>share /23 prefix of their private IP addresses with our source instances</p>
  </div>
  <div class="page">
    <p>Networking Management  Hidden Domain0</p>
    <p>Domain0 is the identifier of the physical machine  Hiding Domain0 in routing path significantly increases difficulty to</p>
    <p>achieve co-residence</p>
    <p>Hidden hops in routing paths  Important routers and switches no longer appear in trace-routing paths</p>
    <p>In 2013 all paths are even-hop [Lacurts13]  34.26% of all paths have odd-hop</p>
    <p>76.11% of paths have at least one hop obscured (filled with stars)</p>
  </div>
  <div class="page">
    <p>Networking Topology</p>
    <p>ToR switch</p>
    <p>ToR switch</p>
    <p>Aggregate switch</p>
    <p>End of Row switches</p>
    <p>Top of Rack Topology</p>
    <p>End of Row Topology</p>
  </div>
  <div class="page">
    <p>Identifying Networking Topology  Two generations&quot; of instances</p>
    <p>The old generation: all the instances with m1 type  the new generation: all other types</p>
    <p>109 racks identified  77 old generation racks  32 new generation racks</p>
    <p>14 racks are non-ToR connected  12 old generation racks  2 new generation racks</p>
    <p>ToR topology is dominating and is the trend  More vulnerable to rack level co-residence threats!</p>
  </div>
  <div class="page">
    <p>Our Measurement Study  Quantify the co-residence threat in cloud.</p>
    <p>Understanding how cloud vendor adjusted VM placement policy and the impact on co-residence threat.</p>
    <p>Understanding how cloud vendor adjusted networking management and the impact on co-residence threat.</p>
    <p>Understanding co-residence threats in a defensive service: Virtual Private Cloud.</p>
  </div>
  <div class="page">
    <p>Virtual Private Cloud (VPC)  VPC is a service to enhance cloud security</p>
    <p>Provides an isolated networking environment to host instances  Private address is invisible to others  Help to suppress co-residence</p>
    <p>VPC is widely used in EC2  All instances in VPC have public IP addresses in 5 IP ranges.</p>
  </div>
  <div class="page">
    <p>Co-residence in VPC  Network is isolated, but physical resources may still be shared!</p>
    <p>Co-residence is still possible</p>
    <p>Challenge: very limited network information  No private address  Routing information is obscured</p>
    <p>Traceroute to 54.91.46.65 (54.91.46.65), 30 hops max, 60 byte packetes 1 * * * 2 * * * 3 100.64.37.82 (100.64.37.82) 14.573 ms 100.64.36.82 (100.64.36.82) 14.813 ms 4 10.1.172.197 (10.1.172.197) 14.734 ms 10.1.32.195 (10.1.32.195) 14.828 ms 5 10.1.14.6 (10.1.14.6) 14.976 ms 14.708 ms 10.1.16.6 (10.1.16.6) 14.849 ms 6 ec2-53-91-46-65.compute-1.amazonaws.com (54.91.46.65) 14.898 ms 0.942 ms</p>
    <p>Traceroute 54.88.197.86 (54.88.197.86), 30 hops max, 60 byte packets 1 10.210.136.3 (10.210.136.3) 1.248 ms 1.303 ms 1.501 ms 2 ip-10-1-14-17.ec2.internal (10.1.14.17) 0.529 ms 0.653 ms 0.781 ms 3 ip-10-1-172-2.ec2.internal (10.1.172.2) 0.492 ms 0.604 ms 0.729 ms 4 * * * 5 * * * 6 ec2-54-88-197-86.compute-1.amazonaws.com (54.88.197.86) 1.048 ms 0.883 ms</p>
  </div>
  <div class="page">
    <p>Co-residence in VPC  Key: number of hops in routing paths and latency are not</p>
    <p>hidden!</p>
    <p>Use latency to speculate the type and availability zone of target  The latency between instances with different types in different zones have</p>
    <p>certain pattern  Launch probing instances with same type in same zone</p>
  </div>
  <div class="page">
    <p>Co-residence in VPC</p>
    <p>Latency vector</p>
    <p>Anchor Instance in EC2 default network</p>
    <p>Instance in VPC</p>
  </div>
  <div class="page">
    <p>Co-residence in VPC  Key: number of hops in routing paths and latency are not</p>
    <p>hidden!</p>
    <p>Use latency to speculate the type and availability zone of target  The latency between instances with different types in different zones have</p>
    <p>certain pattern  Launch probing instances with same type in same zone</p>
    <p>Use number of path hops and latency to filter non-co-residence pairs  Co-residence instances should have same number of hops to same target  Latency between co-residence pairs should be below certain threshold</p>
  </div>
  <div class="page">
    <p>Co-residence in VPC  The target and our probing attack instance should share the</p>
    <p>same number of hops to all of our anchor instances.  Filter out 63.2% candidates</p>
    <p>The end-to-end latency from probing instance and target should be below certain threshold.  Filter out 97% candidates</p>
    <p>Use covert channel to verify co-residence  17.6% of instances that pass the two-steps filtering really achieve co</p>
    <p>residence</p>
  </div>
  <div class="page">
    <p>Co-residence in VPC</p>
    <p>VPC increases difficulty of achieving co-residence significantly  VPC cannot eliminate the co-residence threat</p>
    <p>Effort to achieve co-residence with target in VPC</p>
  </div>
  <div class="page">
    <p>More Secure Cloud Management  Manage naming system properly</p>
    <p>Introduce randomness</p>
    <p>Not publish public IP address range</p>
    <p>Protecting routing information</p>
    <p>Introduce more dynamic VM placement policy  Leverage user historical information</p>
  </div>
  <div class="page">
    <p>Conclusion  Our work demonstrates that EC2 has adjusted VM placement</p>
    <p>policy, which makes co-residence attack more difficult.</p>
    <p>Our measurement shows how networking management adjustment can help mitigate co-residence threat.</p>
    <p>Our study proves the effectiveness of VPC, but even with VPC, co-residence threat still exists in cloud.</p>
  </div>
  <div class="page"/>
</Presentation>
