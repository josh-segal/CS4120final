<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Sink Tree-Based Bandwidth Allocation for Scalable QoS Flow Set-Up</p>
    <p>James Lembke, Byung Choi</p>
    <p>Jan. 19 2006 bkchoi@mtu.edu</p>
    <p>Department of Computer Science</p>
    <p>Michigan Tech University</p>
  </div>
  <div class="page">
    <p>Quality of Service (QoS)</p>
    <p>Quality-of-Service Metrics:  Worst-case end-to-end delay</p>
    <p>Packet loss</p>
    <p>Delay jitter</p>
    <p>How to guarantee QoS?  Strict admission control</p>
    <p>Exclusive bandwidth allocation</p>
    <p>Traffic Policing</p>
  </div>
  <div class="page">
    <p>QoS Flow Set-Up Activities</p>
    <p>Path Selection  Hop-by-Hop vs. Explicit</p>
    <p>Bandwidth Reservation:  Hard vs. Soft</p>
    <p>Admission Control  Delay computation</p>
    <p>Associated Signaling:  RSVP?</p>
  </div>
  <div class="page">
    <p>Scalability of QoS Flow Set-Up</p>
    <p>Two sources of overhead: Computation + Communication</p>
    <p>Three Planes:  Data Plane: Packet forwarding</p>
    <p>Individual (IntServ), Aggregated (DiffServ)</p>
    <p>At core routers: flow-unawareness, no traffic-shaping, no trafficpolishing, unchecked burstiness</p>
    <p>Control Plane: flow set-up</p>
    <p>QoS Routing: ----------------------- Comp. + Comm.</p>
    <p>Resource Reservation: ------------- Comm.</p>
    <p>Admission Control: ----------------- Comp.  Administrative (Management) Plane: resource re-allocation</p>
    <p>with approximation</p>
  </div>
  <div class="page">
    <p>Scalable Delay Computation</p>
    <p>Conditions:  Scalability of the admission control mainly depends on delay</p>
    <p>computation overhead  On-line per-flow delay computation is accurate but non-scalable</p>
    <p>Problem:  How to move on-line computation off-line while supporting</p>
    <p>aggregated packet handling at core routers?</p>
    <p>A Solution:  Off-line computation at network (re-) configuration times for</p>
    <p>aggregated traffic (DiffServ: Flow-Unaware)</p>
    <p>B. Choi, et.al.,: Utilization-based Admission Control for Real-Time Communication, Real-Time System Journal, Kluwer, Mar. 2003.</p>
  </div>
  <div class="page">
    <p>Scalable QoS Flow Set-Up</p>
    <p>Objective</p>
    <p>To provide scalable, effective QoS-Routing and Resource-Reservation</p>
    <p>Approach</p>
    <p>To unify both procedures into a simple one</p>
    <p>Assumptions  Aggregated packet handling for scalable data plane</p>
    <p>Delay computation method in the previous work.</p>
  </div>
  <div class="page">
    <p>QoS-Routing, Revisited</p>
    <p>Ultimate purpose of QoS-routing: Better Resource Utilization</p>
    <p>Constraints: Computation and communication overhead for accuracy in path selection</p>
    <p>General Assumptions (IETF RFC 2676)  Network dynamics  changing always (traffic, topology)</p>
    <p>No node knows the network dynamics exactly at any time</p>
    <p>Hop-by-hop routing based on pseudo real-time information (reasonable guessing)</p>
    <p>Separated from Resource Allocation &amp; Reservation!</p>
  </div>
  <div class="page">
    <p>Resource-Reservation, Revisited</p>
    <p>Dominant protocol: RSVP (ReSource reserVation Protocol)  Hop-by-hop reservation from receiver to sender  PATH, RESV messages  Typically combined with Admission Control at each node  Reservation life time: refresh interval (typically 30 seconds)  Supposed to follow the exact path given by QoS-routing</p>
    <p>Typical work on RSVP  Reducing protocol overhead by</p>
    <p>Aggregation of RESV messages  Extended refresh timer</p>
    <p>Separated from QoS-Routing!</p>
  </div>
  <div class="page">
    <p>RSVP-Style Flow Set-Up Procedure (Integrated Services Architecture)</p>
    <p>(0,2)</p>
    <p>(4,3)</p>
    <p>QoS routing performed at: Resource reserved at: Admission decision made at: Signaling activity at: (0,2), (1,2), (2,2),(3,2),(4,2)</p>
    <p>Flow Set-Up between: Source (0,2), Destination (4,3)</p>
    <p>(1,2) (2,2) (3,2) (4,2)</p>
    <p>Flow Set-Up Request Resource reservation, refresh</p>
    <p>Millions of flows?</p>
  </div>
  <div class="page">
    <p>Bandwidth Broker-style Flow Set-Up Procedure</p>
    <p>(Differentiated Services Architecture)</p>
    <p>Bandwidth Broker Concept (IETF RFC 2638)  It is a node in an AS (Autonomous System)</p>
    <p>It keeps track of network dynamics</p>
    <p>When an edge router receives a flow set-up request, it tosses the request to the bandwidth broker. Then the bandwidth broker does:</p>
    <p>QoS routing</p>
    <p>Resource reservation on the selected path</p>
    <p>Makes admission decision</p>
    <p>Effectively speaking, it takes care of every aspect of the flow set-up procedure (Resource Allocation)</p>
  </div>
  <div class="page">
    <p>Bandwidth Broker-Style Flow Set-Up Procedure (DiffServ)</p>
    <p>(0,2)</p>
    <p>(4,3)</p>
    <p>QoS routing performed at: Resource reserved at: Admission decision made at: Signaling activity at: (0,5)</p>
    <p>Flow Set-Up between: Source (0,2), Destination (4,3)</p>
    <p>(1,2) (2,2) (3,2) (4,2)</p>
    <p>Bandwidth Broker (0,5)</p>
    <p>Admission Request Admission Decision How to keep track?</p>
    <p>(0,5)</p>
  </div>
  <div class="page">
    <p>Multiple Bandwidth Brokers: Information Consistency?</p>
    <p>(0,2)</p>
    <p>(4,3)</p>
    <p>QoS routing performed at: Resource reserved at: Admission decision made at: Signaling activity at: (0,2)</p>
    <p>Flow Set-Up between: Source (0,2), Destination (*,*)</p>
    <p>(1,2) (2,2) (3,2) (4,2)</p>
    <p>An Example: Two Bandwidth Brokers (0,5), (0,2)</p>
    <p>Admission Request Admission Decision</p>
    <p>Bandwidth Zone?</p>
  </div>
  <div class="page">
    <p>Our Approach</p>
    <p>QoS routing performed at: Resource reserved at: Admission decision made at: Signaling activity at: Each edge router only</p>
    <p>Flow Set-Up between: Source (*,*), Destination (*,*)</p>
    <p>Each edge router = Bandwidth Broker</p>
    <p>Admission Request Admission Decision</p>
    <p>How?</p>
  </div>
  <div class="page">
    <p>Distributed Bandwidth Broker</p>
    <p>Each edge router (bandwidth broker) immediately makes the admission decision if the following information is readily available at the node:  QoS route  Delay of the route  Bandwidth availability on the QoS route</p>
    <p>Consistency -- How to share the network resource information for each edge router (Bandwidth Broker)?</p>
    <p>Our Solution  Split network resources into a set of paths  Each router works on its own network resources</p>
  </div>
  <div class="page">
    <p>Methodology: Sink-Tree Paradigm</p>
    <p>N1 N2 N3 N4</p>
    <p>N5 N6</p>
    <p>N7</p>
    <p>B : Bandwidth Units Allocated</p>
    <p>B=10</p>
    <p>B=20 B=30 B=40</p>
    <p>B=30 B=70</p>
    <p>Root (Sink)</p>
    <p>Ingress router : N1, N2, N3, N4</p>
    <p>Egress router : N7</p>
    <p>Core router : N5, N6 Admission Request Admission Decision</p>
  </div>
  <div class="page">
    <p>A Comparison</p>
    <p>RSVP style Bandwidth Broker Approach</p>
    <p>Distributed Bandwidth Broker Admission Request Admission Decision</p>
  </div>
  <div class="page">
    <p>Sink Tree Paradigm So Far,</p>
    <p>Benefits: Scalability by resource allocation  Low computation overhead in QoS routing, admission</p>
    <p>decision  Low communication overhead in resource reservation</p>
    <p>Effectiveness?  Resource utilization ---- will be back</p>
    <p>Overhead?  Memory: Sink Tree Table (QoS Routing Table)  CPU Time: Sink Tree Construction</p>
    <p>Potential Inefficiency?  Resource Partitioning</p>
  </div>
  <div class="page">
    <p>Performance Evaluation of Sink Tree</p>
    <p>Admission probability &amp; Communication overhead  for a single DS Domain</p>
    <p>flat-fixed  Bandwidth allocation : uniform to each link  Path selection : Shortest-Path-First Routing</p>
    <p>Static Sink tree-based  Bandwidth allocation : sink-tree construction  Path selection : pre-defined along sink-tree</p>
    <p>Dynamic Sink tree-based  Reallocation</p>
    <p>Max!  Bandwidth pool</p>
  </div>
  <div class="page">
    <p>Network Topology for Simulation</p>
  </div>
  <div class="page">
    <p>Traffic Spec. for Simulation</p>
    <p>QoS traffic application : Voice-over-IP</p>
    <p>Network : A typical ISP backbone topology in the US  Homogeneous links : 155 Mbps</p>
    <p>Call generation  Call arrival : Poisson process with rate</p>
    <p>Flow lifetime : exponentially distributed with 180 sec., in average</p>
    <p>Source and destination routers : chosen randomly</p>
    <p>Traffic characteristics  Fixed packet length : 640 bits (RTP, UDP, IP headers + 2 voice frame.)</p>
    <p>Flow rate : 32 Kbps</p>
    <p>End-to-end delay requirement : 100 ms</p>
  </div>
  <div class="page">
    <p>Admission Probability of Flat vs. Static Sink Tree</p>
  </div>
  <div class="page">
    <p>Admission Probability of Flat, Dynamic Sinktree, Dynamic-Sinktree-Unit vs. Max</p>
  </div>
  <div class="page">
    <p>Admission Probability of Hot Spot</p>
  </div>
  <div class="page">
    <p>Communication Overhead</p>
  </div>
  <div class="page">
    <p>Single Sinktree Construction</p>
  </div>
  <div class="page">
    <p>Bandwidth Reallocation</p>
  </div>
</Presentation>
