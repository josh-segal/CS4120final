<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Dynamic Hooks Hiding Control Flow Changes within Non-Control Data</p>
    <p>Sebastian Vogl, Robert Gawlik, Behrad Garmany, Thomas Kittel, Jonas Pfoh, Claudia Eckert, Thorsten Holz</p>
    <p>Chair for IT-Security Horst Grtz Institute for IT-Security Technische Universitt Mnchen Ruhr-Universitt Bochum</p>
    <p>Munich, Germany Bochum, Germany</p>
    <p>Dynamic Hooks 1 / 25</p>
  </div>
  <div class="page">
    <p>Background &amp; Motivation  Hooks</p>
    <p>In general, malware needs to intercept events within the system</p>
    <p>Event interception requires us to divert the control flow at runtime  This is accomplished by installing hooks into the control flow</p>
    <p>Dynamic Hooks 2 / 25</p>
  </div>
  <div class="page">
    <p>Background &amp; Motivation  Hooks</p>
    <p>In general, malware needs to intercept events within the system  Event interception requires us to divert the control flow at runtime</p>
    <p>This is accomplished by installing hooks into the control flow</p>
    <p>Dynamic Hooks 2 / 25</p>
  </div>
  <div class="page">
    <p>Background &amp; Motivation  Hooks</p>
    <p>In general, malware needs to intercept events within the system  Event interception requires us to divert the control flow at runtime  This is accomplished by installing hooks into the control flow</p>
    <p>Dynamic Hooks 2 / 25</p>
  </div>
  <div class="page">
    <p>Background &amp; Motivation  Achilles Heel: Hooks</p>
    <p>Types  Change code (Code Hooks)</p>
    <p>Change function pointer (Data Hooks)  Researchers have presented effective detection mechanisms for</p>
    <p>both types</p>
    <p>Dynamic Hooks 3 / 25</p>
  </div>
  <div class="page">
    <p>Background &amp; Motivation  Achilles Heel: Hooks</p>
    <p>Types  Change code (Code Hooks)  Change function pointer (Data Hooks)</p>
    <p>Researchers have presented effective detection mechanisms for both types</p>
    <p>Dynamic Hooks 3 / 25</p>
  </div>
  <div class="page">
    <p>Background &amp; Motivation  Achilles Heel: Hooks</p>
    <p>Types  Change code (Code Hooks)  Change function pointer (Data Hooks)</p>
    <p>Researchers have presented effective detection mechanisms for both types</p>
    <p>Dynamic Hooks 3 / 25</p>
  </div>
  <div class="page">
    <p>Background &amp; Motivation  Achilles Heel: Hooks</p>
    <p>Types  Change code (Code Hooks)  Change function pointer (Data Hooks)</p>
    <p>Researchers have presented effective detection mechanisms for both types</p>
    <p>How can we evade existing detection mechanisms?</p>
    <p>Dynamic Hooks 3 / 25</p>
  </div>
  <div class="page">
    <p>Background &amp; Motivation  Hook Detection</p>
    <p>Assumption  Hooks must target persistent control data</p>
    <p>Dynamic Hooks 4 / 25</p>
  </div>
  <div class="page">
    <p>Background &amp; Motivation  Hook Detection</p>
    <p>Assumption  Hooks must target persistent control data</p>
    <p>Dynamic Hooks: Evade existing mechanisms by targeting transient control data</p>
    <p>Dynamic Hooks 4 / 25</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Dynamic Hooks 5 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Idea</p>
    <p>Apply exploitation techniques to the problem of hooking</p>
    <p>Modify non-control data to trigger vulnerabilities  Change control flow dynamically at runtime</p>
    <p>Dynamic Hooks 6 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Idea</p>
    <p>Apply exploitation techniques to the problem of hooking  Modify non-control data to trigger vulnerabilities</p>
    <p>Change control flow dynamically at runtime</p>
    <p>Dynamic Hooks 6 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Idea</p>
    <p>Apply exploitation techniques to the problem of hooking  Modify non-control data to trigger vulnerabilities  Change control flow dynamically at runtime</p>
    <p>Dynamic Hooks 6 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Idea</p>
    <p>Apply exploitation techniques to the problem of hooking  Modify non-control data to trigger vulnerabilities  Change control flow dynamically at runtime</p>
    <p>Target transient control data</p>
    <p>Dynamic Hooks 6 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Idea</p>
    <p>Apply exploitation techniques to the problem of hooking  Modify non-control data to trigger vulnerabilities  Change control flow dynamically at runtime</p>
    <p>Target transient control data  No evident connection between hook and control flow change</p>
    <p>Dynamic Hooks 6 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Comparison to Traditional Exploits</p>
    <p>We already control the target application</p>
    <p>We are not affected by most protection mechanisms  We can modify internal data structures and attack internal</p>
    <p>functions  We can prepare our shellcode in advance</p>
    <p>Dynamic Hooks 7 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Comparison to Traditional Exploits</p>
    <p>We already control the target application  We are not affected by most protection mechanisms</p>
    <p>We can modify internal data structures and attack internal functions</p>
    <p>We can prepare our shellcode in advance</p>
    <p>Dynamic Hooks 7 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Comparison to Traditional Exploits</p>
    <p>We already control the target application  We are not affected by most protection mechanisms  We can modify internal data structures and attack internal</p>
    <p>functions</p>
    <p>We can prepare our shellcode in advance</p>
    <p>Dynamic Hooks 7 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Comparison to Traditional Exploits</p>
    <p>We already control the target application  We are not affected by most protection mechanisms  We can modify internal data structures and attack internal</p>
    <p>functions  We can prepare our shellcode in advance</p>
    <p>Dynamic Hooks 7 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Comparison to Traditional Exploits</p>
    <p>We already control the target application  We are not affected by most protection mechanisms  We can modify internal data structures and attack internal</p>
    <p>functions  We can prepare our shellcode in advance</p>
    <p>Much stronger attacker model</p>
    <p>Dynamic Hooks 7 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Example: Linux</p>
    <p>Dynamic Hooks 8 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Example: Linux</p>
    <p>write-where-what  [next + 8]= prev</p>
    <p>Dynamic Hooks 9 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Example: Linux</p>
    <p>write-where-what  [next + 8]= prev  [prev]= next</p>
    <p>Dynamic Hooks 10 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Example: Linux</p>
    <p>Dynamic Hooks 11 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Example: Linux</p>
    <p>Dynamic Hooks 12 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Suited Vulnerabilities</p>
    <p>Any vulnerability can be used to implement a dynamic hook.</p>
    <p>We focus on 8-byte writes</p>
    <p>Dynamic Hooks 13 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Suited Vulnerabilities</p>
    <p>Any vulnerability can be used to implement a dynamic hook.  We focus on 8-byte writes</p>
    <p>Dynamic Hooks 13 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Suited Vulnerabilities</p>
    <p>Any vulnerability can be used to implement a dynamic hook.  We focus on 8-byte writes</p>
    <p>mov [ r a x ] , r b x</p>
    <p>Dynamic Hooks 14 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Types</p>
    <p>Dynamic control hooks</p>
    <p>Dynamic data hooks</p>
    <p>Dynamic Hooks 15 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Types</p>
    <p>Dynamic control hooks  Dynamic data hooks</p>
    <p>Dynamic Hooks 15 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Finding Dynamic Hooks</p>
    <p>Program Slicing  Symbolic Execution</p>
    <p>Dynamic Hooks 16 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Finding Dynamic Hooks</p>
    <p>Program Slicing  mov [&lt;destination&gt;], &lt;source&gt;</p>
    <p>backwards breadth-first search on the assembly-level  extract path if destination and source originate from a global</p>
    <p>variable  Implementation: Based on IDA Pro</p>
    <p>Symbolic Execution</p>
    <p>Dynamic Hooks 16 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Finding Dynamic Hooks</p>
    <p>Program Slicing  mov [&lt;destination&gt;], &lt;source&gt;  backwards breadth-first search on the assembly-level</p>
    <p>extract path if destination and source originate from a global variable</p>
    <p>Implementation: Based on IDA Pro</p>
    <p>Symbolic Execution</p>
    <p>Dynamic Hooks 16 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Finding Dynamic Hooks</p>
    <p>Program Slicing  mov [&lt;destination&gt;], &lt;source&gt;  backwards breadth-first search on the assembly-level  extract path if destination and source originate from a global</p>
    <p>variable</p>
    <p>Implementation: Based on IDA Pro</p>
    <p>Symbolic Execution</p>
    <p>Dynamic Hooks 16 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Finding Dynamic Hooks</p>
    <p>Program Slicing  mov [&lt;destination&gt;], &lt;source&gt;  backwards breadth-first search on the assembly-level  extract path if destination and source originate from a global</p>
    <p>variable  Implementation: Based on IDA Pro</p>
    <p>Symbolic Execution</p>
    <p>Dynamic Hooks 16 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Finding Dynamic Hooks</p>
    <p>Program Slicing  Symbolic Execution</p>
    <p>transform extracted path into VEX IR (pyvex)  map VEX statements into Z3 expressions  check satisfiability of conditional branches  generate detailed information about controlled registers</p>
    <p>Dynamic Hooks 16 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Finding Dynamic Hooks</p>
    <p>Program Slicing  Symbolic Execution</p>
    <p>transform extracted path into VEX IR (pyvex)</p>
    <p>map VEX statements into Z3 expressions  check satisfiability of conditional branches  generate detailed information about controlled registers</p>
    <p>Dynamic Hooks 16 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Finding Dynamic Hooks</p>
    <p>Program Slicing  Symbolic Execution</p>
    <p>transform extracted path into VEX IR (pyvex)  map VEX statements into Z3 expressions</p>
    <p>check satisfiability of conditional branches  generate detailed information about controlled registers</p>
    <p>Dynamic Hooks 16 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Finding Dynamic Hooks</p>
    <p>Program Slicing  Symbolic Execution</p>
    <p>transform extracted path into VEX IR (pyvex)  map VEX statements into Z3 expressions  check satisfiability of conditional branches</p>
    <p>generate detailed information about controlled registers</p>
    <p>Dynamic Hooks 16 / 25</p>
  </div>
  <div class="page">
    <p>Dynamic Hooks  Finding Dynamic Hooks</p>
    <p>Program Slicing  Symbolic Execution</p>
    <p>transform extracted path into VEX IR (pyvex)  map VEX statements into Z3 expressions  check satisfiability of conditional branches  generate detailed information about controlled registers</p>
    <p>Dynamic Hooks 16 / 25</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Dynamic Hooks 17 / 25</p>
  </div>
  <div class="page">
    <p>Experiments  Finding Dynamic Hooks</p>
    <p>OS Instructions 8-byte moves Slices Paths</p>
    <p>Linux 1,976,441 42,130 1753 566 Windows 1,330,791 26,694 5450 379</p>
    <p>Prototype Limitations</p>
    <p>Program Slicing: no memory model  79,853 paths ignored</p>
    <p>Symbol Execution: supports only a subset of x86 instruction set  5857 slices ignored</p>
    <p>Dynamic Hooks 18 / 25</p>
  </div>
  <div class="page">
    <p>Experiments  Finding Dynamic Hooks</p>
    <p>OS Instructions 8-byte moves Slices Paths</p>
    <p>Linux 1,976,441 42,130 1753 566 Windows 1,330,791 26,694 5450 379</p>
    <p>Prototype Limitations  Program Slicing: no memory model  79,853 paths ignored</p>
    <p>Symbol Execution: supports only a subset of x86 instruction set  5857 slices ignored</p>
    <p>Dynamic Hooks 18 / 25</p>
  </div>
  <div class="page">
    <p>Experiments  Finding Dynamic Hooks</p>
    <p>OS Instructions 8-byte moves Slices Paths</p>
    <p>Linux 1,976,441 42,130 1753 566 Windows 1,330,791 26,694 5450 379</p>
    <p>Prototype Limitations  Program Slicing: no memory model  79,853 paths ignored</p>
    <p>Symbol Execution: supports only a subset of x86 instruction set  5857 slices ignored</p>
    <p>Dynamic Hooks 18 / 25</p>
  </div>
  <div class="page">
    <p>Experiments  Automated Path Extraction</p>
    <p>Implemented three prototypes of dynamic hooks 1 Control Hook: Interception of system calls (Linux) 2 Data Hook: Backdoor (Linux) 3 Control Hook: Interception of process termination (Windows)</p>
    <p>Dynamic Hooks 19 / 25</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Dynamic Hooks 20 / 25</p>
  </div>
  <div class="page">
    <p>Limitations</p>
    <p>Vulnerability may place restrictions on the hook</p>
    <p>Dynamic Hooks 21 / 25</p>
  </div>
  <div class="page">
    <p>Limitations  Automated Path Extraction</p>
    <p>Dynamic Hooks 22 / 25</p>
  </div>
  <div class="page">
    <p>Limitations</p>
    <p>Vulnerability may place restrictions on the hook  Coverage?</p>
    <p>Side effects?</p>
    <p>Dynamic Hooks 23 / 25</p>
  </div>
  <div class="page">
    <p>Limitations</p>
    <p>Vulnerability may place restrictions on the hook  Coverage?  Side effects?</p>
    <p>Dynamic Hooks 23 / 25</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Dynamic Hooks 24 / 25</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Dynamic Hooks</p>
    <p>Pros</p>
    <p>evade existing detection mechanisms  are more powerful than existing hooking mechanisms  are more difficult to detect</p>
    <p>Cons</p>
    <p>are more complex than traditional hooks  are more fragile than traditional hooks</p>
    <p>Dynamic Hooks 25 / 25</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Dynamic Hooks</p>
    <p>Pros</p>
    <p>evade existing detection mechanisms  are more powerful than existing hooking mechanisms  are more difficult to detect</p>
    <p>Cons</p>
    <p>are more complex than traditional hooks  are more fragile than traditional hooks</p>
    <p>Dynamic Hooks 25 / 25</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Dynamic Hooks</p>
    <p>Pros  evade existing detection mechanisms</p>
    <p>are more powerful than existing hooking mechanisms  are more difficult to detect</p>
    <p>Cons</p>
    <p>are more complex than traditional hooks  are more fragile than traditional hooks</p>
    <p>Dynamic Hooks 25 / 25</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Dynamic Hooks</p>
    <p>Pros  evade existing detection mechanisms  are more powerful than existing hooking mechanisms</p>
    <p>are more difficult to detect</p>
    <p>Cons</p>
    <p>are more complex than traditional hooks  are more fragile than traditional hooks</p>
    <p>Dynamic Hooks 25 / 25</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Dynamic Hooks</p>
    <p>Pros  evade existing detection mechanisms  are more powerful than existing hooking mechanisms  are more difficult to detect</p>
    <p>Cons</p>
    <p>are more complex than traditional hooks  are more fragile than traditional hooks</p>
    <p>Dynamic Hooks 25 / 25</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Dynamic Hooks</p>
    <p>Pros  evade existing detection mechanisms  are more powerful than existing hooking mechanisms  are more difficult to detect</p>
    <p>Cons</p>
    <p>are more complex than traditional hooks  are more fragile than traditional hooks</p>
    <p>Dynamic Hooks 25 / 25</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Dynamic Hooks</p>
    <p>Pros  evade existing detection mechanisms  are more powerful than existing hooking mechanisms  are more difficult to detect</p>
    <p>Cons  are more complex than traditional hooks</p>
    <p>are more fragile than traditional hooks</p>
    <p>Dynamic Hooks 25 / 25</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Dynamic Hooks</p>
    <p>Pros  evade existing detection mechanisms  are more powerful than existing hooking mechanisms  are more difficult to detect</p>
    <p>Cons  are more complex than traditional hooks  are more fragile than traditional hooks</p>
    <p>Dynamic Hooks 25 / 25</p>
  </div>
</Presentation>
