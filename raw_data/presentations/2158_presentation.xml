<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>On the Provision of Prioritization and Soft QoS in</p>
    <p>Dynamically Reconfigurable Shared Data-Centers over</p>
    <p>InfiniBand</p>
    <p>P. Balaji, S. Narravula, K. Vaidyanathan, H. W. Jin and D. K. Panda</p>
    <p>Network Based Computing Laboratory (NBCL)</p>
    <p>The Ohio State University</p>
  </div>
  <div class="page">
    <p>Presentation Outline</p>
    <p>Introduction and Motivation</p>
    <p>Overview of Dynamic Reconfigurability over InfiniBand</p>
    <p>Issues with Basic Dynamic Reconfigurability</p>
    <p>Dynamic Reconfigurability with Prioritization and Soft QoS</p>
    <p>Experimental Results</p>
    <p>Conclusions and Future Work</p>
  </div>
  <div class="page">
    <p>COTS Clusters  Commodity-Off-the-Shelf (COTS) Clusters</p>
    <p>High Performance-to-Cost Ratio</p>
    <p>Enabled through High Performance Networks</p>
    <p>Advent of High Performance Networks</p>
    <p>Ex: InfiniBand, Myrinet, Quadrics, 10-Gigabit Ethernet</p>
    <p>High Performance Protocols: VAPI / IBAL, GM, EMP</p>
    <p>Provide applications direct and protected access to the network</p>
    <p>InfiniBand: An Industry Standard High Performance Network Architecture</p>
    <p>Low latency (&lt; 4us) and high throughput (near wire speed = 10Gbps)</p>
    <p>Offloaded Protocol Stack, Zero-copy data transfer, One-sided communication</p>
    <p>(RDMA read/write, atomics, etc)</p>
    <p>InfiniBand-based COTS Clusters are becoming extremely popular !</p>
  </div>
  <div class="page">
    <p>Cluster-based Data-Centers  Increasing adoption of Internet</p>
    <p>Primary means of electronic interaction</p>
    <p>Highly Scalable and Available Web-Servers: Critical !</p>
    <p>Utilizing Clusters for Data-Center environments?</p>
    <p>Studied and Proposed by the Industry and Research communities</p>
    <p>(Courtesy CSP Architecture Design)</p>
    <p>Nodes are logically partitioned</p>
    <p>Interact depending on the query</p>
    <p>Provide services requested</p>
    <p>Load increases in the inner</p>
    <p>tiers</p>
    <p>Edge Services</p>
    <p>Front tier Applications</p>
    <p>Mid tier Applications Back end</p>
    <p>Applications</p>
    <p>Internet</p>
    <p>Enterprise Network</p>
  </div>
  <div class="page">
    <p>Shared Multi-Tier Data-Centers</p>
    <p>WAN</p>
    <p>Clients</p>
    <p>Clients</p>
    <p>Load Balancing Cluster (Site A)</p>
    <p>Load Balancing Cluster (Site B)</p>
    <p>Load Balancing Cluster (Site C)</p>
    <p>Website A</p>
    <p>Website B</p>
    <p>Website C</p>
    <p>Servers</p>
    <p>Servers</p>
    <p>Servers</p>
    <p>Fragmentation of resources</p>
    <p>Service differentiation</p>
    <p>QoS guarantees</p>
  </div>
  <div class="page">
    <p>Objective  Fragmentation of resources needs to be curbed [balaji04_reconf]</p>
    <p>Dynamically configuring nodes allotted to each service</p>
    <p>Service differentiation for different websites hosted</p>
    <p>Intelligent dynamic reconfiguration based on pre-defined prioritization rules</p>
    <p>QoS guarantees for low-priority requests</p>
    <p>Ensure that low priority websites are given certain minimal resources at all times</p>
    <p>Can the advanced features provided by InfiniBand help in providing</p>
    <p>dynamic reconfigurability with QoS and prioritization for different</p>
    <p>websites?</p>
    <p>balaji04_reconf: Exploiting Remote Memory Operations to Design Efficient Reconfiguration for Shared Data</p>
    <p>Centers over InfiniBand. P. Balaji, K. Vaidyanathan, S. Narravula, S. Krishnamoorthy, H. W. Jin and D. K. Panda.</p>
    <p>In the RAIT workshop, held in conjunction with Cluster 2004.</p>
  </div>
  <div class="page">
    <p>Presentation Outline</p>
    <p>Introduction and Motivation</p>
    <p>Overview of Dynamic Reconfigurability over InfiniBand</p>
    <p>Issues with Basic Dynamic Reconfigurability</p>
    <p>Dynamic Reconfigurability with Prioritization and Soft QoS</p>
    <p>Experimental Results</p>
    <p>Conclusions and Future Work</p>
  </div>
  <div class="page">
    <p>Basic Dynamic Reconfigurability (Reconf)</p>
    <p>WAN</p>
    <p>Clients</p>
    <p>Clients</p>
    <p>Load Balancing Cluster (Site A)</p>
    <p>Load Balancing Cluster (Site B)</p>
    <p>Load Balancing Cluster (Site C)</p>
    <p>Website A</p>
    <p>Website B</p>
    <p>Website C</p>
    <p>Servers</p>
    <p>Servers</p>
    <p>Servers</p>
    <p>Nodes reconfigure themselves to highly loaded websites at run-time</p>
  </div>
  <div class="page">
    <p>Reconf Design  Support for Existing Applications</p>
    <p>Utilizing External Helper Modules (external programs running on each</p>
    <p>node) to take care of load monitoring, reconfiguration, etc.</p>
    <p>Load-Balancer based vs. Server based Reconfiguration</p>
    <p>Remote Memory Operations based Design  Locking and Data Sharing are based on InfiniBand one-sided</p>
    <p>operations and atomics</p>
    <p>Load-balancers remotely monitor and reconfigure the system</p>
  </div>
  <div class="page">
    <p>Utilizing InfiniBand Features  Two-level hierarchical locking mechanism</p>
    <p>Both locks performed remotely using InfiniBand Atomic Operations</p>
    <p>Completely load resilient design</p>
    <p>Server Website A</p>
    <p>Load Balancer B</p>
    <p>Server Website B</p>
    <p>Not Loaded Loaded</p>
    <p>Load QueryLoad Query</p>
    <p>Lock</p>
    <p>Data Sharing</p>
    <p>Reconfigure Node</p>
    <p>(Atomic) Unlock</p>
    <p>Load Shared</p>
    <p>Load Shared</p>
  </div>
  <div class="page">
    <p>Presentation Outline</p>
    <p>Introduction and Motivation</p>
    <p>Overview of Dynamic Reconfigurability over InfiniBand</p>
    <p>Issues with Basic Dynamic Reconfigurability</p>
    <p>Dynamic Reconfigurability for Prioritization and Soft QoS</p>
    <p>Experimental Results</p>
    <p>Conclusions and Future Work</p>
  </div>
  <div class="page">
    <p>Issues with Reconf on High Priority Requests</p>
    <p>WAN</p>
    <p>Clients</p>
    <p>Clients</p>
    <p>Load Balancing Cluster (Site A)</p>
    <p>Load Balancing Cluster (Site B)</p>
    <p>Load Balancing Cluster (Site C)</p>
    <p>Website A (low priority)</p>
    <p>Website B (medium priority)</p>
    <p>Website C (high priority)</p>
    <p>Servers</p>
    <p>Servers</p>
    <p>Servers</p>
    <p>High Priority website may get lesser number of servers compared to medium/low priority</p>
    <p>websites since Reconf does not have any idea about Prioritization between websites</p>
    <p>SCARCITY</p>
  </div>
  <div class="page">
    <p>Presentation Outline</p>
    <p>Introduction and Motivation</p>
    <p>Overview of Dynamic Reconfigurability over InfiniBand</p>
    <p>Issues with Basic Dynamic Reconfigurability</p>
    <p>Dynamic Reconfigurability for Prioritization and Soft QoS</p>
    <p>Experimental Results</p>
    <p>Conclusions and Future Work</p>
  </div>
  <div class="page">
    <p>Dynamic Reconfigurability with Prioritization (Reconf-P)</p>
    <p>Prioritization support for Reconf  Reconf requires additional logic to be priority aware</p>
    <p>Pre-defined rules for prioritization amongst various websites</p>
    <p>Reconfiguration is website priority aware  A node is said to be a free node if one of the following is true:</p>
    <p>It is lightly loaded</p>
    <p>It is serving a website with a lower priority than the requesting website</p>
  </div>
  <div class="page">
    <p>Reconf with Prioritization</p>
    <p>WAN</p>
    <p>Clients</p>
    <p>Clients</p>
    <p>Load Balancing Cluster (Site A)</p>
    <p>Load Balancing Cluster (Site B)</p>
    <p>Load Balancing Cluster (Site C)</p>
    <p>Website A (low priority)</p>
    <p>Website B (medium priority)</p>
    <p>Website C (high priority)</p>
    <p>Servers</p>
    <p>Servers</p>
    <p>Servers</p>
    <p>Low Priority websites may never get guaranteed number of servers since Reconf-P does</p>
    <p>not have any idea about QoS guarantees for websites</p>
    <p>SCARCITY</p>
  </div>
  <div class="page">
    <p>Dynamic Reconfigurability with Prioritization and Soft QoS Guarantees (Reconf-PQ)</p>
    <p>Prioritization based Dynamic Reconfigurability  Allows high paying websites to achieve a better performance</p>
    <p>Can result in scarcity of resources for low priority websites</p>
    <p>QoS guarantees required to ensure scarcity-free reconfiguration  Static allocation always provides QoS guarantees</p>
    <p>Low priority requests are given resources statically and never taken away</p>
    <p>QoS provided based on the resources available</p>
    <p>Reconf-PQ based design</p>
    <p>We want to ensure that low priority requests have some guaranteed resources (Hard QoS)</p>
    <p>We also want to achieve greater revenue by over-selling our resources</p>
    <p>Soft QoS Guarantees: Maximum resources we can allot based on other requests !</p>
    <p>Soft QoS ensures that a websites allocation does not deny other websites of their Hard QoS</p>
  </div>
  <div class="page">
    <p>Reconf with Prioritization and QoS</p>
    <p>WAN</p>
    <p>Clients</p>
    <p>Clients</p>
    <p>Load Balancing Cluster (Site A)</p>
    <p>Load Balancing Cluster (Site B)</p>
    <p>Load Balancing Cluster (Site C)</p>
    <p>Website A (low priority)</p>
    <p>Website B (medium priority)</p>
    <p>Website C (high priority)</p>
    <p>Servers</p>
    <p>Servers</p>
    <p>Servers</p>
    <p>Reconf-PQ reconfigures nodes for different websites but also guarantees fixed number</p>
    <p>of nodes to low priority requests</p>
    <p>Hard QoS Maintained</p>
  </div>
  <div class="page">
    <p>Presentation Outline</p>
    <p>Introduction and Motivation</p>
    <p>Overview of Dynamic Reconfigurability over InfiniBand</p>
    <p>Issues with Basic Dynamic Reconfigurability</p>
    <p>Dynamic Reconfigurability for Prioritization and Soft QoS</p>
    <p>Experimental Results</p>
    <p>Conclusions and Future Work</p>
  </div>
  <div class="page">
    <p>Experimental Test-bed  Cluster 1 with:</p>
    <p>8 SuperMicro SUPER X5DL8-GG nodes; Dual Intel Xeon 3.0 GHz</p>
    <p>processors</p>
    <p>512 KB L2 cache, 2 GB memory; PCI-X 64-bit 133 MHz</p>
    <p>Cluster 2 with:</p>
    <p>8 SuperMicro SUPER P4DL6 nodes; Dual Intel Xeon 2.4 GHz</p>
    <p>processors</p>
    <p>512 KB L2 cache, 512 MB memory; PCI-X 64-bit 133 MHz</p>
    <p>InfiniBand Interconnect with:</p>
    <p>Mellanox MT23108 Dual Port 4x HCAs; MT43132 24-port switch</p>
    <p>Apache 2.0.50 Web and PHP 4.3.7 servers; MySQL 4.0.12 Database</p>
    <p>server</p>
  </div>
  <div class="page">
    <p>Experimental Outline  Load resilience capabilities of InfiniBand in the data</p>
    <p>center environment</p>
    <p>Performance of Reconf comparing with static allocation</p>
    <p>schemes</p>
    <p>Performance of Reconf, Reconf-P, Reconf-PQ</p>
    <p>QoS meeting capabilities for Reconf, Reconf-P,</p>
    <p>Reconf-PQ</p>
  </div>
  <div class="page">
    <p>Load resilience capabilities of InfiniBand</p>
    <p>Remote memory operations are not affected AT ALL with remote server load</p>
  </div>
  <div class="page">
    <p>Basic Reconfigurability Performance</p>
    <p>Large Burst Length allows reconfiguration of the system closer to the best case; reconfiguration time is negligible;</p>
    <p>Performs comparably with the static scheme for small burst sizes</p>
  </div>
  <div class="page">
    <p>Reconfigurability Performance with QoS and Prioritization</p>
    <p>Reconf does not perform any additional reconfiguration</p>
    <p>Reconf and Reconf-P allocate maximum number of nodes to the low-priority website whereas Reconf-PQ allocates nodes to the QoS guaranteed to that website.</p>
    <p>Case 1: A load of high priority requests arrives when a load of low priority requests already exists</p>
    <p>Case 2: A load of low priority requests arrives when a load of high priority requests already exists</p>
    <p>Case 3: Both high and low priority requests arrive simultaneously</p>
  </div>
  <div class="page">
    <p>QoS Meeting Capability</p>
    <p>Reconf and Reconf-P perform well only in some cases and lack consistency in providing the guaranteed QoS requirements to both websites</p>
    <p>Reconf-PQ meets the guaranteed QoS requirements in all cases</p>
  </div>
  <div class="page">
    <p>QoS Meeting Capability  Zipf and Worldcup Traces</p>
    <p>Similar trends are seen for Zipf and Worldcup traces with QoS meeting capability of nearly 100% for Reconf-PQ</p>
  </div>
  <div class="page">
    <p>Presentation Outline</p>
    <p>Introduction and Motivation</p>
    <p>Overview of Dynamic Reconfigurability over InfiniBand</p>
    <p>Issues with Basic Dynamic Reconfigurability</p>
    <p>Dynamic Reconfigurability for Prioritization and Soft QoS</p>
    <p>Experimental Results</p>
    <p>Conclusions and Future Work</p>
  </div>
  <div class="page">
    <p>Concluding Remarks &amp; Future Work  Shared Data-Centers are commonly used by several ISPs</p>
    <p>Resource Fragmentation</p>
    <p>Prioritization for high paying websites</p>
    <p>QoS guarantees for all websites</p>
    <p>Extended our previous Dynamic Reconfigurability scheme  Prioritization improves the performance of high priority websites</p>
    <p>QoS guarantees protect the low priority websites from scarcity of resources</p>
    <p>Multi-Stage Reconfigurations  Least loaded servers might not be the best server to reconfigure, Caching</p>
    <p>constraints, Hardware heterogeneity</p>
    <p>Fine Grained Resource Reconfigurations</p>
    <p>Have done some initial study on file system reconfigurations</p>
    <p>Memory reconfiguration: utilizing remote memory in clusters as secondary cache</p>
  </div>
  <div class="page">
    <p>Web Pointers</p>
    <p>Network Based Computing</p>
    <p>Laboratory</p>
    <p>Group Homepage: http://nowlab.cis.ohio-state.edu</p>
    <p>Emails: {balaji, narravul, vaidyana, jinhy, panda}@cse.ohio-state.edu</p>
    <p>NBC-LAB</p>
  </div>
</Presentation>
