<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Virtually</p>
    <p>Cool</p>
    <p>Ternary</p>
    <p>Content Addressable Memory</p>
    <p>Suparna Bhattacharya, K Gopinath IBM, Indian Institute of Science HotOS XIII, May, 2011</p>
    <p>Thanks to Bob Montoye, Vijaylakshmi Srinivasan, Bipin Rajendran, Richard Freitas, John Karidis, C Mohan and Jai Menon</p>
  </div>
  <div class="page">
    <p>Content Word 0C1</p>
    <p>Content Word 1C1</p>
    <p>Content Word 2C1</p>
    <p>...</p>
    <p>Content Word nC1</p>
    <p>Matchlines</p>
    <p>Search WordC1</p>
    <p>Searchlines</p>
    <p>Location Addressed Store (LAS)</p>
    <p>Ternary Content Addressable Memory (TCAM)</p>
    <p>Fast (constant time) key lookup  Parallel match on large data array</p>
  </div>
  <div class="page">
    <p>* * * 1 0 1 * *</p>
    <p>...</p>
    <p>Matchlines</p>
    <p>Searchlines</p>
    <p>Ternary Content Addressable Memory (TCAM)</p>
    <p>Fast (constant time) key lookup  Parallel match on large data array</p>
    <p>Ternary data: 0, 1, * (don't care bit)  Binary wild-card storage</p>
    <p>Used in High Perf. Network routers</p>
    <p>TCAM RAM</p>
  </div>
  <div class="page">
    <p>Search word</p>
    <p>* * * 1 0 1 * *</p>
    <p>...</p>
    <p>Matchlines</p>
    <p>* * 0 0 0 1 1 0 1</p>
    <p>Searchlines</p>
    <p>Ternary Content Addressable Memory (TCAM)</p>
    <p>Fast (constant time) key lookup  Parallel match on large data array</p>
    <p>Ternary data: 0, 1, * (don't care bit)  Binary wild-card storage</p>
    <p>Used in High Perf. Network routers</p>
    <p>TCAM RAM</p>
  </div>
  <div class="page">
    <p>Search word</p>
    <p>* * * 1 0 1 * *</p>
    <p>...</p>
    <p>Matchlines</p>
    <p>* * 0 0 0 1 1 0 1</p>
    <p>Searchlines</p>
    <p>TCAM Assoc. RAM</p>
    <p>LAS</p>
    <p>Ternary Content Addressable Memory (TCAM)</p>
    <p>Fast (constant time) key lookup  Parallel match on large data array</p>
    <p>Ternary data: 0, 1, * (don't care bit)  Binary wild-card storage</p>
    <p>Used in High Perf. Network routers</p>
    <p>Meiners et al, 2010: Fast regular expression matching using small TCAMs for network intrusion detection and prevention</p>
    <p>TCAM RAM</p>
    <p>Example: Encoding a DFA in TCAM</p>
  </div>
  <div class="page">
    <p>**C***C**B***B**A***A***</p>
    <p>*BCD*BCAB*DAB*DABC*ABC*</p>
    <p>ABCDABCD</p>
    <p>A TCAM is a Natural Candidate for Representation of Space/Time Efficient Associative Search Structures</p>
    <p>Subset query  Ternary Bloom Filter  Similarity search</p>
    <p>Ternary Locality Sensitive Hashing (TLSH)  Approximate nearest neighbor</p>
    <p>Regular expression pattern matching  Compact DFA in TCAM</p>
    <p>Database join  Multi-match exploitation</p>
    <p>More flexible than radix tree, grid of tries, hash table  different constraints (only power of 2</p>
    <p>ranges, not ordered, fixed width)</p>
    <p>Parallel matching construct on a wild-card storage - powerful abstraction Ability to simultaneously search through a large number of sub-spaces of a (typically sparse) fixed dimensional space.</p>
    <p>ABC</p>
    <p>AB* A*C *BC</p>
    <p>*B* *C*</p>
    <p>*** data</p>
    <p>A**</p>
    <p>B</p>
    <p>C A</p>
    <p>A**</p>
    <p>data</p>
    <p>data</p>
    <p>data</p>
    <p>data</p>
    <p>*00</p>
    <p>Lattice view 3D attrib to data associations A,B,C: attrib dimensions</p>
    <p>Sub-spaces view</p>
    <p>*01</p>
  </div>
  <div class="page">
    <p>But the Parallel Match Circuit Has a High Power Cost</p>
    <p>MB/ chip</p>
    <p>$/chip $/MB Spee d (ns)</p>
    <p>Watts /chip</p>
    <p>Watts/ MB</p>
    <p>DRAM 128 10-20 0.080.16</p>
    <p>SRAM 9 50-70 5.57.8</p>
    <p>TCAM 4.5 200300</p>
    <p>Agarwal &amp; Sherwood 2008: TCAM Power and Delay Model Pagiamtzis et al 2006: CAM Circuits and Architectures: Tutorial &amp; Survey</p>
    <p>Goel &amp; Gupta, SIGMETRICS'10: Small Subset Queries Using Ternary Bloom Filters</p>
    <p>Mismatches are an overhead</p>
  </div>
  <div class="page">
    <p>IBM Confidential</p>
    <p>Content Addressable Store (TCAS)</p>
    <p>Level 1</p>
    <p>Content Addressable Store (TCAS)</p>
    <p>Level 2</p>
    <p>Content-Based Cache</p>
    <p>Location Addressable Hierarchical Store (LAS)</p>
    <p>Location Based Cache</p>
    <p>Content Based Page</p>
    <p>Content Addressable Virtual Memory Hierarchy</p>
    <p>Content Locality  Contiguity in content</p>
    <p>key-space  Physically dispersed</p>
    <p>Content-Based Page  Sub-space range in</p>
    <p>content key space  Entries may be</p>
    <p>physically dispersed  Different from</p>
    <p>traditional paging !</p>
    <p>Classifying workload content locality  Rare Hits  Frequent Item Hits  Nearby Item Hits  Random Hits</p>
  </div>
  <div class="page">
    <p>IBM Confidential</p>
    <p>Virtual Content Space Physical representation (P1, P3, PN in Level 1)</p>
    <p>P1</p>
    <p>P2</p>
    <p>P3</p>
    <p>PN</p>
    <p>C on</p>
    <p>te nt</p>
    <p>B lo</p>
    <p>ck</p>
    <p>Level 2 CA-Store</p>
    <p>Level 1 CA-Store</p>
    <p>Content Cache</p>
    <p>Content Pages</p>
    <p>...</p>
    <p>Example: Virtual Content Space to TCAS Mapping</p>
  </div>
  <div class="page">
    <p>IBM Confidential</p>
    <p>Many interesting questions arise, let us explore one of them in a little more detail...</p>
    <p>How do we save and find TCAM entries that have been paged out to DRAM ?  Representing ternary content words in a binary store</p>
    <p>Easy: with extra bits  Indexing ternary content words in a location addressable store</p>
    <p>What in-memory data structures should we use ?  Hash tables ?  Integer radix tree ?  ??</p>
  </div>
  <div class="page">
    <p>IBM Confidential</p>
    <p>* * * * * *</p>
    <p>Virtual Content Space Physical representation (P1, P3, PN in Level 1)</p>
    <p>Physical representation after page-out of P1 &amp; P3</p>
    <p>P1</p>
    <p>P2</p>
    <p>P3</p>
    <p>PN</p>
    <p>C on</p>
    <p>te nt</p>
    <p>B lo</p>
    <p>ck</p>
    <p>Level 2 CA-Store Level 2 CA-Store</p>
    <p>Level 1 CA-Store Level 1 CA-Store</p>
    <p>Content Cache Content Cache</p>
    <p>Content Pages</p>
    <p>...</p>
    <p>Example: Virtual Content Space to TCAS Mapping</p>
  </div>
  <div class="page">
    <p>IBM Confidential</p>
    <p>Implementation Challenges, Design Issues, Debates ...</p>
    <p>Feasibility and Potential: e.g. Power-perf-cost trade-off  Understand content locality/working sets of existing workloads  TCAM extensions for efficient multi-match ?  PCM(Phase Change Memory) based TCAM ?</p>
    <p>TCAS(Ternary Content Addr Store) &amp; LAS(Location Addr Store) management  Esp. concurrency, sharing ...</p>
    <p>Choice of interface: How should the abstraction be exposed to applications ?  Fully transparent vs Exposed interface ?</p>
    <p>What new possibilities could be opened up if we make content addressability a first class abstraction in virtual memory design ?  Too radical or outrageous to be worth it ?  Or so crazy that it just might work ?  The good news is that it doesn't need to be that radical unless it makes sense</p>
    <p>e.g. compatibility with location based addressing straightforward</p>
  </div>
  <div class="page">
    <p>IBM Confidential</p>
    <p>Today is the 150th birth-anniversary of Rabindranath Tagore Bengali Poet, writer, philosopher, Nobel laureate</p>
    <p>... where words come out from the depth of truth,</p>
    <p>where tireless striving stretches its arms towards perfection,</p>
    <p>where the clear stream of reason has not lost its way into the dreary desert sand of dead habit ...</p>
    <p>... Pearl fishers dive for pearls, merchants sail in their ships, while children gather pebbles and scatter them again.</p>
    <p>They seek not for hidden treasures, they know not how to cast nets.</p>
  </div>
</Presentation>
