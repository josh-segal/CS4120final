<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Packing Tasks with Dependencies</p>
    <p>Robert Grandl, Srikanth Kandula, Sriram Rao, Aditya Akella, Janardhan Kulkarni</p>
  </div>
  <div class="page">
    <p>The Cluster Scheduling Problem</p>
    <p>Jobs Goal: match tasks to resources</p>
    <p>Tasks</p>
  </div>
  <div class="page">
    <p>The Cluster Scheduling Problem</p>
    <p>Jobs Goal: match tasks to resources</p>
    <p>Tasks</p>
  </div>
  <div class="page">
    <p>The Cluster Scheduling Problem</p>
    <p>Jobs Goal: match tasks to resources to achieve  High cluster utilization  Fast job completion  Guarantees (deadlines, fair</p>
    <p>shares)</p>
    <p>Tasks</p>
  </div>
  <div class="page">
    <p>The Cluster Scheduling Problem</p>
    <p>Jobs Goal: match tasks to resources to achieve  High cluster utilization  Fast job completion  Guarantees (deadlines, fair</p>
    <p>shares)</p>
    <p>Constraints  Scale  fast twitch</p>
    <p>Tasks</p>
  </div>
  <div class="page">
    <p>The Cluster Scheduling Problem</p>
    <p>Jobs Goal: match tasks to resources to achieve  High cluster utilization  Fast job completion  Guarantees (deadlines, fair</p>
    <p>shares)</p>
    <p>Constraints  Scale  fast twitch</p>
    <p>Tasks</p>
    <p>Large and high-value deployments  E.g., Spark, Yarn*, Mesos*, Cosmos</p>
  </div>
  <div class="page">
    <p>The Cluster Scheduling Problem</p>
    <p>Jobs Goal: match tasks to resources to achieve  High cluster utilization  Fast job completion  Guarantees (deadlines, fair</p>
    <p>shares)</p>
    <p>Constraints  Scale  fast twitch</p>
    <p>Tasks</p>
    <p>Large and high-value deployments  E.g., Spark, Yarn*, Mesos*, Cosmos</p>
    <p>Today, schedulers are simple and (as we show) performance can improve a lot 2</p>
  </div>
  <div class="page">
    <p>Jobs have heterogeneous DAGs</p>
    <p>User queries  Query optimizer  Job DAG (Dryad, Spark-SQL, Hive,)</p>
  </div>
  <div class="page">
    <p>Jobs have heterogeneous DAGs</p>
    <p>User queries  Query optimizer  Job DAG</p>
    <p>Example DAG</p>
    <p># Tasks 1</p>
    <p>Edges need shufflecan be local</p>
    <p>Legend</p>
    <p>(Dryad, Spark-SQL, Hive,)</p>
  </div>
  <div class="page">
    <p>Jobs have heterogeneous DAGs</p>
    <p>User queries  Query optimizer  Job DAG</p>
    <p>Example DAG</p>
    <p># Tasks 1</p>
    <p>Edges need shufflecan be local</p>
    <p>Legend</p>
    <p>(Dryad, Spark-SQL, Hive,)</p>
  </div>
  <div class="page">
    <p>Jobs have heterogeneous DAGs</p>
    <p>User queries  Query optimizer  Job DAG</p>
    <p>DAGs have deep and complex structures  Task durations range from &lt;1s to &gt;100s  Tasks use different amounts of resources</p>
    <p>Example DAG</p>
    <p># Tasks 1</p>
    <p>Edges need shufflecan be local</p>
    <p>Legend</p>
    <p>(Dryad, Spark-SQL, Hive,)</p>
  </div>
  <div class="page">
    <p>Challenges in scheduling heterogeneous DAGs</p>
    <p>T . ,  T. , .</p>
    <p>T . ,</p>
  </div>
  <div class="page">
    <p>Challenges in scheduling heterogeneous DAGs</p>
    <p>T . ,  T. , .</p>
    <p>T . ,</p>
  </div>
  <div class="page">
    <p>Challenges in scheduling heterogeneous DAGs</p>
    <p>T . ,  T. , .</p>
    <p>T . ,</p>
  </div>
  <div class="page">
    <p>Challenges in scheduling heterogeneous DAGs</p>
    <p>T . ,  T. , .</p>
    <p>T . ,</p>
    <p>CPSched cannot overlap tasks with complementary demands</p>
  </div>
  <div class="page">
    <p>Challenges in scheduling heterogeneous DAGs</p>
    <p>T . ,  T. , .</p>
    <p>T . ,</p>
    <p>Packers1</p>
    <p>[1] Tetris: Multi-resource Packing for Cluster Schedulers, SIGCOMM14</p>
    <p>CPSched cannot overlap tasks with complementary demands</p>
  </div>
  <div class="page">
    <p>Challenges in scheduling heterogeneous DAGs</p>
    <p>T . ,  T. , .</p>
    <p>T . ,</p>
    <p>Packers1</p>
    <p>[1] Tetris: Multi-resource Packing for Cluster Schedulers, SIGCOMM14</p>
    <p>CPSched cannot overlap tasks with complementary demands Packers do not handle dependencies</p>
  </div>
  <div class="page">
    <p>Challenges in scheduling heterogeneous DAGs</p>
    <p>T . ,  T. , .</p>
    <p>T . ,</p>
    <p>tasks  resourcesPackers1</p>
    <p>[1] Tetris: Multi-resource Packing for Cluster Schedulers, SIGCOMM14</p>
    <p>CPSched cannot overlap tasks with complementary demands Packers do not handle dependencies</p>
  </div>
  <div class="page">
    <p>Challenges in scheduling heterogeneous DAGs</p>
  </div>
  <div class="page">
    <p>Challenges in scheduling heterogeneous DAGs</p>
  </div>
  <div class="page">
    <p>Challenges in scheduling heterogeneous DAGs</p>
  </div>
  <div class="page">
    <p>Challenges in scheduling heterogeneous DAGs</p>
  </div>
  <div class="page">
    <p>Challenges in scheduling heterogeneous DAGs</p>
  </div>
  <div class="page">
    <p>Challenges in scheduling heterogeneous DAGs</p>
  </div>
  <div class="page">
    <p>Given an annotated DAG and available resources,</p>
    <p>compute a good schedule</p>
    <p>+ practical model</p>
  </div>
  <div class="page">
    <p>Main ideas for one DAG</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es Existing schedulers:</p>
    <p>A task is schedulable after all its parents have finished</p>
  </div>
  <div class="page">
    <p>Main ideas for one DAG</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es Existing schedulers:</p>
    <p>A task is schedulable after all its parents have finished</p>
  </div>
  <div class="page">
    <p>Main ideas for one DAG</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es Existing schedulers:</p>
    <p>A task is schedulable after all its parents have finished</p>
    <p>Graphene: Identifies troublesome tasks and places them first</p>
  </div>
  <div class="page">
    <p>Main ideas for one DAG</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es</p>
    <p>Existing schedulers: A task is schedulable after all its parents have finished</p>
    <p>Graphene: Identifies troublesome tasks and places them first</p>
  </div>
  <div class="page">
    <p>Main ideas for one DAG</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es</p>
    <p>Existing schedulers: A task is schedulable after all its parents have finished</p>
    <p>Graphene: Identifies troublesome tasks and places them first Place other tasks around trouble</p>
  </div>
  <div class="page">
    <p>Does placing troublesome tasks first help?</p>
    <p>T . ,  T. , .</p>
    <p>T . ,</p>
    <p>Revisit the example</p>
  </div>
  <div class="page">
    <p>Does placing troublesome tasks first help?</p>
    <p>T . ,  T. , .</p>
    <p>T . ,</p>
    <p>If troublesome tasks  long-running tasks, Graphene  OPT</p>
    <p>Revisit the example</p>
  </div>
  <div class="page">
    <p>Does placing troublesome tasks first help?</p>
    <p>T . ,  T. , .</p>
    <p>T . ,</p>
    <p>If troublesome tasks  long-running tasks, Graphene  OPT</p>
    <p>time</p>
    <p>Revisit the example</p>
  </div>
  <div class="page">
    <p>Does placing troublesome tasks first help?</p>
    <p>T . ,  T. , .</p>
    <p>T . ,</p>
    <p>If troublesome tasks  long-running tasks, Graphene  OPT</p>
    <p>Revisit the example</p>
  </div>
  <div class="page">
    <p>How to choose troublesome tasks T?</p>
    <p>frag</p>
  </div>
  <div class="page">
    <p>How to choose troublesome tasks T?</p>
    <p>Optimal choice is intractable (recall: NP-Hard)</p>
    <p>frag</p>
  </div>
  <div class="page">
    <p>How to choose troublesome tasks T?</p>
    <p>Optimal choice is intractable (recall: NP-Hard)</p>
    <p>frag</p>
    <p>Task duration</p>
    <p>Stage fragmentation score</p>
    <p>f</p>
  </div>
  <div class="page">
    <p>How to choose troublesome tasks T?</p>
    <p>Optimal choice is intractable (recall: NP-Hard)</p>
    <p>Graphene:</p>
    <p>BuildSchedule(T) Task duration</p>
    <p>Stage fragmentation score</p>
    <p>f and or</p>
  </div>
  <div class="page">
    <p>How to choose troublesome tasks T?</p>
    <p>Optimal choice is intractable (recall: NP-Hard)</p>
    <p>Graphene:</p>
    <p>BuildSchedule(T) Task duration</p>
    <p>Stage fragmentation score</p>
    <p>f and or</p>
    <p>Pick the most compact schedule</p>
    <p>Va ry</p>
    <p>,</p>
  </div>
  <div class="page">
    <p>How to choose troublesome tasks T?</p>
    <p>Optimal choice is intractable (recall: NP-Hard)</p>
    <p>Graphene:</p>
    <p>BuildSchedule(T) Task duration</p>
    <p>Stage fragmentation score</p>
    <p>f and or</p>
    <p>Pick the most compact schedule</p>
    <p>Extensions 1) Explore different choices of T in parallel 2) Recurse 3) Memoize</p>
    <p>Va ry</p>
    <p>,</p>
  </div>
  <div class="page">
    <p>Schedule dead-ends</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es</p>
    <p>T T</p>
  </div>
  <div class="page">
    <p>Schedule dead-ends</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es</p>
    <p>T T</p>
  </div>
  <div class="page">
    <p>Schedule dead-ends</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es</p>
    <p>T</p>
    <p>T</p>
  </div>
  <div class="page">
    <p>Schedule dead-ends</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es</p>
    <p>T</p>
    <p>T  TransitiveClosure (T)</p>
    <p>T</p>
  </div>
  <div class="page">
    <p>Schedule dead-ends</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es</p>
    <p>T</p>
    <p>T  TransitiveClosure (T)</p>
    <p>T</p>
  </div>
  <div class="page">
    <p>Schedule dead-ends</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es</p>
    <p>T</p>
    <p>T  TransitiveClosure (T)</p>
    <p>P</p>
    <p>T</p>
  </div>
  <div class="page">
    <p>Schedule dead-ends</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es</p>
    <p>T</p>
    <p>T  TransitiveClosure (T)</p>
    <p>P</p>
    <p>T</p>
  </div>
  <div class="page">
    <p>Schedule dead-ends</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es</p>
    <p>T</p>
    <p>T  TransitiveClosure (T)</p>
    <p>P</p>
    <p>C</p>
    <p>T</p>
  </div>
  <div class="page">
    <p>Schedule dead-ends</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es</p>
    <p>T</p>
    <p>T  TransitiveClosure (T)</p>
    <p>P</p>
    <p>C S</p>
    <p>T</p>
  </div>
  <div class="page">
    <p>Schedule dead-ends</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es</p>
    <p>T</p>
    <p>T  TransitiveClosure (T)</p>
    <p>TfbPbSfCf TfbPbCfSf TfbSfbPbCf</p>
    <p>Which of these orders are legit?</p>
    <p>P</p>
    <p>C S</p>
    <p>T</p>
  </div>
  <div class="page">
    <p>Schedule dead-ends</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es</p>
    <p>T</p>
    <p>T  TransitiveClosure (T)</p>
    <p>TfbPbSfCf TfbPbCfSf TfbSfbPbCf</p>
    <p>Which of these orders are legit?</p>
    <p>P</p>
    <p>C S</p>
    <p>T</p>
  </div>
  <div class="page">
    <p>Schedule dead-ends</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es</p>
    <p>T</p>
    <p>T  TransitiveClosure (T)</p>
    <p>TfbPbSfCf TfbPbCfSf TfbSfbPbCf</p>
    <p>Which of these orders are legit?</p>
    <p>Graphene explores all orders and avoids dead-ends</p>
    <p>P</p>
    <p>C S</p>
    <p>T</p>
  </div>
  <div class="page">
    <p>Main ideas for one DAG</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es</p>
    <p>timer es</p>
    <p>ou rc</p>
    <p>es</p>
    <p>C s P</p>
    <p>P</p>
    <p>C S</p>
    <p>T</p>
    <p>T T</p>
  </div>
  <div class="page">
    <p>One DAG Multiple DAGs Computed offline schedule for Production clusters have</p>
  </div>
  <div class="page">
    <p>Convert offline schedule to priority order on tasks</p>
  </div>
  <div class="page">
    <p>Convert offline schedule to priority order on tasks</p>
    <p>T . ,</p>
    <p>T . , .</p>
    <p>. , .   +</p>
    <p>T . ,</p>
  </div>
  <div class="page">
    <p>Convert offline schedule to priority order on tasks</p>
    <p>Job1</p>
    <p>T . ,</p>
    <p>T . , .</p>
    <p>. , .   +</p>
    <p>T . ,</p>
  </div>
  <div class="page">
    <p>Convert offline schedule to priority order on tasks</p>
    <p>Job1</p>
    <p>T . ,</p>
    <p>T . , .</p>
    <p>. , .   +</p>
    <p>T . ,</p>
  </div>
  <div class="page">
    <p>Convert offline schedule to priority order on tasks</p>
    <p>Runtime</p>
    <p>Offline</p>
    <p>Job1</p>
    <p>time</p>
    <p>T . ,</p>
    <p>T . , .</p>
    <p>. , .   +</p>
    <p>T . ,</p>
  </div>
  <div class="page">
    <p>Convert offline schedule to priority order on tasks</p>
    <p>Runtime</p>
    <p>Offline</p>
    <p>Job1</p>
    <p>time</p>
    <p>T . ,</p>
    <p>T . , .</p>
    <p>. , .   +</p>
    <p>T . ,</p>
  </div>
  <div class="page">
    <p>Convert offline schedule to priority order on tasks</p>
    <p>Runtime</p>
    <p>Offline</p>
    <p>Job1</p>
    <p>time</p>
    <p>T . ,</p>
    <p>T . , .</p>
    <p>. , .   +</p>
    <p>T . ,</p>
  </div>
  <div class="page">
    <p>Convert offline schedule to priority order on tasks</p>
    <p>Runtime</p>
    <p>Offline</p>
    <p>Job1</p>
    <p>time</p>
    <p>T . ,</p>
    <p>T . , .</p>
    <p>. , .   +</p>
    <p>T . ,</p>
  </div>
  <div class="page">
    <p>Convert offline schedule to priority order on tasks</p>
    <p>Runtime</p>
    <p>Offline</p>
    <p>Job1</p>
    <p>time</p>
    <p>T . ,</p>
    <p>T . , .</p>
    <p>. , .   +</p>
    <p>T . ,</p>
  </div>
  <div class="page">
    <p>Convert offline schedule to priority order on tasks</p>
    <p>Runtime</p>
    <p>Offline</p>
    <p>Job1</p>
    <p>time</p>
    <p>T . ,</p>
    <p>T . , .</p>
    <p>. , .   +</p>
    <p>T . ,</p>
  </div>
  <div class="page">
    <p>Convert offline schedule to priority order on tasks</p>
    <p>Runtime</p>
    <p>Offline</p>
    <p>Job1</p>
    <p>time</p>
    <p>T . ,</p>
    <p>T . , .</p>
    <p>. , .   +</p>
    <p>T . ,</p>
  </div>
  <div class="page">
    <p>Convert offline schedule to priority order on tasks</p>
    <p>Runtime</p>
    <p>Offline</p>
    <p>Job1</p>
    <p>time</p>
    <p>T . ,</p>
    <p>T . , .</p>
    <p>. , .   +</p>
    <p>T . ,</p>
  </div>
  <div class="page">
    <p>Main ideas for multiple DAGs 1) Convert offline schedule to priority order on tasks</p>
  </div>
  <div class="page">
    <p>Main ideas for multiple DAGs 1) Convert offline schedule to priority order on tasks 2) Online, enforce schedule priority along with heuristics for</p>
    <p>(a) Multi-resource packing (b) SRPT to lower average job completion time (c) Bounded amount of unfairness (d) Overbooking</p>
  </div>
  <div class="page">
    <p>Main ideas for multiple DAGs 1) Convert offline schedule to priority order on tasks 2) Online, enforce schedule priority along with heuristics for</p>
    <p>(a) Multi-resource packing (b) SRPT to lower average job completion time (c) Bounded amount of unfairness (d) Overbooking</p>
  </div>
  <div class="page">
    <p>Trade-offs:</p>
    <p>Main ideas for multiple DAGs 1) Convert offline schedule to priority order on tasks 2) Online, enforce schedule priority along with heuristics for</p>
    <p>(a) Multi-resource packing (b) SRPT to lower average job completion time (c) Bounded amount of unfairness (d) Overbooking</p>
    <p>Packing Efficiency</p>
    <p>may delay job completion,</p>
    <p>Job Completion Time</p>
    <p>Fairness may counteract all others</p>
    <p>Schedule priority</p>
    <p>?</p>
    <p>best for one DAG; overall?</p>
    <p>may lose packing efficiency,</p>
  </div>
  <div class="page">
    <p>Trade-offs:</p>
    <p>We show that: {best perf |bounded unfairness} ~ best perf</p>
    <p>Main ideas for multiple DAGs 1) Convert offline schedule to priority order on tasks 2) Online, enforce schedule priority along with heuristics for</p>
    <p>(a) Multi-resource packing (b) SRPT to lower average job completion time (c) Bounded amount of unfairness (d) Overbooking</p>
    <p>Packing Efficiency</p>
    <p>may delay job completion,</p>
    <p>Job Completion Time</p>
    <p>Fairness may counteract all others</p>
    <p>Schedule priority</p>
    <p>?</p>
    <p>best for one DAG; overall?</p>
    <p>may lose packing efficiency,</p>
  </div>
  <div class="page">
    <p>Graphene summary &amp; implementation</p>
  </div>
  <div class="page">
    <p>Graphene summary &amp; implementation</p>
    <p>DAG AM</p>
    <p>DAG AM</p>
    <p>Node heartbeat</p>
    <p>Task assignment</p>
    <p>RM NM</p>
    <p>NM</p>
    <p>NM</p>
    <p>NM</p>
  </div>
  <div class="page">
    <p>Graphene summary &amp; implementation</p>
    <p>DAG AM</p>
    <p>DAG AM</p>
    <p>Node heartbeat</p>
    <p>Task assignment</p>
    <p>Schedule Constructor</p>
    <p>Schedule Constructor</p>
    <p>RM NM</p>
    <p>NM</p>
    <p>NM</p>
    <p>NM</p>
  </div>
  <div class="page">
    <p>Graphene summary &amp; implementation</p>
    <p>+ priority order + packing + bounded unfairness + + overbook</p>
    <p>DAG AM</p>
    <p>DAG AM</p>
    <p>Node heartbeat</p>
    <p>Task assignment</p>
    <p>Schedule Constructor</p>
    <p>Schedule Constructor</p>
    <p>RM NM</p>
    <p>NM</p>
    <p>NM</p>
    <p>NM</p>
  </div>
  <div class="page">
    <p>Implementation details</p>
    <p>DAG annotations</p>
    <p>Bundling: improve schedule quality w/o killing scheduling latency</p>
    <p>Co-existence with (many) other scheduler features</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Prototype  200 server multi-core cluster  TPC-DS, TPC-H, , GridMix to replay traces  Jobs arrive online</p>
    <p>Simulations  Traces from production Microsoft Cosmos and Yarn clusters  Compare with many alternatives</p>
  </div>
  <div class="page">
    <p>Results - 1</p>
    <p>Packing</p>
    <p>Packing + Deps.</p>
    <p>Lower bound</p>
    <p>[20K DAGs from Cosmos]</p>
  </div>
  <div class="page">
    <p>Results - 1</p>
    <p>Packing</p>
    <p>Packing + Deps.</p>
    <p>Lower bound</p>
    <p>[20K DAGs from Cosmos]</p>
  </div>
  <div class="page">
    <p>Results - 2</p>
    <p>Tez + Packing Tez + Pack +Deps</p>
    <p>[200 jobs from TPC-DS, 200 server cluster]</p>
  </div>
  <div class="page">
    <p>Results - 2</p>
    <p>Tez + Packing Tez + Pack +Deps</p>
    <p>[200 jobs from TPC-DS, 200 server cluster]</p>
  </div>
  <div class="page">
    <p>Scheduling heterogeneous DAGs well requires an online solution that handles multiple resources and dependencies</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Graphene  Offline, construct per-DAG schedule by placing troublesome tasks first  Online, enforce schedule priority along with other heuristics  New lower bound shows nearly optimal for half of the DAGs</p>
    <p>Scheduling heterogeneous DAGs well requires an online solution that handles multiple resources and dependencies</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Graphene  Offline, construct per-DAG schedule by placing troublesome tasks first  Online, enforce schedule priority along with other heuristics  New lower bound shows nearly optimal for half of the DAGs</p>
    <p>Experiments show gains in job completion time, makespan,</p>
    <p>Scheduling heterogeneous DAGs well requires an online solution that handles multiple resources and dependencies</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Graphene  Offline, construct per-DAG schedule by placing troublesome tasks first  Online, enforce schedule priority along with other heuristics  New lower bound shows nearly optimal for half of the DAGs</p>
    <p>Experiments show gains in job completion time, makespan,</p>
    <p>Graphene generalizes to DAGs in other settings</p>
    <p>Scheduling heterogeneous DAGs well requires an online solution that handles multiple resources and dependencies</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>When scheduler works with erroneous task profiles</p>
    <p>Amount of error</p>
    <p>Fractional change in JCT</p>
    <p>0.75, 0.50 0.50, 0.25 +0.25, +0.50 +0.50, +0.75</p>
  </div>
  <div class="page">
    <p>When scheduler works with erroneous task profiles</p>
    <p>Amount of error</p>
    <p>Fractional change in JCT</p>
    <p>0.75, 0.50 0.50, 0.25 +0.25, +0.50 +0.50, +0.75</p>
  </div>
  <div class="page">
    <p>When scheduler works with erroneous task profiles</p>
    <p>Amount of error</p>
    <p>Fractional change in JCT</p>
    <p>0.75, 0.50 0.50, 0.25 +0.25, +0.50 +0.50, +0.75</p>
  </div>
  <div class="page">
    <p>When scheduler works with erroneous task profiles</p>
    <p>Amount of error</p>
    <p>Fractional change in JCT</p>
    <p>0.75, 0.50 0.50, 0.25 +0.25, +0.50 +0.50, +0.75</p>
  </div>
  <div class="page">
    <p>DAG annotations</p>
    <p>G uses per-stage average duration and demands of {cpu, mem, net. disk}</p>
    <p>Sample and project2  Program analysis3</p>
    <p>[1] RoPE, NSDI12;  [2] Perforator, SOCC16;  [3] SPEED, POPL09;</p>
  </div>
  <div class="page">
    <p>Using Graphene to schedule other DAGs</p>
  </div>
  <div class="page">
    <p>Characterizing DAGs in Cosmos clusters</p>
  </div>
  <div class="page">
    <p>Characterizing DAGs in Cosmos clusters  2</p>
  </div>
  <div class="page">
    <p>Runtime of production DAGs</p>
  </div>
  <div class="page">
    <p>Job completion times on different workloads</p>
  </div>
  <div class="page">
    <p>Makespan</p>
    <p>Fairness</p>
  </div>
  <div class="page">
    <p>Comparison with other alternatives</p>
  </div>
  <div class="page">
    <p>Online Pseudocode</p>
  </div>
</Presentation>
