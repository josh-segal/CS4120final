<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS</p>
    <p>Christina Garman Kenny Paterson Thyla van der Merwe</p>
    <p>Johns Hopkins University Royal Holloway, University of London</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 1/ 19</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Despite AlFardan-Bernstein-Paterson-Poettering-Schuldt (USENIX 2013), RC4 usage stood at 35% of TLS connections</p>
    <p>ICSI$Notary$Sta+s+cs$[Dec.,$2014]$</p>
    <p>h9p://notary.icsi.berkeley.edu/$</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 2/ 19</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Despite AlFardan-Bernstein-Paterson-Poettering-Schuldt (USENIX 2013), RC4 usage stood at 35% of TLS connections</p>
    <p>Can we strengthen these attacks?</p>
    <p>Passwords are widely used for authentication and the fact that they are not uniformly distributed may give us a boost</p>
    <p>Get RC4 closer to the point where it needs to be abandoned!</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 2/ 19</p>
  </div>
  <div class="page">
    <p>RC4 in TLS</p>
    <p>Ku, Kd</p>
    <p>Data Link</p>
    <p>Internet</p>
    <p>Transport</p>
    <p>Applica7on TLS h:p tcp</p>
    <p>ClientHello(,[RC4,])</p>
    <p>ServerHello(,RC4)</p>
    <p>.</p>
    <p>.</p>
    <p>.</p>
    <p>ClientFinshed</p>
    <p>.</p>
    <p>Ku, Kd</p>
    <p>ServerFinshed</p>
    <p>applica7on data</p>
    <p>.</p>
    <p>.</p>
    <p>.</p>
    <p>Handshake protocol</p>
    <p>Record protocol (encrypted with RC4, keys Ku and Kd) Integrity, HMAC-SHA1</p>
    <p>Cr = Pr Zr</p>
    <p>C S</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 3/ 19</p>
  </div>
  <div class="page">
    <p>RC4 Biases</p>
    <p>By te</p>
    <p>v al</p>
    <p>ue , P</p>
    <p>os iti</p>
    <p>on 2</p>
    <p>[0 ...</p>
    <p>Byte value, Position 1 [0...255]</p>
    <p>INFILE using 1:2:(max(min(4194304*$3,1.0),-1.0))</p>
    <p>-1</p>
    <p>!&quot;#$%%&amp;'(&amp;'&amp;)*+,++</p>
    <p>,</p>
    <p>,</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 4/ 19</p>
  </div>
  <div class="page">
    <p>Attack Setting</p>
    <p>First described by Mantin and Shamir in 2001 A fixed plaintext, P, is encrypted multiple times under independent RC4 keys, Ki</p>
    <p>P,#K1#</p>
    <p>P,#KS#</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 5/ 19</p>
  </div>
  <div class="page">
    <p>Plaintext Recovery via Bayesian Analysis</p>
    <p>We want to maximize (for a position in the plaintext stream r):</p>
    <p>Pr(X = x | C = c)</p>
    <p>X is the random variable corresponding to a plaintext byte, x</p>
    <p>C is the random variable corresponding to a vector of ciphertext bytes</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 6/ 19</p>
  </div>
  <div class="page">
    <p>Plaintext Recovery via Bayesian Analysis</p>
    <p>Using Bayes Theorem:</p>
    <p>Pr(X = x | C = c) = Pr(C = c | X = x)  Pr(X = x)</p>
    <p>Pr(C = c)</p>
    <p>= Pr(C = c | X = x)  Pr(X = x)</p>
    <p>xX Pr(C = c | X = x)  Pr(X = x)</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 6/ 19</p>
  </div>
  <div class="page">
    <p>Plaintext Recovery via Bayesian Analysis</p>
    <p>So we actually want to maximize this:</p>
    <p>Pr(C = c | X = x)  Pr(X = x)</p>
    <p>However,</p>
    <p>Pr(C = c | X = x) = Pr(Z = z)</p>
    <p>and it suffices to maximize:</p>
    <p>Pr(X = x)  Pr(Z = z)</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 6/ 19</p>
  </div>
  <div class="page">
    <p>Plaintext Recovery via Bayesian Analysis</p>
    <p>a&quot;posteriori&quot;likelihood(of(x(being(( correct(byte(</p>
    <p>Recovery(algorithm:(( Compute(most(likely(byte(by(( considering(all(byte(possibili7es( (</p>
    <p>C1(</p>
    <p>C2(</p>
    <p>C3(</p>
    <p>CS(</p>
    <p>... ((</p>
    <p>r&quot;&quot;</p>
    <p>encryp7ons(of(fixed(byte(( under(different(keys(</p>
    <p>byte(candidate(( (x(&quot;</p>
    <p>x&quot;</p>
    <p>... ((</p>
    <p>yields(induced(distribu7on(on( keystream(bytes(Zr&quot;</p>
    <p>combine(with(known(distribu7on(</p>
    <p>Combine(with(a&quot;priori&quot;plaintext( distribu7on((</p>
    <p>x&quot;</p>
    <p>x&quot;</p>
    <p>x&quot;</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 7/ 19</p>
  </div>
  <div class="page">
    <p>Attacking Cookies [ABPPS13]</p>
    <p>a&quot;posteriori&quot;likelihood(of(x(being(( correct(byte(</p>
    <p>Recovery(algorithm:(( Compute(most(likely(byte(by(( considering(all(byte(possibili7es( ( Repeat(for(all(bytes(of(the(cookie(</p>
    <p>C1(</p>
    <p>C2(</p>
    <p>C3(</p>
    <p>CS(</p>
    <p>... ((</p>
    <p>r&quot;&quot;</p>
    <p>encryp7ons(of(fixed(byte(( under(different(keys(</p>
    <p>byte(candidate(( (x(&quot;</p>
    <p>x&quot;</p>
    <p>... ((</p>
    <p>yields(induced(distribu7on(on( keystream(bytes(Zr&quot;</p>
    <p>combine(with(known(distribu7on(</p>
    <p>assume(a&quot;priori&quot;plaintext( distribu7on(uniform(</p>
    <p>x&quot;</p>
    <p>x&quot;</p>
    <p>x&quot;</p>
    <p>((256(posi7ons,(234(encryp7ons,(2000(hrs!( Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 8/ 19</p>
  </div>
  <div class="page">
    <p>Attacking Passwords</p>
    <p>Widely used for authentication on the web, NOT uniformly distributed</p>
    <p>RockYou leak of 32 million passwords in 2009, about 14 million unique, 123456 most popular</p>
    <p>Have a priori information from leaked datasets</p>
    <p>Multiple bytes, not just one...</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 9/ 19</p>
  </div>
  <div class="page">
    <p>Attacking Passwords</p>
    <p>For n bytes we want to maximize</p>
    <p>Pr(X = x)  Pr(Z = z)</p>
    <p>where X is the random variable corresponding to a vector of plaintext bytes, x = (x0, x1, . . . , xn1)</p>
    <p>Z is the random variable corresponding to the matrix of keystream bytes</p>
    <p>?? Pr(Z = z)??</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 10/ 19</p>
  </div>
  <div class="page">
    <p>Attacking Passwords</p>
    <p>For n bytes we want to maximize</p>
    <p>Pr(X = x)  Pr(Z = z)</p>
    <p>where X is the random variable corresponding to a vector of plaintext bytes, x = (x0, x1, . . . , xn1)</p>
    <p>Z is the random variable corresponding to the matrix of keystream bytes</p>
    <p>?? Pr(Z = z)??</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 10/ 19</p>
  </div>
  <div class="page">
    <p>Approximations</p>
    <p>Pr(Z%=%z)%%</p>
    <p>A&quot;ack&amp;1:&amp;&amp; Assume&amp;keystream&amp;bytes&amp;behave&amp; independently&amp;&amp;use&amp;single6byte&amp;probabili8es&amp; (product&amp;distribu8on)&amp;</p>
    <p>A&quot;ack&amp;2:&amp;&amp; Assume&amp;keystream&amp;byte&amp;is&amp;influenced&amp;only&amp;by&amp; byte&amp;directly&amp;adjacent&amp;to&amp;it&amp;&amp;use&amp;double6&amp;and&amp; single6byte&amp;probabili8es&amp;</p>
    <p>(Picture of the double-byte biases, 244 keystreams, 4800 core-days)</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 11/ 19</p>
  </div>
  <div class="page">
    <p>Approximations</p>
    <p>Pr(Z%=%z)%%</p>
    <p>A&quot;ack&amp;1:&amp;&amp; Assume&amp;keystream&amp;bytes&amp;behave&amp; independently&amp;&amp;use&amp;single6byte&amp;probabili8es&amp; (product&amp;distribu8on)&amp;</p>
    <p>A&quot;ack&amp;2:&amp;&amp; Assume&amp;keystream&amp;byte&amp;is&amp;influenced&amp;only&amp;by&amp; byte&amp;directly&amp;adjacent&amp;to&amp;it&amp;&amp;use&amp;double6&amp;and&amp; single6byte&amp;probabili8es&amp;</p>
    <p>(Picture of the double-byte biases, 244 keystreams, 4800 core-days)</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 11/ 19</p>
  </div>
  <div class="page">
    <p>Approximations</p>
    <p>a&quot;posteriori&quot;likelihood(of(x(being(( correct(password(</p>
    <p>!Recovery!algorithm:!( (Compute(most(likely(password(from(((( (dic8onary(of(N(passwords(</p>
    <p>C1(</p>
    <p>C2(</p>
    <p>C3(</p>
    <p>CS(</p>
    <p>... ((</p>
    <p>r,&quot;r+1,,&quot;r+n11&quot;</p>
    <p>encryp8ons(of(fixed(password(( under(different(keys(</p>
    <p>password(candidate(( (x(=(x0&quot;,x1&quot;,,&quot;xn&quot;</p>
    <p>x0,&quot;x1,&quot;,&quot;xn&quot;</p>
    <p>... ((</p>
    <p>x0,&quot;x1,&quot;,&quot;xn&quot;</p>
    <p>x0,&quot;x1,&quot;,&quot;xn&quot;</p>
    <p>x0,&quot;x1,&quot;,&quot;xn&quot;</p>
    <p>yields(induced(distribu8on(on( keystream(bytes(Zr,Zr+1,,Zr+n11&quot;&quot;</p>
    <p>combine(with(known(distribu8on(</p>
    <p>approximate!using!known!! distribu:on!</p>
    <p>combine(with(a&quot;priori&quot;password( distribu8on(</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 12/ 19</p>
  </div>
  <div class="page">
    <p>Whats different?</p>
    <p>n bytes instead of one</p>
    <p>T attempts before lockout</p>
    <p>dictionary of size N</p>
    <p>single-byte vs double-byte estimator</p>
    <p>Base64 or ASCII</p>
    <p>r starting position</p>
    <p>S ciphertexts</p>
    <p>guessing attacks</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 13/ 19</p>
  </div>
  <div class="page">
    <p>Simulation Results</p>
    <p>Use a dictionary built from RockYou leak dataset to attack Singles.org dataset</p>
    <p>More realistic but limits our success rate</p>
    <p>Default parameters, n = 6, T = 5, S = 220, 222, . . . , 228</p>
    <p>Success rate based on 256 experiments</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 14/ 19</p>
  </div>
  <div class="page">
    <p>Simulation Results</p>
    <p>Single-byte vs double-byte, n = 6, T = 5</p>
    <p>S u c c e ss</p>
    <p>R a te</p>
    <p>Starting Position</p>
    <p>db, 220</p>
    <p>db, 222</p>
    <p>db, 224</p>
    <p>db, 226</p>
    <p>db, 228</p>
    <p>sb, 220</p>
    <p>sb, 222</p>
    <p>sb, 224</p>
    <p>sb, 226</p>
    <p>sb, 228</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 15/ 19</p>
  </div>
  <div class="page">
    <p>Simulation Results</p>
    <p>T vs success rate, n = 6, r = 133 - double-byte and guessing</p>
    <p>lo g</p>
    <p>)</p>
    <p>Recovery Rate</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 16/ 19</p>
  </div>
  <div class="page">
    <p>Practical Validation</p>
    <p>Applicable to BasicAuth and IMAP</p>
    <p>We need multiple, independent encryptions of the password</p>
    <p>We need the password to be encrypted at a favourable position</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 17/ 19</p>
  </div>
  <div class="page">
    <p>Practical Validation</p>
    <p>www.evil.com!</p>
    <p>www.good.com!</p>
    <p>PW = 123456!</p>
    <p>PW!</p>
    <p>TLS channel!</p>
    <p>r = 133!</p>
    <p>Resumption latency of 250ms, 226, 6 parallel connections, 776 hours (at 100ms, 312 hours)</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 18/ 19</p>
  </div>
  <div class="page">
    <p>Closing Remarks</p>
    <p>Made use of a generally applicable Bayesian inference technique Strengthened the results of AlFardan et al., good recovery rates at 226 vs. 234</p>
    <p>ciphertexts and an attack time of 312 vs. 2000 hours</p>
    <p>ICSI$Notary$Sta+s+cs$[Jul./Aug.,$2015]$</p>
    <p>h=p://notary.icsi.berkeley.edu/$</p>
  </div>
  <div class="page">
    <p>Closing Remarks</p>
    <p>Made use of a generally applicable Bayesian inference technique Strengthened the results of AlFardan et al., good recovery rates at 226 vs. 234</p>
    <p>ciphertexts and an attack time of 312 vs. 2000 hours</p>
    <p>FE B$2015$</p>
    <p>D EC</p>
    <p>$</p>
    <p>M A R$</p>
    <p>JU LY $</p>
    <p>N O W $</p>
    <p>Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 19/ 19</p>
  </div>
  <div class="page">
    <p>Closing Remarks</p>
    <p>Made use of a generally applicable Bayesian inference technique</p>
    <p>Strengthened the results of AlFardan et al., good recovery rates at 226 vs. 234</p>
    <p>ciphertexts and an attack time of 312 vs. 2000 hours</p>
    <p>FE B$2015$</p>
    <p>D EC</p>
    <p>$</p>
    <p>M A R$</p>
    <p>JU LY $</p>
    <p>N O W $</p>
    <p>We need to stop using RC4! Attacks Only Get Better: Password Recovery Attacks Against RC4 in TLS  Thyla van der Merwe 19/ 19</p>
  </div>
</Presentation>
