<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Towards Model-based Management of Database Fragmentation</p>
    <p>Asim Ali, Abdelkarim Erradi, Rashid Hadjidj Qatar University</p>
    <p>Rui Jia, Sherif Abdelwahed Mississippi State University</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>p Introduction p Model-based Control Framework p Control Approach p Case Study p Conclusion</p>
  </div>
  <div class="page">
    <p>Introduction</p>
  </div>
  <div class="page">
    <p>Database Fragmentation</p>
    <p>n Databases are integral parts of systems such as: p Social Networks p Online trading p E-Banking</p>
  </div>
  <div class="page">
    <p>Database Fragmentation</p>
    <p>n Clustered indexes n Cause: large number of write, delete and update operations</p>
    <p>n Internal and external</p>
  </div>
  <div class="page">
    <p>Database Fragmentation</p>
    <p>Image courtesy:SQLSkills.com</p>
    <p>Internal and External Fragmentation</p>
  </div>
  <div class="page">
    <p>Fragmentation Impacts</p>
    <p>Example: Decreasing throughput with increasing fragmentation levels</p>
  </div>
  <div class="page">
    <p>Defragmentation Approaches</p>
    <p>Conventional n Human expertise n Rules of thumb decide</p>
    <p>the time and indexes to defragment</p>
    <p>n Does not consider impact during defrag.</p>
    <p>n Potentially suboptimal decision</p>
    <p>n No model is required</p>
    <p>Model-based n Autonomous controller n Model-based decision n Considers impact on</p>
    <p>system performance n Decision is optimal</p>
    <p>based on model n System models are</p>
    <p>required</p>
  </div>
  <div class="page">
    <p>Contribution</p>
    <p>n A fragmentation management framework p Model-based p Considers dynamic SLAs p Fragmentation detection p Performance optimization</p>
    <p>n Autonomic controller</p>
  </div>
  <div class="page">
    <p>Model-based Control Framework</p>
  </div>
  <div class="page">
    <p>Model-based Control Framework</p>
    <p>Key components n Environment (workload) n Managed System n Fault Diagnosis n Performance Controller</p>
  </div>
  <div class="page">
    <p>Model-based Control Framework</p>
    <p>Overview of the Framework</p>
    <p>Signatures Database</p>
    <p>Management Ac2ons</p>
  </div>
  <div class="page">
    <p>Model-based Control Framework</p>
    <p>n Workload variations p Arrival rate (TPM)</p>
    <p>n Fault variations p Fragmentation levels</p>
    <p>n Monitored Parameters p CPU usage, memory usage, disk IO,</p>
    <p>response time, throughput, etc. n Data analysis: curve fitting tools</p>
  </div>
  <div class="page">
    <p>Model-based Control Framework</p>
    <p>Model Development Process n Analyzing historic traces n Simulations n Relationships n Benchmark workload</p>
    <p>p Based on OLTP workload configurations p Performance measured based on read</p>
    <p>operations n Fragmentation injection script</p>
  </div>
  <div class="page">
    <p>Model-based Control Framework</p>
    <p>p Model-based Fault Detection n Model based fault detection</p>
    <p>p Monitoring system -&gt; Current performance p System model -&gt; Expected performance p Threshold difference</p>
    <p>n Fault signature (parameters) p Vector of system and application</p>
    <p>parameters p Magnitude of deviation -&gt; Fault intensity</p>
  </div>
  <div class="page">
    <p>Control Approach</p>
  </div>
  <div class="page">
    <p>Control Input</p>
    <p>Available Control Options</p>
    <p>Management Actions Recovery Actions Changing Database Buffer Sizes (e.g. 128MB, 256MB, and etc.)</p>
    <p>Offline Database Rebuilding Online Database Reorganization</p>
    <p>Criteria to Select the Most Optimal Control Option?</p>
  </div>
  <div class="page">
    <p>Control Input</p>
    <p>Selection Criteria Management Actions Benefits Drawbacks</p>
    <p>Changing Database Buffer Sizes (e.g. 128MB, 256MB, and etc.)</p>
    <p>Bigger Buffer = Less I/O Delay</p>
    <p>Bigger Buffer=Potential Resource Shortage</p>
    <p>Each control option has both benefits and drawbacks: a tradeoff</p>
  </div>
  <div class="page">
    <p>Control Input</p>
    <p>Selection Criteria Recovery Actions Benefits Drawbacks</p>
    <p>Offline Database Rebuilding</p>
    <p>Fast Recovery</p>
    <p>Service Blackout</p>
    <p>Online Database Reorganization</p>
    <p>Service Available Slow Recovery</p>
    <p>Each control option has both benefits and drawbacks: a tradeoff</p>
  </div>
  <div class="page">
    <p>Controller Structure</p>
  </div>
  <div class="page">
    <p>Utility Cost Model</p>
    <p>n Quantify the benefits and drawbacks of a control option</p>
    <p>n Evaluate the system performance in terms of QoS and SLA violation</p>
    <p>n Treat management and recovery actions separately</p>
  </div>
  <div class="page">
    <p>Utility Function</p>
    <p>For management actions</p>
    <p>JM (i)=[ rx M (i)r*</p>
    <p>r* + * x</p>
    <p>M (i) *</p>
    <p>]Tx M (i)</p>
    <p>+[ rM (i)rM (i1)</p>
    <p>rM (i1) +  M (i) M (i1)</p>
    <p>M (i1) ]T</p>
    <p>Response Time during Execution</p>
    <p>Cost During the Management</p>
    <p>Cost After the Management</p>
    <p>Set Point Throughput during Execution</p>
    <p>Estimated Response Time</p>
    <p>Estimated Throughput</p>
    <p>Execution Duration</p>
    <p>Sampling Interval</p>
  </div>
  <div class="page">
    <p>Utility Function</p>
    <p>For recovery actions</p>
    <p>JR(i)=[ rR(i)r*</p>
    <p>r* + *  R(i)</p>
    <p>* ]T</p>
    <p>Set Point Estimated Response time</p>
    <p>Estimated Throughput</p>
    <p>Sampling Interval</p>
  </div>
  <div class="page">
    <p>Predictive Control</p>
    <p>Predictive Control: Select the Minimum-cost Control Plan</p>
    <p>[WM (i)JM (i)] i=k</p>
    <p>k+m1</p>
    <p>WR( j) JR(i) /n i=k</p>
    <p>k+n1</p>
    <p>Optimization Objective: 1. Minimize</p>
  </div>
  <div class="page">
    <p>Predictive Control Algorithm</p>
  </div>
  <div class="page">
    <p>Case Study</p>
  </div>
  <div class="page">
    <p>Case Study</p>
    <p>Experimental Setup</p>
  </div>
  <div class="page">
    <p>Case Study</p>
    <p>Example Simulation Results</p>
  </div>
  <div class="page">
    <p>System Parameters p Fragmentation detection using average response</p>
    <p>times</p>
    <p>FL Average query response /me (ms)</p>
    <p>Mean Std. Dev. % variation 0 189 8 0.00</p>
  </div>
  <div class="page">
    <p>System Parameters</p>
    <p>Arrival rate Throughput Avg. Response Time (ms)</p>
    <p>&lt;350 0.9+8.9 224</p>
    <p>350 0.01+318.1 189</p>
    <p>System model for fragmentation level 0</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>n The system model is developed to facilitate the fault management</p>
    <p>n The detection method can provide the level of fragmentation</p>
    <p>n The model-based fault management framework has been applied to solve the database fragmentation problem</p>
  </div>
  <div class="page">
    <p>Future Work</p>
    <p>n Workload: add composition variation n A fully autonomic control process, with</p>
    <p>more p Recovery actions p Management actions</p>
    <p>n Applied on a distributed database system</p>
  </div>
  <div class="page">
    <p>Thank you!</p>
  </div>
</Presentation>
