<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Exo-clones Instantaneous Change Tracking for the Whole File System Richard P. Spillane, Wenguang Wang, Luke Lu, Maxime Austruy, Christos Karmanolis, Rawlinson Rivera</p>
    <p>May 10th, 2016</p>
    <p>VDFS (POSIX)</p>
    <p>VSAN</p>
    <p>VDFS (POSIX)</p>
    <p>Developer Laptop</p>
    <p>Backups, Documents, Applications</p>
    <p>Exo Support Exo Support</p>
  </div>
  <div class="page">
    <p>rsync/ diff -R</p>
    <p>Exoclone</p>
    <p>What is an Exo-clone?</p>
    <p>A</p>
    <p>FS Snapshot Updated Snapshot</p>
    <p>A</p>
    <p>File Data</p>
    <p>Meta Data A</p>
    <p>FS Snapshot Updated Snapshot</p>
    <p>A</p>
    <p>File Data</p>
    <p>Meta Data</p>
    <p>VDFS on VSAN VDFS on Developer Laptop</p>
    <p>Copy of A</p>
    <p>Scan whole FS</p>
    <p>free to store  free to create  free to import</p>
    <p>skipped</p>
    <p>Hot Storage 2016</p>
  </div>
  <div class="page">
    <p>Benefits of Exo-clone</p>
    <p>No duplication</p>
    <p>No FS Scanning</p>
    <p>diff -R   git pack-objects   Docker FS layers   ZFS/BtrFS send/receive</p>
    <p>Exo-clones</p>
    <p>Hot Storage 2016</p>
  </div>
  <div class="page">
    <p>Exo-clone Use Cases</p>
    <p>Changes in last hour</p>
    <p>Application changes</p>
    <p>Backup/replication</p>
    <p>Application Revision Control</p>
    <p>Improve with Exo-clones?</p>
    <p>Hot Storage 2016</p>
  </div>
  <div class="page">
    <p>A Common Problem</p>
    <p>MyApp 1.6</p>
    <p>Sourcesgit</p>
    <p>Images, 3D models, icons, sounds, ? 100sMB10sGB</p>
    <p>OS &amp; Libraries Docker</p>
    <p>Lots of changes to large and small files</p>
    <p>Backup MyApp</p>
    <p>Hot Storage 2016</p>
  </div>
  <div class="page">
    <p>git? Sadly, no</p>
    <p>WORKING OBJECT STORE</p>
    <p>A B</p>
    <p>Redundant copy, 5-10x bigger than current working state</p>
    <p>checkout/commit copy GBs of data</p>
    <p>Hot Storage 2016</p>
  </div>
  <div class="page">
    <p>Docker?</p>
    <p>Ubuntu 14.04.2</p>
    <p>MyApp 1.0</p>
    <p>network</p>
    <p>Docker pullDocker push</p>
    <p>Dockerfile: FROM 14.04.2 apt-get install MyLib cp build/ /opt/my cp assets/ /opt/assets</p>
    <p>Hot Storage 2016</p>
  </div>
  <div class="page">
    <p>Docker FS Layer</p>
    <p>= FS Layer 0x7dfb</p>
    <p>= FS Layer 0xe9a0</p>
    <p>Other files are the same</p>
  </div>
  <div class="page">
    <p>Update With Docker Pull</p>
    <p>Ubuntu 14.04.3</p>
    <p>MyApp 1.1</p>
    <p>network</p>
    <p>Ubuntu 14.04.3</p>
    <p>Ubuntu 14.04.2</p>
    <p>Ubuntu 14.04.2</p>
    <p>MyApp 1.0</p>
    <p>MyApp 1.1</p>
    <p>MyApp 1.0</p>
    <p>downstream</p>
    <p>Ubuntu 14.04.2</p>
    <p>MyApp 1.0</p>
    <p>Ubuntu 14.04.2</p>
    <p>MyApp 1.0</p>
    <p>Ubuntu 14.04.3</p>
    <p>MyApp 1.1</p>
    <p>Ubuntu 14.04.3</p>
    <p>MyApp 1.1</p>
    <p>Security update</p>
    <p>Hot Storage 2016</p>
  </div>
  <div class="page">
    <p>Update With Docker Pull</p>
    <p>Ubuntu 14.04.3</p>
    <p>MyApp 1.1</p>
    <p>network</p>
    <p>Ubuntu 14.04.3</p>
    <p>Ubuntu 14.04.2</p>
    <p>Ubuntu 14.04.2</p>
    <p>MyApp 1.0</p>
    <p>MyApp 1.1</p>
    <p>MyApp 1.0</p>
    <p>downstream</p>
    <p>Ubuntu 14.04.2</p>
    <p>MyApp 1.0</p>
    <p>Ubuntu 14.04.2</p>
    <p>MyApp 1.0</p>
    <p>Ubuntu 14.04.3</p>
    <p>MyApp 1.1</p>
    <p>Ubuntu 14.04.3</p>
    <p>MyApp 1.1</p>
    <p>Security update</p>
    <p>Change Tracking FS</p>
    <p>AUFS and Layers Exo-clones</p>
    <p>Hot Storage 2016</p>
  </div>
  <div class="page">
    <p>Updating Base Layers With Exo-clones</p>
    <p>Ubuntu 14.04.3</p>
    <p>network</p>
    <p>Docker pullDocker push</p>
    <p>E-cUbuntu 14.04.2</p>
    <p>network</p>
    <p>Security update</p>
    <p>Docker workflow Exo-clones</p>
    <p>Hot Storage 2016</p>
  </div>
  <div class="page">
    <p>Update With Docker Utilizing Exo-clones</p>
    <p>Ubuntu 14.04.3</p>
    <p>MyApp 1.1</p>
    <p>network</p>
    <p>Ubuntu 14.04.3</p>
    <p>Ubuntu 14.04.2</p>
    <p>Ubuntu 14.04.2</p>
    <p>MyApp 1.0</p>
    <p>MyApp 1.1</p>
    <p>MyApp 1.0</p>
    <p>downstream</p>
    <p>Ubuntu 14.04.2</p>
    <p>MyApp 1.0</p>
    <p>Ubuntu 14.04.2</p>
    <p>MyApp 1.0</p>
    <p>Ubuntu 14.04.3</p>
    <p>MyApp 1.1</p>
    <p>Ubuntu 14.04.3</p>
    <p>MyApp 1.1</p>
    <p>Security update</p>
    <p>Still sending all of MyApp</p>
    <p>Dedup wrt to non-parental</p>
    <p>volumes</p>
    <p>Hot Storage 2016</p>
  </div>
  <div class="page">
    <p>Network Overhead of Docker FS Layers vs. Exo-clones Transfer size of Docker FS layers compared to Exoclones using whole-file dedup and Exo-clones using either block or 6-9KB variable length chunking</p>
    <p>LTS Upgrade PXE Upgrade (zipped)</p>
    <p>Docker FS Layer Exo Whole-file Exo Blk-chunk Exo Var-chunk</p>
    <p>La ye</p>
    <p>r S iz</p>
    <p>e (M</p>
    <p>B )</p>
    <p>Hot Storage 2016</p>
  </div>
  <div class="page">
    <p>Exo-clone Format</p>
    <p>clone1:</p>
    <p>rm /a/1</p>
    <p>touch /new/foo</p>
    <p>map /new/foo to yellow data block</p>
    <p>Ref Count=2 Ref Count=1Ref Count=2</p>
    <p>Meta-data Section</p>
    <p>Data Section</p>
    <p>/new/foo/a/1 /a/2 /.exo/clone1</p>
    <p>Ref Count=2 Ref Count=1</p>
    <p>Ref Count=1</p>
    <p>Parent SS</p>
    <p>Child SS:</p>
    <p>Only additional space used by</p>
    <p>Exo-clone</p>
    <p>Hot Storage 2016</p>
  </div>
  <div class="page">
    <p>Summary  Instantly create and share diffs between any two FSes with</p>
    <p>No space overhead  No sending the same block twice over the wire</p>
    <p>Better backend for Docker, rsync, git  Easy but efficient backup/replication between any storage environment  What becomes simpler when we make revision control on the whole FS cheap and standard?</p>
    <p>What if every FS (e.g., ZFS, BtrFS, LVM, NASes) supported exo-clones?</p>
  </div>
  <div class="page">
    <p>Thank You rspillane@vmware.com http://telegram.me/necro351</p>
  </div>
  <div class="page">
    <p>Zero-copy Requires Block Alignment</p>
    <p>A</p>
    <p>Snapshot Updated Snapshot</p>
    <p>A</p>
    <p>Block Store</p>
    <p>Meta Data</p>
    <p>Existing FS</p>
    <p>send/re ceive</p>
    <p>A</p>
    <p>Snapshot Updated Snapshot</p>
    <p>A</p>
    <p>Block Store</p>
    <p>Meta Data</p>
    <p>Zerocopy Exoclone</p>
    <p>Without Zero-copy With Zero-copy</p>
    <p>Small files/changes increase exo</p>
    <p>clone size</p>
    <p>Zero-copy export (and</p>
    <p>import)</p>
    <p>Hot Storage 2016</p>
  </div>
  <div class="page">
    <p>How do exo-clones compare to ZFS and BtrFS send/receive?</p>
    <p>Linux Django Ubuntu</p>
    <p>tar.gz tar BtrFS ZFS VDFS</p>
    <p>Volumes full of small files are encoded less efficiently in exchange for zero-copy</p>
    <p>We rely on an additional gzip pass when transferring over network</p>
    <p>La ye</p>
    <p>r S iz</p>
    <p>e (M</p>
    <p>B )</p>
    <p>Hot Storage 2016</p>
  </div>
  <div class="page">
    <p>Exo-Clone Prototype doing Cassandra Migration</p>
    <p>WAN</p>
    <p>VSAN</p>
    <p>VDFS</p>
    <p>Deployment Cluster</p>
    <p>VDFS</p>
    <p>VSAN</p>
    <p>VDFS</p>
    <p>Test/Dev or Backup Cluster</p>
    <p>VDFS</p>
  </div>
  <div class="page">
    <p>Application Revision Control</p>
    <p>MyApp 1.1</p>
    <p>MyApp 1.6 mobile</p>
    <p>MyApp 1.4</p>
    <p>MyApp 1.6, 1.5,</p>
    <p>MyApp 1.7a</p>
    <p>MyApp 1.7b</p>
    <p>MyApp 1.6</p>
    <p>Bugs &amp; Feature RequestsFeatures &amp; Perf &amp; Fixes &amp; Bugs</p>
    <p>Hot Storage 2016</p>
  </div>
  <div class="page">
    <p>VDFS Exo Support</p>
    <p>VDFS Exo Support</p>
    <p>Implementation of Exo-clones on VDFS</p>
    <p>VSAN AWS/EBS (?)POSIX (e.g., Ext4)</p>
    <p>Exoclon</p>
    <p>e VDFS Exo Support</p>
    <p>Hot Storage 2016</p>
  </div>
  <div class="page">
    <p>git? Sadly, no</p>
    <p>WORKING OBJECT STORE</p>
    <p>A B</p>
    <p>git add</p>
    <p>Redundant copy, 5-10x bigger than current working state</p>
    <p>Hot Storage 2016</p>
  </div>
</Presentation>
