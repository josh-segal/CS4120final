<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Julian Stephen, Savvas Savvides, Russell Seidel &amp; Patrick Eugster</p>
    <p>Purdue University</p>
    <p>Practical Confidentiality Preserving Big Data Analysis</p>
  </div>
  <div class="page">
    <p>Introduction</p>
    <p>Potential of cloud  Computation infrastructure available on demand  Ability to adapt to changing requirements  Institutions opt for in-house clouds for data storage and analysis</p>
    <p>Challenges</p>
    <p>http://www.privacyrights.org/</p>
  </div>
  <div class="page">
    <p>Confidentiality in the Cloud</p>
    <p>Fully homomorphic encryption (FHE)  Prohibitive overhead  Limited expressiveness</p>
    <p>Partially homomorphic encryption (PHE)  Allows certain operations to be performed over encrypted text  E.g.,</p>
    <p>Paillier [Paillier;EuroCrypt99]  AHE  ElGamal [ElGamal;IEEE ToIT86]  MHE</p>
    <p>Conjecture  Many big data analysis jobs can be performed using a combination</p>
    <p>of partially homomorphic cryptosystems</p>
  </div>
  <div class="page">
    <p>Background</p>
    <p>Partially homomorphic encryption  AHE: D( E( x1 )  E( x2 ) ) = x1 + x2  MHE: D( E( x1 )  E( x2 ) ) = x1  x2</p>
    <p>Deterministic encryption  DET: x1 = x2  E( x1 ) = E( x2 )</p>
    <p>Order preserving encryption  OPE: x1 &lt; x2  E( x1 ) &lt; E( x2 )</p>
    <p>MapReduce [Dean&amp;Ghemawat; OSDI'04]  Pig and PigLatin [Gates et.al; VLDB09]</p>
    <p>Pig Latin: high level data flow language for expressing data analysis programs</p>
    <p>Pig: runtime environment, generates MapReduce programs</p>
  </div>
  <div class="page">
    <p>Crypsis</p>
    <p>Goal: Confidentiality preserving big data analysis  Leverage advantages of PHE whenever possible</p>
    <p>Multiple column encryption, expression rewriting</p>
    <p>Client side completion  Transform Pig Latin scripts to accept encrypted input</p>
    <p>E.g., (source PigLatin program)</p>
    <p>A = LOAD input1 AS (a0, a1); B = LOAD input2 AS (x0); C = FILTER A BY a0 &gt; 10; D = GROUP C BY a1; E = FOREACH D GENERATE group AS b0, SUM(C.a0) AS b1; F = JOIN E BY b0, B BY x0; STORE F INTO out;</p>
  </div>
  <div class="page">
    <p>Crypsis: Transformation Example [1]</p>
    <p>Target script</p>
    <p>A = LOAD enc_input1 AS (a0_ope, a0_ah, a1_det); B = LOAD enc_input2 AS (x0_det); C = FILTER A BY OPE_GR(a0_ope, 0xD0004D3D841327F2CCE71..); D = GROUP C BY a1_det; E = FOREACH D GENERATE group AS b0, ENCSUM(C.a0_ah) AS b1; F = JOIN E BY b0, B BY x0_det; STORE F INTO out;</p>
  </div>
  <div class="page">
    <p>Crypsis: Transformation Example [2]</p>
    <p>A = LOAD enc_input1 AS (a0_ope, a0_ah, a1_det);</p>
    <p>A = LOAD input1 AS (a0, a1);</p>
    <p>C = FILTER A BY OPE_GR(a0_ope, 0xD0004D3D841327F2CCE71..);</p>
    <p>C = FILTER A BY a0 &gt; 10;</p>
    <p>Line 1</p>
    <p>Line 3</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Introduction  Confidentiality in the cloud  Background  Crypsis - what it does  Crypsis - architecture  Transformation  Results  Related work  Conclusion</p>
  </div>
  <div class="page">
    <p>Crypsis: Architecture</p>
    <p>Database Encryption Service</p>
    <p>Script Transformation</p>
    <p>Coordinator</p>
    <p>Data</p>
    <p>Pig Script</p>
    <p>Encrypted Data Encrypted Database</p>
    <p>Unmodified Pig Service</p>
    <p>Secure UDFs</p>
    <p>Trusted tier (Client)</p>
    <p>Untrusted tier (Server)</p>
    <p>Transformed Script</p>
  </div>
  <div class="page">
    <p>Transformation Steps</p>
    <p>Script analysis  Generate Data Flow Graph (DFG)  Relations as nodes and data flows as edges</p>
    <p>Identify encryption scheme required for fields  Extract input fields and expressions in DFG  Track lineage of fields using DFG edges</p>
    <p>Identify encryption schemes available  Uses MET and Encryption Service</p>
    <p>Transformation  Generates new DFG using available encryption schemes  Replace operations by their cryptographic equivalents</p>
  </div>
  <div class="page">
    <p>Transformation Example</p>
    <p>a0 10</p>
    <p>&gt;</p>
    <p>a1</p>
    <p>det</p>
    <p>group</p>
    <p>nop</p>
    <p>a0</p>
    <p>sum</p>
    <p>b0 x0</p>
    <p>A = LOAD input1 AS (a0, a1); B = LOAD input2 AS (x0); C = FILTER A BY a0 &gt; 10; D = GROUP C BY a1; E = FOREACH D GENERATE group AS</p>
    <p>b0, SUM(C.a0) AS b1; F = JOIN E BY b0, B BY x0; STORE F INTO out;</p>
    <p>det det</p>
    <p>*det = assert_deterministic</p>
  </div>
  <div class="page">
    <p>Transformation Steps</p>
    <p>Script analysis  Generate Data Flow Graph (DFG)  Relations as nodes and data flows as edges</p>
    <p>Identify encryption scheme required for fields  Extract input fields and expressions in DFG  Track lineage of fields using DFG edges</p>
    <p>Identify encryption schemes available  Uses MET and Encryption Service</p>
    <p>Transformation  Generates new DFG using available encryption schemes  Replace operations by their cryptographic equivalents</p>
  </div>
  <div class="page">
    <p>Re-encryption</p>
    <p>PHE not always sufficient</p>
    <p>Re-encryption</p>
    <p>A = LOAD input1 AS (a0, a1, a2); B = FILTER A BY (a0 + a1) &lt; 10; STORE B INTO out;</p>
    <p>B = FILTER A BY OPE_GR( REENC(a0 + a1, OPE) , OPE(10));</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>PigMix2  11 ec2 c3.large instances (2 vCPUs, 3.75GB ram)  Over 3 million rows (5GB of data)</p>
  </div>
  <div class="page">
    <p>Current Limitations</p>
    <p>Iterations  Pig Latin is a query based language  No support for iterations or recursion  Iterations over encrypted data can be very expensive</p>
    <p>User defined functions (UDFs)  Many big data analysis languages propose UDFs vs. built-in/pre</p>
    <p>defined operators and functions</p>
    <p>Black-boxes from perspective of program analysis (cannot support transformation)</p>
    <p>Can analyze byte-code on Java UDFs</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>CryptDB [Popa et al.;CACM12]  Encrypted database for SQL (subset)  No re-encryption; client-side query completion  No parallelism</p>
    <p>MrCrypt [Lesani et al.;OOPSLA13]  Program analysis for individual MapReduce tasks  Language-independent, but limited</p>
    <p>DepSky [Bessani et al.;Eurosys11]  Storage  Quorum-based replication with secret sharing for privacy and</p>
    <p>integrity</p>
    <p>Only AHE</p>
  </div>
  <div class="page">
    <p>Conclusion &amp; Future work</p>
    <p>Confidentiality is a concern</p>
    <p>PHE has great potential in this direction</p>
    <p>Crypsis  Proof of concept for PigLatin based big data analysis over encrypted</p>
    <p>data</p>
    <p>Identifies appropriate encryption schemes and transforms source program to work on encrypted data</p>
    <p>PigMix queries over encrypted data with 3x overhead</p>
    <p>Future work  Sampling based heuristics to identify better execution path  Expression rewriting to further improve expressivity  Ability to specify field level confidentiality setting</p>
  </div>
</Presentation>
