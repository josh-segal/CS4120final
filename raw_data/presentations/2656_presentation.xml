<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>iSDX: An Industrial-Scale Software-Defined IXP</p>
    <p>Arpit Gupta Princeton University</p>
    <p>http://sdx.cs.princeton.edu</p>
    <p>Robert MacDavid, Rdiger Birkner, Marco Canini, Nick Feamster, Jennifer Rexford, Laurent Vanbever</p>
  </div>
  <div class="page">
    <p>Internet Exchange Points (IXPs)</p>
    <p>AS A Router</p>
    <p>AS C Router</p>
    <p>AS B Router</p>
    <p>BGP Session</p>
    <p>Switching Fabric IXP</p>
    <p>Route Server</p>
  </div>
  <div class="page">
    <p>Software Defined IXPs (SDXs)</p>
    <p>AS A Router</p>
    <p>AS C Router</p>
    <p>AS B Router</p>
    <p>BGP Session</p>
    <p>SDN Switch</p>
    <p>SDX Controller</p>
    <p>SDX</p>
    <p>[*Gupta et al., SIGCOMM14]</p>
  </div>
  <div class="page">
    <p>Deployment Experience:  Inter-Agency Exchange  Large IXP in Europe  Smaller IXPs in Asia</p>
    <p>Challenges:  Data Plane Scalability</p>
    <p>Deployment Ready SDX is Hard!</p>
  </div>
  <div class="page">
    <p>Data Plane Scalability Challenges</p>
    <p>Devices Operations Data Plane Performance State</p>
    <p>(# entries) Update Rate (flow-mods/s)</p>
    <p>Match-Action on Multiple Headers 100K 2,500</p>
  </div>
  <div class="page">
    <p>Data Plane Scalability Challenges</p>
    <p>Devices Operations Data Plane Performance State</p>
    <p>(# entries) Update Rate (flow-mods/s)</p>
    <p>Match-Action on Multiple Headers 100K 2,500</p>
    <p>Matches on IP Prefixes only ~1M N/A</p>
    <p>Problem: Optimize the usage of available devices</p>
  </div>
  <div class="page">
    <p>AS A IXP Fabric</p>
    <p>AS B</p>
    <p>AS C announces 10/8, 40/8</p>
    <p>AS D announces 10/8, 40/8, 80/8</p>
    <p>AS E announces</p>
    <p>Simple Example</p>
    <p>dPort = 443  fwd(C) dPort = 22  fwd(C)</p>
    <p>dPort = 80  fwd(E)</p>
    <p>SDX Controller</p>
  </div>
  <div class="page">
    <p>Forwarding Table Entries at SDX</p>
    <p>SDN Policies # Forwarding Table Entries</p>
    <p>dPort = 443  fwd(C) 1</p>
    <p>dPort = 22  fwd(C) 1</p>
    <p>dPort = 80  fwd(E) 1</p>
    <p>Number of forwarding table entries for A &amp; Bs Outbound SDN Policies</p>
    <p>AS A</p>
    <p>AS B</p>
  </div>
  <div class="page">
    <p>Goal Tracker</p>
    <p>Large IXP Dataset:  BGP RIBs &amp; Updates from large IXP  511 IXP participants  96 million peering routes for 300K IP prefixes  25K BGP updates for 2-hour duration</p>
    <p>Simple Example</p>
    <p>Baseline 3</p>
  </div>
  <div class="page">
    <p>Goal Tracker</p>
    <p>Large IXP Dataset:  BGP RIBs &amp; Updates from large IXP  511 IXP participants  96 million peering routes for 300K IP prefixes  25K BGP updates for 2-hour duration</p>
    <p>Simple Example Large IXP</p>
    <p>Baseline 3 62K</p>
  </div>
  <div class="page">
    <p>Goal Tracker Simple Example Large IXP</p>
    <p>Baseline 3 62K</p>
    <p>Satisfies design goals, but</p>
  </div>
  <div class="page">
    <p>Goal Tracker Simple Example Large IXP</p>
    <p>Baseline 3 62K</p>
    <p>not congruent with BGP!</p>
  </div>
  <div class="page">
    <p>AS A IXP Fabric AS C announces 10/8, 40/8</p>
    <p>Challenge: Congruence with BGP</p>
    <p>dPort = 443  fwd(C)</p>
    <p>p dIP = 80.0.0.1, dPort = 443</p>
    <p>Ensure p is not forwarded to C</p>
    <p>SDX Controller</p>
  </div>
  <div class="page">
    <p>AS A IXP Fabric AS C announces 10/8, 40/8</p>
    <p>Solution: SDN Policy Augmentation</p>
    <p>dIP {10/8, 40/8}  dPort = 443  fwd(C)</p>
    <p>p dIP = 80.0.0.1, dPort = 443</p>
    <p>Match on prefixes advertised by C</p>
    <p>SDX Controller</p>
  </div>
  <div class="page">
    <p>Data Plane State Explosion!</p>
    <p>SDN Policy Augmentation increases forwarding table entries</p>
    <p>SDN Policies # Forwarding Table</p>
    <p>Entries 10/8 40/8 80/8</p>
    <p>dPort = 443  fwd(C) 1 1 0</p>
    <p>dPort = 22  fwd(C) 1 1 0</p>
    <p>dPort = 443  fwd(D) 1 1 1</p>
  </div>
  <div class="page">
    <p>Goal Tracker Simple Example Large IXP</p>
    <p>Baseline 3 62K</p>
    <p>Policy Augmentation 7 68M</p>
    <p>Not possible to support these many forwarding table entries!</p>
  </div>
  <div class="page">
    <p>Forwarding Equivalence Classes</p>
    <p>SDN Policies # Forwarding Table</p>
    <p>Entries 10/8 40/8 80/8</p>
    <p>dPort = 443  fwd(C) 1 1 0</p>
    <p>dPort = 22  fwd(C) 1 1 0</p>
    <p>dPort = 443  fwd(D) 1 1 1</p>
  </div>
  <div class="page">
    <p>Leveraging Forwarding Equivalence</p>
    <p>forward to BGP Next Hop</p>
    <p>AS A</p>
    <p>AS C announces 10/8, 40/8 AS D</p>
    <p>announces 10/8, 40/8, 80/8</p>
    <p>IXP Fabric</p>
    <p>Single BGP Next Hop for 10/8, 40/8</p>
    <p>dPort = 443  fwd(C)</p>
  </div>
  <div class="page">
    <p>Leveraging Forwarding Equivalence</p>
    <p>forward to BGP Next Hop</p>
    <p>AS A IXP Fabric</p>
    <p>fwd(C)</p>
    <p>match on BGP Next Hop</p>
    <p>AS C announces 10/8, 40/8 AS D</p>
    <p>announces 10/8, 40/8, 80/8Flow Rules at SDX match</p>
    <p>on BGP Next Hops 19</p>
    <p>dPort = 443  fwd(C)</p>
  </div>
  <div class="page">
    <p>Goal Tracker Simple Example Large IXP</p>
    <p>Baseline 3 62K</p>
    <p>Policy Augmentation 7 68M</p>
    <p>*FEC Computation 4 21M</p>
    <p>Still not possible to support these many forwarding table entries!</p>
    <p>[*Gupta et al., SIGCOMM14]</p>
  </div>
  <div class="page">
    <p>SDN Policies # Forwarding Table</p>
    <p>Entries {10/8, 40/8} 80/8</p>
    <p>dPort = 443  fwd(C) 1 0</p>
    <p>dPort = 22  fwd(C) 1 0</p>
    <p>dPort = 443  fwd(D) 1 1</p>
    <p>Independent FEC Computation can be more efficient</p>
    <p>More Efficient FEC Computation</p>
  </div>
  <div class="page">
    <p>Partitioning FEC Computation</p>
    <p>Large number of SDX participants  Many different policies on groups of prefixes  Leads to a large number of small FECs of prefixes</p>
    <p>Compute FECs independently  Separate computation per participant  Leads to small number of large FECs, and less frequent recomputation</p>
    <p>Enables scale out of the FEC computation</p>
  </div>
  <div class="page">
    <p>SDN Policies # Forwarding Table</p>
    <p>Entries {10/8, 40/8} 80/8</p>
    <p>dPort = 443  fwd(C) 1 0</p>
    <p>dPort = 22  fwd(C) 1 0</p>
    <p>dPort = 443  fwd(D) 1</p>
    <p>A &amp; B independently compute FECs</p>
    <p>FEC Computation Partitioning in Action</p>
  </div>
  <div class="page">
    <p>Goal Tracker Simple Example Large IXP</p>
    <p>Baseline 3 62K</p>
    <p>Policy Augmentation 7 68M</p>
    <p>FEC Computation 4 21M</p>
    <p>Independent FEC Computation 3 763K</p>
    <p>Also requires support for 15K flow-mods/seconds</p>
  </div>
  <div class="page">
    <p>Undesired BGP &amp; SDN Coupling</p>
    <p>SDN Policies # Forwarding Table</p>
    <p>Entries 10/8 40/8 80/8</p>
    <p>dPort = 443  fwd(C) 1 1 0</p>
    <p>dPort = 22  fwd(C) 1 1 0</p>
    <p>dPort = 443  fwd(D) 1  0 1 1</p>
    <p>Incoming BGP Update: {AS D withdraws route for prefix 10/8}</p>
  </div>
  <div class="page">
    <p>Decoupling BGP from SDN Policies</p>
    <p>Leverage advances in commodity hw switches  Support for Bitmask Matching (L2 headers)</p>
    <p>Extend BGP next hop encoding  So far: encode FECs (single field)  New idea: encode reachability bitmask (multi field)</p>
    <p>Changing only the BGP announcements  No need to update the SDX data plane!</p>
  </div>
  <div class="page">
    <p>Reachability Bitmask in Action</p>
    <p>forward to BGP Next Hop</p>
    <p>Reachable via AS C</p>
    <p>AS A</p>
    <p>AS C announces 10/8, 40/8</p>
    <p>AS D announces 10/8, 40/8, 80/8</p>
    <p>IXP Fabric</p>
    <p>Reachable via AS D</p>
    <p>Dedicate one bit per participant</p>
    <p>dPort = 443  fwd(C)</p>
  </div>
  <div class="page">
    <p>Reachability Bitmask in Action</p>
    <p>Reachable via AS C</p>
    <p>Reachable via AS D</p>
    <p>AS A</p>
    <p>AS C announces 10/8, 40/8</p>
    <p>AS D announces 10/8, 40/8, 80/8</p>
    <p>fwd(C)</p>
    <p>match on Reachability Bitmask</p>
    <p>IXP Fabric</p>
    <p>forward to BGP Next Hop</p>
    <p>Immune to BGP Dynamics dPort = 443  fwd(C)</p>
  </div>
  <div class="page">
    <p>Reachability Bitmask in Action</p>
    <p>SDN Policies # Forwarding Table</p>
    <p>Entries C</p>
    <p>dPort = 443  fwd(C) 1</p>
    <p>dPort = 22  fwd(C) 1</p>
    <p>dPort = 443  fwd(D) 1</p>
    <p>Reduces Data Plane State</p>
  </div>
  <div class="page">
    <p>Goal Tracker Simple Example Large IXP</p>
    <p>Baseline 3 62K</p>
    <p>Policy Augmentation 7 68M</p>
    <p>FEC Computation 4 21M</p>
    <p>Independent FEC Computation 3 763K</p>
    <p>Reachability Encoding 3 65K</p>
    <p>We can now run SDX over commodity hardware switches 30</p>
  </div>
  <div class="page">
    <p>iSDX Evaluation Summary</p>
    <p>Data Plane State:  Requires 65K &lt; 100K forwarding table entries</p>
    <p>Data Plane Update Rate:  Requires 0 &lt; 2500 flow-mods/second</p>
    <p>Other Goals:  Processes BGP update bursts in real time (50 ms)  Requires only 360 BGP Next Hops compared to 25K from previous solutions</p>
  </div>
  <div class="page">
    <p>You Can Run iSDX Today!</p>
    <p>Running code  Vagrant &amp; Docker based setup  Instructions to run with Hardware Switches</p>
    <p>ONFs Open Source SDN  Community: https://community.opensourcesdn.org/wg/iSDX/dashboard</p>
    <p>Mailing List isdx@community.OpenSourceSDN.org</p>
    <p>http://sdx.cs.princeton.edu</p>
  </div>
</Presentation>
