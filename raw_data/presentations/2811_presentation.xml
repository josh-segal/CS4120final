<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Shoal: A Network Architecture for Disaggregated Racks</p>
    <p>Vishal Shrivastav (Cornell University) Asaf Valadarsky (Hebrew University of Jerusalem) Hitesh Ballani, Paolo Costa (Microsoft Research)</p>
    <p>Ki Suh Lee (Waltz Networks) Han Wang (Barefoot Networks)</p>
    <p>Rachit Agarwal, Hakim Weatherspoon (Cornell University)</p>
  </div>
  <div class="page">
    <p>Inter-rack DC Network</p>
    <p>Traditional racks in datacenters</p>
  </div>
  <div class="page">
    <p>(FPGA,GPU,TPU)</p>
    <p>Inter-rack DC Network</p>
    <p>Disaggregated racks in datacenters</p>
    <p>NVMe</p>
    <p>Storage SoCs</p>
    <p>Acclerators</p>
    <p>CPU Memory</p>
    <p>I/O controllers</p>
    <p>NIC</p>
    <p>Prior works [OSDI16] [HPCA12] [Keeton15]  High compute density  Fine-grained resource pooling and provisioning  Seamless scaling and independent evolution of resources</p>
    <p>Intra-rack Network</p>
  </div>
  <div class="page">
    <p>(FPGA,GPU,TPU)</p>
    <p>Inter-rack DC Network</p>
    <p>Disaggregated racks in datacenters</p>
    <p>NVMe</p>
    <p>Storage SoCs</p>
    <p>Acclerators</p>
    <p>CPU Memory</p>
    <p>I/O controllers</p>
    <p>NIC</p>
    <p>Prior works [OSDI16] [HPCA12] [Keeton15]  High compute density  Fine-grained resource pooling and provisioning  Seamless scaling and independent evolution of resources</p>
    <p>Intra-rack Network</p>
  </div>
  <div class="page">
    <p>Challenges for disaggregated rack network</p>
    <p>Connect as many as an order of magnitude more nodes than traditional racks</p>
    <p>Network</p>
    <p>Compute</p>
    <p>~15KW power budget [NSDI16]</p>
    <p>Intra-rack Network</p>
    <p>q Be high performant  low latency / high throughput</p>
    <p>q Be power efficient  to enable high compute density</p>
  </div>
  <div class="page">
    <p>Challenges for disaggregated rack network</p>
    <p>Connect as many as an order of magnitude more nodes than traditional racks</p>
    <p>~15KW power budget [NSDI16]</p>
    <p>Network</p>
    <p>Compute</p>
    <p>Intra-rack Network</p>
    <p>q Be high performant  low latency / high throughput</p>
    <p>q Be power efficient  to enable high compute density</p>
  </div>
  <div class="page">
    <p>Challenges for disaggregated rack network</p>
    <p>Connect as many as an order of magnitude more nodes than traditional racks</p>
    <p>~15KW power budget [NSDI16]</p>
    <p>Network</p>
    <p>Compute</p>
    <p>Intra-rack Network</p>
    <p>q Be high performant  low latency / high throughput</p>
    <p>q Be power efficient  to enable high compute density</p>
  </div>
  <div class="page">
    <p>Potential disaggregated rack network designs Low Power consumption High Performance(low latency / high throughput)</p>
    <p>Packet-switched Networks</p>
    <p>ToR chasis switch</p>
    <p>Network of switches</p>
    <p>Direct-connect Networks</p>
  </div>
  <div class="page">
    <p>Shoal is a network stack and fabric for disaggregated racks that is both low power and</p>
    <p>high performance (low latency, high throughput)</p>
    <p>Key feature: Shoal network fabric comprises purely fast circuit switches that</p>
    <p>can reconfigure within nanoseconds</p>
  </div>
  <div class="page">
    <p>Shoal is a network stack and fabric for disaggregated racks that is both low power and</p>
    <p>high performance (low latency, high throughput)</p>
    <p>Key feature: Shoal network fabric comprises purely fast circuit switches that</p>
    <p>can reconfigure within nanoseconds</p>
  </div>
  <div class="page">
    <p>Goal 1: Low power consumption</p>
    <p>q No buffering q No packet processing q No serialization/de-serialization</p>
    <p>Consumes significantly less power than packet switches</p>
    <p>SerDes SerDes</p>
    <p>SerDes SerDes</p>
    <p>Packet Processing</p>
    <p>Buffers</p>
    <p>Crossbar</p>
    <p>Circuit switches</p>
    <p>Circuit switch</p>
    <p>SerDes SerDes</p>
    <p>SerDes SerDes</p>
    <p>Packet Processing</p>
    <p>Buffers</p>
    <p>Crossbar</p>
    <p>Packet switch</p>
  </div>
  <div class="page">
    <p>Goal 2: High network performance</p>
    <p>Key Challenge: Need to explicitly set up circuits (reconfigure) before sending packets</p>
    <p>q Traditional circuit-switched networks q Uses switches with high reconfiguration delay, up to milliseconds q Uses a central controller to decide the circuits (reconfiguration algorithm) q Not suitable for low latency traffic</p>
    <p>q Shoal q Leverages circuit switches with nanosecond reconfiguration delay</p>
    <p>Key Design Idea: De-centralized, traffic agnostic reconfiguration algorithm  Inspired from LB monolithic packet switches [Comp Comm02]</p>
  </div>
  <div class="page">
    <p>* -&gt; H</p>
    <p>Shoal for a single circuit switch network</p>
    <p>A B C D E F G H</p>
    <p>* -&gt; H</p>
    <p>Time slot</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>E</p>
    <p>F</p>
    <p>G</p>
    <p>H</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>E</p>
    <p>F</p>
    <p>G</p>
    <p>H</p>
    <p>A</p>
    <p>C</p>
    <p>D</p>
    <p>E</p>
    <p>F</p>
    <p>G</p>
    <p>H</p>
    <p>A</p>
    <p>B</p>
    <p>D</p>
    <p>E</p>
    <p>F</p>
    <p>G</p>
    <p>H</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>E</p>
    <p>F</p>
    <p>G</p>
    <p>H</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>F</p>
    <p>G</p>
    <p>H</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>E</p>
    <p>G</p>
    <p>H</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>E</p>
    <p>F</p>
    <p>H</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>E</p>
    <p>F</p>
    <p>G</p>
    <p>(a cyclic permutation)</p>
    <p>* -&gt; H * -&gt; H * -&gt; H * -&gt; H * -&gt; H * -&gt; H * -&gt; H</p>
    <p>A permutation of connections</p>
    <p>N-1 time slots (an epoch)</p>
    <p>Uniformly load-balanced</p>
    <p>traffic</p>
    <p>in worst-case</p>
    <p>A -&gt; H A -&gt; H A -&gt;H A -&gt;H A -&gt; H A -&gt;H * -&gt; H* -&gt; H* -&gt; H* -&gt; H * -&gt; H</p>
    <p>A -&gt; HA -&gt; HA -&gt; HA -&gt; HA -&gt; H A -&gt; H A -&gt; H</p>
    <p>Static pre-defined schedule</p>
    <p>Each node has N-1 queues</p>
    <p>(one per dst)</p>
  </div>
  <div class="page">
    <p>Extending Shoal to a network of circuit switches</p>
    <p>A B C D E F G H</p>
    <p>A B C D E F G H</p>
    <p>B C</p>
    <p>D E F G H A</p>
    <p>C D</p>
    <p>E F G H A B</p>
    <p>D E</p>
    <p>F G H A B C</p>
    <p>E F</p>
    <p>G H A B C D</p>
    <p>F G</p>
    <p>H A B C D E</p>
    <p>G H</p>
    <p>A B C D E F</p>
    <p>H A</p>
    <p>B C D E F G</p>
  </div>
  <div class="page">
    <p>Extending Shoal to a network of circuit switches</p>
    <p>A B C D E F G H</p>
    <p>Requires very tight network-wide synchronization q DTP [Sigcomm16] + WhiteRabbit can achieve sub-nanosecond</p>
    <p>synchronization precision</p>
    <p>A B C D E F G H</p>
    <p>B C</p>
    <p>D E F G H A</p>
    <p>C D</p>
    <p>E F G H A B</p>
    <p>D E</p>
    <p>F G H A B C</p>
    <p>E F</p>
    <p>G H A B C D</p>
    <p>F G</p>
    <p>H A B C D E</p>
    <p>G H</p>
    <p>A B C D E F</p>
    <p>H A</p>
    <p>B C D E F G</p>
    <p>A non-blocking topology of circuit switches</p>
  </div>
  <div class="page">
    <p>Congestion in Shoal</p>
    <p>A B C D E F G H</p>
    <p>A B C D E F G H</p>
    <p>B C</p>
    <p>D E F G H A</p>
    <p>C D</p>
    <p>E F G H A B</p>
    <p>D E</p>
    <p>F G H A B C</p>
    <p>E F</p>
    <p>G H A B C D</p>
    <p>F G</p>
    <p>H A B C D E</p>
    <p>G H</p>
    <p>A B C D E F</p>
    <p>H A</p>
    <p>B C D E F G</p>
    <p>Flow to H</p>
    <p>Flow to H</p>
    <p>B -&gt; HA -&gt; HB -&gt; HA -&gt; HB -&gt; HA -&gt; HB -&gt; HA -&gt; HB -&gt; HA -&gt; HB -&gt; HA -&gt; HB -&gt; HA -&gt; H A -&gt; HB -&gt; HA -&gt; HA -&gt; H</p>
    <p>B -&gt; HA -&gt; H B -&gt; H A -&gt; H</p>
  </div>
  <div class="page">
    <p>Congestion control in Shoal</p>
    <p>A -&gt; H</p>
    <p>B -&gt; H</p>
    <p>B -&gt; H</p>
    <p>A -&gt; H</p>
    <p>A -&gt; H</p>
    <p>A -&gt; H</p>
    <p>A -&gt; H</p>
    <p>Queue for destination H at CA C</p>
    <p>Each per-destination queue !&quot; corresponding to destination &quot; is bounded! #$% !&quot;  ' + &quot;%)*+,_.$/0$$(&quot;) packets</p>
    <p>at most 1 packet per source</p>
    <p>A B C D E F G H</p>
    <p>B C</p>
    <p>D E F G H A</p>
    <p>C D</p>
    <p>E F G H A B</p>
    <p>D E</p>
    <p>F G H A B C</p>
    <p>E F</p>
    <p>G H A B C D</p>
    <p>F G</p>
    <p>H A B C D E</p>
    <p>G H</p>
    <p>A B C D E F</p>
    <p>H A</p>
    <p>B C D E F G</p>
  </div>
  <div class="page">
    <p>q No central controller for reconfiguration q Fully de-centralized, traffic agnostic reconfiguration logic q Allows circuit switches to reconfigure at nanosecond timescales</p>
    <p>q Each per-destination queue in the network is bounded</p>
    <p>q Each packet traverses the network at most twice q Worst-case 50% throughput compared to an ideal packet-switched network q Can be compensated by allocating 2X bandwidth per node q Cost (Shoal)  Cost (packet-switched network with  bandwidth of Shoal)</p>
    <p>Key properties of Shoal</p>
  </div>
  <div class="page">
    <p>Implementation</p>
    <p>Stratix V FPGA q Bluespec System Verilog</p>
    <p>Verified the queuing and throughput properties of Shoal on a 8-node testbed</p>
    <p>Circuit switch implementation can</p>
    <p>reconfigure in &lt; 6.4ns</p>
    <p>q Implemented custom NIC and circuit switch on FPGA</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>q Power consumption</p>
    <p>Shoal consumes 3.5x less power than packet-switched network!</p>
    <p>Packet-switched Network 8.72 KW (58% of rack budget) Shoal 2.55 KW (17% of rack budget)</p>
    <p>For a 512-node rack</p>
    <p>q Packet-switched network comprises 24 64x50 Gbps packet switches q Shoal comprises 48 64x50 Gbps circuit switches</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>q Network performance  Packet-level simulator in C  512-node rack  5 disaggregated workload</p>
    <p>traces [OSDI16]  Shoal has 2X bandwidth</p>
    <p>(with comparable cost)</p>
    <p>Shoal performs comparable or better than several recent designs for packet-switched networks! Short flows (0,100KB] Long flows [1MB,)</p>
  </div>
  <div class="page">
    <p>Conclusion Low Power consumption High Performance(low latency / high throughput)</p>
    <p>Packet-switched Networks</p>
    <p>ToR chasis switch</p>
    <p>Network of switches</p>
    <p>Direct-connect Networks</p>
    <p>Shoal (circuit-switched)</p>
  </div>
  <div class="page">
    <p>Thank you!</p>
    <p>Shoal FPGA prototype and simulator code is available at: https://github.com/vishal1303/Shoal</p>
  </div>
</Presentation>
