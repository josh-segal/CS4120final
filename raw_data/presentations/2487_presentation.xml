<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Causality-Based VersioningCausality-Based Versioning</p>
    <p>Kiran-Kumar Muniswamy-Reddy and David A. Holland</p>
    <p>Harvard School of Engineering and Applied</p>
    <p>Sciences</p>
  </div>
  <div class="page">
    <p>Consider this scenarioConsider this scenario</p>
    <p>I installed a piece of softwareI installed a piece of software  But.. that broke a few other tools!But.. that broke a few other tools!</p>
    <p>Uninstall not good enoughUninstall not good enough  The config files were still corruptThe config files were still corrupt</p>
  </div>
  <div class="page">
    <p>But which But which files were files were modified?modified?</p>
    <p>VersioningVersioning</p>
    <p>Maintains old Maintains old data to which data to which</p>
    <p>you can recoveryou can recover</p>
  </div>
  <div class="page">
    <p>CausalityCausality Tracks propagation Tracks propagation of data and lets you of data and lets you</p>
    <p>find which files find which files were modified were modified</p>
    <p>Too bad I dont Too bad I dont have those old have those old</p>
    <p>versionsversions</p>
  </div>
  <div class="page">
    <p>CausalityCausality</p>
    <p>VersioningVersioning</p>
  </div>
  <div class="page">
    <p>Applications of Versioning + CausalityApplications of Versioning + Causality</p>
    <p>System Configuration ManagementSystem Configuration Management  Causal data identifies files modifiedCausal data identifies files modified  Version data allows you to recover the files Version data allows you to recover the files</p>
    <p>modifiedmodified</p>
    <p>Intrusion RecoveryIntrusion Recovery  IP ComplianceIP Compliance  Reproduce Research ResultsReproduce Research Results</p>
  </div>
  <div class="page">
    <p>Apache split-logfile Vulnerability Apache split-logfile Vulnerability</p>
    <p>Vulnerability in Apache 1.3 Vulnerability in Apache 1.3  Vulnerability allows attacker to overwrite Vulnerability allows attacker to overwrite</p>
    <p>any file with a .log extensionany file with a .log extension</p>
  </div>
  <div class="page">
    <p>open DB.logopen DB.log</p>
    <p>Write txWrite tx</p>
    <p>Write txWrite tx</p>
    <p>Detect CorruptionDetect Corruption</p>
    <p>ScenarioScenario</p>
  </div>
  <div class="page">
    <p>V1;DB.logV1;DB.log</p>
    <p>Open-closeOpen-close</p>
    <p>Can only Can only recover to recover to</p>
  </div>
  <div class="page">
    <p>V1;DB.logV1;DB.log</p>
    <p>Version-on-every writeVersion-on-every write</p>
    <p>V2;DB.logV2;DB.log</p>
    <p>Vn;DB.logVn;DB.log</p>
    <p>Vn+2;DB.logVn+2;DB.log</p>
    <p>Vn+1;DB.logVn+1;DB.log</p>
    <p>can recover to can recover to 10 AM, but 10 AM, but expensiveexpensive</p>
  </div>
  <div class="page">
    <p>GoalGoal</p>
    <p>Combine versioning and causality, taking Combine versioning and causality, taking advantage of causality information to advantage of causality information to create versions at just the right timecreate versions at just the right time</p>
  </div>
  <div class="page">
    <p>ContributionsContributions</p>
    <p>Two algorithms that create Two algorithms that create usefuluseful versions versions  Cycle Avoidance Cycle Avoidance  Graph FinesseGraph Finesse</p>
    <p>Evaluate efficacy and efficiency of these Evaluate efficacy and efficiency of these two algorithms in the context of versioning two algorithms in the context of versioning</p>
  </div>
  <div class="page">
    <p>OutlineOutline</p>
    <p>IntroductionIntroduction  Background on PASSBackground on PASS  Versioning AlgorithmsVersioning Algorithms  ImplementationImplementation  EvaluationEvaluation  ConclusionConclusion</p>
  </div>
  <div class="page">
    <p>PASS Architecture: P reads APASS Architecture: P reads A</p>
    <p>K E</p>
    <p>R N</p>
    <p>E L</p>
    <p>U S</p>
    <p>E R</p>
    <p>VFS Layer</p>
    <p>Syscall Layer</p>
    <p>WaldoUser process P</p>
    <p>Lasagna</p>
    <p>Interceptor</p>
    <p>Observer</p>
    <p>Analyzer</p>
    <p>log</p>
    <p>Distributor</p>
    <p>generates generates record record PPAA</p>
    <p>version?version?</p>
    <p>cache cache PPAA</p>
    <p>filters filters eventsevents</p>
  </div>
  <div class="page">
    <p>PASS Architecture: PASS Architecture: P writes BP writes B</p>
    <p>K E</p>
    <p>R N</p>
    <p>E L</p>
    <p>U S</p>
    <p>E R</p>
    <p>VFS Layer</p>
    <p>Syscall Layer</p>
    <p>WaldoUser process P</p>
    <p>Lasagna</p>
    <p>Interceptor</p>
    <p>Observer</p>
    <p>Analyzer</p>
    <p>log</p>
    <p>Distributor</p>
    <p>generates generates record record BBPP</p>
    <p>Version?Version?cache cache P PAA</p>
    <p>PPA A BBPP</p>
    <p>BBPP</p>
  </div>
  <div class="page">
    <p>OutlineOutline</p>
    <p>IntroductionIntroduction  Background on PASSBackground on PASS  Versioning AlgorithmsVersioning Algorithms  ImplementationImplementation  EvaluationEvaluation  ConclusionConclusion</p>
  </div>
  <div class="page">
    <p>Intuition for new algorithmsIntuition for new algorithms</p>
    <p>The creation of a cycle is an indicator The creation of a cycle is an indicator that a version created at that instant that a version created at that instant could be useful later could be useful later</p>
    <p>Cycles are violations of causality Cycles are violations of causality  Implies that past depends on future!Implies that past depends on future!</p>
  </div>
  <div class="page">
    <p>Open-Close VersioningOpen-Close Versioning</p>
    <p>Freeze declares end of a versionFreeze declares end of a version</p>
  </div>
  <div class="page">
    <p>Example scenarioExample scenario</p>
    <p>P Q</p>
    <p>read A</p>
    <p>read B</p>
    <p>write B</p>
    <p>write A</p>
    <p>read A</p>
    <p>read B</p>
    <p>Each read/write is Each read/write is</p>
    <p>enclosed by an enclosed by an</p>
    <p>open and closeopen and close TimeTime</p>
  </div>
  <div class="page">
    <p>Open-CloseOpen-Close</p>
    <p>A1A1</p>
    <p>PP</p>
    <p>P Q</p>
    <p>read A</p>
    <p>read B</p>
    <p>write B</p>
    <p>write A</p>
    <p>read A</p>
    <p>read B</p>
  </div>
  <div class="page">
    <p>Open-CloseOpen-Close</p>
    <p>A1A1</p>
    <p>PP QQ</p>
    <p>B1B1</p>
    <p>P Q</p>
    <p>read A</p>
    <p>read B</p>
    <p>write B</p>
    <p>write A</p>
    <p>read A</p>
    <p>read B</p>
  </div>
  <div class="page">
    <p>Open-CloseOpen-Close</p>
    <p>A1A1</p>
    <p>PP</p>
    <p>B2B2</p>
    <p>QQ</p>
    <p>B1B1</p>
    <p>P Q</p>
    <p>read A</p>
    <p>read B</p>
    <p>write B</p>
    <p>write A</p>
    <p>read A</p>
    <p>read B</p>
  </div>
  <div class="page">
    <p>Open-CloseOpen-Close</p>
    <p>A1A1</p>
    <p>PP</p>
    <p>B2B2 A2A2</p>
    <p>QQ</p>
    <p>B1B1</p>
    <p>P Q</p>
    <p>read A</p>
    <p>read B</p>
    <p>write B</p>
    <p>write A</p>
    <p>read A</p>
    <p>read B</p>
  </div>
  <div class="page">
    <p>Open-CloseOpen-Close</p>
    <p>A1A1</p>
    <p>PP</p>
    <p>B2B2 A2A2</p>
    <p>QQ</p>
    <p>B1B1</p>
    <p>P Q</p>
    <p>read A</p>
    <p>read B</p>
    <p>write B</p>
    <p>write A</p>
    <p>read A</p>
    <p>read B</p>
  </div>
  <div class="page">
    <p>Open-CloseOpen-Close</p>
    <p>A1A1</p>
    <p>PP</p>
    <p>B2B2 A2A2</p>
    <p>QQ</p>
    <p>B1B1</p>
    <p>P Q</p>
    <p>read A</p>
    <p>read B</p>
    <p>write B</p>
    <p>write A</p>
    <p>read A</p>
    <p>read B Open-Close allows cycles to happen.Open-Close allows cycles to happen.</p>
    <p>Violates CausalityViolates Causality</p>
  </div>
  <div class="page">
    <p>Version-on-every writeVersion-on-every write</p>
    <p>Pros:Pros:  Preserves causality: there are no cyclesPreserves causality: there are no cycles</p>
    <p>Every read creates a new version of the processEvery read creates a new version of the process  Every write creates a new version of the fileEvery write creates a new version of the file</p>
    <p>There are no duplicates eitherThere are no duplicates either</p>
    <p>Disadvantage: most versions are Disadvantage: most versions are unnecessaryunnecessary</p>
  </div>
  <div class="page">
    <p>Cycle Avoidance AlgorithmCycle Avoidance Algorithm</p>
    <p>Preserves Causality by avoiding cyclesPreserves Causality by avoiding cycles  Uses local per-object information to make Uses local per-object information to make</p>
    <p>decisionsdecisions  Similar to the timestamp ordering in Similar to the timestamp ordering in</p>
    <p>databasesdatabases  Intuition:Intuition:</p>
    <p>Freeze an object when we add a dependency Freeze an object when we add a dependency that does not previously exist, i.e., new that does not previously exist, i.e., new causalitycausality</p>
  </div>
  <div class="page">
    <p>Cycle Avoidance ExampleCycle Avoidance Example</p>
    <p>On receiving record A1 On receiving record A1  B2 B2  If no B in As history, then freeze AIf no B in As history, then freeze A  Else if B in As history, thenElse if B in As history, then</p>
    <p>If As history has B2, discard record (duplicate)If As history has B2, discard record (duplicate)  If As history has B3 (version &gt; 2), discard recordIf As history has B3 (version &gt; 2), discard record  If As history has B1 (version &lt; 2), freeze AIf As history has B1 (version &lt; 2), freeze A</p>
  </div>
  <div class="page">
    <p>Cycle AvoidanceCycle Avoidance</p>
    <p>A1A1</p>
    <p>P2P2</p>
    <p>A1A1</p>
    <p>P1P1</p>
    <p>P Q</p>
    <p>read A</p>
    <p>read B</p>
    <p>write B</p>
    <p>write A</p>
    <p>read A</p>
    <p>read B</p>
  </div>
  <div class="page">
    <p>Cycle AvoidanceCycle Avoidance</p>
    <p>A1A1</p>
    <p>P2P2</p>
    <p>B2B2 A2A2</p>
    <p>Q2Q2</p>
    <p>B1B1</p>
    <p>P3P3</p>
    <p>P Q</p>
    <p>read A</p>
    <p>read B</p>
    <p>write B</p>
    <p>write A</p>
    <p>read A</p>
    <p>read B</p>
  </div>
  <div class="page">
    <p>Cycle AvoidanceCycle Avoidance</p>
    <p>A1A1</p>
    <p>P2P2</p>
    <p>B2B2 A2A2</p>
    <p>Q2Q2</p>
    <p>B1B1</p>
    <p>P3P3 Q3Q3</p>
    <p>P Q</p>
    <p>read A</p>
    <p>read B</p>
    <p>write B</p>
    <p>write A</p>
    <p>read A</p>
    <p>read BCycle-Avoidance prevents cycles,Cycle-Avoidance prevents cycles,</p>
    <p>but creates more versionsbut creates more versions</p>
  </div>
  <div class="page">
    <p>Graph Finesse AlgorithmGraph Finesse Algorithm</p>
    <p>Uses Global knowledge Uses Global knowledge  Intuition:Intuition:</p>
    <p>Check every new record against a global Check every new record against a global dependency graph.dependency graph.</p>
    <p>If it forms a cycle, just freeze that one nodeIf it forms a cycle, just freeze that one node</p>
    <p>Subsumes open-close algorithmSubsumes open-close algorithm</p>
  </div>
  <div class="page">
    <p>Graph Finesse ExampleGraph Finesse Example</p>
    <p>On receiving record A1 On receiving record A1  B2 B2  If B2 is already in As history, discard recordIf B2 is already in As history, discard record  Else check for a path from B2 Else check for a path from B2  A1 A1</p>
    <p>If yes, this a cycle, freeze A1 and change the If yes, this a cycle, freeze A1 and change the record to A2record to A2B2B2</p>
    <p>If no cycle, add A1 If no cycle, add A1  B2 to the graph B2 to the graph</p>
  </div>
  <div class="page">
    <p>Graph FinesseGraph Finesse</p>
    <p>A1A1</p>
    <p>P1P1</p>
    <p>B2B2 A2A2</p>
    <p>Q1Q1</p>
    <p>B1B1</p>
    <p>Q2Q2</p>
    <p>P Q</p>
    <p>read A</p>
    <p>read B</p>
    <p>write B</p>
    <p>write A</p>
    <p>read A</p>
    <p>read B</p>
  </div>
  <div class="page">
    <p>Cycle AvoidanceCycle Avoidance</p>
    <p>A1A1</p>
    <p>P1P1</p>
    <p>B2B2 A2A2</p>
    <p>Q1Q1</p>
    <p>B1B1</p>
    <p>Q2Q2</p>
    <p>A1A1</p>
    <p>P2P2</p>
    <p>B2B2 A2A2</p>
    <p>Q2Q2</p>
    <p>B1B1</p>
    <p>Q3Q3P3P3</p>
    <p>Graph Finesse</p>
    <p>Graph Finesse prevents cycles. Graph Finesse prevents cycles.</p>
    <p>But creates fewer versions than But creates fewer versions than</p>
    <p>Cycle AvoidanceCycle Avoidance</p>
  </div>
  <div class="page">
    <p>Cycle Avoidance Graph Finesse</p>
    <p>Uses Local state Uses Global state</p>
    <p>Creates a few unnecessary versions</p>
    <p>Creates fewer versions</p>
    <p>Has lower runtime overhead</p>
    <p>Can have high runtime overheads</p>
  </div>
  <div class="page">
    <p>OutlineOutline</p>
    <p>IntroductionIntroduction  Background on PASSBackground on PASS  Versioning AlgorithmsVersioning Algorithms  ImplementationImplementation  EvaluationEvaluation  ConclusionConclusion</p>
  </div>
  <div class="page">
    <p>ImplementationImplementation</p>
    <p>Implemented on Linux 2.6.23.17Implemented on Linux 2.6.23.17  Lasagna is a stackable file system derived Lasagna is a stackable file system derived</p>
    <p>from eCryptfsfrom eCryptfs  Versioning file systemVersioning file system</p>
    <p>Redo log that keeps track of file versioning Redo log that keeps track of file versioning (deltas)(deltas)</p>
    <p>Redo log for directory modifications (deltas)Redo log for directory modifications (deltas)</p>
  </div>
  <div class="page">
    <p>OutlineOutline</p>
    <p>IntroductionIntroduction  Background on PASSBackground on PASS  Versioning AlgorithmsVersioning Algorithms  ImplementationImplementation  EvaluationEvaluation  ConclusionConclusion</p>
  </div>
  <div class="page">
    <p>Evaluation GoalsEvaluation Goals</p>
    <p>What are the run-time overheads a user What are the run-time overheads a user might see?might see?</p>
    <p>What are the space overheads?What are the space overheads?  How do the algorithms compare during How do the algorithms compare during</p>
    <p>recovery?recovery?</p>
  </div>
  <div class="page">
    <p>Test platformTest platform</p>
    <p>Linux 2.6.23.17Linux 2.6.23.17  3Ghz Pentium 43Ghz Pentium 4  512MB of RAM512MB of RAM  80GB 7200 RPM IDE Disk80GB 7200 RPM IDE Disk  All results are averages of 5 runsAll results are averages of 5 runs</p>
    <p>Less than 5% Std. Dev.Less than 5% Std. Dev.</p>
  </div>
  <div class="page">
    <p>ModesModes</p>
    <p>Without causal dataWithout causal data  Ext2: Baseline (Ext2: Baseline (Lasagna was stacked on Ext2Lasagna was stacked on Ext2))  VER: plain versioning (VER: plain versioning (open-closeopen-close))</p>
    <p>With causal dataWith causal data  OC: open-close OC: open-close  CA: Cycle-AvoidanceCA: Cycle-Avoidance  GF: Graph-FinesseGF: Graph-Finesse  ALL: Version-on-every writeALL: Version-on-every write</p>
  </div>
  <div class="page">
    <p>Linux Compile: Elapsed TimeLinux Compile: Elapsed Time</p>
    <p>EXT2 VER OC CA GF ALL</p>
    <p>T im</p>
    <p>e (</p>
    <p>s )</p>
    <p>Wait</p>
    <p>User</p>
    <p>System</p>
  </div>
  <div class="page">
    <p>Linux Compile: Elapsed TimeLinux Compile: Elapsed Time</p>
    <p>EXT2 VER OC CA GF ALL</p>
    <p>T im</p>
    <p>e (</p>
    <p>s )</p>
    <p>Wait</p>
    <p>User</p>
    <p>System</p>
  </div>
  <div class="page">
    <p>Linux Compile: Elapsed TimeLinux Compile: Elapsed Time</p>
    <p>EXT2 VER OC CA GF ALL</p>
    <p>T im</p>
    <p>e (</p>
    <p>s )</p>
    <p>Wait</p>
    <p>User</p>
    <p>System</p>
  </div>
  <div class="page">
    <p>Linux Compile: Space OverheadsLinux Compile: Space Overheads</p>
    <p>EXT2 VER OC CA GF ALL</p>
    <p>S p</p>
    <p>a c e</p>
    <p>( G</p>
    <p>B )</p>
  </div>
  <div class="page">
    <p>Linux Compile: Space OverheadsLinux Compile: Space Overheads</p>
    <p>EXT2 VER OC CA GF ALL</p>
    <p>S p</p>
    <p>a c e</p>
    <p>( G</p>
    <p>B )</p>
  </div>
  <div class="page">
    <p>Linux Compile: Space OverheadsLinux Compile: Space Overheads</p>
    <p>EXT2 VER OC CA GF ALL</p>
    <p>S p</p>
    <p>a c e</p>
    <p>( G</p>
    <p>B )</p>
  </div>
  <div class="page">
    <p>Mercurial Activity: Elapsed TimeMercurial Activity: Elapsed Time</p>
    <p>EXT2 VER OC CA GF ALL</p>
    <p>T im</p>
    <p>e (s</p>
    <p>)</p>
    <p>Wait</p>
    <p>User</p>
    <p>System</p>
  </div>
  <div class="page">
    <p>Mercurial Activity: Elapsed TimeMercurial Activity: Elapsed Time</p>
    <p>EXT2 VER OC CA GF ALL</p>
    <p>T im</p>
    <p>e (s</p>
    <p>)</p>
    <p>Wait</p>
    <p>User</p>
    <p>System</p>
  </div>
  <div class="page">
    <p>Mercurial Activity: Elapsed TimeMercurial Activity: Elapsed Time</p>
    <p>EXT2 VER OC CA GF ALL</p>
    <p>T im</p>
    <p>e (s</p>
    <p>)</p>
    <p>Wait</p>
    <p>User</p>
    <p>System</p>
  </div>
  <div class="page">
    <p>Mercurial Activity: Space OverheadsMercurial Activity: Space Overheads</p>
    <p>EXT2 VER OC CA GF ALL</p>
    <p>S p</p>
    <p>a c</p>
    <p>e (</p>
    <p>G B</p>
    <p>)</p>
  </div>
  <div class="page">
    <p>Mercurial Activity: Space OverheadsMercurial Activity: Space Overheads</p>
    <p>EXT2 VER OC CA GF ALL</p>
    <p>S p</p>
    <p>a c e</p>
    <p>( G</p>
    <p>B )</p>
  </div>
  <div class="page">
    <p>Mercurial Activity: Space OverheadsMercurial Activity: Space Overheads</p>
    <p>EXT2 VER OC CA GF ALL</p>
    <p>S p</p>
    <p>a c e</p>
    <p>( G</p>
    <p>B )</p>
  </div>
  <div class="page">
    <p>Recovery BenchmarksRecovery Benchmarks</p>
    <p>How the algorithms perform in the scenario How the algorithms perform in the scenario where open close is not sufficientwhere open close is not sufficient</p>
    <p>MicrobenchmarkMicrobenchmark  Models the apache split-log scenarioModels the apache split-log scenario</p>
  </div>
  <div class="page">
    <p>Recovery MicroBenchmarkRecovery MicroBenchmark</p>
    <p>PP</p>
    <p>writewrite</p>
    <p>QQforkfork</p>
    <p>pipepipe</p>
    <p>writewritereadread</p>
    <p>readread</p>
  </div>
  <div class="page">
    <p>Recovery Microbenchmark: Space Util.Recovery Microbenchmark: Space Util.</p>
    <p>Causal Data Version Data</p>
    <p>OC 60KB 12KB</p>
    <p>CA 176KB 470.5MB</p>
    <p>GF 184KB 470.5MB</p>
    <p>ALL 76.9MB 1.97GB</p>
  </div>
  <div class="page">
    <p>Recovery TimesRecovery Times</p>
    <p>Rollback 1 Rollback 5 RollBack 9</p>
    <p>R e c o</p>
    <p>v e ry</p>
    <p>T im</p>
    <p>e s</p>
    <p>( s )</p>
    <p>CA</p>
    <p>GF</p>
  </div>
  <div class="page">
    <p>Recovery TimesRecovery Times</p>
    <p>Rollback 1 Rollback 5 RollBack 9</p>
    <p>R e</p>
    <p>c o</p>
    <p>v e</p>
    <p>ry T</p>
    <p>im e</p>
    <p>(s )</p>
    <p>CA</p>
    <p>GF</p>
    <p>ALL</p>
  </div>
  <div class="page">
    <p>ConclusionsConclusions</p>
    <p>Combining Versioning and Causality Combining Versioning and Causality enables novel functionalityenables novel functionality</p>
    <p>New algorithms for Causal VersioningNew algorithms for Causal Versioning  Cycle AvoidanceCycle Avoidance</p>
    <p>Comparable to open-closeComparable to open-close  May create more versionsMay create more versions</p>
    <p>Graph FinesseGraph Finesse  Provides greater control on versioningProvides greater control on versioning  Can be inefficient at timesCan be inefficient at times</p>
  </div>
  <div class="page">
    <p>Questions?Questions?</p>
    <p>Contact:Contact:</p>
    <p>pass@eecs.harvard.edupass@eecs.harvard.edu</p>
    <p>www.eecs.harvard.eduwww.eecs.harvard.edu/syrah/pass/syrah/pass</p>
  </div>
</Presentation>
