<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Dynamic Voting Schemes to Enhance Dynamic Voting Schemes to Enhance Evolutionary Repair in Evolutionary Repair in</p>
    <p>Reconfigurable Logic DevicesReconfigurable Logic Devices</p>
    <p>C. Milliord, C. A. Sharma, and R. F. DeMara C. Milliord, C. A. Sharma, and R. F. DeMara University of Central FloridaUniversity of Central Florida</p>
    <p>C. Milliord, C. A. Sharma, and R. F. DeMara C. Milliord, C. A. Sharma, and R. F. DeMara University of Central FloridaUniversity of Central Florida</p>
  </div>
  <div class="page">
    <p>Technical Objective: Autonomous FPGA Regeneration</p>
    <p>Redundancy</p>
    <p>increases with amount of spare capacity</p>
    <p>restricted at design-time</p>
    <p>based on time required to select spare resource</p>
    <p>determined by adequacy of spares available (?)</p>
    <p>yes</p>
    <p>Regeneration</p>
    <p>weakly-related to number</p>
    <p>recovery capacity</p>
    <p>variable at recovery-time</p>
    <p>based on time required to find suitable recovery</p>
    <p>affected by multiple characteristics (+ or -)</p>
    <p>yes</p>
    <p>Overhead from Unutilized Spares weight, size, power</p>
    <p>Granularity of Fault Coverage resolution where fault handled</p>
    <p>Fault-Resolution Latency availability via downtime required to handle fault</p>
    <p>Quality of Repair likelihood and completeness</p>
    <p>Autonomous Operation recover without outside intervention</p>
    <p>Increased availability without pre-configured spares</p>
    <p>everyday example spare tire can of fix-a-flat</p>
    <p>NASA Moon, Mars, and Beyond:</p>
    <p>Realize 10s years service life ???</p>
    <p>Reconfiguration allows new fault-handling paradigm</p>
  </div>
  <div class="page">
    <p>Problem Statement</p>
    <p>FPGAs in Space  Harsh conditions lead to faults in hardware</p>
    <p>Radiation  Extreme temperatures  Mechanical stress  Long Mission duration</p>
    <p>Experiment with several combinations of GAs and voting schemes  Population of FPGA configurations that are physically distinct,</p>
    <p>but functionally equivalent  Voting involves 3 or more configurations, with a majority output</p>
    <p>Hypothesis  The added space and computation associated with a voting</p>
    <p>scheme is justified by a quicker and more complete repair</p>
  </div>
  <div class="page">
    <p>EHW Environments</p>
    <p>Evolvable Hardware (EHW) Environments enable experimental methods to research soft computing intelligent search techniques</p>
    <p>EHW operates by repetitive reprogramming of real-world physical devices using an iterative refinement process:</p>
    <p>Genetic</p>
    <p>Algorithm</p>
    <p>Hardware in the loop</p>
    <p>or Two</p>
    <p>modes</p>
    <p>of</p>
    <p>Evolvabl</p>
    <p>e</p>
    <p>Hardwar</p>
    <p>e</p>
    <p>Extrinsic Evolution</p>
    <p>Genetic</p>
    <p>Algorithm</p>
    <p>software model Done? Build it</p>
    <p>device design-time refinement</p>
    <p>Simulation in the loop</p>
    <p>Intrinsic Evolution</p>
    <p>device run-time refinement</p>
    <p>new approach to</p>
    <p>Autonomous Repair of failed devices</p>
    <p>Stardust Satellite:  &gt;100 FPGAs onboard  hostile environment: radiation, thermal stress  How to achieve reliability to avoid mission failure???</p>
    <p>Applic ation</p>
  </div>
  <div class="page">
    <p>Genetic Algorithms (GAs)</p>
    <p>selection of</p>
    <p>parents</p>
    <p>population of candidate solutions</p>
    <p>parents</p>
    <p>offspring</p>
    <p>crossover</p>
    <p>mutation</p>
    <p>evaluate fitness</p>
    <p>of individuals</p>
    <p>replacement</p>
    <p>start</p>
    <p>Fitness function</p>
    <p>Goal reached</p>
    <p>Initial population of configurations  Functionally equivalent, Physically distinct</p>
    <p>Fitness level  Based on number of correct outputs for all possible inputs</p>
    <p>Creating a new generation  Mutation 100011101 -&gt; 101011101  Crossover 101100 &amp; 011110 -&gt; 101110</p>
  </div>
  <div class="page">
    <p>Previous Work</p>
    <p>[1] Re-routing scheme replaces faulty CLB  Time-saving method with low overhead</p>
    <p>[2] TMR fault-detection  On-line approach  High overhead and power consumption</p>
    <p>[3] On-line technique using a BIST  Limited power consumption  Spare resources</p>
    <p>[4] GA repair of integer multiplier  Voting system may not always outperform individual with the highest</p>
    <p>fitness  Initialized GA with copies of one hand-designed configuration</p>
    <p>[1] Xu, J., Si, P., Huang, W., and Lombardi, F., A novel fault tolerant approach for SRAM-based FPGAs, Proceedings of the Pacific Rim Intl Symposium, Dec. 1999, pp. 40-44.</p>
    <p>[2] Li, Y., Li, D., and Wang, Z., A new approach to detect-mitigate-correct radiation-induced faults for SRAM-based FPGAs in aerospace application, Proceedings of the IEE National Aerospace and Electronics Conference, Oct. 2000, pp. 588-594.</p>
    <p>[3] Abramovici, M., Emmert, J., and Stroud, C., Roving STARs: an integrated approach to on-line testing, diagnosis, and fault tolerance for FPGAs in adaptive computing systems, Proceedings of The Third NASA DoD Workshop, July 2001, pp. 73-92.</p>
    <p>[4] Vigander, S., Evolutionary fault repair of electronics in space applications, Dissertation, University of Sussex, Brighton, UK, 2001.</p>
  </div>
  <div class="page">
    <p>Experimental Setups</p>
    <p>C++ program that simulates FPGA circuit design/repair  Input files</p>
    <p>GA parameters  Logic function truth table</p>
    <p>Input/Output pairs  FPGA parameters  Configuration properties of</p>
    <p>perfect individuals  Simulate repair in voting</p>
    <p>experiments</p>
    <p>Output files  Configuration properties at</p>
    <p>selected generations  Data showing fitness level at</p>
    <p>each generation  Produce graphs</p>
    <p>Avnet FPGA Development Board</p>
    <p>PCI I nt er f ace</p>
    <p>Virtex-II Pro FPGA</p>
    <p>Off Chip RAM</p>
    <p>Control hosted on</p>
    <p>PC</p>
    <p>F P</p>
    <p>G A</p>
    <p>O u t</p>
    <p>p u</p>
    <p>t</p>
    <p>B i t f i l e</p>
    <p>I n p u t D a t a</p>
    <p>Loosely Coupled (LC) Virtex System  PC WorkStation running Xilinx EDK</p>
    <p>and ISE with AVNET V2Pro PCI card</p>
    <p>(SoC) version using PowerPC embedded in FPGA fabric now operational  results reported on previous environment</p>
  </div>
  <div class="page">
    <p>Experimental Inputs</p>
    <p>GA parameters  Population size  Offspring population size  Mutation rate  Tournament size (2)  Maximum number of</p>
    <p>generations  FPGA parameters</p>
    <p>Number of inputs (6)  Number of outputs (6)  Number of CLBs  Number of look-up tables</p>
    <p>(LUTs) per CLB (SW only)  Number of LUT select</p>
    <p>lines (SW only)</p>
    <p>I 1</p>
    <p>I 2</p>
    <p>I 3</p>
    <p>I 4</p>
    <p>I 5</p>
    <p>I 6</p>
    <p>O 1</p>
    <p>O 2</p>
    <p>O 3</p>
    <p>O 4</p>
    <p>O 5</p>
    <p>O 6</p>
  </div>
  <div class="page">
    <p>Experiment #1</p>
    <p>Circuit evolution  no repair  Maximize GA performance before voting</p>
    <p>(tweak parameters)  Used 200 for max number of generations  Varied the mutation rate from .001 to .097 with a step</p>
    <p>of .004  Population sizes of 15, 40, and 50  6, 9, 12, 16, and 36 for number of CLBs</p>
    <p>Evolve several perfect configurations  repeated the most successful runs for 1000</p>
    <p>generations</p>
  </div>
  <div class="page">
    <p>FPGA Genetic Representations</p>
    <p>Chromosome Goals:  Allow all possible LUT configurations  Allow all possible CLB interconnections given constraints of routing support  Disallow illegal FPGA configurations and non-coding introns (junk DNA)  Facilitate crossover operator</p>
    <p>Bitstring representation is natural choice, though may not scale well (investigating generative reps)</p>
    <p>Representation shown here is sample specific to Xilinx Virtex FPGA</p>
    <p>L U T 0 B I T S</p>
    <p>R - C L B = R E M O T E C L B</p>
    <p>R - L U TR - C L B</p>
    <p>R - L U T = R E M O T E L U T</p>
    <p>R - L U TR - C L B   L U T 0 I N P U T S</p>
    <p>R - L U TR - C L B R - L U TR - C L B   L U T 3 I N P U T S</p>
    <p>L U T 3 B I T S</p>
    <p>C L B 0 C L B 1</p>
    <p>CLB 0</p>
    <p>LUT 0</p>
    <p>LUT 1</p>
    <p>LUT 2</p>
    <p>LUT 3</p>
    <p>CLB 1 CLB n</p>
    <p>LUT</p>
    <p>LUT 1</p>
    <p>LUT 2</p>
    <p>LUT 3</p>
    <p>LUT 0</p>
    <p>LUT 1</p>
    <p>LUT 2</p>
    <p>LUT 3</p>
  </div>
  <div class="page">
    <p>Generations = 200, pop size = 50,</p>
    <p>CLBs = 9</p>
    <p>MR F MR F MR F MR F MR F</p>
    <p>Experiment #1 Results</p>
  </div>
  <div class="page">
    <p>Perfect Individuals</p>
    <p>Parameters used in evolving perfect individuals (fitness of 60)  Maximum Number of Generations: 1000  Mutation Rate: .002  Population Size: 50  Number of CLBs: 9</p>
    <p>These create a diverse initial population for TMR style voting in Experiment #2</p>
  </div>
  <div class="page">
    <p>Perfect Individuals</p>
    <p>Config. Generations AND OR NOR XOR NAND</p>
    <p>Avg. 493.6 9.4 7.8 5.4 7.2 6.2</p>
  </div>
  <div class="page">
    <p>Three-plex Experiments</p>
    <p>Six injected stuck-at faults on LUT inputs  Resulting fitness of perfect individuals: 38, 40, 47</p>
    <p>Parameters  Number of Generations: 400  Mutation Rate: .089  Population Size: 50  Number of CLBs: 9</p>
  </div>
  <div class="page">
    <p>Experiment #2</p>
    <p>Simulating repair  Implement voting schemes</p>
    <p>Injected stuck-at faults  Implemented 3-plex and 5-plex voting schemes  Chose GA/FPGA parameters according to Experiment #1  For each voting run, graphed the fitness of best fit individual vs.</p>
    <p>number of generations for voting elements and system  Repeated 3-plex experiment with a single element (no voting) for</p>
    <p>GA #1 Configuration</p>
    <p>FPGA Input Data</p>
    <p>Voter</p>
    <p>FPGA Output Data</p>
    <p>Output OutputOutput</p>
    <p>GA #2 Configuration</p>
    <p>GA #3 Configuration</p>
  </div>
  <div class="page">
    <p>Partial Repair: Max Fitness = 58 at generation 68</p>
    <p>Three-plex Voting Results</p>
  </div>
  <div class="page">
    <p>Three-plex Voting Results</p>
    <p>Complete Repair achieved at generation 302</p>
  </div>
  <div class="page">
    <p>Three-plex Voting Results</p>
    <p>Complete Repair at generation 33</p>
  </div>
  <div class="page">
    <p>Three-plex Voting Results</p>
    <p>Perfect fitness is temporarily reached at generation 17</p>
  </div>
  <div class="page">
    <p>Three-plex Voting Summary</p>
    <p>Rank Highest Voting Fitness</p>
    <p>Reached</p>
    <p>Earliest Generation of Highest</p>
    <p>Fitness</p>
    <p>GA #1 (voting</p>
    <p>fitness/final fitness)</p>
    <p>GA #2 (voting</p>
    <p>fitness/final fitness)</p>
    <p>GA #3 (voting</p>
    <p>fitness/final fitness)</p>
    <p>Final Vote Fitness</p>
    <p>(Generation 400)</p>
  </div>
  <div class="page">
    <p>Compare: Single GA Run</p>
    <p>1200 generations  Total GA computation equivalent to a 3-plex run for</p>
    <p>3 runs  Max fitness of 56 at 934 generations  Max fitness of 56 at 852 generations  Max fitness of 57 at 274 generations</p>
    <p>N-plex Voting advantageous  Improved the likelihood of obtaining a complete</p>
    <p>repair significantly with fewer total number of circuit evaluations</p>
    <p>n x gv &lt;&lt; go for n-plex voting with gv voting generations vs. go</p>
    <p>evolutionary generations without voting</p>
  </div>
  <div class="page">
    <p>Experiment #3: 5-plex</p>
    <p>Six injected stuck-at faults on LUT inputs  Resulting fitness of perfect individuals: 38, 40, 47</p>
    <p>Parameters  Number of Generations: 300  Mutation Rate: .089  Population Size: 50  Number of CLBs: 9</p>
  </div>
  <div class="page">
    <p>Five-plex Voting Results</p>
    <p>Complete Repair at generation 48</p>
  </div>
  <div class="page">
    <p>Five-plex Voting Results</p>
    <p>Complete Repair fitness at generation 34</p>
  </div>
  <div class="page">
    <p>Five-plex Voting Results</p>
    <p>Perfect fitness at generation 2</p>
  </div>
  <div class="page">
    <p>Five-plex Voting Summary</p>
    <p>Rank Highest Voting Fitness</p>
    <p>Reached</p>
    <p>Earliest Generation of Highest</p>
    <p>Fitness</p>
    <p>GA #1 (voting</p>
    <p>fitness/final fitness)</p>
    <p>GA #2 (voting</p>
    <p>fitness/final fitness)</p>
    <p>GA #3 (voting</p>
    <p>fitness/final fitness)</p>
    <p>GA #4 (voting</p>
    <p>fitness/final fitness)</p>
    <p>GA #5 (voting</p>
    <p>fitness/final fitness)</p>
    <p>Final Vote Fitness</p>
    <p>(Generation 300)</p>
  </div>
  <div class="page">
    <p>3-plex scheme  7 out of 10 runs reached perfect fitness  Average of 113.86 generations to do so  5 out of 10 runs exhibited perfect fitness upon</p>
    <p>completion (400 generations)</p>
    <p>5-plex scheme  9 out of 10 reached perfect fitness  Average of 48.33 generations needed  7 out of 10 exhibited perfect fitness at completion</p>
    <p>(300 generations)</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Autonomous FPGA Repair Strategy combining dynamic redundancy with online evolution</p>
    <p>TMR Style Voting beneficial in presence of partial refurbishment  Complete repair can be quickly obtained with three/five</p>
    <p>imperfectly repaired individuals  Improvement of fitness in an individual GA can</p>
    <p>outperform voting fitness  Stabilization of a complete repair is more</p>
    <p>important than how quickly it is achieved  In all six runs where a perfect fitness was obtained after 50</p>
    <p>generations, the fitness was maintained  Only 5 of 10 runs which obtained a perfect fitness before 50</p>
    <p>generations maintained that fitness for remainder of run</p>
  </div>
  <div class="page">
    <p>Development Board to Self-Contained FPGA</p>
    <p>Year 1 Year 3Year 2</p>
    <p>CRR on a Chip (Xilinx Virtex-II Pro)</p>
    <p>Control via on-chip</p>
    <p>Power PC</p>
    <p>Reconfig</p>
    <p>C o n f i g</p>
    <p>D a t a</p>
    <p>Configurations in On Chip RAM Blocks</p>
    <p>Functional CLBs</p>
    <p>ICAP</p>
    <p>Bit file</p>
    <p>D a t a</p>
    <p>O u t p u t</p>
    <p>R e q u e s t</p>
    <p>Avnet FPGA Development Board</p>
    <p>PCI Interface</p>
    <p>Virtex-II Pro FPGA</p>
    <p>Off Chip RAM</p>
    <p>Control hosted on</p>
    <p>PC O u t p u t</p>
    <p>B i t f i l e</p>
    <p>I n p u t D a t a</p>
    <p>CRR on a Chip (Xilinx Virtex-II Pro)</p>
    <p>Device Fault</p>
    <p>Qualitative Analysis of CRR modelQualitative Analysis of CRR model  Number of iterations and completeness of regeneration repair  Percentage of time the device remains online despite physical resource</p>
    <p>fault (availability) Hardware Resource ManagementHardware Resource Management</p>
    <p>Optimization of hardware profile for Xilinx Virtex II Pro Field Testing on SRAM-based FPGA in a Cubesat missionField Testing on SRAM-based FPGA in a Cubesat mission</p>
  </div>
  <div class="page">
    <p>For further info  EH Website http://cal.ucf.edu</p>
  </div>
  <div class="page">
    <p>Backup Slides</p>
    <p>On following pages</p>
  </div>
  <div class="page">
    <p>Fault Recovery Characteristics of Selected ApproachesFault Recovery Characteristics of Selected Approaches</p>
    <p>Previous Work on Fault Recovery</p>
    <p>Normalized Power Consumption (Energy per Operation):</p>
    <p>n-plex solution using n redundant devices</p>
    <p>Reconfiguration cost r</p>
    <p>Gate-Level redundancy g</p>
    <p>Updated with scan rate s</p>
    <p>on c CLBs</p>
  </div>
  <div class="page">
    <p>Previous Work - Tool LevelPrevious Work - Tool Level</p>
    <p>Approach FPGA</p>
    <p>Supported On-chip System</p>
    <p>Bit Stream Reuse</p>
    <p>System Coupling Degree</p>
    <p>Potential Limitations</p>
    <p>Moraes, Mesquita,</p>
    <p>Palma, Moller</p>
    <p>Virtex XCV300 devices</p>
    <p>No N Loose Lack of Area Relocation Capability</p>
    <p>Raghavan, Sutton</p>
    <p>Xilinx Virtex</p>
    <p>devices No N Loose</p>
    <p>Cumbersome CAD flow</p>
    <p>Blodget, McMillan</p>
    <p>Virtex II devices</p>
    <p>Partial Y Medium</p>
    <p>Limited hardware speed and capacity. Lack of</p>
    <p>information for bit stream</p>
    <p>reuse</p>
  </div>
</Presentation>
