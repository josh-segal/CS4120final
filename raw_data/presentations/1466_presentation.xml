<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Using Prt  Voter in Victorian State Elections</p>
    <p>EVT August 2012</p>
    <p>Craig Burton1 Chris Culnane2 James Heather2 Thea Peacock3 Peter Y. A. Ryan3 Steve Schneider2</p>
    <p>Sriram Srinivasan2 Vanessa Teague4 Roland Wen5 Zhe Xia2</p>
  </div>
  <div class="page">
    <p>Structure of talk</p>
    <p>Voting in the State of Victoria, Australia  VECs motivation for e-voting  Introducing the Prt a Voter voter-verifiable system  Adapting to the VEC requirements: practical challenges  Conclusion</p>
  </div>
  <div class="page">
    <p>Full preferential voting: number the candidates in order of preference.</p>
    <p>Legislative Assembly (Lower House)</p>
    <p>http://www.vec.vic.gov.au/vote/vote-howto-state.html</p>
  </div>
  <div class="page">
    <p>Legislative Council (Upper House)</p>
    <p>http://www.vec.vic.gov.au/vote/vote-howto-state.html</p>
    <p>ATL: select exactly one choice; or  BTL: number the candidates in order of preference</p>
  </div>
  <div class="page">
    <p>VECs motivation for electronic voting</p>
    <p>VEC was an early adopter of e-voting (2006)  flexibility: for remote (but supervised) voting including</p>
    <p>overseas, out of state, out of district</p>
    <p>accessibility: supports voters with disabilities. Electronic voting machines also handle foreign languages. Complexity of ballots means need for help to avoid malformed ballots  but human help loses privacy</p>
    <p>usability: to reduce (accidental) informal ballots  BUT: proprietary system not open to inspection; lack of</p>
    <p>verifiability; issues with integration with VEC processes</p>
    <p>WANT e-voting but recognise the need for verifiability</p>
  </div>
  <div class="page">
    <p>Context of this project</p>
    <p>Australian elections: solution needs to be able to handle STV and preferential voting. Prt  Voter judged to be the most appropriate voter-verifiable system able to support this.</p>
    <p>usability vs security: what can you ask and expect voters to do?  scalability: issues to be resolved for us to scale up to a state election.  pragmatics: scanning (including OCR) and printing.  integrity and trust: the electorate must have confidence in the</p>
    <p>solution.</p>
  </div>
  <div class="page">
    <p>Prt  Voter</p>
    <p>A voter-verifiable voting system  Verifiability: voters, independent checkers can verify stages</p>
    <p>of the election</p>
    <p>Integrity: evidence provided that the result is correct  Privacy: have to trust some elements of the system, but aim</p>
    <p>to minimize this</p>
  </div>
  <div class="page">
    <p>Place X or preferences against desired candidate. (candidates in random order)</p>
    <p>Separate left hand side.</p>
    <p>Destroy left hand side.</p>
    <p>Cast (scan) vote.</p>
    <p>Take receipt home.</p>
    <p>#1726</p>
    <p>Voting with Prt  Voter</p>
  </div>
  <div class="page">
    <p>Voter receipts prevent election officials from altering or removing votes.</p>
    <p>Voters confirm inclusion of their vote</p>
    <p>Public bulletin board</p>
    <p>of votes cast.</p>
    <p>Voters receipt</p>
    <p>#1726</p>
    <p>Publish the ballots cast</p>
    <p>#1665</p>
    <p>#0809</p>
    <p>#2197</p>
    <p>#1726</p>
  </div>
  <div class="page">
    <p>Tallying the votes</p>
    <p>Public bulletin board of votes cast.</p>
    <p>#1665</p>
    <p>#0809</p>
    <p>#2197</p>
    <p>#1726</p>
  </div>
  <div class="page">
    <p>Tallying the votes</p>
    <p>Public bulletin board of votes cast.</p>
    <p>Public list of votes, shuffled and decrypted.</p>
    <p>Alice 4 Bob 5 Crystal 1 Diane 3 Elaine 2</p>
    <p>Votes need to be decrypted to be tallied</p>
    <p>etc</p>
    <p>etc</p>
    <p>etc 5</p>
    <p>#1665</p>
    <p>#0809</p>
    <p>#2197</p>
    <p>#1726</p>
  </div>
  <div class="page">
    <p>Tallying the votes</p>
    <p>Public bulletin board of votes cast.</p>
    <p>Public list of votes, shuffled and decrypted.</p>
    <p>Alice 4 Bob 5 Crystal 1 Diane 3 Elaine 2</p>
    <p>etc</p>
    <p>etc</p>
    <p>etc 5</p>
    <p>#1665</p>
    <p>#0809</p>
    <p>#2197</p>
    <p>#1726</p>
    <p>The links are not published (receipts are not linked to votes)</p>
  </div>
  <div class="page">
    <p>Tallying</p>
    <p>When the votes are cast:</p>
    <p>Publish the votes cast (newspaper, or web bulletin board)</p>
    <p>these should match the receipts, and voters can check.</p>
    <p>Mix up the votes (see next slide), so resulting votes are not linked to input votes (which correspond to receipts):</p>
    <p>Decrypt the mixed votes</p>
    <p>Publish the resulting votes.</p>
    <p>Count the votes.</p>
  </div>
  <div class="page">
    <p>Server 1 Server 2 Server 3 Server 4</p>
    <p>Re-encryption mixnets with proofs (Chaum; Park et al.; Sako and Kilian )</p>
    <p>Re-encryption mixing: {c,r1}  {c,r2} are different encryptions of c</p>
  </div>
  <div class="page">
    <p>Tellers provide `proofs of shuffles: that the set of encrypted values is not changed from one stage to the next.</p>
    <p>These proofs can be independently checked.</p>
    <p>Server 1 Server 2 Server 3 Server 4</p>
    <p>proof1 proof 2 proof 3 proof 4</p>
    <p>Re-encryption mixnets with proofs (Chaum; Park et al.; Sako and Kilian )</p>
  </div>
  <div class="page">
    <p>Voters Encrypted</p>
    <p>Votes Encrypted</p>
    <p>Votes Results</p>
    <p>Ballot Casting</p>
    <p>Ballot Shuffling</p>
    <p>by mixnet</p>
    <p>Decrypt and</p>
    <p>Count</p>
    <p>Verify by receipts</p>
    <p>Verify by checking</p>
    <p>proofs</p>
    <p>Verify by public</p>
    <p>information</p>
    <p>End-to-end verifiability</p>
    <p>End-to-end Verifiability for Prt  Voter</p>
  </div>
  <div class="page">
    <p>Practical Challenges</p>
  </div>
  <div class="page">
    <p>Practical challenges</p>
    <p>In practice in Victorian State elections there are typically around 35+ BTL candidates</p>
    <p>Prt  Voter requires those candidates to be in a random order on each ballot</p>
    <p>Significant cryptography required to create the ballot forms  Presenting 35+ spaces for voters to write preferences in a</p>
    <p>single column will require a long ballot form.</p>
    <p>Difficult for voters to find their choices by hand; issues around the order candidates are presented to voters</p>
    <p>Accessibility issues are compounded</p>
  </div>
  <div class="page">
    <p>Solution: Use an offline Electronic Ballot Marker to assist the voter to complete the ballot.</p>
    <p>It will capture the voters preferences in a user-friendly way, and will print the preferences on the ballot form.</p>
    <p>Presents the candidates in the given fixed order  Captures the voters preferences via touch screen  Prints the preferences onto the ballot form in the</p>
    <p>appropriate permutation</p>
    <p>Voter confirms selection before scanning.  Alerts voter if ballot not well formed  Can have accessibility plug-ins (vision/mobility impaired)</p>
    <p>and offer different languages.</p>
    <p>NB: does lose the attractive feature of Prt  Voter that no device learns the vote. Seems unavoidable.</p>
    <p>Adapting Prt  Voter: Front end</p>
  </div>
  <div class="page">
    <p>Voters</p>
    <p>Encrypted Votes</p>
    <p>Encrypted Votes</p>
    <p>Results Ballot</p>
    <p>Casting</p>
    <p>Ballot Shuffling</p>
    <p>by mixnet</p>
    <p>Decrypt and</p>
    <p>Count</p>
    <p>Verify by receipts</p>
    <p>Verify by checking</p>
    <p>proofs</p>
    <p>Verify by public</p>
    <p>information</p>
    <p>End-to-end verifiability</p>
    <p>End-to-end Verifiability for Prt  Voter with EBM</p>
    <p>Printed Vote</p>
    <p>Construct Ballot</p>
    <p>with EBM</p>
    <p>Verify by</p>
    <p>checking EMB</p>
    <p>printing</p>
  </div>
  <div class="page">
    <p>VEC Ballot Form</p>
  </div>
  <div class="page">
    <p>Serial number: 1</p>
    <p>Serial No. 1 (Donna, Alice, Charlie, Bob), (Lib Dem, Labour, Green),</p>
    <p>(Steve, Vanessa, Craig, Peter Chris, Thea, James)</p>
    <p>Ballot Form  front side</p>
    <p>No. 1 Legislative Assembly</p>
    <p>( ) Donna ( ) Alice ( ) Charlie ( ) Bob</p>
    <p>Legislative Council Above the Line (ATL)</p>
    <p>[ ] Lib Dem [ ] Labour [ ] Green</p>
    <p>Ballot form gives the permutation</p>
    <p>Candidate QR</p>
    <p>code</p>
    <p>Onion QR</p>
    <p>code</p>
  </div>
  <div class="page">
    <p>Serial number: 1 Ballot Form  Back side</p>
    <p>No. 1 Legislative Council Below the Line (BTL)</p>
    <p>( ) Steve</p>
    <p>( ) Vanessa</p>
    <p>( ) Craig</p>
    <p>( ) Peter</p>
    <p>( ) Chris</p>
    <p>( ) Thea</p>
    <p>( ) James</p>
    <p>Ballot form gives the permutation</p>
  </div>
  <div class="page">
    <p>A VEC ballot example</p>
    <p>The front side The back side</p>
  </div>
  <div class="page">
    <p>Victorian Voter Experience</p>
  </div>
  <div class="page">
    <p>Language: English [X] French [ ] Chinese [ ]</p>
    <p>Training Yes [X] No [ ]</p>
  </div>
  <div class="page">
    <p>Candidate</p>
    <p>QR code</p>
  </div>
  <div class="page">
    <p>LA: Alice: 4 Bob: 1 Charlie: 3 Donna: 2</p>
    <p>LC-ATL: Green [ ] Labour [X] Lib Dem [ ]</p>
  </div>
  <div class="page">
    <p>LC-BTL: Chris: 6 Craig: 1 James: 7 Peter: 2 Steve: 3 Thea: 4 Vanessa: 5</p>
  </div>
  <div class="page">
    <p>( ) Donna</p>
    <p>( ) Alice</p>
    <p>( ) Charlie</p>
    <p>( ) Bob</p>
    <p>Legislative Council Above the Line (ATL)</p>
    <p>[ ] Lib Dem</p>
    <p>[ ] Labour</p>
    <p>[ ] Green</p>
    <p>Clipped corner</p>
    <p>LA: Alice: (4) Bob: ( ) Charlie: ( ) Donna: ( )</p>
    <p>You have voted 4 for Alice. Now please vote for</p>
    <p>Bob.</p>
  </div>
  <div class="page">
    <p>Serial number: 1 Ballot form</p>
    <p>No. 1 Legislative Assembly</p>
    <p>(2) Donna</p>
    <p>(4) Alice</p>
    <p>(3) Charlie</p>
    <p>(1) Bob</p>
    <p>Legislative Council Above the Line (ATL)</p>
    <p>[ ] Lib Dem</p>
    <p>[X] Labour</p>
    <p>[ ] Green</p>
    <p>No. 1 Legislative Council Below the Line (BTL)</p>
    <p>( ) Steve</p>
    <p>( ) Vanessa</p>
    <p>( ) Craig</p>
    <p>( ) Peter</p>
    <p>( ) Chris</p>
    <p>( ) Thea</p>
    <p>( ) James</p>
    <p>Front Side Back Side (empty)</p>
  </div>
  <div class="page">
    <p>Serial number: 1 Ballot form</p>
    <p>Front Side (ATL empty) Back Side</p>
    <p>No. 1 Legislative Assembly</p>
    <p>(2) Donna</p>
    <p>(4) Alice</p>
    <p>(3) Charlie</p>
    <p>(1) Bob</p>
    <p>Legislative Council Above the Line (ATL)</p>
    <p>[ ] Lib Dem</p>
    <p>[ ] Labour</p>
    <p>[ ] Green</p>
    <p>No. 1 Legislative Council Below the Line (BTL)</p>
    <p>(3) Steve</p>
    <p>(5) Vanessa</p>
    <p>(1) Craig</p>
    <p>(2) Peter</p>
    <p>(6) Chris</p>
    <p>(4) Thea</p>
    <p>(7) James</p>
  </div>
  <div class="page">
    <p>Alice</p>
    <p>Bob</p>
    <p>Charlie</p>
    <p>Donna</p>
    <p>Legislative Council Above the Line (ATL)</p>
    <p>Lib Dem</p>
    <p>Labour</p>
    <p>Green</p>
    <p>Front side: LA + LC-ATL candidates Back side: LC-BTL candidates</p>
  </div>
  <div class="page">
    <p>Bulletin Board</p>
    <p>No.1 (2) ( ) (4) ( ) (3) ( ) (1) ( ) [ ] ( ) [X] ( ) [ ] ( )</p>
    <p>No.1: {2,4,3,1}, [2], {}</p>
    <p>No. 1</p>
    <p>(2)</p>
    <p>(4)</p>
    <p>(3)</p>
    <p>(1)</p>
    <p>[ ]</p>
    <p>[X]</p>
    <p>[ ]</p>
    <p>No. 1</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>Front Back</p>
    <p>No. 1</p>
    <p>(2)</p>
    <p>(4)</p>
    <p>(3)</p>
    <p>(1)</p>
    <p>[ ]</p>
    <p>[X]</p>
    <p>[ ]</p>
    <p>No. 1</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>Front Back</p>
    <p>Submit to WBB</p>
    <p>Scan</p>
  </div>
  <div class="page">
    <p>Bulletin Board</p>
    <p>No.1 (2) (3) (4) (5) (3) (1) (1) (2) [ ] (6) [ ] (4) [ ] (7)</p>
    <p>No.1: {2,4,3,1}, [], {3,5,1,2,6,4,7}</p>
    <p>No. 1</p>
    <p>(2)</p>
    <p>(4)</p>
    <p>(3)</p>
    <p>(1)</p>
    <p>[ ]</p>
    <p>[ ]</p>
    <p>[ ]</p>
    <p>No. 1</p>
    <p>(3)</p>
    <p>(5)</p>
    <p>(1)</p>
    <p>(2)</p>
    <p>(6)</p>
    <p>(4)</p>
    <p>(7)</p>
    <p>Front Back</p>
    <p>No. 1</p>
    <p>(2)</p>
    <p>(4)</p>
    <p>(3)</p>
    <p>(1)</p>
    <p>[ ]</p>
    <p>[ ]</p>
    <p>[ ]</p>
    <p>No. 1</p>
    <p>(3)</p>
    <p>(5)</p>
    <p>(1)</p>
    <p>(2)</p>
    <p>(6)</p>
    <p>(4)</p>
    <p>(7)</p>
    <p>Front Back</p>
    <p>Submit to WBB</p>
    <p>Scan</p>
  </div>
  <div class="page">
    <p>Bulletin Board</p>
    <p>{No.1: {2,4,3,1}, [2], {}}_SK(WBB)</p>
    <p>No.1 (2) ( ) (4) ( ) (3) ( ) (1) ( ) [ ] ( ) [X] ( ) [ ] ( )</p>
    <p>over print</p>
    <p>Overprinted</p>
    <p>Signature</p>
    <p>No. 1</p>
    <p>(2)</p>
    <p>(4)</p>
    <p>(3)</p>
    <p>(1)</p>
    <p>[ ]</p>
    <p>[X]</p>
    <p>[ ]</p>
    <p>No. 1</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
  </div>
  <div class="page">
    <p>Bulletin Board</p>
    <p>{No.1: {2,4,3,1}, [], {3,5,1,2,6,4,7}}_SK(WBB)</p>
    <p>over print</p>
    <p>Overprinted</p>
    <p>Signature</p>
    <p>No. 1</p>
    <p>(2)</p>
    <p>(4)</p>
    <p>(3)</p>
    <p>(1)</p>
    <p>[ ]</p>
    <p>[ ]</p>
    <p>[ ]</p>
    <p>No. 1</p>
    <p>(3)</p>
    <p>(5)</p>
    <p>(1)</p>
    <p>(2)</p>
    <p>(6)</p>
    <p>(4)</p>
    <p>(7)</p>
    <p>No.1 (2) (3) (4) (5) (3) (1) (1) (2) [ ] (6) [ ] (4) [ ] (7)</p>
  </div>
  <div class="page">
    <p>No. 1</p>
    <p>(2)</p>
    <p>(4)</p>
    <p>(3)</p>
    <p>(1)</p>
    <p>[ ]</p>
    <p>[X]</p>
    <p>[ ]</p>
    <p>No. 1</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>( )</p>
    <p>No.1</p>
    <p>(2) ( ) (4) ( ) (3) ( ) (1) ( ) [ ] ( ) [X] ( ) [ ] ( )</p>
    <p>receipt</p>
  </div>
  <div class="page">
    <p>(2) (4) (3) (1) [ ] [ ] [ ]</p>
    <p>No.1</p>
    <p>(3) (5) (1) (2) (6) (4) (7)</p>
    <p>No.1</p>
    <p>(2) (3) (4) (5) (3) (1) (1) (2) [ ] (6) [ ] (4) [ ] (7)</p>
    <p>receipt</p>
    <p>No. 1</p>
    <p>(2)</p>
    <p>(4)</p>
    <p>(3)</p>
    <p>(1)</p>
    <p>[ ]</p>
    <p>[ ]</p>
    <p>[ ]</p>
    <p>No. 1</p>
    <p>(3)</p>
    <p>(5)</p>
    <p>(1)</p>
    <p>(2)</p>
    <p>(6)</p>
    <p>(4)</p>
    <p>(7)</p>
  </div>
  <div class="page">
    <p>Adapting Prt  Voter: Processing the votes</p>
    <p>We use Douglas Wikstrms implementation of a reencryption mixnet: the Verificatum system.</p>
    <p>This provides shuffles, re-encryptions and proofs.  It also provides the final decryption step following the</p>
    <p>mix, to produce a list of plaintext votes.</p>
    <p>Given the large numbers of candidates, each preference list is compressed into a small number of ciphertexts to optimise the mixing process, and expanded at the other end. These steps are also verifiable. [Technical details in the paper]</p>
  </div>
  <div class="page">
    <p>Implementation Timings</p>
    <p>Processing stage Time taken Approximation</p>
    <p>Cipher generation 39hrs 34mins 1.4 seconds per ballot</p>
    <p>Mixing ATL 2hrs 0mins 12 ballots per second</p>
    <p>Decryption ATL 12mins 9s 120 ballots per second</p>
    <p>Mixing BTL 1hr 33mins 2 ballots per second</p>
    <p>Decryption BTL 9mins 27sec 18 ballots per second</p>
    <p>Reconstructing BTL 57mins 10sec 3 ballots per second</p>
  </div>
  <div class="page">
    <p>Server 1 Server 2 Server 3</p>
    <p>Distributed Ballot Generation</p>
    <p>B B</p>
    <p>A A</p>
    <p>C C</p>
    <p>D D</p>
    <p>Servers inject randomness, and re-encrypt with a different key for the two parts:</p>
    <p>(PKp{c,r1}, PKm{c,r1})  (PKp{c,r2}, PKm{c,r2})</p>
  </div>
  <div class="page">
    <p>Server 1 Server 2 Server 3</p>
    <p>Distributed Ballot Generation</p>
    <p>B B</p>
    <p>A A</p>
    <p>C C</p>
    <p>D D</p>
    <p>Servers publish proofs of shuffle</p>
    <p>PKm and PKp are threshold keys</p>
    <p>proof 1 proof 2 proof 3</p>
    <p>Provably same candidate list encrypted with PKp</p>
    <p>Candidate list encrypted with PKm</p>
  </div>
  <div class="page">
    <p>Print on Demand: step 1</p>
    <p>Ballot printer</p>
    <p>Bulletin Board</p>
    <p>&lt; PKp(b_i) &gt;</p>
    <p>Printer generates a blinding factor b_i for each candidate.</p>
    <p>Encrypts them with PKp  Sends them to the ballot servers as a ballot request, with a</p>
    <p>proof of knowledge (ZKP)</p>
    <p>&lt; ZKP(b_i) &gt;</p>
  </div>
  <div class="page">
    <p>Print on Demand: step 2</p>
    <p>Bulletin Board</p>
    <p>Ballot server selects an unused ballot: #N  Combines the blinding factors with the encrypted</p>
    <p>names</p>
    <p>(Threshold) decrypts the blinded names</p>
    <p>PKp(c_1)</p>
    <p>PKp(c_2)</p>
    <p>PKp(c_3)</p>
    <p>PKp(c_4)</p>
    <p>Ballot #N</p>
  </div>
  <div class="page">
    <p>Print on Demand: step 2</p>
    <p>Bulletin Board</p>
    <p>Ballot server selects an unused ballot: #N  Combines the blinding factors with the encrypted</p>
    <p>names</p>
    <p>(Threshold) decrypts the blinded names</p>
    <p>PKp(c_1+b_1)</p>
    <p>PKp(c_2+b_2)</p>
    <p>PKp(c_3+b_3)</p>
    <p>PKp(c_4+b_4)</p>
    <p>Ballot #N</p>
  </div>
  <div class="page">
    <p>Print on Demand: step 2</p>
    <p>Bulletin Board</p>
    <p>Ballot server selects an unused ballot: #N  Combines the blinding factors with the encrypted</p>
    <p>names</p>
    <p>(Threshold) decrypts the blinded names</p>
    <p>c_1+b_1</p>
    <p>c_2+b_2</p>
    <p>c_3+b_3</p>
    <p>c_4+b_4</p>
    <p>Ballot #N</p>
  </div>
  <div class="page">
    <p>Print on Demand: step 3</p>
    <p>Bulletin Board</p>
    <p>&lt; c_i + b_i &gt;</p>
    <p>Blinded candidate names returned to the printer</p>
    <p>Ballot printer</p>
  </div>
  <div class="page">
    <p>Print on Demand: step 4</p>
    <p>Ballot #N</p>
    <p>c_1+b_1</p>
    <p>c_2+b_2</p>
    <p>c_3+b_3</p>
    <p>c_4+b_4</p>
    <p>Ballot printer</p>
    <p>Printer removes blindings on names  Printer can then print ballot form</p>
  </div>
  <div class="page">
    <p>Print on Demand: step 4</p>
    <p>Ballot #N</p>
    <p>Ballot printer</p>
    <p>Printer removes blindings on names  Printer can then print ballot form</p>
    <p>c_1</p>
    <p>c_2</p>
    <p>c_3</p>
    <p>c_4</p>
  </div>
  <div class="page">
    <p>Print on Demand: step 4</p>
    <p>Ballot printer</p>
    <p>Printer removes blindings on names  Printer can then print ballot form</p>
    <p>c_1</p>
    <p>c_2</p>
    <p>c_3</p>
    <p>c_4</p>
    <p>Ballot #N</p>
    <p>#N</p>
    <p>c_1</p>
    <p>c_2</p>
    <p>c_3</p>
    <p>c_4</p>
  </div>
  <div class="page">
    <p>Auditing printed ballots</p>
    <p>If a printed ballot is challenged...  ... the ballot servers can threshold decrypt the blinding</p>
    <p>factors PKp(b_i) provided by the printer, ... which enables the c_i + b_i values to be unblinded and checked against the printed ballot</p>
    <p>... or can threshold decrypt the candidate names Kp(c_i) directly, and check against the printed ballot</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Usability, accessibility, and remote voting, while retaining assurance in the system, are key drivers.</p>
    <p>Prt  Voter can be customised to the VEC requirements. The main new design feature is the EBM, which introduces fresh challenges. Scaling up also raises issues with processing the votes</p>
    <p>A demonstrator is currently being implemented for evaluation, with a view to VEC trialling it next year</p>
    <p>The system can handle the scale of Australian state elections  Verifiability comes from the ability to check the information</p>
    <p>published by the system. The code is also open to inspection, though its the output of the code that is verified</p>
  </div>
</Presentation>
