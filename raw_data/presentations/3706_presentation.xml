<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Advanced Wireless Fuzzing to Exploit New Bluetooth Escalation Targets</p>
    <p>Jan Ruge, Jiska Classen, Francesco Gringoli, Matthias Hollick</p>
    <p>git://github.com/seemoo-lab/frankenstein</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>o Radio protocols have huge attack surface</p>
    <p>o We focus on Bluetooth firmware</p>
    <p>o Large unauthenticated attack surface</p>
    <p>o Devices are connectable by default</p>
    <p>o Lower protocols terminated in firmware</p>
  </div>
  <div class="page">
    <p>Why Emulation ?</p>
    <p>o Reverse engineering is hard</p>
    <p>o Embedded device debugging is hard</p>
    <p>o Static analysis does not give context</p>
    <p>o ~300 functions with *RX*</p>
    <p>o How are those invoked?</p>
    <p>o Narrow down relevant code</p>
  </div>
  <div class="page">
    <p>Firmware Emulation - Modifications</p>
    <p>o Added debug output</p>
    <p>o Supports</p>
    <p>o Threading</p>
    <p>o HCI injection/extraction</p>
    <p>o Raw wireless frames injection/extraction</p>
    <p>o Attach emulator as Bluetooth device</p>
    <p>o Read wireless frames from stdin</p>
  </div>
  <div class="page">
    <p>Firmware Emulation - Concept</p>
    <p>o Hooking by rewriting function prologue</p>
    <p>o Extract clean firmware state o Memory</p>
    <p>o Memory Mapped I/O</p>
    <p>o Registers</p>
    <p>o Restore memory layout</p>
    <p>o Restore registers</p>
    <p>o Go?</p>
    <p>xmit_state:</p>
    <p>push {r0-r12,lr}</p>
    <p>ldr r0, =saved_regs</p>
    <p>str sp, [r0]</p>
    <p>bl xmit_memory</p>
    <p>cont:</p>
    <p>ldr r0, =saved_regs</p>
    <p>ldr sp, [r0]</p>
    <p>pop {r0-r12,lr}</p>
    <p>bx lr</p>
  </div>
  <div class="page">
    <p>Firmware Emulation - Concept</p>
    <p>o Link C code against firmware</p>
    <p>o Assemble to ELF file</p>
    <p>o Execute using qemu-arm</p>
  </div>
  <div class="page">
    <p>Oops, thats not my bug</p>
  </div>
  <div class="page">
    <p>CVE-2019-11516 (Broadcom)</p>
    <p>o Heap corruption during device inquiry</p>
    <p>o Affects devices ~2010 - 2018</p>
    <p>o Exploited for chip RCE</p>
    <p>o Used by: Samsung, Apple,</p>
    <p>o Bug located in Link Manager and BCS</p>
  </div>
  <div class="page">
    <p>Outcome &amp; Conclusion</p>
    <p>o Large scale firmware emulation possible</p>
    <p>o Advantages</p>
    <p>o Same layer of abstraction  More readable code</p>
    <p>o No API calls  More performance</p>
    <p>o Same code base for patching device*</p>
    <p>o Disadvantages</p>
    <p>o Process remains (less) tedious</p>
    <p>o git://github.com/seemoo-lab/frankenstein</p>
    <p>* and find Android 0-Click RCE by accident</p>
  </div>
</Presentation>
