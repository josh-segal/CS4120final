<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Slide title 70 pt</p>
    <p>CAPITALS</p>
    <p>Slide subtitle minimum 30 pt</p>
    <p>The Click2NetFPGA Toolchain</p>
    <p>Teemu Rinta-aho, Mika Karlstedt, Madhav P. Desai USENIX ATC 12, Boston, MA, 13th of June, 2012</p>
  </div>
  <div class="page">
    <p>Slide title 44 pt</p>
    <p>Text and bullet level 1 minimum 24 pt</p>
    <p>Bullets level 2-5 minimum 20 pt</p>
    <p>Characters for Embedded font: !&quot;#$%&amp;'()*+,-./0123456789:;&lt;=&gt;? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdef ghijklmnopqrstuvwxyz{|}~        fifl</p>
    <p>Do not add objects or text in the footer area</p>
    <p>The Click2NetFPGA Toolchain | 2012-6-13 | Page 2</p>
    <p>We have explored the possibilities of High Level Synthesis (HLS) in the packet processing domain</p>
    <p>HLS is transforming software into hardware  Using a number of open source components, some new code (and some glue), we have created a prototype toolchain that allows</p>
    <p>Defining Click configurations using existing and new elements,  Writing new Click elements in C++, and  Compiling them to hardware, to be run on NetFPGA</p>
    <p>The main components are Click, NetFPGA, LLVM, Click2LLVM and AHIR</p>
    <p>Click2NetFPGA</p>
  </div>
  <div class="page">
    <p>Slide title 44 pt</p>
    <p>Text and bullet level 1 minimum 24 pt</p>
    <p>Bullets level 2-5 minimum 20 pt</p>
    <p>Characters for Embedded font: !&quot;#$%&amp;'()*+,-./0123456789:;&lt;=&gt;? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdef ghijklmnopqrstuvwxyz{|}~        fifl</p>
    <p>Do not add objects or text in the footer area</p>
    <p>The Click2NetFPGA Toolchain | 2012-6-13 | Page 3</p>
    <p>There are several academic and commercial HLS tools available: Trident, LegUp, AutoESL, Catapult C, C2S, ...</p>
    <p>They either hardware accelerate certain parts of a software program, or completely synthesise only smaller units</p>
    <p>The Click2NetFPGA Toolchain is a system-to-system compiler</p>
    <p>More specifically designed for a specific source and a target system  .. but modifying or extending the source system does not require</p>
    <p>knowledge of the target system  .. and modifying packet processing code does not require</p>
    <p>understanding hardware design or programming in Verilog or VHDL</p>
    <p>Related Work</p>
  </div>
  <div class="page">
    <p>Slide title 44 pt</p>
    <p>Text and bullet level 1 minimum 24 pt</p>
    <p>Bullets level 2-5 minimum 20 pt</p>
    <p>Characters for Embedded font: !&quot;#$%&amp;'()*+,-./0123456789:;&lt;=&gt;? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdef ghijklmnopqrstuvwxyz{|}~        fifl</p>
    <p>Do not add objects or text in the footer area</p>
    <p>The Click2NetFPGA Toolchain | 2012-6-13 | Page 4</p>
    <p>A software platform (C++) for building different kinds of packet-processing nodes / functions, or routers</p>
    <p>Define a software router from packet processing elements  Runs in Linux/BSD user space or in Linux kernel  100+ existing elements, e.g. ARPResponder, Classifier  Easy to add new elements  Easy to build custom routers</p>
    <p>Click Modular Router</p>
  </div>
  <div class="page">
    <p>Slide title 44 pt</p>
    <p>Text and bullet level 1 minimum 24 pt</p>
    <p>Bullets level 2-5 minimum 20 pt</p>
    <p>Characters for Embedded font: !&quot;#$%&amp;'()*+,-./0123456789:;&lt;=&gt;? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdef ghijklmnopqrstuvwxyz{|}~        fifl</p>
    <p>Do not add objects or text in the footer area</p>
    <p>The Click2NetFPGA Toolchain | 2012-6-13 | Page 5</p>
    <p>A PCI network interface card with an FPGA</p>
    <p>4 x 1 Gbps Ethernet interface  Line-rate, flexible, and open platform  For research and classrooms  More than 1,000 NetFPGA systems deployed</p>
    <p>A few open-source, Verilog-based reference designs</p>
    <p>Harder to modify or add new modules (for an average network developer/ researcher) than in Click</p>
    <p>NetFPGA</p>
  </div>
  <div class="page">
    <p>Slide title 44 pt</p>
    <p>Text and bullet level 1 minimum 24 pt</p>
    <p>Bullets level 2-5 minimum 20 pt</p>
    <p>Characters for Embedded font: !&quot;#$%&amp;'()*+,-./0123456789:;&lt;=&gt;? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdef ghijklmnopqrstuvwxyz{|}~        fifl</p>
    <p>Do not add objects or text in the footer area</p>
    <p>The Click2NetFPGA Toolchain | 2012-6-13 | Page 6</p>
    <p>An open source compiler, from UIUC  A set of tools and optimizers  Easy to write new compiler passes  Easy to write new backends (and, maybe, frontends)  Represents intermediate code in SSA (Single Static Assignment) form</p>
    <p>An abstract, assembler-like form, with unlimited registers  Outperforms GCC in many (but not all) ways  Can perform global optimizations (after linking)</p>
    <p>LLVM</p>
  </div>
  <div class="page">
    <p>Slide title 44 pt</p>
    <p>Text and bullet level 1 minimum 24 pt</p>
    <p>Bullets level 2-5 minimum 20 pt</p>
    <p>Characters for Embedded font: !&quot;#$%&amp;'()*+,-./0123456789:;&lt;=&gt;? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdef ghijklmnopqrstuvwxyz{|}~        fifl</p>
    <p>Do not add objects or text in the footer area</p>
    <p>The Click2NetFPGA Toolchain | 2012-6-13 | Page 7</p>
    <p>LLVM backend for generating VHDL  Open source, from IIT Bombay  Factorises the system into control, data, and storage</p>
    <p>Supports scalable optimisations and analyses  Current limitations: no recursion or function pointers, otherwise full C  Generates a VHDL module out of each LLVM IR function</p>
    <p>Design = Set of modules with I/O channels  I/O through a simple VHDL library, resembling Unix pipes</p>
    <p>AHIR</p>
  </div>
  <div class="page">
    <p>Slide title 44 pt</p>
    <p>Text and bullet level 1 minimum 24 pt</p>
    <p>Bullets level 2-5 minimum 20 pt</p>
    <p>Characters for Embedded font: !&quot;#$%&amp;'()*+,-./0123456789:;&lt;=&gt;? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdef ghijklmnopqrstuvwxyz{|}~        fifl</p>
    <p>Do not add objects or text in the footer area</p>
    <p>The Click2NetFPGA Toolchain | 2012-6-13 | Page 8</p>
    <p>Slide title</p>
    <p>minimum 32 pt</p>
    <p>(32 pt makes 2 rows)</p>
    <p>Text and bullet level 1</p>
    <p>minimum 24 pt</p>
    <p>Bullets level 2-5</p>
    <p>minimum 20 pt</p>
    <p>!&quot;# $%&amp;'()*+,-./0123456789:;&lt;=&gt;? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`a bcdefghijklmnopqrstuvwxyz{|}~       fifl</p>
    <p>Do not add objects or text in the footer area</p>
    <p>AN AHIR example Converting an LLVM instruction to VHDL</p>
    <p>A simple example of addition instruction  C code: int d = m + n;  Equivalent LLVM IR: %d = add i32 %m, %n!</p>
    <p>Start</p>
    <p>n m</p>
    <p>add i32</p>
    <p>Stop</p>
    <p>Control Edge Data Edge</p>
    <p>CDFG</p>
    <p>Init</p>
    <p>Fin</p>
    <p>req</p>
    <p>Control path</p>
    <p>Data path</p>
    <p>m n</p>
    <p>%add</p>
    <p>add i32</p>
    <p>ack</p>
  </div>
  <div class="page">
    <p>Slide title 44 pt</p>
    <p>Text and bullet level 1 minimum 24 pt</p>
    <p>Bullets level 2-5 minimum 20 pt</p>
    <p>Characters for Embedded font: !&quot;#$%&amp;'()*+,-./0123456789:;&lt;=&gt;? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdef ghijklmnopqrstuvwxyz{|}~        fifl</p>
    <p>Do not add objects or text in the footer area</p>
    <p>The Click2NetFPGA Toolchain | 2012-6-13 | Page 9</p>
    <p>Implementation Compile Click elements to</p>
    <p>- linkable .o files (host)</p>
    <p>- LLVM IR source files (NetFPGA)</p>
    <p>(only initially and after Click updates)</p>
    <p>Read Click configuration, build the router in memory, read private vars and link required files with constant Click elements into an LLVM IR module</p>
    <p>Run transformations</p>
    <p>- Optimisations</p>
    <p>- Make code more suitable for target</p>
    <p>Use AHIR to convert</p>
    <p>LLVM IR into VHDL</p>
    <p>Run NetFPGA SDK to build</p>
    <p>a new netlist, including VHDL</p>
    <p>generated from Click</p>
  </div>
  <div class="page">
    <p>Slide title 44 pt</p>
    <p>Text and bullet level 1 minimum 24 pt</p>
    <p>Bullets level 2-5 minimum 20 pt</p>
    <p>Characters for Embedded font: !&quot;#$%&amp;'()*+,-./0123456789:;&lt;=&gt;? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdef ghijklmnopqrstuvwxyz{|}~        fifl</p>
    <p>Do not add objects or text in the footer area</p>
    <p>The Click2NetFPGA Toolchain | 2012-6-13 | Page 10</p>
    <p>Resulting Hardware</p>
  </div>
  <div class="page">
    <p>Slide title 44 pt</p>
    <p>Text and bullet level 1 minimum 24 pt</p>
    <p>Bullets level 2-5 minimum 20 pt</p>
    <p>Characters for Embedded font: !&quot;#$%&amp;'()*+,-./0123456789:;&lt;=&gt;? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdef ghijklmnopqrstuvwxyz{|}~        fifl</p>
    <p>Do not add objects or text in the footer area</p>
    <p>The Click2NetFPGA Toolchain | 2012-6-13 | Page 11</p>
    <p>Modifying a Click-based hardware router requires only modification of the Click elements C++ code, running make and waiting for the hardware synthesis to complete</p>
    <p>Current prototype can reach 1/3 of the line speed (1 Gbps)  Translation between NetFPGA and Click data models on input and</p>
    <p>output is the major bottleneck</p>
    <p>We could reach the same packet processing performance but we would use more (than available) FPGA resources</p>
    <p>For example, in one configuration, replicating the CheckIPHeader element gave an 18% improvement with 10% increase in resource usage</p>
    <p>Also adding double banked memory gives a total of 31% improvement with a total of 19% increase in resource usage</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Slide title 44 pt</p>
    <p>Text and bullet level 1 minimum 24 pt</p>
    <p>Bullets level 2-5 minimum 20 pt</p>
    <p>Characters for Embedded font: !&quot;#$%&amp;'()*+,-./0123456789:;&lt;=&gt;? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdef ghijklmnopqrstuvwxyz{|}~        fifl</p>
    <p>Do not add objects or text in the footer area</p>
    <p>The Click2NetFPGA Toolchain | 2012-6-13 | Page 12</p>
    <p>Redesigning memory/packet-I/O model  64-bit instead of 8-bit memory transfer functions  Initiating Click processing before a complete packet is received</p>
    <p>Using memory outside the FPGA (e.g. DRAM)  Finding more ways to add parallelism  Using optimized code templates in LLVM -&gt; VHDL transformation</p>
    <p>Dividing Click code to run partly on host CPU and partly as hardware</p>
    <p>Get back Click live reconfigurability  Save FPGA resources for time critical processing tasks</p>
    <p>Future Work</p>
  </div>
  <div class="page">
    <p>Slide title 44 pt</p>
    <p>Text and bullet level 1 minimum 24 pt</p>
    <p>Bullets level 2-5 minimum 20 pt</p>
    <p>Characters for Embedded font: !&quot;#$%&amp;'()*+,-./0123456789:;&lt;=&gt;? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdef ghijklmnopqrstuvwxyz{|}~        fifl</p>
    <p>Do not add objects or text in the footer area</p>
    <p>The Click2NetFPGA Toolchain | 2012-6-13 | Page 13</p>
    <p>We have shown that writing a toolchain that transforms a complex software system into a hardware system is possible</p>
    <p>However, more work is required in order to develop a toolchain that</p>
    <p>Creates a hardware system which runs more efficiently than the original software system and doesnt require more hardware resources than a hand-written hardware design</p>
    <p>Supports all software features (e.g. recursive constructs, system reconfigurability)</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Slide title 44 pt</p>
    <p>Text and bullet level 1 minimum 24 pt</p>
    <p>Bullets level 2-5 minimum 20 pt</p>
    <p>Characters for Embedded font: !&quot;#$%&amp;'()*+,-./0123456789:;&lt;=&gt;? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdef ghijklmnopqrstuvwxyz{|}~        fifl</p>
    <p>Do not add objects or text in the footer area</p>
    <p>The Click2NetFPGA Toolchain | 2012-6-13 | Page 14</p>
    <p>Thank you!</p>
    <p>Questions?</p>
  </div>
  <div class="page"/>
</Presentation>
