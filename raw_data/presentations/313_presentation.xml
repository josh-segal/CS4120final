<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Toward Online Tes.ng of Federated and Heterogeneous</p>
    <p>Distributed Systems Marco Canini</p>
    <p>EPFL, Switzerland</p>
    <p>Work supported by the European Research Council</p>
    <p>Joint work with: Vojin Jovanovi, Daniele Venzano, Boris Spasojevi, Olivier Crameri, and Dejan Kos.</p>
    <p>Networked Systems Laboratory</p>
  </div>
  <div class="page">
    <p>Federated, Heterogeneous Distributed Systems</p>
    <p>Mul.ple administra.ve domains  Several interoperable implementa.ons  Example: Internet inter-domain rou.ng</p>
    <p>16/6/2011 Marco Canini, USENIX ATC'11</p>
    <p>[BGPlay]</p>
  </div>
  <div class="page">
    <p>Internet Rou.ng is Unreliable</p>
    <p>Operator mistakes, bugs,   Origin misconfigura.on: Pakistan/YouTube 2008 incident</p>
    <p>Pakistan ISP</p>
    <p>[BGPlay]</p>
  </div>
  <div class="page">
    <p>How to improve reliability?</p>
    <p>B A</p>
    <p>C</p>
    <p>D</p>
    <p>Time</p>
    <p>Live</p>
    <p>Tes.ng (in parallel)</p>
  </div>
  <div class="page">
    <p>Goal of online tes.ng</p>
    <p>Systema.cally explore system behavior  Detect node ac.ons that lead to faults  Con.nuously and automa.cally  Alongside but in isola.on from live environment  Accommodate constraints of federated and heterogeneous distributed systems  No unrestricted access to node state and configura.on  Difficult to have source/binary code of all nodes</p>
  </div>
  <div class="page">
    <p>How to reach our goal?</p>
    <p>Subject nodes code to inputs that exercise possible ac9ons</p>
  </div>
  <div class="page">
    <p>DiCE</p>
    <p>B A</p>
    <p>C</p>
    <p>D</p>
    <p>Time</p>
    <p>A</p>
    <p>Live</p>
    <p>DiCE</p>
    <p>DiCE</p>
  </div>
  <div class="page">
    <p>DiCE</p>
    <p>B A</p>
    <p>C</p>
    <p>D</p>
    <p>Time</p>
    <p>A A</p>
    <p>Live</p>
    <p>DiCE</p>
    <p>DiCE</p>
  </div>
  <div class="page">
    <p>Managing Path Explosion</p>
    <p>Explore from current state  Localize code that changes state</p>
    <p>e.g., message handlers  Inject small-sized inputs</p>
    <p>A</p>
    <p>Message handler</p>
  </div>
  <div class="page">
    <p>DiCE prototype for BGP</p>
    <p>Integrated DiCE in BGP module of BIRD 1.1.7  Open source router, coded in C</p>
    <p>Use fork() to take/clone checkpoints  Exploring BGP behavior</p>
    <p>UPDATE messages main drivers of state change  Announced routes  Path anributes</p>
    <p>Concolic execu.on instruments code  Use only for tes.ng  negligible impact on live system</p>
  </div>
  <div class="page">
    <p>Rest of the Internet</p>
    <p>Detec.ng origin misconfigura.on</p>
    <p>Check: rou.ng tables polluted in external ASes?  Route leaks (hijacks) by customer or provider</p>
    <p>Provider</p>
    <p>Prefix AS_PATH</p>
    <p>d X Y Z</p>
    <p>Customer</p>
    <p>UPDATE AS_PATH C prefix d C</p>
  </div>
  <div class="page">
    <p>Going forward</p>
    <p>Ini.al building block  Ability to explore node ac9ons (in isola9on)</p>
    <p>Next  Observe consequences on system-wide state  Isolated online tes.ng harness  Check states w/o exposing private informa.on  More info in our posi.on paper [LADIS 10]</p>
    <p>Thank you! Ques.ons?</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Micro benchmarks</p>
    <p>CPU overhead  Metric: BGP updates per second</p>
    <p>Stress test during RIB load  Baseline: 15.1  W/ explora.on: 13.9  Impact 8%</p>
    <p>Realis.c test during trace replay  Negligible impact</p>
    <p>Memory overhead  Cloned process has 37% overhead on average</p>
    <p>We did not anempt to minimize instrumenta.on</p>
  </div>
</Presentation>
