<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>2010 AT&amp;T Knowledge Ventures. All rights reserved. AT&amp;T and the AT&amp;T logo are trademarks of AT&amp;T Knowledge Ventures.</p>
    <p>Detection of spam hosts and spam bots using</p>
    <p>network traffic modeling Anestis Karasaridis</p>
    <p>Willa K. Ehrlich, Danielle Liu, David Hoeflin</p>
    <p>2010 AT&amp;T Knowledge Ventures4/14/2010Page 2</p>
    <p>The evolution of</p>
    <p>malevolence</p>
    <p>SpamBot</p>
    <p>Controller</p>
    <p>Repository</p>
    <p>SpamBot</p>
    <p>SpamBot</p>
    <p>Botnet</p>
    <p>Email gatway</p>
    <p>Firewalled Corporate Network</p>
    <p>Internal</p>
    <p>host</p>
    <p>Internal host</p>
    <p>Commands,</p>
    <p>email</p>
    <p>templates,</p>
    <p>and content</p>
    <p>email</p>
    <p>Email download</p>
    <p>Infection</p>
    <p>Communication</p>
    <p>to controller Exfiltration of</p>
    <p>data</p>
    <p>Heracles (Hercules), with the help of Iolaos,</p>
    <p>fights the Lernaean Hydra in one of his 12</p>
    <p>Labours</p>
    <p>From ancient mythology to now</p>
  </div>
  <div class="page">
    <p>2010 AT&amp;T Knowledge Ventures4/14/2010Page 3</p>
    <p>Overview</p>
    <p>Unsolicited email (UE, a.k.a. spam) is not only a nuisance but has become one of the main infection vectors to propagate malware.</p>
    <p>We observe innovative techniques to get UE through anti-spam filters, fighting the same techniques used to detect them.</p>
    <p>We have seen it being sent to targeted individuals (spear phishing), customized to take advantage of some knowledge of the recipient.</p>
    <p>Email can carry links or attachments for malware that are not suspect at a first glance taking advantage of weakness in many common applications such as browsers (IE, Firefox), Acrobat Reader, Javascript, AV software itself, etc.</p>
    <p>Once the end-user device is infected, it typically joins a botnet for remote control of its future activities (such as sending spam, launching DoS attacks, leaking private data etc.)</p>
    <p>We offer an end-to-end detection solution: spam hosts -&gt; compromised spam hosts -&gt; spam hosts that join a botnet (spam bots)</p>
    <p>2010 AT&amp;T Knowledge Ventures4/14/2010Page 4</p>
    <p>Spam host detection</p>
    <p>(data and main observations)</p>
    <p>Most current spam detection depends on full or partial text (including headers): Privacy intrusive, does not scale well and requires frequent retraining and rule updates.</p>
    <p>Our data consist of flow records from peering links: allow minimal privacy invasion and scalable for very large networks. Also gives us a broader view of the host activities</p>
    <p>One important observation: spam has markedly different statistical properties than ham (the opposite of spam)</p>
    <p>Mean and variance of bytes per flow for Simple Mail Transfer Protocol (SMTP) flows for spam are lower than ham</p>
  </div>
  <div class="page">
    <p>2010 AT&amp;T Knowledge Ventures4/14/2010Page 5</p>
    <p>Multivariate traffic models of email</p>
    <p>spammers vs. legitimate SMTP clients</p>
    <p>Traffic model for a given SMTP client class is a bivariate Gaussian distribution with the two RVs being:</p>
    <p>X1 : mean bytes per SMTP request flow (BPF) for a given host across its flows</p>
    <p>X2: standard deviation of bytes per SMTP request flow for a given</p>
    <p>host across its flows</p>
    <p>Traffic Model Parameters by Client Class</p>
    <p>2010 AT&amp;T Knowledge Ventures4/14/2010Page 6</p>
    <p>Application of Bayesian theory to</p>
    <p>SMTP client classification  Consider a traffic vector, x, for an (unknown) SMTP client i consisting of:</p>
    <p>X1i=log10(mean BPF) and X2i=log10(stddev BPF).</p>
    <p>Classes cS and cL for spam and legitimate SMTP hosts, respectively</p>
    <p>From Bayes Theorem</p>
    <p>where</p>
    <p>P(cj) is the probability of class j independently of the observed data</p>
    <p>P(x/cj) is the conditional probability of the traffic vector x given it is in class j based on the bivariate normal density function</p>
    <p>Since denominator does not depend on a category, classify an SMTP client as an spammer whenever</p>
    <p>where T&gt;0.5</p>
    <p>If we assign equal probability to the two classes (i.e., P(cS)=P(cL) then</p>
    <p>By varying T, tradeoff  Detection probability (i.e., correctly classifying true Spammer as Spammer)</p>
    <p>Probability of false positive (i.e., incorrectly classifying legitimate SMTP client as Spammer)</p>
    <p>)(/)/(*)()/())(( xPcxPcPxcPcxCP jjjj</p>
    <p>===</p>
    <p>, )/(*)()/(*)(</p>
    <p>)/(*)( ))(( T</p>
    <p>cxPcPcxPcP</p>
    <p>cxPcP cxCP</p>
    <p>LLSs</p>
    <p>SS S</p>
    <p>&gt;</p>
    <p>+</p>
    <p>==</p>
    <p>TcxPcxPcxPcxCP LSSS</p>
    <p>&gt;+== ))/()/(/(()/())((</p>
  </div>
  <div class="page">
    <p>2010 AT&amp;T Knowledge Ventures4/14/2010Page 7</p>
    <p>Accuracy of traffic models in classifying</p>
    <p>blacklisted vs. whitelisted SMTP clients  Evaluate classification accuracy by using a two groups of known</p>
    <p>SMTP clients (blacklisted and whitelisted).</p>
    <p>Collected data for a period of 300 hours. For each hour, analyzed set of SMTP flows associated with approximately 2000 known SMTP clients and applied the spam detection algorithm to classify an SMTP client as spammer or legitimate</p>
    <p>Evaluated accuracy of classification</p>
    <p>Detection: P(Classify spammer/Blacklisted SMTP client)</p>
    <p>False Positive: P(Classify spammer/Whitelisted SMTP client)</p>
    <p>Results of model validation</p>
    <p>2010 AT&amp;T Knowledge Ventures4/14/2010Page 8</p>
    <p>Detection of compromised spam hosts using host</p>
    <p>traffic profiling</p>
    <p>Analyze remaining (other than SMTP) flows of detected spam hosts to find significant local and remote ports</p>
    <p>Significant is determined using relative uncertainty (normalized entropy) of a remote port given a remote host or a local port (local is our spam host)</p>
    <p>Establish the host traffic profile of a whitelisted (normal) SMTP host, which shows mostly significant 25/tcp (SMTP) and 53/udp (DNS) remote ports.</p>
    <p>Identify spam hosts that have abnormal host traffic profile (i.e., they exhibit significant ports other than remote 25/tcp and 53/udp), indicating compromise.</p>
    <p>Example A: HTP of whitelisted SMTP client</p>
    <p>Example B: HTP of a likely</p>
    <p>compromised SMTP client</p>
  </div>
  <div class="page">
    <p>2010 AT&amp;T Knowledge Ventures4/14/2010Page 9</p>
    <p>Botnet controller detection - description</p>
    <p>Two-stage approach:</p>
    <p>Stage 1: Summarize flow records of likely compromised spam hosts, using 3 different approaches: a) connections to typical control ports (e.g., port 80, 8080 for http, 6667 for IRC etc.), b) connections to hubservers (servers/ports with high fan-in, c) connections where the number of flows per address, packets per flow, and bytes per packet are within 90%-th percentile range of</p>
    <p>the model. The records constitute the candidate controller conversations (CCC)</p>
    <p>Stage 2: Aggregate CCC records, rank by number of clients to a server/port, and calculate distance to common control models and find clients with periodic or recurrent behavior. Use DNS passive replication database to identify servers with no DNS domain or with transient domains. Assign confidence score.</p>
    <p>2010 AT&amp;T Knowledge Ventures4/14/2010Page 10</p>
    <p>Rank servers by number</p>
    <p>of compromised</p>
    <p>spammers and model</p>
    <p>distance</p>
    <p>Botnet controller detection - flow</p>
    <p>Suspicious</p>
    <p>Client</p>
    <p>(Compromised</p>
    <p>Spam Host)</p>
    <p>Non-SMTP</p>
    <p>Flow records</p>
    <p>Server</p>
    <p>Select and summarize</p>
    <p>Candidate Controller</p>
    <p>Conversations (flow</p>
    <p>record summaries)</p>
    <p>Stage 1</p>
    <p>Analyze flows for</p>
    <p>client periodicity</p>
    <p>and recurrency</p>
    <p>Analyze DNS</p>
    <p>data of suspect</p>
    <p>servers</p>
    <p>Botnet alarm</p>
    <p>records</p>
    <p>Calculate</p>
    <p>confidence</p>
    <p>score</p>
    <p>Stage 2</p>
    <p>Is this a controller ?</p>
  </div>
  <div class="page">
    <p>2010 AT&amp;T Knowledge Ventures4/14/2010Page 11</p>
    <p>Transient domain detection (part of the</p>
    <p>DNS analysis of suspected controllers)</p>
    <p>In addition to flow records we have access to a DNS passive replication database which aggregates internet-wide DNS resolutions of domains to IP addresses.</p>
    <p>Database facilitates queries for historical data by domain or IP address</p>
    <p>We developed algorithms to detect transient and fast flux domains. Transient domains are domains that hop sequentially between addresses of diverse providers. Fast-flux domains are domains that map to frequently changing sets of addresses.</p>
    <p>This analysis helps us improve our confidence that a particular IP address is a controller.</p>
    <p>Direct access to a suspected server by its IP address or use of transient domains or domains that are used briefly and then discarded, increase the likelihood that a suspected server is compromised</p>
    <p>2010 AT&amp;T Knowledge Ventures4/14/2010Page 12</p>
    <p>Examples of automated detection of controllers of</p>
    <p>some of the largest spam botnets (1/2):</p>
    <p>Alarm record for a controller of the Ozdok botnet. One suspicious client</p>
    <p>shows periodic and 3 clients show recurrent behavior</p>
    <p>Alarm record for an controller of the Cutwail botnet. The controller is</p>
    <p>directly accessed by its IP address since there are no records of DNS</p>
    <p>domains pointing historically to this address</p>
  </div>
  <div class="page">
    <p>2010 AT&amp;T Knowledge Ventures4/14/2010Page 13</p>
    <p>Examples of automated detection of controllers of</p>
    <p>some of the largest spam botnets (2/2):</p>
    <p>Alarm record for a controller of the Zeus botnet. Two DNS domains linked to the</p>
    <p>suspected controller appear to be Transient</p>
    <p>2010 AT&amp;T Knowledge Ventures4/14/2010Page 14</p>
    <p>Conclusions and Future work</p>
    <p>Developed a new end-to-end approach and tools to passively detect spam botnets and their respective controllers using flow data and DNS metadata.</p>
    <p>Spam host detection is based on bytes per flow statistics of flow data. Classification using a Bayesian approach over a bivariate Gaussian traffic model.</p>
    <p>Suspect spam bots are spam hosts that have a host traffic profile different than a whitelisted spam host</p>
    <p>Botnet controller detection is based on a two stage algorithm that uses flow summaries and distances to common control protocol models. Heuristics such as periodicity, recurrency and DNS transiency provide an overall confidence score for a suspected controller.</p>
    <p>Continue to refine models and heuristics to avoid likely false positives mostly related to bot contacts to CDNs supported sites</p>
  </div>
</Presentation>
