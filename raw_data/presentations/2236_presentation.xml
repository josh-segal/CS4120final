<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Linearizable Quorum Reads in Paxos</p>
    <p>Aleksey Charapko, Ailidani Ailijiang, and Murat Demirbas</p>
  </div>
  <div class="page">
    <p>What is Paxos</p>
    <p>Solves Distributed Consensus</p>
    <p>Operates in 3 Phases 1. Elect a Leader for a round</p>
  </div>
  <div class="page">
    <p>From Paxos to MultiPaxos</p>
    <p>Run Phase-1 once</p>
    <p>Keep stable leader</p>
    <p>Repeat phase-2 many times</p>
    <p>Piggyback phase-3 to some next phase-2</p>
    <p>Piggyback</p>
  </div>
  <div class="page">
    <p>Problems with Paxos</p>
    <p>Single Leader Bottleneck  Lots of messages to</p>
    <p>send/receive</p>
    <p>Piggyback</p>
  </div>
  <div class="page">
    <p>Paxos in Distributed Databases  Data replication</p>
    <p>Paxos and its derivatives are often used in strongly-consistent databases.  CockroachDB</p>
    <p>Spanner/Cloud Spanner</p>
    <p>YugaByte</p>
    <p>PaxosStore</p>
    <p>CockroachDB (Raft)</p>
    <p>Cloud Spanner (Paxos)</p>
    <p>YugaByte (Raft)</p>
  </div>
  <div class="page">
    <p>Reading from Paxos-Based System</p>
    <p>Paxos has no notion of Reads.  Consensus on commands</p>
    <p>Order of commands</p>
    <p>Read is a command.</p>
    <p>Strong Consistency for any type of command</p>
  </div>
  <div class="page">
    <p>Reading from Paxos-Based System II</p>
    <p>Read from the leader  Need leases to protect the leader</p>
    <p>Read from any replica  Read stale data (ZooKeeper)</p>
    <p>Read from quorum of replicas  Leader may still be slightly ahead!</p>
  </div>
  <div class="page">
    <p>Paxos Quorum Read (PQR)</p>
    <p>Two-phases to make sure we read the latest value.  Quorum-read Phase</p>
    <p>Read from quorum for latest accepted(!) value. Remember the max slot #</p>
    <p>Rinse Phase  Read one(!) node for executed.</p>
    <p>Executed slot is known to have been globally committed with no gaps.</p>
    <p>Return value if executed slot # &gt;= accepted slot # from Quorum-read phase.</p>
  </div>
  <div class="page">
    <p>Paxos Quorum Read (PQR)</p>
  </div>
  <div class="page">
    <p>PQR Example</p>
  </div>
  <div class="page">
    <p>Doing PQR in one RTT</p>
    <p>PQR takes 2 RTTs</p>
    <p>Possible to eliminate Rinse Phase in absence of new commands (no progress):  last accepted slot # = last executed slot #</p>
    <p>Means that Rinse phase condition is already met!</p>
    <p>Can track progress per object or shard in similar way</p>
  </div>
  <div class="page">
    <p>PQR Evaluation</p>
    <p>Paxos runs full round for read</p>
    <p>Paxos Read From Leader reads from dedicated leader node</p>
    <p>75% writes</p>
    <p>Similar results at 50% and 25% writes, however, PQRs advantage starts to diminish.</p>
    <p>Throughput and latency</p>
  </div>
  <div class="page">
    <p>PQR Evaluation: Latency</p>
    <p>Fixed throughput @ 4k req/sec</p>
    <p>Suggests a sweet spot for best PQR performance</p>
    <p>PQR works best when leader is close to being saturated, and reads go to followers.</p>
    <p>Latency</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>PQR helps balance load between Paxos leader and follower nodes</p>
    <p>Offloading leader form serving reads allows it to serve more writes</p>
    <p>Reads use underutilized follower nodes</p>
    <p>PQR Improves throughput, especially in write-heavy workloads.</p>
  </div>
</Presentation>
