<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>2009 Andreas Haeberlen, MPI-SWS 1</p>
    <p>NetReview: Detecting when interdomain routing goes wrong</p>
    <p>Andreas Haeberlen</p>
    <p>MPI-SWS / Rice</p>
    <p>Ioannis Avramopoulos Deutsche Telekom</p>
    <p>Laboratories</p>
    <p>Peter Druschel MPI-SWS</p>
    <p>Jennifer Rexford Princeton</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>This is just the tip of the iceberg  A considerable fraction of Internet prefixes</p>
    <p>is affected by routing problems every day</p>
    <p>YouTube outage underscores big Internet problem</p>
    <p>BGP (Border Gateway Protocol) routing</p>
  </div>
  <div class="page">
    <p>AAAA</p>
    <p>BGP and its problems</p>
    <p>ASes exchange routing information via BGP  BGP routing is plagued with many problems:</p>
    <p>Misconfigurations</p>
    <p>LL</p>
    <p>MM</p>
    <p>II</p>
    <p>JJ</p>
    <p>NN</p>
    <p>EE</p>
    <p>KK</p>
    <p>GG</p>
    <p>CC</p>
    <p>BB</p>
    <p>DD</p>
    <p>FF</p>
    <p>HH</p>
    <p>I know how to</p>
    <p>get to AS A</p>
    <p>Autonomous systems (ASes)</p>
    <p>hijacks, oscillation, equipment failures, policy conflicts, ... , bugs, attacks by spammers, instabilities,</p>
  </div>
  <div class="page">
    <p>Approach: Fault detection</p>
    <p>Goals: 1. Reliably detect each routing problem, and</p>
    <p>Benefits:  ASes can respond to problems quickly  No need to diagnose faults manually  Works for a very broad class of problems  Provides an incentive for reliable routing  Easy to deploy incrementally</p>
  </div>
  <div class="page">
    <p>Challenges in BGP fault detection  Idea: Upload all router logs to a central entity,</p>
    <p>who inspects them for problems  Sufficient to find almost any routing problem</p>
    <p>Why wouldn't this work in practice?  Privacy: Logs contain sensitive information  Reliability: Logs may be inaccurate (bugs, hackers)  Automation: Can't manually inspect that much</p>
    <p>data  Deployability: Can't assume global deployment  Decentralization: ASes wouldn't accept a single</p>
    <p>detector entity</p>
  </div>
  <div class="page">
    <p>NetReview from 10,000 feet</p>
    <p>Border routers maintain logs of all BGP messages  Logs are tamper-evident  can reliably detect &amp; obtain</p>
    <p>proof if faulty routers omit, forge, or modify log entries  Neighbors periodically audit each other's logs and</p>
    <p>check them for routing problems  If a problem is found, auditor can prove its existence</p>
    <p>to a third party</p>
    <p>A C</p>
    <p>D</p>
    <p>E</p>
    <p>F B</p>
    <p>Logs of BGP messages</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction  Motivation: Internet routing problems  Approach: Fault detection</p>
    <p>What is a BGP fault?  The NetReview system  Practical challenges  Evaluation  Summary</p>
  </div>
  <div class="page">
    <p>BGP routing policies</p>
    <p>How do ASes decide what to announce via BGP?  Each AS has a routing policy, which is based on:</p>
    <p>Peering agreements: Customer/provider, ...  Best practices: Limited path length, ...  Internal goals: Choose the shortest/cheapest path, ...  Address assignments: IP address prefixes, ...</p>
    <p>A C</p>
    <p>D</p>
    <p>E</p>
    <p>F B</p>
    <p>G</p>
    <p>C's provider</p>
  </div>
  <div class="page">
    <p>What is a BGP fault?  Expected behavior of the AS := Combination of its</p>
    <p>peering agreements, best practices, internal goals, ...</p>
    <p>BGP fault := The BGP messages sent by the AS do not conform to its expected behavior</p>
    <p>How do we know what BGP messages the AS sent?  Need a complete+accurate message trace even if some</p>
    <p>routers are faulty in arbitrary, unknown ways  Requires a robust+secure tracing mechanism</p>
    <p>How do we know what its expected behavior is?  Different for every AS  need a specification</p>
  </div>
  <div class="page">
    <p>BGP rules</p>
    <p>For example, D might specify the following:  &quot;I will filter out routes with excessive paths&quot; (best practice)  &quot;I will act as C's provider&quot; (peering agreement)  &quot;I will prefer routes through B, if available&quot; (internal)</p>
    <p>Some rules may be confidential, but the AS need not reveal all of them to each auditor</p>
    <p>A C</p>
    <p>D</p>
    <p>E</p>
    <p>F B</p>
    <p>G</p>
    <p>&quot;Rules&quot;</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction  What is a BGP fault?  The NetReview system  Practical challenges  Evaluation  Summary</p>
  </div>
  <div class="page">
    <p>The tamper-evident log</p>
    <p>A B</p>
    <p>H as</p>
    <p>h ch</p>
    <p>ai n</p>
    <p>Send(X)</p>
    <p>Recv(Y)</p>
    <p>Send(Z)</p>
    <p>Recv(M)</p>
    <p>H0</p>
    <p>H1</p>
    <p>H2</p>
    <p>H3</p>
    <p>H4 B's log</p>
    <p>Message</p>
    <p>ACK</p>
    <p>Based on the tamper-evident log in PeerReview [SOSP'07]</p>
    <p>If router omits, modifies, or forges entries, neighbors can detect this and obtain evidence</p>
    <p>Log entries form a hash chain  Messages include signed hash  Tampering breaks the hash</p>
    <p>chain and is thus detectable  Messages are acknowledged</p>
    <p>Detects if message is ignored  Neighbors gossip about the</p>
    <p>hash values they've seen</p>
    <p>Hash(log)</p>
    <p>Hash(log)</p>
  </div>
  <div class="page">
    <p>Writing rules</p>
    <p>Rules are predicates on the AS's routing state  Declarative; easy to get correct  Even simple rules can be very powerful</p>
    <p>Describes everything that S-BGP can check, and more!</p>
    <p>D</p>
    <p>AS1 AS2</p>
    <p>ownPrefixes</p>
    <p>D AS1 AS2</p>
    <p>D</p>
    <p>D D</p>
    <p>D</p>
    <p>D AS3</p>
  </div>
  <div class="page">
    <p>Auditing and rule evaluation</p>
    <p>To audit a neighboring AS: 1. Auditor requests the logs from each border router</p>
    <p>D</p>
    <p>E Auditor</p>
    <p>Time</p>
    <p>Routing state</p>
    <p>Rule violated in this interval</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction  What is a BGP fault?  The NetReview system  Practical challenges</p>
    <p>Incentives for incremental deployment  Partial deployment  Working without a certificate authority  Using existing routers</p>
    <p>Evaluation  Summary</p>
  </div>
  <div class="page">
    <p>Incremental deployment</p>
    <p>What is the smallest useful deployment?  One AS can find bugs, misconfigurations, ...  Two adjacent ASes can check peering agreements, ...</p>
    <p>What are the incentives for deployment?  Reliable ASes can attract more customers  Logs can be used for root-cause analysis</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction  What is a BGP fault?  The NetReview system  Practical challenges  Evaluation  Summary</p>
  </div>
  <div class="page">
    <p>Experimental setup</p>
    <p>Synthetic network of 35 Zebra BGP daemons  Default routing policies (Gao-Rexford)  Injected real BGP trace (Equinix) to get scale  Results in this talk are from AS 5 (92% of</p>
    <p>Internet ASes have degree five or less)</p>
    <p>T ie</p>
    <p>r 1</p>
    <p>T ie</p>
    <p>r 2</p>
    <p>S tu</p>
    <p>b s</p>
    <p>Internet</p>
    <p>AS 2</p>
    <p>AS 1</p>
    <p>AS 3</p>
    <p>AS 4 AS 5 AS 6</p>
    <p>AS 7 AS 8 AS 9 AS 10</p>
  </div>
  <div class="page">
    <p>Evaluation: Functionality check</p>
    <p>Fault injection experiment with five rules based on common routing problems:</p>
    <p>No origin misconfiguration  Export customer routes  Honor NO_ADVERTISE community  Consistent path length  Backup link</p>
    <p>NetReview detected all the injected faults  Also produced diagnostic information, such as time</p>
    <p>when the fault occurred, and prefixes that were affected</p>
  </div>
  <div class="page">
    <p>Evaluation: Overhead</p>
    <p>Processing power: 15-minute log segment can be checked in 41.5s on a P4</p>
    <p>A single commodity PC is sufficient for small networks</p>
    <p>Storage space: 710kB/minute, 356 GB/year</p>
    <p>Fits comfortably on a single hard disk</p>
    <p>Bandwidth: 420kbps, including BGP updates</p>
    <p>Insignificant compared to typical traffic volume</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Fault prevention  Secure routing protocols: S-BGP, soBGP, SPV, ...  Trusted monitors: N-BGP</p>
    <p>Heuristic fault detection  Anomaly detection  Root-cause analysis</p>
    <p>Accountability  PeerReview, AIP, AudIt, ...</p>
  </div>
  <div class="page">
    <p>Summary  NetReview: A fault detection system for</p>
    <p>interdomain routing  Automatically detects a wide variety of routing problems  Links each problem to the responsible AS  Not a heuristic - produces proof of each fault</p>
    <p>NetReview is practical  Easy to deploy incrementally  No PKI required  Reasonable overhead</p>
    <p>Thank you!</p>
  </div>
</Presentation>
