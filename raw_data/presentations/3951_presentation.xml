<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Nicolas Droux, Senior Staff Engineer Solaris Kernel Networking, Sun Microsystems Inc. nicolas.droux@sun.com</p>
    <p>Crossbow Virtual Wire: Network In a Box</p>
    <p>November 5th, 2009 USENIX LISA 09, Baltimore, MD</p>
    <p>Sunay Tripathi, Nicolas Droux, Kais Belgaied, Shrikrishna Khare</p>
  </div>
  <div class="page">
    <p>www.opensolaris.org/os/project/crossbow 2</p>
    <p>Key Issues in Network Virtualization  Fair or Policy based resource sharing in virtualized environments</p>
    <p>&gt; Bandwidth &gt; NIC Hardware resources including Rx/Tx descriptors &gt; Processing CPUs</p>
    <p>Overheads due to Virtualization &gt; Latency, Throughput</p>
    <p>Management &gt; Isolation between distributed applications &gt; Network fabric configuration</p>
    <p>Security &gt; New threats to L2 network</p>
    <p>Where to solve the problem? &gt; Switches &gt; L3/L4 devices &gt; Hosts</p>
  </div>
  <div class="page">
    <p>www.opensolaris.org/os/project/crossbow 3</p>
    <p>Crossbow: Solaris Networking Stack</p>
    <p>8 years of development work to achieve &gt; Scalability across multi-core CPUs and multi-10gigE</p>
    <p>bandwidth &gt; Virtualization, QoS, High-availability designed in &gt; Exploit advanced NIC features</p>
    <p>Key Enabler for &gt; Server and Network Consolidation &gt; Open Networking &gt; Cloud computing</p>
  </div>
  <div class="page">
    <p>www.opensolaris.org/os/project/crossbow 4</p>
    <p>Crossbow Hardware Lanes Ground-Up Design for multi-core and multi-10GigE</p>
    <p>Linear Scalability using 'Hardware Lanes' with dedicated resources</p>
    <p>Network Virtualization and QoS designed in the stack</p>
    <p>More Efficiency due to 'Dynamic Polling and Packet Chaining'</p>
    <p>Physical MachinePhysical NIC</p>
    <p>Hardware Lane</p>
    <p>C L A S S I F I E R</p>
    <p>Virtual NIC</p>
    <p>Hardware Rings/DMA</p>
    <p>Kernel Threads and Queues</p>
    <p>Virtual NIC</p>
    <p>Kernel Threads and Queues</p>
    <p>Squeue Hardware</p>
    <p>Rings/DMA Kernel Threads</p>
    <p>and Queues</p>
    <p>Virtual Machine/Zone</p>
    <p>Virtual Machine/Zone</p>
    <p>Application</p>
    <p>Switch</p>
    <p>VLAN Separated</p>
    <p>Hardware Rings/DMA</p>
  </div>
  <div class="page">
    <p>www.opensolaris.org/os/project/crossbow 5</p>
    <p>Hardware Lanes and Dynamic Polling  Partition the NIC Hardware (Rx/Tx rings, DMA), kernel</p>
    <p>queues/threads, and CPU to allow creation of Hardware Lane which can be assigned to VNICs &amp; Flows</p>
    <p>Use Dynamic Polling on Rx/Tx rings to schedule rate of packet arrival and transmission on a per lane basis</p>
    <p>Effect of dynamic polling Mpstat (older driver) intr ithr csw icsw migr smtx srw syscl usr sys wt idl 10818 8607 4558 1547 161 1797 289 19112 17 69 0 12</p>
    <p>Mpstat (GLDv3 based driver) intr ithr csw icsw migr smtx srw syscl usr sys wt idl 2823 1489 875 151 93 261 1 19825 15 57 0 27</p>
    <p>~75% Fewer Interrupts</p>
    <p>~85% Fewer Mutexes</p>
    <p>~85% Fewer Ctx Switches</p>
    <p>~15% More CPU Free</p>
  </div>
  <div class="page">
    <p>www.opensolaris.org/os/project/crossbow 6</p>
    <p>Pseudo MAC instances &gt; Can be managed as if they were physical NICs &gt; Per VNICs stats, reuse existing management tools &gt; Link speed derived from configured bandwidth limit &gt; High-Availability by creating VNICs on link aggregations or</p>
    <p>combining VNICs in IPMP groups</p>
    <p>Dedicated per-VNIC hardware and kernel resources</p>
    <p>Data path pass-through, no bump in the stack</p>
    <p>Standards based End-to-End Network Virtualization &gt; VLAN tags and Priority Flow Control (PFC) assigned to VNIC</p>
    <p>extend Hardware Lanes to Switch</p>
    <p>Crossbow Virtual NICs (VNICs)</p>
  </div>
  <div class="page">
    <p>www.opensolaris.org/os/project/crossbow 7</p>
    <p>Crossbow Virtual Switching</p>
    <p>A virtual switch is created implicitly each time &gt;2 VNICs are created on a data link</p>
    <p>The MAC layer provides packet switching semantics equivalent to an ethernet switch &gt; Data path between VNICs created on top of the same</p>
    <p>data link &gt; Connectivity between VNICs and physical network &gt; Per VLAN broadcast domain, isolation between VLANs</p>
    <p>VNICs can be created on etherstub to create virtual switches independent from hardware</p>
  </div>
  <div class="page">
    <p>www.opensolaris.org/os/project/crossbow 8</p>
    <p>Crossbow Virtual Switching Example</p>
    <p>non-global zone ng0</p>
    <p>non-global zone ng1</p>
    <p>Virtual Machine</p>
    <p>vnic0</p>
    <p>vnic1</p>
    <p>vnic2</p>
    <p>vnic3 bge0 IP Filter</p>
    <p>NAT Virtual Switch</p>
    <p>global zone</p>
    <p>Solaris host</p>
  </div>
  <div class="page">
    <p>www.opensolaris.org/os/project/crossbow 9</p>
    <p>Virtual NIC &amp; Virtual Switch Usage</p>
    <p># dladm create-vnic -l bge1 vnic1 # dladm create-vnic -l bge1 -m random -p maxbw=100M -p cpus=4,5,6 vnic2 # dladm create-etherstub vswitch1 # dladm show-etherstub LINK vswitch1 # dladm create-vnic -l vswitch1 -p maxbw=1000M vnic3 # dladm show-vnic LINK OVER MACTYPE MACVALUE BANDWIDTH CPUS vnic1 bge1 factory 0:1:2:3:4:5 - vnic2 bge1 random 2:5:6:7:8:9 max=100M 4,5,6 vnic3 vswitch1 random 4:3:4:7:0:1 max=1000M</p>
    <p># dladm create-vnic -l ixgbe0 -v 1055 -p maxbw=500M -p cpus=1,2 vnic9</p>
  </div>
  <div class="page">
    <p>www.opensolaris.org/os/project/crossbow 10</p>
    <p>Physical Wire w/Physical Machines</p>
    <p>Client Router</p>
    <p>Virtual Wire w/Virtual Network Machines</p>
    <p>Host 1 Host 2</p>
    <p>Port 6 20.0.03</p>
    <p>Port 9 20.0.01</p>
    <p>Port 3 10.0.03</p>
    <p>Port 1 10.0.01</p>
    <p>Port 2 10.0.02</p>
    <p>Switch 3 Switch 1</p>
    <p>Client Router (Virtual Router)</p>
    <p>VNIC6 20.0.03</p>
    <p>VNIC9 20.0.01</p>
    <p>VNIC3 10.0.03</p>
    <p>VNIC1 10.0.01</p>
    <p>VNIC2 10.0.02</p>
    <p>EtherStub 3 EtherStub 1</p>
    <p>Host 1 Host 2</p>
  </div>
  <div class="page">
    <p>www.opensolaris.org/os/project/crossbow 11</p>
    <p>Virtual Network Machines</p>
    <p>A Virtual Network Machine (VNM) is a Zone or Virtual Machine associated with a set of network functions (routing, firewall, load balancing, etc)</p>
    <p>A VNM has dedicated VNIC(s) with configured link speed, CPUs</p>
    <p>Multiple VNMs can run on a single host, connected through virtual private networks (etherstubs) or to the physical network</p>
    <p>Use for simulation, consolidation, testing, etc</p>
  </div>
  <div class="page">
    <p>www.opensolaris.org/os/project/crossbow 12</p>
    <p>Crossbow Flows</p>
    <p>Crossbow flows based on the following attributes &gt; Services (protocol + remote/local ports) &gt; Transport (TCP, UDP, SCTP, iSCSI, etc) &gt; IP addresses and IP subnets &gt; DSCP labels</p>
    <p>The following properties can be set on each flow &gt; Bandwidth limits &gt; Priorities &gt; CPUs</p>
    <p># flowadm create-flow -l bge0 protocol=tcp,local_port=443 -p maxbw=50M http-1 # flowadm set-flowprop -l bge0 -p maxbw=100M http-1</p>
  </div>
  <div class="page">
    <p>www.opensolaris.org/os/project/crossbow 13</p>
    <p>Join Us...</p>
    <p>Beer @ Crossbow and Solaris Networking BoF &gt; Tonight 10:30-11:30pm (Dover A&amp;B) &gt; Presentation by Ben Rockwood (Joyent) &gt; vWire demo and deep-dive discussions</p>
    <p>OpenSolaris project and community &gt; http://www.opensolaris.org/os/project/crossbow</p>
    <p>&gt; crossbow-discuss@opensolaris.org</p>
    <p>&gt; networking-discuss@opensolaris.org</p>
  </div>
  <div class="page">
    <p>Nicolas Droux nicolas.droux@sun.com Solaris Kernel Networking</p>
    <p>Crossbow Virtual Wire: Network In a Box</p>
  </div>
</Presentation>
