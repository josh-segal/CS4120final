<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Scalable Cloud Security via Asynchronous Virtual Machine Introspection</p>
    <p>Sundaresan (sunny) Rajasekaran, Zhen Ni, Harpreet Singh Chawla, Neel Shah, Timothy Wood and Emery Berger.</p>
    <p>The George Washington University University of Massachusetts, Amherst</p>
  </div>
  <div class="page">
    <p>Introduction  Software will always be vulnerable to attacks.</p>
    <p>Existing techniques for prevention are slow to detect attacks.</p>
    <p>Need a way for cloud platforms to provide security functionality as a service.</p>
  </div>
  <div class="page">
    <p>Introduction  Software will always be vulnerable to attacks.</p>
    <p>Existing techniques for prevention are slow to detect attacks.</p>
    <p>Need a way for cloud platforms to provide security functionality as a service.</p>
    <p>How can the cloud detect attacks inside a VM? How to provide strong security guarantees at low cost?</p>
  </div>
  <div class="page">
    <p>ScaaS  Scanning as a Service framework for security in</p>
    <p>cloud data centers.</p>
    <p>Scans for a wide range of attacks within both application and the operating system.</p>
    <p>Uses an asynchronous checkpointing mechanism to replicate a VMs memory onto a Scanner host for analysis.</p>
    <p>Uses VM introspection techniques to study the memory of the virtual machine.</p>
  </div>
  <div class="page">
    <p>Where do we stand?</p>
    <p>O ve</p>
    <p>rh ea</p>
    <p>d</p>
    <p>window for vulnerability</p>
  </div>
  <div class="page">
    <p>Where do we stand?</p>
    <p>O ve</p>
    <p>rh ea</p>
    <p>d</p>
    <p>window for vulnerability</p>
    <p>Memory Safety tools eg: valgrind</p>
  </div>
  <div class="page">
    <p>Where do we stand?</p>
    <p>O ve</p>
    <p>rh ea</p>
    <p>d</p>
    <p>window for vulnerability</p>
    <p>Memory Safety tools eg: valgrind</p>
    <p>Virus Scanners. eg: McAfee</p>
  </div>
  <div class="page">
    <p>Where do we stand?</p>
    <p>O ve</p>
    <p>rh ea</p>
    <p>d</p>
    <p>window for vulnerability</p>
    <p>Memory Safety tools eg: valgrind</p>
    <p>Virus Scanners. eg: McAfee</p>
    <p>ScaaS</p>
  </div>
  <div class="page">
    <p>Scanner Host</p>
    <p>ScaaS Architecture</p>
    <p>VMs periodically send checkpoints to the Scanners for analysis.</p>
    <p>A Scanner host uses VM introspection techniques to search for evidence of vulnerabilities.</p>
    <p>Ensures integrity of Key Kernel data structures.</p>
    <p>Primary Hosts</p>
    <p>VMVM</p>
    <p>ScaaS Agent</p>
    <p>ScaaS Agent</p>
  </div>
  <div class="page">
    <p>Scanner Host</p>
    <p>ScaaS Architecture</p>
    <p>VMs periodically send checkpoints to the Scanners for analysis.</p>
    <p>A Scanner host uses VM introspection techniques to search for evidence of vulnerabilities.</p>
    <p>Ensures integrity of Key Kernel data structures.</p>
    <p>Primary Hosts</p>
    <p>VMVM</p>
    <p>ScaaS Agent</p>
    <p>ScaaS Agent Check</p>
    <p>points</p>
    <p>VM VM VM VM CP</p>
    <p>History CP</p>
    <p>History CP</p>
    <p>History CP</p>
    <p>History</p>
  </div>
  <div class="page">
    <p>Scanner Host</p>
    <p>ScaaS Architecture</p>
    <p>VMs periodically send checkpoints to the Scanners for analysis.</p>
    <p>A Scanner host uses VM introspection techniques to search for evidence of vulnerabilities.</p>
    <p>Ensures integrity of Key Kernel data structures.</p>
    <p>Primary Hosts</p>
    <p>VMVM</p>
    <p>ScaaS Agent</p>
    <p>ScaaS Agent Check</p>
    <p>points</p>
    <p>Introspected VM</p>
    <p>Unmodified Kernel</p>
    <p>AppApp</p>
    <p>Syscall Table Slab</p>
    <p>VM VM VM VM CP</p>
    <p>History CP</p>
    <p>History CP</p>
    <p>History CP</p>
    <p>History</p>
  </div>
  <div class="page">
    <p>VM Checkpointing</p>
    <p>VM execution timeline</p>
    <p>Checkpoints</p>
    <p>interval 10 - 100 ms</p>
    <p>VM</p>
    <p>VMs Memory is clean</p>
    <p>t0</p>
  </div>
  <div class="page">
    <p>VM Checkpointing</p>
    <p>VM execution timeline</p>
    <p>Checkpoints</p>
    <p>interval 10 - 100 ms</p>
    <p>VM</p>
    <p>VMs Memory is dirtied</p>
    <p>t0</p>
  </div>
  <div class="page">
    <p>VM Checkpointing</p>
    <p>VM execution timeline</p>
    <p>Checkpoints</p>
    <p>interval 10 - 100 ms</p>
    <p>VM</p>
    <p>VMs Memory is dirtied</p>
    <p>Send dirty pages</p>
    <p>..</p>
    <p>t0</p>
  </div>
  <div class="page">
    <p>VMI Scanner</p>
    <p>Replica RAM</p>
    <p>VM Checkpointing</p>
    <p>VM execution timeline</p>
    <p>Checkpoints</p>
    <p>interval 10 - 100 ms</p>
    <p>VM</p>
    <p>VMs Memory is dirtied</p>
    <p>Send dirty pages</p>
    <p>..</p>
    <p>t0</p>
  </div>
  <div class="page">
    <p>VMI Scanner</p>
    <p>Replica RAM</p>
    <p>VM Checkpointing</p>
    <p>VM execution timeline</p>
    <p>Checkpoints</p>
    <p>interval 10 - 100 ms</p>
    <p>VM</p>
    <p>VMs Memory is dirtied</p>
    <p>Send dirty pages</p>
    <p>.. Kernel</p>
    <p>Apache sshd</p>
    <p>t0</p>
  </div>
  <div class="page">
    <p>VM Checkpointing</p>
    <p>VM execution timeline</p>
    <p>Checkpoints</p>
    <p>interval 10 - 100 ms</p>
    <p>VM</p>
    <p>VMs Memory is dirtied</p>
    <p>t0</p>
  </div>
  <div class="page">
    <p>VM Checkpointing</p>
    <p>VM execution timeline</p>
    <p>Checkpoints</p>
    <p>interval 10 - 100 ms</p>
    <p>VM</p>
    <p>VMs Memory is dirtied</p>
    <p>Send dirty pages</p>
    <p>..</p>
    <p>t0</p>
  </div>
  <div class="page">
    <p>VM Checkpointing</p>
    <p>VM execution timeline</p>
    <p>Checkpoints</p>
    <p>interval 10 - 100 ms</p>
    <p>VM</p>
    <p>VMs Memory is dirtied</p>
    <p>Send dirty pages</p>
    <p>..</p>
    <p>VMI Scanner</p>
    <p>t0</p>
  </div>
  <div class="page">
    <p>VM Checkpointing</p>
    <p>VM execution timeline</p>
    <p>Checkpoints</p>
    <p>interval 10 - 100 ms</p>
    <p>VM</p>
    <p>VMs Memory is dirtied</p>
    <p>Send dirty pages</p>
    <p>..</p>
    <p>VMI Scanner</p>
    <p>Kernel</p>
    <p>Apache sshd</p>
    <p>t0</p>
  </div>
  <div class="page">
    <p>Primary Host Network Buffer</p>
    <p>VM</p>
    <p>Client</p>
    <p>Network buffering using Remus in Xen</p>
    <p>All network packets are buffered for each interval.</p>
    <p>The buffer content is released only at the end of the interval.</p>
    <p>ith interval</p>
    <p>ti-1 ti</p>
  </div>
  <div class="page">
    <p>Primary Host Network Buffer</p>
    <p>VM</p>
    <p>Client</p>
    <p>Network buffering using Remus in Xen</p>
    <p>All network packets are buffered for each interval.</p>
    <p>The buffer content is released only at the end of the interval.</p>
    <p>RX</p>
    <p>ith interval</p>
    <p>ti-1 ti</p>
  </div>
  <div class="page">
    <p>Primary Host Network Buffer</p>
    <p>VM</p>
    <p>Client</p>
    <p>Network buffering using Remus in Xen</p>
    <p>All network packets are buffered for each interval.</p>
    <p>The buffer content is released only at the end of the interval.</p>
    <p>TX</p>
    <p>RX</p>
    <p>ith interval</p>
    <p>ti-1 ti</p>
  </div>
  <div class="page">
    <p>Primary Host Network Buffer</p>
    <p>VM</p>
    <p>Client</p>
    <p>Network buffering using Remus in Xen</p>
    <p>All network packets are buffered for each interval.</p>
    <p>The buffer content is released only at the end of the interval.</p>
    <p>TX</p>
    <p>RX</p>
    <p>TX</p>
    <p>ith interval</p>
    <p>ti-1 ti</p>
  </div>
  <div class="page">
    <p>Primary Host Network Buffer</p>
    <p>VM</p>
    <p>Client</p>
    <p>Network buffering using Remus in Xen</p>
    <p>All network packets are buffered for each interval.</p>
    <p>The buffer content is released only at the end of the interval.</p>
    <p>TX</p>
    <p>RX</p>
    <p>TX</p>
    <p>ith interval</p>
    <p>RX</p>
    <p>ti-1 ti</p>
  </div>
  <div class="page">
    <p>Primary Host Network Buffer</p>
    <p>VM</p>
    <p>Client</p>
    <p>Network buffering using Remus in Xen</p>
    <p>All network packets are buffered for each interval.</p>
    <p>The buffer content is released only at the end of the interval.</p>
    <p>TX</p>
    <p>RX</p>
    <p>TX TX ith interval</p>
    <p>RX</p>
    <p>ti-1 ti</p>
  </div>
  <div class="page">
    <p>Primary Host Network Buffer</p>
    <p>VM</p>
    <p>Client</p>
    <p>Network buffering using Remus in Xen</p>
    <p>All network packets are buffered for each interval.</p>
    <p>The buffer content is released only at the end of the interval.</p>
    <p>TX</p>
    <p>RX</p>
    <p>TX TX TX</p>
    <p>ith interval</p>
    <p>RX</p>
    <p>ti-1 ti</p>
  </div>
  <div class="page">
    <p>Primary Host Network Buffer</p>
    <p>VM</p>
    <p>Client</p>
    <p>Network buffering using Remus in Xen</p>
    <p>All network packets are buffered for each interval.</p>
    <p>The buffer content is released only at the end of the interval.</p>
    <p>TX</p>
    <p>RX</p>
    <p>TX</p>
    <p>RE LE</p>
    <p>AS E</p>
    <p>TX TX</p>
    <p>ith interval</p>
    <p>RX</p>
    <p>ti-1 ti</p>
  </div>
  <div class="page">
    <p>Primary Host Network Buffer</p>
    <p>VM</p>
    <p>Client</p>
    <p>Network buffering using Remus in Xen</p>
    <p>All network packets are buffered for each interval.</p>
    <p>The buffer content is released only at the end of the interval.</p>
    <p>TX</p>
    <p>RX</p>
    <p>TX</p>
    <p>RE LE</p>
    <p>AS E</p>
    <p>TX TX</p>
    <p>RX</p>
    <p>ith interval</p>
    <p>RX</p>
    <p>ti-1 ti</p>
  </div>
  <div class="page">
    <p>Primary Host Network Buffer</p>
    <p>VM</p>
    <p>Client</p>
    <p>Network buffering using Remus in Xen</p>
    <p>All network packets are buffered for each interval.</p>
    <p>The buffer content is released only at the end of the interval.</p>
    <p>TX</p>
    <p>RX</p>
    <p>TX</p>
    <p>RE LE</p>
    <p>AS E</p>
    <p>TX TX</p>
    <p>RX RX</p>
    <p>ith interval</p>
    <p>RX</p>
    <p>ti-1 ti</p>
  </div>
  <div class="page">
    <p>Primary Host Network Buffer</p>
    <p>VM</p>
    <p>Client</p>
    <p>Network buffering using Remus in Xen</p>
    <p>All network packets are buffered for each interval.</p>
    <p>The buffer content is released only at the end of the interval.</p>
    <p>TX</p>
    <p>RX</p>
    <p>TX</p>
    <p>RE LE</p>
    <p>AS E</p>
    <p>TX TX</p>
    <p>RX RX</p>
    <p>TX</p>
    <p>ith interval</p>
    <p>RX</p>
    <p>ti-1 ti</p>
  </div>
  <div class="page">
    <p>ScaaS Execution</p>
    <p>Pause briefly at each checkpoint to be scanned for security vulnerabilities.  ScaaS says if it is safe to release the buffer.  If an attack is found, the VM can be rolled back and analyzed.</p>
    <p>In te</p>
    <p>rv al</p>
    <p>i</p>
    <p>ScaaS Execution Timeline</p>
  </div>
  <div class="page">
    <p>ScaaS Execution</p>
    <p>Pause briefly at each checkpoint to be scanned for security vulnerabilities.  ScaaS says if it is safe to release the buffer.  If an attack is found, the VM can be rolled back and analyzed.</p>
    <p>In te</p>
    <p>rv al</p>
    <p>i</p>
    <p>ScaaS Execution Timeline</p>
  </div>
  <div class="page">
    <p>ScaaS Execution</p>
    <p>Pause briefly at each checkpoint to be scanned for security vulnerabilities.  ScaaS says if it is safe to release the buffer.  If an attack is found, the VM can be rolled back and analyzed.</p>
    <p>In te</p>
    <p>rv al</p>
    <p>i</p>
    <p>ScaaS Execution Timeline In</p>
    <p>te rv</p>
    <p>al i+ 1</p>
    <p>P au</p>
    <p>se a</p>
    <p>nd S</p>
    <p>av e</p>
    <p>S ca</p>
    <p>n C</p>
    <p>he ck</p>
    <p>po in</p>
    <p>t R</p>
    <p>el ea</p>
    <p>se O</p>
    <p>ut pu</p>
    <p>ts</p>
    <p>Async Checkpoint Buffer Outputs</p>
  </div>
  <div class="page">
    <p>ScaaS Execution</p>
    <p>Pause briefly at each checkpoint to be scanned for security vulnerabilities.  ScaaS says if it is safe to release the buffer.  If an attack is found, the VM can be rolled back and analyzed.</p>
    <p>In te</p>
    <p>rv al</p>
    <p>i</p>
    <p>ScaaS Execution Timeline In</p>
    <p>te rv</p>
    <p>al i+ 1</p>
    <p>P au</p>
    <p>se a</p>
    <p>nd S</p>
    <p>av e</p>
    <p>S ca</p>
    <p>n C</p>
    <p>he ck</p>
    <p>po in</p>
    <p>t R</p>
    <p>el ea</p>
    <p>se O</p>
    <p>ut pu</p>
    <p>ts</p>
    <p>Async Checkpoint Buffer Outputs</p>
  </div>
  <div class="page">
    <p>ScaaS Execution</p>
    <p>Pause briefly at each checkpoint to be scanned for security vulnerabilities.  ScaaS says if it is safe to release the buffer.  If an attack is found, the VM can be rolled back and analyzed.</p>
    <p>In te</p>
    <p>rv al</p>
    <p>i</p>
    <p>ScaaS Execution Timeline In</p>
    <p>te rv</p>
    <p>al i+ 1</p>
    <p>P au</p>
    <p>se a</p>
    <p>nd S</p>
    <p>av e</p>
    <p>S ca</p>
    <p>n C</p>
    <p>he ck</p>
    <p>po in</p>
    <p>t R</p>
    <p>el ea</p>
    <p>se O</p>
    <p>ut pu</p>
    <p>ts</p>
    <p>Async Checkpoint Buffer Outputs</p>
    <p>Scan Fails</p>
  </div>
  <div class="page">
    <p>ScaaS Execution</p>
    <p>Pause briefly at each checkpoint to be scanned for security vulnerabilities.  ScaaS says if it is safe to release the buffer.  If an attack is found, the VM can be rolled back and analyzed.</p>
    <p>In te</p>
    <p>rv al</p>
    <p>i</p>
    <p>ScaaS Execution Timeline In</p>
    <p>te rv</p>
    <p>al i+ 1</p>
    <p>P au</p>
    <p>se a</p>
    <p>nd S</p>
    <p>av e</p>
    <p>S ca</p>
    <p>n C</p>
    <p>he ck</p>
    <p>po in</p>
    <p>t R</p>
    <p>el ea</p>
    <p>se O</p>
    <p>ut pu</p>
    <p>ts</p>
    <p>Async Checkpoint Buffer Outputs</p>
    <p>Async Checkpoint Buffer Outputs</p>
    <p>Scan Fails</p>
    <p>Detect and</p>
    <p>Replay</p>
    <p>Rol lbac</p>
    <p>k</p>
  </div>
  <div class="page">
    <p>Attack Detection and Response</p>
    <p>Forensic analysis: Do analysis that cannot be done on runtime.</p>
    <p>Rollback and Replay: Useful when using breakpoints that trigger errors such as buffer overflow.</p>
    <p>Honeypot mode: Resume and run in a sandbox.</p>
  </div>
  <div class="page">
    <p>Prototype Evaluation</p>
    <p>Prototype of ScaaS using Xen 4.5.2</p>
    <p>1Gbps link between Primary and Scanner host.</p>
    <p>Checkpointing using Remus.</p>
    <p>VM introspection using libVMI.</p>
  </div>
  <div class="page">
    <p>Types of Scans  Process Black/White List Enforcer:</p>
    <p>Determines current running processes in a VM.Triggers errors depending on whether a target process is running or not.</p>
    <p>Memory Fingerprinter:</p>
    <p>Hashes the memory pages to compare against known good states. eg: sys call table, that doesnt change that often.</p>
  </div>
  <div class="page">
    <p>N or</p>
    <p>m al</p>
    <p>iz ed</p>
    <p>P er</p>
    <p>fo rm</p>
    <p>an ce</p>
    <p>Checkpoint Interval(ms)</p>
    <p>httperf sudokut</p>
    <p>sysbench</p>
    <p>Benchmarks vs. different checkpoint intervals  CPU intensive benchmarks perform well with longer intervals  httperf is a latency sensitive benchmark</p>
    <p>Longer the interval worse the performance.</p>
    <p>Checkpoint overhead</p>
  </div>
  <div class="page">
    <p>Performance change of application w.r.t. emulated scan costs.</p>
    <p>Normalized wrt to zero-cost scan  httperf costs worsens with scan cost</p>
    <p>as it has to hold buffer data for longer periods</p>
    <p>N or</p>
    <p>m al</p>
    <p>iz ed</p>
    <p>P er</p>
    <p>fo rm</p>
    <p>an ce</p>
    <p>Emulated scan cost(us)</p>
    <p>httperf sudokut</p>
    <p>sysbench</p>
    <p>Emulated Scan cost</p>
  </div>
  <div class="page">
    <p>Fingerprinter causes high overhead initially but becomes negligible as checkpointing interval increase.</p>
    <p>Sc an</p>
    <p>ne r C</p>
    <p>PU u</p>
    <p>sa ge</p>
    <p>(% )</p>
    <p>Checkpoint Interval(ms)</p>
    <p>httperf-fingerprint httperf</p>
    <p>sudokut sysbench</p>
    <p>CPU usage at scanner host</p>
  </div>
  <div class="page">
    <p>Conclusion  ScaaS: Framework for security Scanning as a</p>
    <p>Service.</p>
    <p>Tool for attack detection and forensic analysis on memory.</p>
    <p>examining memory checkpoints for an attack.</p>
    <p>highly scalable and fast.</p>
  </div>
  <div class="page">
    <p>Discussion</p>
    <p>What types of attacks can we detect?</p>
    <p>Do we need to keep a history of checkpoints? Why? How?</p>
    <p>What is a reasonable cost for ScaaS?</p>
  </div>
</Presentation>
