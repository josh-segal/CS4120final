<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Building Compilers for Reconfigurable Switches</p>
    <p>Lavanya Jose, Lisa Yan, Nick McKeown, and George Varghese</p>
  </div>
  <div class="page">
    <p>In the next 20 minutes</p>
    <p>Fixed-funcPon switch chips will be replaced by reconfigurable switch chips</p>
    <p>We will program them using languages like P4  We need a compiler to compile P4 programs to reconfigurable switch chips.</p>
  </div>
  <div class="page">
    <p>Fixed-FuncPon Switch Chips</p>
    <p>Queues L2</p>
    <p>Stage IPv4 Stage Pa</p>
    <p>rs er IPv6</p>
    <p>Stage ACL Stage</p>
    <p>L3</p>
    <p>L2</p>
    <p>Pa ck et</p>
    <p>Pa ck et</p>
  </div>
  <div class="page">
    <p>Control Flow Graph</p>
    <p>Queues L2</p>
    <p>Stage IPv4 Stage Pa</p>
    <p>rs er IPv6</p>
    <p>Stage ACL Stage L2</p>
    <p>T ab le</p>
    <p>IP v4 T ab le</p>
    <p>IP v6</p>
    <p>Ta bl e</p>
    <p>A CL T ab le</p>
    <p>L2 v4</p>
    <p>v6 ACL</p>
    <p>Control Flow Graph</p>
    <p>Switch Pipeline</p>
    <p>Fi xe d A cP on</p>
    <p>Fi xe d A cP on</p>
    <p>A cP on</p>
    <p>Fi xe d A cP on</p>
  </div>
  <div class="page">
    <p>Fixed-FuncPon Switch Chips Are Limited</p>
  </div>
  <div class="page">
    <p>Fixed-FuncPon Switch Chips</p>
    <p>Queues L2</p>
    <p>Stage IPv4 Stage Pa</p>
    <p>rs er IPv6</p>
    <p>Stage ACL Stage L2</p>
    <p>T ab le</p>
    <p>IP v4 T ab le</p>
    <p>IP v6</p>
    <p>Ta bl e</p>
    <p>A CL T ab le</p>
    <p>Fi xe d A cP on</p>
    <p>Fi xe d A cP on</p>
    <p>A cP on</p>
    <p>Fi xe d A cP on</p>
    <p>L2 v4</p>
    <p>v6 ACL</p>
    <p>Control Flow Graph</p>
    <p>Switch Pipeline</p>
    <p>MyEncap MyEncap</p>
  </div>
  <div class="page">
    <p>Fixed-FuncPon Switch Chips Are Limited</p>
    <p>Queues L2 Stag e</p>
    <p>IPv4 Stag e</p>
    <p>Pa rs er IPv6</p>
    <p>Stag e</p>
    <p>ACL Stag e Fix</p>
    <p>ed A cP on</p>
    <p>Fi xe d A cP on</p>
    <p>A cP on</p>
    <p>L2 T ab le</p>
    <p>Fi xe d A cP on</p>
    <p>IP v4 T ab le</p>
    <p>IP v6</p>
    <p>Ta bl e</p>
    <p>A CL T ab le</p>
  </div>
  <div class="page">
    <p>Control Flow Graph</p>
    <p>Switch Pipeline</p>
    <p>Reconfigurable Switch Chips</p>
    <p>Queues</p>
    <p>Pa rs er</p>
    <p>Fi xe d A cP on</p>
    <p>Fi xe d A cP on</p>
    <p>Fi xe d A cP on</p>
    <p>L2 T ab le</p>
    <p>Fi xe d A cP on</p>
    <p>IP v4 T ab le</p>
    <p>IP v6 T ab le</p>
    <p>A CL T ab le</p>
    <p>M at ch T ab le</p>
    <p>M at ch T ab le</p>
    <p>M at ch T ab le</p>
    <p>M at ch T ab le</p>
    <p>L2 v4</p>
    <p>v6 ACL</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
    <p>M ac ro</p>
  </div>
  <div class="page">
    <p>M at ch T ab le</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>Mapping Control Flow to Reconfigurable Chip.</p>
    <p>Queues</p>
    <p>Pa rs er</p>
    <p>M at ch T ab le</p>
    <p>M at ch T ab le</p>
    <p>M at ch T ab le</p>
    <p>L2 T ab le</p>
    <p>IP v4 T ab le</p>
    <p>IP v6 T ab le</p>
    <p>A CL T ab le</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>L2 v4</p>
    <p>v6 ACL</p>
    <p>Control Flow Graph</p>
    <p>Switch Pipeline</p>
    <p>L2</p>
    <p>v6 ACL</p>
    <p>v4</p>
    <p>L2 A cP on</p>
    <p>M ac ro</p>
    <p>v4 A cP on</p>
    <p>M ac ro</p>
    <p>v6 A cP on</p>
    <p>A CL A cP on</p>
    <p>M ac ro</p>
  </div>
  <div class="page">
    <p>Control Flow Graph</p>
    <p>Switch Pipeline</p>
    <p>Reconfigurable Switch Chips</p>
    <p>Queues</p>
    <p>Pa rs er</p>
    <p>L2 T ab le</p>
    <p>IP v4 T ab le</p>
    <p>A CL T ab le</p>
    <p>IP v6</p>
    <p>M yE nc ap</p>
    <p>L2 v4</p>
    <p>v6 ACL</p>
    <p>MyEncap L2 A cP on</p>
    <p>M ac ro</p>
    <p>v4 A cP on</p>
    <p>M ac ro</p>
    <p>A CL A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
    <p>MyEncap</p>
    <p>A cP on</p>
    <p>IP v4</p>
    <p>A cP on</p>
    <p>IP v4</p>
    <p>A cP on</p>
    <p>IP v6</p>
    <p>IP v4</p>
    <p>A cP on</p>
  </div>
  <div class="page">
    <p>Pa rs er</p>
    <p>L2 T ab le</p>
    <p>IP v4 T ab le</p>
    <p>IP v6 T ab le</p>
    <p>A CL T ab le</p>
    <p>Match Memory</p>
    <p>AcPon ALU</p>
    <p>Protocol Independent Switch</p>
    <p>L2 A cP on</p>
    <p>M ac ro</p>
    <p>v4 A cP on</p>
    <p>M ac ro</p>
    <p>v6 A cP on</p>
    <p>M ac ro</p>
    <p>A CL A cP on</p>
    <p>M ac ro</p>
  </div>
  <div class="page">
    <p>Pa rs er</p>
    <p>L2 T ab le</p>
    <p>IP v4 T ab le</p>
    <p>IP v6</p>
    <p>A CL</p>
    <p>Ta bl e</p>
    <p>IP v4 T ab le</p>
    <p>IP v4</p>
    <p>Ta bl e</p>
    <p>L2 A cP on</p>
    <p>M ac ro</p>
    <p>v4 A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
    <p>A cP on</p>
    <p>A cP on</p>
  </div>
  <div class="page">
    <p>Match + AcPon Processor: pipelined and in-parallel</p>
  </div>
  <div class="page">
    <p>Reconfigurability: the norm in 5 years</p>
    <p>Reconfigurability adds mostly to logic.  Logic is geang relaPvely smaller.  The cost of reconfigurability is going down.  Fixed switch chip area today:  I/O (40%), Memory (40%),  Wires, Logic</p>
    <p>Switch I/O (30%)</p>
    <p>Memory (30%)</p>
    <p>Wires (20%)</p>
    <p>Logic (20%)</p>
    <p>Switch I/O</p>
    <p>Memory</p>
    <p>Wires Logic</p>
  </div>
  <div class="page">
    <p>Fixed Func-on Broadcom Tomahawk: 3.2 Tbps Reconfigurable Cavium Xpliant: 3.2 Tbps</p>
  </div>
  <div class="page">
    <p>Reconfigurable chips are inevitable.</p>
  </div>
  <div class="page">
    <p>Configuring Switch Chips P4 code</p>
    <p>Compiler</p>
    <p>Compiler Target</p>
    <p>Queues</p>
    <p>Pa rs er</p>
    <p>Fi xe d A cP on</p>
    <p>Fi xe d A cP on</p>
    <p>Fi xe d A cP on</p>
    <p>L2 T ab le</p>
    <p>Fi xe d A cP on</p>
    <p>IP v4 T ab le</p>
    <p>IP v6 T ab le</p>
    <p>A CL T ab le</p>
    <p>M at ch T ab le</p>
    <p>M at ch T ab le</p>
    <p>M at ch T ab le</p>
    <p>M at ch T ab le</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
    <p>M ac ro</p>
  </div>
  <div class="page">
    <p>Queues</p>
    <p>Pa rs er</p>
    <p>Fi xe d A cP on</p>
    <p>Fi xe d A cP on</p>
    <p>Fi xe d A cP on</p>
    <p>L2 T ab le</p>
    <p>Fi xe d A cP on</p>
    <p>IP v4 T ab le</p>
    <p>IP v6 T ab le</p>
    <p>A CL T ab le</p>
    <p>M at ch T ab le</p>
    <p>M at ch T ab le</p>
    <p>M at ch T ab le</p>
    <p>M at ch T ab le</p>
    <p>P4 (hgp://p4.org/)</p>
    <p>parser parse_ethernet { extract(ethernet); select(latest.etherType) { 0x800 : parse_ipv4; 0x86DD : parse_ipv6; } }</p>
    <p>table ipv4_lpm { reads { ipv4.dstAddr : lpm; } actions { set_next_hop; drop; } }</p>
    <p>control ingress { apply(l2_table); if (valid(ipv4)) { apply(ipv4_table); } if (valid(ipv6)) { apply(ipv6_table); } apply (acl); }</p>
    <p>L2 v4 v6</p>
    <p>ACL</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>(ANCS13) Parser</p>
    <p>Match AcPon Tables</p>
    <p>Control Flow Graph</p>
  </div>
  <div class="page">
    <p>What does reconfigurability buy us?</p>
  </div>
  <div class="page">
    <p>Use resources efficiently  MulPple tables per stage  Big table in mulPple stages</p>
    <p>Use fewer stages L2</p>
    <p>IPv4</p>
    <p>IPv6 ACL</p>
    <p>Benefits of Reconfigurability</p>
  </div>
  <div class="page">
    <p>Nave Mapping: Control Flow Graph Pa rs er</p>
    <p>M at ch T ab le</p>
    <p>M at ch T ab le</p>
    <p>M at ch T ab le</p>
    <p>M at ch T ab le</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
    <p>M ac ro</p>
    <p>L2 v4</p>
    <p>v6 ACL</p>
    <p>Control Flow</p>
    <p>Switch Pipeline</p>
    <p>Queues</p>
    <p>L2 T ab le</p>
    <p>IP v4 T ab le</p>
    <p>IP v6 T ab le</p>
    <p>A CL</p>
    <p>Ta bl e</p>
    <p>L2</p>
    <p>v6 ACL</p>
    <p>v4</p>
    <p>A cP on</p>
    <p>v4 A cP on</p>
    <p>M ac ro</p>
    <p>v6 A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
  </div>
  <div class="page">
    <p>Control Flow Graph</p>
    <p>L2</p>
    <p>Table Dependency Graph (TDG)</p>
    <p>v4</p>
    <p>v6 ACL</p>
    <p>L2</p>
    <p>v4</p>
    <p>v6</p>
    <p>ACL</p>
    <p>Table Dependency Graph</p>
  </div>
  <div class="page">
    <p>Switch Pipeline</p>
    <p>Efficient Mapping: TDG</p>
    <p>Queues</p>
    <p>Pa rs er L2 T ab le</p>
    <p>IP v4 T ab le</p>
    <p>IP v6 T ab le</p>
    <p>Table Dependency Graph Control Flow Graph</p>
    <p>L2 v4</p>
    <p>v6 ACL L2</p>
    <p>v4</p>
    <p>v6</p>
    <p>ACL A cP on</p>
    <p>v4 A cP on</p>
    <p>M ac ro</p>
    <p>v6 A cP on</p>
    <p>M ac ro</p>
    <p>Ta bl e</p>
    <p>A cP on</p>
  </div>
  <div class="page">
    <p>L2</p>
    <p>Control Flow Graph</p>
    <p>Switch Pipeline</p>
    <p>Resource constraints</p>
    <p>v4</p>
    <p>v6 ACL</p>
    <p>Queues</p>
    <p>Pa rs er</p>
    <p>L2 T ab le</p>
    <p>IP v6</p>
    <p>IP v4</p>
    <p>L3</p>
    <p>L2</p>
    <p>v6</p>
    <p>v4</p>
    <p>L2 A cP on</p>
    <p>M ac ro</p>
    <p>v4 A cP on</p>
    <p>M ac ro</p>
    <p>v6 A cP on</p>
    <p>M ac ro</p>
    <p>A cP on</p>
    <p>A CL T ab le</p>
  </div>
  <div class="page">
    <p>Header widths</p>
    <p>AcPon ALU input Memory</p>
    <p>Type</p>
    <p>Table parallelism</p>
    <p>More resource constraints</p>
    <p>AcPon Mem ory</p>
  </div>
  <div class="page">
    <p>Map match acPon tables in a TDG to a switch pipeline while respecPng dependency and</p>
    <p>resource constraints.</p>
    <p>The Compiler Problem</p>
  </div>
  <div class="page">
    <p>Step 1: P4 Program</p>
    <p>Step 2: Control Flow Graph</p>
    <p>L2 v4</p>
    <p>v6 ACL</p>
    <p>Step 3: Table Dependency Graph</p>
    <p>L2 v4</p>
    <p>v6 ACL</p>
    <p>Step 4: Table ConfiguraPon</p>
  </div>
  <div class="page">
    <p>Is that it?</p>
  </div>
  <div class="page">
    <p>Two Switches We Studied 1 2 3 4 32</p>
    <p>RMT 32 Stages</p>
    <p>(SIGCOMM 2013)</p>
    <p>FlexPipe 5 Stages</p>
    <p>(Intel FM6000)</p>
  </div>
  <div class="page">
    <p>AddiPonal switch features</p>
    <p>L2</p>
    <p>v4</p>
    <p>v6</p>
    <p>ACL</p>
    <p>L2</p>
    <p>L2</p>
    <p>v4</p>
    <p>v6</p>
    <p>Table shaping in RMT Table sharing in FlexPipe</p>
  </div>
  <div class="page">
    <p>Map match acPon tables in a TDG to a switch pipeline while respecPng dependency and</p>
    <p>resource constraints.</p>
    <p>The Compiler Problem</p>
    <p>Table shaping Table shar ing</p>
    <p>Header widths AcPon ALU input</p>
    <p>Memory Type</p>
    <p>Table parallelism AcPon Memory</p>
  </div>
  <div class="page">
    <p>First approach: Greedy</p>
    <p>PrioriPze one constraint  Sort tables  Map tables one at a Pme</p>
    <p>Queues</p>
    <p>Pa rs er</p>
  </div>
  <div class="page">
    <p>First approach: Greedy</p>
    <p>Queues</p>
    <p>Pa rs er</p>
    <p>PrioriPze one constraint  Sort tables  Map tables one at a Pme</p>
  </div>
  <div class="page">
    <p>Too many constraints for Greedy</p>
    <p>Any greedy must sort tables based on a metric that is a fixed funcPon of constraints.</p>
    <p>As the number of constraints gets larger, its harder for a fixed funcPon to represent the interplay between all constraints.</p>
    <p>Can we do beger than greedy?</p>
  </div>
  <div class="page">
    <p>Second approach: Integer Linear Programming (ILP)</p>
    <p>Find an opPmal mapping.</p>
    <p>Pros:  Takes in all constraints  Different objecPves  Solvers exist (CPLEX)</p>
    <p>Cons:  Blackbox solver  Encoding is an art  Slow</p>
  </div>
  <div class="page">
    <p>ILP Setup</p>
    <p>min # stages subject to:</p>
    <p>dependency constraints</p>
    <p>table sizes assigned memories assigned</p>
    <p>table sizes specified memories in physical stage</p>
  </div>
  <div class="page">
    <p>Experiment Setup</p>
    <p>4 datacenter use cases from Intel, Barefoot</p>
    <p>Differ in tables, table sizes, and dependencies</p>
  </div>
  <div class="page">
    <p>Example Use Case</p>
    <p>A Typical TDG</p>
    <p>IPv6- Mcast</p>
    <p>EG-ACL1</p>
    <p>EG-Phy- Meta</p>
    <p>IG-Agg- Int</p>
    <p>IG-Dmac</p>
    <p>IPv4- Mcast</p>
    <p>IPv4- Nexthop</p>
    <p>IPv6- Nexthop</p>
    <p>IG-Props</p>
    <p>IG- Router- Mac</p>
    <p>Ipv4- Ecmp</p>
    <p>IG-Smac</p>
    <p>Ipv4- Ucast- LPM</p>
    <p>Ipv4- Ucast- Host</p>
    <p>Ipv6- Ucast- Host</p>
    <p>Ipv6- Ucast- LPM</p>
    <p>Ipv6- Ecmp</p>
    <p>IG_ACL2</p>
    <p>IG_Bcast _Storm</p>
    <p>Ipv4_Ur pf</p>
    <p>Ipv6_Ur pf</p>
    <p>IG_ACL1</p>
    <p>EG_Prop s</p>
    <p>IG_Phy_ Meta</p>
    <p>ConfiguraPon for RMT</p>
  </div>
  <div class="page">
    <p>Metrics: Greedy vs ILP</p>
  </div>
  <div class="page">
    <p>Setup: Greedy vs ILP</p>
  </div>
  <div class="page">
    <p>Results: Greedy vs ILP</p>
    <p>Cant fit 25% of programs . 2. How close to opPmal is Greedy?  30% more Pme for packet to get through RMT pipeline.</p>
  </div>
  <div class="page">
    <p>If we have Pme, we should run ILP.</p>
  </div>
  <div class="page">
    <p>Use ILP to suggest best Greedy for program type.</p>
    <p>CriPcal constraints  Dependency criPcal: 16  13 stages  AddiPonal resource constraints less important CriPcal resources  TCAM memories criPcal: 16  14 stages  Results for one of our datacenter L2/L3 use cases</p>
  </div>
  <div class="page">
    <p>Conclusion  Challenge: Parallelism and constraints in reconfigurable chips makes compiling difficult.</p>
    <p>TDG: highlights parallelism in program.  ILP: beger if enough Pme, fiang is criPcal, or objecPves are complicated.</p>
    <p>Best Greedy: ILP can choose via noPon of cri1cal constraints and cri1cal resources.</p>
  </div>
  <div class="page">
    <p>Thank you!</p>
  </div>
  <div class="page">
    <p>ILP Run Pme</p>
    <p>Number of constraints? Not obvious. E.g., RMT  Min. stage: few secs.  Min. power: few secs.  Min. pipeline latency 10x slower</p>
    <p>Number of variables? How fine-grained is the resource assignment? E.g., FlexPipe  One match entry at a Pme: many days..  100-500 match entries at a Pme: &lt; 1 hr</p>
  </div>
</Presentation>
