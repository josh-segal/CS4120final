<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Decibel: Isolation and Sharing in Disaggregated Rack-Scale Storage</p>
    <p>Mihir Nanavati, Jake Wires, and Andrew Warfield (Coho Data and University of British Columbia)</p>
  </div>
  <div class="page">
    <p>Redundancy and high availability</p>
    <p>Transparent device aggregation</p>
    <p>Cluster-accessibility</p>
    <p>Decoupling and migration</p>
  </div>
  <div class="page">
    <p>Splendid cheeses they were with a two hundred horse-power scent that might have been warranted to</p>
    <p>knock a man over at two hundred yards.</p>
    <p>Extract from Three Men in a Boat, Jerome K Jerome (1889)</p>
  </div>
  <div class="page">
    <p>unless you want to add more complexity for your operations team, choose [] direct-attached storage .</p>
    <p>because the data is remote (and often replicated under the covers), theres typically a noticeable latency cost involved in using it rather than local storage [...] the ideal would be to use local disk for each replica for the sake of lower latency. Low throughput</p>
    <p>Latency overheads</p>
    <p>Shared  Crosstalk</p>
    <p>EBS has got a lot better ... [At Netflix] we [still] don't quite trust it for Kafka workloads [] going for instance type</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>(Roz Chast, The New Yorker, April 2001)</p>
    <p>[with Local SSDs] You cannot stop and restart an instance  only suitable for temporary storage ...</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>vs.</p>
    <p>Throughput and latency</p>
    <p>No crosstalk</p>
    <p>Tight host coupling</p>
    <p>Redundancy and high availability</p>
    <p>Transparent device aggregation</p>
    <p>Cluster-accessibility</p>
    <p>Decoupling and migration</p>
    <p>Local StorageManaged Storage</p>
    <p>DECIBEL STORAGE GOALS</p>
  </div>
  <div class="page">
    <p>Make all local storage cluster-accessible!</p>
    <p>Storage Brick</p>
    <p>Compute Drawer</p>
    <p>(Adapted from Intel Rack Scale Architecture)</p>
  </div>
  <div class="page">
    <p>Decibel is a storage service that remotely serves local storage</p>
    <p>Challenges</p>
    <p>Workload dynamism</p>
    <p>Virtualization</p>
    <p>Maintain device performance</p>
    <p>Virtualized Storage Abstraction + Runtime</p>
  </div>
  <div class="page">
    <p>They are neither man nor woman They are neither brute nor human</p>
    <p>They are Ghouls</p>
    <p>Extract from The Bells, Edgar Allan Poe (1849)</p>
  </div>
  <div class="page">
    <p>From the application perspective, storage resembles a network-attached disk</p>
    <p>Preserve device performance</p>
    <p>Performance isolation</p>
    <p>Access control</p>
    <p>Virtualizing only the capacity of devices is insufficient!</p>
    <p>D e c i b e l</p>
    <p>R u n t i m e</p>
    <p>dVols</p>
    <p>dVols</p>
    <p>Virtual Machines</p>
    <p>Full-system resources Hardware-like interfaces Isolation and sharing Multiplex on fast hardware!</p>
    <p>Client Library TCP-based RPC</p>
    <p>Vertical slice of the entire system</p>
    <p>Network Storage Service</p>
    <p>Network Boundary</p>
    <p>Runs locally on</p>
  </div>
  <div class="page">
    <p>Core</p>
    <p>DPDK</p>
    <p>TCP</p>
    <p>SPDK</p>
    <p>Block I/O</p>
    <p>Decibel Logic</p>
    <p>User space</p>
    <p>Kernel</p>
    <p>Core Core</p>
    <p>Hardware Queues</p>
    <p>Flow Director</p>
    <p>Volume Volume dVol dVol</p>
    <p>Volume dVol</p>
    <p>Virtualization and Scheduling</p>
    <p>N:1 multiplexing</p>
    <p>OS Thread</p>
  </div>
  <div class="page">
    <p>(PD Lankovsky)</p>
    <p>dVols are bound to a single core and a single device</p>
    <p>Decouple placement from scheduling</p>
    <p>Capacity Migrations</p>
    <p>Performance Migrations</p>
    <p>Limits mimic local SSDs</p>
    <p>(Mirador, FAST 2017)</p>
  </div>
  <div class="page">
    <p>(Guido Mocafico, Movement)</p>
    <p>Device Partitioning</p>
    <p>Contention and fragmentation Per-core caches (Hoard/tcmalloc)</p>
    <p>Scheduling</p>
    <p>Device throughput and latency dVol isolation</p>
  </div>
  <div class="page">
    <p>Throughput (K IOPS) Latency (s)</p>
    <p>Time TimeDecibel (DRR)</p>
    <p>No Isolation (FCFS)</p>
    <p>Regular Client (A) Regular Client (B) Bursty Client</p>
    <p>dVols provide hooks for conveniently implementing policies</p>
    <p>Single Device, 4K Mixed (70/30) RW</p>
    <p>Fair Share (30%)</p>
  </div>
  <div class="page">
    <p>THE DECIBEL RUNTIME</p>
    <p>Resource Management</p>
    <p>Scheduling</p>
    <p>Address Virtualization</p>
    <p>Access Control</p>
    <p>Atomicity and Data Integrity</p>
  </div>
  <div class="page">
    <p>Decibel vs. Local Devices</p>
    <p>Single-core Performance</p>
    <p>Performance</p>
  </div>
  <div class="page">
    <p>THE SETUP</p>
    <p>Clients/Core : 2</p>
    <p>QD/client : 16</p>
    <p>Independent remote dVol</p>
  </div>
  <div class="page">
    <p>Local Decibel (DPDK) Decibel (Legacy)</p>
    <p>Local Decibel (DPDK) Decibel (Legacy)</p>
    <p>Performance (70/30 Mixed Workload)</p>
    <p>Throughput (K IOPS) Latency (s)</p>
    <p>Number of Cores Number of Cores</p>
  </div>
  <div class="page">
    <p>Local Decibel (DPDK) Decibel (Legacy)</p>
    <p>Local Decibel (DPDK) Decibel (Legacy)</p>
    <p>Performance (All Reads Workload)</p>
    <p>Throughput (K IOPS) Latency (s)</p>
    <p>Number of Cores Number of Cores</p>
  </div>
  <div class="page">
    <p>La te nc y ( s)</p>
    <p>SINGLE CORE PERFORMANCE</p>
    <p>Read (Idle) Read (Saturation) Mixed 70/30 (Idle) Mixed 70/30 (Saturation)</p>
    <p>Local Decibel</p>
  </div>
  <div class="page">
    <p>Local storage as a service</p>
    <p>Encapsulate full-system resources</p>
    <p>Isolation on shared storage</p>
  </div>
  <div class="page">
    <p>Backup Slides</p>
  </div>
  <div class="page">
    <p>Decibel (DPDK) Decibel (Legacy)</p>
    <p>Saturation: 23 vs 68s</p>
    <p>Decibel (DPDK) Decibel (Legacy)</p>
    <p>Performance (DRAM Backed Storage)</p>
    <p>Throughput (K IOPS) Latency (s)</p>
    <p>Number of Cores Number of Cores</p>
  </div>
  <div class="page">
    <p>LATENCY CONSISTENCY (READS)</p>
    <p>Throughput Avg. Latency 95th Percentile</p>
    <p>Th ro ug hp</p>
    <p>ut (K</p>
    <p>IO PS )</p>
    <p>La te nc y ( s)</p>
    <p>Queue Depth</p>
  </div>
  <div class="page">
    <p>LATENCY CONSISTENCY (WRITES)</p>
    <p>Throughput Avg. Latency 95th Percentile</p>
    <p>Th ro ug hp</p>
    <p>ut (K</p>
    <p>IO PS )</p>
    <p>La te nc y ( s)</p>
    <p>Queue Depth</p>
  </div>
</Presentation>
