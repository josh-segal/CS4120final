<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Time Slicing in Mobile TV Broadcast Networks with Arbitrary Channel Bit Rates</p>
    <p>Cheng-Hsin Hsu</p>
    <p>Joint work with Mohamed Hefeeda</p>
    <p>April 23, 2009</p>
    <p>Simon Fraser University, Canada</p>
  </div>
  <div class="page">
    <p>Outline 2</p>
    <p>Motivation  Problem</p>
    <p>Saving energy in mobile TV networks  Solution and Analysis</p>
    <p>Efficient approximation algorithm  Evaluation</p>
    <p>With simulations and a real testbed  Conclusion</p>
  </div>
  <div class="page">
    <p>Mobile TV Service 3</p>
    <p>Watch TV anywhere, and anytime  users: watch more programs  providers: higher revenues</p>
    <p>Broadcast over cellular networks  but they are: (i) designed for unicast, and (ii)</p>
    <p>narrowband</p>
  </div>
  <div class="page">
    <p>Mobile TV Broadcast Networks 4</p>
    <p>T-DMB: Terrestrial Digital Media Broadcasting  Started in South Korea  Limited bandwidth (&lt; 1.8 Mbps)</p>
    <p>DVB-H: Digital Video Broadcast  Handheld  Extends DVB-T to support mobile devices  High bandwidth (&lt; 25 Mbps), energy saving, error</p>
    <p>protection, efficient handoff, .  Open standard</p>
    <p>MediaFLO: Media Forward Link Only  Similar to DVB-H, but proprietary (QualComm)</p>
  </div>
  <div class="page">
    <p>Mobile TV Receivers 5</p>
    <p>Different from TV sets:  Mobile and wireless  Small displays  Battery powered</p>
    <p>Energy consumption is critical on mobile devices  Mobile TV chip consumes 40% energy  our</p>
    <p>measurements on Nokia N96 phones  Broadcast standards dictate mechanisms to save energy</p>
  </div>
  <div class="page">
    <p>Outline 6</p>
    <p>Motivation  Problem</p>
    <p>Saving energy in mobile TV networks  Solution and Analysis</p>
    <p>Efficient approximation algorithm  Evaluation</p>
    <p>With simulations and a real testbed  Conclusion</p>
  </div>
  <div class="page">
    <p>Problem Statement 7</p>
    <p>Optimally broadcast multiple TV channels over a shared air medium to minimize energy consumption on mobile devices</p>
  </div>
  <div class="page">
    <p>This is called Time Slicing (in DVB-H and MediaFLO)  Need to construct feasible burst schedules</p>
    <p>No conflicts between bursts for different TV channels  No receiver buffer violations (under/overflow instances)</p>
    <p>Burst scheduling algorithm for base stations</p>
    <p>Energy Saving for Mobile Devices</p>
    <p>Time</p>
    <p>Bit Rate</p>
    <p>R</p>
    <p>r</p>
    <p>Off</p>
    <p>Burst Overhead To</p>
  </div>
  <div class="page">
    <p>Burst Scheduling</p>
    <p>Easy if all TV channels have same bit rate  Currently used in many deployed networks</p>
    <p>Simple, but not efficient (visual quality &amp; bw utilization)  TV channels broadcast different programs (sports, series,</p>
    <p>talk shows, )  different visual/motion complexity</p>
    <p>Time</p>
    <p>R</p>
    <p>Bit Rate</p>
    <p>Frame p</p>
  </div>
  <div class="page">
    <p>The Need for Different Bit Rates</p>
    <p>Wide variations in quality (PSNR), as high as 1020 dB</p>
    <p>Encode multiple video sequences using H.264/AVC codec at various bit rates, measure quality</p>
  </div>
  <div class="page">
    <p>Constructing a feasible schedule becomes difficult  Different TV channels may have diverse and varying</p>
    <p>burst sizes</p>
    <p>Burst Scheduling - Revisit</p>
    <p>Time</p>
    <p>R</p>
    <p>Bit Rate</p>
    <p>Frame p</p>
  </div>
  <div class="page">
    <p>Theorem: Burst Scheduling to minimize energy consumption for TV channels with arbitrary bit rates is NP-Complete</p>
    <p>Proof Sketch:  We show that minimizing energy consumption is the</p>
    <p>same as minimizing number of bursts  Then, we reduce the task sequencing problem with</p>
    <p>release times and deadlines problem to it  We can not optimally solve it in real time</p>
    <p>Harness 12</p>
  </div>
  <div class="page">
    <p>Outline 13</p>
    <p>Motivation  Problem</p>
    <p>Saving energy on mobile devices in mobile TV networks  Solution and Analysis</p>
    <p>Efficient approximation algorithm  Evaluation</p>
    <p>With simulations and a real testbed  Conclusion</p>
  </div>
  <div class="page">
    <p>Hardness is due to tightly-coupled constraints: no burst collisions &amp; no buffer violations  could not use previous machine scheduling solutions,</p>
    <p>because they will produce buffer violations</p>
    <p>Solution Approach - Observation 14</p>
    <p>Time</p>
    <p>B u ff</p>
    <p>er F</p>
    <p>u ll</p>
    <p>n es</p>
    <p>s</p>
    <p>Time</p>
    <p>B u</p>
    <p>ff er</p>
    <p>F u</p>
    <p>ll n es</p>
    <p>s</p>
    <p>Buffer Underflow Time</p>
    <p>B u ff</p>
    <p>er F</p>
    <p>u ll</p>
    <p>n es</p>
    <p>s Buffer Overflow</p>
  </div>
  <div class="page">
    <p>Decouple them!  Transform problem to a buffer violation-free</p>
    <p>problem  Any feasible schedule in the transformed problem</p>
    <p>leads to no buffer violations in the original problem  Solve the transformed problem efficiently  Convert the schedule back to the original problem  Ensure correctness and bound optimality gap in all</p>
    <p>steps</p>
    <p>Solution Approach  Our Idea 15</p>
  </div>
  <div class="page">
    <p>Transform idea  Divide receiver buffer into two: B and B  Divide each scheduling frame p into multiple subframes  Drain B while filling B and vice versa</p>
    <p>Transformed Problem  Schedule bursts, so that bits consumed in the current</p>
    <p>subframe = bits received in the preceding subframe</p>
    <p>Double Buffering Transform</p>
    <p>B u f</p>
    <p>B B</p>
    <p>u f</p>
    <p>B</p>
    <p>F u ll</p>
    <p>n es</p>
    <p>s</p>
    <p>Fill</p>
    <p>Drain Fill</p>
    <p>Drain Fill</p>
    <p>Drain</p>
  </div>
  <div class="page">
    <p>DBS Algorithm: Pseudocode 17</p>
  </div>
  <div class="page">
    <p>Theorem: Any feasible schedule for the transformed problem is a valid schedule for the original problem.  Also a schedule will be found iff one exists.</p>
    <p>Theorem: The approximation factor is:</p>
    <p>How good is this?</p>
    <p>Correctness and Performance 18</p>
  </div>
  <div class="page">
    <p>20 channels (R = 7.62 Mbps), energy saving achieved by the algorithm is 5% less than the optimal</p>
    <p>Approximation Factor 19</p>
  </div>
  <div class="page">
    <p>Outline 20</p>
    <p>Motivation  Problem</p>
    <p>Saving energy in mobile TV networks  Solution and Analysis</p>
    <p>Efficient approximation algorithm  Evaluation</p>
    <p>With simulations and a real testbed  Conclusion</p>
  </div>
  <div class="page">
    <p>Testbed for DVB-H Networks 21</p>
  </div>
  <div class="page">
    <p>Broadcast 12 TV channels</p>
    <p>Empirical Evaluation</p>
    <p>No buffer violations</p>
    <p>Notice the buffer dynamics are different</p>
  </div>
  <div class="page">
    <p>Compare against a conservative upper bound  Broadcast channels one by one</p>
    <p>Near-Optimality in Energy Saving</p>
    <p>Gap &lt; 7%</p>
  </div>
  <div class="page">
    <p>Running time for a 10-sec window is &lt; 100 msec on commodity PC for broadcasting channels saturating the air medium</p>
    <p>Efficiency 24</p>
  </div>
  <div class="page">
    <p>Outline 25</p>
    <p>Motivation  Problem</p>
    <p>Saving energy in mobile TV networks  Solution and Analysis</p>
    <p>Efficient approximation algorithm  Evaluation</p>
    <p>With simulations and a real testbed  Conclusion</p>
  </div>
  <div class="page">
    <p>Considered the problem of broadcasting multiple TV channels to maximize energy saving on mobile devices</p>
    <p>Showed the problem is NP-Complete  Proposed a near-optimal algorithm to solve it  Achieves close to 1 approximation factor under</p>
    <p>typical network parameters  Evaluated the algorithm with simulations and a real</p>
    <p>mobile TV testbed</p>
    <p>Conclusion 26</p>
  </div>
  <div class="page">
    <p>Questions? 27</p>
    <p>Thank you!</p>
    <p>More details can be found online at http://nsl.cs.sfu.ca</p>
  </div>
</Presentation>
