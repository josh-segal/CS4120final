<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>STRUCTURED COMPARATIVE ANALYSIS OF SYSTEMS LOGS TO DIAGNOSE PERFORMANCE PROBLEMS</p>
    <p>Karthik Nagaraj Charles Killian Jennifer Neville Computer Science</p>
    <p>Purdue University</p>
  </div>
  <div class="page">
    <p>Distributed Systems: BitTorrent 2</p>
    <p>Download Time (sec)</p>
    <p>CDF</p>
    <p>TRANSMISSION!</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>BitTorrent: Compare Piece Times 3</p>
    <p>Per-piece Download Time (sec)</p>
    <p>CDF</p>
    <p>TRANSMISSION!</p>
    <p>sed! awk! grep!</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>BitTorrent: Compare Logs 4</p>
    <p>TRANSMISSION!</p>
    <p>Peer nodes</p>
    <p>Difficulties:  Non-determinism  Concurrency</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>BitTorrent: Compare Logs 5</p>
    <p>Compare 14 MB 19 MB</p>
    <p>Peer nodes</p>
    <p>TRANSMISSION!</p>
    <p>Difficulties:  Non-determinism  Concurrency</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>BitTorrent: Compare Logs 6</p>
    <p>Compare</p>
    <p>TRANSMISSION!</p>
    <p>Difficulties:  Non-determinism  Concurrency  Large volume of</p>
    <p>logs</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>Related Work: Performance Debugging 7</p>
    <p>Detection Diagnosis</p>
    <p>MAGPIE [Barham et. al. OSDI 2004]</p>
    <p>SPECTROSCOPE [Sambasivan et. al. NSDI 2011]</p>
    <p>DISTALYZER</p>
    <p>Request Processing</p>
    <p>Detecting System Problems Mining Console Logs</p>
    <p>[Xu et. al. SOSP 2009]</p>
    <p>Correlating instrumentation data to system states</p>
    <p>[Cohen et. al. SOSP 2004]</p>
    <p>MACEPC [Killian. et. al. FSE 2010]</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>Distalyzer Highlights</p>
    <p>Practical  Existing logs</p>
    <p>Automatic  Machine Learning</p>
    <p>For non-expert developers</p>
    <p>Identifies:  Significant divergences  Impact on Performance</p>
    <p>Successful demonstration</p>
    <p>DISTALYZER diagnoses performance</p>
    <p>TRANSMISSION!</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>Design of Distalyzer</p>
    <p>Feature creation  Extract behaviors influencing</p>
    <p>overall performance</p>
    <p>Predictive modeling  Find distinguishing features</p>
    <p>Descriptive modeling  Component interactions</p>
    <p>Attention focusing  Root cause description</p>
    <p>Logs</p>
    <p>State Event</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>Fully structured logging</p>
    <p>Code Instrumentation</p>
    <p>Systems already have logging  Categorize logs</p>
    <p>Free text logging</p>
    <p>log4j  printf</p>
    <p>Pip [1]  Xtrace [2]</p>
    <p>Practical</p>
    <p>Detailed</p>
    <p>Received BT_PIECE!for block 1058!</p>
    <p>Speed: 237 KiB/s / 0 KiB/s!</p>
    <p>Progress: 25.05%!</p>
    <p>Middle-ground</p>
    <p>Event logs: some event happened</p>
    <p>State logs: value of system variable</p>
    <p>[1]: Reynolds et. al. NSDI 2006  [2]: Fonseca et. al. NSDI 2007 Nagaraj, Killian and Neville</p>
    <p>By post-processing logs</p>
  </div>
  <div class="page">
    <p>Design: Feature Creation 11</p>
    <p>Time</p>
    <p>First Median Last</p>
    <p>E.g. receive_bt_piece Events</p>
    <p>Relative {First, Median, Last}</p>
    <p>Count</p>
    <p>List of Timestamps</p>
    <p>Longer execution Log file</p>
    <p>Capture summarized log characteristics of complete execution</p>
    <p>Time Normalized</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>Design: Feature Creation 12</p>
    <p>E.g. Download speed (KB/s)!List of Values {42,204,191,,55}</p>
    <p>Quarter Snapshots +Relative</p>
    <p>Time</p>
    <p>Minimum</p>
    <p>Average</p>
    <p>Maximum</p>
    <p>Final</p>
    <p>States</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>Design: Predictive Modeling</p>
    <p>Which features differ most?  E.g. First(recv_bt_piece)  E.g. Max(Download speed)</p>
    <p>Welchs T-Test  Significance: Really different?  Magnitude of difference</p>
    <p>Rank significant variables</p>
    <p>Mean  Variance</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>How do system components interact?  Dependency networks [1]</p>
    <p>Example Feature</p>
    <p>Design: Descriptive Modeling 14</p>
    <p>A B</p>
    <p>D E</p>
    <p>C</p>
    <p>F</p>
    <p>A B</p>
    <p>D</p>
    <p>E</p>
    <p>C F</p>
    <p>A B</p>
    <p>D</p>
    <p>E</p>
    <p>C F</p>
    <p>Dependency graph</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>Nagaraj, Killian and Neville</p>
    <p>[1]: Heckerman et. al. JMLR 2001</p>
    <p>First occurrence Events</p>
    <p>: recv_bt_piece</p>
    <p>: sent_bt_piece</p>
    <p>: recv_bt_request</p>
    <p>Identify Dependencies</p>
    <p>Strength (edge)</p>
  </div>
  <div class="page">
    <p>A B D</p>
    <p>E</p>
    <p>C</p>
    <p>F G H</p>
    <p>Relative First</p>
    <p>A B D</p>
    <p>E</p>
    <p>C</p>
    <p>F G H</p>
    <p>Relative Median</p>
    <p>A B D</p>
    <p>E</p>
    <p>C</p>
    <p>F G H</p>
    <p>First</p>
    <p>A B D</p>
    <p>E</p>
    <p>C</p>
    <p>F G H</p>
    <p>Median</p>
    <p>A B D</p>
    <p>E</p>
    <p>C</p>
    <p>F G H</p>
    <p>Last A B D</p>
    <p>E</p>
    <p>C</p>
    <p>F G H</p>
    <p>Count</p>
    <p>Design: Attention Focusing</p>
    <p>Best smallest explanation of the problem</p>
    <p>Nagaraj, Killian and Neville</p>
    <p>A B D</p>
    <p>E</p>
    <p>C</p>
    <p>F G H</p>
    <p>Relative Last</p>
    <p>A B D</p>
    <p>E</p>
    <p>C</p>
    <p>F G H</p>
    <p>Feature type:  Performance metric</p>
  </div>
  <div class="page">
    <p>Design: Attention Focusing</p>
    <p>Score divergence and dependence equally</p>
    <p>A B D</p>
    <p>E</p>
    <p>C</p>
    <p>H</p>
    <p>Performance metric: B</p>
    <p>Remove weak edges</p>
    <p>Max spanning tree</p>
    <p>Final Score= w(node) * w(edge)</p>
    <p>F G</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>Implementation</p>
    <p>Parsers for text logs  Distalyzer API to categorize logs  Small (&lt;100 lines Perl/Python)  One-time</p>
    <p>Distalyzer  4000 lines of code in Python &amp; C++  Offline usage, Highly parallel  Web frontend using JavaScript</p>
    <p>Helps explore logs  Publicly available</p>
    <p>DISTALYZER</p>
    <p>Logs</p>
    <p>Parser</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>Diagnosis Case Studies</p>
    <p>TritonSort (Sorting) [NSDI 2011]  Different versions</p>
    <p>HBase (BigTable)  Different requests</p>
    <p>Transmission (BitTorrent)  Different implementations</p>
    <p>TRANSMISSION!</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>TritonSort (Different Versions) 19</p>
    <p>Suddenly 74% slower on a day  Baseline: Faster execution with same workload  Diagnosed in 3-4hrs</p>
    <p>Manual debugging took the better part of 2 days</p>
    <p>Nightly builds</p>
    <p>Performance Fast Slow</p>
    <p>Nagaraj, Killian and Neville</p>
    <p>Disclaimer: This plot was generated using fictitious data, and is only meant for illustration purposes.</p>
  </div>
  <div class="page">
    <p>Cache</p>
    <p>TritonSort</p>
    <p>Writer_1 run</p>
    <p>Finish</p>
    <p>Writer_5 run</p>
    <p>Runtime</p>
    <p>Writer_0 write_size</p>
    <p>Writer_2 write_size Writer_5 write_size</p>
    <p>Writer_1 write_size</p>
    <p>Writer_4 write_size Writer_7 write_size</p>
    <p>Writer_6 write_size</p>
    <p>Writer is significant  Outputs to disk</p>
    <p>Events States</p>
    <p>Hard disk drive</p>
    <p>Writer module Write-through</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>HBase (Different Requests) 21</p>
    <p>Yahoo Cloud Storage Benchmark  1Million operations: 95% reads, 5% writes</p>
    <p>Baseline: Fast requests in same execution</p>
    <p>15msec  100msec</p>
    <p>Fast Slow</p>
    <p>Nagaraj, Killian and Neville</p>
    <p>CDF</p>
  </div>
  <div class="page">
    <p>HBase: Slow Outliers 22</p>
    <p>client.HTable.get_lookup suspicious  Code just preceding this log  Region (Tablet) lookup by the client</p>
    <p>HBaseClient.post_get</p>
    <p>client.HTable.get</p>
    <p>client.HTable.get_lookup</p>
    <p>regionserver.HRegionServer.get</p>
    <p>regionserver.HRegion .get_results</p>
    <p>regionserver.HRegion.get</p>
    <p>regionserver.StoreScanner _seek_end</p>
    <p>regionserver.StoreScanner _seek_start</p>
    <p>Events</p>
    <p>Edge triggered divergence increase</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>HBase: Root Cause 23</p>
    <p>Client</p>
    <p>Tablet server</p>
    <p>Master</p>
    <p>I do not serve this tablet anymore!</p>
    <p>Request Row(r)!</p>
    <p>Success</p>
    <p>Server failed</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>BitTorrent (Different Implementations) 24</p>
    <p>Transmission 20% slower than Azureus  Baseline: the Azureus implementation</p>
    <p>TRANSMISSION!</p>
    <p>Download Time (sec)</p>
    <p>Fast Slow</p>
    <p>CDF</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>Finish Recv Bt_Piece</p>
    <p>Announce</p>
    <p>Recv Bt_Unchoke</p>
    <p>Sent Bt_RequestSent Bt_Have</p>
    <p>Sent Bt_Interested</p>
    <p>BitTorrent: Transmission 25</p>
    <p>Dependency graph for Last feature  Sent_Bt_Interested lags in Transmission  A timer initiates this log</p>
    <p>Events</p>
    <p>Control flow</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>Interested</p>
    <p>Transmission: Root Cause 26</p>
    <p>I am interested I am interested I am interested</p>
    <p>Interested Interested Interested Interested Interested</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Diagnose performance problems by comparing against baseline</p>
    <p>Different implementations, runs and requests  DISTALYZER automatically diagnoses performance  Successful in 3 mature &amp; popular distributed systems</p>
    <p>DISTALYZER is free software http://www.macesystems.org/distalyzer!</p>
    <p>NSDI 2012 Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>Backup slides 28</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>Facts of Life 29</p>
    <p>Need enough samples  For statistical significance</p>
    <p>Similar execution environments  Experimental artifact or performance problem?  Can be relaxed with developer annotations</p>
    <p>Needs log data to succeed!  Performance overheads from logging  Logs should contain the bug</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>Transmission Fixed 30</p>
    <p>288.0 sec Transmission vs. 287.7 sec Azureus</p>
    <p>Download Time (sec)</p>
    <p>CDF</p>
    <p>TRANSMISSION!</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>Clock Synchrony 31</p>
    <p>Responsibility of the instrumentation framework  Relative synchrony</p>
    <p>Master can broadcast START, and all nodes log it</p>
    <p>No, if granularity is already small</p>
    <p>Nagaraj, Killian and Neville</p>
  </div>
  <div class="page">
    <p>Related work (2)</p>
    <p>Nagaraj, Killian and Neville</p>
    <p>NetMedic [Kandula et. Al. SIGCOMM 2009]  Giza [Mahimkar et. al. SIGCOMM 2009]  WISE [Tariq et. al. SIGCOMM 2008]  DISTALYZER</p>
    <p>Software problems  Inter-component Dependencies and faults</p>
  </div>
  <div class="page">
    <p>Diagnosed Performance Problems</p>
    <p>Nagaraj, Killian and Neville</p>
    <p>TritonSort  Hard disk loose cache battery (previously diagnosed)</p>
    <p>Hbase (22%)  Tablet server lookup mishandled  Linux default disk scheduler (CFQ)  Network slowdown (Nagles algorithm)</p>
    <p>Transmission (45%)  Same-IP peers mishandled  Sent BT_Interested timer</p>
  </div>
</Presentation>
