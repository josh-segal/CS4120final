<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>ORION: A Distributed File System for Non-Volatile Main Memories and RDMA-Capable Networks</p>
    <p>Jian Yang, Joseph Izraelevitz, Steven Swanson</p>
    <p>Non-Volatile Systems Laboratory</p>
    <p>Department of Computer Science &amp; Engineering</p>
    <p>University of California, San Diego</p>
  </div>
  <div class="page">
    <p>RDMA Network</p>
    <p>PCM, STT-RAM, ReRAM, Intel 3DXPoint</p>
    <p>Performant: DRAM-class latency/BW</p>
    <p>Byte-addressable</p>
    <p>Persistent over power failures</p>
    <p>Non-Volatile Main Memory (NVMM)</p>
    <p>Accessing NVMM as Remote Storage</p>
    <p>Application</p>
    <p>MemoryDRAM NVMM</p>
    <p>Remote Direct Memory Access (RDMA)</p>
    <p>DMA from/to remote memory</p>
    <p>Two-sided verbs (Send/Recv)</p>
    <p>One-sided verbs (Read/Write)</p>
    <p>Bypasses remote CPU</p>
    <p>Byte-addressable</p>
    <p>Application</p>
    <p>DRAM NVMM</p>
    <p>Application</p>
    <p>DRAM NVMM</p>
    <p>Application</p>
    <p>DRAM NVMM</p>
  </div>
  <div class="page">
    <p>Accessing Local NVMM vs. Remote NVMM</p>
    <p>Latency of write(4KB) + fsync()</p>
    <p>NVMMFS</p>
    <p>iSCSI/RDMA</p>
    <p>Ceph/RDMA</p>
    <p>NVMMFS</p>
    <p>Ceph/RDMA</p>
    <p>iSCSI/RDMA</p>
    <p>Throughput of fileserver workload</p>
    <p>Distributed FS</p>
    <p>Application</p>
    <p>NVMM</p>
    <p>Distributed FS</p>
    <p>Access remote NVMM over Dist. FS</p>
    <p>Application</p>
    <p>NVMM</p>
    <p>NVMM FS</p>
    <p>Access local NVMM</p>
    <p>RDMA</p>
    <p>(NOVA)</p>
    <p>(NOVA)</p>
    <p>Better</p>
    <p>Better</p>
  </div>
  <div class="page">
    <p>Issue #1: Existing Dist. FSs are Slow on NVMM</p>
    <p>Layered Design</p>
    <p>Indirection overhead</p>
    <p>Expensive to persist (e.g., fsync())</p>
    <p>RPC Storage ServerStorage Client</p>
    <p>Application</p>
    <p>File System</p>
    <p>NVMM</p>
    <p>File Access</p>
    <p>File Access</p>
    <p>Block Access</p>
    <p>Kernel</p>
    <p>User</p>
    <p>File System/FUSE</p>
    <p>File Request</p>
  </div>
  <div class="page">
    <p>NVMM is Faster than RDMA</p>
    <p>RDMA Network NVMM</p>
    <p>Latency</p>
    <p>Bandwidth</p>
    <p>Access Size</p>
    <p>Harddrive (NVMe)</p>
    <p>Networking is faster than storage</p>
    <p>&gt;&gt;</p>
    <p>&lt;</p>
  </div>
  <div class="page">
    <p>NVMM is Faster than RDMA</p>
    <p>RDMA Network NVMM</p>
    <p>Latency</p>
    <p>Bandwidth</p>
    <p>Access Size</p>
    <p>Harddrive (NVMe)</p>
    <p>&gt;&gt;</p>
    <p>&lt;</p>
    <p>NVMM is faster than networking</p>
  </div>
  <div class="page">
    <p>Issue #2: Lack of Support for Local NVMM</p>
    <p>NVMM FS</p>
    <p>Storage Server Storage Client</p>
    <p>Application</p>
    <p>File System</p>
    <p>Remote NVMMLocal NVMM</p>
    <p>RDMA</p>
    <p>Page Cache</p>
    <p>Use case of converged storage</p>
    <p>Local NVMM supports Direct Access (DAX)</p>
    <p>Existing systems do not store data at local</p>
    <p>Run Local FS and Dist. FS</p>
    <p>Expensive to move data DAX</p>
  </div>
  <div class="page">
    <p>ORION: A Distributed File System for NVMM and RDMA-Capable Networks</p>
    <p>A clean slate design for NVMM and RDMA</p>
    <p>A unified layer: kernel FS + networking</p>
    <p>Pooled NVMM storage</p>
    <p>Accessing metadata/data directly over</p>
    <p>Direct Access (DAX) and RDMA</p>
    <p>Designed for rack-scale scalability</p>
    <p>ORION</p>
    <p>Application Application</p>
    <p>RDMA AccessDAX Access</p>
    <p>POSIX I/O</p>
    <p>NVMM NVMMPooled NVMM</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background</p>
    <p>Design overview</p>
    <p>Metadata and data management</p>
    <p>Replication</p>
    <p>RDMA persistence</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Data Store Data Store</p>
    <p>Data Store</p>
    <p>Data</p>
    <p>Client Client</p>
    <p>Client</p>
    <p>MDS</p>
    <p>Metadata</p>
    <p>ORION: Cluster Overview</p>
    <p>Sync/Update</p>
    <p>DAX Read/Write</p>
    <p>RDMA Read/Write</p>
    <p>Metadata Server (MDS): Runs ORIONFS,</p>
    <p>keeps authoritative metadata of the whole FS</p>
    <p>Client: Runs ORIONFS, keeps active metadata</p>
    <p>and cached data. Access local NVMM</p>
    <p>Data Store (DS): Pooled NVMM data</p>
    <p>Metadata Access: Clients &lt;=&gt; MDS (Two-sided)</p>
    <p>Data Access: Clients =&gt; DSs (One-sided)</p>
    <p>NVMM</p>
    <p>DRAM</p>
    <p>NVMM</p>
    <p>Metadata</p>
    <p>Data $</p>
    <p>Data</p>
  </div>
  <div class="page">
    <p>The ORION File System</p>
    <p>Inherited from NOVA [Xu, FAST 16]</p>
    <p>Per-inode metadata (operation) log</p>
    <p>Build in-DRAM data structures on recovery</p>
    <p>Atomic log append</p>
    <p>Metadata:</p>
    <p>DMA (Physical) memory region (MR)</p>
    <p>RDMA-able metadata structures</p>
    <p>Data: Globally partitioned</p>
    <p>MDS MDS</p>
    <p>Client</p>
    <p>Data Store</p>
    <p>a</p>
    <p>b</p>
    <p>c</p>
    <p>VFS</p>
    <p>inodes</p>
    <p>dentries</p>
    <p>b</p>
    <p>c</p>
    <p>VFS</p>
    <p>inodes</p>
    <p>dentries</p>
    <p>Data $</p>
    <p>inode log</p>
    <p>inode log</p>
    <p>DataData [X][Y]</p>
    <p>[$]</p>
  </div>
  <div class="page">
    <p>Operations in ORION File System</p>
    <p>Open(a)  Allocate inode</p>
    <p>MDS</p>
    <p>Client</p>
    <p>a</p>
    <p>b</p>
    <p>c</p>
    <p>b</p>
    <p>c</p>
    <p>Data $</p>
    <p>inode log</p>
    <p>inode log</p>
    <p>Data[X]</p>
    <p>[$]</p>
    <p>RecvQ Client</p>
    <p>RPC: Open Path: a WAddr:&amp;alloc</p>
  </div>
  <div class="page">
    <p>Operations in ORION File System</p>
    <p>Open(a)  Allocate inode</p>
    <p>Issue an RPC via RDMA_Send</p>
    <p>MDS</p>
    <p>Client</p>
    <p>a</p>
    <p>b</p>
    <p>c</p>
    <p>b</p>
    <p>c</p>
    <p>Data $</p>
    <p>inode log</p>
    <p>inode log</p>
    <p>Data[X]</p>
    <p>[$]</p>
    <p>RecvQ Client</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>Operations in ORION File System</p>
    <p>Open(a)  Allocate inode</p>
    <p>Issue an RPC via RDMA_Send  RDMA_Write to allocated space</p>
    <p>MDS</p>
    <p>Client</p>
    <p>a</p>
    <p>b</p>
    <p>c</p>
    <p>b</p>
    <p>c</p>
    <p>Data $</p>
    <p>inode log</p>
    <p>inode log</p>
    <p>Data[X]</p>
    <p>[$]</p>
    <p>RecvQ</p>
    <p>a MDS</p>
    <p>Client</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>Operations in ORION File System</p>
    <p>Open(a)  Allocate inode</p>
    <p>Issue an RPC via RDMA_Send  RDMA_Write to allocated space  RDMA_Read the rest of the log</p>
    <p>MDS</p>
    <p>Client</p>
    <p>a</p>
    <p>b</p>
    <p>c</p>
    <p>b</p>
    <p>c</p>
    <p>Data $</p>
    <p>inode log</p>
    <p>inode log</p>
    <p>Data[X]</p>
    <p>[$]</p>
    <p>RecvQ</p>
    <p>a MDS</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>a</p>
    <p>Operations in ORION File System</p>
    <p>Write(c)  Allocate &amp; CoW to client-owned pages</p>
    <p>MDS</p>
    <p>Client</p>
    <p>b</p>
    <p>c</p>
    <p>b</p>
    <p>c</p>
    <p>Data $</p>
    <p>inode log</p>
    <p>inode log</p>
    <p>Data[X]</p>
    <p>[$]</p>
    <p>RecvQ</p>
    <p>a</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>Operations in ORION File System</p>
    <p>Write(c)  Allocate &amp; CoW to client-owned pages</p>
    <p>Append log entry</p>
    <p>MDS</p>
    <p>Client</p>
    <p>b</p>
    <p>c</p>
    <p>b</p>
    <p>c</p>
    <p>Data $</p>
    <p>inode log</p>
    <p>inode log</p>
    <p>Data[X]</p>
    <p>[$]</p>
    <p>RecvQ</p>
    <p>a</p>
    <p>a</p>
    <p>Client</p>
    <p>Client</p>
    <p>Log: FileWrite Addr=(X,addr) Size=4096</p>
  </div>
  <div class="page">
    <p>Operations in ORION File System</p>
    <p>Write(c)  Allocate &amp; CoW to client-owned pages</p>
    <p>Append log entry</p>
    <p>Commit log entry via RDMA_Send</p>
    <p>MDS</p>
    <p>Client</p>
    <p>b</p>
    <p>c</p>
    <p>b</p>
    <p>c</p>
    <p>Data $</p>
    <p>inode log</p>
    <p>inode log</p>
    <p>Data[X]</p>
    <p>[$]</p>
    <p>RecvQ</p>
    <p>a</p>
    <p>a</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>Log: FileWrite Addr=(X,addr) Size=4096</p>
  </div>
  <div class="page">
    <p>Operations in ORION File System</p>
    <p>Write(c)  Allocate &amp; CoW to client-owned pages</p>
    <p>Append log entry</p>
    <p>Commit log entry via RDMA_Send  Append log entry</p>
    <p>MDS</p>
    <p>Client</p>
    <p>b</p>
    <p>c</p>
    <p>b</p>
    <p>c</p>
    <p>Data $</p>
    <p>inode log</p>
    <p>inode log</p>
    <p>Data[X]</p>
    <p>[$]</p>
    <p>RecvQ</p>
    <p>a</p>
    <p>a</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>MDS</p>
    <p>Log: FileWrite Addr=(X,addr) Size=4096</p>
  </div>
  <div class="page">
    <p>Operations in ORION File System</p>
    <p>Write(c)  Allocate &amp; CoW to client-owned pages</p>
    <p>Append log entry</p>
    <p>Commit log entry via RDMA_Send  Append log entry</p>
    <p>Update tail pointers atomically</p>
    <p>MDS</p>
    <p>Client</p>
    <p>b</p>
    <p>c</p>
    <p>b</p>
    <p>c</p>
    <p>Data $</p>
    <p>inode log</p>
    <p>inode log</p>
    <p>Data[X]</p>
    <p>[$]</p>
    <p>RecvQ</p>
    <p>a</p>
    <p>a MDSClient</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
    <p>MDS</p>
    <p>Log: FileWrite Addr=(X,addr) Size=4096</p>
  </div>
  <div class="page">
    <p>Operations in ORION File System</p>
    <p>Tailcheck(b)  Log commit from another client</p>
    <p>MDS</p>
    <p>Client</p>
    <p>b</p>
    <p>c</p>
    <p>b</p>
    <p>c</p>
    <p>Data $</p>
    <p>inode log</p>
    <p>inode log</p>
    <p>Data[X]</p>
    <p>[$]</p>
    <p>RecvQ</p>
    <p>a</p>
    <p>MDS</p>
  </div>
  <div class="page">
    <p>Operations in ORION File System</p>
    <p>Tailcheck(b)  Log commit from another client</p>
    <p>RDMA_Read remote log tail</p>
    <p>MDS</p>
    <p>Client</p>
    <p>b</p>
    <p>c</p>
    <p>b</p>
    <p>c</p>
    <p>Data $</p>
    <p>inode log</p>
    <p>inode log</p>
    <p>Data[X]</p>
    <p>[$]</p>
    <p>RecvQ</p>
    <p>a</p>
    <p>MDS</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>Operations in ORION File System</p>
    <p>Tailcheck(b)  Log commit from another client</p>
    <p>RDMA_Read remote log tail  Read from MDS if Len(Local) &lt; Len(Remote)</p>
    <p>MDS</p>
    <p>Client</p>
    <p>b</p>
    <p>c</p>
    <p>b</p>
    <p>c</p>
    <p>Data $</p>
    <p>inode log</p>
    <p>inode log</p>
    <p>Data[X]</p>
    <p>[$]</p>
    <p>RecvQ</p>
    <p>a</p>
    <p>MDS</p>
    <p>Client</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>Data</p>
    <p>Operations in ORION File System</p>
    <p>Read(b)  Tailcheck (async)</p>
    <p>RDMA_Read from data store</p>
    <p>Data locality</p>
    <p>Future reads will hit DRAM cache</p>
    <p>Future writes will go to local NVMM</p>
    <p>MDS</p>
    <p>Client</p>
    <p>b</p>
    <p>c</p>
    <p>b</p>
    <p>c</p>
    <p>Data $</p>
    <p>inode log</p>
    <p>inode log</p>
    <p>Data[X]</p>
    <p>[$]</p>
    <p>RecvQ</p>
    <p>a</p>
    <p>Data Store</p>
    <p>[Y]</p>
    <p>Type=FileWrite Addr=(Y,3) Size=4096</p>
    <p>Client</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>Type=FileWrite Addr=($,0) Size=4096</p>
    <p>Data</p>
    <p>Operations in ORION File System</p>
    <p>Read(b)  Tailcheck (async)</p>
    <p>RDMA_Read from data store  In-place update to log entry</p>
    <p>Data locality</p>
    <p>Future reads will hit DRAM cache</p>
    <p>Future writes will go to local NVMM</p>
    <p>MDS</p>
    <p>Client</p>
    <p>b</p>
    <p>c</p>
    <p>b</p>
    <p>c</p>
    <p>Data $</p>
    <p>inode log</p>
    <p>inode log</p>
    <p>Data[X]</p>
    <p>[$]</p>
    <p>RecvQ</p>
    <p>a</p>
    <p>Data Store</p>
    <p>[Y]</p>
    <p>Client</p>
    <p>Client</p>
    <p>Client</p>
  </div>
  <div class="page">
    <p>Accelerating Metadata Accesses</p>
    <p>Observations:</p>
    <p>RDMA prefers inbound operations [Su, EuroSys 17]</p>
    <p>RDMA prefers small operations [Kalia, ATC 16]</p>
    <p>MDS request handling:</p>
    <p>Tailcheck (8B RDMA_Read): MDS-bypass  Log Commit (~128B RDMA_Send): Single-inode operations  RPC (Varies): Other operations, less common</p>
    <p>One-sided RDMA</p>
    <p>RDMA Send</p>
    <p>Read [Inbound]</p>
    <p>Write[Outbound]</p>
    <p>Latency</p>
    <p>Throughtput</p>
  </div>
  <div class="page">
    <p>#1</p>
    <p>#1 #3 #3#3</p>
    <p>#1 #2</p>
    <p>#3#2#1#1</p>
    <p>#3#1</p>
    <p>Optimizing Log Commits</p>
    <p>Speculative log commit:</p>
    <p>Return when RDMA_Send verb is signaled</p>
    <p>Tailcheck before send</p>
    <p>Rebuild inode from log when necessary</p>
    <p>RPCs for complex operations (e.g.</p>
    <p>O_APPEND)</p>
    <p>Log commit + Persist: ~ 500 CPU Cycles</p>
    <p>C li</p>
    <p>e n</p>
    <p>t 1</p>
    <p>M D</p>
    <p>S C</p>
    <p>li e</p>
    <p>n t</p>
    <p>RecvQ</p>
    <p>inode log</p>
    <p>inode log</p>
    <p>MDS Tail</p>
    <p>Local Tail</p>
    <p>(memcpy) (flush+fence)</p>
    <p>Rebuild</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>ORION Prototype</p>
    <p>ORION kernel modules (~15K LOC)</p>
    <p>Linux Kernel 4.10</p>
    <p>RDMA Stack: MLNX_OFED 4.3</p>
    <p>Bind to 1 core for each client</p>
    <p>Networking</p>
    <p>12 Nodes connected to a switch</p>
    <p>InfiniBand Switch (QLogic 12300)</p>
    <p>Hardware</p>
    <p>2x Intel Westmere-EP CPU</p>
    <p>16GB DRAM as DRAM</p>
    <p>32GB DRAM as NVMM</p>
    <p>RNIC: Mellanox ConnectX-2 VPI (40Gbps)</p>
  </div>
  <div class="page">
    <p>Create Mkdir Unlink Rmdir FIO 4K</p>
    <p>Read</p>
    <p>FIO 4K</p>
    <p>Write</p>
    <p>A c</p>
    <p>c e</p>
    <p>ss L</p>
    <p>a te</p>
    <p>n c</p>
    <p>y (u</p>
    <p>s)</p>
    <p>Orion vs. Distributed File Systems</p>
    <p>Orion Ceph Gluster</p>
    <p>Evaluation: File Operations</p>
    <p>Create Mkdir Unlink Rmdir FIO 4K</p>
    <p>Read</p>
    <p>FIO 4K</p>
    <p>Write</p>
    <p>Orion vs. Local File Systems</p>
    <p>Orion NOVA Ext4-DAX</p>
    <p>Better Better</p>
  </div>
  <div class="page">
    <p>Evaluation: Applications</p>
    <p>varmail fileserver webserver mongodb</p>
    <p>Th ro</p>
    <p>u g</p>
    <p>h p</p>
    <p>u t</p>
    <p>(R e</p>
    <p>la ti</p>
    <p>ve )</p>
    <p>Filebench workloads and MongoDB (YCSB-A) throughput (relative to NOVA)</p>
    <p>Orion NOVA Ext4-DAX Ceph Gluster Better</p>
  </div>
  <div class="page">
    <p>Evaluation: Metadata Accesses</p>
    <p>Th ro</p>
    <p>u g</p>
    <p>h p</p>
    <p>u t</p>
    <p>( R</p>
    <p>e la</p>
    <p>ti ve</p>
    <p>t o</p>
    <p>li e</p>
    <p>n t)</p>
    <p># Clients</p>
    <p>Relative throughput of metadata operations</p>
    <p>Tailcheck Log Commit RPC 0</p>
    <p>Th ro</p>
    <p>u g</p>
    <p>h p</p>
    <p>u t</p>
    <p>(M o</p>
    <p>p /</p>
    <p>s)</p>
    <p>Throughput of metadata operations</p>
    <p>Tailcheck Log Commit RPCBetter</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Existing distributed file systems lack of NVMM support and have significant</p>
    <p>software overhead</p>
    <p>ORION unifies the NVMM file system and the networking layer</p>
    <p>ORION provides fast metadata accesses</p>
    <p>ORION allows DAX to local NVMM data</p>
    <p>Performance comparable to local NVMM file systems</p>
  </div>
</Presentation>
