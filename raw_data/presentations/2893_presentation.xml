<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>MLOp Lifecycle Scheme for Vision-based Inspection Process in Manufacturing</p>
    <p>May 20, 2019</p>
    <p>Junsung Lim, Hoejoo Lee, Youngmin Won, Hunje Yeon</p>
    <p>OpML 19</p>
  </div>
  <div class="page">
    <p>Can you identify a defect?</p>
    <p>DEFECT</p>
    <p>NORMAL</p>
    <p>Vision-based Inspection: A process of visually checking products for compliance</p>
    <p>with specifications and requirements</p>
  </div>
  <div class="page">
    <p>ML in Manufacturing</p>
    <p>Attractive field for ML operation</p>
    <p>Lots of data Over 3,000 GB image data is captured from a single product part a day (Samsung).</p>
    <p>Trivial and repeated tasks Missing part inspection, dent inspection are trivial and error-prone tasks.</p>
    <p>Boost productivity</p>
  </div>
  <div class="page">
    <p>ML in Manufacturing</p>
    <p>ML in manufacturing requires a different set of tools for different stakeholders</p>
    <p>However, ML operation is difficult</p>
    <p>Raw data Data cleansing and labeling are required.</p>
    <p>Lots of tasks in parallel A single ML inference server can not handle all requests.</p>
    <p>Multiple stakeholders Product inspector, product manager, operations manager, ML model developer, etc.</p>
    <p>Need for re-training and/or transfer learning Things change. Inspection policy and/or product may change.</p>
  </div>
  <div class="page">
    <p>Key stakeholders in manufacturing</p>
    <p>Proposed Scheme</p>
    <p>Product inspector</p>
    <p>Inspects products visually Has a domain knowledge</p>
    <p>Model developer</p>
    <p>Designs and trains a deep neural network An expert in machine learning</p>
    <p>Product manager</p>
    <p>Responsible for the overall product lifecycle Monitors inspection model results</p>
    <p>Operations manager</p>
    <p>Responsible for the entire manufacturing operation ML operation is adapted under supervision</p>
  </div>
  <div class="page">
    <p>Key components for vision inspection systems</p>
    <p>Proposed Scheme</p>
    <p>Inspection edge #1 Storage Service</p>
    <p>ML Engine</p>
    <p>Inspection edge #2 Storage Service</p>
    <p>ML Engine</p>
    <p>Model Trainer</p>
    <p>Edge manager</p>
    <p>Storage Manager</p>
    <p>Management Service</p>
    <p>Data Labeler</p>
    <p>Product mgr. Model dev.</p>
    <p>Operation mgr.Inspector</p>
    <p>model flow data flow</p>
  </div>
  <div class="page">
    <p>Image labeling support for different tasks</p>
    <p>(classification, object detection, image segmentation)</p>
    <p>Mostly used by product inspectors as many require domain knowledge</p>
    <p>Data Labeler for Inspectors</p>
    <p>NORMAL DEFECT</p>
    <p>Inspection edge #1 Storage Service</p>
    <p>ML EngineModel Trainer</p>
    <p>Edge manager</p>
    <p>Storage Manager</p>
    <p>Management Service</p>
    <p>Data Labeler</p>
    <p>Intuitive user experience is very important</p>
  </div>
  <div class="page">
    <p>Design, train and test neural network with different sets of hyper-parameters</p>
    <p>Labeled data from Data Labeler is imported directly</p>
    <p>Model Trainer for Model Developers Inspection edge #1 Storage Service</p>
    <p>ML EngineModel Trainer</p>
    <p>Edge manager</p>
    <p>Storage Manager</p>
    <p>Management Service</p>
    <p>Data Labeler</p>
  </div>
  <div class="page">
    <p>A centralized edge manager to store data, deploy and monitor ML models in</p>
    <p>production Storage manager: stores all labeled data</p>
    <p>Management service: deploys and monitors models running on inspection edges</p>
    <p>Mostly used by product and operations managers Product manager: monitors defect ratio</p>
    <p>Operations manager: deploys (updated) model at right time</p>
    <p>Edge Manager for Managers Inspection edge #1 Storage Service</p>
    <p>ML EngineModel Trainer</p>
    <p>Edge manager</p>
    <p>Storage Manager</p>
    <p>Management Service</p>
    <p>Data Labeler</p>
  </div>
  <div class="page">
    <p>Inspection edge runs an inference Storage service: stores all image data locally</p>
    <p>ML engine: loads and runs ML model on captured image data</p>
    <p>Models are deployed to inspection edges under the operations managers</p>
    <p>supervision Model configuration, such as threshold, is configurable per edge</p>
    <p>Inspection Edge Inspection edge #1 Storage Service</p>
    <p>ML EngineModel Trainer</p>
    <p>Edge manager</p>
    <p>Storage Manager</p>
    <p>Management Service</p>
    <p>Data Labeler</p>
  </div>
  <div class="page">
    <p>Implemented the proposed scheme</p>
    <p>Evaluation</p>
    <p>Data Labeler</p>
    <p>Model Trainer</p>
    <p>Edge Manager</p>
    <p>Inspection Edge #1</p>
    <p>Inspection Edge #2</p>
  </div>
  <div class="page">
    <p>Applied to four production lines in two Samsung Electronics plants</p>
    <p>Defect detection accuracy improved by at least 32.8% (compared to the existing rule-based algorithms)</p>
    <p>Evaluation</p>
    <p>Inspection area Edges deployed DNN model (Backbone) DDA* improvement Avg. inference time** Scratch (smartphone) 88 Multi-class (ResNet50) 32.8% 760 ms Dent (smartphone) 52 One-class (GAN) 40.0% 998 ms Missing part (refrigerator) 9 Object detection (YOLO) 92.8% 1416 ms Missing part (washing machine) 9 Object detection (YOLO) 85.6% 1632 ms * Defect detection accuracy ** 2.60GHz CPU with 8GB RAM</p>
    <p>NORMAL DEFECT NORMAL DEFECT</p>
  </div>
  <div class="page">
    <p>Problem: Inspect refrigerator for missing bolt(s)</p>
    <p>Normal if two bolts are in place</p>
    <p>Defect otherwise</p>
    <p>Rule-based algorithms performed poorly</p>
    <p>Altering position, brightness, shape, etc.</p>
    <p>Solution: Object detection model to identify two bolts</p>
    <p>Case Study: Bolt Inspection</p>
    <p>NORMAL DEFECTNORMAL</p>
  </div>
  <div class="page">
    <p>Data Labeler</p>
    <p>Annotated bolts from about 4,000 training images</p>
    <p>Model Trainer</p>
    <p>Fine-tuned YOLOv2 (COCO dataset)</p>
    <p>Augmented data during training</p>
    <p>Edge Manager</p>
    <p>Deployed to 9 inspection edges</p>
    <p>Inspection edge</p>
    <p>Inspects refrigerator for a defect</p>
    <p>Case Study: Bolt Inspection</p>
  </div>
  <div class="page">
    <p>Inspection model worked well, until Camera orientation changed</p>
    <p>New refrigerator products are added</p>
    <p>False-positives</p>
    <p>So we re-trained and re-deployed the model Annotated additional 1,000 training images Fine-tuned from existing neural network</p>
    <p>Re-deployed to inspection edges</p>
    <p>Case Study: Bolt Inspection</p>
    <p>Inspection area Edges deployed DNN model (Backbone) DDA improvement Avg. inference time Missing part (refrigerator) 9 Object detection (YOLO) 92.8% 1416 ms</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Proposed ML operation lifecycle scheme for vision inspection systems in</p>
    <p>manufacturing</p>
    <p>ML models are easily re-trained and re-deployed to production</p>
    <p>Identified five key components and four stakeholders Data labeler for product inspector Model trainer for model developer</p>
    <p>Edge manager for product manager and operations manager</p>
    <p>Inspection edge for operations manager</p>
    <p>Future work Apply the scheme on other production lines</p>
    <p>Automate re-train, re-deploy operations</p>
  </div>
  <div class="page">
    <p>Thank you</p>
  </div>
</Presentation>
