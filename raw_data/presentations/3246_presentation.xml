<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>SUPOR: Precise and Scalable Sensitive User Input Detection</p>
    <p>for Android Apps</p>
    <p>Jianjun Huang, Zhichun Li, Xusheng Xiao, Zhenyu Wu, Kangjie Lu, Xiangyu Zhang, Guofei Jiang</p>
  </div>
  <div class="page">
    <p>Sensitive Data Disclosures</p>
    <p>Disclosed to public</p>
    <p>Hijacked/maliciously retrieved</p>
  </div>
  <div class="page">
    <p>Sensitive Data Disclosures</p>
    <p>Local Storage</p>
    <p>Disclosed to public</p>
    <p>Hijacked/maliciously retrieved</p>
  </div>
  <div class="page">
    <p>Sensitive Data Disclosures</p>
    <p>Local Storage</p>
    <p>Disclosed to public</p>
    <p>Hijacked/maliciously retrieved</p>
  </div>
  <div class="page">
    <p>Sensitive Data Disclosures</p>
    <p>Local Storage</p>
    <p>Disclosed to public</p>
    <p>Hijacked/maliciously retrieved</p>
  </div>
  <div class="page">
    <p>Sensitive Data Disclosures</p>
    <p>Local Storage</p>
    <p>Disclosed to public</p>
    <p>Hijacked/maliciously retrieved</p>
  </div>
  <div class="page">
    <p>Sensitive Data</p>
    <p>Existing work focused on sensitive data defined by certain API methods.</p>
    <p>TaintDroid[OSDI10], AndroidLeaks[TRUST12], FlowDroid[PLDI14]</p>
    <p>PiOS[NDSS11]</p>
  </div>
  <div class="page">
    <p>Sensitive Data</p>
    <p>Existing work focused on sensitive data defined by certain API methods.  Most of them are permission protected</p>
    <p>E.g., in Android, TelephonyManager.getDeviceId()</p>
  </div>
  <div class="page">
    <p>Sensitive User Inputs</p>
    <p>We are among the first to detect user inputs as sensitive sources in mobile apps.  None of them are permission protected</p>
    <p>E.g., user id/password, credit card number</p>
  </div>
  <div class="page">
    <p>Sensitive User Inputs</p>
    <p>We are among the first to detect user inputs as sensitive sources in mobile apps.  None of them are permission protected</p>
    <p>E.g., user id/password, credit card number</p>
    <p>Sensitive</p>
  </div>
  <div class="page">
    <p>Sensitive User Inputs</p>
    <p>We are among the first to detect user inputs as sensitive sources in mobile apps.  None of them are permission protected</p>
    <p>E.g., user id/password, credit card number</p>
    <p>Insensitive</p>
  </div>
  <div class="page">
    <p>Example User Inputs Disclosures</p>
    <p>Web Server</p>
    <p>HTTP</p>
  </div>
  <div class="page">
    <p>Example User Inputs Disclosures</p>
    <p>Web Server</p>
    <p>HTTP</p>
  </div>
  <div class="page">
    <p>Research Problems</p>
    <p>How to systematically discover the input fields from an apps UI?</p>
    <p>How to identify which input fields are sensitive?</p>
    <p>How to associate the sensitive input fields to the corresponding variables in the apps that store their values?</p>
  </div>
  <div class="page">
    <p>Research Problems</p>
    <p>How to systematically discover the input fields from an apps UI?</p>
    <p>How to identify which input fields are sensitive?</p>
    <p>How to associate the sensitive input fields to the corresponding variables in the apps that store their values?</p>
  </div>
  <div class="page">
    <p>Intuition</p>
    <p>From the users perspective, if we can mimic how a user looks at the UIs, we can determine which input fields can contain sensitive data within the UI context.</p>
  </div>
  <div class="page">
    <p>Feasibility</p>
    <p>Render the statically defined UI layouts</p>
  </div>
  <div class="page">
    <p>Feasibility</p>
    <p>Render the statically defined UI layouts</p>
    <p>Android iOS Windows Phone</p>
    <p>Layout format XML NIB/XIB/Storyboard XAML/HTML</p>
    <p>Static UI Render ADT Xcode Visual Studio</p>
    <p>APIs map widgets to code Yes Yes Yes</p>
  </div>
  <div class="page">
    <p>Feasibility</p>
    <p>Android iOS Windows Phone</p>
    <p>Layout format XML NIB/XIB/Storyboard XAML/HTML</p>
    <p>Static UI Render ADT Xcode Visual Studio</p>
    <p>APIs map widgets to code Yes Yes Yes</p>
    <p>Associate labels to input fields based on physical locations</p>
  </div>
  <div class="page">
    <p>SUPOR: Sensitive User inPut detectOR</p>
  </div>
  <div class="page">
    <p>Background - UI</p>
  </div>
  <div class="page">
    <p>Background - UI</p>
    <p>Text Label</p>
  </div>
  <div class="page">
    <p>Background - UI</p>
    <p>Input Field</p>
  </div>
  <div class="page">
    <p>Background - UI</p>
    <p>Input Hint</p>
  </div>
  <div class="page">
    <p>Background - UI</p>
    <p>Text Label</p>
    <p>Input Field</p>
    <p>Widget</p>
  </div>
  <div class="page">
    <p>Background  Layout File</p>
    <p>A piece in an Android layout example.</p>
    <p>&lt;EditText</p>
    <p>android:id=&quot;@+id/pwd</p>
    <p>android:inputType=textPassword/&gt;</p>
  </div>
  <div class="page">
    <p>Background  Layout File</p>
    <p>A piece in an Android layout example.</p>
    <p>&lt;EditText</p>
    <p>android:id=&quot;@+id/pwd</p>
    <p>android:inputType=textPassword/&gt;</p>
    <p>Identifier</p>
  </div>
  <div class="page">
    <p>Background  Layout File</p>
    <p>A piece in an Android layout example.</p>
    <p>&lt;EditText</p>
    <p>android:id=&quot;@+id/pwd</p>
    <p>android:inputType=textPassword/&gt;</p>
    <p>Interesting Attribute 8/14/15 USENIX Security 2015 27</p>
  </div>
  <div class="page">
    <p>Overview of SUPOR</p>
    <p>Layout Analysis</p>
    <p>Layout Parsing</p>
    <p>UI Rendering</p>
    <p>UI Sensitiveness</p>
    <p>Analysis</p>
    <p>Privacy Analysis</p>
    <p>Disclosure</p>
    <p>Keywords</p>
    <p>Variable Binding</p>
    <p>SUPOR</p>
    <p>Vulnerability</p>
    <p>App</p>
  </div>
  <div class="page">
    <p>Parsing Layout</p>
    <p>We need to know which layout files contain input fields.</p>
    <p>Is Sensitive User Input</p>
    <p>Detection Needed?</p>
    <p>Layout file</p>
  </div>
  <div class="page">
    <p>Parsing Layout</p>
    <p>We need to know which layout files contain input fields.</p>
    <p>Is Sensitive User Input</p>
    <p>Detection Needed?</p>
    <p>Layout file</p>
    <p>layout contains input fields</p>
    <p>layout doesnt contain input fields</p>
  </div>
  <div class="page">
    <p>Rendering UI</p>
    <p>Statically render layout files to UIs as users look at on smartphones via tools like ADT in Android.</p>
  </div>
  <div class="page">
    <p>Rendering UI</p>
    <p>Layout file A</p>
    <p>Statically render layout files to UIs as users look at on smartphones via tools like ADT in Android.</p>
  </div>
  <div class="page">
    <p>Rendering UI</p>
    <p>Layout file B</p>
    <p>Statically render layout files to UIs as users look at on smartphones via tools like ADT in Android.</p>
  </div>
  <div class="page">
    <p>Extracting Information</p>
  </div>
  <div class="page">
    <p>Extracting Information</p>
  </div>
  <div class="page">
    <p>Extracting Information</p>
    <p>Collect information</p>
    <p>Text Label  Text: Card Number  Coordinates: [16, 231, 109, 249]</p>
    <p>Input Field  Hint: 15 or 16 digit  Coordinates: [16, 249, 464, 297]</p>
  </div>
  <div class="page">
    <p>UI Sensitiveness Analysis</p>
  </div>
  <div class="page">
    <p>UI Sensitiveness Analysis</p>
    <p>Sensitive Attributes in Layout Files</p>
    <p>&lt;EditText android:id=&quot;@+id/pwd</p>
    <p>android:inputType=textPassword/&gt;</p>
  </div>
  <div class="page">
    <p>UI Sensitiveness Analysis</p>
    <p>Sensitive Attributes in Layout Files</p>
    <p>The Input Field is Sensitive</p>
    <p>Yes</p>
  </div>
  <div class="page">
    <p>UI Sensitiveness Analysis</p>
    <p>Sensitive Attributes in Layout Files</p>
    <p>The Input Field is Sensitive</p>
    <p>Sensitive Input Hint No</p>
    <p>Enter Password</p>
  </div>
  <div class="page">
    <p>UI Sensitiveness Analysis</p>
    <p>Sensitive Attributes in Layout Files</p>
    <p>The Input Field is Sensitive</p>
    <p>Sensitive Input Hint</p>
    <p>Yes</p>
    <p>No</p>
    <p>Enter Password</p>
  </div>
  <div class="page">
    <p>UI Sensitiveness Analysis</p>
    <p>Sensitive Attributes in Layout Files</p>
    <p>The Input Field is Sensitive</p>
    <p>Sensitive Input Hint</p>
    <p>Sensitive Text Label</p>
    <p>No</p>
    <p>No</p>
    <p>Card number Expiration date</p>
    <p>Comment</p>
  </div>
  <div class="page">
    <p>UI Sensitiveness Analysis</p>
    <p>Sensitive Attributes in Layout Files</p>
    <p>The Input Field is Sensitive</p>
    <p>Sensitive Input Hint</p>
    <p>Sensitive Text Label</p>
    <p>The Input Field is Insensitive</p>
    <p>No</p>
    <p>No</p>
    <p>No</p>
  </div>
  <div class="page">
    <p>UI Sensitiveness Analysis</p>
    <p>Sensitive Attributes in Layout Files</p>
    <p>The Input Field is Sensitive</p>
    <p>Sensitive Input Hint</p>
    <p>Sensitive Text Label</p>
    <p>No</p>
    <p>No</p>
    <p>Yes</p>
  </div>
  <div class="page">
    <p>UI Sensitiveness Analysis</p>
    <p>Challenge: How to precisely associate the correlated text label to a given input field?</p>
  </div>
  <div class="page">
    <p>Associating Labels (1)</p>
    <p>Intuition: labels at different positions relative to the input field have different probabilities to be correlated.</p>
  </div>
  <div class="page">
    <p>Associating Labels (1)</p>
    <p>Intuition: labels at different positions relative to the input field have different probabilities to be correlated.</p>
    <p>Input FieldLabel</p>
    <p>Input Field</p>
    <p>Label</p>
    <p>Input Field Label</p>
    <p>Input Field</p>
    <p>Label</p>
  </div>
  <div class="page">
    <p>Associating Labels (2)</p>
    <p>Assign position-based weights based on empirical observations  The smaller the weight, the closer the correlation</p>
  </div>
  <div class="page">
    <p>Associating Labels (2)</p>
    <p>Assign position-based weights based on empirical observations  The smaller the weight, the closer the correlation</p>
    <p>Input Field0.8</p>
  </div>
  <div class="page">
    <p>Associating Labels (2)</p>
    <p>Assign position-based weights based on empirical observations  The smaller the weight, the closer the correlation</p>
    <p>Input Field0.8</p>
  </div>
  <div class="page">
    <p>Associating Labels (2)</p>
    <p>Assign position-based weights based on empirical observations  The smaller the weight, the closer the correlation</p>
    <p>Input Field0.8</p>
  </div>
  <div class="page">
    <p>Associating Labels (3)</p>
    <p>Geometry-based correlation score computation</p>
  </div>
  <div class="page">
    <p>Associating Labels (3)</p>
    <p>Geometry-based correlation score computation</p>
    <p>Label</p>
    <p>Input Field (I)</p>
    <p>(x1, y1)</p>
    <p>(x2, y2)</p>
  </div>
  <div class="page">
    <p>Associating Labels (3)</p>
    <p>Geometry-based correlation score computation</p>
    <p>Label</p>
    <p>Input Field (I)</p>
    <p>(x1, y1)</p>
    <p>(x2, y2)</p>
    <p>For each pixel (x,y) in a text label  distance(I, x, y) * posWeight(I, x, y)</p>
  </div>
  <div class="page">
    <p>Associating Labels (3)</p>
    <p>Geometry-based correlation score computation</p>
    <p>Label</p>
    <p>Input Field (I)</p>
    <p>(x1, y1)</p>
    <p>(x2, y2)</p>
    <p>Average the correlation score for the text label</p>
  </div>
  <div class="page">
    <p>Associating Labels (4)</p>
    <p>Find out the label with the smallest correlation score among all potential labels for a given input field</p>
  </div>
  <div class="page">
    <p>Associating Labels (4)</p>
    <p>Find out the label with the smallest correlation score among all potential labels for a given input field</p>
  </div>
  <div class="page">
    <p>Associating Labels (4)</p>
    <p>Find out the label with the smallest correlation score among all potential labels for a given input field</p>
    <p>Label Number Field Date Field</p>
    <p>Credit card type 265.57 456.42</p>
    <p>Card number 76.47 271.23</p>
    <p>Expiration date 205.29 75.40</p>
    <p>Correlation scores</p>
  </div>
  <div class="page">
    <p>Associating Labels (4)</p>
    <p>Find out the label with the smallest correlation score among all potential labels for a given input field</p>
    <p>Label Number Field Date Field</p>
    <p>Credit card type 265.57 456.42</p>
    <p>Card number 76.47 271.23</p>
    <p>Expiration date 205.29 75.40</p>
    <p>Correlation scores</p>
  </div>
  <div class="page">
    <p>Determining Sensitiveness (1)</p>
    <p>Card number</p>
    <p>Expiration date</p>
    <p>Comment</p>
  </div>
  <div class="page">
    <p>Determining Sensitiveness (1)</p>
    <p>Sensitive Keywords Dataset</p>
    <p>Card number</p>
    <p>Expiration date</p>
    <p>Comment</p>
    <p>Matches?</p>
    <p>Keyword matching approach</p>
  </div>
  <div class="page">
    <p>Determining Sensitiveness (1)</p>
    <p>Sensitive Keywords Dataset</p>
    <p>Card number</p>
    <p>Expiration date</p>
    <p>Comment</p>
    <p>Matches?</p>
    <p>Sensitive</p>
    <p>Keyword matching approach</p>
    <p>Yes</p>
  </div>
  <div class="page">
    <p>Determining Sensitiveness (1)</p>
    <p>Sensitive Keywords Dataset</p>
    <p>Comment</p>
    <p>Matches?</p>
    <p>Insensitive</p>
    <p>Keyword matching approach</p>
    <p>No</p>
  </div>
  <div class="page">
    <p>Determining Sensitiveness (2)</p>
    <p>Why is keyword matching approach effective?</p>
  </div>
  <div class="page">
    <p>Determining Sensitiveness (2)</p>
    <p>Why is keyword matching approach effective?</p>
    <p>Small screen and short phrases or sentences</p>
  </div>
  <div class="page">
    <p>Determining Sensitiveness (2)</p>
    <p>Why is keyword matching approach effective?</p>
    <p>We only analyze the most relevant text label</p>
    <p>Small screen and short phrases or sentences</p>
  </div>
  <div class="page">
    <p>Binding Variables (1)</p>
  </div>
  <div class="page">
    <p>Binding Variables (1)</p>
  </div>
  <div class="page">
    <p>Binding Variables (1)</p>
  </div>
  <div class="page">
    <p>Binding Variables (1)</p>
    <p>Identifier: X</p>
  </div>
  <div class="page">
    <p>Binding Variables (2)</p>
    <p>Challenge: different widgets within one apps have the same identifier</p>
    <p>&lt;TextView android:text= =Card Number /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>&lt;TextView android:text= =Search /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
  </div>
  <div class="page">
    <p>Binding Variables (2)</p>
    <p>Challenge: different widgets within one apps have the same identifier</p>
    <p>&lt;TextView android:text= =Card Number /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>&lt;TextView android:text= =Search /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>txtInput1 = this.findViewById(input1);</p>
    <p>txtInput2 = this.findViewById(input1);</p>
  </div>
  <div class="page">
    <p>Binding Variables (2)</p>
    <p>Challenge: different widgets within one apps have the same identifier</p>
    <p>&lt;TextView android:text= =Card Number /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>&lt;TextView android:text= =Search /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>txtInput1 = this.findViewById(input1);</p>
    <p>txtInput2 = this.findViewById(input1);</p>
  </div>
  <div class="page">
    <p>Binding Variables (3) &lt;TextView android:text= =Card Number /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: billing_information.xml] &lt;TextView android:text= =Search /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: search.xml]</p>
    <p>id/input1</p>
    <p>Sensitive Insensitive</p>
  </div>
  <div class="page">
    <p>Binding Variables (3)</p>
    <p>txtInput1 = this.findViewById(input1);</p>
    <p>&lt;TextView android:text= =Card Number /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: billing_information.xml] &lt;TextView android:text= =Search /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: search.xml]</p>
    <p>txtInput2 = this.findViewById(input1);</p>
    <p>id/input1</p>
    <p>Sensitive Insensitive</p>
  </div>
  <div class="page">
    <p>Binding Variables (3)</p>
    <p>txtInput1 = this.findViewById(input1);</p>
    <p>&lt;TextView android:text= =Card Number /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: billing_information.xml] &lt;TextView android:text= =Search /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: search.xml]</p>
    <p>id/input1</p>
    <p>Sensitive Insensitive</p>
    <p>this.setContentView(billing_information);</p>
  </div>
  <div class="page">
    <p>Binding Variables (3)</p>
    <p>txtInput1 = this.findViewById(input1);</p>
    <p>&lt;TextView android:text= =Card Number /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: billing_information.xml] &lt;TextView android:text= =Search /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: search.xml]</p>
    <p>id/input1</p>
    <p>Sensitive Insensitive</p>
    <p>this.setContentView(billing_information);</p>
  </div>
  <div class="page">
    <p>Binding Variables (3)</p>
    <p>txtInput1 = this.findViewById(input1);</p>
    <p>&lt;TextView android:text= =Card Number /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: billing_information.xml] &lt;TextView android:text= =Search /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: search.xml]</p>
    <p>id/input1</p>
    <p>Sensitive Insensitive</p>
    <p>this.setContentView(billing_information);</p>
    <p>Sensitive</p>
  </div>
  <div class="page">
    <p>Binding Variables (3) &lt;TextView android:text= =Card Number /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: billing_information.xml] &lt;TextView android:text= =Search /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: search.xml]</p>
    <p>txtInput2 = this.findViewById(input1);</p>
    <p>id/input1</p>
    <p>Sensitive Insensitive</p>
  </div>
  <div class="page">
    <p>Binding Variables (3) &lt;TextView android:text= =Card Number /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: billing_information.xml] &lt;TextView android:text= =Search /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: search.xml]</p>
    <p>txtInput2 = this.findViewById(input1);</p>
    <p>id/input1</p>
    <p>Sensitive Insensitive</p>
    <p>this.setContentView(search);</p>
  </div>
  <div class="page">
    <p>Binding Variables (3) &lt;TextView android:text= =Card Number /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: billing_information.xml] &lt;TextView android:text= =Search /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: search.xml]</p>
    <p>txtInput2 = this.findViewById(input1);</p>
    <p>id/input1</p>
    <p>Sensitive Insensitive</p>
    <p>this.setContentView(search);</p>
  </div>
  <div class="page">
    <p>Binding Variables (3) &lt;TextView android:text= =Card Number /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: billing_information.xml] &lt;TextView android:text= =Search /&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>[layout: search.xml]</p>
    <p>txtInput2 = this.findViewById(input1);</p>
    <p>id/input1</p>
    <p>Sensitive Insensitive</p>
    <p>this.setContentView(search);</p>
    <p>Insensitive</p>
  </div>
  <div class="page">
    <p>Implementation &amp; Evaluation</p>
    <p>Implemented for Android apps and built on Dalysis[CHEX CCS12], IBM WALA and ADT.</p>
    <p>Only input fields of type EditText are analyzed, i.e. other user inputs like checkbox are ignored.</p>
    <p>Implemented a sensitive user inputs disclosure detection system by combining SUPOR and static taint analysis</p>
    <p>16,000 apps were evaluated</p>
  </div>
  <div class="page">
    <p>Evaluating UI Sensitiveness Analysis (1)  9,653 apps (60.33%) contains input fields</p>
    <p>Performance:  Average analysis time is 5.7 seconds for one app</p>
    <p>&lt;= 10 seconds</p>
    <p>&gt; 10 seconds</p>
  </div>
  <div class="page">
    <p>Evaluating UI Sensitiveness Analysis (2)  9,653 apps (60.33%) contains input fields</p>
    <p>Accuracy  Manually examined 40 apps . 115 layouts are rendered and 485</p>
    <p>input fields are analyzed.</p>
    <p>TP: sensitive user inputs are identified as sensitive</p>
    <p>FP: insensitive user inputs are identified as sensitive</p>
    <p>FN: sensitive user inputs are identified as insensitive</p>
  </div>
  <div class="page">
    <p>Causes for FN and FP</p>
    <p>Insufficient context to identify sensitive keywords.  False negative: Answer vs Security Answer</p>
    <p>False Positive: Height of an image file and for a human being</p>
  </div>
  <div class="page">
    <p>Causes for FN and FP</p>
    <p>Inaccurate text label association  False positive: e.g. the long sentence (with keyword email) is</p>
    <p>associated with the Delivery Instructions field</p>
  </div>
  <div class="page">
    <p>Causes for FN and FP</p>
    <p>Inaccurate text label association  False positive: e.g. the long sentence (with keyword email) is</p>
    <p>associated with the Delivery Instructions field</p>
    <p>Input Field</p>
    <p>Input Field</p>
    <p>Text Label</p>
  </div>
  <div class="page">
    <p>Causes for FN and FP</p>
    <p>Inaccurate text label association  False positive: e.g. the long sentence (with keyword email) is</p>
    <p>associated with the Delivery Instructions field</p>
    <p>Input Field</p>
    <p>Input Field</p>
    <p>Text Label</p>
  </div>
  <div class="page">
    <p>Causes for FN and FP</p>
    <p>Inaccurate text label association  False positive: e.g. the long sentence (with keyword email) is</p>
    <p>associated with the Delivery Instructions field</p>
    <p>Input Field</p>
    <p>Input Field</p>
    <p>Text Label</p>
  </div>
  <div class="page">
    <p>Causes for FN and FP</p>
    <p>Inaccurate text label association  False positive: e.g. the long sentence (with keyword email) is</p>
    <p>associated with the Delivery Instructions field</p>
    <p>Input Field</p>
    <p>Input Field</p>
    <p>Text Label</p>
  </div>
  <div class="page">
    <p>Causes for FN and FP</p>
    <p>Inaccurate text label association  False positive: e.g. the long sentence (with keyword email) is</p>
    <p>associated with the Delivery Instructions field</p>
    <p>Input Field</p>
    <p>Input Field</p>
    <p>Text Label</p>
  </div>
  <div class="page">
    <p>Evaluating Disclosure Analysis</p>
    <p>For all 16,000 apps</p>
    <p>Throughput: 11.1 apps/minute  A cluster of 8 servers</p>
    <p>3 apps are analyzed on each server in parallel</p>
  </div>
  <div class="page">
    <p>Evaluating Disclosure Analysis</p>
    <p>For all 16,000 apps</p>
    <p>Manually examined 104 apps</p>
    <p>False positive rate is 8.7%  Limitations of underlying taint analysis framework</p>
    <p>E.g. lack of accurate modeling of arrays</p>
  </div>
  <div class="page">
    <p>Case Studies (1) com.canofsleep.wwdiary</p>
  </div>
  <div class="page">
    <p>Case Studies (1)</p>
    <p>com.nitrogen.android</p>
    <p>The 3 marked inputs fields are identified sensitive and their data are disclosed.</p>
  </div>
  <div class="page">
    <p>Case Studies (2)</p>
    <p>txtWeight = this.findViewById(R.id.edt_weight);</p>
    <p>valWeight = txtWeight.getText().toString();</p>
    <p>Log.i(weight, valWeight);</p>
  </div>
  <div class="page">
    <p>Case Studies (2)</p>
    <p>txtWeight = this.findViewById(R.id.edt_weight);</p>
    <p>valWeight = txtWeight.getText().toString();</p>
    <p>Log.i(weight, valWeight);Sink</p>
    <p>Disclosure analysis based on existing approach which directly define certain APIs as sensitive sources.</p>
  </div>
  <div class="page">
    <p>Case Studies (2)</p>
    <p>txtWeight = this.findViewById(R.id.edt_weight);</p>
    <p>valWeight = txtWeight.getText().toString();</p>
    <p>Log.i(weight, valWeight);Sink</p>
    <p>Disclosure analysis based on existing approach which directly define certain APIs as sensitive sources.</p>
  </div>
  <div class="page">
    <p>Case Studies (2)</p>
    <p>txtWeight = this.findViewById(R.id.edt_weight);</p>
    <p>valWeight = txtWeight.getText().toString();</p>
    <p>Log.i(weight, valWeight);</p>
    <p>Source</p>
    <p>Sink</p>
    <p>Disclosure analysis based on SUPOR</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>We study the possibility of detecting sensitive user inputs, an important yet mostly neglected sensitive source in mobile apps.</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>We propose SUPOR, among the first known approaches to detect sensitive user inputs with high recall and precision.  Mimics from the users perspective by statically and scalably</p>
    <p>rendering the layout files.</p>
    <p>Leverages a geometry-based approach to precisely associated text labels to input fields.</p>
    <p>Utilizes textual analysis to determine the sensitiveness of the texts in labels.</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>We perform a sensitive user inputs disclosure analysis, with FP rate of 8.7%, to demonstrate the usefulness of SUPOR.</p>
  </div>
  <div class="page">
    <p>Thank You!</p>
    <p>Q &amp; A</p>
  </div>
  <div class="page">
    <p>Related work</p>
    <p>A lot of work focus on privacy disclosure problems on predefined sensitive data sources in the phone.[FlowDroid PLDI14, PiOS NDSS11, AAPL NDSS15]</p>
    <p>FlowDroid employs a limited form of sensitive input fields password fields.[PLDI14]</p>
    <p>AsDroid checks checks UI text to detect the contradiction between the expected behaviors and program behaviors.[ICSE14]</p>
    <p>UIPicker uses supervised learning to collect sensitive keywords and corresponding layouts. It also uses the sibling elements in layout files as the description text for a widget.[USENIX Security15]</p>
  </div>
  <div class="page">
    <p>Keyword dataset construction</p>
    <p>Crawl texts from apps resource files</p>
    <p>Adapt NLP techniques to extract nouns and noun phrases from the top 5,000 frequent text lines.</p>
    <p>Manually inspect top frequent nouns and noun phrases to identify sensitive keywords.</p>
  </div>
  <div class="page">
    <p>Why not use XML structure to compute correlation scores?  Many developers defines relative positions of the</p>
    <p>widgets, which are not what users perceive  XML structure in this case does not guarantee that</p>
    <p>sibling widgets are physically close.</p>
  </div>
  <div class="page">
    <p>Why not use XML structure to compute correlation scores?  Some cases in real Android apps.</p>
    <p>Input 1Label 1</p>
    <p>Input 2Label 2</p>
  </div>
  <div class="page">
    <p>Why not use XML structure to compute correlation scores?  Some cases in real Android apps.</p>
    <p>&lt;LinearLayout android:orientation=horizontal&gt;</p>
    <p>&lt;LinearLayout android:orientation=vertical&gt;</p>
    <p>&lt;TextView android:text=Label 1 /&gt;</p>
    <p>&lt;TextView android:text=Label 2 /&gt;</p>
    <p>&lt;/LinearLayout&gt;</p>
    <p>&lt;LinearLayout android:orientation=vertical&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>&lt;EditText android:id=@+id/input2  /&gt;</p>
    <p>&lt;/LinearLayout&gt;</p>
    <p>&lt;/LinearLayout&gt;</p>
    <p>Input 1Label 1</p>
    <p>Input 2Label 2</p>
  </div>
  <div class="page">
    <p>Why not use XML structure to compute correlation scores?  Some cases in real Android apps.</p>
    <p>&lt;LinearLayout android:orientation=horizontal&gt;</p>
    <p>&lt;LinearLayout android:orientation=vertical&gt;</p>
    <p>&lt;TextView android:text=Label 1 /&gt;</p>
    <p>&lt;TextView android:text=Label 2 /&gt;</p>
    <p>&lt;/LinearLayout&gt;</p>
    <p>&lt;LinearLayout android:orientation=vertical&gt;</p>
    <p>&lt;EditText android:id=@+id/input1  /&gt;</p>
    <p>&lt;EditText android:id=@+id/input2  /&gt;</p>
    <p>&lt;/LinearLayout&gt;</p>
    <p>&lt;/LinearLayout&gt;</p>
    <p>Input 1Label 1</p>
    <p>Input 2Label 2</p>
  </div>
</Presentation>
