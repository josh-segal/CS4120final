<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Capo: Recapitulating Storage for Virtual Desktops</p>
    <p>Mohammad Shamma, Dutch T. Meyer, Jake Wires, Maria Ivanova, Norman C. Hutchinson,</p>
    <p>and Andrew Warfield</p>
    <p>University of British Columbia</p>
  </div>
  <div class="page">
    <p>The World According to Gartner</p>
    <p>60% of all enterprises will deploy network computers by 2001</p>
    <p>5  30 million Windows terminals sold per year by 2005</p>
    <p>40% of desktops  49 million  will be virtualized by 2013</p>
    <p>Sooner or later they're bound to be right</p>
  </div>
  <div class="page">
    <p>Virtual Desktop Infrastructure (VDI)</p>
    <p>IT admins love it  Centrally administered  Reduced hardware and maintenance costs</p>
    <p>Users will embrace it (hopefully)  Familiar personal computing environment  Performance (latency) is critical</p>
  </div>
  <div class="page">
    <p>Improving VDI</p>
    <p>How can we:  Reduce the cost of VDI deployments?  Improve the user experience?</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background  How VDI Works  UBC Workload Analysis  Design and Implementation  Evaluation  Conclusion</p>
  </div>
  <div class="page">
    <p>How VDI Works</p>
    <p>Sparse allocation Fast clone</p>
  </div>
  <div class="page">
    <p>How VDI Works User data isolated from system data</p>
  </div>
  <div class="page">
    <p>How VDI Works Patch Tuesday</p>
  </div>
  <div class="page">
    <p>UBC Workload Analysis</p>
  </div>
  <div class="page">
    <p>UBC Workload Analysis</p>
    <p>We profiled 55 Windows Vista desktops  Administrative offices at UBC  Installed profiler during regularly-scheduled weekly</p>
    <p>update  Captured file- and block-level accesses  Collected 75 GB of compressed, binary logs</p>
  </div>
  <div class="page">
    <p>Workload: Day-to-Day Activity</p>
    <p>Workload is quite bursty  What do the requests look like?</p>
  </div>
  <div class="page">
    <p>Workload: IO Requests</p>
  </div>
  <div class="page">
    <p>Workload: IO Requests</p>
    <p>Most accesses to system-controlled objects (\Windows, \Program Files)</p>
    <p>Metadata-heavy workload</p>
    <p>IOps: 65% writes; throughput: 65% reads</p>
    <p>What do these writes look like?</p>
  </div>
  <div class="page">
    <p>Workload: Write Requests</p>
    <p>Fairly high churn rate  8% of bytes re-written in 10 seconds  50% of bytes re-written in 24 hours</p>
    <p>Average divergence of 1GB after about an hour  A large portion of this is from pagefile.sys and other</p>
    <p>Windows files</p>
  </div>
  <div class="page">
    <p>Workload Summary</p>
    <p>VDI workloads are bursty</p>
    <p>Significant sharing among VMs</p>
    <p>High churn rate for hot data</p>
    <p>Namespace not accessed uniformly</p>
  </div>
  <div class="page">
    <p>VDI Storage Scalability</p>
    <p>How can we improve VDI storage scalability?</p>
  </div>
  <div class="page">
    <p>Local Persistent Cache</p>
    <p>Goal: offload IOps to local disks  Library in dom0 interposes on access to</p>
    <p>network files  Cached files stored on local file system</p>
    <p>Bitmaps track sparse files</p>
    <p>Supports write-through and write-back with adjustable window</p>
  </div>
  <div class="page">
    <p>Multihost Preloader</p>
    <p>Goal: share local caches among all hosts  NFS proxy snoops requests to cached files  Shared data is multicasted to all subscribed</p>
    <p>hosts  Basic congestion control and/or isolated</p>
    <p>network required</p>
  </div>
  <div class="page">
    <p>Differential Durability</p>
    <p>Goal: reduce writeback burden  Data categorized according to value</p>
    <p>User-created data, installer data, temporary files, pagefile.sys</p>
    <p>Gold Image disk partitioned  Valuable data placed on a disk with an</p>
    <p>aggressive write-through policy  Expendable data stored on cheap local disks</p>
  </div>
  <div class="page">
    <p>Capo Architecture Diagram</p>
  </div>
  <div class="page">
    <p>Implementation</p>
    <p>Local cache prototyped during summer internship  7,000 lines of C code</p>
    <p>Prefetcher implemented three (3) times  Packet capture, unfsd, RPC proxy</p>
    <p>IntelliCacheTM now available in latest XenServer releases</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background  How VDI Works  UBC Workload Analysis  Design and Implementation  Evaluation  Conclusion</p>
  </div>
  <div class="page">
    <p>Microbenchmarks: Preloading</p>
  </div>
  <div class="page">
    <p>Trace Replay: Methodology</p>
    <p>Original environment:  VMware  SAN</p>
    <p>Our lab:  XenServer  Linux NFS filer w/ 6-disk RAID 0 volume</p>
    <p>Replayer:  Simple perl application  Tries to match original trace request pattern</p>
  </div>
  <div class="page">
    <p>Trace Replay: Selected Peaks</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>VDI presents new challenges for storage systems</p>
    <p>Central storage is a reasonable solution...  But local caching and differential durability can</p>
    <p>help reduce costs and improve performance</p>
  </div>
  <div class="page">
    <p>Questions?</p>
  </div>
</Presentation>
