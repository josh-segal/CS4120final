<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Building Extensible Networks with Building Extensible Networks with Rule-Based Forwarding</p>
    <p>Lucian Popa Norbert Egi Sylvia Ratnasamy Ion Stoica UC Berkeley/ICSI Lancaster Univ. Intel Labs Berkeley UC Berkeleyy y y</p>
  </div>
  <div class="page">
    <p>Making Internet forwarding flexibleMaking Internet forwarding flexible</p>
    <p>A networks core functionality is to forward packets Power of a network flexibility of its forwarding plane</p>
    <p>A long-held goal: flexible forwardingg g f g</p>
  </div>
  <div class="page">
    <p>Making Internet forwarding flexible</p>
    <p>A long-held goal: flexible forwarding</p>
    <p>Making Internet forwarding flexible</p>
    <p>A long held goal: flexible forwarding</p>
    <p>Example: Middlebox-aware forwarding</p>
    <p>Intrusion Detection System (IDS)</p>
    <p>S D</p>
  </div>
  <div class="page">
    <p>Making Internet forwarding flexible</p>
    <p>A long-held goal: flexible forwarding</p>
    <p>Making Internet forwarding flexible</p>
    <p>A long held goal: flexible forwarding</p>
    <p>Example: Middlebox-aware forwarding</p>
    <p>Intrusion Detection System (IDS)</p>
    <p>S DPort != 80</p>
    <p>Port = 80</p>
  </div>
  <div class="page">
    <p>Making Internet forwarding flexible</p>
    <p>A long-held goal: flexible forwarding</p>
    <p>Making Internet forwarding flexible</p>
    <p>A long held goal: flexible forwarding</p>
    <p>Example: Middlebox-aware forwarding</p>
    <p>Intrusion Detection System (IDS)</p>
    <p>S DPort != 80</p>
    <p>Many such examples: source routes multiple paths anycast</p>
    <p>Port = 80</p>
    <p>Many such examples: source routes, multiple paths, anycast, mobility, multicast, active networks, etc.</p>
  </div>
  <div class="page">
    <p>Making Internet forwarding flexible</p>
    <p>A long-held goal: flexible forwarding</p>
    <p>Making Internet forwarding flexible</p>
    <p>A long held goal: flexible forwarding</p>
    <p>Example: Middlebox-aware forwarding</p>
    <p>Intrusion Detection System (IDS)</p>
    <p>S DPort != 80</p>
    <p>Many such examples: source routes multiple paths anycast</p>
    <p>Port = 80</p>
    <p>Many such examples: source routes, multiple paths, anycast, mobility, multicast, active networks, etc.</p>
    <p>Using general forwarding directives  instructions to the network Using general forwarding directives instructions to the network on how to forward packets</p>
  </div>
  <div class="page">
    <p>ThesisThesis Flexibility alone is not enough</p>
    <p>Can compromise network security E.g., source routing, active networks</p>
  </div>
  <div class="page">
    <p>ThesisThesis Flexibility alone is not enough</p>
    <p>Can compromise network security E.g., source routing, active networks</p>
    <p>Flexibility must be balanced by policy support Every forwarding directive can be constrained by policies</p>
    <p>Policy PolicyFlexibility</p>
  </div>
  <div class="page">
    <p>ThesisThesis Flexibility alone is not enough</p>
    <p>Can compromise network security E.g., source routing, active networks</p>
    <p>Flexibility must be balanced by policy support Every forwarding directive can be constrained by policies</p>
    <p>Real world example: 1. A car can be driven only by its owner</p>
  </div>
  <div class="page">
    <p>ThesisThesis Flexibility alone is not enough</p>
    <p>Can compromise network security E.g., source routing, active networks</p>
    <p>Flexibility must be balanced by policy support Every forwarding directive can be constrained by policies</p>
    <p>Real world example: 1. A car can be driven only by its owner</p>
    <p>d2. Anyone can drive any car</p>
  </div>
  <div class="page">
    <p>ThesisThesis Flexibility alone is not enough</p>
    <p>Can compromise network security E.g., source routing, active networks</p>
    <p>Flexibility must be balanced by policy support Every forwarding directive can be constrained by policies</p>
    <p>Real world example: 1. A car can be driven only by its owner</p>
    <p>d2. Anyone can drive any car 3. Can only drive a car with the approval of its owner</p>
  </div>
  <div class="page">
    <p>ThesisThesis Flexibility alone is not enough</p>
    <p>Can compromise network security E.g., source routing, active networks</p>
    <p>Flexibility must be balanced by policy support Every forwarding directive can be constrained by policies</p>
    <p>Every entity that explicitly appears in a forwarding directive can refuse that directive</p>
  </div>
  <div class="page">
    <p>Constrain forwarding directivesConstrain forwarding directives Every entity that explicitly appears in a forwarding directive y y p y pp g can refuse that directive</p>
  </div>
  <div class="page">
    <p>Constrain forwarding directivesConstrain forwarding directives Every entity that explicitly appears in a forwarding directive y y p y pp g can refuse that directive</p>
    <p>Example: apply thesis to current Internet Forwarding directive = Send to destination Dg Policy of D = No packets from S Not respected in the current Internet</p>
    <p>S D</p>
  </div>
  <div class="page">
    <p>Constrain forwarding directivesConstrain forwarding directives Every entity that explicitly appears in a forwarding directive y y p y pp g can refuse that directive</p>
    <p>Example: IP source routing Option available with current IP specp p Not supported by ISPs since there is no way to constrain it Desirable: ISPs get to approve source routes</p>
    <p>S D</p>
  </div>
  <div class="page">
    <p>Constrain forwarding directivesConstrain forwarding directives Every entity that explicitly appears in a forwarding directive y y p y pp g can refuse that directive</p>
    <p>Example: Middlebox-aware forwarding Allows use of in-network processingp g Policy of M: only process S-D traffic</p>
    <p>S D</p>
    <p>MM</p>
  </div>
  <div class="page">
    <p>Constrain forwarding directivesConstrain forwarding directives Every entity that explicitly appears in a forwarding directive</p>
    <p>=</p>
    <p>y y p y pp g can refuse that directive</p>
    <p>Policy-compliance</p>
    <p>= y p</p>
  </div>
  <div class="page">
    <p>GoalGoal</p>
    <p>Flexible and Policy-Compliant architecture Flexible: path control use in network functionality and stateFlexible: path control, use in-network functionality and state Policy-compliant: all stakeholders policies are respected</p>
    <p>Flexibility Policy Compliance</p>
  </div>
  <div class="page">
    <p>Idea: Packet RuleIdea: Packet Rule Forwarding directives carried in packet</p>
    <p>Current Internet  packet sent to destination</p>
    <p>Rule Based Forwarding  packet sent to rule</p>
    <p>Rule Packet</p>
  </div>
  <div class="page">
    <p>Idea: Packet RuleIdea: Packet Rule Forwarding directives carried in packet</p>
    <p>Rule: if(packet.dest_port == 80)</p>
    <p>sendto D else</p>
    <p>sendto M</p>
    <p>D M</p>
    <p>S D</p>
    <p>Port = 80</p>
    <p>Port != 80</p>
  </div>
  <div class="page">
    <p>Idea: Packet RuleIdea: Packet Rule Forwarding directives carried in packet</p>
    <p>Rules tell network how to forward packets</p>
  </div>
  <div class="page">
    <p>Idea: Packet RuleIdea: Packet Rule Forwarding directives carried in packet</p>
    <p>All rule participants authorize (sign) the rulep p ( g )</p>
  </div>
  <div class="page">
    <p>Idea: Packet RuleIdea: Packet Rule Forwarding directives carried in packet</p>
    <p>All rule participants authorize (sign) the rulep p ( g )</p>
    <p>D M</p>
    <p>Rule Rule</p>
    <p>Port = 80</p>
    <p>Port != 80S D</p>
  </div>
  <div class="page">
    <p>Idea: Packet RuleIdea: Packet Rule Forwarding directives carried in packet</p>
    <p>All rule participants authorize (sign) the rulep p ( g ) All packets carry rules</p>
  </div>
  <div class="page">
    <p>Idea: Packet RuleIdea: Packet Rule Forwarding directives carried in packet</p>
    <p>All rule participants authorize (sign) the rulep p ( g ) All packets carry rules</p>
    <p>R l t ll t k hi h k t b f d dRules tell network which packets can be forwarded</p>
  </div>
  <div class="page">
    <p>Idea: Packet RuleIdea: Packet Rule Forwarding directives carried in packet</p>
    <p>Rules tell network how to forward packets</p>
    <p>Rules tell network which packets can be forwarded</p>
  </div>
  <div class="page">
    <p>Idea: Packet RuleIdea: Packet Rule Rules naturally tie in flexibility and policy-compliance</p>
    <p>Rule</p>
  </div>
  <div class="page">
    <p>Idea: Packet RuleIdea: Packet Rule Rules naturally tie in flexibility and policy-compliance</p>
    <p>Specifies flexible directives</p>
    <p>Rule</p>
  </div>
  <div class="page">
    <p>Idea: Packet RuleIdea: Packet Rule Rules naturally tie in flexibility and policy-compliance</p>
    <p>Specifies flexible directives</p>
    <p>Rule</p>
    <p>Policies approve/disapprove rule</p>
  </div>
  <div class="page">
    <p>Idea: Packet RuleIdea: Packet Rule Rules naturally tie in flexibility and policy-compliance</p>
    <p>Specifies flexible directives</p>
    <p>Rule Encapsulates proof of</p>
    <p>policy-compliance</p>
    <p>Policies approve/disapprove rule</p>
  </div>
  <div class="page">
    <p>Idea: Packet RuleIdea: Packet Rule Rules naturally tie in flexibility and policy-compliance</p>
    <p>Specifies flexible directives</p>
    <p>Rule Encapsulates proof of</p>
    <p>policy-compliance</p>
    <p>Policies approve/disapprove rule</p>
    <p>Routers only need information in packet (rule) to:  Forward the packet Forward the packet  Verify that it complies with policies of all parties</p>
  </div>
  <div class="page">
    <p>OutlineOutline Motivation &amp; Solution Overview</p>
    <p>Rule-Based Forwarding Architecture  Overview</p>
    <p>Rule Forwarding Mechanism &amp; Examples</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>R l B d F di (RBF) A hit tRule-Based Forwarding (RBF) Architecture</p>
    <p>Destinations own rules</p>
    <p>Senders DestinationsRouters</p>
  </div>
  <div class="page">
    <p>R l B d F di (RBF) A hit tRule-Based Forwarding (RBF) Architecture</p>
    <p>RCERCE</p>
    <p>For policy-compliance, rules are certified by trusted entities  l ifi i i i</p>
    <p>D</p>
    <p>Rule Certification Entities (RCEs)</p>
    <p>Senders DestinationsRouters</p>
  </div>
  <div class="page">
    <p>R l B d F di (RBF) A hit tRule-Based Forwarding (RBF) Architecture</p>
    <p>RCEAll entities named in the rule (destination RCEAll entities named in the rule (destination, middleboxes, routers) must authorize the rule</p>
    <p>M Rule Rule</p>
    <p>M</p>
    <p>D</p>
    <p>Senders DestinationsRouters</p>
  </div>
  <div class="page">
    <p>R l B d F di (RBF) A hit tRule-Based Forwarding (RBF) Architecture</p>
    <p>RCERCE</p>
    <p>R_D</p>
    <p>D</p>
    <p>Senders DestinationsRouters</p>
  </div>
  <div class="page">
    <p>R l B d F di (RBF) A hit tRule-Based Forwarding (RBF) Architecture</p>
    <p>RCE</p>
    <p>DNS</p>
    <p>RCE</p>
    <p>I t l i t DNS</p>
    <p>Extended DNS: returns rule instead of address R_D</p>
    <p>Insert rules into DNS</p>
    <p>D</p>
    <p>Senders DestinationsRouters</p>
  </div>
  <div class="page">
    <p>R l B d F di (RBF) A hit tRule-Based Forwarding (RBF) Architecture</p>
    <p>RCE</p>
    <p>DNS</p>
    <p>R D</p>
    <p>RCE</p>
    <p>Sources obtain rules</p>
    <p>R_D</p>
    <p>DS</p>
    <p>Senders DestinationsRouters</p>
  </div>
  <div class="page">
    <p>R l B d F di (RBF) A hit tRule-Based Forwarding (RBF) Architecture</p>
    <p>RCE</p>
    <p>DNS</p>
    <p>RCE</p>
    <p>I t th i k tInsert them in packets</p>
    <p>D R_D Payload</p>
    <p>S</p>
    <p>Senders DestinationsRouters</p>
  </div>
  <div class="page">
    <p>R l B d F di (RBF) A hit tRule-Based Forwarding (RBF) Architecture</p>
    <p>RCE</p>
    <p>DNS</p>
    <p>RCE</p>
    <p>Routers  Verify rule signature</p>
    <p>D R_D Payload</p>
    <p>y g  Follow rule directives</p>
    <p>S</p>
    <p>Senders DestinationsRouters</p>
  </div>
  <div class="page">
    <p>R l B d F di (RBF) A hit tRule-Based Forwarding (RBF) Architecture</p>
    <p>RCE</p>
    <p>DNS</p>
    <p>RCE</p>
    <p>Packets may contain a return rule</p>
    <p>D R_S PayloadR_D</p>
    <p>S</p>
    <p>Senders DestinationsRouters</p>
    <p>R_D PayloadR_S</p>
  </div>
  <div class="page">
    <p>R l B d F di (RBF) A hit tRule-Based Forwarding (RBF) Architecture</p>
    <p>Control Plane RCE</p>
    <p>DNS</p>
    <p>RCE</p>
    <p>Distribution Certification</p>
    <p>Data Plane</p>
    <p>Senders DestinationsRouters</p>
  </div>
  <div class="page">
    <p>R l B d F di (RBF) A hit tRule-Based Forwarding (RBF) Architecture</p>
    <p>Control Plane RCE</p>
    <p>DNS</p>
    <p>RCE</p>
    <p>Distribution Certification</p>
    <p>Data Plane</p>
    <p>Senders DestinationsRouters</p>
  </div>
  <div class="page">
    <p>RBF AssumptionsRBF Assumptions Anti-spoofing mechanism</p>
    <p>Ingress filtering</p>
    <p>f l f d d b fExistence of Rule Certifying Entities and distribution of RCE keys to routers</p>
    <p>RCEs few large Verisign-like entities or AS basedRCEs few large Verisign like entities or AS based</p>
    <p>Rule distribution (DNS) well provisioned against DDoSu e st but o ( S) we p ov s o e aga st oS attacks</p>
  </div>
  <div class="page">
    <p>OutlineOutline Motivation &amp; Solution Overview</p>
    <p>Rule-Based Forwarding Architecture  Overview</p>
    <p>Rule Forwarding Mechanism &amp; Examples</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>RBF Mechanism SpecificationRBF Mechanism  Specification Rule: sequence of actions conditioned by if-then-elseq y statements</p>
    <p>if(&lt;CONDITION&gt;) ACTION1 l C O 2</p>
    <p>Conditions: comparison operations on packet header &amp; router state</p>
    <p>else ACTION2</p>
    <p>(attributes)</p>
  </div>
  <div class="page">
    <p>RBF Mechanism ActionsRBF Mechanism  Actions</p>
    <p>Rule actions are:</p>
    <p>Rule actions are:</p>
  </div>
  <div class="page">
    <p>Rule Forwarding MechanismRule Forwarding Mechanism</p>
    <p>C Current IP routers</p>
    <p>FIB IP IP</p>
    <p>Forwarding</p>
  </div>
  <div class="page">
    <p>Rule Forwarding MechanismRule Forwarding Mechanism</p>
    <p>RBF routers</p>
    <p>Rule Forwarding</p>
    <p>Router Attributes</p>
    <p>RBF New forwarding</p>
    <p>FIB IP IP</p>
    <p>Forwarding</p>
    <p>layer</p>
  </div>
  <div class="page">
    <p>Rule Forwarding MechanismRule Forwarding Mechanism</p>
    <p>S c as</p>
    <p>t</p>
    <p>n g Specialized</p>
    <p>ID</p>
    <p>S</p>
    <p>M u</p>
    <p>lt ic</p>
    <p>C ac</p>
    <p>h in forwarding</p>
    <p>functions (optional)</p>
    <p>RBF routers</p>
    <p>Rule Forwarding</p>
    <p>Router Attributes</p>
    <p>RBF New forwarding</p>
    <p>FIB IP IP</p>
    <p>Forwarding</p>
    <p>layer</p>
  </div>
  <div class="page">
    <p>Rule Forwarding MechanismRule Forwarding Mechanism</p>
    <p>S c as</p>
    <p>t</p>
    <p>n g</p>
    <p>Controlled by ISPs</p>
    <p>ID S</p>
    <p>M u</p>
    <p>lt ic</p>
    <p>C ac</p>
    <p>h in</p>
    <p>Controlled by ISPs and middlebox owners</p>
    <p>Rule Forwarding</p>
    <p>Router Attributes</p>
    <p>FIB IP</p>
    <p>Forwarding</p>
  </div>
  <div class="page">
    <p>Rule Forwarding MechanismRule Forwarding Mechanism</p>
    <p>S c as</p>
    <p>t</p>
    <p>n g</p>
    <p>ID S</p>
    <p>M u</p>
    <p>lt ic</p>
    <p>C ac</p>
    <p>h in</p>
    <p>Rule Forwarding</p>
    <p>Router Attributes</p>
    <p>Examples:  routers address</p>
    <p>i</p>
    <p>FIB IP</p>
    <p>Forwarding</p>
    <p>queue size  availability of</p>
    <p>specialized ffunction</p>
  </div>
  <div class="page">
    <p>Rule Forwarding MechanismRule Forwarding Mechanism</p>
    <p>S c as</p>
    <p>t</p>
    <p>n g Rules cannot</p>
    <p>ID S</p>
    <p>M u</p>
    <p>lt ic</p>
    <p>C ac</p>
    <p>h in</p>
    <p>modify router attributes</p>
    <p>Rule Forwarding</p>
    <p>Router Attributes</p>
    <p>Examples:  routers address</p>
    <p>i</p>
    <p>FIB IP</p>
    <p>Forwarding</p>
    <p>queue size  availability of</p>
    <p>specialized ffunction</p>
  </div>
  <div class="page">
    <p>Rule Forwarding MechanismRule Forwarding Mechanism</p>
    <p>S c as</p>
    <p>t</p>
    <p>n g</p>
    <p>ID S</p>
    <p>M u</p>
    <p>lt ic</p>
    <p>C ac</p>
    <p>h in</p>
    <p>Rule Forwarding</p>
    <p>Router Attributes</p>
    <p>FIB IP</p>
    <p>Forwarding  5 tuple  A bit ti  Arbitrary semantics (e.g., middlebox was visited)</p>
    <p>Rule PayloadAttributes 1</p>
  </div>
  <div class="page">
    <p>Rule Forwarding MechanismRule Forwarding Mechanism</p>
    <p>S c as</p>
    <p>t</p>
    <p>n g</p>
    <p>ID S</p>
    <p>M u</p>
    <p>lt ic</p>
    <p>C ac</p>
    <p>h in</p>
    <p>Rule Forwarding</p>
    <p>Router Attributes</p>
    <p>Rules can modify packet attributes</p>
    <p>FIB IP</p>
    <p>Forwarding  5 tuple  A bit ti  Arbitrary semantics (e.g., middlebox was visited)</p>
    <p>Rule PayloadAttributes 1</p>
  </div>
  <div class="page">
    <p>Rule Forwarding MechanismRule Forwarding Mechanism</p>
    <p>S c as</p>
    <p>t</p>
    <p>n g</p>
    <p>ID S</p>
    <p>M u</p>
    <p>lt ic</p>
    <p>C ac</p>
    <p>h in</p>
    <p>Rule Forwarding</p>
    <p>Router Attributes</p>
    <p>Rule Attributes 1</p>
    <p>FIB IP</p>
    <p>Forwarding</p>
    <p>Payload</p>
  </div>
  <div class="page">
    <p>Rule Forwarding MechanismRule Forwarding Mechanism</p>
    <p>S c as</p>
    <p>t</p>
    <p>n g</p>
    <p>ID S</p>
    <p>M u</p>
    <p>lt ic</p>
    <p>C ac</p>
    <p>h in</p>
    <p>Rule can:</p>
    <p>Rule Forwarding</p>
    <p>Router Attributes</p>
    <p>Rule</p>
    <p>attributes</p>
    <p>Attributes 1Attributes 2</p>
    <p>FIB IP</p>
    <p>Forwarding</p>
    <p>Payload</p>
  </div>
  <div class="page">
    <p>Rule Forwarding MechanismRule Forwarding Mechanism</p>
    <p>S c as</p>
    <p>t</p>
    <p>n g</p>
    <p>ID S</p>
    <p>M u</p>
    <p>lt ic</p>
    <p>C ac</p>
    <p>h in</p>
    <p>Rule can:</p>
    <p>Rule Rule Forwarding</p>
    <p>Router Attributes</p>
    <p>attributes</p>
    <p>Attributes 2</p>
    <p>FIB IP</p>
    <p>Forwarding</p>
    <p>Payload</p>
    <p>if(router.congestion &gt; pkt.max_congestion) pkt.max_congestion = router.congestion</p>
    <p>Example:</p>
    <p>sendto D</p>
  </div>
  <div class="page">
    <p>Rule Forwarding MechanismRule Forwarding Mechanism</p>
    <p>S c as</p>
    <p>t</p>
    <p>n g</p>
    <p>ID S</p>
    <p>M u</p>
    <p>lt ic</p>
    <p>C ac</p>
    <p>h in</p>
    <p>Rule can:</p>
    <p>Rule Rule Forwarding</p>
    <p>Router Attributes</p>
    <p>attributes</p>
    <p>FIB IP</p>
    <p>Forwarding</p>
    <p>Payload</p>
  </div>
  <div class="page">
    <p>Rule Forwarding MechanismRule Forwarding Mechanism</p>
    <p>S c as</p>
    <p>t</p>
    <p>n g</p>
    <p>ID S</p>
    <p>M u</p>
    <p>lt ic</p>
    <p>C ac</p>
    <p>h in</p>
    <p>Rule can:</p>
    <p>Rule Rule Forwarding</p>
    <p>Router Attributes</p>
    <p>attributes</p>
    <p>FIB IP</p>
    <p>Forwarding</p>
    <p>Payload</p>
    <p>if(pkt.source != S) drop</p>
    <p>Example:</p>
    <p>sendto D</p>
  </div>
  <div class="page">
    <p>Rule Forwarding MechanismRule Forwarding Mechanism</p>
    <p>S c as</p>
    <p>t</p>
    <p>n g</p>
    <p>ID S</p>
    <p>M u</p>
    <p>lt ic</p>
    <p>C ac</p>
    <p>h in</p>
    <p>Rule can:</p>
    <p>Rule Rule Forwarding</p>
    <p>Router Attributes</p>
    <p>attributes</p>
    <p>FIB IP</p>
    <p>Forwarding 3. Forward</p>
    <p>Payload</p>
    <p>Rule Attributes 2 Payload</p>
  </div>
  <div class="page">
    <p>Rule Forwarding MechanismRule Forwarding Mechanism</p>
    <p>S c as</p>
    <p>t</p>
    <p>n g</p>
    <p>ID S</p>
    <p>M u</p>
    <p>lt ic</p>
    <p>C ac</p>
    <p>h in</p>
    <p>Rule can:</p>
    <p>Rule Rule Forwarding</p>
    <p>Router Attributes</p>
    <p>attributes</p>
    <p>FIB IP</p>
    <p>Forwarding 3. Forward</p>
    <p>Payload</p>
    <p>sendto DExample:</p>
    <p>Rule Attributes 2 Payload</p>
  </div>
  <div class="page">
    <p>Rule Forwarding MechanismRule Forwarding Mechanism</p>
    <p>S c as</p>
    <p>t</p>
    <p>n g</p>
    <p>ID S</p>
    <p>M u</p>
    <p>lt ic</p>
    <p>C ac</p>
    <p>h in</p>
    <p>Rule can:</p>
    <p>Rule Rule Forwarding</p>
    <p>Router Attributes</p>
    <p>attributes</p>
    <p>FIB IP</p>
    <p>Forwarding 3. Forward</p>
    <p>Payload</p>
  </div>
  <div class="page">
    <p>Rule Forwarding MechanismRule Forwarding Mechanism</p>
    <p>S c as</p>
    <p>t</p>
    <p>n g</p>
    <p>ID S</p>
    <p>M u</p>
    <p>lt ic</p>
    <p>C ac</p>
    <p>h in</p>
    <p>Rule can:</p>
    <p>Rule Rule Forwarding</p>
    <p>Router Attributes</p>
    <p>attributes</p>
    <p>FIB IP</p>
    <p>Forwarding 3. Forward</p>
    <p>Payload</p>
    <p>invoke CachingFunc Example:</p>
    <p>sendto D</p>
  </div>
  <div class="page">
    <p>RBF Mechanism Rule LeaseRBF Mechanism  Rule Lease</p>
    <p>Each rule has an associated lease period</p>
    <p>Routers drop expired rules</p>
  </div>
  <div class="page">
    <p>Examples Waypoint Examples  Waypoint R_D: Go to R1 before reaching DGo to R1 before reaching D</p>
    <p>R1</p>
    <p>S D</p>
  </div>
  <div class="page">
    <p>Examples Waypoint Examples  Waypoint R_D: if(packet been to R1 == 0)if(packet.been_to_R1 == 0)</p>
    <p>if(router.address != R1) sendto R1</p>
    <p>else packet.been to R1 = 1else packet.been_to_R1 1 if(packet.been_to_R1 == 1)</p>
    <p>sendto D</p>
    <p>R1</p>
    <p>S D</p>
  </div>
  <div class="page">
    <p>Examples Waypoint Examples  Waypoint R_D: if(packet been to R1 == 0)</p>
    <p>Packet attribute indicating h h k h i i d R1if(packet.been_to_R1 == 0)</p>
    <p>if(router.address != R1) sendto R1</p>
    <p>else packet.been to R1 = 1</p>
    <p>whether packet has visited R1</p>
    <p>else packet.been_to_R1 1 if(packet.been_to_R1 == 1)</p>
    <p>sendto D</p>
    <p>R1</p>
    <p>R_D been_to_R1 = 0 S</p>
    <p>D</p>
  </div>
  <div class="page">
    <p>Examples Waypoint R_D: if(packet been to R1 == 0)</p>
    <p>Examples  Waypoint Before waypoint R1</p>
    <p>if(packet.been_to_R1 == 0) if(router.address != R1)</p>
    <p>sendto R1 else packet.been to R1 = 1else packet.been_to_R1 1</p>
    <p>if(packet.been_to_R1 == 1) sendto D</p>
    <p>R1</p>
    <p>R_D been_to_R1 = 0 S</p>
    <p>D</p>
  </div>
  <div class="page">
    <p>Examples Waypoint R_D: if(packet been to R1 == 0)</p>
    <p>Examples  Waypoint</p>
    <p>if(packet.been_to_R1 == 0) if(router.address != R1)</p>
    <p>sendto R1 else packet.been to R1 = 1</p>
    <p>At the waypoint</p>
    <p>else packet.been_to_R1 1 if(packet.been_to_R1 == 1)</p>
    <p>sendto D</p>
    <p>R_D been_to_R1 = 1 R1</p>
    <p>S D</p>
  </div>
  <div class="page">
    <p>Examples Waypoint R_D: if(packet been to R1 == 0)</p>
    <p>Examples  Waypoint</p>
    <p>if(packet.been_to_R1 == 0) if(router.address != R1)</p>
    <p>sendto R1 else packet.been to R1 = 1 After the waypointelse packet.been_to_R1 1</p>
    <p>if(packet.been_to_R1 == 1) sendto D</p>
    <p>After the waypoint</p>
    <p>R1</p>
    <p>R_D been_to_R1 = 1 S</p>
    <p>D</p>
  </div>
  <div class="page">
    <p>Examples Middlebox R_D: if(packet been to R1 == 0)</p>
    <p>Examples  Middlebox</p>
    <p>if(packet.been_to_R1 == 0) if(router.address != R1)</p>
    <p>sendto R1 else else</p>
    <p>packet.been_to_R1 = 1 invoke IDS_func</p>
    <p>if(packet.been_to_R1 == 1) Addition to the waypoint rule</p>
    <p>(p _ _ ) sendto D</p>
    <p>R1  IDS functionality</p>
    <p>S D</p>
  </div>
  <div class="page">
    <p>Examples Secure Middlebox R_D: if(packet been to R1 == 0)</p>
    <p>Examples  Secure Middlebox</p>
    <p>if(packet.been_to_R1 == 0) if(router.address != R1)</p>
    <p>sendto R1 else</p>
    <p>Malicious user could set the packet attributeselse</p>
    <p>packet.been_to_R1 = 1 invoke IDS_func</p>
    <p>if(packet.been_to_R1 == 1)</p>
    <p>the packet attributes so that packet appears to have visited the middlebox(p _ _ )</p>
    <p>sendto D</p>
    <p>R1</p>
    <p>S</p>
    <p>R_D been_to_R1 = 1 D</p>
    <p>_ _ _</p>
  </div>
  <div class="page">
    <p>Examples Secure Middlebox (1)Examples  Secure Middlebox (1) R_D: if(packet been to R1 == 0)if(packet.been_to_R1 == 0)</p>
    <p>if(router.address != R1) sendto R1</p>
    <p>else else packet.been_to_R1 = 1 packet.source = R1 invoke IDS_func</p>
    <p>Allow only packets from R1 when state equals 1</p>
    <p>_ if(packet.been_to_R1 == 1)</p>
    <p>if(packet.source == R1) sendto D</p>
    <p>Anti-spoofing does not allow spoofing the source attribute</p>
  </div>
  <div class="page">
    <p>Examples Secure Middlebox (2)Examples  Secure Middlebox (2) R_D: if(packet been to R1 == 0)if(packet.been_to_R1 == 0)</p>
    <p>if(router.address != R1) sendto R1</p>
    <p>else Invoke functionality to (cryptographically) prove else</p>
    <p>packet.been_to_R1 = 1 invoke Crypto_proof</p>
    <p>if(packet.been_to_R1 == 1)</p>
    <p>(cryptographically) prove packet visited middlebox</p>
    <p>(p _ _ ) packet. been_to_R1 = 2 invoke IDS_func</p>
    <p>if(packet.been_to_R1 == 2) Invoke functionality to verify the middlebox proofs at D</p>
    <p>if(router.address != D) sendto D</p>
    <p>else i k V if d D li</p>
    <p>p</p>
    <p>invoke Verify_and_Deliver</p>
  </div>
  <div class="page">
    <p>Examples Conditioned MiddleboxExamples  Conditioned Middlebox R_D: if(packet dest port == 80)if(packet.dest_port == 80)</p>
    <p>sendto D else</p>
    <p>//Middlebox rule Use the Middlebox only for packets not //Middlebox rule</p>
    <p>... only for packets not destined to port 80</p>
    <p>IDS</p>
    <p>P ! 80S D</p>
    <p>Port = 80</p>
    <p>Port != 80</p>
  </div>
  <div class="page">
    <p>Examples DoS protectionExamples  DoS protection Create capability-like rules, e.g., for a client with address S</p>
    <p>R_S_D: if(packet.source != S)</p>
    <p>dropdrop sendto D</p>
  </div>
  <div class="page">
    <p>Examples DoS protectionExamples  DoS protection Create capability-like rules, e.g., for a client with address S</p>
    <p>R_S_D: if(packet.source != S)</p>
    <p>drop</p>
    <p>D can control number of simultaneous clients by controlling</p>
    <p>drop sendto D</p>
    <p>y g number of authorized rules (a rule for each client)</p>
  </div>
  <div class="page">
    <p>Examples DoS protectionExamples  DoS protection Create capability-like rules, e.g., for a client with address S</p>
    <p>R_S_D: if(packet.source != S)</p>
    <p>drop</p>
    <p>D can control number of simultaneous clients by controlling</p>
    <p>drop sendto D</p>
    <p>y g number of authorized rules (a rule for each client)</p>
    <p>Need to grant rules on demandNeed to grant rules on demand Dynamic (vs. static DNS) Provision this service against DDoS (denial of rule)g DNS redirects to third parties providing this service</p>
  </div>
  <div class="page">
    <p>RBF ExamplesRBF Examples Filter ports/prefixes  only receive specific traffic P t t i t D S tt kProtect against DoS attacks Mobility Middleboxes Secure loose path forwarding  select provider, reliability Multiple paths AnycastAnycast Record path state  network probing, ECN, path identifier On-path redirection  Delay Tolerant Networks Use on-path router functions deployed by ISPs  Multicast, caching, WAN optimizers, content-routing, energy efficiency ...</p>
  </div>
  <div class="page">
    <p>Rule PropertiesRule Properties 1. Flexible</p>
  </div>
  <div class="page">
    <p>Rule PropertiesRule Properties 1. Flexible</p>
    <p>Rules enable endpoints to: a) Block unwanted packets in the network</p>
    <p>b) Control path selection using waypoints) p g yp</p>
    <p>c) Use router state in forwarding decisions and record this state</p>
    <p>d) Use specialized functions at middleboxes and routers, if available</p>
  </div>
  <div class="page">
    <p>Rule PropertiesRule Properties 1. Flexible</p>
  </div>
  <div class="page">
    <p>Rule PropertiesRule Properties 1. Flexible</p>
    <p>Route discovery and computation fully controlled by ISPs</p>
  </div>
  <div class="page">
    <p>Rule PropertiesRule Properties 1. Flexible</p>
  </div>
  <div class="page">
    <p>Rule PropertiesRule Properties 1. Flexible</p>
    <p>No loops, only comparison operations, cannot modify payload</p>
    <p>Cannot modify router stateCannot modify router state Cannot amplify traffic</p>
    <p>No network loops (static analysis), cannot replicate packets</p>
    <p>Invoked functions are fully controlled by ISPs/Mbox owners Resource isolation and access control to prevent attacks</p>
    <p>Rules merely offer a (policy compliant) mechanism to use themy (p y p )</p>
  </div>
  <div class="page">
    <p>Related WorkRelated Work 1. Flexibility</p>
  </div>
  <div class="page">
    <p>Related WorkRelated Work 1. Flexibility</p>
    <p>Active Networks, ESP, Overlays (e.g., i3, DOA), Loose path forwarding, DTN, Mobility (e.g., Mobile IP, HIP), Multiple paths (e.g., MIRO), etc.p ( g , O), Rules vs. Active Networks:</p>
    <p>Forwarding directives vs. programs</p>
    <p>Safe and statically analyzable</p>
    <p>Policy-compliance for multiple-parties</p>
    <p>Allow invoking ISP deployed functions for processing</p>
  </div>
  <div class="page">
    <p>Related WorkRelated Work 1. Flexibility</p>
    <p>Adds flexibility</p>
    <p>Adds multi-party policy compliance</p>
  </div>
  <div class="page">
    <p>Related WorkRelated Work 1. Flexibility</p>
    <p>Generalizes flexibility</p>
    <p>Enables richer policies based on entire forwarding behavior</p>
  </div>
  <div class="page">
    <p>OutlineOutline Motivation &amp; Solution Overview</p>
    <p>Rule-Based Forwarding Architecture  Overview</p>
    <p>Rule Forwarding Mechanism &amp; Examples</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Evaluation QuestionsEvaluation  Questions Size overhead of rules</p>
    <p>Forwarding overhead Fast path (no rule verification)p ( ) Slow path (involves rule verification)</p>
    <p>P f i l ti b t i k d f ti d f diPerformance isolation between invoked functions and forwarding</p>
    <p>Load on RCEs</p>
    <p>Security analysis</p>
  </div>
  <div class="page">
    <p>Evaluation QuestionsEvaluation  Questions Size overhead of rules</p>
    <p>Forwarding overhead Fast path (no rule verification)p ( ) Slow path (involves rule verification)</p>
    <p>P f i l ti b t i k d f ti d f diPerformance isolation between invoked functions and forwarding</p>
    <p>Load on RCEs</p>
    <p>Security analysis</p>
  </div>
  <div class="page">
    <p>Evaluation Rule SizesEvaluation  Rule Sizes 140</p>
    <p>Rule Encoding Control Signature</p>
    <p>es</p>
    <p>Rule Encoding Control Signature</p>
    <p>e</p>
  </div>
  <div class="page">
    <p>Evaluation Rule SizesEvaluation  Rule Sizes 140</p>
    <p>Rule Encoding Control Signature</p>
    <p>es</p>
    <p>Rule Encoding Control Signature</p>
    <p>e</p>
    <p>O h d f l i ~60 140 b t 0</p>
  </div>
  <div class="page">
    <p>Evaluation Rule SizesEvaluation  Rule Sizes 140</p>
    <p>Rule Encoding Control Signature</p>
    <p>es</p>
    <p>Rule Encoding Control Signature</p>
    <p>e</p>
    <p>A 85 b t 13% I t t k t (630B) 0</p>
  </div>
  <div class="page">
    <p>Evaluation Rule SizesEvaluation  Rule Sizes 140</p>
    <p>Rule Encoding Control Signature</p>
    <p>es</p>
    <p>Rule Encoding Control Signature</p>
    <p>e</p>
    <p>A 85 b t 13% I t t k t (630B) 0</p>
  </div>
  <div class="page">
    <p>Evaluation Prototype RBF RouterEvaluation  Prototype RBF Router Software router on top of RouteBricks [SOSP 2009] 8 core Nehalem ser er 2 dual port NICs8 core Nehalem server, 2 dual-port NICs Example router setup:</p>
    <p>Kernel Kernel User level</p>
    <p>IP IP IP IP as t</p>
    <p>al l</p>
    <p>as t</p>
    <p>al l</p>
    <p>ng ng</p>
    <p>R B</p>
    <p>F +</p>
    <p>I</p>
    <p>R B</p>
    <p>F +</p>
    <p>I</p>
    <p>R B</p>
    <p>F +</p>
    <p>I</p>
    <p>R B</p>
    <p>F +</p>
    <p>I</p>
    <p>M ul</p>
    <p>ti ca</p>
    <p>Fi re</p>
    <p>w a</p>
    <p>M ul</p>
    <p>ti ca</p>
    <p>Fi re</p>
    <p>w a</p>
    <p>C ac</p>
    <p>hi n</p>
    <p>ID S</p>
    <p>C ac</p>
    <p>ni n</p>
    <p>ID S</p>
    <p>M em</p>
    <p>or y</p>
    <p>co nt</p>
    <p>ro lle</p>
    <p>r</p>
    <p>M em</p>
    <p>or y</p>
    <p>co nt</p>
    <p>ro lle</p>
    <p>r</p>
    <p>Cache Cache</p>
    <p>Socket 0 Socket 1 CPU Cores</p>
    <p>Cache Cache</p>
  </div>
  <div class="page">
    <p>Evaluation Forwarding Using RulesEvaluation  Forwarding Using Rules No signature verification, using all 8 cores</p>
    <p>p s</p>
    <p>RBF over RouteBricks RouteBricks alone</p>
    <p>G b</p>
    <p>p</p>
  </div>
  <div class="page">
    <p>Evaluation Forwarding Using RulesEvaluation  Forwarding Using Rules</p>
    <p>p s</p>
    <p>RBF over RouteBricks RouteBricks alone</p>
    <p>G b</p>
    <p>p</p>
    <p>Rule forwarding incurs little overhead on Routebricks</p>
  </div>
  <div class="page">
    <p>Evaluation Forwarding Using RulesEvaluation  Forwarding Using Rules</p>
    <p>p s</p>
    <p>RBF over RouteBricks RouteBricks alone</p>
    <p>G b</p>
    <p>p</p>
    <p>No overhead for packets &gt; 500B</p>
  </div>
  <div class="page">
    <p>Evaluation Forwarding Using RulesEvaluation  Forwarding Using Rules</p>
    <p>p s</p>
    <p>RBF over RouteBricks RouteBricks alone</p>
    <p>G b</p>
    <p>p</p>
    <p>Soft router RBF can forward 35Gbps real traffic</p>
  </div>
  <div class="page">
    <p>Evaluation Signature VerificationEvaluation  Signature Verification Only at trust boundary routers (lower traffic than core)</p>
    <p>Result can be cached Cache is small (e.g., 19 bytes/rule) and exact match lookup Packets from new flows represent 1% of backbone link capacity on average, worst case 5% of packetson average, worst case 5% of packets</p>
    <p>Doable with existing hardware (crypto processors, ASICs)</p>
    <p>Can be parallelized!</p>
  </div>
  <div class="page">
    <p>SummarySummary RBF  flexible and policy compliant architecture</p>
    <p>Packets carry rules</p>
    <p>Rule  contains forwarding directives Flexible: if-then-else conditions on packet &amp; router</p>
    <p>b d f k h d d k attributes, modify packet header and use in-network functions Policy-compliant: signed by third parties  RCEsPolicy-compliant: signed by third parties RCEs Safe: cannot corrupt routers or amplify traffic</p>
  </div>
</Presentation>
