<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>M a y a H a r i d a s a n</p>
    <p>I q b a l M o h o m e d</p>
    <p>D o u g Te r r y</p>
    <p>C h a n d u T h e k k a t h</p>
    <p>L i Z h a n g</p>
    <p>M I C R O S O F T R E S E A R C H</p>
    <p>S I L I C O N VA L L E Y</p>
    <p>StarTrack Next Generation A Scalable Infrastructure for Track-Based Applications</p>
    <p>OSDI 2010</p>
  </div>
  <div class="page">
    <p>Location-Based Applications</p>
    <p>Many phones already have the ability to determine their own location  GPS, cell tower triangulation, or proximity to WiFi hotspots</p>
    <p>Many mobile applications use location information</p>
  </div>
  <div class="page">
    <p>Track</p>
    <p>Time-ordered sequence of location readings</p>
    <p>Latitude: 37.4013 Longitude: -122.0730 Time: 07/08/10 08:46:45.125</p>
  </div>
  <div class="page">
    <p>Application: Personalized Driving Directions</p>
    <p>Goal: Find directions to new gym</p>
  </div>
  <div class="page">
    <p>Application: Personalized Driving Directions</p>
    <p>Goal: Find directions to new gym</p>
    <p>Take US-101 North</p>
  </div>
  <div class="page">
    <p>A Taxonomy of Applications</p>
    <p>Personal Social</p>
    <p>Current location</p>
    <p>Driving directions, Nearby restaurants</p>
    <p>Friend finder, Crowd scenes</p>
    <p>Past locations</p>
    <p>Personal travel journal, Geocoded photos</p>
    <p>Post-it notes, Recommendations</p>
    <p>Tracks Personalized Driving Directions, Track-Based Search</p>
    <p>Ride sharing, Discovery, Urban sensing</p>
    <p>Class of applications enabled by StarTrack</p>
  </div>
  <div class="page">
    <p>StarTrack System</p>
    <p>ST Client</p>
    <p>Insertion Application</p>
    <p>Location Manager</p>
    <p>Retrieval  Manipulation  Comparison</p>
    <p>Application</p>
    <p>ST Client</p>
    <p>Insertion ST Server</p>
    <p>ST Server</p>
    <p>ST Server</p>
  </div>
  <div class="page">
    <p>System Challenges</p>
  </div>
  <div class="page">
    <p>Challenges of Using Raw Tracks</p>
    <p>Advantages of Canonicalization:  More efficient retrieval and comparison operations</p>
    <p>Enables StarTrack to maintain a list of non-duplicate tracks</p>
  </div>
  <div class="page">
    <p>StarTrack API</p>
    <p>Track Collections (TC): Abstract grouping of tracks</p>
    <p>Programming Convenience</p>
    <p>Implementation Efficiency</p>
    <p>Prevent unnecessary client-server message exchanges</p>
    <p>Enable delayed evaluation</p>
    <p>Enable caching and use of in-memory data structures</p>
    <p>Pre-filter tracks Manipulate tracks Fetch tracks</p>
  </div>
  <div class="page">
    <p>StarTrack API: Track Collections</p>
    <p>TC JoinTrackCollections (TC tCs[], bool removeDuplicates)</p>
    <p>TC SortTracks (TC tC, SortAttribute attr)</p>
    <p>TC TakeTracks(TC tC, int count)</p>
    <p>TC GetSimilarTracks (TC tC, Track refTrack, float simThreshold)</p>
    <p>TC GetPassByTracks (TC tC, Area[] areas)</p>
    <p>TC GetCommonSegments(TC tC, float freqThreshold)</p>
    <p>Track[] GetTracks (TC tC, int start, int count)</p>
    <p>Manipulation</p>
    <p>Retrieval</p>
    <p>Creation</p>
    <p>TC MakeCollection(GroupCriteria criteria, bool removeDuplicates)</p>
  </div>
  <div class="page">
    <p>API Usage: Ride-Sharing Application</p>
    <p>// get users most popular track in the morning TC myTC = MakeCollection(name = Maya, *0800 1000+, true); TC myPopTC = SortTracks(myTC, FREQ); Track track = GetTracks(myPopTC, 0, 1);</p>
    <p>// find tracks of all fellow employees</p>
    <p>TC msTC = MakeCollection(name.Employer = MS, *0800 1000+, true); // pick tracks from the community most similar to users popular track</p>
    <p>TC similarTC = GetSimilarTracks(msTC, track, 0.8); Track[] similarTracks = GetTracks(similarTC, 0, 20);</p>
    <p>// Find owners of tracks, and verify that each track is frequently traveled</p>
    <p>User[] result = FindOwnersOfFrequentTracks(similarTracks);</p>
  </div>
  <div class="page">
    <p>API Usage: Ride-Sharing Application</p>
    <p>// get users most popular track in the morning TC myTC = MakeCollection(name = Maya, *0800 1000+, true); TC myPopTC = SortTracks(myTC, FREQ); Track track = GetTracks(myPopTC, 0, 1);</p>
    <p>// find tracks of all fellow employees</p>
    <p>TC msTC = MakeCollection(name.Employer = MS, *0800 1000+, true); // pick tracks from the community most similar to users popular track</p>
    <p>TC similarTC = GetSimilarTracks(msTC, track, 0.8); Track[] similarTracks = GetTracks(similarTC, 0, 20);</p>
    <p>// Find owners of tracks, and verify that each track is frequently traveled</p>
    <p>User[] result = FindOwnersOfFrequentTracks(similarTracks);</p>
  </div>
  <div class="page">
    <p>Efficient Implementation of Operations</p>
    <p>StarTrack exploits redundancy in tracks for efficient retrieval from database  Set of non-duplicate tracks per user</p>
    <p>Separate table of unique coordinates</p>
    <p>StarTrack builds specialized in-memory data-structures to accelerate the evaluation of some operations  Quad-Trees for geographic range searches</p>
    <p>Track Trees for similarity searches</p>
  </div>
  <div class="page">
    <p>Track Similarity</p>
    <p>Track A Track B</p>
    <p>s1</p>
    <p>s2</p>
    <p>s3</p>
    <p>s4</p>
    <p>s5</p>
    <p>Track D</p>
    <p>s8</p>
    <p>s9</p>
    <p>Track C</p>
    <p>s6</p>
    <p>s7 Track A = Track B = S1, S2, S3, S4, S5</p>
    <p>Track C = S1, S2, S3, S4, S6, S7</p>
    <p>Track D = S1, S2, S3, S8, S9</p>
  </div>
  <div class="page">
    <p>Track Similarity</p>
    <p>Track A Track B</p>
    <p>s1</p>
    <p>s2</p>
    <p>s3</p>
    <p>s4</p>
    <p>s5</p>
    <p>Track D</p>
    <p>s8</p>
    <p>s9</p>
    <p>Track C</p>
    <p>s6</p>
    <p>s7</p>
    <p>Limited database support for computing track similarity</p>
    <p>SIM A,C = |S14|</p>
    <p>S14 + S5 + |S67|</p>
    <p>SIM A,B = |S15|</p>
    <p>S15</p>
    <p>Track A = Track B = S1, S2, S3, S4, S5</p>
    <p>Track C = S1, S2, S3, S4, S6, S7</p>
    <p>Track D = S1, S2, S3, S8, S9</p>
    <p>= 1</p>
  </div>
  <div class="page">
    <p>Track Tree</p>
    <p>Track A Track B</p>
    <p>s1</p>
    <p>s2</p>
    <p>s3</p>
    <p>s4</p>
    <p>s5</p>
    <p>Track D</p>
    <p>s8</p>
    <p>s9</p>
    <p>Track C</p>
    <p>s6 s7</p>
    <p>s1 s2 s3 s4 s5 s6 s7 s8 s9</p>
    <p>S1-2 S6-7 S8-9</p>
    <p>S1-3</p>
    <p>S1-4</p>
    <p>S1-5</p>
  </div>
  <div class="page">
    <p>Track Tree</p>
    <p>Track A Track B</p>
    <p>s1</p>
    <p>s2</p>
    <p>s3</p>
    <p>s4</p>
    <p>s5</p>
    <p>Track D</p>
    <p>s8</p>
    <p>s9</p>
    <p>Track C</p>
    <p>s6 s7</p>
    <p>s1 s2 s3 s4 s5 s6 s7 s8 s9</p>
    <p>S1-2 S6-7 S8-9</p>
    <p>S1-3</p>
    <p>S1-4</p>
    <p>S1-5</p>
    <p>GetSimilarTracks, GetCommonSegments</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Performance of our Track Tree approach</p>
    <p>Performance of 2 sample applications  Personalized Driving Directions</p>
    <p>Ride-sharing</p>
    <p>Configuration  Synthetically generated tracks</p>
    <p>Up to 9 StarTrack Servers + 3 Database Servers</p>
    <p>Server Configuration:</p>
    <p>2.6 GHz AMD Opteron Quad-Core Processors</p>
    <p>16 GB RAM</p>
  </div>
  <div class="page">
    <p>Evaluation: Track Tree</p>
    <p>Evaluation of GetSimilarTracks</p>
    <p>Alternative approaches:</p>
    <p>Database filtering</p>
    <p>Pre-filter tracks that intersect ref track at database</p>
    <p>In-memory filtering</p>
    <p>Pre-filter tracks that intersect ref track in memory</p>
    <p>In-memory brute force</p>
    <p>Compute similarity between each track and ref track in memory</p>
  </div>
  <div class="page">
    <p>Get Similar Tracks  Query Time</p>
    <p>Q u</p>
    <p>e ry</p>
    <p>T im</p>
    <p>e (</p>
    <p>m s)</p>
    <p>Number of tracks (thousands)</p>
    <p>Track Tree</p>
    <p>In-Memory Filtering</p>
    <p>In-Memory Brute Force</p>
    <p>Database Filtering</p>
  </div>
  <div class="page">
    <p>Track Tree Construction Costs</p>
    <p>S e</p>
    <p>co n</p>
    <p>d s</p>
    <p>M B</p>
    <p>y te</p>
    <p>s</p>
    <p>Number of Tracks (thousands)</p>
    <p>Time</p>
    <p>Memory</p>
  </div>
  <div class="page">
    <p>Performance of Applications</p>
    <p>Ride Sharing</p>
    <p>- Track Collection on multiple users</p>
    <p>- Calls to GetSimilarTracks</p>
    <p>- 30 requests/s at about 170 ms</p>
    <p>Personalized Driving Directions</p>
    <p>- Track Collection for single user at a time</p>
    <p>- Calls to GetCommonSegments</p>
    <p>- 30 requests/s at about 100 ms (uncached)</p>
    <p>- 250 requests/s at about 55 ms (cached)</p>
    <p>sp o</p>
    <p>n se</p>
    <p>T im</p>
    <p>e (</p>
    <p>m s)</p>
    <p>Request Rate (per second)</p>
    <p>sp o</p>
    <p>n se</p>
    <p>T im</p>
    <p>e (</p>
    <p>m s)</p>
    <p>Request Rate (per second)</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>StarTrack is a scalable service designed to manage tracks and facilitate the construction of track-based applications</p>
    <p>Important Design Features  Canonicalization of Tracks  API based on Track Collections  Use of Novel Data Structures</p>
    <p>Availability:  We are looking for users of our infrastructure. Please contact</p>
    <p>one of the authors if you are interested.</p>
  </div>
</Presentation>
