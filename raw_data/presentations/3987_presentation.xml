<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Navraj Chohan, Anand Gupta, Chris Bunch, Kowshik Prakasam, and Chandra Krintz</p>
    <p>HYBRID CLOUD SUPPORT FOR LARGE SCALE ANALYTICS AND WEB PROCESSING</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>Google App Engine (GAE)  GAE Analytics Libraries  AppScale  Hybrid</p>
    <p>Data synchronization  Hive Analytics</p>
    <p>Evaluation  Conclusion</p>
  </div>
  <div class="page">
    <p>Google App Engine</p>
  </div>
  <div class="page">
    <p>Google App Engine</p>
    <p>Platform-as-a-Service  Developers focus on their applications  Test locally then deploy on Googles infrastructure</p>
    <p>Language Support  Python 2.5 and 2.7  Java  Go</p>
    <p>500,000 existing apps  Auto-scaling, pay-as-you-go</p>
    <p>Web requests, background tasks, and storage</p>
  </div>
  <div class="page">
    <p>Google App Engine APIs</p>
    <p>Name Description</p>
    <p>Datastore Key/Value object storage</p>
    <p>Memcache Distributed caching service</p>
    <p>Blobstore Storage of large files</p>
    <p>Channel Long lived JavaScript connections</p>
    <p>Images Simple image manipulation</p>
    <p>Mail Sending and receiving email</p>
    <p>Users Login service with Google Accounts</p>
    <p>Task Queues Background tasks</p>
    <p>URL Fetch Resource fetching with HTTP request</p>
    <p>XMPP XMPP-compatible messaging service</p>
  </div>
  <div class="page">
    <p>Google App Engine</p>
    <p>Restrictions to enforce scalability and security  Limited query support  Runtime restrictions  No socket access, no file system access  White-list of libraries</p>
  </div>
  <div class="page">
    <p>Data Analytics in GAE</p>
  </div>
  <div class="page">
    <p>Task Queues</p>
    <p>Background tasks of 10 minutes  taskqueue.add(url='/path/to/my/worker)</p>
    <p>Task names to prevent fork bombs  Task Queue Chaining</p>
    <p>Splitting up large background jobs is the burden of the developer</p>
    <p>GAE Analytics libraries abstract away the Task Queue (TQ)</p>
  </div>
  <div class="page">
    <p>Fantasm</p>
    <p>Based on the Task Queue  Uses memcache and DB to</p>
    <p>manage state</p>
    <p>State machine driven  Specified in YAML</p>
    <p>Iterate over a large dataset  Fan-in to join data</p>
  </div>
  <div class="page">
    <p>Pipeline</p>
    <p>Task Queue based  Chains tasks into a workflow</p>
    <p>class Add(pipeline.Pipeline): def run(self, a, b): return a + b class Multiply(pipeline.Pipeline): def run(self, a, b): return a * b class LinearFunc(pipeline.Pipeline): def run(self, x, slope=1, offset=0): # y = m*x + b mx = yield Multiply(x, slope) yield Add(mx, offset)</p>
  </div>
  <div class="page">
    <p>GAE MapReduce</p>
    <p>Built on top of GAE infrastructure  Not Googles internal MapReduce or Hadoop</p>
    <p>Parallel processing and reductions on large datasets  Map across a particular type of object</p>
    <p>Must scan the entire type (no subsets)</p>
    <p>Multiple MR jobs can be linked with Pipeline</p>
  </div>
  <div class="page">
    <p>AppScale</p>
  </div>
  <div class="page">
    <p>AppScale</p>
    <p>Private PaaS with GAE API compatibility  Application portability  Engenders a developer community</p>
    <p>Distributed and fault tolerant API implementations  Leverages open source and new software systems</p>
    <p>Supports Python, Java, and Go languages  Infrastructure agnostic</p>
    <p>One virtual machine with all components  KVM, Xen, EC2, Eucalyptus, Openstack, etc</p>
    <p>Datastore agnostic  Cassandra, HBase, Hypertable, etc</p>
  </div>
  <div class="page">
    <p>AppController</p>
    <p>Java GAE Server Go GAE Server Python GAE Server</p>
    <p>eJabberD (xmpp &amp; channel API)</p>
    <p>Blobstore server memcacheD</p>
    <p>Routing (HAProxy and Nginx)</p>
    <p>Cassandra</p>
    <p>The AppScale Stack</p>
  </div>
  <div class="page">
    <p>GAE Analytics in AppScale</p>
    <p>Task Queue with RabbitMQ</p>
  </div>
  <div class="page">
    <p>Analytic Libraries in GAE</p>
    <p>Learning curve for libraries  Analytics must be part of application code</p>
    <p>Can introduce bugs  Can disrupt the user experience  May require significant code and time to implement</p>
  </div>
  <div class="page">
    <p>AppScale and GAE Hybrid</p>
  </div>
  <div class="page">
    <p>Hybrid Solution</p>
    <p>Connect GAE to AppScale  Scale of GAE for OTAP  Flexibility of AppScale for OLAP</p>
    <p>Contributions  Datastore mirroring  Hive queries</p>
  </div>
  <div class="page">
    <p>Datastore Library</p>
    <p>Datastore library for asynchronous updates  Best Effort (BE) with async URL Fetch  Eventual Consistency (EC) with Task Queue  No transaction support</p>
    <p>GAE</p>
    <p>AppScale</p>
    <p>Service User</p>
  </div>
  <div class="page">
    <p>Hive Support in AppScale</p>
    <p>Run SQL statements which translate to Hadoop MR jobs</p>
    <p>We provide the mapping interface from GAE data to Hive queries</p>
    <p>GAE</p>
    <p>AppScale</p>
    <p>Data Scientist</p>
  </div>
  <div class="page">
    <p>AppScale Stack with Hive Support</p>
    <p>AppController</p>
    <p>Java GAE Server Go GAE Server Python GAE Server</p>
    <p>eJabberD (xmpp &amp; channel API)</p>
    <p>Blobstore server memcacheD</p>
    <p>Routing (HAProxy and Nginx)</p>
    <p>CassandraFS</p>
    <p>Hadoop</p>
    <p>Hive</p>
  </div>
  <div class="page">
    <p>Hive Queries</p>
    <p>Simple, short, and fast on-demand queries  Offline processing of online data  Does not impact user experience  Does not introduce bugs or code bloat  No ETL, data processing in-place</p>
    <p>SELECT COUNT(*) FROM appid_kind;</p>
  </div>
  <div class="page">
    <p>Measurements</p>
  </div>
  <div class="page">
    <p>Cross Cloud Measurements</p>
    <p>EC2 Region A</p>
    <p>EC2 Region B</p>
    <p>GAE</p>
    <p>Async TaskQueue</p>
  </div>
  <div class="page">
    <p>Cross Cloud Data Transfer</p>
    <p>Round-trip Time and Bandwidth Between a GAE Application and Different EC2 Regions</p>
  </div>
  <div class="page">
    <p>Cross Cloud Task Queue Delay</p>
    <p>Round-trip time from multiple regions to a deployed GAE application with task queue delay</p>
  </div>
  <div class="page">
    <p>Analytic Execution Time</p>
    <p>Fantasm (GAE)</p>
    <p>Pipeline (GAE)</p>
    <p>MapReduce (GAE)</p>
    <p>Hive (AppScale)</p>
    <p>Aggregate 11334.59 98.34 377.70 20.94</p>
    <p>Grep 10360.40 98.89 227.57 10.69</p>
    <p>Join 10147.75 159.96 256.40 23.41</p>
    <p>Subset 78.28 3.81 237.75 20.66</p>
    <p>Wordcount 10977.50 222.14 840.71 21.54</p>
    <p>Processing 100K Entities (5 trials)</p>
  </div>
  <div class="page">
    <p>Cost Analysis</p>
    <p>Data synchronization  Bandwidth: $0.12/GB  Data backup</p>
    <p>Benefits  Programmer productivity  Ad-hoc analysis</p>
  </div>
  <div class="page">
    <p>Related Work</p>
    <p>Private PaaS offerings  Red Hats OpenShift  VMWares CloudFoundry</p>
    <p>GAE Compatible  TyphoonAE</p>
    <p>MapReduce  Amazon Elastic MapReduce  Mesos framework</p>
  </div>
  <div class="page">
    <p>Thanks</p>
    <p>Check out AppScale at:</p>
    <p>appscale.cs.ucsb.edu</p>
  </div>
</Presentation>
