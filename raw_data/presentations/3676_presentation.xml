<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Cached and Confused: Web Cache Deception in the Wild</p>
    <p>Seyed Ali Mirheidari, Sajjad Arshad, Kaan Onarlioglu, Bruno Crispo, Engin Kirda, William Robertson</p>
    <p>USENIX Security 2020</p>
    <p>University of Trento, Northeastern University, Akamai Technologies</p>
  </div>
  <div class="page">
    <p>Web Caches</p>
    <p>Effective solution to decrease network latency and web application load  Private cache for single user (e.g., web browsers)  Shared cache for multiple users (e.g., web servers, MitM proxies)  Key component of CDNs to provide web availability (a.k.a. Edge Servers)  Study shows 74% of the Alexa Top 1K make use of CDNs</p>
    <p>Most common targets are static but frequently accessed resources  HTML pages, scripts, style sheets, images, ...</p>
    <p>Web servers use Cache-Control headers to communicate with web caches  Cache-Control: no-store indicates that the response should not be stored  Even though web caches MUST respect these headers, they offer configuration options</p>
    <p>for their users to ignore header instructions  Simple caching rules based on resource paths, file names and extensions (e.g., jpg, css, js)</p>
  </div>
  <div class="page">
    <p>Path Confusion</p>
    <p>Traditionally, URLs referenced web resources by directly mapping them to web servers file system structure:  example.com/files/index.php?p1=v1 correspond to the file files/index.php at the web</p>
    <p>servers document root directory  Web servers introduced URL rewriting mechanisms to implement advanced</p>
    <p>application routing structures.  Clean URLs (a.k.a. RESTful URLs)</p>
    <p>example.com/index.php/v1 =&gt; example.com/files/index.php?p1=v1  Browsers and proxies are not aware of this layer of abstraction between the</p>
    <p>resource file system path and its URL.  They process the URLs in an unexpected manner a.k.a Path Confusion</p>
  </div>
  <div class="page">
    <p>Web Cache Deception (WCD)  Introduced in 2017 by Omer Gil with PoC against PayPal  WCD results different interpretations of a URL (path confusion) between a server</p>
    <p>and a web cache.</p>
  </div>
  <div class="page">
    <p>Research Questions  What is the prevalence of WCD vulnerabilities on popular, highly-trafficked</p>
    <p>domains?  Do WCD vulnerabilities expose PII and, if so, what kinds?  Can WCD vulnerabilities be used to defeat defenses against web application</p>
    <p>attacks?  Can WCD vulnerabilities be fully exploited by unauthenticated users?  Can variation of Path Confusion techniques expand the number of</p>
    <p>vulnerable/exploitable sites?  Is attacker geographical location important?  Are default configurations of major CDN providers vulnerable?</p>
  </div>
  <div class="page">
    <p>Methodology  Subdomain discovery to increase site coverage.  Created account for 295 sites from Alexa Top 5K</p>
    <p>Appended /&lt;random&gt;.css to each URL from the victim account..  visited same page from the (un)authenticated attack crawler and compare</p>
    <p>responses.  Responses analyzed for the disclosure of security tokens.</p>
  </div>
  <div class="page">
    <p>Crawling Stats &amp; Alexa Ranking</p>
  </div>
  <div class="page">
    <p>Research Questions  What is the prevalence of WCD vulnerabilities on popular, highly-trafficked</p>
    <p>domains?  Do WCD vulnerabilities expose PII and, if so, what kinds?  Can WCD vulnerabilities be used to defeat defenses against web application</p>
    <p>attacks?  Can WCD vulnerabilities be fully exploited by unauthenticated users?  Can variation of Path Confusion techniques expand the number of</p>
    <p>vulnerable/exploitable sites?  Is attacker geographical location important?  Are default configurations of major CDN providers vulnerable?</p>
  </div>
  <div class="page">
    <p>Vulnerabilities</p>
    <p>14 vulnerable sites leaked PII including names, usernames, email addresses, and phone numbers.</p>
    <p>6 vulnerable sites leaked CSRF tokens  6 vulnerable sites leaked session</p>
    <p>identifiers or user-specific API tokens  Our results show that WCD can fully</p>
    <p>exploit with unauthenticated attackers.</p>
  </div>
  <div class="page">
    <p>Research Questions  What is the prevalence of WCD vulnerabilities on popular, highly-trafficked</p>
    <p>domains?  Do WCD vulnerabilities expose PII and, if so, what kinds?  Can WCD vulnerabilities be used to defeat defenses against web application</p>
    <p>attacks?  Can WCD vulnerabilities be fully exploited by unauthenticated users?  Can variation of Path Confusion techniques expand the number of</p>
    <p>vulnerable/exploitable sites?  Is attacker geographical location important?  Are default configurations of major CDN providers vulnerable?</p>
  </div>
  <div class="page">
    <p>Variations on Path Confusion</p>
  </div>
  <div class="page">
    <p>Path Confusion Results  Results confirm our hypothesis that launching WCD attacks with variations on path</p>
    <p>confusion increased possibility of successful exploitation significantly.  Some variations elicit more 200 OK server responses increasing the likelihood of</p>
    <p>the web server returning sensitive information.  Each path confusion variation was able to attack a set of unique pages that were</p>
    <p>not vulnerable to other techniques.</p>
  </div>
  <div class="page">
    <p>Research Questions  What is the prevalence of WCD vulnerabilities on popular, highly-trafficked</p>
    <p>domains?  Do WCD vulnerabilities expose PII and, if so, what kinds?  Can WCD vulnerabilities be used to defeat defenses against web application</p>
    <p>attacks?  Can WCD vulnerabilities be fully exploited by unauthenticated users?  Can variation of Path Confusion techniques expand the number of</p>
    <p>vulnerable/exploitable sites?  Is attacker geographical location important?  Are default configurations of major CDN providers vulnerable?</p>
  </div>
  <div class="page">
    <p>Empirical Experiments  Cache Location</p>
    <p>Victim in Boston, MA, USA and Attacker in Trento, Italy.  Attack failed for 19 sites but 6 sites were still exploitable.</p>
    <p>Cache Expiration  Web caches typically store objects for a short amount of time.  Attackers have a limited window of opportunity to launch a successful WCD attack.  Repeated the attack with 1 hour, 6 hour, and 1 day delays for 19 sites.  16, 10, and 9 sites were exploitable in each case, respectively.</p>
    <p>Cache configuration  We tested the basic content delivery solutions offered by major vendor to extract the</p>
    <p>default configuration.  By default, many Major CDN vendors do not make RFC-compliant caching decision.</p>
  </div>
  <div class="page">
    <p>Lessons Learned &amp; Conclusion  Configuring web caches correctly is not a trivial task.</p>
    <p>Caching rules based on file extensions are prone to security problem.  CDNs are not intended to be plug &amp; play solutions.</p>
    <p>As WCD attacks impact all web cache technologies, there is a widespread lack of user awareness.  There exists no technology to reliably determine if any part of system is vulnerable</p>
    <p>WCD is generally a system safety problem  There are no isolated faulty components.  Complex interactions among different technologies must take into consideration.</p>
    <p>Variations of path confusion techniques make it possible to exploit sites that are otherwise not impacted by the original attacks.</p>
  </div>
  <div class="page">
    <p>Thanks! Questions?</p>
    <p>Seyed Ali Mirheidari, seyedali.mirheidari@unitn.it Sajjad JJ Arshad, @sajjadium</p>
    <p>Kaan Onarlioglu, Akamai, www.onarlioglu.com</p>
  </div>
</Presentation>
