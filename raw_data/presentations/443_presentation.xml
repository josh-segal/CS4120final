<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>In-Flight Aircraft Mechanics A Software Package Conversion Project</p>
    <p>Philip J. Hollenback philiph@yahoo-inc.com</p>
    <p>November 2010</p>
  </div>
  <div class="page">
    <p>What We Started With</p>
    <p>same as any other packaging system</p>
  </div>
  <div class="page">
    <p>Goals</p>
    <p>Repeatable software pushes Exact specification of installs All Apps All Environments</p>
    <p>Every machine gets every package!</p>
    <p>Rollback to previous releases</p>
  </div>
  <div class="page">
    <p>Tools</p>
    <p>Tools already existed at Yahoo</p>
    <p>dont reinvent the wheel</p>
    <p>Package management: yinst Servers state definition: igor Release assembly: SRM Software deployment: Pogo</p>
  </div>
  <div class="page">
    <p>Architecture</p>
    <p>Example Mail Farm</p>
    <p>fefe fe fe fe fe fe fe</p>
    <p>fefe fe fe fe fe fe</p>
    <p>vxs vxs vxs vxs</p>
    <p>mix</p>
    <p>mix</p>
    <p>the farm - about 20 servers mailstore and access where a users mail resides mostly independent from other farms</p>
  </div>
  <div class="page">
    <p>Where to Begin?</p>
    <p>map packages to functional areas</p>
    <p>dev team signoff</p>
    <p>find hidden package deps and assumptions do we really need 1300 packages?</p>
    <p>sadly, yes</p>
  </div>
  <div class="page">
    <p>Modeling</p>
    <p>VM test environment install package list with igor did it work?</p>
    <p>not the first 50 times!</p>
    <p>rinse, lather, repeat</p>
  </div>
  <div class="page">
    <p>Production Conversion</p>
    <p>rolling upgrade on live hosts</p>
    <p>OS reinstall required!</p>
    <p>shared between US &amp; Bangalore</p>
  </div>
  <div class="page">
    <p>Release Assembly</p>
    <p>dev groups submit packages/settings as igor tags</p>
    <p>tags specify role revision exact list of packages/settings</p>
    <p>RM team assembles into release using SRM</p>
    <p>also performs basic testing</p>
    <p>QA does functional testing QA Signoff - we have a train! Repeat every 3 weeks forever</p>
  </div>
  <div class="page">
    <p>Production Deployment</p>
    <p>Release Management Team responsible for schedule currently about 10 days to completion 4 stages</p>
    <p>Stop and rollback at any point if needed</p>
    <p>yes it does happen every few months!</p>
  </div>
  <div class="page">
    <p>What Worked Great</p>
    <p>Defining system state at the package level All Apps All Environments Rollback!</p>
  </div>
  <div class="page">
    <p>Speaking of Rollback</p>
    <p>Yes, it does work! Requirements</p>
    <p>extensive up-front release testing</p>
    <p>cant rollback in production without testing in QA!</p>
    <p>commitment to quality packages decoupling packages from settings</p>
    <p>central config servers</p>
  </div>
  <div class="page">
    <p>Do-Overs</p>
    <p>Create audit tools first Create push tool first</p>
    <p>pogo came along 6 months after start</p>
    <p>Reduce vulnerable mixed-state window during conversion Set up a longer release cycle</p>
    <p>started with two weeks, now three</p>
  </div>
  <div class="page">
    <p>Ongoing Issues</p>
    <p>Continuing to remove configuration from packages</p>
    <p>Yinst settings Central config servers</p>
    <p>Igor sync monitoring Deal with emergencies more smoothly</p>
    <p>Best case release push to all hosts: several days!</p>
  </div>
  <div class="page">
    <p>To Sum It Up</p>
    <p>KEEP IT STUPID, SIMPLE!</p>
    <p>Install the same packages everywhere Dont use inheritance for system state Basically just dont be clever!</p>
  </div>
  <div class="page">
    <p>Thanks for Listening!</p>
    <p>Phil Hollenback philiph@yahoo-inc.com</p>
    <p>@philiph</p>
  </div>
</Presentation>
