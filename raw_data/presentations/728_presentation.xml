<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Telex | Anticensorship in the Network InfrastructureNetwork Infrastructure</p>
    <p>Eric Wustrow Scott WolchokEric Wustrow Scott Wolchok Ian Goldberg* J. Alex Halderman</p>
    <p>University of MichiganUniversity of Michigan *University of Waterloo</p>
  </div>
  <div class="page">
    <p>Background | Internet Censorship</p>
    <p>No censorship</p>
    <p>Some censorship</p>
    <p>Country under surveillance from Reports Without Borders</p>
    <p>Country under surveillance from Reports Without Borders</p>
    <p>Most heavily censored nations</p>
  </div>
  <div class="page">
    <p>Background | Network-based Censorship</p>
    <p>Government censors Block websites containing offensive content Commonly employ blacklist approach</p>
    <p>Observed techniquesq IP blocking, DNS blackholes, forged RST packets</p>
    <p>Popular countermeasuresPopular countermeasures Mostly proxy based  Tor, Freenet, Ultrasurf,  Problem: Cat-and-mouse gameProblem: Cat and mouse game</p>
    <p>Need to communicate proxy addresses to users but not to censors, or else theyll be blocked too!</p>
  </div>
  <div class="page">
    <p>Our Approach | Telex</p>
    <p>Operates in the network infrastructure Components placed at ISP between the censor's</p>
    <p>network and non-blocked portions of the Internetnetwork and non-blocked portions of the Internet. We call this end-to-middle proxying</p>
    <p>Focuses on avoiding detection by the censorg y Complements anonymity systems such as Tor</p>
    <p>Employs a form of deep-packet inspection Turns common censor technology on its head</p>
    <p>Has no secrets to communicate to users in advance Relies instead on public-key steganographyRelies instead on public key steganography</p>
    <p>Provides state-level response to state censorship We envision government incentives for ISPs</p>
  </div>
  <div class="page">
    <p>Telex | Threat Model</p>
    <p>Censor  controls clients network, but not external network  blocks according to a blacklist</p>
    <p>allows HTTPS connections to non blocked sites</p>
    <p>allows HTTPS connections to non-blocked sites</p>
  </div>
  <div class="page">
    <p>Telex | Overview</p>
  </div>
  <div class="page">
    <p>Telex | Overview</p>
  </div>
  <div class="page">
    <p>Telex | Overview</p>
  </div>
  <div class="page">
    <p>Telex | Overview</p>
  </div>
  <div class="page">
    <p>Telex | Overview</p>
  </div>
  <div class="page">
    <p>Telex | Overview</p>
  </div>
  <div class="page">
    <p>Details | Telex-TLS Handshake</p>
    <p>TLS ClientHello[nonce= ]</p>
    <p>c k</p>
    <p>e d</p>
    <p>.c o</p>
    <p>m N</p>
    <p>o tB</p>
    <p>lo c</p>
  </div>
  <div class="page">
    <p>Details | Telex-TLS Handshake</p>
    <p>TLS ClientKeyExchange</p>
    <p>TLS ServerKeyExchange</p>
    <p>c k</p>
    <p>e d</p>
    <p>.c o</p>
    <p>m</p>
    <p>TLS ClientKeyExchange</p>
    <p>N o</p>
    <p>tB lo</p>
    <p>c</p>
    <p>- Tag communicates shared secret S to StationTag communicates shared secret S to Station - Client uses S in place of random coins for key generation - Station simulates Client, derives same TLS key</p>
  </div>
  <div class="page">
    <p>Details | Telex-TLS Handshake</p>
    <p>TLS Finished</p>
    <p>c k</p>
    <p>e d</p>
    <p>.c o</p>
    <p>m</p>
    <p>[ GET http://blocked.com/ HTTP/1.0 ]</p>
    <p>N o</p>
    <p>tB lo</p>
    <p>c</p>
  </div>
  <div class="page">
    <p>Details | Connection Tagging</p>
    <p>Application of public-key steganography Client (anyone) generates tags( y ) g g Station (and only the station) detects tags</p>
    <p>Our requirements:Our requirements: Short (28 bytes) Indistinguishable from random (for the censor) Conveys a shared secret Fast to recognize (for the station) Low false positivesLow false positives</p>
    <p>Solution: Diffie-Hellman over elliptic curves  with a twist!</p>
  </div>
  <div class="page">
    <p>Telex | Prototype Implementation</p>
    <p>PTFl Proxy Services</p>
    <p>Tag Recognition</p>
    <p>Flow Diversion</p>
    <p>CAUTION Experimental proof-of-concept software. Not safe for use under real-world censorship!</p>
    <p>Not safe for use under real world censorship!</p>
  </div>
  <div class="page">
    <p>Prototype | Flow Diversion</p>
    <p>From client To NotBlocked.com</p>
    <p>TLS Traffic Injected packets Fl d d</p>
    <p>Capable of dropping flows on command</p>
    <p>to Telex Flow dropper commands</p>
    <p>Capable of dropping flows on command (e.g. stop automatically forwarding for client NotBlocked.com)</p>
    <p>Sends copy of incoming TLS packets to other Telex components</p>
    <p>Telex components may inject spoofed packets as either endpoint</p>
    <p>We use software router (Linux/iptables/ipset)</p>
  </div>
  <div class="page">
    <p>Prototype | Tag Recognition</p>
    <p>Reconstructs TCP flows, extracts TLS nonces, etc., ,</p>
    <p>Based on Bro for flow reconstruction, fast elliptic curve code Checks 11,000 tags/second-core on 3GHz Intel Core 2 Duo</p>
    <p>When tag found, commands router to drop flow, then explicitly forwards packets until end of TLS handshake</p>
  </div>
  <div class="page">
    <p>Prototype | Proxy Service</p>
    <p>Shunts data between clients TLS connection and configurable services</p>
    <p>HTTP Proxy (S id)</p>
    <p>d .c</p>
    <p>o mTLS Cleartext</p>
    <p>Proxied request</p>
    <p>(Squid)</p>
    <p>Tor Bridge</p>
    <p>B lo</p>
    <p>c k</p>
    <p>e d</p>
    <p>Tor Bridge</p>
    <p>SSH Server alternative to</p>
    <p>Kernel module creates spoofed TCP socket, glue library strips SSL SSH Server alternative to</p>
    <p>port knocking</p>
    <p>g y p</p>
  </div>
  <div class="page">
    <p>Prototype | Telex Client</p>
    <p>Forwards arbitrary TCP port via tagged TLS connections</p>
    <p>Based on libevent and (modified) OpenSSL</p>
    <p>Currently Windows and Linux</p>
  </div>
  <div class="page">
    <p>Prototype | Test Deployment</p>
    <p>Single Telex Station on lab-scale ISP at Michigan</p>
    <p>Hosted sites</p>
    <p>Blocked.telex.ccNotBlocked.telex.cc Simulated censored site</p>
    <p>only reachable via Telex Unobjectionable content *</p>
    <p>Early experiences Three authors used Telex for daily browsing since May Streamed HD YouTube via PlanetLab node in Beijing Also, I got haxed  whoops!</p>
  </div>
  <div class="page">
    <p>s</p>
  </div>
  <div class="page">
    <p>Prototype | Users</p>
    <p>To Date | July 18August 11, 2011</p>
  </div>
  <div class="page">
    <p>Prototype | Bandwidth</p>
    <p>This Week | August 811, 2011</p>
  </div>
  <div class="page">
    <p>Discussion | Security</p>
    <p>Goal: Resist realistic passive or active attacks that would deny service on a wide scaley</p>
    <p>Future: Respond to growing censor sophistication</p>
    <p>Censors might try toCensors might try to  Perform deep traffic analysis Tunnel traffic around Telex (buy VPN )Tunnel traffic around Telex (buy VPN ) Mandate own HTTPS proxies or CAs Block every potential NotBlocked.comBlock every potential NotBlocked.com Employ various routing tricks DoS the Telex Stations</p>
  </div>
  <div class="page">
    <p>Discussion | Deployment / Future Work</p>
    <p>Where to deploy? (And how to model?)</p>
    <p>How to convince ISPs to deploy?How to convince ISPs to deploy?</p>
    <p>Scaling Telex DPI to core network?</p>
    <p>Preventing private key compromise?</p>
  </div>
  <div class="page">
    <p>Telex | Conclusion</p>
    <p>End-to-middle proxying New approach to resisting Internet censorshipNew approach to resisting Internet censorship</p>
    <p>Focus on hiding use of the service</p>
    <p>Based on p blic ke steganographBased on public-key steganography, repurposes DPI and MITM for anticensorship</p>
    <p>P f f t ti t dProof-of-concept operating today, but wide-scale deployment needs ISP or (perhaps) government cooperationor (perhaps) government cooperation</p>
  </div>
  <div class="page">
    <p>Telex | Anticensorship in theTelex | Anticensorship in the Network Infrastructure</p>
    <p>https://telex.cc</p>
    <p>Eric Wustrow Scott Wolchok Ian Goldberg* J. Alex Halderman</p>
    <p>University of Michigan *University of Waterloo</p>
  </div>
</Presentation>
