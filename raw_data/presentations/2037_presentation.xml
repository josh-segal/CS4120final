<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>NaaS Network-as-a-Service in the Cloud</p>
    <p>Paolo Costa costa@imperial.ac.uk</p>
    <p>joint work with Matteo Migliavacca, Peter Pietzuch, and Alexander L. Wolf</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Mismatch between app. abstractions &amp; network</p>
    <p>How the programmers see the network</p>
    <p>Paolo Costa NaaS: Network-as-a-Service in the Cloud 2/24</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Mismatch between app. abstractions &amp; network</p>
    <p>How the network really looks like</p>
    <p>Paolo Costa NaaS: Network-as-a-Service in the Cloud 3/24</p>
  </div>
  <div class="page">
    <p>Motivation</p>
    <p>Mismatch between app. abstractions &amp; network</p>
    <p>What programmers really see of the network</p>
    <p>No control over network resources</p>
    <p>Hard to map distributed apps onto the physical topology</p>
    <p>Paolo Costa</p>
    <p>int send(int sockfd, const void *msg,</p>
    <p>int len, int flags);</p>
    <p>int recv(int sockfd, void *buf,</p>
    <p>int len, int flags);</p>
    <p>NaaS: Network-as-a-Service in the Cloud 4/24</p>
  </div>
  <div class="page">
    <p>Example #1: MapReduce</p>
    <p>Many cloud data centers have high degree of oversubscription (e.g., 1:20[IMC10])  Intra-rack bandwidth &gt;&gt; inter-rack bandwidth</p>
    <p>Location of map and reduce tasks is critical</p>
    <p>Current approach  Reverse-engineer the network</p>
    <p>Combination of low-level tools (ping, traceroute, ) and complex clustering algorithms</p>
    <p>Issues  Low-level process  Time consuming  Potentially inaccurate</p>
    <p>Paolo Costa</p>
    <p>Source: Ananthanarayanan et al. OSDI10</p>
    <p>NaaS: Network-as-a-Service in the Cloud 5/24</p>
  </div>
  <div class="page">
    <p>Example #1: MapReduce</p>
    <p>Many cloud data centers have high degree of oversubscription (e.g., 1:20[IMC10])  Intra-rack bandwidth &gt;&gt; inter-rack bandwidth</p>
    <p>Location of map and reduce tasks is critical</p>
    <p>Current approach  Reverse-engineer the network</p>
    <p>Combination of low-level tools (ping, traceroute, ) and complex clustering algorithms</p>
    <p>Issues  Low-level process  Time consuming  Potentially inaccurate</p>
    <p>Paolo Costa NaaS: Network-as-a-Service in the Cloud 6/24</p>
  </div>
  <div class="page">
    <p>Example #1: MapReduce</p>
    <p>Paolo Costa NaaS: Network-as-a-Service in the Cloud</p>
    <p>Wish list #1: Network Visibility Tenants are provided with an (abstract) view</p>
    <p>of their allocated VMs No need for reverse-engineering, easier deployment</p>
  </div>
  <div class="page">
    <p>Example #2: Iterative Jobs</p>
    <p>Iterative jobs often adopt an one-to-many communication pattern  e.g., Netflix Collaborative Filtering</p>
    <p>Current approach  Point-to-point  Application-level multicast tree  BitTorrent-like solutions</p>
    <p>Issues  The server 1Gbps link is the bottleneck  Even perfect network visibility</p>
    <p>would not help Paolo Costa</p>
    <p>Source: Chowdhury et al. SIGCOMM11 NaaS: Network-as-a-Service in the Cloud 8/24</p>
  </div>
  <div class="page">
    <p>Example #2: Iterative Jobs</p>
    <p>Iterative jobs often adopt an one-to-many communication pattern  e.g., Netflix Collaborative Filtering</p>
    <p>Current approach  Point-to-point  Application-level multicast tree  BitTorrent-like solutions</p>
    <p>Issues  The server 1Gbps link is the bottleneck  Even perfect network visibility</p>
    <p>would not help Paolo Costa</p>
    <p>ToR Switch</p>
    <p>Each child only gets 500 Mbps</p>
    <p>NaaS: Network-as-a-Service in the Cloud 9/24</p>
  </div>
  <div class="page">
    <p>Example #2: Iterative Jobs</p>
    <p>Paolo Costa NaaS: Network-as-a-Service in the Cloud</p>
    <p>Wish list #2: Custom Forwarding</p>
    <p>Tenants can implement custom routing protocols E.g., anycast, multicast, content-based routing,</p>
    <p>key-based routing, multi-path routing,</p>
  </div>
  <div class="page">
    <p>Example #3: Interactive Queries</p>
    <p>Many large-scale web services use a partition-aggregate pattern  Queries are sent to multiple workers</p>
    <p>and responses are combined</p>
    <p>Current approach  Responses from workers are</p>
    <p>aggregated at intermediate layers  E.g., Google Search</p>
    <p>Issues  Requires high network bandwidth  Aggregator servers become</p>
    <p>the bottlenecks  Custom forwarding would not help</p>
    <p>Paolo Costa</p>
    <p>Source: Jeff Dean. WSDM09</p>
    <p>NaaS: Network-as-a-Service in the Cloud 11/24</p>
  </div>
  <div class="page">
    <p>Example #3: Interactive Queries</p>
    <p>Many large-scale web services use a partition-aggregate pattern  Queries are sent to multiple workers</p>
    <p>and responses are combined</p>
    <p>Current approach  Responses from workers are</p>
    <p>aggregated at intermediate layers  E.g., Google Search</p>
    <p>Issues  Requires high network bandwidth  Aggregator servers become</p>
    <p>the bottlenecks  Custom forwarding would not help</p>
    <p>Paolo Costa NaaS: Network-as-a-Service in the Cloud</p>
    <p>Each flow only gets 500 Mbps</p>
    <p>Parent Server</p>
    <p>Workers</p>
  </div>
  <div class="page">
    <p>Example #3: Interactive Queries</p>
    <p>Paolo Costa NaaS: Network-as-a-Service in the Cloud</p>
    <p>Wish list #3: In-network Processing</p>
    <p>Tenants can perform arbitrary packet processing on path E.g., in-network aggregation [Camdoop@NSDI12],</p>
    <p>opportunistic caching, semantic de-duplication</p>
  </div>
  <div class="page">
    <p>Introducing NaaS</p>
    <p>Goal  Mechanisms and abstractions to enable cloud tenants to</p>
    <p>efficiently, easily, and safely process packets within the network</p>
    <p>This entails visibility over network resources, custom forwarding and processing of packets</p>
    <p>Providers would benefit too  Today they also need to reverse-engineer applications  NaaS would allow more fine-grained traffic engineering</p>
    <p>This is complementary to  SDN / OpenFlow / ...  Focus on application-specific rather than</p>
    <p>application-agnostic services</p>
    <p>but some techniques can be re-used</p>
    <p>Paolo Costa NaaS: Network-as-a-Service in the Cloud 14/24</p>
  </div>
  <div class="page">
    <p>Why Now?</p>
    <p>DCs are not mini-Internets  Single owner / administration domain  We know (and define) the topology  Low hardware and software (network protocols) diversity  Trusted components (e.g., hypervisors)</p>
    <p>Several proposals for software-based routers  RouteBricks , ServerSwitch, PacketShader , SideCar, NetMap,</p>
    <p>Typically, these are used to replace traditional (applicationagnostic) network services (e.g., IPv4 forwarding, DPI)</p>
    <p>Why dont use them also to implement application-specific services?  E.g., aggregate packets in a distributed query or content-based</p>
    <p>routing</p>
    <p>Paolo Costa NaaS: Network-as-a-Service in the Cloud 15/24</p>
  </div>
  <div class="page">
    <p>NaaS Architecture</p>
    <p>Switches are augmented with processing capabilities (NaaS box)  Software routers a la Routebricks or hybrid solutions like ServerSwitch</p>
    <p>(Oversubscribed) Fat-tree-like topology  Lower in-bound switch throughput  E.g., for a 27K-server, max throughput is 48 Gbps</p>
    <p>Tenants deploy their processing elements (INPE) on each NaaS box  Fast-path for non-NaaS traffic</p>
    <p>Paolo Costa NaaS: Network-as-a-Service in the Cloud 16/24</p>
  </div>
  <div class="page">
    <p>NaaS Architecture</p>
    <p>Switches are augmented with processing capabilities (NaaS box)  Software routers a la Routebricks or hybrid solutions like ServerSwitch</p>
    <p>(Oversubscribed) Fat-tree-like topology  Lower in-bound switch throughput  E.g., for a 27K-server, max throughput is 48 Gbps</p>
    <p>Tenants deploy their processing elements (INPE) on each NaaS box  Fast-path for non-NaaS traffic</p>
    <p>Paolo Costa NaaS: Network-as-a-Service in the Cloud 17/24</p>
  </div>
  <div class="page">
    <p>(Preliminary) Evaluation</p>
    <p>Questions:  What are the benefits for NaaS users?  What is the impact for non-NaaS users?  What is the processing rate required?</p>
    <p>Setup  Flow-level simulator  8,192-server fat-tree topology (32-Gbps switches)  80% traditional TCP flows, 20 % combination of</p>
    <p>multicast, aggregation, caching</p>
    <p>Paolo Costa NaaS: Network-as-a-Service in the Cloud 18/24</p>
  </div>
  <div class="page">
    <p>Total flow completion time</p>
    <p>Paolo Costa</p>
    <p>T im</p>
    <p>e n</p>
    <p>o rm</p>
    <p>a li</p>
    <p>z e</p>
    <p>d t</p>
    <p>o b</p>
    <p>a se</p>
    <p>li n</p>
    <p>e</p>
    <p>NaaS box maximum processing rate in Gbps (R)</p>
    <p>R=1 Gbps already reduces time by 65%</p>
    <p>NaaS: Network-as-a-Service in the Cloud Faster NaaS boxes</p>
    <p>Worse</p>
    <p>Better</p>
  </div>
  <div class="page">
    <p>Total flow completion time</p>
    <p>Paolo Costa</p>
    <p>T im</p>
    <p>e n</p>
    <p>o rm</p>
    <p>a li</p>
    <p>z e</p>
    <p>d t</p>
    <p>o b</p>
    <p>a se</p>
    <p>li n</p>
    <p>e</p>
    <p>NaaS box maximum processing rate in Gbps (R)</p>
    <p>R=1 Gbps already reduces time by 65%</p>
    <p>NaaS: Network-as-a-Service in the Cloud</p>
    <p>Worse</p>
    <p>Better</p>
    <p>Even a low processing rate is enough to achieve significant benefits</p>
  </div>
  <div class="page">
    <p>Individual Flow Completion Time</p>
    <p>Paolo Costa</p>
    <p>C D</p>
    <p>F (</p>
    <p>fl o</p>
    <p>w s)</p>
    <p>Flow completion time (s)</p>
    <p>Baseline R=1 Gbps R=2 Gbps R=4 Gbps</p>
    <p>R=8 Gbps R=16 Gbps R=32 Gbps</p>
    <p>This includes non-NaaS flows too</p>
    <p>NaaS: Network-as-a-Service in the Cloud 21/24</p>
  </div>
  <div class="page">
    <p>Individual Flow Completion Time</p>
    <p>Paolo Costa</p>
    <p>C D</p>
    <p>F (</p>
    <p>fl o</p>
    <p>w s)</p>
    <p>Flow completion time (s)</p>
    <p>Baseline R=1 Gbps R=2 Gbps R=4 Gbps</p>
    <p>R=8 Gbps R=16 Gbps R=32 Gbps</p>
    <p>This includes non-NaaS flows too</p>
    <p>NaaS: Network-as-a-Service in the Cloud</p>
    <p>The use of NaaS is beneficial for all flows (including non-NaaS ones)</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Scalability and performance isolation  Traditional software routers assume handful of trusted</p>
    <p>services  In NaaS we expect 10s or 100s of (potentially malicious or</p>
    <p>poorly written) INPEs per switch</p>
    <p>Programming abstractions  We should not expose the actual network programming</p>
    <p>o Too complex for many users o Sensitive information</p>
    <p>Trade-off between flexibility and performance</p>
    <p>Pricing schemes  How we should charge tenants?</p>
    <p>Paolo Costa NaaS: Network-as-a-Service in the Cloud 23/24</p>
  </div>
  <div class="page">
    <p>Summary  Currently tenants have little control over the</p>
    <p>network</p>
    <p>NaaS focuses on enabling tenants to deploy applications within the network Efficiency Simplified development Providers benefit too</p>
    <p>On-going work  SideCar[HotNets11] inspired design  Transparent acceleration of mainstream applications</p>
    <p>Paolo Costa NaaS: Network-as-a-Service in the Cloud 24/24</p>
  </div>
</Presentation>
