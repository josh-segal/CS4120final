<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Bluetooth:</p>
    <p>Mike Ryan iSEC Partners</p>
    <p>USENIX Security / WOOT Aug 13, 2013</p>
    <p>With Low Energy Comes Low Security</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>What is Bluetooth Low Energy? Protocol overview Sniffing Techniques [In]security Injection</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>What is Bluetooth Low Energy? Protocol overview Sniffing Techniques [In]security Injection</p>
  </div>
  <div class="page">
    <p>What is Bluetooth Low Energy?</p>
  </div>
  <div class="page">
    <p>What is Bluetooth Low Energy Smart?</p>
    <p>New modulation and link layer for low-power devices  vs classic Bluetooth</p>
    <p>Incompatible with classic Bluetooth devices  PHY and link layer almost completely different  High-level protocols reused (L2CAP, ATT)</p>
    <p>Introduced in Bluetooth 4.0 (2010)  AKA BTLE</p>
  </div>
  <div class="page">
    <p>Where is BTLE?</p>
    <p>High end smartphones  Sports / fitness devices  Door locks  Upcoming medical devices</p>
  </div>
  <div class="page">
    <p>By The Numbers</p>
    <p>186% YoY Growth for H1 20131</p>
    <p>over 7 million Bluetooth Smart ICs were estimated to have shipped for use in sports and fitness devices in the first half of 2013 alone</p>
    <p>Analysts Forecast Bluetooth Smart to Lead Market Share in Wireless Medical and Fitness Devices2</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>What is Bluetooth Low Energy? Protocol overview Sniffing Techniques [In]security Injection</p>
  </div>
  <div class="page">
    <p>Protocol Stack</p>
    <p>GATT ATT</p>
    <p>L2CAP Link Layer</p>
    <p>PHY</p>
  </div>
  <div class="page">
    <p>PHY Layer</p>
    <p>GFSK, +/- 250 kHz, 1 Mbit/sec  40 channels in 2.4 GHz  Hopping</p>
  </div>
  <div class="page">
    <p>Physical Channels</p>
    <p>Advertising: 3 channels  Data: 37 channels</p>
  </div>
  <div class="page">
    <p>Hopping</p>
    <p>Hop along 37 data channels  One data packet per channel  Next channel channel + hop increment (mod 37)  Time between hops: hop interval</p>
  </div>
  <div class="page">
    <p>Link Layer</p>
    <p>PDU min of 2 bytes due to 2 byte header  LLID: Control vs Data  Length</p>
  </div>
  <div class="page">
    <p>L2CAP and Beyond</p>
    <p>Use existing decoders for this  Not a Hard ProblemTM</p>
  </div>
  <div class="page">
    <p>Recap</p>
    <p>GATT ATT</p>
    <p>L2CAP Link Layer</p>
    <p>PHY</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>What is Bluetooth Low Energy? Protocol overview Sniffing Techniques [In]security Injection</p>
  </div>
  <div class="page"/>
  <div class="page"/>
  <div class="page">
    <p>How do we sniff it?</p>
    <p>Start at the bottom and work our way up:</p>
    <p>GATT ATT</p>
    <p>L2CAP Link Layer</p>
    <p>PHY</p>
    <p>Ubertooth</p>
    <p>PC</p>
  </div>
  <div class="page">
    <p>Ubertooth Block Diagram</p>
    <p>CC2591 RF Amp</p>
    <p>CC2400 Radio</p>
    <p>LPC175x ARM MCU</p>
    <p>RF Bits</p>
    <p>USB</p>
    <p>PHY layer RFBits</p>
    <p>Link layer BitsPackets</p>
    <p>Packets</p>
  </div>
  <div class="page">
    <p>Capturing: PHY Layer</p>
    <p>Configure CC2400  Set modulation parameters to match Bluetooth Smart  Tune to proper channel</p>
    <p>Follow connections according to hop pattern  Hop increment and hop interval, sniffed from connect</p>
    <p>packet or recovered in promiscuous mode</p>
    <p>Hand off bits to ARM MCU</p>
  </div>
  <div class="page">
    <p>What Info Do We Need?</p>
    <p>Access Address  Advertising: Fixed 0x8E89BED6  Connection: Varies</p>
    <p>Channel number  Hop interval  Hop increment</p>
    <p>Nice to have: CRCInit</p>
    <p>Where?</p>
    <p>Easy mode: Connect packet!</p>
  </div>
  <div class="page">
    <p>Link Layer</p>
    <p>What we know: Access Address</p>
    <p>What we have: Sea of bits</p>
    <p>What we want: Start of PDU 10001110111101010101 10011100000100011001 11100100110100011101</p>
    <p>CC2400 does this</p>
    <p>FO FREE</p>
  </div>
  <div class="page">
    <p>PHY Layer.. Link Layer..</p>
    <p>We converted RF to packets Now what?</p>
  </div>
  <div class="page">
    <p>Capturing Packets... To PCAP!</p>
    <p>ubertooth-btle speaks packets  libpcap  dump raw packet data  PPI header (similar airodump-ng and kismet)</p>
    <p>We have a DLT for Bluetooth Smart  Unique identifier for the protocol  Public release of Wireshark plugin Coming SoonTM</p>
  </div>
  <div class="page">
    <p>Wireshark Awesomeness</p>
  </div>
  <div class="page">
    <p>Promiscuous Mode</p>
    <p>Techniques for recovering  Access Address  CRCInit  Hop Interval  Hop Increment</p>
  </div>
  <div class="page">
    <p>Recovering Access Address  Sit on data channel waiting for empty data</p>
    <p>packets  Collect candidate AA's and pick one when it's</p>
    <p>been observed enough</p>
    <p>Not depicted: whitening!</p>
  </div>
  <div class="page">
    <p>Recovering CRCInit</p>
    <p>Filter packets by Access Address  Plug CRC into LFSR and run it backward</p>
    <p>See also Bluesniff: Eve meets Alice and Bluetooth, USENIX WOOT '07</p>
  </div>
  <div class="page">
    <p>Recovering Hop Interval</p>
    <p>Observation: 37 is prime  Sit on data channel and wait for two</p>
    <p>consecutive packets</p>
    <p>t 37</p>
    <p>=hopinterval</p>
  </div>
  <div class="page">
    <p>Recovering Hop Increment</p>
    <p>Start on data channel 0, jump to data channel 1 when a packet arrives</p>
    <p>We know hop interval, so we can calculate how many channels were hopped between 0 and 1</p>
  </div>
  <div class="page">
    <p>Recovering Hop Increment (math)</p>
    <p>hopIncrement channelsHopped -1 (mod 37)</p>
    <p>channelsHoppped-1 channelsHopped 37-2 (mod 37)</p>
    <p>We use a LUT to convert that to hop increment</p>
  </div>
  <div class="page">
    <p>Sniffing Summary</p>
    <p>Connection following  Promiscuous: Recovering the four values</p>
    <p>Access address  CRCInit  Hop interval  Hop Increment</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>What is Bluetooth Low Energy? Protocol overview Sniffing Techniques [In]security Injection</p>
  </div>
  <div class="page">
    <p>Encryption</p>
    <p>Provided by link layer  Encrypts and MACs PDU  AES-CCM</p>
  </div>
  <div class="page">
    <p>Custom Key Exchange Protocol</p>
    <p>Three stage process  3 pairing methods</p>
    <p>Just WorksTM</p>
    <p>6-digit PIN  OOB</p>
    <p>None of the pairing methods provide protection against a passive eavesdropper -Bluetooth Core Spec</p>
  </div>
  <div class="page">
    <p>Cracking the TK</p>
    <p>confirm =</p>
    <p>AES(TK, AES(TK, rand XOR p1) XOR p2)</p>
    <p>GREEN = we have it RED = we want it</p>
    <p>TK: integer between 0 and 999,999 Just WorksTM: always 0!</p>
  </div>
  <div class="page">
    <p>Cracking the TK  With crackle</p>
    <p>Total time to crack: &lt; 1 second</p>
  </div>
  <div class="page">
    <p>And That's It</p>
    <p>TK  STK  STK  LTK  LTK  Session keys</p>
    <p>KEY EXCHANGE = BR0KEN 100% PASSIVE</p>
  </div>
  <div class="page">
    <p>LTK Reuse</p>
    <p>Good for security: pair in a faraday cage  Counter-mitigation: Active attack to force re-pairing</p>
  </div>
  <div class="page">
    <p>Decrypting</p>
    <p>Assumption: Attacker has LTK  reused!  Procedure</p>
    <p>Attacker passively capturing packets  Connection established  Session information captured</p>
  </div>
  <div class="page">
    <p>Decrypting  With crackle</p>
    <p>Yes, crackle does that too!  crackle will decrypt</p>
    <p>a PCAP file with a pairing setup  a PCAP file with an encrypted session, given an LTK</p>
  </div>
  <div class="page">
    <p>Am I Affected?</p>
    <p>Probably  Exception: Some vendors implement their own</p>
    <p>security on top of GATT  Did they talk to a cryptographer?</p>
  </div>
  <div class="page">
    <p>Security Recap</p>
    <p>Key exchange broken  LTK reuse means all communication is effectively</p>
    <p>compromised</p>
    <p>99% passive  Worst case scenario: one active attack with off-the-shelf</p>
    <p>hardware</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>What is Bluetooth Low Energy? Protocol overview Sniffing Techniques [In]security Injection</p>
  </div>
  <div class="page">
    <p>Injection</p>
    <p>Pretty much the same as receiving, opposite direction  Follow the spec!</p>
    <p>Link layer header  Payload data</p>
    <p>Hand that off to Ubertooth  Calculate CRC  Whiten</p>
    <p>Devil is in the CC2400 details</p>
  </div>
  <div class="page">
    <p>Demo</p>
    <p>D  e</p>
    <p>m  o</p>
  </div>
  <div class="page">
    <p>Capabilities</p>
    <p>Ubertooth  Passively intercept Bluetooth Smart  Promiscuous mode  Injection</p>
    <p>Wireshark plugins  crackle</p>
    <p>Crack TK's sniffed with Ubertooth  Decrypt PCAP files with LTK</p>
  </div>
  <div class="page">
    <p>Software</p>
    <p>Ubertooth and libbtbb  http://ubertooth.sourceforge.net/</p>
    <p>crackle  http://lacklustre.net/projects/crackle/</p>
    <p>nano-ecc (8-bit ECDH and ECDSA)  https://github.com/iSECPartners/nano-ecc</p>
  </div>
  <div class="page">
    <p>Thanks</p>
    <p>Mike Ossmann Dominic Spill</p>
    <p>Mike Kershaw (dragorn) #ubertooth on freenode</p>
    <p>bluez Bluetooth SIG</p>
    <p>USENIX iSEC Partners</p>
  </div>
  <div class="page">
    <p>Thank You</p>
    <p>Mike Ryan iSEC Partners</p>
    <p>@mpeg4codec</p>
    <p>mikeryan@isecpartners.com</p>
    <p>http://lacklustre.net/</p>
  </div>
  <div class="page">
    <p>Apocrypha (extra)</p>
  </div>
  <div class="page">
    <p>Encryption Mitigation (extra)</p>
    <p>Every session uses a different session key  Every session uses several nonces</p>
    <p>Solution: jam the connection to restart a session</p>
    <p>LTK exchanged once, used many times</p>
    <p>Solution: inject LTK_REJECT_IND message</p>
  </div>
  <div class="page">
    <p>L2CAP (extra)</p>
  </div>
  <div class="page">
    <p>ATT/GATT (extra)</p>
    <p>Services: groups of characteristics  Characteristics</p>
    <p>Operations</p>
    <p>Everything identified by UUID  128 bit  Sometimes shortened to 16 bits</p>
  </div>
  <div class="page">
    <p>Example GATT Service: Heart Rate (extra)</p>
    <p>Service: 0x180D  Characteristic 1: 0x2A37  Heart Rate</p>
    <p>Can't read or write  Notify: subscribe to updates</p>
    <p>Characteristic 2: 0x2A38  Sensor Location  Readable: 8 bit int, standardized list</p>
    <p>Other characteristics: 0x2803, 0x2902, ...</p>
  </div>
</Presentation>
