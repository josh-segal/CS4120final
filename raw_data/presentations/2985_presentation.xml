<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Correlated Crash Vulnerabilities</p>
    <p>Ramnatthan Alagappan, Aishwarya Ganesan,</p>
    <p>Yuvraj Patel, Thanumalayan Sankaranarayana Pillai,</p>
    <p>Andrea Arpaci-Dusseau, Remzi Arpaci-Dusseau</p>
  </div>
  <div class="page">
    <p>Distributed Storage Systems</p>
    <p>Central to building modern services</p>
  </div>
  <div class="page">
    <p>Distributed Storage Systems</p>
    <p>Central to building modern services</p>
  </div>
  <div class="page">
    <p>Distributed Storage Systems</p>
    <p>Central to building modern services</p>
  </div>
  <div class="page">
    <p>Reliability by Replication</p>
    <p>Reliability of user data is important</p>
  </div>
  <div class="page">
    <p>Reliability by Replication</p>
    <p>Reliability of user data is important Core mechanism: Replication</p>
  </div>
  <div class="page">
    <p>Reliability by Replication</p>
    <p>Reliability of user data is important Core mechanism: Replication</p>
  </div>
  <div class="page">
    <p>Reliability by Replication</p>
    <p>Reliability of user data is important</p>
    <p>Data</p>
    <p>Core mechanism: Replication</p>
  </div>
  <div class="page">
    <p>Reliability by Replication</p>
    <p>Reliability of user data is important</p>
    <p>Data</p>
    <p>DataData</p>
    <p>Data Data</p>
    <p>Core mechanism: Replication</p>
  </div>
  <div class="page">
    <p>Reliability by Replication</p>
    <p>Reliability of user data is important</p>
    <p>Data</p>
    <p>DataData</p>
    <p>Data Data</p>
    <p>Core mechanism: Replication</p>
  </div>
  <div class="page">
    <p>Reliability by Replication</p>
    <p>Reliability of user data is important</p>
    <p>Data</p>
    <p>Distributed storage systems can endure single machine crashes</p>
    <p>DataData</p>
    <p>Data Data</p>
    <p>Core mechanism: Replication</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>All data replicas crash and recover together</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>All data replicas crash and recover together</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>All data replicas crash and recover together</p>
    <p>Obviously, unavailable during failure</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>All data replicas crash and recover together</p>
    <p>Obviously, unavailable during failure However, correct data should be available after recovery</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>How often do they happen?</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>How often do they happen? More often than we think!</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>How often do they happen? More often than we think!</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>How often do they happen? More often than we think!</p>
    <p>Lightning strikes utility grid affecting Google data centers</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>How often do they happen? More often than we think!</p>
    <p>Lightning strikes utility grid affecting Google data centers</p>
    <p>Fat-fingered admin downs entire Joyent data center</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>How often do they happen? More often than we think!</p>
    <p>Lightning strikes utility grid affecting Google data centers</p>
    <p>Fat-fingered admin downs entire Joyent data center</p>
    <p>Truck ploughs into power cable at Rackspace</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>How often do they happen? More often than we think!</p>
    <p>Lightning strikes utility grid affecting Google data centers</p>
    <p>Fat-fingered admin downs entire Joyent data center</p>
    <p>Truck ploughs into power cable at Rackspace</p>
    <p>Correlated reboots (kernel bugs, power outage, upgrades) - Ford et al., OSDI 10</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>How often do they happen? More often than we think!</p>
    <p>Lightning strikes utility grid affecting Google data centers</p>
    <p>Fat-fingered admin downs entire Joyent data center</p>
    <p>Truck ploughs into power cable at Rackspace</p>
    <p>Correlated reboots (kernel bugs, power outage, upgrades) - Ford et al., OSDI 10</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>How often do they happen? More often than we think!</p>
    <p>Lightning strikes utility grid affecting Google data centers</p>
    <p>Fat-fingered admin downs entire Joyent data center</p>
    <p>Truck ploughs into power cable at Rackspace</p>
    <p>Correlated reboots (kernel bugs, power outage, upgrades) - Ford et al., OSDI 10</p>
    <p>Lightning strikes affect Microsoft and Amazon data centers</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>How often do they happen? More often than we think!</p>
    <p>Lightning strikes utility grid affecting Google data centers</p>
    <p>Fat-fingered admin downs entire Joyent data center</p>
    <p>Truck ploughs into power cable at Rackspace</p>
    <p>Correlated reboots (kernel bugs, power outage, upgrades) - Ford et al., OSDI 10</p>
    <p>Lightning strikes affect Microsoft and Amazon data centers Catastrophic Storage Failure Slows Oregon Jobless Checks</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>How often do they happen? More often than we think!</p>
    <p>Lightning strikes utility grid affecting Google data centers</p>
    <p>Fat-fingered admin downs entire Joyent data center</p>
    <p>Truck ploughs into power cable at Rackspace</p>
    <p>Correlated reboots (kernel bugs, power outage, upgrades) - Ford et al., OSDI 10</p>
    <p>Lightning strikes affect Microsoft and Amazon data centers Catastrophic Storage Failure Slows Oregon Jobless Checks Singapore Financial Exchange goes down</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>How often do they happen? More often than we think!</p>
    <p>Lightning strikes utility grid affecting Google data centers</p>
    <p>Fat-fingered admin downs entire Joyent data center</p>
    <p>Truck ploughs into power cable at Rackspace</p>
    <p>Correlated reboots (kernel bugs, power outage, upgrades) - Ford et al., OSDI 10</p>
    <p>Lightning strikes affect Microsoft and Amazon data centers Catastrophic Storage Failure Slows Oregon Jobless Checks Singapore Financial Exchange goes down  Bank of Scotland and Halifax customers not able to access money</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>How often do they happen? More often than we think!</p>
    <p>Lightning strikes utility grid affecting Google data centers</p>
    <p>Fat-fingered admin downs entire Joyent data center</p>
    <p>Truck ploughs into power cable at Rackspace</p>
    <p>Correlated reboots (kernel bugs, power outage, upgrades) - Ford et al., OSDI 10</p>
    <p>Lightning strikes affect Microsoft and Amazon data centers Catastrophic Storage Failure Slows Oregon Jobless Checks Singapore Financial Exchange goes down  Bank of Scotland and Halifax customers not able to access money The Huffington Post, Gawker, Gizmodo, and Buzzfeed go down as data center flood</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>old</p>
    <p>old</p>
    <p>old</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>old</p>
    <p>old</p>
    <p>old</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>UPDATE</p>
    <p>newold</p>
    <p>old</p>
    <p>old</p>
    <p>old</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>Catastrophic failures</p>
    <p>UPDATE</p>
    <p>newold</p>
    <p>old</p>
    <p>old</p>
    <p>old</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>Catastrophic failures</p>
    <p>UPDATE</p>
    <p>newold</p>
    <p>old</p>
    <p>old</p>
    <p>old</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>Catastrophic failures</p>
    <p>Correlated reboots (kernel bugs, upgrades)</p>
    <p>UPDATE</p>
    <p>newold</p>
    <p>old</p>
    <p>old</p>
    <p>old</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>Catastrophic failures</p>
    <p>Correlated reboots (kernel bugs, upgrades)</p>
    <p>UPDATE</p>
    <p>newold</p>
    <p>old</p>
    <p>old</p>
    <p>old</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>Catastrophic failures</p>
    <p>Correlated reboots (kernel bugs, upgrades)</p>
    <p>In such crash scenarios, nodes left only with persistent state</p>
    <p>UPDATE</p>
    <p>newold</p>
    <p>old</p>
    <p>old</p>
    <p>old</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>After recovery, users expect: Either (if acknowledged) or</p>
    <p>No corrupted data</p>
    <p>Available after recovery</p>
    <p>Catastrophic failures</p>
    <p>Correlated reboots (kernel bugs, upgrades)</p>
    <p>In such crash scenarios, nodes left only with persistent state</p>
    <p>UPDATE</p>
    <p>newold</p>
    <p>new old</p>
    <p>old</p>
    <p>old</p>
    <p>old</p>
  </div>
  <div class="page">
    <p>Our Focus: Correlated Crashes</p>
    <p>After recovery, users expect: Either (if acknowledged) or</p>
    <p>No corrupted data</p>
    <p>Available after recovery</p>
    <p>Catastrophic failures</p>
    <p>Correlated reboots (kernel bugs, upgrades)</p>
    <p>In such crash scenarios, nodes left only with persistent state</p>
    <p>UPDATE</p>
    <p>newold</p>
    <p>new old</p>
    <p>old</p>
    <p>old</p>
    <p>old</p>
  </div>
  <div class="page">
    <p>File Systems Complicate Recovery</p>
  </div>
  <div class="page">
    <p>File Systems Complicate Recovery Local file systems influence persistent states that can occur after a crash [Pillai et al., OSDI14, Bornholt et al., ASPLOS16]</p>
  </div>
  <div class="page">
    <p>File Systems Complicate Recovery Local file systems influence persistent states that can occur after a crash [Pillai et al., OSDI14, Bornholt et al., ASPLOS16]</p>
    <p>/foo</p>
  </div>
  <div class="page">
    <p>File Systems Complicate Recovery Local file systems influence persistent states that can occur after a crash [Pillai et al., OSDI14, Bornholt et al., ASPLOS16]</p>
    <p>/foo</p>
  </div>
  <div class="page">
    <p>File Systems Complicate Recovery Local file systems influence persistent states that can occur after a crash [Pillai et al., OSDI14, Bornholt et al., ASPLOS16]</p>
    <p>/foo pwrite(/foo, buf,</p>
  </div>
  <div class="page">
    <p>File Systems Complicate Recovery Local file systems influence persistent states that can occur after a crash [Pillai et al., OSDI14, Bornholt et al., ASPLOS16]</p>
    <p>/foo pwrite(/foo, buf,</p>
  </div>
  <div class="page">
    <p>File Systems Complicate Recovery Local file systems influence persistent states that can occur after a crash [Pillai et al., OSDI14, Bornholt et al., ASPLOS16]</p>
    <p>/foo pwrite(/foo, buf,</p>
    <p>Reboot</p>
  </div>
  <div class="page">
    <p>File Systems Complicate Recovery Local file systems influence persistent states that can occur after a crash [Pillai et al., OSDI14, Bornholt et al., ASPLOS16]</p>
    <p>/foo pwrite(/foo, buf,</p>
  </div>
  <div class="page">
    <p>File Systems Complicate Recovery Local file systems influence persistent states that can occur after a crash [Pillai et al., OSDI14, Bornholt et al., ASPLOS16]</p>
    <p>/foo pwrite(/foo, buf,</p>
    <p>Can we expect the block to be atomically updated?</p>
    <p>??? Reboot</p>
  </div>
  <div class="page">
    <p>File Systems Complicate Recovery Local file systems influence persistent states that can occur after a crash [Pillai et al., OSDI14, Bornholt et al., ASPLOS16]</p>
    <p>/foo pwrite(/foo, buf,</p>
    <p>Can we expect the block to be atomically updated? - On ext3 and ext4 (data journaling), btrfs</p>
    <p>??? Reboot</p>
  </div>
  <div class="page">
    <p>File Systems Complicate Recovery Local file systems influence persistent states that can occur after a crash [Pillai et al., OSDI14, Bornholt et al., ASPLOS16]</p>
    <p>/foo pwrite(/foo, buf,</p>
    <p>Can we expect the block to be atomically updated? - On ext3 and ext4 (data journaling), btrfs - On ext3 and ext4 (default), XFS, ext2 NO!</p>
    <p>??? Reboot</p>
  </div>
  <div class="page">
    <p>File Systems Complicate Recovery Local file systems influence persistent states that can occur after a crash [Pillai et al., OSDI14, Bornholt et al., ASPLOS16]</p>
    <p>/foo pwrite(/foo, buf,</p>
    <p>Can we expect the block to be atomically updated? - On ext3 and ext4 (data journaling), btrfs - On ext3 and ext4 (default), XFS, ext2 NO!</p>
    <p>??? Reboot</p>
    <p>Affects distributed storage systems 6</p>
  </div>
  <div class="page">
    <p>Focus of this study</p>
  </div>
  <div class="page">
    <p>Focus of this study</p>
    <p>Do distributed storage systems violate userlevel expectations in the presence of correlated crashes?</p>
    <p>- How do distributed crash recovery protocols interact with file-system crash behaviors?</p>
  </div>
  <div class="page">
    <p>Focus of this study</p>
    <p>Do distributed storage systems violate userlevel expectations in the presence of correlated crashes?</p>
    <p>- How do distributed crash recovery protocols interact with file-system crash behaviors?</p>
    <p>How to check for correlated crash vulnerabilities?</p>
    <p>- PACE (Protocol-Aware Crash Explorer) - Prunes state space using protocol knowledge</p>
  </div>
  <div class="page">
    <p>Results Summary</p>
  </div>
  <div class="page">
    <p>Results Summary</p>
    <p>Applied PACE to eight systems: Redis, MongoDB, Kafka, ZooKeeper, RethinkDB, LogCabin, etcd, and iNexus</p>
  </div>
  <div class="page">
    <p>Results Summary</p>
    <p>Applied PACE to eight systems: Redis, MongoDB, Kafka, ZooKeeper, RethinkDB, LogCabin, etcd, and iNexus</p>
    <p>Found 26 unique vulnerabilities with severe consequences - data loss, corruption, unavailable clusters etc.,</p>
    <p>- Many on commonly used file systems</p>
  </div>
  <div class="page">
    <p>Results Summary</p>
    <p>Applied PACE to eight systems: Redis, MongoDB, Kafka, ZooKeeper, RethinkDB, LogCabin, etcd, and iNexus</p>
    <p>Found 26 unique vulnerabilities with severe consequences - data loss, corruption, unavailable clusters etc.,</p>
    <p>- Many on commonly used file systems Many confirmed by developers</p>
    <p>- Many fixed - Some fundamentally hard</p>
  </div>
  <div class="page">
    <p>Overarching lessons</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction and Motivation</p>
    <p>Correlated Crash States - General Approach: Reachable States - States due to File System Behaviors</p>
    <p>Protocol-Aware Crash Explorer</p>
    <p>Vulnerability Study</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>How to capture persistent states that can occur during a</p>
    <p>correlated crash?</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States Node P Node Q</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States Node P Node Q</p>
    <p># State P # State Q</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P write(fd, foo,3)</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P write(fd, foo,3)</p>
    <p># State P1</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P write(fd, foo,3)</p>
    <p># State P1 write(fd, baz,3)</p>
    <p># State P2</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P write(fd, foo,3)</p>
    <p># State P1 write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P write(fd, foo,3)</p>
    <p># State P1 write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P write(fd, foo,3)</p>
    <p># State P1 write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1 12</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P write(fd, foo,3)</p>
    <p># State P1 write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>Globally reachable persistent states</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P write(fd, foo,3)</p>
    <p># State P1 write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>Globally reachable persistent states</p>
    <p>&lt;P , Q&gt;</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P write(fd, foo,3)</p>
    <p># State P1 write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>Globally reachable persistent states</p>
    <p>&lt;P , Q&gt;</p>
    <p>&lt;P2, Q1&gt; 12</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P write(fd, foo,3)</p>
    <p># State P1 write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>Globally reachable persistent states</p>
    <p>&lt;P , Q&gt;</p>
    <p>&lt;P2, Q1&gt;</p>
    <p>&lt;P1, Q&gt;</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P write(fd, foo,3)</p>
    <p># State P1 write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>Globally reachable persistent states</p>
    <p>&lt;P , Q&gt;</p>
    <p>&lt;P2, Q1&gt;</p>
    <p>&lt;P2, Q&gt;</p>
    <p>&lt;P1, Q&gt;</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P write(fd, foo,3)</p>
    <p># State P1 write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>Globally reachable persistent states</p>
    <p>&lt;P , Q&gt;</p>
    <p>&lt;P2, Q1&gt;</p>
    <p>&lt;P2, Q&gt;</p>
    <p>&lt;P1, Q&gt;</p>
    <p>Consistent Cuts Reachable Persistent Prefixes</p>
  </div>
  <div class="page">
    <p>Approach: Finding Reachable States Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P write(fd, foo,3)</p>
    <p># State P1 write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>Globally reachable persistent states</p>
    <p>&lt;P , Q&gt;</p>
    <p>&lt;P2, Q1&gt;</p>
    <p>&lt;P2, Q&gt;</p>
    <p>&lt;P1, Q&gt;</p>
    <p>Consistent Cuts Reachable Persistent Prefixes</p>
    <p>Not Reachable &lt;P, Q1 &gt; &lt;P1, Q1&gt;</p>
  </div>
  <div class="page">
    <p>File-System Behaviors: Reordering Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P</p>
    <p># State P1</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>&lt;P2, Q&gt;</p>
  </div>
  <div class="page">
    <p>File-System Behaviors: Reordering</p>
    <p>File systems may reorder updates to disk</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p>Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P</p>
    <p># State P1</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>&lt;P2, Q&gt;</p>
  </div>
  <div class="page">
    <p>File-System Behaviors: Reordering</p>
    <p>File systems may reorder updates to disk</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p>Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P</p>
    <p># State P1</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>&lt;P2, Q&gt;</p>
  </div>
  <div class="page">
    <p>File-System Behaviors: Reordering</p>
    <p>File systems may reorder updates to disk</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p>Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P</p>
    <p># State P1</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>&lt;P2, Q&gt;</p>
  </div>
  <div class="page">
    <p>File-System Behaviors: Reordering</p>
    <p>File systems may reorder updates to disk</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p>Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P</p>
    <p># State P1</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>&lt;P2, Q&gt;</p>
    <p>Reboot</p>
  </div>
  <div class="page">
    <p>File-System Behaviors: Reordering</p>
    <p>File systems may reorder updates to disk</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p>Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P</p>
    <p># State P1</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>&lt;P2, Q&gt;</p>
    <p>Reboot</p>
    <p>baz old</p>
  </div>
  <div class="page">
    <p>File-System Behaviors: Atomicity Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P</p>
    <p># State P1</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
  </div>
  <div class="page">
    <p>File-System Behaviors: Atomicity Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P</p>
    <p># State P1</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>File systems may partially persist operations</p>
  </div>
  <div class="page">
    <p>File-System Behaviors: Atomicity Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P</p>
    <p># State P1</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>File systems may partially persist operations</p>
    <p>b a z</p>
  </div>
  <div class="page">
    <p>File-System Behaviors: Atomicity Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P</p>
    <p># State P1</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>File systems may partially persist operations</p>
    <p>Reboot</p>
    <p>b a z</p>
  </div>
  <div class="page">
    <p>File-System Behaviors: Atomicity Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P</p>
    <p># State P1</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>File systems may partially persist operations</p>
    <p>Reboot</p>
    <p>b a z</p>
    <p>b foo</p>
  </div>
  <div class="page">
    <p>File-System Behaviors: Atomicity Node P Node Q</p>
    <p># State P # State Q</p>
    <p>recv(M1) send(Q, M1)</p>
    <p># State Q# State P</p>
    <p># State P1</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p># State P2</p>
    <p>send(Q, M2)</p>
    <p># State P2 recv(M2)</p>
    <p># State Q write(fd, bar, 3)</p>
    <p># State Q1</p>
    <p>File systems may partially persist operations</p>
    <p>Reboot</p>
    <p>b a z</p>
    <p>b foo</p>
    <p>ba foo</p>
  </div>
  <div class="page">
    <p>Modeling File-System Behaviors</p>
  </div>
  <div class="page">
    <p>Modeling File-System Behaviors Reordering and partially persisting on crashes  Relaxations</p>
  </div>
  <div class="page">
    <p>Modeling File-System Behaviors</p>
    <p>Relaxations vary across file systems</p>
    <p>Reordering and partially persisting on crashes  Relaxations</p>
  </div>
  <div class="page">
    <p>Modeling File-System Behaviors</p>
    <p>Relaxations vary across file systems</p>
    <p>Reordering and partially persisting on crashes  Relaxations</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
  </div>
  <div class="page">
    <p>Modeling File-System Behaviors</p>
    <p>Relaxations vary across file systems</p>
    <p>Reordering and partially persisting on crashes  Relaxations</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p>Can happen on: ext3 and ext4 (writeback, ordered), ext2, XFS</p>
    <p>Not on: ext3 and ext4(data), btrfs</p>
  </div>
  <div class="page">
    <p>Modeling File-System Behaviors</p>
    <p>Relaxations vary across file systems</p>
    <p>Abstract Persistence Model (APM) [Pillai et., OSDI14] defines relaxations allowed on a particular file system</p>
    <p>Reordering and partially persisting on crashes  Relaxations</p>
    <p>write(fd, foo,3)</p>
    <p>write(fd, baz,3)</p>
    <p>Can happen on: ext3 and ext4 (writeback, ordered), ext2, XFS</p>
    <p>Not on: ext3 and ext4(data), btrfs</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Correlated Crashes</p>
    <p>PACE (Protocol-Aware Crash Explorer) - State Space and PACE Rules - Methodology</p>
    <p>Vulnerability Study</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Protocol-Aware Crash Explorer</p>
  </div>
  <div class="page">
    <p>Protocol-Aware Crash Explorer</p>
    <p>Relaxations on one node results in many states for that node</p>
  </div>
  <div class="page">
    <p>Protocol-Aware Crash Explorer</p>
    <p>Relaxations on one node results in many states for that node</p>
    <p>write(fd, baz,3)</p>
  </div>
  <div class="page">
    <p>Protocol-Aware Crash Explorer</p>
    <p>Relaxations on one node results in many states for that node</p>
    <p>write(fd, baz,3) b ba baz</p>
  </div>
  <div class="page">
    <p>Protocol-Aware Crash Explorer</p>
    <p>Relaxations on one node results in many states for that node</p>
    <p>write(fd, baz,3) b ba baz PACE needs to consider relaxations in different combinations of nodes on all reachable prefixes</p>
  </div>
  <div class="page">
    <p>Protocol-Aware Crash Explorer</p>
    <p>Relaxations on one node results in many states for that node</p>
    <p>write(fd, baz,3) b ba baz PACE needs to consider relaxations in different combinations of nodes on all reachable prefixes</p>
    <p>write() write() fsync()</p>
    <p>rename() link()</p>
    <p>mkdir() creat() write()</p>
    <p>rename() unlink()</p>
    <p>creat() write() fsync() write() unlink()</p>
    <p>node-0 node-1 node-2</p>
  </div>
  <div class="page">
    <p>Protocol-Aware Crash Explorer</p>
    <p>Relaxations on one node results in many states for that node</p>
    <p>write(fd, baz,3) b ba baz PACE needs to consider relaxations in different combinations of nodes on all reachable prefixes</p>
    <p>Relax on {0} {1} {2} {0,1}</p>
    <p>{0,2} {1,2} {0,1,2}  huge state space</p>
    <p>write() write() fsync()</p>
    <p>rename() link()</p>
    <p>mkdir() creat() write()</p>
    <p>rename() unlink()</p>
    <p>creat() write() fsync() write() unlink()</p>
    <p>node-0 node-1 node-2</p>
  </div>
  <div class="page">
    <p>Protocol-Aware Crash Explorer</p>
    <p>Relaxations on one node results in many states for that node</p>
    <p>write(fd, baz,3) b ba baz PACE needs to consider relaxations in different combinations of nodes on all reachable prefixes</p>
    <p>Relax on {0} {1} {2} {0,1}</p>
    <p>{0,2} {1,2} {0,1,2}  huge state space</p>
    <p>write() write() fsync()</p>
    <p>rename() link()</p>
    <p>mkdir() creat() write()</p>
    <p>rename() unlink()</p>
    <p>creat() write() fsync() write() unlink()</p>
    <p>node-0 node-1 node-2</p>
    <p>PACE prunes this space using generic rules</p>
  </div>
  <div class="page">
    <p>PACE Pruning Rules</p>
    <p>Replicated State Machine (RSM) approaches</p>
    <p>Other (non-RSM) approaches</p>
    <p>Details in the paper</p>
  </div>
  <div class="page">
    <p>PACE: Effectiveness of Pruning</p>
  </div>
  <div class="page">
    <p>PACE: Effectiveness of Pruning</p>
    <p>LogCabin (RSM) - brute-force explored ~1M states (over a week)</p>
    <p>to find 2 vulnerabilities</p>
    <p>- PACE explored only ~28K states (in under 8 hours) and found the same vulnerabilities</p>
  </div>
  <div class="page">
    <p>PACE: Effectiveness of Pruning</p>
    <p>LogCabin (RSM) - brute-force explored ~1M states (over a week)</p>
    <p>to find 2 vulnerabilities</p>
    <p>- PACE explored only ~28K states (in under 8 hours) and found the same vulnerabilities</p>
    <p>Redis (non-RSM) - PACE explored 11x fewer states than the brute</p>
    <p>force search finding the same 3 vulnerabilities</p>
  </div>
  <div class="page">
    <p>PACE: Methodology</p>
  </div>
  <div class="page">
    <p>PACE: Methodology</p>
    <p>Cluster Initial State</p>
    <p>Workload insert(k,v)</p>
  </div>
  <div class="page">
    <p>PACE: Methodology</p>
    <p>Cluster Initial State</p>
    <p>Workload insert(k,v)</p>
    <p>FS + NW operations</p>
    <p>Tracing and Parsing</p>
  </div>
  <div class="page">
    <p>PACE: Methodology</p>
    <p>Cluster Initial State</p>
    <p>Workload insert(k,v)</p>
    <p>FS + NW operations</p>
    <p>PACE Rules</p>
    <p>FS APM</p>
    <p>Tracing and Parsing</p>
  </div>
  <div class="page">
    <p>PACE: Methodology</p>
    <p>Cluster Initial State</p>
    <p>Workload insert(k,v)</p>
    <p>FS + NW operations</p>
    <p>PACE Rules</p>
    <p>FS APM</p>
    <p>Replayer</p>
    <p>Crash State #1 Crash State #n</p>
    <p>Tracing and Parsing</p>
  </div>
  <div class="page">
    <p>PACE: Methodology</p>
    <p>Cluster Initial State</p>
    <p>Workload insert(k,v)</p>
    <p>FS + NW operations</p>
    <p>PACE Rules</p>
    <p>FS APM</p>
    <p>Replayer</p>
    <p>Crash State #1 Crash State #n</p>
    <p>Checker recovery +</p>
    <p>read k,v</p>
    <p>Tracing and Parsing</p>
  </div>
  <div class="page">
    <p>PACE: Methodology</p>
    <p>Cluster Initial State</p>
    <p>Workload insert(k,v)</p>
    <p>FS + NW operations</p>
    <p>PACE Rules</p>
    <p>FS APM</p>
    <p>Replayer</p>
    <p>Crash State #1 Crash State #n</p>
    <p>Checker recovery +</p>
    <p>read k,v</p>
    <p>Vulnerabilities</p>
    <p>Corruption Redis/aof.c:X Atomic append</p>
    <p>Data loss ZooKeeper/FileTxnLog.java:Y Safe file flush</p>
    <p>Unavailability LogCabin/SegmentedLog.cc:Z Inter-syscall atomicity</p>
    <p>Tracing and Parsing</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction</p>
    <p>Correlated Crashes</p>
    <p>Protocol-Aware Crash Explorer</p>
    <p>Vulnerability Study</p>
    <p>Concluding Remarks</p>
  </div>
  <div class="page">
    <p>Vulnerability Study: Systems</p>
    <p>Database caches: Redis</p>
    <p>Metadata stores: ZooKeeper, LogCabin, etcd</p>
    <p>Real-time DB: RethinkDB</p>
    <p>Document stores: MongoDB</p>
    <p>Message Queues: Kafka</p>
    <p>Key-value stores: iNexus</p>
    <p>Safest configurations: synchronous replication, synchronous disk writes, checksums etc.,</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>Update request</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>Update request</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>Update request</p>
    <p>fdatasync(aof)</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
    <p>recv(ack) recv(ack)</p>
    <p>send(client, ack) Acknowledgment</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
    <p>recv(ack) recv(ack)</p>
    <p>send(client, ack) Acknowledgment</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
    <p>recv(ack) recv(ack)</p>
    <p>send(client, ack) Acknowledgment</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
    <p>recv(ack) recv(ack)</p>
    <p>send(client, ack) Acknowledgment</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
    <p>recv(ack) recv(ack)</p>
    <p>send(client, ack) Acknowledgment</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
    <p>recv(ack) recv(ack)</p>
    <p>send(client, ack) Acknowledgment</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
    <p>recv(ack) recv(ack)</p>
    <p>send(client, ack) Acknowledgment</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
    <p>recv(ack) recv(ack)</p>
    <p>send(client, ack) Acknowledgment</p>
    <p>Reboot</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
    <p>recv(ack) recv(ack)</p>
    <p>send(client, ack) Acknowledgment</p>
    <p>Reboot</p>
  </div>
  <div class="page">
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
    <p>recv(ack) recv(ack)</p>
    <p>send(client, ack) Acknowledgment</p>
    <p>Reboot</p>
  </div>
  <div class="page">
    <p>Followers</p>
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
    <p>recv(ack) recv(ack)</p>
    <p>send(client, ack) Acknowledgment</p>
    <p>Reboot</p>
    <p>old</p>
  </div>
  <div class="page">
    <p>Followers</p>
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
    <p>recv(ack) recv(ack)</p>
    <p>send(client, ack) Acknowledgment</p>
    <p>Reboot</p>
    <p>Propagates this partial update to followers, overriding their proper older version!</p>
    <p>old 1 3</p>
  </div>
  <div class="page">
    <p>Followers</p>
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
    <p>recv(ack) recv(ack)</p>
    <p>send(client, ack) Acknowledgment</p>
    <p>Reboot</p>
    <p>Propagates this partial update to followers, overriding their proper older version!</p>
    <p>[ ]</p>
    <p>Silent Corruption</p>
    <p>]</p>
    <p>]</p>
    <p>atomicity</p>
    <p>old 1 3</p>
  </div>
  <div class="page">
    <p>Followers</p>
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
    <p>recv(ack) recv(ack)</p>
    <p>send(client, ack) Acknowledgment</p>
    <p>Reboot</p>
    <p>Propagates this partial update to followers, overriding their proper older version!</p>
    <p>[ ]</p>
    <p>Silent Corruption</p>
    <p>]</p>
    <p>]</p>
    <p>atomicity</p>
    <p>[ ]</p>
    <p>Old loss window</p>
    <p>old 1 3</p>
  </div>
  <div class="page">
    <p>Followers</p>
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
    <p>recv(ack) recv(ack)</p>
    <p>send(client, ack) Acknowledgment</p>
    <p>Reboot</p>
    <p>Propagates this partial update to followers, overriding their proper older version!</p>
    <p>[ ]</p>
    <p>Silent Corruption</p>
    <p>]</p>
    <p>]</p>
    <p>atomicity</p>
    <p>[ ]</p>
    <p>Old loss window</p>
    <p>[ ]corruption window</p>
    <p>old 1 3</p>
  </div>
  <div class="page">
    <p>Followers</p>
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
    <p>recv(ack) recv(ack)</p>
    <p>send(client, ack) Acknowledgment</p>
    <p>Reboot</p>
    <p>Propagates this partial update to followers, overriding their proper older version!</p>
    <p>[ ]</p>
    <p>Silent Corruption</p>
    <p>]</p>
    <p>]</p>
    <p>atomicity</p>
    <p>[ ]</p>
    <p>Old loss window</p>
    <p>[ ]corruption window New loss window</p>
    <p>ordering</p>
    <p>old 1 3</p>
  </div>
  <div class="page">
    <p>Followers</p>
    <p>Example: Redis</p>
    <p>MasterFollower1 Follower2</p>
    <p>append(aof)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>creat(tmp) append(tmp)</p>
    <p>rename(tmp, tmp-bg) rename(tmp-bg, aof)</p>
    <p>fdatasync(aof)</p>
    <p>recv(data) append(aof)</p>
    <p>fdatasync(aof) send(ack)</p>
    <p>Update request</p>
    <p>fdatasync(aof) send(data) send(data)</p>
    <p>recv(ack) recv(ack)</p>
    <p>send(client, ack) Acknowledgment</p>
    <p>Reboot</p>
    <p>Propagates this partial update to followers, overriding their proper older version!</p>
    <p>[ ]</p>
    <p>Silent Corruption</p>
    <p>]</p>
    <p>]</p>
    <p>atomicity</p>
    <p>[ ]</p>
    <p>Old loss window</p>
    <p>[ ]corruption window New loss window</p>
    <p>ordering</p>
    <p>old 1 3</p>
  </div>
  <div class="page">
    <p>Vulnerability Consequences</p>
  </div>
  <div class="page">
    <p>Vulnerability Consequences</p>
    <p>On ext2  weak crash guarantees</p>
  </div>
  <div class="page">
    <p>Vulnerability Consequences</p>
    <p>Silent Corruption</p>
    <p>Data Loss Cluster</p>
    <p>Unavailability Window</p>
    <p>TotalOld Commit</p>
    <p>New Commit</p>
    <p>Metadata Corruption</p>
    <p>User Data Corruption</p>
    <p>Silent Corruption</p>
    <p>Data Loss</p>
    <p>On ext2  weak crash guarantees</p>
  </div>
  <div class="page">
    <p>Vulnerability Consequences</p>
    <p>Silent Corruption</p>
    <p>Data Loss Cluster</p>
    <p>Unavailability Window</p>
    <p>TotalOld Commit</p>
    <p>New Commit</p>
    <p>Metadata Corruption</p>
    <p>User Data Corruption</p>
    <p>Silent Corruption</p>
    <p>Data Loss</p>
    <p>On ext2  weak crash guarantees</p>
  </div>
  <div class="page">
    <p>Vulnerability Consequences</p>
    <p>Silent Corruption</p>
    <p>Data Loss Cluster</p>
    <p>Unavailability Window</p>
    <p>TotalOld Commit</p>
    <p>New Commit</p>
    <p>Metadata Corruption</p>
    <p>User Data Corruption</p>
    <p>Silent Corruption</p>
    <p>Data Loss</p>
    <p>On ext2  weak crash guarantees</p>
  </div>
  <div class="page">
    <p>Vulnerability Consequences</p>
    <p>Silent Corruption</p>
    <p>Data Loss Cluster</p>
    <p>Unavailability Window</p>
    <p>TotalOld Commit</p>
    <p>New Commit</p>
    <p>Metadata Corruption</p>
    <p>User Data Corruption</p>
    <p>Silent Corruption</p>
    <p>Data Loss</p>
    <p>On ext2  weak crash guarantees</p>
  </div>
  <div class="page">
    <p>Vulnerability Consequences</p>
    <p>Silent Corruption</p>
    <p>Data Loss Cluster</p>
    <p>Unavailability Window</p>
    <p>TotalOld Commit</p>
    <p>New Commit</p>
    <p>Metadata Corruption</p>
    <p>User Data Corruption</p>
    <p>Silent Corruption</p>
    <p>Data Loss</p>
    <p>On ext2  weak crash guarantees</p>
  </div>
  <div class="page">
    <p>Vulnerability Consequences</p>
    <p>Redis 1 1 2 3</p>
    <p>ZooKeeper 1 4 1 6</p>
    <p>LogCabin 1 1 1 2</p>
    <p>etcd 1 1 2 3</p>
    <p>MongoDBWT</p>
    <p>MongoDBRocks</p>
    <p>Kafka 3 3</p>
    <p>iNexus 1 1 2 3</p>
    <p>Silent Corruption</p>
    <p>Data Loss Cluster</p>
    <p>Unavailability Window</p>
    <p>TotalOld Commit</p>
    <p>New Commit</p>
    <p>Metadata Corruption</p>
    <p>User Data Corruption</p>
    <p>Silent Corruption</p>
    <p>Data Loss</p>
    <p>On ext2  weak crash guarantees</p>
  </div>
  <div class="page">
    <p>Vulnerability Consequences</p>
    <p>Redis 1 1 2 3</p>
    <p>ZooKeeper 1 4 1 6</p>
    <p>LogCabin 1 1 1 2</p>
    <p>etcd 1 1 2 3</p>
    <p>MongoDBWT</p>
    <p>MongoDBRocks</p>
    <p>Kafka 3 3</p>
    <p>iNexus 1 1 2 3</p>
    <p>Silent Corruption</p>
    <p>Data Loss Cluster</p>
    <p>Unavailability Window</p>
    <p>TotalOld Commit</p>
    <p>New Commit</p>
    <p>Metadata Corruption</p>
    <p>User Data Corruption</p>
    <p>Silent Corruption</p>
    <p>Data Loss</p>
    <p>On ext2  weak crash guarantees</p>
  </div>
  <div class="page">
    <p>Vulnerability Consequences</p>
    <p>Redis 1 1 2 3</p>
    <p>ZooKeeper 1 4 1 6</p>
    <p>LogCabin 1 1 1 2</p>
    <p>etcd 1 1 2 3</p>
    <p>MongoDBWT</p>
    <p>MongoDBRocks</p>
    <p>Kafka 3 3</p>
    <p>iNexus 1 1 2 3</p>
    <p>Silent Corruption</p>
    <p>Data Loss Cluster</p>
    <p>Unavailability Window</p>
    <p>TotalOld Commit</p>
    <p>New Commit</p>
    <p>Metadata Corruption</p>
    <p>User Data Corruption</p>
    <p>Silent Corruption</p>
    <p>Data Loss</p>
    <p>On ext2  weak crash guarantees</p>
  </div>
  <div class="page">
    <p>Vulnerability Consequences</p>
    <p>Redis 1 1 2 3</p>
    <p>ZooKeeper 1 4 1 6</p>
    <p>LogCabin 1 1 1 2</p>
    <p>etcd 1 1 2 3</p>
    <p>MongoDBWT</p>
    <p>MongoDBRocks</p>
    <p>Kafka 3 3</p>
    <p>iNexus 1 1 2 3</p>
    <p>Silent Corruption</p>
    <p>Data Loss Cluster</p>
    <p>Unavailability Window</p>
    <p>TotalOld Commit</p>
    <p>New Commit</p>
    <p>Metadata Corruption</p>
    <p>User Data Corruption</p>
    <p>Silent Corruption</p>
    <p>Data Loss</p>
    <p>On ext2  weak crash guarantees</p>
  </div>
  <div class="page">
    <p>System ext2 ext3-w ext3-o ext4-o ext3-j btrfs</p>
    <p>Redis 3 1 1</p>
    <p>ZooKeeper 6 3 1 1 1 3</p>
    <p>LogCabin 2 1 1 1 1 1</p>
    <p>etcd 3 2</p>
    <p>MongoDB-WT 1</p>
    <p>MongoDB-R 5 2 2 2 3</p>
    <p>Kafka 3</p>
    <p>iNexus 2 1 1 2</p>
    <p>Total 26 9 5 5 2 10</p>
    <p>Vulnerabilities on Real File Systems</p>
  </div>
  <div class="page">
    <p>System ext2 ext3-w ext3-o ext4-o ext3-j btrfs</p>
    <p>Redis 3 1 1</p>
    <p>ZooKeeper 6 3 1 1 1 3</p>
    <p>LogCabin 2 1 1 1 1 1</p>
    <p>etcd 3 2</p>
    <p>MongoDB-WT 1</p>
    <p>MongoDB-R 5 2 2 2 3</p>
    <p>Kafka 3</p>
    <p>iNexus 2 1 1 2</p>
    <p>Total 26 9 5 5 2 10</p>
    <p>Vulnerabilities on Real File Systems</p>
  </div>
  <div class="page">
    <p>System ext2 ext3-w ext3-o ext4-o ext3-j btrfs</p>
    <p>Redis 3 1 1</p>
    <p>ZooKeeper 6 3 1 1 1 3</p>
    <p>LogCabin 2 1 1 1 1 1</p>
    <p>etcd 3 2</p>
    <p>MongoDB-WT 1</p>
    <p>MongoDB-R 5 2 2 2 3</p>
    <p>Kafka 3</p>
    <p>iNexus 2 1 1 2</p>
    <p>Total 26 9 5 5 2 10</p>
    <p>Vulnerabilities on Real File Systems</p>
  </div>
  <div class="page">
    <p>System ext2 ext3-w ext3-o ext4-o ext3-j btrfs</p>
    <p>Redis 3 1 1</p>
    <p>ZooKeeper 6 3 1 1 1 3</p>
    <p>LogCabin 2 1 1 1 1 1</p>
    <p>etcd 3 2</p>
    <p>MongoDB-WT 1</p>
    <p>MongoDB-R 5 2 2 2 3</p>
    <p>Kafka 3</p>
    <p>iNexus 2 1 1 2</p>
    <p>Total 26 9 5 5 2 10</p>
    <p>Vulnerabilities on Real File Systems</p>
  </div>
  <div class="page">
    <p>System ext2 ext3-w ext3-o ext4-o ext3-j btrfs</p>
    <p>Redis 3 1 1</p>
    <p>ZooKeeper 6 3 1 1 1 3</p>
    <p>LogCabin 2 1 1 1 1 1</p>
    <p>etcd 3 2</p>
    <p>MongoDB-WT 1</p>
    <p>MongoDB-R 5 2 2 2 3</p>
    <p>Kafka 3</p>
    <p>iNexus 2 1 1 2</p>
    <p>Total 26 9 5 5 2 10</p>
    <p>Vulnerabilities on Real File Systems</p>
  </div>
  <div class="page">
    <p>System ext2 ext3-w ext3-o ext4-o ext3-j btrfs</p>
    <p>Redis 3 1 1</p>
    <p>ZooKeeper 6 3 1 1 1 3</p>
    <p>LogCabin 2 1 1 1 1 1</p>
    <p>etcd 3 2</p>
    <p>MongoDB-WT 1</p>
    <p>MongoDB-R 5 2 2 2 3</p>
    <p>Kafka 3</p>
    <p>iNexus 2 1 1 2</p>
    <p>Total 26 9 5 5 2 10</p>
    <p>Vulnerabilities on Real File Systems</p>
  </div>
  <div class="page">
    <p>System ext2 ext3-w ext3-o ext4-o ext3-j btrfs</p>
    <p>Redis 3 1 1</p>
    <p>ZooKeeper 6 3 1 1 1 3</p>
    <p>LogCabin 2 1 1 1 1 1</p>
    <p>etcd 3 2</p>
    <p>MongoDB-WT 1</p>
    <p>MongoDB-R 5 2 2 2 3</p>
    <p>Kafka 3</p>
    <p>iNexus 2 1 1 2</p>
    <p>Total 26 9 5 5 2 10</p>
    <p>Vulnerabilities on Real File Systems</p>
  </div>
  <div class="page">
    <p>System ext2 ext3-w ext3-o ext4-o ext3-j btrfs</p>
    <p>Redis 3 1 1</p>
    <p>ZooKeeper 6 3 1 1 1 3</p>
    <p>LogCabin 2 1 1 1 1 1</p>
    <p>etcd 3 2</p>
    <p>MongoDB-WT 1</p>
    <p>MongoDB-R 5 2 2 2 3</p>
    <p>Kafka 3</p>
    <p>iNexus 2 1 1 2</p>
    <p>Total 26 9 5 5 2 10</p>
    <p>Vulnerabilities on Real File Systems</p>
    <p>Less vulnerabilities on ordered file systems</p>
  </div>
  <div class="page">
    <p>Summary</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Distributed storage systems violate user-level expectations during correlated crashes</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Distributed storage systems violate user-level expectations during correlated crashes</p>
    <p>Popular, well-tested systems are vulnerable</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Distributed storage systems violate user-level expectations during correlated crashes</p>
    <p>Popular, well-tested systems are vulnerable</p>
    <p>Local file system crash behaviors directly affect distributed storage systems</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Distributed storage systems violate user-level expectations during correlated crashes</p>
    <p>Popular, well-tested systems are vulnerable</p>
    <p>Local file system crash behaviors directly affect distributed storage systems</p>
    <p>In many cases, distributed recovery protocols do not fix problems in local storage protocols</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Reliability is crucial in distributed storage systems  primary choice for storing large amounts of data</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Reliability is crucial in distributed storage systems  primary choice for storing large amounts of data</p>
    <p>Complex ways to fail and subtle interactions between components</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Reliability is crucial in distributed storage systems  primary choice for storing large amounts of data</p>
    <p>Complex ways to fail and subtle interactions between components</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Reliability is crucial in distributed storage systems  primary choice for storing large amounts of data</p>
    <p>Complex ways to fail and subtle interactions between components</p>
    <p>Software and results soon @ http://research.cs.wisc.edu/adsl/Software/pace/</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Reliability is crucial in distributed storage systems  primary choice for storing large amounts of data</p>
    <p>Complex ways to fail and subtle interactions between components</p>
    <p>Software and results soon @ http://research.cs.wisc.edu/adsl/Software/pace/</p>
    <p>Thank you! 27</p>
  </div>
</Presentation>
