<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Persona: A High-Performance Bioinformatics Framework</p>
    <p>Stuart Byma1, Sam Whitlock1, Laura Flueratoru2, Ethan Tseng3, Christos Kozyrakis4, Edouard Bugnion1, James Larus1</p>
    <p>EPFL1, U. Polytehnica of Bucharest2, CMU3, Stanford4</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Motivation  Bioinformatics Data and Tools  Persona  AGD  Dataflow Engine</p>
    <p>Performance Results</p>
  </div>
  <div class="page">
    <p>Sequencing cost</p>
    <p>Not a wet lab problem anymore  IT / Systems problem</p>
  </div>
  <div class="page">
    <p>Implications</p>
    <p>~300GB ~hours</p>
    <p>Need efficient systems that scale well</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Motivation  Bioinformatics Data and Tools  Persona  AGD  Dataflow Engine</p>
    <p>Performance Results</p>
    <p>~300GB ~hours</p>
  </div>
  <div class="page">
    <p>What kind of data?</p>
    <p>Common sequencers produce Reads  Snippets of DNA  AACCGCTAGCGCGCTAGCTCGAGCTAGAA  100-200 bases</p>
    <p>@sequence name, metadata ACGTTTCGATCGCGCCAGGAGGCTAG + -+*''))**55CCF@&gt;&gt;&gt;&gt;&gt;CCCCCC times a few hundred million</p>
  </div>
  <div class="page">
    <p>Alignment</p>
    <p>...TGACCTATAGCGATATAGCTTATTATTGGG-CAAAAATGGAATCGATTGATCG... |||||||||| ||||| ||| TATTATTGGGATAAAA-TGG</p>
    <p>Reference Genome</p>
    <p>Read:</p>
    <p>Insertion Deletion</p>
    <p>Mismatch</p>
    <p>~hours</p>
    <p>times a few hundred million</p>
  </div>
  <div class="page">
    <p>Aligned Reads</p>
    <p>Stored in SAM/BAM</p>
    <p>read_name 16 chr12 85500011 70 18M * 0 0 TTTTACACACATTATCTC CDDFAEEC&gt;EDDFFBCDEED?FCC@ PL:Z:Illumina PU:Z:pu LB:Z:lb SM:Z:sm</p>
    <p>Followed by  Duplicate marking  Sorting  Recalibrations, analysis (variant calling)</p>
    <p>~hours</p>
  </div>
  <div class="page">
    <p>Data and Tool Issues</p>
    <p>FASTQ SAM/BAM BED VCF</p>
  </div>
  <div class="page">
    <p>Persona  Bioinformatics, Unified</p>
    <p>Aggregate Genomic Data</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Motivation  Bioinformatics Data and Tools  Persona  AGD  Dataflow Engine</p>
    <p>Performance Results</p>
  </div>
  <div class="page">
    <p>Aggregate Genomic Data</p>
    <p>Header</p>
    <p>Index</p>
    <p>Data compressed</p>
    <p>Manifest</p>
    <p>Storage Subsystem</p>
    <p>Bases Q-Scores Metadata</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Motivation  Bioinformatics Data and Tools  Persona  AGD  Dataflow Engine</p>
    <p>Performance Results</p>
  </div>
  <div class="page">
    <p>AGD Chunks</p>
    <p>Dataflow</p>
    <p>Dataflow execution framework  Base on TensorFlow engine  But no machine learning</p>
    <p>Operators perform computation on AGD chunks</p>
  </div>
  <div class="page">
    <p>Dataflow AGD Chunks</p>
    <p>Modularity  Balance/tuning  (bounded) Queueing</p>
  </div>
  <div class="page">
    <p>Fine-grained Threading</p>
    <p>AGD chunks optimized for storage  Too coarse for some tasks</p>
    <p>Split into subchunks  Delegate to executor shared resource  Task queue + thread pool Aligners</p>
    <p>Notify AGDBuf</p>
    <p>ThreadPool 16</p>
  </div>
  <div class="page">
    <p>Aligner Graph Get Chunk</p>
    <p>Decompress/Parse</p>
    <p>Compress</p>
    <p>Put Chunk</p>
    <p>AGD Chunks</p>
    <p>Alignment Executor</p>
    <p>Align Reads</p>
  </div>
  <div class="page">
    <p>Graph Construction</p>
    <p>c = persona.read_chunk(path)</p>
    <p>d = persona.decompress(c)</p>
    <p>o = persona.align(d)</p>
    <p>sess = tf.Session() result = sess.run([o])</p>
  </div>
  <div class="page">
    <p>Persona Shell</p>
    <p>Persona Shell</p>
    <p>align sort import</p>
    <p>local runtime dist runtime</p>
    <p>$ persona align local i hg19 data/my_agd.json $ persona sort local data/my_agd.json</p>
  </div>
  <div class="page">
    <p>Distributed Computation</p>
    <p>Server 1</p>
    <p>Server 0</p>
    <p>Queue Service</p>
    <p>Client $ persona client bwa-align</p>
    <p>Server 1 Server N</p>
    <p>Storage Subsystem</p>
  </div>
  <div class="page">
    <p>Current Features</p>
    <p>Import data from FASTQ/BAM/SRA, export to BAM  Sequence alignment with BWA-MEM, SNAP  Dataset sorting  Duplicate marking  Dataset statistics (samtools flagstat)  Read coverage (depth)</p>
  </div>
  <div class="page">
    <p>Agenda</p>
    <p>Motivation  Bioinformatics Data and Tools  Persona  AGD  Dataflow Engine</p>
    <p>Performance Results</p>
  </div>
  <div class="page">
    <p>Evaluation -- Setup</p>
    <p>Focused on sequence alignment using SNAP  Throughput in bases aligned per second  Data  223 million 101 base reads (~16GB)  AGD chunks of 100K records</p>
    <p>Hardware  32X Ubuntu 16.04, 2x12 Xeon E5-2680v3 @ 2.5GHz  Data on 6-disk RAID0 and single spindle drive  7 server Ceph object store for distributed execution</p>
  </div>
  <div class="page">
    <p>Evaluation -- Questions</p>
    <p>What are the bandwidth-saving effects of AGD?</p>
    <p>What is the overhead of the Persona framework?</p>
    <p>How well do Persona and AGD scale?</p>
  </div>
  <div class="page">
    <p>Performance  AGD</p>
    <p>SNAP</p>
    <p>Persona SNAP</p>
    <p>* single disk</p>
  </div>
  <div class="page">
    <p>Persona Overhead</p>
    <p>* RAID-0</p>
  </div>
  <div class="page">
    <p>Scaling</p>
  </div>
  <div class="page">
    <p>Scaling Limits</p>
  </div>
  <div class="page">
    <p>Persona  Scalable Bioinformatics</p>
    <p>Aggregate Genomic Data</p>
    <p>https://github.com/epfl-vlsc/persona</p>
  </div>
  <div class="page">
    <p>backup</p>
  </div>
  <div class="page">
    <p>Performance  Sort and Dup. Mark</p>
    <p>Sort  By metadata or aligned location  1.54x speedup over samtools  5.15x speedup over Picard</p>
    <p>Dataset stats  2x speedup</p>
    <p>Duplicate marking  Same algorithm as samblaster  3.73x faster than samblaster</p>
    <p>Coverage (depth)  2x speedup</p>
  </div>
  <div class="page">
    <p>Profiling</p>
  </div>
  <div class="page">
    <p>Read/Write Single Disk</p>
  </div>
  <div class="page">
    <p>Alignment</p>
    <p>Example: SNAP  Build hash index of reference  To align a read:  Hash a portion (seed)  Lookup</p>
    <p>Evaluate each hit  Edit distance computation</p>
    <p>Cores align reads in parallel</p>
    <p>TATTATTGGGATAAAATGGTTT</p>
    <p>...TATTACTGGGCAAAAATGGTTTATG.............</p>
    <p>Reference Genome Index (40GB)</p>
    <p>TATTATTGGGATAAAATGGTTT</p>
    <p>edit distance</p>
  </div>
  <div class="page">
    <p>Shared Data</p>
    <p>Sometimes need to share data between ops  E.g. multi-GB index of reference genome</p>
    <p>Use TF session resource manager  [string, string]  refcount object</p>
    <p>Op can create objects, provide handle to other ops</p>
    <p>Resource Manager</p>
    <p>LookupOrCreate() [c, n]</p>
    <p>Lookup()</p>
    <p>ProviderOp</p>
    <p>ConsumerOp</p>
  </div>
  <div class="page">
    <p>Data Movement</p>
    <p>Tensors not amenable to bioinfo data  Leverage TF shared resources  Implement reusable buffers  Stable memory use  Avoid syscalls</p>
    <p>BufferPoolOp</p>
    <p>[container, name]</p>
    <p>Pool</p>
  </div>
  <div class="page">
    <p>Bioinformatics?</p>
    <p>Biology, computer science, math, statistics  Started mid 90s with Human Genome Project  Broad field  Genomics, proteomics, systems biology</p>
    <p>This talk: Whole Genome Sequence (WGS) analysis  Reading the letters of your DNA (ATCG )</p>
  </div>
</Presentation>
