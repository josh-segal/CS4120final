<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>RPT: Re-architecting Loss Protection for Content-Aware Networks</p>
    <p>Dongsu Han, Ashok Anand,</p>
    <p>Aditya Akella, and Srinivasan Seshan</p>
    <p>Carnegie Mellon University University of Wisconsin-Madison</p>
  </div>
  <div class="page">
    <p>Motivation: Delay-sensitive communication</p>
    <p>Time critical interdata center communication [Maelstrom]</p>
    <p>Soft-realtime intra-data center communication [DCTCP, D3]</p>
    <p>Real-time streams: FaceTime, Skype, on-line games.</p>
    <p>Minimizing data loss in time-critical communication is important, but challenging because of the time constraint.</p>
    <p>Maximum one way latency ~150ms</p>
    <p>Response time ~250ms</p>
  </div>
  <div class="page">
    <p>Loss protection today: Redundancy-based recovery</p>
    <p>Forward Error Correction</p>
    <p>Original packets (k)</p>
    <p>Bandwidth for robustness</p>
    <p>Redundant packets (n-k)</p>
    <p>FEC couples delay with redundancy  Small batch size makes FEC more susceptible to bursty loss  Difficult to tune parameters (n and k) [TIP2001,INFOCOM2010]</p>
    <p>Amount of redundancy 20%~50% in Skype video[Multimedia09]</p>
    <p>Delay</p>
  </div>
  <div class="page">
    <p>Content-aware networks changes the trade-off of redundancy</p>
    <p>Content-aware networks = caching + contentaware processing to remove duplicates</p>
    <p>Caching effectively minimizes the bandwidth cost of redundancy</p>
    <p>Redundancy elimination (RE) [SIGCOMM08]</p>
    <p>Examples</p>
    <p>Bandwidth overhead of 100% redundancy: 3%</p>
    <p>Content-Centric Networking (CCN) [CoNEXT09]</p>
    <p>RE cache</p>
    <p>RE cache</p>
  </div>
  <div class="page">
    <p>Product: WAN optimizers (10+ vendors)  Cisco, Riverbed, Juniper, Blue Coat Systems</p>
    <p>E.g., Cisco deployed RE on 200+ remote offices.</p>
    <p>Corporate networks  Riverbed: 50+ corporate customers, datacenter deployments</p>
    <p>Deployment of content-aware networks</p>
    <p>Main office</p>
    <p>Branch</p>
    <p>WAN optimizer</p>
    <p>WAN optimizer</p>
    <p>VPN (Virtual wire)</p>
    <p>Isolation from Cross traffic</p>
  </div>
  <div class="page">
    <p>RE Network</p>
    <p>Redundant Packet Transmission (RPT)</p>
    <p>Introduce redundancy in a way that the network understands</p>
    <p>Questions/Challenges  How do we make sure we retain the robustness benefits?  How much redundancy is needed? How does it compare with FEC?  Is this safe to use?</p>
    <p>FEC</p>
    <p>RPT</p>
    <p>Redundancy Elimination Router re d</p>
    <p>u n</p>
    <p>d a</p>
    <p>n t</p>
  </div>
  <div class="page">
    <p>RE Network</p>
    <p>Redundant Packet Transmission (RPT)</p>
    <p>Introduce redundancy in a way that the network understands</p>
    <p>Questions/Challenges  How do we make sure we retain the robustness benefits?  How much redundancy is needed? How does it compare with FEC?  Is this safe to use?</p>
    <p>FEC</p>
    <p>RPT</p>
    <p>Redundancy Elimination Router</p>
  </div>
  <div class="page">
    <p>RPT on Redundancy Elimination (RE) Networks</p>
    <p>Outgoing interfaces</p>
    <p>Incoming interfaces</p>
    <p>Queue RE cache</p>
    <p>RE Decode</p>
    <p>A A A</p>
    <p>Decompressed packet</p>
    <p>Compressed (deduplicated) packet</p>
    <p>Packets</p>
    <p>Loss model: Congestive packet loss that happens inside a router.</p>
    <p>Redundancy Elimination Router</p>
    <p>Low overhead</p>
    <p>Robustness</p>
    <p>RE cache holds packets received during the past ~10 secs</p>
    <p>RE cache</p>
    <p>RE Encode</p>
  </div>
  <div class="page">
    <p>RE Networks</p>
    <p>Redundant Packet Transmission</p>
    <p>Introduce redundancy in a way that the network understands</p>
    <p>Redundant Transmission</p>
  </div>
  <div class="page">
    <p>RE Networks</p>
    <p>Redundant Packet Transmission</p>
    <p>Introduce redundancy in a way that the network understands</p>
    <p>Benefits:  Retain the robustness benefits of redundancy  Minimize the bandwidth cost  Application can signal the importance of data. (Fine-grained control)</p>
  </div>
  <div class="page">
    <p>A Case Study of RPT</p>
    <p>Redundant Packet Transmission (RPT)</p>
    <p>- Send multiple copy of the same packet.</p>
    <p>- Send every packet r times.</p>
    <p>- Applied to live video in RE networks.</p>
    <p>Hop-by-hop RE networks</p>
    <p>SmartRE networks</p>
    <p>Content Centric Networks (CCN)</p>
    <p>Partially content-aware networks</p>
    <p>Networks with link-layer loss</p>
    <p>Time-critical communication</p>
    <p>Redundant Packets Transmission</p>
  </div>
  <div class="page">
    <p>Analytical Comparison with FEC</p>
    <p>F ra</p>
    <p>ct io</p>
    <p>n o</p>
    <p>f O</p>
    <p>v e</p>
    <p>rh e</p>
    <p>a d</p>
    <p>End-to-end data loss rate (%)</p>
    <p>RPT(3) RPT(2)</p>
    <p>FEC(10,8)</p>
    <p>FEC(10,7)</p>
    <p>FEC(10,9)</p>
    <p>FEC(10,6)</p>
    <p>FEC(10,5)</p>
    <p>RPT(4)</p>
    <p>Naive 2% data loss 0 overhead</p>
    <p>Naive</p>
    <p>Batch size (n=10)</p>
    <p>Delay</p>
    <p>Original pkts (k=8)</p>
    <p>FEC(n=10,k=8)</p>
    <p>Redundancy (r=3)</p>
    <p>Delay RPT(3)</p>
    <p>Coded redundancy</p>
  </div>
  <div class="page">
    <p>Analytical Comparison with FEC</p>
    <p>Naive FEC(20,k)</p>
    <p>FEC(10,k) FEC(100,k)</p>
    <p>RPT(r)</p>
    <p>F ra</p>
    <p>ct io</p>
    <p>n o</p>
    <p>f O</p>
    <p>v e</p>
    <p>rh e</p>
    <p>a d</p>
    <p>End-to-end Data loss rate (%)</p>
    <p>RPT(3) RPT(2)</p>
    <p>FEC(20,16) FEC(10,8)</p>
    <p>FEC(100,90)</p>
    <p>FEC(10,7)</p>
    <p>FEC(10,9)</p>
    <p>FEC(20,14)</p>
    <p>FEC(10,6)</p>
    <p>FEC(10,5)</p>
    <p>RPT(4)</p>
    <p>Batch size (n=20)</p>
    <p>Delay</p>
    <p>Original pkts (k=16)</p>
    <p>FEC(n=20,k=16)</p>
  </div>
  <div class="page">
    <p>Analytical Comparison with FEC</p>
    <p>Naive FEC(20,k)</p>
    <p>FEC(10,k) FEC(100,k)</p>
    <p>RPT(r)</p>
    <p>F ra</p>
    <p>ct io</p>
    <p>n o</p>
    <p>f O</p>
    <p>v e</p>
    <p>rh e</p>
    <p>a d</p>
    <p>End-to-end Data loss rate (%)</p>
    <p>RPT(3) RPT(2)</p>
    <p>FEC(20,16) FEC(10,8)</p>
    <p>FEC(100,90)</p>
    <p>FEC(10,7)</p>
    <p>FEC(10,9)</p>
    <p>FEC(20,14)</p>
    <p>FEC(10,6)</p>
    <p>FEC(10,5)</p>
    <p>RPT(4)</p>
    <p>Scheme Max Delay@ 1Mbps</p>
    <p>FEC(10,7) 168 ms</p>
    <p>FEC(20,16) 300 ms</p>
    <p>FEC(100,92) 1300 ms</p>
    <p>RPT(r) Tunable</p>
    <p>Skype video call 128~300kbps Skype (HD) 1.2~1.5Mbps</p>
  </div>
  <div class="page">
    <p>Experimental Evaluation</p>
    <p>Thorough evaluation on 3 different aspects of RPT</p>
    <p>End user performance</p>
    <p>Ease of use (parameter selection)</p>
    <p>Impact on other traffic</p>
    <p>Methodology</p>
    <p>Real experiment</p>
    <p>Trace based experiment</p>
    <p>Simulation</p>
    <p>CIF: 352x288</p>
  </div>
  <div class="page">
    <p>Evaluation Framework</p>
    <p>RE router implementation (Click, NS2)</p>
    <p>Video quality evaluation using evalvid</p>
    <p>FEC encoder</p>
    <p>(n,k)</p>
    <p>RPT(r,d)</p>
    <p>R e</p>
    <p>a li</p>
    <p>st ic</p>
    <p>C ro</p>
    <p>ss t</p>
    <p>ra ff</p>
    <p>ic</p>
    <p>RE encoder</p>
    <p>(RE)</p>
    <p>RE decoder</p>
    <p>S in</p>
    <p>k</p>
    <p>V id</p>
    <p>e o</p>
    <p>S o</p>
    <p>u rc</p>
    <p>e</p>
    <p>RE</p>
    <p>Sender Network Receiver</p>
    <p>Measure BW overhead</p>
    <p>Measure loss rate, video quality (PSNR)</p>
    <p>RPT</p>
    <p>FEC</p>
  </div>
  <div class="page">
    <p>A v</p>
    <p>e ra</p>
    <p>g e</p>
    <p>P S</p>
    <p>N R</p>
    <p>( d</p>
    <p>B )</p>
    <p>E2E Performance: Video Quality</p>
    <p>(Before loss)</p>
  </div>
  <div class="page">
    <p>A v</p>
    <p>e ra</p>
    <p>g e</p>
    <p>P S</p>
    <p>N R</p>
    <p>( d</p>
    <p>B )</p>
    <p>E2E Performance: Video Quality</p>
    <p>Packet loss rate ~2%</p>
  </div>
  <div class="page">
    <p>E2E Performance: Video Quality</p>
    <p>Nave UDP</p>
    <p>RPT(3) Overhead ~6%</p>
    <p>FEC(10,9) Overhead ~10%</p>
  </div>
  <div class="page">
    <p>Naive</p>
    <p>FEC(10,k)</p>
    <p>RS(r)</p>
    <p>F ra</p>
    <p>ct io</p>
    <p>n o</p>
    <p>f O</p>
    <p>v e</p>
    <p>rh e</p>
    <p>a d</p>
    <p>RPT(4)</p>
    <p>End-to-end Data Loss Rate (%)</p>
    <p>FEC(10,9)</p>
    <p>FEC(10,6)</p>
    <p>FEC(10,8)</p>
    <p>FEC(10,7)</p>
    <p>RPT(2) RPT(3) Naive</p>
    <p>E2E Performance: overhead and robustness</p>
    <p>Packet loss rate ~2%</p>
    <p>RPT(r)</p>
  </div>
  <div class="page">
    <p>RPT flows get prioritized.</p>
    <p>Sender</p>
    <p>Receiver (Non-RPT)</p>
    <p>Receiver (RPT)</p>
    <p>Original</p>
    <p>Redundancy</p>
    <p>Bandwidth use (Mbps)</p>
    <p>Impact on other traffic</p>
    <p>Throughput reduction: 2%</p>
    <p>(Before loss)</p>
    <p>(After loss)</p>
    <p>Packet loss rate : 9%.</p>
    <p>RPT Flows</p>
    <p>Loss</p>
    <p>Other Flows</p>
    <p>Loss</p>
    <p>(After loss)</p>
  </div>
  <div class="page">
    <p>Not a problem: Important flows should be prioritized.</p>
    <p>Problem: Unfair bandwidth allocation</p>
    <p>Is flow prioritization a problem?</p>
    <p>How do provide fairness and robustness at the same time?  Core problem: RPT flows are not reacting to congestion. Apply TCP-friendly rate control to RPT.  Challenge: correctly accounting for possible changes in loss pattern</p>
    <p>TCP throughput : 18Mbps</p>
    <p>TCP throughput: 12Mbps</p>
  </div>
  <div class="page">
    <p>Other results in the paper</p>
    <p>Demonstration of RPT in a real-world setting</p>
    <p>E.g., Emulated corporate VPN scenario</p>
    <p>Trace-based experimental results</p>
    <p>Detailed parameter sensitivity study</p>
    <p>Network safety (impact on the network)</p>
    <p>Design and evaluation of TCP-friendly RPT</p>
    <p>Strategies on other content-aware networks</p>
  </div>
  <div class="page">
    <p>Generalized RPT</p>
    <p>Many sophisticated schemes are enabled by FEC.  Priority encoding transmission (PET), unequal error protection</p>
    <p>(UEP), multiple description coding (MDC)</p>
    <p>Very important: Sent x3 (byte-level redundancy)</p>
    <p>Important: Sent x2 PET/MDC</p>
    <p>Prioritization within a flow for graceful degradation of quality</p>
    <p>Redundancy elimination networks [SIGCOMM08]</p>
    <p>UEP</p>
    <p>I-frame P-frame</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Key Idea of RPT: Dont hide, expose redundancy!</p>
    <p>Key Features</p>
    <p>High robustness, low overhead  user performance</p>
    <p>Ease of use: parameter selection, per-packet redundancy/delay control</p>
    <p>Flow prioritization</p>
    <p>Applicability</p>
    <p>Applies to delay-sensitive communications in contentaware networks in general.</p>
  </div>
  <div class="page"/>
</Presentation>
