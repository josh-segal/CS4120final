<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Learning Relaxed Belady for Content Delivery Network Caching</p>
    <p>Zhenyu Song, Daniel S. Berger, Kai Li, Wyatt Lloyd</p>
    <p>NSDI 2020</p>
  </div>
  <div class="page">
    <p>Edge cache</p>
    <p>CDN Caching Goal: Minimize WAN Traffic</p>
    <p>Requests</p>
    <p>Miss Hit</p>
    <p>User</p>
    <p>Requests</p>
    <p>Wide Area Network (WAN) traffic is expensive</p>
    <p>miss bytes total bytes</p>
    <p>Key metric byte miss ratio:</p>
  </div>
  <div class="page">
    <p>Caching Remains Challenging Heuristic-based algorithms (1965): LRU, LRUK, GDSF, ARC, ...  Work well for some workloads, but work poorly for other ML-based adaptation of heuristics (2017): UCB, LeCAR, ...  Also work well for some workloads, but poorly for others Beladys MIN algorithm (1966)  Oracle: requires future knowledge  Large gap in byte miss ratio between state-of-the-art and Belady:</p>
    <p>2040% on production traces</p>
  </div>
  <div class="page">
    <p>Introducing Learning Relaxed Belady (LRB)</p>
    <p>New approach: mimic Belady using machine learning</p>
  </div>
  <div class="page">
    <p>General Overview of our Approach</p>
    <p>R R R R R R Now</p>
    <p>Cache</p>
    <p>R</p>
    <p>Past information</p>
    <p>ML architecture</p>
    <p>Training data</p>
    <p>Eviction candidates</p>
  </div>
  <div class="page">
    <p>Challenge 1: Past Information</p>
    <p>R R R R R R Now</p>
    <p>Cache</p>
    <p>R What past information to use?</p>
    <p>Past information</p>
    <p>ML architecture</p>
    <p>Training data</p>
    <p>Eviction candidates</p>
    <p>More data improves training but increases mem overhead</p>
  </div>
  <div class="page">
    <p>Challenge 2: Generate Online Training Data</p>
    <p>R R R R R R Now</p>
    <p>Cache</p>
    <p>R What past information to use?</p>
    <p>Generate online training data?</p>
    <p>Past information</p>
    <p>ML architecture</p>
    <p>Training data</p>
    <p>Eviction candidates</p>
  </div>
  <div class="page">
    <p>Challenge 3: ML Architecture</p>
    <p>R R R R R R Now</p>
    <p>Cache</p>
    <p>R What past information to use?</p>
    <p>Generate online training data?</p>
    <p>What ML architecture to select?</p>
    <p>Past information</p>
    <p>ML architecture</p>
    <p>Training data</p>
    <p>Eviction candidates</p>
    <p>Large design space: features, model, prediction target, loss function</p>
  </div>
  <div class="page">
    <p>Challenge 4: Eviction Candidates</p>
    <p>R R R R R R Now</p>
    <p>Cache</p>
    <p>R</p>
    <p>Past information</p>
    <p>ML architecture</p>
    <p>Training data</p>
    <p>Eviction candidates</p>
    <p>How to select evict candidates?</p>
    <p>What past information to use?</p>
    <p>Generate online training data?</p>
    <p>What ML architecture to select?</p>
  </div>
  <div class="page">
    <p>Challenge 5: Quickly Evaluate Design Decisions</p>
    <p>R R R R R R Now</p>
    <p>Cache</p>
    <p>R</p>
    <p>End-to-end evaluation: days</p>
    <p>How to select evict candidates?</p>
    <p>What past information to use?</p>
    <p>Generate online training data?</p>
    <p>What ML architecture to select?</p>
    <p>Past information</p>
    <p>ML architecture</p>
    <p>Training data</p>
    <p>Eviction candidates</p>
  </div>
  <div class="page">
    <p>Solutions: Relaxed Belady Algorithm &amp; Good Decision Ratio</p>
    <p>End-to-end evaluation: days</p>
    <p>How to select evict candidates?</p>
    <p>What past information to use?</p>
    <p>Generate online training data?</p>
    <p>What ML architecture to select? Relaxed Belady algorithm</p>
    <p>Good decision ratio</p>
  </div>
  <div class="page">
    <p>Solutions: Relaxed Belady Algorithm &amp; Good Decision Ratio</p>
    <p>Relaxed Belady algorithm</p>
    <p>Good decision ratio: minsEnd-to-end evaluation: days</p>
    <p>How to select evict candidates?</p>
    <p>What past information to use?</p>
    <p>Generate online training data?</p>
    <p>What ML architecture to select?</p>
  </div>
  <div class="page">
    <p>Solutions: Relaxed Belady Algorithm &amp; Good Decision Ratio</p>
    <p>End-to-end evaluation: days</p>
    <p>How to select evict candidates?</p>
    <p>What past information to use?</p>
    <p>Generate online training data?</p>
    <p>What ML architecture to select? Relaxed Belady algorithm</p>
    <p>Good decision ratio: mins</p>
  </div>
  <div class="page">
    <p>Challenge: Hard to Mimic Belady (Oracle) Algorithm</p>
    <p>Mimicking exact Belady is impractical  Need predictions for all objects  prohibitive computational cost  Need exact prediction of next access  further prediction are harder</p>
    <p>Belady: evict object with next access farthest in the future</p>
    <p>Cache (now)</p>
    <p>A</p>
    <p>B</p>
    <p>C D</p>
    <p>Time to next request</p>
    <p>D B A C</p>
    <p>Evict</p>
  </div>
  <div class="page">
    <p>Introducing the Relaxed Belady Algorithm</p>
    <p>Observation: many objects are good candidates for eviction</p>
    <p>Relaxed Belady evicts an objects beyond boundary</p>
    <p>Cache (now)</p>
    <p>A</p>
    <p>B</p>
    <p>C D</p>
    <p>Time to next request</p>
    <p>D B A C</p>
    <p>EvictBelady boundary</p>
    <p>Do not need predictions for all objects  reasonable computation  No need to differentiate beyond boundary  simplifies the prediction</p>
  </div>
  <div class="page">
    <p>Good Decision Ratio: Directly Measures Eviction Decisions</p>
    <p>Insight: relaxed Belady enables evaluating eviction decisions</p>
    <p>Good decision ratio:</p>
    <p>Bad eviction decision evicted objs next access &lt; boundary</p>
    <p># good eviction decisions # total eviction decisions</p>
    <p>Good eviction decision evicted objs next access &gt; boundary</p>
    <p>Belady boundary</p>
    <p>Time to next request</p>
  </div>
  <div class="page">
    <p>Challenge 5: Quickly Evaluate Design Decisions</p>
    <p>R R R R R R Now</p>
    <p>Cache</p>
    <p>R</p>
    <p>End-to-end evaluation: days</p>
    <p>How to select evict candidates?</p>
    <p>What past information to use?</p>
    <p>Generate online training data?</p>
    <p>What ML architecture to select?</p>
    <p>Past information</p>
    <p>ML architecture</p>
    <p>Training data</p>
    <p>Eviction candidates</p>
  </div>
  <div class="page">
    <p>Evaluate Design Decisions w/o Simulation</p>
    <p>ML architecture</p>
    <p>Training data</p>
    <p>Eviction candidates</p>
    <p>Log</p>
    <p>Simulate once, reuse for many designs</p>
    <p>Evaluate designs on log using good decision ratio in minutes</p>
  </div>
  <div class="page">
    <p>Challenge 1: Past Information</p>
    <p>R R R R R R</p>
    <p>ML architecture</p>
    <p>Training data</p>
    <p>Eviction candidates</p>
    <p>More data improves training but increases mem overhead</p>
    <p>Past information What past information to use?</p>
    <p>Now</p>
    <p>Cache</p>
    <p>R</p>
  </div>
  <div class="page">
    <p>Track Objects within a Sliding Memory Window</p>
    <p>Per object features</p>
    <p>R R R R R R Now</p>
    <p>R</p>
    <p>Sliding memory window mimics Belady boundary</p>
    <p>Only track objects within memory window</p>
    <p>Window size is LRBs main hyperparameter</p>
  </div>
  <div class="page">
    <p>Challenge 2: Training Data</p>
    <p>R R R R R R Now</p>
    <p>Cache</p>
    <p>R What past information to use?</p>
    <p>Generate online training data?</p>
    <p>Past information</p>
    <p>ML architecture</p>
    <p>Training data</p>
    <p>Eviction candidates</p>
  </div>
  <div class="page">
    <p>Sample Training Data &amp; Label on Access or Boundary</p>
    <p>Per object features</p>
    <p>R R R R R R Now</p>
    <p>R</p>
    <p>Sliding memory window</p>
    <p>Sample</p>
    <p>Unlabeled training data</p>
    <p>Past memory windowAccess</p>
    <p>Labeled training data</p>
  </div>
  <div class="page">
    <p>Challenge 3: ML Architecture</p>
    <p>Large potential design space</p>
    <p>R R R R R R Now</p>
    <p>Cache</p>
    <p>R What past information to use?</p>
    <p>Generate online training data?</p>
    <p>What ML architecture to select?</p>
    <p>Past information</p>
    <p>ML architecture</p>
    <p>Training data</p>
    <p>Eviction candidates</p>
  </div>
  <div class="page">
    <p>Solution 3: Feature &amp; Model Selection</p>
    <p>Gradient boosting decision trees</p>
    <p>Lightweight &amp; high good decision ratio</p>
    <p>Training ~300 ms, prediction ~30 us</p>
    <p>Features</p>
    <p>Object size</p>
    <p>Object type</p>
    <p>Inter-request distances (recency)</p>
    <p>Exponential decay counters (long-term frequencies)</p>
    <p>Use good decision ratio to evaluate new designs</p>
  </div>
  <div class="page">
    <p>Challenge 4: Eviction Candidates</p>
    <p>R R R R R R Now</p>
    <p>Cache</p>
    <p>R</p>
    <p>Past information</p>
    <p>ML architecture</p>
    <p>Training data</p>
    <p>Eviction candidates</p>
    <p>How to select evict candidates?</p>
    <p>What past information to use?</p>
    <p>Generate online training data?</p>
    <p>What ML architecture to select?</p>
  </div>
  <div class="page">
    <p>Solution 4: Random Sampling for Eviction</p>
    <p>Can mimic relaxed Belady if we can find 1 object beyond the boundary</p>
    <p>k=64 candidates; more does not improve good decision ratio</p>
    <p>R R R R R R Now</p>
    <p>Cache</p>
    <p>R</p>
    <p>Past information</p>
    <p>Random k candidates</p>
  </div>
  <div class="page">
    <p>Label</p>
    <p>Labeled dataset</p>
    <p>Sample</p>
    <p>Unlabeled dataset</p>
    <p>Learning Relaxed Belady</p>
    <p>Now</p>
    <p>Cache</p>
    <p>RR R R R R R</p>
    <p>Memory window</p>
    <p>RR</p>
    <p>Train</p>
    <p>Model Eviction Candidates</p>
    <p>Sample</p>
    <p>Predict</p>
    <p>Evict</p>
  </div>
  <div class="page">
    <p>Simulator implementation  LRB + 14 other algorithms</p>
    <p>Prototype implementation  C++ on top of production system (Apache Traffic Server)  Many optimizations</p>
    <p>Implementation</p>
  </div>
  <div class="page">
    <p>Q1: Learning Relaxed Belady (LRB) traffic reduction vs state-of-the-art</p>
    <p>Q2: overhead of LRB vs CDN production system</p>
    <p>Traces: 6 production traces from 3 CDNs</p>
    <p>Hyperparameter (memory window/model/...) tuned on 20% of trace</p>
    <p>Evaluation Setup</p>
  </div>
  <div class="page">
    <p>LRB Reduces WAN Traffic 20% traffic reduction over B-LRU 10% reduction over the best SOA</p>
    <p>Wikipedia trace</p>
    <p>Industry standard</p>
  </div>
  <div class="page">
    <p>CDN-B1 CDN-B3CDN-B2</p>
    <p>LRB Consistently Improves on the State of the Art</p>
    <p>Wikipedia CDN-A1 CDN-A2</p>
  </div>
  <div class="page">
    <p>LRB Overhead Is Modest</p>
    <p>Throughput: 11.7 Gbps vs 11.7 Gbps (unmodified)</p>
    <p>Memory overhead=13% cache size</p>
    <p>Peak CPU: 16% vs 9% (unmodified)</p>
    <p>Edge cache</p>
    <p>Requests</p>
    <p>User</p>
  </div>
  <div class="page">
    <p>Conclusion  LRB reduces WAN traffic with modest overhead</p>
    <p>Key insight: relaxed Belady</p>
    <p>Simplifies machine learning &amp; reduces system overhead</p>
    <p>Good decision ratio enables fast design evaluation &amp; design iteration</p>
    <p>Code &amp; Wikipedia trace: https://github.com/sunnyszy/lrb</p>
  </div>
</Presentation>
