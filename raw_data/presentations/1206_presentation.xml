<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Apache Nemo: A Framework for Building Distributed Dataflow Optimization Policies</p>
    <p>Youngseok Yang1 Jeongyoon Eo1 Geon-Woo Kim2 Joo Yeon Kim3 Sanha Lee4 Jangho Seo1 Won Wook Song1 Byung-Gon Chun1</p>
  </div>
  <div class="page">
    <p>Distributed data processing applications and runtime</p>
    <p>Runtime</p>
    <p>(e.g., Dryad, Tez, Spark, )</p>
    <p>Application dataCollection.map(..).reduce(..) (e.g., DryadLINQ, Spark RDD, Beam)</p>
    <p>Directed-Acyclic Graph (DAG)</p>
  </div>
  <div class="page">
    <p>Policy interfaces for scheduling/communication</p>
    <p>Runtime-level (e.g., Dryad)</p>
    <p>Application-level (e.g., Optimus)</p>
    <p>register(stat, subqueryA,subqueryB)</p>
    <p>onEvent(event) { modify(DAG, event) }</p>
    <p>- Correctness: O - Fine Control: X</p>
    <p>- Correctness: X - Fine Control: O</p>
  </div>
  <div class="page">
    <p>Our idea: Transform an intermediate representation</p>
    <p>IR DAG: Provides both correctness and fine control  Optimization pass: A function to transform the IR DAG  Runtime extensions: Apply the optimizations</p>
  </div>
  <div class="page">
    <p>Experimental Evaluation</p>
    <p>Deployment scenarios  Resources: Transient, Geo-distributed  Data: Large, Skewed</p>
    <p>Results  Nemo is on par with specialized runtimes  Nemo further improves performance for scenarios with</p>
    <p>combinations of resource/data characteristics</p>
  </div>
  <div class="page">
    <p>USENIX ATC 2019, 2:20PM, Track II, on July 10</p>
    <p>https://nemo.apache.org/</p>
  </div>
</Presentation>
