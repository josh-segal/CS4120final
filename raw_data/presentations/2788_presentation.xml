<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>SweepSense Sensing 5 GHz in 5 ms using Low-cost Radios</p>
    <p>Yeswanth Guddeti, Raghav Subbaraman, Moein Khazraee, Aaron Schulman, Dinesh Bharadia</p>
  </div>
  <div class="page">
    <p>We need wide-bandwidth and high-time resolution sensing</p>
    <p>Requires sensing 150 MHz for 1 ms long radar pulses</p>
    <p>CBRS Spectrum Sharing (3.5 GHz) LTE-Unlicensed co-existence (5 GHz)</p>
    <p>Requires sensing 700 MHz for 1 ms long Wi-Fi frames</p>
    <p>Radar pulses</p>
  </div>
  <div class="page">
    <p>Spectrum analyzers sense with wide bandwidth</p>
    <p>Keysight RF Sensor (Government spectrum monitoring)</p>
    <p>They have poor time resolution because they slowly sweep and only measure power</p>
  </div>
  <div class="page">
    <p>Radio receivers sense with high time resolution</p>
    <p>USRP N210 SDR (Microsoft Spectrum Observatory)</p>
    <p>They have poor bandwidth because their ADC has a limited sampling rate</p>
  </div>
  <div class="page">
    <p>+Wide bandwidth High resolution</p>
    <p>SweepSense: A new paradigm in spectrum sensing</p>
    <p>SweepSense</p>
    <p>SweepSense combines the sensing capabilities of spectrum analyzers and radio receivers</p>
  </div>
  <div class="page">
    <p>Insight: Sweeping radio receivers capture a portion of every signal</p>
    <p>T im</p>
    <p>e</p>
    <p>Frequency</p>
    <p>Sampling Transmitting</p>
    <p>Sensed Missed</p>
    <p>SweepSense</p>
  </div>
  <div class="page">
    <p>SweepSense Overview</p>
  </div>
  <div class="page">
    <p>T im</p>
    <p>e</p>
    <p>ADC T im</p>
    <p>e</p>
    <p>Frequency</p>
    <p>Background: Radio receivers tune by generating a tone</p>
    <p>Local Oscillator</p>
    <p>Frequency</p>
  </div>
  <div class="page">
    <p>T im</p>
    <p>e</p>
    <p>Frequency T</p>
    <p>im e</p>
    <p>Frequency</p>
    <p>Generating a sweeping tone makes the receiver sweep</p>
    <p>ADC</p>
    <p>Sweeping Local Oscillator</p>
  </div>
  <div class="page">
    <p>Phase</p>
    <p>Comparator</p>
    <p>A typical local oscillator is a VCO feedback loop</p>
    <p>Generates the tone</p>
    <p>Problem: The feedback loop typically takes 10-100 s to stabilize</p>
  </div>
  <div class="page">
    <p>SweepSense replaces the feedback loop with a ramp</p>
    <p>T im</p>
    <p>e</p>
    <p>Voltage 1. Selects the</p>
    <p>frequency</p>
    <p>T im</p>
    <p>e</p>
    <p>Frequency</p>
  </div>
  <div class="page">
    <p>Making the oscillator sweep only requires a single-wire mod</p>
  </div>
  <div class="page">
    <p>SweepSense Overview</p>
  </div>
  <div class="page">
    <p>SweepSense captures have continuously changing center frequency</p>
    <p>Received signal</p>
    <p>Sweeping Local Oscillator</p>
    <p>Swept capture</p>
    <p>We need to unsweep the samples so they have a fixed center frequency</p>
    <p>Frequency</p>
    <p>ti m</p>
    <p>e</p>
  </div>
  <div class="page">
    <p>Swept capture</p>
    <p>By applying a self-calibration signal, we can unsweep the samples</p>
    <p>Sweeping Local Oscillator</p>
    <p>Received signal</p>
    <p>Calibration capture</p>
  </div>
  <div class="page">
    <p>Swept capture</p>
    <p>By applying a self-calibration signal, we can unsweep the samples</p>
    <p>Sweeping Local Oscillator</p>
    <p>Received signal</p>
    <p>Calibration capture</p>
    <p>Unswept capture</p>
  </div>
  <div class="page">
    <p>Swept captures contain significant portions of packets</p>
    <p>Bluetooth/Zigbee?</p>
  </div>
  <div class="page">
    <p>SweepSense Overview</p>
  </div>
  <div class="page">
    <p>Challenge  We only capture a part of the packet</p>
    <p>Standard decoding techniques can not detect the protocol using part of a packet</p>
    <p>T im</p>
    <p>e</p>
    <p>Frequency</p>
    <p>SweepSense</p>
  </div>
  <div class="page">
    <p>Cyclo-stationary analysis captures repeated patterns in frequency and time.</p>
    <p>WiFi OFDM symbol time is captured by cyclic auto-correlation function (CAF).</p>
    <p>Protocol detection only requires short captures</p>
    <p>Traditional receiver</p>
    <p>Symbol Time</p>
    <p>Sweep-Sense</p>
    <p>Short Unswept captures retain Cyclostationary patterns</p>
    <p>Symbol Time</p>
  </div>
  <div class="page">
    <p>Bluetooth exhibit patterns in frequency and Zigbee exhibit patterns in time, which are distinguishable in Cyclo-stationarity analysis.</p>
    <p>We use a Machine Learning-based model to classify the protocols:</p>
    <p>Bluetooth (BLE)</p>
    <p>Zigbee (ZB)</p>
    <p>WiFi-OFDM (802.11g)</p>
    <p>WiFi-DSSS (802.11b)</p>
    <p>Cyclostationary patterns are distinct for each protocol</p>
  </div>
  <div class="page">
    <p>Sensing protocols in Unlicensed band</p>
    <p>Classification Accuracy Layout of the room</p>
    <p>Unlicensed band has OFDM, DSSS, BT, Zigbee.</p>
    <p>SweepSense can sweep GHz wideband in a millisecond while still detecting protocols.</p>
  </div>
  <div class="page">
    <p>Radar detection in CBRS band</p>
    <p>Radar Type Pulse width (us) Pulses per second Pulses per burst Accuracy</p>
    <p>Bin 1 Lite 0.8 1000 19 99.5 % (398/400)</p>
    <p>Scans CBRS band 3.55  3.7 GHz every 1.3 ms.  Use Vector Signal Generator (Keysight N5182B) to generate radar type Bin 1 Lite</p>
    <p>as per official testing and certification procedures for ESC sensors</p>
    <p>SweepSense reliably detects maritime radar across 150 MHz</p>
  </div>
  <div class="page">
    <p>SweepSense creates new spectrum sharing opportunities</p>
    <p>SweepSense can detect loading across 200 MHz of LTE transmissions.</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Applications  Protocols detection for the ISM band</p>
    <p>Radar pulse detection in CBRS band</p>
    <p>LTE load pattern detection</p>
    <p>Future Applications:  Interference Detection</p>
    <p>Transmitter localization</p>
    <p>SweepSense can rapidly capture and classify the entire terrestrial spectrum.</p>
  </div>
  <div class="page">
    <p>Build your own applications using open-sourced SweepSense.</p>
    <p>github.com/ucsdsysnet/sweepsense</p>
    <p>SweepSense begins!</p>
  </div>
</Presentation>
