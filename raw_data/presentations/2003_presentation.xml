<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Sockets Direct Protocol for Hybrid Network Stacks: A Case Study with</p>
    <p>iWARP over 10G Ethernet</p>
    <p>P. Balaji, S. Bhagvat, R. Thakur and D. K. Panda,</p>
    <p>Mathematics and Computer Science, Argonne National Laboratory</p>
    <p>High Performance Cluster Computing, Dell Inc.</p>
    <p>Computer Science and Engineering, Ohio State University</p>
  </div>
  <div class="page">
    <p>Hybrid Stacks for High-speed Networks  Hardware Offloaded Network Stacks</p>
    <p>Intelligent hardware common on popular networks (InfiniBand, Quadrics, hardware iWARP/10GE)</p>
    <p>Worked well to achieve high performance  Adding more features  error prone, expensive, complex</p>
    <p>Multi-core architectures  Increased computational power</p>
    <p>Hybrid Architectures  Network Accelerators + Multi-cores  Higher Performance + Flexibility to add more features  Qlogic InfiniBand, Myri-10G, hybrid iWARP/10GE</p>
  </div>
  <div class="page">
    <p>Sockets Direct Protocol (SDP)  Industry standard high-performance</p>
    <p>sockets for IB and iWARP</p>
    <p>Defined for two purposes:</p>
    <p>Maintain compatibility for existing</p>
    <p>applications</p>
    <p>Deliver the performance of networks</p>
    <p>to the applications</p>
    <p>Mapping of byte-stream protocol to</p>
    <p>message oriented semantics</p>
    <p>Zero copy (for large messages)</p>
    <p>Buffer copy (for small messages)</p>
    <p>High-speed Network</p>
    <p>Device Driver</p>
    <p>IP</p>
    <p>TCP</p>
    <p>Sockets</p>
    <p>Sockets Direct Protocol</p>
    <p>(SDP)</p>
    <p>Sockets Applications or Libraries</p>
    <p>Advanced Features</p>
    <p>Offloaded Protocol</p>
    <p>SDP allows applications to utilize the</p>
    <p>network performance and capabilities</p>
    <p>with ZERO modifications</p>
    <p>Current SDP stacks are heavily optimized for hardware offloaded protocol stacks</p>
  </div>
  <div class="page">
    <p>The Problem  The problem with network stacks</p>
    <p>Have not been able to keep pace with shift of paradigm</p>
    <p>Sockets Direct Protocol (SDP)  Assumes complete offload  Optimizations like data buffering for small messages, message-level</p>
    <p>flow control  Beneficial on hardware-offload network stack but redundant on hybrid</p>
    <p>networks. Imposes significant overheads!</p>
    <p>SDP on hybrid stacks: Case study with iWARP/10GE  Understand drawbacks of current SDP implementation</p>
    <p>Propose enhanced SDP design to avoid redundancy</p>
    <p>Study the impact of the new design on applications and benchmarks</p>
  </div>
  <div class="page">
    <p>Presentation Layout</p>
    <p>Introduction</p>
    <p>Overview of iWARP (architecture and different designs)</p>
    <p>SDP for Hybrid hardware-software iWARP</p>
    <p>Experimental Evaluation</p>
    <p>Conclusions and Future Work</p>
  </div>
  <div class="page">
    <p>iWARP Components  Relatively new initiative by IETF/RDMAC  Extensions to Ethernet:</p>
    <p>Richer interface (zero-copy, RDMA)  Backward compatible with TCP/IP</p>
    <p>Three Protocol Layers  RDMAP: Interface layer for applications  RDDP: Core of the iWARP stack</p>
    <p>Connection management, packet demultiplexing between connections</p>
    <p>MPA: Glue layer to deal with backward compatibility with TCP/IP</p>
    <p>CRC-based data integrity  Backward compatibility to TCP/IP using</p>
    <p>markers</p>
    <p>Application</p>
    <p>Sockets SDP, MPI etc.</p>
    <p>Software TCP/IP</p>
    <p>RDMAP Verbs</p>
    <p>RDDP</p>
    <p>MPA</p>
    <p>Offloaded TCP/IP</p>
  </div>
  <div class="page">
    <p>Need for MPA: Issues with Out-of-Order Packets</p>
    <p>Packet Header</p>
    <p>iWARP Header Data Payload</p>
    <p>Packet Header</p>
    <p>iWARP Header</p>
    <p>Data Payload</p>
    <p>Packet Header</p>
    <p>iWARP Header</p>
    <p>Data Payload</p>
    <p>Packet Header</p>
    <p>iWARP Header</p>
    <p>Partial Payload</p>
    <p>Packet Header</p>
    <p>Partial Payload</p>
    <p>Packet Header</p>
    <p>iWARP Header</p>
    <p>Data Payload</p>
    <p>Packet Header</p>
    <p>iWARP Header</p>
    <p>Data Payload</p>
    <p>Delayed Packet Out-Of-Order Packets</p>
    <p>(Cannot identify iWARP header)</p>
    <p>Intermediate Switch Segmentation</p>
  </div>
  <div class="page">
    <p>Handling Out-of-Order Packets in iWARP</p>
    <p>RDMAP RDDP</p>
    <p>CRC Markers</p>
    <p>TCP/IP</p>
    <p>RDMAP Markers</p>
    <p>TCP/IP</p>
    <p>RDDP CRC</p>
    <p>Markers TCP/IP</p>
    <p>RDMAP</p>
    <p>RDDP CRC</p>
    <p>HOST</p>
    <p>NIC</p>
    <p>Software Hardware Hybrid</p>
    <p>DDP Header</p>
    <p>Payload (IF ANY)</p>
    <p>DDP Header</p>
    <p>Payload (IF ANY)</p>
    <p>Pad CRC</p>
    <p>MarkerSegment Length</p>
    <p>Packet structure becomes overly</p>
    <p>complicated</p>
    <p>Performing in hardware no longer</p>
    <p>straight forward!</p>
  </div>
  <div class="page">
    <p>Implementations of iWARP</p>
    <p>Several implementations exist  Hardware implementations</p>
    <p>Optimized for performance  Do not offer advanced features</p>
    <p>Software implementations  More feature complete (handling out-of-order communication,</p>
    <p>packet drops etc)  Not-optimized for performance</p>
    <p>Hybrid implementations [balaji07:iwarp]  Best of both worlds</p>
    <p>[balaji07:iwarp] Analyzing the Impact of Supporting Out-of-order Communication on</p>
    <p>In-order Performance with iWARP. P. Balaji, S. Bhagvat, D. K. Panda, R. Thakur and W. Gropp. SC 07</p>
  </div>
  <div class="page">
    <p>Presentation Layout</p>
    <p>Introduction</p>
    <p>Overview of iWARP (architecture and different designs)</p>
    <p>SDP for Hybrid hardware-software iWARP</p>
    <p>Experimental Evaluation</p>
    <p>Conclusions and Future Work</p>
  </div>
  <div class="page">
    <p>SDP Limitations for Hybrid Network Stacks</p>
    <p>Current SDP implementations  Heavily optimized for hardware offloaded protocol stacks  Do not perform well on Hybrid stacks</p>
    <p>Performance limiting features of SDP on hybrid stacks  Redundant buffer copy for small messages  Protocol interface extensions for message coalescing  Asynchronous flow control  Portability across hybrid stacks</p>
  </div>
  <div class="page">
    <p>Redundant Buffer Copy</p>
    <p>SDP performs intermediate buffering for small messages  Avoids memory registration costs for small messages</p>
    <p>iWARP performs buffering to implement markers  Strips of data need to be inserted in between the message</p>
    <p>Our approach to avoiding buffering redundancy:  Integrate SDP and iWARP buffering into a single copy based on</p>
    <p>information from the iWARP stack (e.g., TCP sequence number)</p>
    <p>SDP copies while leaving gaps for the markers</p>
    <p>iWARP fills in the markers into the space left by SDP</p>
    <p>Loss of generality: close interaction between SDP and iWARP</p>
    <p>Reduces buffering; improves performance</p>
  </div>
  <div class="page">
    <p>Message Coalescing  Improves performance for small messages</p>
    <p>Difficult to implement for hardware offloaded stacks  Easier in hybrid stacks as software resources can be used</p>
    <p>Issue: protocol stacks such as iWARP have no interface to perform message coalescing  Message sent out as soon as the application calls a send</p>
    <p>Our solution:  Extend iWARP interface for applications to append to messages  If a message is still queued and the next message can be added</p>
    <p>to it, so the iWARP implementation can coalesce the messages  Improves small message performance, as lesser headers are sent</p>
    <p>No performance loss, as previous message was anyway queued</p>
  </div>
  <div class="page">
    <p>Query Mechanism for iWARP</p>
    <p>Portability across different network stacks affected by proposed changes  E.g., disabling buffer copy is beneficial only for hybrid stacks,</p>
    <p>and not for hardware offloaded stacks</p>
    <p>Different hybrid stacks might provide different features  We should not have to develop a separate SDP for each such</p>
    <p>network stack</p>
    <p>Solution: Extend iWARP to allow applications to query functionality  E.g., is buffer copy provided in software?</p>
    <p>Allows SDP to query functionality and execute appropriately</p>
  </div>
  <div class="page">
    <p>Presentation Layout</p>
    <p>Introduction</p>
    <p>Overview of iWARP (architecture and different designs)</p>
    <p>SDP for Hybrid hardware-software iWARP</p>
    <p>Experimental Evaluation</p>
    <p>Conclusions and Future Work</p>
  </div>
  <div class="page">
    <p>SDP Latency and Bandwidth</p>
    <p>SDP Latency</p>
    <p>SDP/iWARP (basic)</p>
    <p>SDP/iWARP (enhanced)</p>
    <p>Message Size (bytes)</p>
    <p>C a</p>
    <p>ch e</p>
    <p>to N</p>
    <p>e tw</p>
    <p>o rk</p>
    <p>T ra</p>
    <p>ffi c</p>
    <p>R a</p>
    <p>tio</p>
    <p>K 64</p>
    <p>K 25</p>
    <p>SDP Bandwidth</p>
    <p>SDP/iWARP (basic)</p>
    <p>SDP/iWARP (integrated)</p>
    <p>Message Size (bytes)</p>
    <p>B a</p>
    <p>nd w</p>
    <p>id th</p>
    <p>( M</p>
    <p>b p</p>
    <p>s)</p>
    <p>The enhanced SDP/iWARP outperforms the basic SDP/iWARP in both the latency (10%) and bandwidth (20%) benchmarks</p>
  </div>
  <div class="page">
    <p>SDP Cache to Network Traffic Ratio</p>
    <p>SDP Cache Miss Ratio (Transmit Side)</p>
    <p>SDP (basic)</p>
    <p>SDP (enhanced)</p>
    <p>Message Size (bytes)</p>
    <p>C a</p>
    <p>ch e</p>
    <p>to N</p>
    <p>e tw</p>
    <p>o rk</p>
    <p>T ra</p>
    <p>ffi c</p>
    <p>R a</p>
    <p>tio</p>
    <p>SDP Cache Miss Ratio (Receive Side)</p>
    <p>SDP (basic)</p>
    <p>SDP (enhanced)</p>
    <p>Message Size (bytes)</p>
    <p>C a</p>
    <p>ch e</p>
    <p>t o</p>
    <p>N e</p>
    <p>tw o</p>
    <p>rk T</p>
    <p>ra ffi</p>
    <p>c R</p>
    <p>a ti o</p>
  </div>
  <div class="page">
    <p>Application-level Performance</p>
    <p>Virtual Microscope Application (1KB)</p>
    <p>SDP (basic)</p>
    <p>SDP (enhanced)</p>
    <p>Dataset Dimensions</p>
    <p>E xe</p>
    <p>cu tio</p>
    <p>n Ti</p>
    <p>m e</p>
    <p>( s)</p>
    <p>Iso-surface Application (8KB)</p>
    <p>SDP (basic) SDP (enhanced)</p>
    <p>Dataset Dimensions</p>
    <p>E xe</p>
    <p>cu tio</p>
    <p>n Ti</p>
    <p>m e</p>
    <p>( s)</p>
    <p>The enhanced SDP/iWARP outperforms the basic SDP/iWARP by 5% for the iso-surface application and virtual microscope application</p>
  </div>
  <div class="page">
    <p>Presentation Layout</p>
    <p>Introduction</p>
    <p>Overview of iWARP (architecture and different designs)</p>
    <p>SDP for Hybrid hardware-software iWARP</p>
    <p>Experimental Evaluation</p>
    <p>Conclusions and Future Work</p>
  </div>
  <div class="page">
    <p>Conclusions and Future Work</p>
    <p>Current implementations of SDP are optimized for hardware offloaded network stacks  Performance overhead on hybrid stacks due to redundant</p>
    <p>features</p>
    <p>We presented an extended design for SDP  Optimizes its execution based on underlying network</p>
    <p>features (e.g., what features are offloaded/onloaded)  Demonstrated significant performance benefits</p>
    <p>Future Work:  Extend support for hybrid network stacks to other</p>
    <p>programming models as well</p>
  </div>
  <div class="page">
    <p>Thank You !</p>
    <p>Contacts:</p>
    <p>P. Balaji: balaji@mcs.anl.gov</p>
    <p>S. Bhagvat: sitha_bhagvat@dell.com</p>
    <p>D. K. Panda: panda@cse.ohio-state.edu</p>
    <p>R. Thakur: thakur@mcs.anl.gov</p>
    <p>Web links:</p>
    <p>http://www.mcs.anl.gov/~balaji</p>
    <p>http://nowlab.cse.ohio-state.edu</p>
  </div>
</Presentation>
