<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Extending the Lifetime of Flash-based Storage through Reducing</p>
    <p>Write Amplification from File Systems</p>
    <p>Youyou Lu, Jiwu Shu, Weimin Zheng</p>
    <p>Tsinghua University</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background and Motivation</p>
    <p>Object-based Flash Translation Layer</p>
    <p>System Co-design with Flash Memory</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Flash Memory</p>
    <p>Gained Popularity</p>
    <p>High performance, low energy, reduced cost</p>
    <p>Wide deployment: embedded devices -&gt; enterprise servers</p>
    <p>Endurance</p>
    <p>SLC (100,000)</p>
    <p>MLC (10,000)</p>
    <p>TLC (1,000)</p>
    <p>Figure from The Bleak Future of NAND Flash Memory in FAST12</p>
  </div>
  <div class="page">
    <p>Existing Approach to Flash Endurance</p>
    <p>Wear Leveling</p>
    <p>To make all the blocks evenly worn out</p>
    <p>Fundamental part of the FTL</p>
    <p>Data Reduction</p>
    <p>To reduce the amount of data to be written</p>
    <p>Data De-duplication and Compression</p>
    <p>Used either in FTL or in FS</p>
  </div>
  <div class="page">
    <p>Write Amplification from File Systems</p>
    <p>Write Amplification from File Systems  Pre-FS writes vs. Post-FS writes</p>
    <p>Journaling  Keep the journals in the logs first,  And then, checkpoint them in-place</p>
    <p>Metadata synchronization  Frequent persistence in case of data lost or</p>
    <p>inconsistency</p>
    <p>Page-aligned update  Wasted space within one page</p>
  </div>
  <div class="page">
    <p>A simple example in ext3</p>
    <p>Echo title &gt; foo.txt  Effective Data: 6 bytes  Flash Writes: 11 pages * 4KB/page = 44KB</p>
    <p>Echo texttexttext(4KB) &gt;&gt; foo.txt  Effective Data: 4KB  Flash Writes: 9 pages * 4KB/page = 36KB</p>
    <p>bmp data bmp inode</p>
    <p>dirent C</p>
    <p>bmp bmp inode data</p>
    <p>dirent</p>
    <p>C data</p>
    <p>bmp data</p>
    <p>inode</p>
    <p>data</p>
    <p>bmp data inode</p>
    <p>Data Area Journal Area</p>
  </div>
  <div class="page">
    <p>Flash Opportunities</p>
    <p>No-overwrite  Can the journaling use it without writing twice in</p>
    <p>the file system?</p>
    <p>Page metadata  Can we store the backpointer to lazily write back</p>
    <p>the index while keeping consistency?</p>
    <p>Erase-before-Update  Can we track the free space in a coarse-grained</p>
    <p>way?</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background and Motivation</p>
    <p>Object-based Flash Translation Layer</p>
    <p>System Co-design with Flash Memory</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Architecture &amp; Data Organization  Intelligent Storage Mgmt.</p>
    <p>Optimized FS Mechanism</p>
    <p>Object File System</p>
    <p>Object-based Flash Translation Layer (OFTL)</p>
    <p>Application</p>
    <p>OBJ_READ, OBJ_WRITE, OBJ_FLUSH, OBJ_CREATE, OBJ_DELETE, OBJ_SETATTR, OBJ_GETATTR</p>
    <p>Raw Flash Device</p>
    <p>FLASH_READ, FLASH_WRITE, FLASH_ERASE</p>
    <p>VFS Syscalls</p>
    <p>Hardware</p>
    <p>Namespace Mgmt.</p>
    <p>Storage Mgmt.</p>
    <p>Solid State Drive</p>
    <p>File System (Namespace Mgmt.</p>
    <p>+ Storage Mgmt.)</p>
    <p>Flash Translation Layer (FTL)</p>
    <p>Application</p>
    <p>Hardware</p>
    <p>VFS Syscalls</p>
    <p>File System</p>
    <p>READ, WRITE</p>
  </div>
  <div class="page">
    <p>OFTL Data Layout</p>
    <p>Block Info Segment</p>
    <p>Block Info Segment</p>
    <p>Block Info Segment</p>
    <p>Object Index</p>
    <p>Object Metadata</p>
    <p>Pages</p>
    <p>Block Info Meta</p>
    <p>Object Metadata File Metadata</p>
    <p>Layout</p>
    <p>Object Metadata File Metadata</p>
    <p>Layout</p>
    <p>MAGIC NUMBER</p>
    <p>ADDR_BLK_INFO</p>
    <p>ADDR_ATIME_LOGS</p>
    <p>ADDR_OBJ_INDEX</p>
    <p>Root Page</p>
    <p>Object Data Pages</p>
    <p>ADDR_UW_META</p>
    <p>Diff-Layout</p>
    <p>Diff-Data</p>
    <p>Diff-Layout</p>
    <p>Diff-Data</p>
    <p>Lazy Indexing Compacted Update Coarse-grained Block State Maintenance</p>
  </div>
  <div class="page">
    <p>T1. Lazy Indexing  Index Metadata</p>
    <p>The metadata that stores the pointers (the physical addresses of other pages).</p>
    <p>Object Index -&gt; Object Metadata Page -&gt; Object Data Page  Type-specific backpointers</p>
    <p>PAGE DATA</p>
    <p>Page Metadata</p>
    <p>(OOB)</p>
    <p>TYPE BACK-POINTER</p>
    <p>(oid, offset, len) ECC...Tid TcntVer</p>
  </div>
  <div class="page">
    <p>Updating Window</p>
    <p>Updating Window &amp; Checkpointing Updating Window</p>
  </div>
  <div class="page">
    <p>Transactional write</p>
    <p>&lt;tid, tcnt&gt;</p>
    <p>Count the total number of the pages with the same tid, and compare with the stored tcnt</p>
    <p>PAGE DATA Page Metadata</p>
    <p>(OOB)</p>
    <p>TYPE BACK-POINTER</p>
    <p>(oid, offset, len) ECC...Tid TcntVer</p>
  </div>
  <div class="page">
    <p>T2. Coarse-grained Block State Maintenance</p>
    <p>Free space in flash block units</p>
    <p>Page states can be identified using the block state</p>
    <p>Pages in FREE blocks are all free</p>
    <p>Pages in USED blocks are all used</p>
    <p>Pages in UPDATING blocks need to be further identified</p>
    <p>Relaxed Metadata Persistence</p>
    <p>UPDATING</p>
    <p>FREE USED</p>
    <p>Up da</p>
    <p>tin g</p>
    <p>W in</p>
    <p>do w</p>
    <p>Ex te</p>
    <p>nd in</p>
    <p>g (A</p>
    <p>llo ca</p>
    <p>tio n)</p>
    <p>Updating W indow</p>
    <p>Extending (Eviction)</p>
    <p>Erase</p>
  </div>
  <div class="page">
    <p>T3. Compacted Update</p>
    <p>Compact multiple partial page updates into one flash page</p>
    <p>Co-locate the diff-page with the metadata page</p>
    <p>Diff-Data (0) Diff-Data (1)</p>
    <p>Diff-Data (2) Diff-Data (2)</p>
    <p>Diff-Data (3)</p>
    <p>Diff-Extent (3712, 384, 0)</p>
    <p>Diff-Extent (4096, 768, 384)</p>
    <p>Diff-Extent (8192, 896, 1152)</p>
    <p>Diff-Extent (16384, 196, 2048)</p>
    <p>o_off len addr</p>
    <p>Diff-Page</p>
    <p>Diff-Layout</p>
  </div>
  <div class="page">
    <p>An Example in OFSS</p>
    <p>Echo title &gt; foo.txt</p>
    <p>Echo texttexttext(4KB) &gt;&gt; foo.txt</p>
    <p>Updating Window</p>
    <p>[Inode], [diff-data: title] OMP, &lt;oid2, 0, 0&gt;, ver1,</p>
    <p>Tx1, 0, [ECC]</p>
    <p>[dirent: foo.txt] ODP, &lt;oid1, 0, 4096&gt;,</p>
    <p>ver2, Tx1, 2, [ECC]</p>
    <p>[data: title texttexttext] ODP, &lt;oid2, 0, 4096&gt;,</p>
    <p>ver3, Tx2, 0, [ECC]</p>
    <p>[Inode], [diff-data: xttext] OMP, &lt;oid2, 0, 0&gt;, ver4,</p>
    <p>Tx2, 2, [ECC]</p>
  </div>
  <div class="page">
    <p>Comparison of Ext3 and OFSS</p>
    <p>Journals =&gt; Transactional Metadata in Page Metadata</p>
    <p>Inode =&gt; Reverse Index in Page Metadata</p>
    <p>Block/Inode Bitmap =&gt; Free Space Mgmt. in Flash Block Units</p>
    <p>Page Un-aligned Update =&gt; Compaction and Co-location</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background and Motivation</p>
    <p>Object-based Flash Translation Layer</p>
    <p>System Co-design with Flash Memory</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Evaluation Method</p>
    <p>Evaluation Metric</p>
    <p>write amplification = flash_writes / app_writes</p>
    <p>System Evaluation Framework</p>
    <p>OFSS</p>
    <p>File system</p>
    <p>Object File</p>
    <p>System</p>
    <p>OFTL</p>
    <p>File System</p>
    <p>PFTL</p>
    <p>Block Trace</p>
    <p>Utility</p>
    <p>RWC Trace RWC Trace</p>
    <p>Block Trace</p>
    <p>Flash R/W/E Flash R/W/E</p>
  </div>
  <div class="page">
    <p>Overall Comparison (1)</p>
    <p>Write Amplification:</p>
    <p>OFSS = 15.1% * ext3 = 52.6% * ext2 = 10.6% * btrfs</p>
  </div>
  <div class="page">
    <p>Overall Comparison (2)</p>
    <p>Write Amplification:</p>
    <p>OFSS = 36.0% * ext3 = 80.2% * ext2 = 51.0% * btrfs</p>
  </div>
  <div class="page">
    <p>Metadata Amplification iPhoto iPages LASR1 LASR2 LASR3 TPCC</p>
    <p>Ext3 2.57 8.59 17.91 11.84 51.04 3.73</p>
    <p>Ext2 1.06 2.68 2.00 0.91 4.11 1.04</p>
    <p>OFSS 0.05 0.30 1.13 0.45 1.05 0.03</p>
    <p>In OFSS, meta ampl. is dramatically reduced</p>
    <p>Ext3:</p>
    <p>Journaling Ext2: Bitmap</p>
    <p>and Inode Table</p>
    <p>Refer to the paper for more details of the async mode</p>
  </div>
  <div class="page">
    <p>Flash Page Size Impact</p>
    <p>Write amplification gets worse and worse as the flash page size increases</p>
    <p>The sync mode is much more worse than the async Refer to the paper for more details of the async mode</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Background and Motivation</p>
    <p>Object-based Flash Translation Layer</p>
    <p>System Co-design with Flash Memory</p>
    <p>Evaluation</p>
    <p>Conclusion</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>Metadata in file systems are frequently written back for consistency and durability, amplifying the writes to the flash memory</p>
    <p>Flash memory offers opportunities for endurance-aware file system mechanisms  Journaling: transactional write</p>
    <p>Metadata Synchronization: lazy indexing, coarsegrained block state maintenance</p>
    <p>Page-aligned Update: compacted update</p>
  </div>
  <div class="page">
    <p>Thanks!</p>
    <p>Questions?</p>
    <p>Youyou Lu, Jiwu Shu, Weimin Zheng (luyy09@mails.tsinghua.edu.cn)</p>
    <p>http://storage.cs.tsinghua.edu.cn/~lu</p>
  </div>
  <div class="page">
    <p>Backup  ext3 layout</p>
    <p>Super Block</p>
    <p>Group Desp.</p>
    <p>Inode Bitmap</p>
    <p>Block Bitmap</p>
    <p>Inode Table</p>
    <p>Data Blocks</p>
    <p>Block Group Block Group Block Group</p>
  </div>
  <div class="page">
    <p>Backup  Metadata Amplification (async)</p>
  </div>
  <div class="page">
    <p>Backup  Impact of Flash Page Size (async)</p>
  </div>
  <div class="page">
    <p>Backup  Overhead of Window Extending</p>
  </div>
</Presentation>
