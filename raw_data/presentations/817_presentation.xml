<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Software Techniques for Avoiding</p>
    <p>Hardware Virtualization Exits</p>
    <p>Ole Agesen Jim Mattson Radu Rugina Jeffrey Sheldon</p>
    <p>VMware</p>
  </div>
  <div class="page">
    <p>Server Virtualization</p>
    <p>Source: IDC Worldwide Virtualization Tracker</p>
    <p>% virtualized workloads world wide</p>
  </div>
  <div class="page">
    <p>x86 Virtualization</p>
    <p>Guest</p>
    <p>VMM</p>
    <p>Virtual Machine Monitor (VMM) abstracts physical</p>
    <p>hardware</p>
    <p>Two approaches:  Binary Translation (BT)</p>
    <p>Hardware-Assisted (HV) (Intel VT-x and AMD-V)</p>
    <p>Hardware</p>
    <p>Guest</p>
    <p>VMM</p>
  </div>
  <div class="page">
    <p>Guest execution using</p>
    <p>Hardware Virtualization (HV)</p>
    <p>Virtual Machine Monitor (VMM)</p>
    <p>exit resume</p>
    <p>Hardware-Assisted x86 Virtualization</p>
  </div>
  <div class="page">
    <p>Virtualization Exits Are Expensive</p>
    <p>Microarchitecture</p>
    <p>Launch Date</p>
    <p>Hardware</p>
    <p>Exit + Resume</p>
    <p>(cycles)</p>
    <p>Prescott 2005 3963</p>
    <p>Merom 2006 1579</p>
    <p>Penryn 2008 1266</p>
    <p>Nehalem 2009 1009</p>
    <p>Westmere 2010 761</p>
    <p>Sandy Bridge 2011 784</p>
  </div>
  <div class="page">
    <p>Guest execution using</p>
    <p>Hardware Virtualization (HV)</p>
    <p>Virtual Machine Monitor (VMM)</p>
    <p>This Talk: Cluster HV Exits</p>
  </div>
  <div class="page">
    <p>Guest execution using</p>
    <p>Hardware Virtualization (HV)</p>
    <p>Virtual Machine Monitor (VMM)</p>
    <p>This Talk: Cluster HV Exits</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Exit Pairs</p>
    <p>Exit Clusters</p>
    <p>Nested Virtual Machines</p>
    <p>Results</p>
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Exit Pairs</p>
    <p>32-bit Guest OS using Physical Address Extension (PAE)</p>
    <p>Shadow paging</p>
    <p>Page table entry updates use two 32-bit writes</p>
    <p>Each write causes an exit</p>
    <p>...</p>
    <p>...</p>
    <p>mov 4(%ecx), %esi</p>
    <p>mov (%ecx), %ebx</p>
    <p>Guest</p>
  </div>
  <div class="page">
    <p>Exit Pairs</p>
    <p>mov 4(%ecx), %esi</p>
    <p>mov (%ecx), %ebx</p>
    <p>...</p>
    <p>...</p>
    <p>VMM updates shadow</p>
    <p>page table entries</p>
    <p>Guest VMM</p>
  </div>
  <div class="page">
    <p>Exit Pairs</p>
    <p>mov 4(%ecx), %esi</p>
    <p>mov (%ecx), %ebx</p>
    <p>...</p>
    <p>...</p>
    <p>Upon exit: - VMM inspects next instruction</p>
    <p>- Detects access to adjacent byte</p>
    <p>- Executes both instructions</p>
    <p>Guest VMM</p>
  </div>
  <div class="page">
    <p>Exit Pairs</p>
    <p>mov 4(%ecx), %esi</p>
    <p>mov (%ecx), %ebx</p>
    <p>...</p>
    <p>...</p>
    <p>Guest VMM</p>
    <p>Upon exit: - VMM inspects next instruction</p>
    <p>- Detects access to adjacent byte</p>
    <p>- Executes both instructions</p>
    <p>- Optimizes execution</p>
  </div>
  <div class="page">
    <p>Exit Clusters</p>
    <p>Upon exit:  Scan a few (up to 16) instructions downstream</p>
    <p>Identify exiting instructions</p>
    <p>Form a cluster of instructions, executed all at once</p>
    <p>Challenges:  Cluster formation</p>
    <p>Efficient execution</p>
  </div>
  <div class="page">
    <p>Cluster Formation</p>
    <p>in %al, %dx</p>
    <p>Guest VMM</p>
    <p>HV exit occurs</p>
  </div>
  <div class="page">
    <p>Cluster Formation</p>
    <p>in %al, %dx</p>
    <p>Guest</p>
    <p>out 0x80, %al</p>
    <p>mov %al, %cl</p>
    <p>mov %dl, 0xc0</p>
    <p>out %al, %dx</p>
    <p>out 0x80, %al</p>
    <p>VMM</p>
    <p>xchg %ah, %al</p>
    <p>xor %cl, %cl</p>
    <p>HV exit occurs</p>
    <p>Decode instructions</p>
  </div>
  <div class="page">
    <p>Cluster Formation</p>
    <p>in %al, %dx</p>
    <p>Guest VMM</p>
    <p>xchg %ah, %al</p>
    <p>xor %cl, %cl</p>
    <p>HV exit occurs</p>
    <p>Decode instructions</p>
    <p>Identify exiting instructions out 0x80, %al</p>
    <p>mov %al, %cl</p>
    <p>mov %dl, 0xc0</p>
    <p>out %al, %dx</p>
    <p>out 0x80, %al</p>
  </div>
  <div class="page">
    <p>Cluster Formation</p>
    <p>in %al, %dx</p>
    <p>Guest</p>
    <p>out 0x80, %al</p>
    <p>mov %al, %cl</p>
    <p>mov %dl, 0xc0</p>
    <p>out %al, %dx</p>
    <p>out 0x80, %al</p>
    <p>VMM</p>
    <p>HV exit occurs</p>
    <p>Decode instructions</p>
    <p>Identify exiting instructions</p>
    <p>Form cluster</p>
  </div>
  <div class="page">
    <p>Cluster Formation</p>
    <p>in %al, %dx</p>
    <p>Guest</p>
    <p>out 0x80, %al</p>
    <p>mov %al, %cl</p>
    <p>mov %dl, 0xc0</p>
    <p>out %al, %dx</p>
    <p>out 0x80, %al</p>
    <p>VMM</p>
    <p>HV exit occurs</p>
    <p>Decode instructions</p>
    <p>Identify exiting instructions</p>
    <p>Form cluster gap fillers</p>
  </div>
  <div class="page">
    <p>Cluster Formation</p>
    <p>in %al, %dx</p>
    <p>Guest</p>
    <p>out 0x80, %al</p>
    <p>mov %al, %cl</p>
    <p>mov %dl, 0xc0</p>
    <p>out %al, %dx</p>
    <p>out 0x80, %al</p>
    <p>VMM</p>
    <p>HV exit occurs</p>
    <p>Decode instructions</p>
    <p>Identify exiting instructions</p>
    <p>Form cluster</p>
    <p>Execute and resume HV</p>
  </div>
  <div class="page">
    <p>Efficient Exit Handling</p>
    <p>Cluster translation:  Generate a translation for the cluster</p>
    <p>Insert it in a Translation Cache (TC)</p>
    <p>Specialize translations (e.g., on addressing mode)</p>
    <p>Translation reuse:  Compile once</p>
    <p>Reuse for all subsequent exits</p>
  </div>
  <div class="page">
    <p>Cluster Translation</p>
    <p>in %al, %dx</p>
    <p>Guest</p>
    <p>out 0x80, %al</p>
    <p>mov %al, %cl</p>
    <p>mov %dl, 0xc0</p>
    <p>out %al, %dx</p>
    <p>out 0x80, %al</p>
    <p>Coherency</p>
    <p>Checks</p>
    <p>Code</p>
    <p>Translation</p>
  </div>
  <div class="page">
    <p>Dynamic Cluster Formation</p>
    <p>out %al, %dx</p>
    <p>Guest</p>
    <p>mov %cx, -0x12(%bp)</p>
    <p>sub %si, %cx</p>
    <p>mov %dl, 0x3c5</p>
    <p>mov %al, 0x1</p>
    <p>out %al, %dx</p>
    <p>shr %bl</p>
    <p>sbb %ah, %ah</p>
    <p>shl %al</p>
    <p>mov es:(%di), %ah</p>
  </div>
  <div class="page">
    <p>out %al, %dx</p>
    <p>mov %cx, -0x12(%bp)</p>
    <p>sub %si, %cx</p>
    <p>mov %dl, 0x3c5</p>
    <p>mov %al, 0x1</p>
    <p>out %al, %dx</p>
    <p>shr %bl</p>
    <p>sbb %ah, %ah</p>
    <p>shl %al</p>
    <p>mov es:(%di), %ah</p>
    <p>Do memory accesses</p>
    <p>cause exits?</p>
    <p>Dynamic Cluster Formation</p>
    <p>Guest</p>
  </div>
  <div class="page">
    <p>out %al, %dx</p>
    <p>mov %cx, -0x12(%bp)</p>
    <p>sub %si, %cx</p>
    <p>mov %dl, 0x3c5</p>
    <p>mov %al, 0x1</p>
    <p>out %al, %dx</p>
    <p>shr %bl</p>
    <p>sbb %ah, %ah</p>
    <p>shl %al</p>
    <p>mov es:(%di), %ah</p>
    <p>Do memory accesses</p>
    <p>cause exits?</p>
    <p>Sometimes.</p>
    <p>Dynamic Cluster Formation</p>
    <p>Guest</p>
  </div>
  <div class="page">
    <p>Instruction Classification</p>
    <p>Strongly exiting:  Always cause exits</p>
    <p>Examples: in, out, cpuid</p>
    <p>Weakly exiting :  Dynamic exiting behavior</p>
    <p>Example: memory accesses</p>
    <p>Runtime VMM support for detecting such cases</p>
  </div>
  <div class="page">
    <p>out %al, %dx</p>
    <p>sub %si, %cx</p>
    <p>mov %dl, 0x3c5</p>
    <p>mov %al, 0x1</p>
    <p>out %al, %dx</p>
    <p>shr %bl</p>
    <p>sbb %ah, %ah</p>
    <p>shl %al</p>
    <p>mov es:(%di), %ah</p>
    <p>Translation postponed</p>
    <p>Count exits</p>
    <p>Translate on 3rd exit</p>
    <p>Dynamic Cluster Formation</p>
    <p>Guest</p>
  </div>
  <div class="page">
    <p>out %al, %dx</p>
    <p>sub %si, %cx</p>
    <p>mov %dl, 0x3c5</p>
    <p>mov %al, 0x1</p>
    <p>out %al, %dx</p>
    <p>shr %bl</p>
    <p>sbb %ah, %ah</p>
    <p>shl %al</p>
    <p>mov es:(%di), %ah</p>
    <p>Translation postponed</p>
    <p>Count exits</p>
    <p>Translate on 3rd exit</p>
    <p>Dynamic Cluster Formation</p>
    <p>Guest</p>
  </div>
  <div class="page">
    <p>Cluster With Complex Control-Flow</p>
  </div>
  <div class="page">
    <p>Nested Virtual Machines</p>
  </div>
  <div class="page">
    <p>Nested VMs</p>
    <p>Inner</p>
    <p>Guest</p>
    <p>Inner VMM</p>
    <p>Outer VMM</p>
    <p>Outer Guest  Run hypervisor as a guest [Ben-Yehuda et al., OSDI10]</p>
    <p>Simulate large-scale virtualized environments</p>
    <p>with fewer hosts</p>
    <p>Training, testing, debugging</p>
    <p>Windows XP mode in Win 7</p>
  </div>
  <div class="page">
    <p>HV for Nested VMs</p>
    <p>Inner</p>
    <p>Guest</p>
    <p>Inner VMM</p>
    <p>Outer VMM</p>
    <p>Outer Guest  Outer VMM transitions  Handled in hardware</p>
    <p>Inner VMM transitions  Virtual hardware exits are</p>
    <p>emulated in software</p>
  </div>
  <div class="page">
    <p>HV for Nested VMs</p>
    <p>Inner</p>
    <p>Guest</p>
    <p>Inner VMM</p>
    <p>Outer VMM</p>
    <p>Outer Guest  Outer VMM transitions  Handled in hardware</p>
    <p>Inner VMM transitions  Virtual hardware exits are</p>
    <p>emulated in software</p>
    <p>Virtual software exit path has lots of exiting instructions (e.g., vmread, vmwrite)</p>
  </div>
  <div class="page">
    <p>HV for Nested VMs</p>
    <p>Inner</p>
    <p>Guest</p>
    <p>Inner VMM</p>
    <p>Outer VMM</p>
    <p>Outer Guest  Outer VMM transitions  Handled in hardware</p>
    <p>Inner VMM transitions  Virtual hardware exits are</p>
    <p>emulated in software</p>
    <p>Virtual software exit path has lots of exiting instructions (e.g., vmread, vmwrite)</p>
    <p>10x slowdown!</p>
  </div>
  <div class="page">
    <p>Exit Avoidance</p>
    <p>Cluster inner exits  Big impact due to high cost of</p>
    <p>inner exits</p>
    <p>Cluster outer exits:  Big impact due to the high</p>
    <p>frequency of outer exits</p>
    <p>Opportunity: cluster-friendly VMM instruction scheduling</p>
    <p>Inner</p>
    <p>Guest</p>
    <p>Inner VMM</p>
    <p>Outer VMM</p>
    <p>Outer Guest</p>
  </div>
  <div class="page">
    <p>Experimental Results</p>
  </div>
  <div class="page">
    <p>Implementation</p>
    <p>Fully implemented in VMware products  Workstation, Fusion, ESX</p>
    <p>Evolved over many years from exit pairs to complex clusters</p>
    <p>Validated by use in the field</p>
  </div>
  <div class="page">
    <p>Non-Nested VMs</p>
    <p>PassMark (2D graphics benchmark)  Clustering improves score by 50% - 80%</p>
    <p>VMmark (virtualization benchmark)  Consistent exit rate reduction</p>
    <p>No measurable runtime improvement</p>
    <p>Netperf against a VM with virtual e1000 NIC  24% reduction of exits per packet roundtrip</p>
  </div>
  <div class="page">
    <p>Nested VM Speedup</p>
    <p>Kernel-compile workload in the inner VM</p>
  </div>
  <div class="page">
    <p>Future Directions</p>
    <p>Support more complex clusters  Non-contiguous clusters</p>
    <p>Exits in the middle of loops</p>
    <p>Optimize memory accesses in clusters  Cache and reuse work for accesses on the same page</p>
    <p>Applications to virtualized low-latency workloads</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>HV exits are expensive, can sap performance</p>
    <p>Software exit clustering complements hardware optimizations for HV exits</p>
    <p>Clustering is key to enabling reasonable performance for nested VMs</p>
  </div>
</Presentation>
