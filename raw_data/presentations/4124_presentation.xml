<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Vacuums in the Cloud Analyzing Security in a Hardened IoT Ecosystem</p>
    <p>Pinky and the Brain Edition</p>
    <p>Jiska Classen, Johannes Eger, and Matthias Hollick Secure Mobile Networking Lab - SEEMOO</p>
    <p>Technische Universitt Darmstadt, Germany</p>
    <p>Fabian Ullrich IT Security Analyst @ ERNW GmbH Heidelberg, Germany</p>
  </div>
  <div class="page">
    <p>A vacuum cleaning robot is in your house, has access to your Wi-Fi and knows many of your personal habits.</p>
    <p>Who of you owns a vacuum cleaning robot?  (Own as it's YOUR robot, neither your neighbor's nor someone's on the Internet!)</p>
    <p>Motivation</p>
  </div>
  <div class="page">
    <p>A vacuum cleaning robot is in your house, has access to your Wi-Fi and knows many of your personal habits.</p>
    <p>Who of you owns a vacuum cleaning robot?  Neato is one of the top vacuum cleaning robot models in the US.  In Germany, Vorwerk has been selling vacuum cleaners forever (founded 1883).</p>
    <p>Their top model, a robot, is a rebranded Neato.  Vorwerk won the test comparisons in Germany with their VR300/VR200.</p>
    <p>Motivation</p>
  </div>
  <div class="page">
    <p>Robots were harmed during our experiments! (Sorry for that)  No customer data was leaked.  Neato was informed and fixed all issues in time.</p>
    <p>Responsible Disclosure</p>
  </div>
  <div class="page">
    <p>Infrastructure &amp; Security Features</p>
    <p>UI &amp; USB console</p>
  </div>
  <div class="page">
    <p>Infrastructure &amp; Security Features</p>
    <p>UI &amp; USB console</p>
    <p>Manual robot commands</p>
  </div>
  <div class="page">
    <p>Infrastructure &amp; Security Features</p>
    <p>Beehive</p>
    <p>UI &amp; USB console</p>
    <p>Manual robot commands</p>
    <p>Setup only</p>
    <p>Account information</p>
  </div>
  <div class="page">
    <p>Infrastructure &amp; Security Features</p>
    <p>Nucleo</p>
    <p>Beehive</p>
    <p>UI &amp; USB console</p>
    <p>Manual robot commands</p>
    <p>Setup only</p>
    <p>??</p>
    <p>Robo t com</p>
    <p>mand s / st</p>
    <p>atus</p>
    <p>Account information</p>
    <p>Robot comm</p>
    <p>ands, statu</p>
    <p>s resp onses</p>
  </div>
  <div class="page">
    <p>Infrastructure &amp; Security Features</p>
    <p>Nucleo</p>
    <p>Beehive  HTTPS  RSA key (robotcloud)</p>
    <p>??</p>
    <p>HTTPS</p>
    <p>Secure boot  Encrypted logs  Signed firmware updates</p>
    <p>HT TPS</p>
    <p>RS A key</p>
    <p>(robo tclo</p>
    <p>ud)</p>
    <p>Se cret k</p>
    <p>ey (ro bot</p>
    <p>user)</p>
    <p>HT TPS</p>
    <p>Se cret k</p>
    <p>ey (ro bot</p>
    <p>user)</p>
    <p>Secret key (robotuser)</p>
  </div>
  <div class="page">
    <p>With all these security features, what could possibly go wrong?</p>
    <p>Contributions</p>
  </div>
  <div class="page">
    <p>With all these security features, what could possibly go wrong?</p>
    <p>We bypass secure boot on a vacuum cleaning robot to extract its memory.</p>
    <p>Our key findings are  key findings!</p>
    <p>We also gained unauthenticated RCE on robots over the cloud.</p>
    <p>Contributions</p>
  </div>
  <div class="page">
    <p>Custom AM335x chip (guessed by size factor).  QNX 6.5 image from Foundry27 is bootable but crashes.</p>
    <p>Get QNX SDP, modify image, skip hardware initialization, reboot Neato system into custom image for cold boot attack, print all RAM to the serial port.</p>
    <p>Secure Boot Bypass</p>
    <p>Jiska found this, got assigned CVE-2018-20785, fixed in Neato BotVac Connected D7 4.4.0-72 in December 2018 and for Vorwerk somewhen after January 2019.</p>
  </div>
  <div class="page">
    <p>Secret Key  Generated when associating a robot with a user account.  Known by: robot, app and cloud components.  Individual key for each robot/user account relation!</p>
    <p>Used for authenticating commands to robot.</p>
    <p>Keys and their Purpose (1)</p>
    <p>https://developers.neatorobotics.com/</p>
  </div>
  <div class="page">
    <p>Secret Key  Generated when associating a robot with a user account.  Known by: robot, app and cloud components.  Individual key for each robot/user account relation!</p>
    <p>Used for authenticating commands to robot.</p>
    <p>Keys and their Purpose (1)</p>
    <p>Header = Authorization: NEATOAPP [signature]</p>
    <p>https://developers.neatorobotics.com/</p>
  </div>
  <div class="page">
    <p>RSA Key  Robots have to initially send the secret key</p>
    <p>Has to be authenticated.  Secret key not that secret</p>
    <p>Several third parties know it.  Cannot be used to authenticate the robot in the cloud.</p>
    <p>RSA Key used to authenticate robot to cloud.</p>
    <p>Keys and their Purpose (2)</p>
  </div>
  <div class="page">
    <p>RSA Key  Robots have to initially send the secret key</p>
    <p>Has to be authenticated.  Secret key not that secret</p>
    <p>Several third parties know it.  Cannot be used to authenticate the robot in the cloud.</p>
    <p>RSA Key used to authenticate robot to cloud.</p>
    <p>Keys and their Purpose (2)</p>
    <p>Header = Authorization: NEATOBOT [serial]:[signature]</p>
  </div>
  <div class="page">
    <p>Secret Key Entropy Reduction</p>
    <p>Fabian found and analyzed this beautiful piece of code! Got assigned CVE-2018-19441.</p>
  </div>
  <div class="page">
    <p>Secret Key Entropy Reduction</p>
    <p>Fabian found and analyzed this beautiful piece of code! Got assigned CVE-2018-19441.</p>
  </div>
  <div class="page">
    <p>Entropy relies on time of robot linkage.  One year = 25 bit  One hour = 12 bit</p>
    <p>There are multiple offline attack scenarios.</p>
    <p>Secret Key Entropy Reduction</p>
    <p>Fabian found and analyzed this beautiful piece of code! Got assigned CVE-2018-19441.</p>
  </div>
  <div class="page">
    <p>Encrypted RSA keys in /var/keys.  vendorPrivateKeyProduction sounds promising!  Lets do some string de-obfuscation!</p>
    <p>RSA Keys for Robot Authenticity (1)</p>
  </div>
  <div class="page">
    <p>Encrypted RSA keys in /var/keys.  vendorPrivateKeyProduction sounds promising!  Lets do some string de-obfuscation!</p>
    <p>RSA Keys for Robot Authenticity (1)</p>
    <p>RSA key is the same for all robots.</p>
  </div>
  <div class="page">
    <p>Encrypted RSA keys in /var/keys.  vendorPrivateKeyProduction sounds promising!  Lets do some string de-obfuscation!</p>
    <p>RSA Keys for Robot Authenticity (1)</p>
    <p>RSA key is the same for all robots.</p>
  </div>
  <div class="page">
    <p>We are able to impersonate arbitrary robots.  Allows for multiple other attacks.  For example: Leak victims smartphone IP</p>
    <p>RSA Keys for Robot Authenticity (2)</p>
    <p>Nucleo</p>
    <p>Ro bo</p>
    <p>t l oc</p>
    <p>at io n?</p>
  </div>
  <div class="page">
    <p>We are able to impersonate arbitrary robots.  Allows for multiple other attacks.  For example: Leak victims smartphone IP</p>
    <p>RSA Keys for Robot Authenticity (2)</p>
    <p>Nucleo</p>
    <p>Does no longer get requests</p>
    <p>Ro bo</p>
    <p>t l oc</p>
    <p>at io n?</p>
    <p>Robot location?</p>
  </div>
  <div class="page">
    <p>We are able to impersonate arbitrary robots.  Allows for multiple other attacks.  For example: Leak victims smartphone IP</p>
    <p>RSA Keys for Robot Authenticity (2)</p>
    <p>Nucleo</p>
    <p>Does no longer get requests</p>
    <p>Ro bo</p>
    <p>t l oc</p>
    <p>at io n?</p>
    <p>Robot location?</p>
    <p>Robot location is 1.3.3.7:42</p>
  </div>
  <div class="page">
    <p>We are able to impersonate arbitrary robots.  Allows for multiple other attacks.  For example: Leak victims smartphone IP.</p>
    <p>RSA Keys for Robot Authenticity (2)</p>
    <p>Nucleo</p>
    <p>Does no longer get requests</p>
    <p>Ro bo</p>
    <p>t l oc</p>
    <p>at io n?</p>
    <p>Robot location?</p>
    <p>Robot location is 1.3.3.7:42</p>
  </div>
  <div class="page">
    <p>We are able to impersonate arbitrary robots.  Allows for multiple other attacks.  For example: Leak victims smartphone IP</p>
    <p>RSA Keys for Robot Authenticity (2)</p>
    <p>Nucleo</p>
    <p>Does no longer get requests</p>
    <p>Manual drive 1.3.3.7:42 R</p>
    <p>ob ot</p>
    <p>lo ca</p>
    <p>tio n?</p>
    <p>Robot location?</p>
    <p>Robot location is 1.3.3.7:42</p>
  </div>
  <div class="page">
    <p>Log and Coredump Encryption Key</p>
    <p>local_10 = fopen(acStack120,&quot;rb&quot;); if (local_10 != (FILE *)0x0) { sVar2 = fread(local_c,local_11c,1,local_10); if (sVar2 != 0xffffffff) { fclose(local_10); rc4_ksa(&quot;*^JEd4W!I&quot;,9,0);</p>
    <p>Decrypts coredumps copied to USB</p>
    <p>Binary /bin/rc4_crypt is called without arguments and contains a hardcoded key.  Coredumps contain the complete binary that crashed (/bin/robot, /bin/astro, )</p>
    <p>...get binaries from robots without secure boot bypass!  Yes, even /bin/robot can crash!</p>
    <p>got a /bin/robot coredump from a non-connected Neato Botvac 85 (SW 1.2.1)</p>
    <p>Jiska found this and got assigned CVE-2018-17177.</p>
  </div>
  <div class="page">
    <p>Buffer overflow in Nucleo cloud connection daemon.</p>
    <p>Unauthenticated RCE</p>
    <p>Fabian found the crash and performed analysis, Jiska decrypted the coredump, Johannes did further analysis and implemented a PoC (CVE-2018-19442).</p>
    <p>Nucleo</p>
    <p>/bin/astro /bin/robot</p>
    <p>Buffer Overflow</p>
  </div>
  <div class="page">
    <p>Buffer overflow in Nucleo cloud connection daemon.</p>
    <p>Can be triggered with requests to https://nucleo.neatocloud.com:4443/ vendors/neato/robots/[robot_serial]/ messages.</p>
    <p>The overflow is within parsing the authentication header, which means that we found an unauthenticated RCE!</p>
    <p>All services run as root.</p>
    <p>Fix: Authentication headers are validated on Nucleo.</p>
    <p>Unauthenticated RCE</p>
    <p>Nucleo</p>
    <p>/bin/astro /bin/robot</p>
    <p>Buffer Overflow</p>
    <p>Fabian found the crash and performed analysis, Jiska decrypted the coredump, Johannes did further analysis and implemented a PoC (CVE-2018-19442).</p>
  </div>
  <div class="page">
    <p>IoT product at home? Keep it offline!</p>
    <p>As a customer:  Update your robot.  Hide your robots serial number!</p>
    <p>Security Implications (1)</p>
  </div>
  <div class="page">
    <p>Connected ecosystem developers:  Using RSA, RNG, hashing, secure boot, encrypted logs, signed firmware updates</p>
    <p>sounds good...  Review cryptographic key components and root of trust assumptions.  Dissecting one of your products should not compromise security of the other</p>
    <p>products, i.e., similar keys.  Test your security relevant code in practice</p>
    <p>to uncover issues like the static secret key random functioncheck entropy before hashing.</p>
    <p>Security Implications (2)</p>
  </div>
  <div class="page">
    <p>Lessons learned during responsible disclosure:  Scientifically proven secure methods are insecure if applied wrong.  Normal developers are not aware of ASLR, DEP, , they just write code.  Lack of easy to understand guides of how to build connected infrastructures.</p>
    <p>Too many guides?  No reasoning why certain measures are needed in an infrastructure.</p>
    <p>Penetration testing often does not cover specific implementation details.  Web API only tests...</p>
    <p>Security Implications (3)</p>
  </div>
  <div class="page">
    <p>Q&amp;A</p>
  </div>
</Presentation>
