<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Bankrupt Covert Channel: Turning Network Predictability into Vulnerability</p>
    <p>Dmitrii Ustiugov, Plamen Petrov, Siavash Katebzadeh, Boris Grot University of Edinburgh</p>
    <p>This work is supported by ARM Center of Excellence at University of Edinburgh</p>
  </div>
  <div class="page">
    <p>Data Breaches Never Been More Relevant</p>
  </div>
  <div class="page">
    <p>Containing Data Breaches in Public Cloud Data breaches happen</p>
    <p>Spyware, side channels,</p>
    <p>Cloud vendors strive to contain stolen info</p>
    <p>Firewalls, authentication,</p>
    <p>Spy with secret</p>
    <p>ReceiverHow to extract secret?</p>
    <p>Secure cloud environment Outside world</p>
  </div>
  <div class="page">
    <p>Containing Data Breaches in Public Cloud Data breaches happen</p>
    <p>Spyware, side channels,</p>
    <p>Cloud vendors strive to contain stolen info</p>
    <p>Firewalls, authentication,</p>
    <p>Spy with secret</p>
    <p>Receiver</p>
    <p>Process and virtual machine isolation  Physical server isolation  Virtual network isolation</p>
    <p>How to extract secret?</p>
    <p>Image by Lynn Willis, source</p>
    <p>Isolation layers</p>
    <p>Secure cloud environment Outside world</p>
  </div>
  <div class="page">
    <p>Containing Data Breaches in Public Cloud Data breaches happen</p>
    <p>Spyware, side channels,</p>
    <p>Cloud vendors strive to contain stolen info</p>
    <p>Firewalls, authentication,</p>
    <p>Spy with secret</p>
    <p>Receiver</p>
    <p>VM isolation</p>
    <p>Physical server isolation</p>
    <p>Virtual network isolation</p>
    <p>Secret extraction?</p>
    <p>Are secrets safe now?</p>
  </div>
  <div class="page">
    <p>Covert Channels</p>
    <p>Definition: Communication without using legitimate data transfer mechanisms</p>
    <p>Usually via resource sharing (e.g., CPU cache)  Example: Timing channel via access latency modulation</p>
    <p>High latency for transmitting 1, low for 0</p>
    <p>Image by Rick Leche (flipped vertically), source</p>
    <p>Covert channels allow bypassing isolation layers</p>
  </div>
  <div class="page">
    <p>Network Covert Channels</p>
    <p>Allow communication across cluster/datacenter</p>
    <p>Breach many isolation layers at once</p>
    <p>Stereotypical thinking: Networks are noisy  low accuracy and low throughput channels</p>
    <p>Spy with secret Receiver</p>
    <p>VM isolation</p>
    <p>Physical server isolation</p>
    <p>Virtual network isolation</p>
    <p>Secret extraction</p>
    <p>But Are modern networks noisy?</p>
  </div>
  <div class="page">
    <p>Emerging Networks in Public Cloud Remote Direct Memory Access (RDMA)</p>
    <p>Today most cloud providers offer RDMA networks  AWS, Azure, Alibaba, Oracle,</p>
    <p>RDMA network packets bypass destination CPU</p>
    <p>Low round-trip latency: 2-4sec  High BW with commodity NICs: 100+Gb/s</p>
    <p>Nodes use one-sided reads/writes to their private data in remote nodes memory</p>
    <p>CPU</p>
    <p>NIC</p>
    <p>Node A</p>
    <p>CPU</p>
    <p>NICNode B</p>
    <p>Memory</p>
    <p>RDMA network</p>
    <p>Remote region for A Data</p>
    <p>Data</p>
    <p>One-sided RDMA read</p>
    <p>Memory</p>
  </div>
  <div class="page">
    <p>Network BW vs. Memory BW Discrepancy</p>
    <p>First glance at bandwidth in modern servers</p>
    <p>RDMA NICs offer 100-200Gb/s  Memory delivers &gt;100GB/s (=800Gb/s)</p>
    <p>Expectation: Memory BW always much larger</p>
    <p>NIC</p>
    <p>CPU</p>
    <p>NICNode B</p>
    <p>Memory</p>
    <p>Memory</p>
    <p>Network BW 100Gb/s</p>
    <p>Memory BW 100GB/s=800Gb/s</p>
    <p>CPU Node A</p>
  </div>
  <div class="page">
    <p>Network BW vs. Memory BW Discrepancy</p>
    <p>First glance at bandwidth in modern servers</p>
    <p>RDMA NICs offer 100-200Gb/s  Memory delivers &gt;100GB/s (=800Gb/s)</p>
    <p>Expectation: Memory BW always much larger</p>
    <p>Wrong!</p>
    <p>Memory has 100s of internal devices (banks)  Each bank delivers just ~10Gb/s</p>
    <p>E.g., same for both Micron DDR2, DDR4  Bank behaves as FIFO: ~50ns fixed service time</p>
    <p>CPU</p>
    <p>NIC</p>
    <p>Node A</p>
    <p>CPU</p>
    <p>NICNode B</p>
    <p>Memory</p>
    <p>Memory</p>
    <p>Network BW 100Gb/s</p>
    <p>100s of banks</p>
    <p>Memory BW 100GB/s=800Gb/s</p>
    <p>Network traffic can easily congest one memory bank</p>
  </div>
  <div class="page">
    <p>Bankrupt: RDMA Intra-Cluster Covert Channel</p>
    <p>Key features</p>
    <p>No direct communication between Sender and Receiver  Extremely stealthy!</p>
    <p>Basic idea</p>
    <p>Sender transmits the secret by modulating the latency of one memory bank on an Intermediary node</p>
    <p>Receiver probes the bank latency and decodes the message  Intermediary is unrelated innocuous node</p>
    <p>No shared memory between Sender and Receiver</p>
    <p>Sender</p>
    <p>CPU</p>
    <p>NICIntermediary</p>
    <p>Memory</p>
    <p>Bank</p>
    <p>ReceiverBursts of RDMA reads</p>
    <p>Bank delay</p>
    <p>Timeline</p>
    <p>High Low 1 0 1 0 1 0</p>
    <p>Probes (individual RDMA reads)</p>
    <p>RDMA network</p>
  </div>
  <div class="page">
    <p>Constructing Bankrupt</p>
    <p>Recall: No memory sharing!</p>
    <p>How many RDMA reads per burst?  Transmission frequency?</p>
    <p>Receiver side  Receiving (probes) frequency?</p>
    <p>Sender</p>
    <p>CPU</p>
    <p>NICIntermediary</p>
    <p>Memory</p>
    <p>Bank</p>
    <p>Receiver</p>
    <p>RDMA network</p>
    <p>Bursts of RDMA reads</p>
    <p>Probes (individual RDMA reads)</p>
    <p>Bank delay</p>
    <p>Timeline</p>
    <p>High Low 1 0 1 0 1 0</p>
  </div>
  <div class="page">
    <p>Finding Addresses in Same Bank</p>
  </div>
  <div class="page">
    <p>Virtual Memory Addressing Virtual addresses translated to physical upon access</p>
    <p>Translation at page granularity  Same mechanism for local and remote (over RDMA) accesses</p>
    <p>p p p p p p p c c c c c c</p>
    <p>? ? ? ? ? ? ? ? ? p p p p p p p c c c c c c</p>
    <p>Virtual address (VA) Cache block offset Page offset</p>
    <p>Arbitrary bits, defined by OS</p>
    <p>Physical address (PA)</p>
    <p>Translate VA-&gt;PA</p>
    <p>All bits within page are same</p>
    <p>Within a page, physical address bits same as in virtual address</p>
  </div>
  <div class="page">
    <p>Bank Location Some physical address bits, bank bits, define bank</p>
    <p>Low-order bits to maximize bank-level parallelism</p>
    <p>How to find addresses in same bank?</p>
    <p>These addresses have same bank bits</p>
    <p>? ? ? ? ? ? ? ? ? p p p pp p p c c c c c c</p>
    <p>Physical address (PA)</p>
    <p>XOR function</p>
    <p>Bank location</p>
    <p>Bank bits define bank location</p>
    <p>Need to find exact bank bits positions</p>
  </div>
  <div class="page">
    <p>Same-Bank Addresses Search: Iteration 1 Attacker (Sender and Receiver independently):</p>
    <p>set {5:0} bits to 0</p>
    <p>Network BW = number of serving banks x10Gb/s</p>
    <p>p p p p p p p 0 0 0 0 0 0</p>
    <p>Virtual address (VA) In cache block</p>
    <p>In page (e.g., 1GB)</p>
    <p>Throughput</p>
    <p>Single banks BW = ~10Gb/s (can vary slightly across vendors)</p>
    <p>Measurements</p>
  </div>
  <div class="page">
    <p>Same-Bank Addresses Search: Iteration 2 Attacker (Sender and Receiver independently)</p>
    <p>p p p p p p 0 0 0 0 0 0 0</p>
    <p>Virtual address (VA) In cache block</p>
    <p>In page (e.g., 1GB)</p>
    <p>Throughput</p>
    <p>Measurements</p>
    <p>Throughput dropped by 2x  bit 6 is bank bit</p>
    <p>Single banks BW = ~10Gb/s (can vary slightly across vendors)</p>
    <p>Bank bit!</p>
  </div>
  <div class="page">
    <p>Same-Bank Addresses Search: Iteration 3 Attacker (Sender and Receiver independently)</p>
    <p>p p p p p 0 0 0 0 0 0 0 0</p>
    <p>Virtual address (VA) In cache block</p>
    <p>In page (e.g., 1GB)</p>
    <p>Throughput</p>
    <p>Measurements</p>
    <p>Same throughput  bit 7 is NOT bank bit</p>
    <p>Single banks BW = ~10Gb/s (can vary slightly across vendors)</p>
    <p>Not a bank bit!</p>
  </div>
  <div class="page">
    <p>Same-Bank Addresses Search: Iteration 4 Attacker (Sender and Receiver independently)</p>
    <p>p p p p 0 0 0 0 0 0 0 0 0</p>
    <p>Virtual address (VA) In cache block</p>
    <p>In page (e.g., 1GB)</p>
    <p>Throughput</p>
    <p>Measurements</p>
    <p>Throughput dropped by 2x  bit 8 is bank bit</p>
    <p>Single banks BW = ~10Gb/s (can vary slightly across vendors)</p>
  </div>
  <div class="page">
    <p>Same-Bank Addresses Search: Iteration N Attacker (Sender and Receiver independently)</p>
    <p>Knowing bank bits locations, choose arbitrary addresses with</p>
    <p>bank bits equal to 0  cache block bits equal to 0</p>
    <p>p p 0 0 0 0 0 0 0 0 0 0 0</p>
    <p>Virtual address (VA) In cache block</p>
    <p>In page (e.g., 1GB)</p>
    <p>Throughput</p>
    <p>Measurements</p>
    <p>Throughput saturated  all bank bits zeroed</p>
    <p>Trivial complexity: Remote attacker finds addresses in &lt;1 second</p>
    <p>Single banks BW = ~10Gb/s (can vary slightly across vendors)</p>
  </div>
  <div class="page">
    <p>Determining Communication Parameters</p>
    <p>Sender</p>
    <p>CPU</p>
    <p>NICIntermediary</p>
    <p>Memory</p>
    <p>Bank</p>
    <p>Receiver</p>
    <p>RDMA network</p>
    <p>Bursts of RDMA reads</p>
    <p>Probes (individual RDMA reads)</p>
    <p>Bank delay</p>
    <p>Timeline</p>
    <p>High Low 1 0 1 0 1 0</p>
  </div>
  <div class="page">
    <p>Sender Side Key parameter: Senders burst size</p>
    <p>Larger bursts more pronounced  higher accuracy</p>
    <p>Especially in noisy networks  Smaller bursts drain quicker</p>
    <p>higher frequency</p>
    <p>Burst size</p>
    <p>Transmission accuracy</p>
    <p>Transmission frequency</p>
    <p>Optimization Space</p>
  </div>
  <div class="page">
    <p>Receiver Side Transmission period estimation</p>
    <p>Transmitted packets comprise fixed-size preamble and payload  Example: 32-bit preamble &amp; 200-bit payload</p>
    <p>Receiver iteratively determines the transmission period by looking for pre-agreed preamble value</p>
    <p>Key parameter: Probing frequency</p>
    <p>Several probes (measurements) per transmission period  Found little sensitivity on decoding accuracy with probing</p>
    <p>frequency &gt; 2MHz (1/0.5seconds)</p>
    <p>Timeline</p>
    <p>Probe Round-Trip Delay</p>
    <p>Measurements</p>
    <p>Transmission period</p>
  </div>
  <div class="page">
    <p>Evaluation Platforms Private Cluster (isolated and loaded network )</p>
    <p>Cluster size: 6 nodes Infiniband CPU: Xeon E5-2630v4 (Broadwell) RAM: 64GB, DDR4-2400 NIC: Mellanox CX-5, 56Gb/s</p>
    <p>Public Cloud: CloudLab Utah (80% utilized during measurements)</p>
    <p>Cluster size: 200 nodes Infiniband CPU: Xeon E5-2640v4 (Broadwell) RAM: 64GB, DDR4-2400 NIC: Mellanox CX-4, 50Gb/s</p>
  </div>
  <div class="page">
    <p>Private Cluster: Isolated Environment Burst size 32 (x 64 bytes) minimum required for reliable decoding</p>
    <p>Larger burst sizes</p>
    <p>Decrease transmission frequency  Make signal more pronounced</p>
    <p>Larger gap between high and low delay</p>
    <p>Burst size:</p>
  </div>
  <div class="page">
    <p>Private Cluster: Noisy Environment Network loading benchmark issues 40Gb/s (70% link BW) RDMA read traffic to Intermediary</p>
    <p>Signal with burst size 32 indistinguishable</p>
    <p>Signal clear with burst size of 128</p>
    <p>Burst size:</p>
    <p>Noise efficiently compensated for with larger burst size</p>
  </div>
  <div class="page">
    <p>Private Cluster: Stealthiness 1. CPU hardware counters</p>
    <p>Memory bandwidth monitoring  Bankrupt loads only one bank, &lt;1% of memory  CPU counters too coarse-grain</p>
    <p>Virtually undetectable with current HW and SW</p>
  </div>
  <div class="page">
    <p>Private Cluster vs. CloudLab: Throughput &amp; Accuracy Accuracy as % of correctly transmitted bits Throughput: True data rate without preambles and errors</p>
    <p>Similar accuracy but 20% lower throughput in CloudLab</p>
    <p>Used larger preambles to improve accuracy</p>
    <p>Optimal burst size of 32</p>
    <p>Sweet spot between transmission frequency &amp; accuracy</p>
  </div>
  <div class="page">
    <p>Takeaways Covert channels allow bypassing cloud isolation layers</p>
    <p>We introduce Bankrupt covert channel</p>
    <p>No direct communication between Sender and Receiver  Affects the timing of single memory bank on Intermediary node  Delivers 74Kb/s throughput &amp; robust in noisy public cloud network</p>
    <p>See paper for mitigation strategies and other details</p>
  </div>
  <div class="page">
    <p>Thank you!</p>
    <p>Source code available at: github.com/ease-lab/bankrupt</p>
    <p>Contact details: dmitrii.ustiugov(at)ed.ac.uk</p>
    <p>Authors thank ARM Center of Excellence at University of Edinburgh for their support</p>
  </div>
</Presentation>
