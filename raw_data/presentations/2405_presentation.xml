<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>WebProphet: Automa0ng Performance Predic0on for Web Services</p>
    <p>Zhichun Li, Ming Zhang, Zhaosheng Zhu, Yan Chen, Albert Greenberg and Yimin Wang</p>
    <p>Lab of Internet and Security Technology (LIST) Northwestern University</p>
    <p>MicrosoG Research</p>
  </div>
  <div class="page">
    <p>Web Services Are Prevalent</p>
    <p>Almost everything is related to Web  Web search  Web mail  Online shopping  Online Social network  Calendar</p>
  </div>
  <div class="page">
    <p>Amazon: 100ms extra delay  1% sale loss  Google search results: 500 ms extra delay  reduce display ads revenues by up to 20%</p>
    <p>Performance Is Important</p>
    <p>Web Service A</p>
    <p>Revenue</p>
    <p>Revenue</p>
    <p>SLOW!</p>
    <p>Web Service B</p>
  </div>
  <div class="page">
    <p>Web Services Are Complicated</p>
    <p>Example of Yahoo Maps  110 embedded objects</p>
    <p>Complex object dependencies</p>
    <p>670KB JavaScript  Hosted by mul]ple datacenters around the world</p>
  </div>
  <div class="page">
    <p>Performance Op]miza]on is Hard</p>
    <p>Page Load Time</p>
    <p>Object Dependency</p>
    <p>Client Delay Net Delay Server Delay</p>
    <p>DNS Delay Data Transfer</p>
    <p>RTT Packet loss</p>
    <p>Load time of Object i</p>
    <p>TCP 3-WAY</p>
    <p>User perceived PLT: whole page or the portion with most visual effects</p>
    <p>A large number of possible op]miza]on strategies</p>
  </div>
  <div class="page">
    <p>Limita]ons with Exis]ng Techniques</p>
    <p>A/B test (controlled experiments)  Idea: set up an experiment se`ng and try on a group of users</p>
    <p>Problems with A/B test  Hard to fully automated  Expensive to set up  Quite slow!</p>
  </div>
  <div class="page">
    <p>Limita]ons with Exis]ng Techniques</p>
    <p>Service provider based techniques (WISE SIGCOMM2008)  Problems</p>
    <p>mul]ple data sources  Object dependencies  Client side delays, e.g. JavaScript execu]on ]me</p>
    <p>Regression based techniques (LinkGradient INFOCOM2009)  Usually require the independence assump]on on delay factors of each object. Problema0c!</p>
  </div>
  <div class="page">
    <p>Our Contribu]ons</p>
    <p>A tool for automated performance predic]on</p>
    <p>Fast predic]on on the user perceived performance  Timing perturba]on based dependency discovery  Dependency driven page load simula]on</p>
    <p>Webpage Optimization Performance</p>
    <p>Gain???</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Mo]va]on &amp; Design  Dependency Extrac]on  Performance Predic]on  Implementa]on  Evalua]on  Conclusion</p>
  </div>
  <div class="page">
    <p>Why Are Dependency Discovery Difficult?</p>
    <p>Simple HTML parsing/DOM traversal is not enough  Object requests generated by JavaScript depend on the corresponding .JS files</p>
    <p>Event triggers, such as when image B trigger onload event, then image A will be load by JavaScript</p>
    <p>Extensive browser instrumenta]on is heavy weight and browser dependent</p>
  </div>
  <div class="page">
    <p>Our Approach</p>
    <p>Goal:  Lightweight black box based approach  Browser independent</p>
    <p>Timing perturba]on based technique  Inject delay  See how delay propagate.</p>
    <p>X</p>
    <p>Objects depend on X</p>
  </div>
  <div class="page">
    <p>Take Care HTML Objects</p>
    <p>Regular Objects  Regular objects have to be fully loaded before their descendants</p>
    <p>HTML Objects are special  HTML is stream objects, allowing incremental rendering</p>
    <p>X</p>
    <p>Y</p>
    <p>X Y</p>
  </div>
  <div class="page">
    <p>Measure the Offset</p>
    <p>X</p>
    <p>Y Z</p>
    <p>Offset(Z) Offset(Y)</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Mo]va]on  Design  Dependency Extrac]on  Performance Predic]on  Implementa]on  Evalua]on  Conclusion</p>
  </div>
  <div class="page">
    <p>Evaluate different new scenarios Performance Predic]on Problem</p>
    <p>BaseLine New</p>
    <p>Scenario 1</p>
    <p>New Scenario Spec 1</p>
    <p>New Scenario n</p>
    <p>New Scenario Spec n</p>
  </div>
  <div class="page">
    <p>Performance Predic]on Procedure</p>
    <p>Extract Object timing</p>
    <p>information</p>
    <p>Annotate client delay</p>
    <p>Adjust each of object according to new scenario</p>
    <p>Simulate the page load process</p>
    <p>Packet Trace</p>
    <p>Dep. Graph</p>
    <p>New Scenario</p>
    <p>Dep. Graph</p>
  </div>
  <div class="page">
    <p>Extract Timing from packet traces  Basic object ]ming info</p>
    <p>Reply transfer time Request transfer time</p>
    <p>Response time</p>
    <p>Extract Object Timing informa]on</p>
    <p>DNS</p>
    <p>TCP</p>
    <p>HTTP</p>
    <p>DNS lookup time</p>
    <p>TCP handshaking time</p>
  </div>
  <div class="page">
    <p>Annotate client delay</p>
    <p>Browser processing ]me aGer dependency solved</p>
    <p>X</p>
    <p>Client delay</p>
  </div>
  <div class="page">
    <p>Adjust Object Timing Info</p>
    <p>Consider four delay factors: client delay, server delay, RTT and DNS lookup ]me</p>
    <p>Adjust ]ming  Adjust Client delay, DNS lookup ]me, and server response ]me directly</p>
    <p>RTT: adjust RTT * number of round trips</p>
  </div>
  <div class="page">
    <p>Factors Affected Object Loading</p>
    <p>Add DNS lookup ]me based on DNS cache  Add TCP handshaking ]me for new connec]ons</p>
    <p>Add TCP wai]ng ]me when all connec]ons are not available</p>
  </div>
  <div class="page">
    <p>Simulate Page Load Process A</p>
    <p>B C</p>
    <p>D E</p>
    <p>F</p>
    <p>Object Queue</p>
    <p>A</p>
  </div>
  <div class="page">
    <p>Simulate Page Load Process A</p>
    <p>B C</p>
    <p>D E</p>
    <p>F</p>
    <p>Object Queue</p>
    <p>A</p>
    <p>C B</p>
  </div>
  <div class="page">
    <p>Simulate Page Load Process A</p>
    <p>B C</p>
    <p>D E</p>
    <p>F</p>
    <p>Object Queue</p>
    <p>A</p>
    <p>C</p>
    <p>B</p>
    <p>D</p>
  </div>
  <div class="page">
    <p>Simulate Page Load Process A</p>
    <p>B C</p>
    <p>D E</p>
    <p>F</p>
    <p>Object Queue</p>
    <p>A</p>
    <p>B</p>
    <p>D</p>
    <p>C</p>
    <p>E</p>
  </div>
  <div class="page">
    <p>Simulate Page Load Process A</p>
    <p>B C</p>
    <p>D E</p>
    <p>F</p>
    <p>Object Queue</p>
    <p>A</p>
    <p>B D</p>
    <p>C</p>
    <p>E</p>
  </div>
  <div class="page">
    <p>Simulate Page Load Process A</p>
    <p>B C</p>
    <p>D E</p>
    <p>F</p>
    <p>Object Queue</p>
    <p>A</p>
    <p>B D</p>
    <p>C E</p>
    <p>F</p>
  </div>
  <div class="page">
    <p>Simulate Page Load Process A</p>
    <p>B C</p>
    <p>D E</p>
    <p>F</p>
    <p>Object Queue</p>
    <p>A</p>
    <p>B D</p>
    <p>C E F</p>
    <p>New page load time</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Mo]va]on  Design  Dependency Extrac]on  Performance Predic]on  Implementa]on  Evalua]on  Conclusion</p>
  </div>
  <div class="page">
    <p>WebProphet Framework</p>
    <p>Browser</p>
    <p>Control plugin</p>
    <p>Web robot Scrip]ng API</p>
    <p>Applica]on transac]on script snippet</p>
    <p>Pcap trace logger Agent network</p>
    <p>Results</p>
    <p>New scenario input</p>
    <p>Dep graphs</p>
    <p>Web Agent</p>
    <p>Web Proxy</p>
    <p>Dependency Extractor</p>
    <p>Annotate object ]ming info</p>
    <p>Page simulator</p>
    <p>Trace Analyzer</p>
    <p>Performance Predictor</p>
    <p>Traces</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Mo]va]on  Design  Dependency Extrac]on  Performance Predic]on  Implementa]on  Evalua]on  Conclusion</p>
  </div>
  <div class="page">
    <p>Dependency Extrac]on Results</p>
    <p>Google and Yahoo Search</p>
    <p>Valida]on: manual code analysis</p>
    <p>Google Yahoo</p>
  </div>
  <div class="page">
    <p>Dependency Extrac]on Results  Google and Yahoo Maps</p>
    <p>Valida]on: create pages with the same dep. graph and validate the craGed pages</p>
    <p>Google</p>
    <p>Yahoo</p>
  </div>
  <div class="page">
    <p>Predic]on Experiment Setup</p>
    <p>Reduce latency see the improvement on PLT  Controlled experiments</p>
    <p>Baseline: high latency  New Scenario: low latency  Use control gateway to inject and remove delays</p>
    <p>Planetlab experiments  Baseline: Interna]onal nodes  New scenario: US nodes  Improve all delay factors to be the same as the US node.</p>
  </div>
  <div class="page">
    <p>Controlled Experiment</p>
    <p>Setup: visit Yahoo Maps from Northwestern  Baseline: inject 100ms RTT to one DC  New Scenario: removing the 100ms RTT injected</p>
    <p>DC Err (median) Err (P95)</p>
    <p>Akamai 16.0% 11.8%</p>
    <p>YDC1 6.5% 9.7%</p>
    <p>YDC2 14.8% 6.0%</p>
  </div>
  <div class="page">
    <p>Planetlab Experiment  Baseline: A Interna]onal node with rela]ve poor performance</p>
    <p>New Scenario: a US node</p>
    <p>Service Baseline New Err(median) Err(P95)</p>
    <p>Gsearch Singapore US 2.0% 10.7%</p>
    <p>Ysearch Japan US 6.1% 0.3%</p>
    <p>Gmap Sweden US 1.2% 1.8%</p>
    <p>Ymap Poland US 0.7% 1.3%</p>
  </div>
  <div class="page">
    <p>Usage Scenarios</p>
    <p>Analyze how to improve Yahoo Maps  Only want to op]mize a small number of objects  Use a greedy based search  Evaluate 2,176 hypothe]cal scenarios in 20 secs, find that  Move 5 objects to CDN: 14.8%  Reduce client delays of 14 objects to half: 26.6%  Combine both: 40.1% (4secs to 2.4secs)</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Mo]va]on  Design  Dependency Extrac]on  Performance Predic]on  Implementa]on  Evalua]on  Conclusion</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>Web service performance predic]on is hard  Modern web services are complicated  Object dependencies are very important</p>
    <p>Design an automated tool for performance predic]on  Dependency discovery  Dependency driven performance predica]on  Evalua]on on the accuracy and usefulness of our tool</p>
  </div>
  <div class="page">
    <p>Q &amp; A</p>
    <p>Thanks!</p>
  </div>
</Presentation>
