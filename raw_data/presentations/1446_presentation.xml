<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Push vs. Pull: Implications of Protocol Design on Controlling Unwanted Traffic</p>
    <p>Zhenhai Duan, Kartik Gopalan Florida State University</p>
    <p>Yingfei Dong University of Hawaii</p>
  </div>
  <div class="page">
    <p>Objectives and Scope  Controlling spam-like unwanted traffic</p>
    <p>We target unsolicited asynchronous messages  These rely on content being read/heard by the</p>
    <p>receiver</p>
    <p>Two objectives 1. Examine two protocol design choices</p>
    <p>Sender-push vs. receiver-pull</p>
  </div>
  <div class="page">
    <p>Outline of the Talk</p>
    <p>Message delivery models and their variants  Sender-Push (SP)  Receiver-Intent-based Sender-Push (RISP)  Receiver-Pull (RP)  Sender-Intent-based Receiver-Pull (SIRP)</p>
    <p>A simple receiver-pull-based email delivery system  The Differentiated Mail Transfer Protocol (DMTP)</p>
    <p>Summary</p>
  </div>
  <div class="page">
    <p>Sender-Push (SP)</p>
    <p>Examples: SMTP-based email, asynchronous voice messages</p>
    <p>Roles  S: Controls what content is delivered and when it is delivered  R: Passively receives the entire message before processing/discarding</p>
    <p>Responsibilities  S: Prepare and transmit message when ready</p>
    <p>R: Has to wait, receive, process, store/discard each message.</p>
    <p>Accountability  Senders can vanish after pushing messages</p>
  </div>
  <div class="page">
    <p>Receiver-Intent-based Sender-Push (RISP)</p>
    <p>Examples:  Mailing lists, subscription-based</p>
    <p>stock/news ticker, instant messaging.</p>
    <p>Receiver can exercise minimal control over sender  Subscribe/unsubscribe  Whitelist/blacklist</p>
    <p>Basic problems for SP  Senders control what/when to send  Receiver must accept entire message.  Poor accountability</p>
  </div>
  <div class="page">
    <p>Receiver-Pull (RP)</p>
    <p>Examples: HTTP and FTP  Roles</p>
    <p>S: Stores the message and passively waits for retrieval  R: Controls if and when to retrieve the message</p>
    <p>Responsibilities  S: Prepare, store, manage the content and wait (stay online)  R: Retrieve the message when convenient</p>
    <p>Accountability  Senders identity is visible for a larger window of time</p>
  </div>
  <div class="page">
    <p>Sender-intent-based Receiver Pull (SIRP)</p>
    <p>Example: Pager service</p>
    <p>Allow senders to express short intent to send a message</p>
    <p>Content delivery is still controlled by receiver</p>
    <p>Primary advantages of RP  Receivers control delivery  Senders commit more resources  Senders can be held accountable</p>
    <p>Senders cannot vanish before message is retrieved</p>
    <p>Disadvantage:  To some extent, intent notice may itself be</p>
    <p>considered as SPAM.  Definitely better than receiving the whole message.</p>
  </div>
  <div class="page">
    <p>SIRP Email Architecture</p>
    <p>Issue: All messages, whether spam or legitimate, are affected by the two-step delivery</p>
    <p>(Intent)</p>
    <p>(Receiver Pull)</p>
  </div>
  <div class="page">
    <p>DMTP: Differentiated Mail Transfer Protocol</p>
    <p>Classify the senders  Allowed  regular contacts  Denied  well-known spammers  Unclassified  anyone not in allowed/denied</p>
    <p>Differentiate delivery of messages based on sender classification  Allowed: Directly accept the entire message  Denied: Directly decline the message before content is delivered.  Unclassified: Use the SIRP model to retrieve message</p>
    <p>Classification granularity at  MTA level and  (optionally) Email address level</p>
  </div>
  <div class="page">
    <p>DMTP Message Reception</p>
    <p>If (SMTA is Denied) return 550 (PE)</p>
    <p>close TCP session else (SMTA is allowed) proceed using SMTP else /* SMTA is unclassified */ accept MSID (reject any DATA command) /* pull message later if and when user wants */</p>
  </div>
  <div class="page">
    <p>Example DMTP transactions SMTA: open TCP connection RMTA: Get IP address of SMTA</p>
    <p>// Case 1: SMTA IP is Allowed RMTA: 220</p>
    <p>// Case 2: SMTA IP is Denied RMTA: 550 RMTA: close TCP connection</p>
    <p>// Case 3: SMTA IP is Unclassified RMTA: 220 SMTA: EHLO domain.com RMTA: 220 MSID SMTA: MAIL FROM: &lt;yyy&gt; DMTP RMTA: 220 SMTA: RCPT TO: &lt;xxx&gt; RMTA: 220 SMTA: MSID &lt;identifier&gt; RMTA: 220</p>
    <p>// if DATA command is attempted SMTA: DATA RMTA: 550</p>
  </div>
  <div class="page">
    <p>Other aspects  DMTP can be incrementally deployed</p>
    <p>No need to change everyone from SMTP  DMTP overnight</p>
    <p>SIRP model is also applicable to mobile text messages, asynchronous voice message etc.</p>
    <p>Other references:  Receiver-Driven Extensions to SMTP, Internet Draft  DiffMail: Controlling Spam Through Message Differentiation,</p>
    <p>TR, FSU  DiffMail Project webpage:</p>
    <p>http://www.cs.fsu.edu/~duan/projects/diffmail/</p>
  </div>
  <div class="page">
    <p>Summary  We examined two message delivery models and their</p>
    <p>variants  Receiver-pull model preferred in controlling unwanted</p>
    <p>messages</p>
    <p>Presented application of receiver-pull to email delivery  Differentiated Mail Transfer protocol (DMTP)  Currently implementing DMTP in Sendmail.</p>
    <p>(code to be available soon)</p>
    <p>Thank you!</p>
  </div>
</Presentation>
