<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Intel Labs</p>
    <p>For extreme parallelism, your OS is</p>
    <p>sooooo last-millennium</p>
    <p>Rob Knauerhase, Romain Cledat, Justin Teller</p>
    <p>Government Purpose Rights</p>
    <p>Purchase Order Number: N/A</p>
    <p>Agreement No.: HR0011030007</p>
    <p>Contractor Name: Intel Corporation</p>
    <p>Contractor Address: 2111 NE 25th Ave M/S JF260, Hillsboro, OR 97124</p>
    <p>Expiration Date: None</p>
    <p>The Governments rights to use, modify, reproduce, release, perform, display, or disclose this technical data are restricted by paragraphs B (1),(3) and (6) of Article VIII as incorporated within the</p>
    <p>above purchase order and Agreement. No restrictions apply after the expiration data shown above. Any reproduction of the software or portions thereof marked with this legend must also</p>
    <p>reproduce the markings. The following entities, their respective successors and assigns, shall possess the right to exercise said property rights, as if they were the Government, on behalf of the</p>
    <p>Government: Intel Corporation (www.intel.com); ET International (www.etinternational.com); Reservoir Labs (www.reservoir.com); University of California San Diego (www.ucsd.edu); University of</p>
    <p>Delaware (www.udel.edu); University of Illinois at Urbana-Champaign (www.uiuc.edu).</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>Outline</p>
    <p>Backdrop:</p>
    <p>On the road to Exascale</p>
    <p>Runnemede: the UHPC project at Intel</p>
    <p>Design decision points:</p>
    <p>Separation of concerns</p>
    <p>Memory management</p>
    <p>Threading model</p>
    <p>Where do we go from here?</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>The road to exascale</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>will require a nuclear plant  Extrapolating current power trends to 2018:</p>
    <p>Is a nuclear power plant per system really</p>
    <p>sustainable?</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>Principles for current OSes</p>
    <p>Design philosophies of OSes:</p>
    <p>Abstract away the hardware</p>
    <p>Provide common programming API</p>
    <p>Ensure fairness, isolation, etc.</p>
    <p>Extremely successful for current development:</p>
    <p>Write once for multiple processor generations</p>
    <p>Focus on application, not nitty-gritty boiler-plate</p>
    <p>code (memory management, threading, etc.)</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>not adapted for exascale</p>
    <p>Exascale requires visibility for energy reasons:</p>
    <p>into the memory hierarchy</p>
    <p>into task, not just thread, scheduling</p>
    <p>Exascale does not have the same concerns:</p>
    <p>compute resources are plentiful (so why share)</p>
    <p>communication is expensive (not even seen in OS)</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>The Runnemede project: hardware</p>
    <p>Heterogeneous:</p>
    <p>CEs are general purpose</p>
    <p>XEs are efficient computation units</p>
    <p>Hierarchical:</p>
    <p>Both compute and memory</p>
    <p>ControlControlControlControl EngineEngineEngineEngine (CE)(CE)(CE)(CE)</p>
    <p>eXecution Engines (XEs)</p>
    <p>BlockBlockBlockBlockBlockBlockBlockBlock</p>
    <p>BlockBlockBlockBlockBlockBlockBlockBlock</p>
    <p>BlockBlockBlockBlockBlockBlockBlockBlock</p>
    <p>BlockBlockBlockBlockBlockBlockBlockBlock</p>
    <p>NetworkNetworkNetworkNetwork</p>
    <p>Processor eXecution Engines (XEs)</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>The Runnemede project: software</p>
    <p>Programming model based on:</p>
    <p>Small chunks of code (codelets)</p>
    <p>Dataflow-like dependencies between codelets</p>
    <p>Codelets run uninterrupted on the XEs:</p>
    <p>Codelets fire when their dependencies are met</p>
    <p>Codelets satisfy the dependencies of other codelets</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>Current hypotheses</p>
    <p>Exascale system software will require:</p>
    <p>Fine-grained event-driven execution model</p>
    <p>Sophisticated observation</p>
    <p>Execution, environment, policies, resiliency,</p>
    <p>Dynamic adaptation techniques</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>Outline</p>
    <p>Backdrop:</p>
    <p>On the road to Exascale</p>
    <p>Runnemede: the UHPC project at Intel</p>
    <p>Design decision points:</p>
    <p>Separation of concerns</p>
    <p>Memory management</p>
    <p>Threading model</p>
    <p>Where do we go from here?</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>Traditional separation of concerns</p>
    <p>Traditionally, resources are time shared between:</p>
    <p>A kernel that interacts with the hardware</p>
    <p>User code</p>
    <p>Downsides:</p>
    <p>Expensive context switch on the same core (kernel vs. user mode)</p>
    <p>Does not take into account differences in processing requirements for kernel and application</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>Separation of concerns: proposal</p>
    <p>Resources are plentiful:</p>
    <p>Use some for kernel and others for user code</p>
    <p>CEs run kernel code and XEs run user code</p>
    <p>Spatial sharing instead of temporal sharing</p>
    <p>Specialize resources:</p>
    <p>E.g., CEs specialized for queue processing</p>
    <p>XEs specialized for energy efficiency + custom</p>
    <p>functionality as needed</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>Traditional memory management</p>
    <p>Traditionally:</p>
    <p>Virtual memory is used to abstract actual memory</p>
    <p>hardware (available amount of RAM, layout, etc.)</p>
    <p>Heap allocation is done in an architecture agnostic</p>
    <p>manner (except for some NUMA effort)</p>
    <p>Storage hierarchies do not adapt to the application</p>
    <p>Loss of visibility on the granularity and locality</p>
    <p>of the memory</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>Why is visibility important?</p>
    <p>Granularity:</p>
    <p>Optimize for applications access patterns (not all data fits exactly in a multiple of the page size)</p>
    <p>Location:</p>
    <p>Give software an explicit view of communication and access costs</p>
    <p>Allow a programmer (or compiler) to precisely place allocations within a memory hierarchy</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>Memory management: proposal</p>
    <p>Make data a first-class object:</p>
    <p>A runtime system can track usage at a programmer/compiler controllable granularity which makes sense from the applications point-ofview (data objects)</p>
    <p>Data objects can be relocated, garbage collected in a way to minimize energy usage</p>
    <p>Memory management will collaborate with task scheduling</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>Threading abstraction: constraints</p>
    <p>Avoid context switching  Energy inefficient and attempts to save a plentiful</p>
    <p>computing resource</p>
    <p>Avoid hard-binding to hardware resources  The system state, workload, and overall</p>
    <p>power/performance tradeoffs will change during an application lifetime</p>
    <p>Co-location of a thread and its data is key to reducing energy  Moving a data element may be more expensive than</p>
    <p>computing it (for eg. with NTV computation)</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>Threading abstraction: proposal</p>
    <p>Build a fine-grained, asynchronous task</p>
    <p>parallelism abstraction at the lowest level:</p>
    <p>Stop tying parallel tasks to resources</p>
    <p>Make explicit affinity relationships</p>
    <p>Make explicit dependency relationships</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>Threading abstraction: proposal</p>
    <p>Enables the programmer to precisely schedule tasks</p>
    <p>Expose affinity interface among tasks and data instead of to particular hardware/threads</p>
    <p>Allow the runtime to adapt to the time-varying capabilities of the underlying hardware</p>
    <p>Explicit dependency interface</p>
    <p>Similar to TBB task graph and Habanero DDFs</p>
    <p>Can interface with the memory management portion of the runtime, informing data-movement and task scheduling</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>Summary</p>
    <p>Current OS design goals are misaligned with Exascale goals</p>
    <p>Replace OS with a lightweight runtime:</p>
    <p>Strips out unnecessary OS features</p>
    <p>Focuses on Exascale goals (for example: energy efficiency and resiliency)</p>
    <p>Provides low-level interfaces to expose certain key architectural aspects (relevant for energy)</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>Outline</p>
    <p>Backdrop:</p>
    <p>On the road to Exascale</p>
    <p>Runnemede: the UHPC project at Intel</p>
    <p>Design decision points:</p>
    <p>Separation of concerns</p>
    <p>Memory management</p>
    <p>Threading model</p>
    <p>Where do we go from here?</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>More compiled visibility</p>
    <p>Non-code information is lost in the final binary</p>
    <p>Useful information for Exascale:</p>
    <p>Different trade-off implementations</p>
    <p>Capabilities/requirements of various codelets</p>
    <p>Preserving user annotations and compiler deduced information would be helpful at runtime</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>Non-traditional core use</p>
    <p>Resources are plentiful in Exascale:</p>
    <p>Explore other uses for cores:</p>
    <p>Use some to explore computation space and do JIT</p>
    <p>tuning</p>
    <p>Dedicate some to smarter scheduling</p>
    <p>Explore correct mix of cores</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>Advanced observation</p>
    <p>Use PMUs to inform scheduling decisions</p>
    <p>Determine typical codelet access patterns</p>
    <p>Quick fixups if needed for existing scheduling</p>
    <p>decisions</p>
    <p>Accommodate dynamic system state</p>
    <p>Not just load, but also temperature, resiliency, ...</p>
    <p>Accommodate heterogeneity and data</p>
    <p>parallelism (codelet version selection)</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt.</p>
    <p>Enhanced data/task scheduling</p>
    <p>Key goal: reduce communication</p>
    <p>Heuristics to optimally schedule code and place data:</p>
    <p>Programmer aided</p>
    <p>Observation/learning based</p>
    <p>Other goals:</p>
    <p>Distribute heat</p>
    <p>Discover and recover from errors</p>
  </div>
  <div class="page">
    <p>Intel Labs</p>
    <p>was, in part, funded by the U.S. Govt. The views and conclusions contained in this document are those of the authors</p>
    <p>and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Govt. 25</p>
    <p>Questions?</p>
  </div>
</Presentation>
