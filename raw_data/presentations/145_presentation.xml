<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Blue Sensors, Sensor Correlation, and Alert Fusion</p>
    <p>Al Valdes</p>
  </div>
  <div class="page">
    <p>Event Processing, Monitoring, and Correlation</p>
    <p>TCP Connections (2M)</p>
    <p>Sessions (200K)</p>
    <p>eBayes-TCP eBayes-Host</p>
    <p>Other Monitors Alerts (1.5K)</p>
    <p>Meta Alert Fusion</p>
    <p>Meta Alerts (500)</p>
    <p>Note: Event counts Represent 6 weeks of CSL Data</p>
  </div>
  <div class="page">
    <p>Functions of Correlation</p>
    <p>Consolidate a large number of raw events into a single attack  Emerald Alert Thread mechanism achieves this</p>
    <p>Example: Syn flood may be thousands of events, reported as a single alert to the GUI</p>
    <p>Use the state of one monitor to adjust another (for false alarm suppression or to enhance sensitivity)</p>
    <p>Fuse alerts (possibly from heterogeneous sensors) into one message</p>
  </div>
  <div class="page">
    <p>Bayes Approach Succinctly</p>
    <p>Start with a PRIOR expectation of the world</p>
    <p>Observe EVIDENCE</p>
    <p>Mathematically obtain an update belief in the state of the world, based on  Prior</p>
    <p>Observed Evidence</p>
    <p>For long-running processes, the updated belief becomes your new prior expectation</p>
    <p>Would like to utilize external information to adjust prior</p>
  </div>
  <div class="page">
    <p>Blue Sensor: Service Availability Monitoring</p>
    <p>Adaptively learns which services (ports) are valid on which hosts</p>
    <p>Based on Bayes analysis of traffic bursts, continuously maintains state for each such service</p>
    <p>Coupled with TCP session monitor:  Effect on prior expectation of some feature values (e. g., successful 3</p>
    <p>way handshake) mathematically reasonable</p>
    <p>Attempts to connect to invalid services raise sensitivity: Stealth port scans in LL 99 data detected</p>
    <p>Attempts by legitimate clients to connect to down services are now modeled with a different prior expectation: Effective false alarm suppression</p>
  </div>
  <div class="page">
    <p>Meta Alert Fusion</p>
    <p>First, decide if the new alert matches an existing one</p>
    <p>Alerts contain a number of features  Source(s)</p>
    <p>Target(s)</p>
    <p>Target port(s)</p>
    <p>Type of attack</p>
    <p>Approach here is to compare an alert to existing META ALERTS</p>
    <p>For each feature:  Does it match? - Feature-specific similarity</p>
    <p>Do we expect it to match? - Like a Bayes prior</p>
    <p>We then compose an overall match. If it is good enough, we fuse the new alert with the existing one.</p>
  </div>
  <div class="page">
    <p>So What is Similarity</p>
    <p>Want a number between 0 and 1 (to manipulate like a probability)</p>
    <p>A Bayes belief fits the bill for some features</p>
    <p>For list features, how much do they overlap and how much could they overlap  Example, eBayes-TCP does not see UDP ports.</p>
    <p>If eBayes-TCP reports a portsweep, and</p>
    <p>Another monitor reports a TCP and UDP portsweep, and</p>
    <p>The TCP ports match, then the two lists overlap as much as they can</p>
  </div>
  <div class="page">
    <p>What is Similarity (2)</p>
    <p>Another notion for lists: Is contained in</p>
    <p>Specific to IP: Is in the same subnet</p>
    <p>For attack type, sequencing information is more important:  If we saw a probe, then our prior expectation of a subsequent DOS to a</p>
    <p>target of the probe goes up</p>
    <p>In the case of a DOS, we expect source IP to be spoofed, so expectation of match for this feature is low.</p>
    <p>So we would like to call a probe followed by a DOS to a target of the probe similar even if the source does not match  Target of new alert is contained in target of meta alert</p>
    <p>Expectation of similarity for source IP in a DOS is low</p>
    <p>Expectation of DOS attack after a probe is moderate</p>
  </div>
  <div class="page">
    <p>Similarity and Anomaly Detection</p>
    <p>For each session, maintain list of ports accessed</p>
    <p>Compare to a database of lists</p>
    <p>If find a match, fuse the lists (new list is a superset of the two, with features for trimming rare entries)</p>
    <p>Otherwise, the new list is added to the database</p>
    <p>Return a database match (= anomaly) score. Flag very rare lists</p>
    <p>Result: nearly double the eBayes detections on the Lincoln data, with no false alerts</p>
    <p>On live traffic, anomalies are nearly half the alerts, but some appear to be good hits (example, stealthy scans to suspicious port patterns, NAPSTER, {80, 1080, 3128},...)</p>
    <p>Training interval is self-determined and much shorter than eStat in practice (minutes to hours vs. one month)</p>
  </div>
  <div class="page">
    <p>So Does It Work?</p>
    <p>5 Days of live eBayes with the meta alert capability monitoring the CSL gateway (08/09 - 08/14/00)</p>
    <p>131 alerts - 62 from anomaly detection</p>
    <p>Meta-alert capability reduces this to 68 at SIM &gt; 0.6</p>
    <p>Subjectively, fused alerts make sense</p>
  </div>
  <div class="page">
    <p>Example of Fused Alert</p>
    <p>Saw numerous sweeps similar to:</p>
    <p>Thread ID 4860 Class= portsweep BEL (class) = 0.994 BEL(attack)= 1.000 2000-08-10 06:50:28 from 193.230.37.2 ports 1268 to 32434 duration= 0.321 30 dest IPs: 130.107.1.1 130.107.3.1 130.107.4.1 130.107.5.1 130.107.6.1 130.107.7.1 130.107.8.1 130.107.9.1 130.107.10.1 130.107.11.1 130.107.12.1 130.107.13.1 130.107.14.1 130.107.15.1 130.107.16.1 130.107.17.1 130.107.18.1 130.107.19.1 130.107.20.1 130.107.21.1 130.107.22.1 130.107.23.1 130.107.24.1 130.107.25.1 130.107.26.1 130.107.27.1 130.107.28.1 130.107.29.1 130.107.30.1 130.107.31.1 6 dest ports: 635{30} 110{29} 143{29} 53{27} 21{27} 109{22} count 164 max age count 0.16 code 3 svc 1 max-err 3.83 -opn 0 -oip 0 -oport 0 BEL 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.994 0.004 0.002 0.000 PCODE 0.000 0.000 0.000 1.000 0.000 0.000 0.000 SVC DIST 0.417 0.000 0.194 0.000 0.389 0.000</p>
    <p>Non-sys alloc ports 6 port_anom 0.989744 code_anom 0.987017 Invalid hosts 30 Invalid ports 6 Neval 24 eval_count 0</p>
    <p>LL-LIST 2000-08-10 06:50:28 130.107.1.1 to 130.107.31.1 portsweep 1.000</p>
  </div>
  <div class="page">
    <p>These Were Fused into the Following Meta Alert</p>
    <p>Meta Alert Thread 15 Source IPs 193.230.37.2</p>
    <p>Target IPs 130.107.1.1 130.107.3.1 130.107.4.1 130.107.5.1 130.107.6.1 130.107.7.1 130.107.8.1 130.107.9.1 130.107.10.1 130.107.11.1 130.107.12.1 130.107.13.1 130.107.14.1 130.107.15.1 130.107.16.1 130.107.17.1 130.107.18.1 130.107.19.1 130.107.20.1 130.107.21.1 130.107.22.1 130.107.23.1 130.107.24.1 130.107.25.1 130.107.26.1 130.107.27.1 130.107.28.1 130.107.29.1 130.107.30.1 130.107.31.1 130.107.1.2 130.107.3.2 130.107.4.2 130.107.5.2 130.107.6.2 130.107.7.2 130.107.8.2 130.107.9.2 130.107.10.2 130.107.11.2 130.107.12.2 130.107.13.2 130.107.14.2 130.107.15.2 130.107.16.2 130.107.17.2 130.107.18.2 130.107.19.2 130.107.20.2 130.107.21.2 130.107.22.2 130.107.23.2 130.107.24.2 130.107.25.2 130.107.26.2 130.107.27.2 130.107.28.2 130.107.29.2 130.107.30.2 130.107.31.2 130.107.1.3 130.107.3.3 130.107.4.3 130.107.5.3 130.107.6.3 130.107.7.3 130.107.8.3 130.107.9.3 130.107.10.3 130.107.11.3 130.107.12.3 130.107.13.3 130.107.14.3 130.107.15.3 130.107.16.3 130.107.17.3 130.107.18.3 130.107.19.3 130.107.20.3 130.107.21.3 130.107.22.3 130.107.23.3 130.107.24.3 130.107.25.3 130.107.26.3 130.107.27.3 130.107.28.3 130.107.29.3 130.107.30.3 130.107.31.3 130.107.1.4 130.107.3.4 130.107.4.4 130.107.5.4 130.107.6.4 130.107.7.4 130.107.8.4 130.107.9.4 130.107.10.4 130.107.11.4</p>
    <p>From 2000-08-10 06:50:28 to 2000-08-14 01:47:18</p>
    <p>Ports Sum Hits 522.999 dot product 0.166816 Index 635 Prob 0.172815 Index 110 Prob 0.17024 Index 143 Prob 0.168917 Index 53 Prob 0.166216 Index 21 Prob 0.164595 Index 109 Prob 0.157217</p>
    <p>Number of threads 26 Threads :4860 5564 6314 6980 7650 8223 8767 9287 9778 10350 10964 11577 12188 12634 13033 13802 14166 14525 17584 17907 18238 18558 18861 19185 19607 19980 Number of steps 1 Attack steps :portsweep</p>
  </div>
  <div class="page">
    <p>Meta Alert Content</p>
    <p>IP Target list is superset of affected IPs</p>
    <p>Port list is similarly fused (note we get probability distribution over the ports)</p>
    <p>The date range is multiple days</p>
    <p>We retain the thread IDs of the component alerts  Detailed drill-down capability</p>
    <p>HTML Links in browse-able alert text file</p>
  </div>
  <div class="page">
    <p>Potential Usefulness</p>
    <p>Correlating attacks that take place over extended time period (demonstrated)</p>
    <p>Potential to increase sensitivity  Suspicious events below reporting threshold are nonetheless eligible for</p>
    <p>meta alert fusion</p>
    <p>Over a sufficiently long time, collective suspiciousness rating rises to the reportable level</p>
    <p>Scenario reconstruction</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Presented a 3-tier View of Alert Correlation:  Threads for event aggregation</p>
    <p>Modification of sensor state based on state of another sensor, or other external information</p>
    <p>Alert fusion based on similarity measures</p>
    <p>Introduced EMERALD System Availability Monitor (Blue Sensor)  It state modifies session monitor, increasing sensitivity and suppressing</p>
    <p>false alarms</p>
    <p>Defined Alert Fusion approach  Based on appropriate similarity measures (some of which may be Bayes)</p>
    <p>Couple this with expectation of similarity for each feature</p>
    <p>Combine over features in common to determine if an alert matches an existing meta-alert thread</p>
    <p>This has now been demonstrated in a meaningful sense on real data</p>
  </div>
</Presentation>
