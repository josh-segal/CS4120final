<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Dont Trust Your Roommate, or, Access Control and Replication in</p>
    <p>Home Environments</p>
    <p>Vassilios Lekakis, Yunus Basagalar, Pete Keleher University of Maryland</p>
    <p>HotStorage 2012</p>
  </div>
  <div class="page">
    <p>One picture is worth a thousand words</p>
    <p>Anzere, Bayou, BlueFS, Cimbiosys, EnsemBlue, EYO, HomeViews, Perspective, PodBase, PRACTI, UIA, ZZFS</p>
  </div>
  <div class="page">
    <p>Consistency Update mechanism</p>
    <p>R C U Replication</p>
    <p>Building Blocks</p>
  </div>
  <div class="page">
    <p>Consistency</p>
    <p>Update Mechanism</p>
    <p>R C U</p>
    <p>Replication</p>
    <p>Building Blocks</p>
    <p>Keep all devices synchronized</p>
  </div>
  <div class="page">
    <p>Personal Spaces</p>
    <p>lab</p>
    <p>home</p>
    <p>dorms</p>
    <p>commute</p>
    <p>classroom</p>
    <p>events gym</p>
    <p>collaboration everywhere</p>
    <p>coffee shops</p>
  </div>
  <div class="page">
    <p>Leaking Spaces</p>
    <p>lab</p>
    <p>home</p>
    <p>dorms</p>
    <p>commute</p>
    <p>classroom</p>
    <p>events gym</p>
    <p>collaboration everywhere</p>
    <p>coffee shopsInf or</p>
    <p>ma tio</p>
    <p>n L ea</p>
    <p>ka ge</p>
  </div>
  <div class="page">
    <p>The fourth element</p>
    <p>Keep all devices synchronized</p>
    <p>Eliminate information leakage</p>
    <p>R C U</p>
    <p>Security</p>
  </div>
  <div class="page">
    <p>Contributions</p>
    <p>No information leakage Bloom filters Role-based consistency Object forking</p>
    <p>Security, as a building block</p>
  </div>
  <div class="page">
    <p>BobCharlie Alice</p>
    <p>C</p>
    <p>B</p>
    <p>A</p>
    <p>C</p>
    <p>B</p>
    <p>File1 File2</p>
    <p>Leakage in action</p>
  </div>
  <div class="page">
    <p>Beach Dorm</p>
    <p>CB A</p>
    <p>File2</p>
    <p>Leakage in action</p>
  </div>
  <div class="page">
    <p>CB A</p>
    <p>File2 File2</p>
    <p>Leakage in action</p>
    <p>Beach Dorm</p>
  </div>
  <div class="page">
    <p>CA</p>
    <p>File2</p>
    <p>B</p>
    <p>File2</p>
    <p>Leakage in action</p>
    <p>Beach Dorm</p>
  </div>
  <div class="page">
    <p>B</p>
    <p>File2</p>
    <p>CA</p>
    <p>File2 File2</p>
    <p>Leakage in action</p>
    <p>Beach Dorm</p>
  </div>
  <div class="page">
    <p>CB A</p>
    <p>File2 File2</p>
    <p>Leakage in action</p>
    <p>Information leakage: Alice learns about File2</p>
  </div>
  <div class="page">
    <p>CB A</p>
    <p>File2 File2</p>
    <p>Eliminate information leakage Maintain a flexible update mechanism</p>
    <p>Can we do better?</p>
  </div>
  <div class="page">
    <p>Principals</p>
    <p>AB C</p>
    <p>Alice.OS-Notes</p>
    <p>A B</p>
    <p>C</p>
    <p>type:Notes &amp; class:OS</p>
    <p>Access control elements</p>
  </div>
  <div class="page">
    <p>What we consider leakage?</p>
    <p>Any data access outside the realm of a role Replicas should not reveal their roles to</p>
    <p>other replicas</p>
  </div>
  <div class="page">
    <p>Leakage-free update</p>
    <p>Alice.OS-Notes</p>
    <p>A B</p>
    <p>C</p>
    <p>type:Notes &amp; class:OS</p>
    <p>Bob.OS-Project</p>
    <p>C</p>
    <p>type:Project &amp; class:OS</p>
    <p>B</p>
  </div>
  <div class="page">
    <p>Leakage-free update</p>
    <p>B</p>
    <p>Bob.OS-Project</p>
    <p>type:Project &amp;&amp; class:OS</p>
  </div>
  <div class="page">
    <p>Leakage-free update</p>
    <p>A</p>
    <p>B</p>
    <p>Bob.OS-Project</p>
    <p>type:Project &amp;&amp; class:OS</p>
  </div>
  <div class="page">
    <p>Leakage-free update</p>
    <p>A</p>
    <p>KernelB</p>
    <p>Bob.OS-Project</p>
    <p>Bloom filter</p>
    <p>type:Project &amp;&amp; class:OS</p>
  </div>
  <div class="page">
    <p>Why use a bloom filter?</p>
    <p>Learn how to update peers without leaking information</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>AB</p>
    <p>Leakage-free update</p>
    <p>Session Key Establishment Confidentiality:</p>
  </div>
  <div class="page">
    <p>AB</p>
    <p>{OS-Project-Challenge}session_key</p>
    <p>Leakage-free update</p>
  </div>
  <div class="page">
    <p>AB</p>
    <p>{OS-Project-Challenge}session_key</p>
    <p>HMAC(OS-Project-Challenge, OS-Notes.KEY){ }session_key</p>
    <p>Leakage-free update</p>
  </div>
  <div class="page">
    <p>Why the HMAC step?</p>
    <p>?</p>
    <p>To decide when to use a pure log exchange approach without leaking information</p>
  </div>
  <div class="page">
    <p>HMAC(OS-Project.CHALLENGE, OS-Notes.KEY)</p>
    <p>HMAC(OS-Project.CHALLENGE, OS-Project.KEY) CMP{ X</p>
    <p>B VS</p>
    <p>Alices Bloom Filter</p>
    <p>OS-Project Kernels</p>
    <p>Leakage-free update</p>
  </div>
  <div class="page">
    <p>AB</p>
    <p>{ }session_key</p>
    <p>Leakage-free update</p>
  </div>
  <div class="page">
    <p>Double hatted replicas Videos Taxes</p>
    <p>Vacations Financial Planning</p>
    <p>Orthogonal VS Intersecting Roles</p>
  </div>
  <div class="page">
    <p>Alice.OS-Notes</p>
    <p>A B</p>
    <p>C</p>
    <p>type:Notes &amp; class:OS</p>
    <p>Bob.OS-Project</p>
    <p>C</p>
    <p>type:Project &amp; class:OS</p>
    <p>B</p>
    <p>type:Project &amp; class:OS OR</p>
    <p>type:Notes &amp; date: June 14</p>
    <p>Consistency &amp; information leakage</p>
  </div>
  <div class="page">
    <p>C</p>
    <p>B</p>
    <p>A</p>
    <p>?</p>
    <p>? File3</p>
    <p>Bob.OS-Project Alice.OS-Notes File3</p>
    <p>Consistency &amp; information leakage</p>
  </div>
  <div class="page">
    <p>C</p>
    <p>B</p>
    <p>A</p>
    <p>?</p>
    <p>Bob.OS-Project Alice.OS-Notes File3</p>
    <p>File3 K er</p>
    <p>ne l</p>
    <p>Consistency &amp; information leakage</p>
  </div>
  <div class="page">
    <p>Object-based consistency</p>
    <p>B</p>
    <p>?</p>
    <p>Do nothing Updates appear to intersecting roles</p>
    <p>Object consistency VS Information leakage</p>
    <p>Bob.OS-Project Alice.OS-Notes File3</p>
    <p>File3</p>
  </div>
  <div class="page">
    <p>User</p>
    <p>System</p>
    <p>B</p>
    <p>?</p>
    <p>Bob.OS-Project File3</p>
    <p>Role-based consistency &amp; forking objects</p>
  </div>
  <div class="page">
    <p>User</p>
    <p>System</p>
    <p>B</p>
    <p>?</p>
    <p>File3</p>
    <p>File3 File3</p>
    <p>Role-based consistency &amp; forking objects</p>
  </div>
  <div class="page">
    <p>Pros &amp;&amp; Cons</p>
    <p>Storage overhead Programming complexity Local accesses become an issue</p>
    <p>No Information leakage between roles</p>
    <p>Role-based consistency discussion</p>
  </div>
  <div class="page">
    <p>Takeaway Current protocols in a multi-user setting leak information</p>
    <p>Thesis: Security should become a major building block of personal data management systems</p>
    <p>Elimination of leakage through  Role-based access control  Object forking  Role-based consistency</p>
  </div>
</Presentation>
