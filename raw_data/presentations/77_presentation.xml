<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Modeling Query-Based Access to Text Databases</p>
    <p>Eugene Agichtein Panagiotis Ipeirotis Luis Gravano</p>
    <p>Computer Science Department</p>
    <p>Columbia University</p>
  </div>
  <div class="page">
    <p>Scalable Text Mining</p>
    <p>Often only a tiny fraction of a text database is relevant, so processing every document is unnecessarily expensive.</p>
    <p>Often relevant information is not crawlable, but available only via a search engine.</p>
    <p>Search engines can help: efficiency and accessibility</p>
  </div>
  <div class="page">
    <p>Task1: Extracting Structured Information Buried in Text Documents</p>
    <p>Apple's programmers &quot;think different&quot; on a &quot;campus&quot; in</p>
    <p>Cupertino, Cal. Nike employees &quot;just do it&quot; at what the company refers to as its &quot;World Campus,&quot; near Portland, Ore.</p>
    <p>Microsoft's central headquarters in Redmond is home to almost every product group and division.</p>
    <p>OrganizationOrganization LocationLocation</p>
    <p>Microsoft</p>
    <p>Apple Computer</p>
    <p>Nike</p>
    <p>Redmond</p>
    <p>Cupertino</p>
    <p>Portland</p>
    <p>Brent Barlow, 27, a software analyst and beta-tester at Apple Computers headquarters in Cupertino, was fired Monday for &quot;thinking a little too different.&quot;</p>
  </div>
  <div class="page">
    <p>Information Extraction Applications</p>
    <p>Over a corporations customer report or email complaint database: enabling sophisticated querying and analysis</p>
    <p>Over biomedical literature: identifying drug/condition interactions</p>
    <p>Over newspaper archives: tracking disease outbreaks, terrorist attacks; intelligence</p>
    <p>Significant progress over the last decade [MUC]</p>
  </div>
  <div class="page">
    <p>Goal: Extract All Tuples of a Relation from a Document Database</p>
    <p>Text Database</p>
    <p>Information Extraction</p>
    <p>System</p>
    <p>One approach: feed every document to information extraction system</p>
    <p>Problem: efficiency, accessibility!</p>
    <p>Extracted Tuples</p>
  </div>
  <div class="page">
    <p>A Query-Based Strategy for Information Extraction</p>
    <p>documents matching t</p>
    <p>Intuition: Documents with one tuple for the relation are also likely to contain other tuples.</p>
    <p>Problem: May run out of tuples (and queries)  incomplete relation!</p>
    <p>see d</p>
    <p>t0</p>
    <p>t1</p>
    <p>t2</p>
  </div>
  <div class="page">
    <p>Hidden Web Databases</p>
    <p>Surface Web  Link structure  Crawlable  Documents indexed</p>
    <p>by search engines</p>
    <p>Hidden Web  No link structure  Documents hidden in databases  Documents not indexed by search engines  Need to query each collection individually</p>
    <p>SUBMIT</p>
    <p>Keywords</p>
    <p>CLEAR</p>
  </div>
  <div class="page">
    <p>thrombopenia</p>
    <p>Search Over the Hidden Web</p>
    <p>Metasearcher</p>
    <p>NYTimes Archives</p>
    <p>PubMed US Patents</p>
    <p>...</p>
    <p>thrombopenia 24,826 ...</p>
    <p>...</p>
    <p>thrombopenia 0 ...</p>
    <p>...</p>
    <p>thrombopenia 18 ...</p>
    <p>??</p>
    <p>Database selection relies on simple content summaries: vocabulary, word frequencies</p>
    <p>Problem: Databases dont export content summaries!</p>
    <p>Task 2: Database Content Summary Construction</p>
    <p>Typically the vocabulary of each database plus simple frequency statistics</p>
    <p>PubMed (3,868,552 documents)</p>
    <p>cancer 1,398,178 aids 106,512 heart 281,506 hepatitis 23,481</p>
    <p>thrombopenia 24,826</p>
  </div>
  <div class="page">
    <p>A Query-Based Strategy for Constructing Database Summaries</p>
    <p>documents matching t</p>
    <p>Problem: May run out of words (and queries)  incomplete summary!</p>
    <p>see d</p>
    <p>t0</p>
    <p>t1</p>
    <p>t2</p>
  </div>
  <div class="page">
    <p>Query-Based Information Extraction and Database Summary Construction</p>
    <p>see d</p>
    <p>see d</p>
    <p>connecte d</p>
    <p>disconnected</p>
  </div>
  <div class="page">
    <p>Model: Querying Graph</p>
    <p>Tokens T: Task 1: tuple attributes</p>
    <p>microsoft AND redmond acm AND new york</p>
    <p>Task 2: words sigmod, webdb</p>
    <p>Tokens (as queries) retrieve</p>
    <p>documents in D</p>
    <p>Documents contain tokens</p>
    <p>T D t1</p>
    <p>t2</p>
    <p>t3</p>
    <p>t4</p>
    <p>t5</p>
    <p>d1</p>
    <p>d2</p>
    <p>d3</p>
    <p>d4</p>
    <p>d5</p>
  </div>
  <div class="page">
    <p>Model: Reachability Graph</p>
    <p>t2, t3, and t4 reachable from t1</p>
    <p>t1 retrieves document d1 that contains t2</p>
    <p>T D t1</p>
    <p>t2</p>
    <p>t3</p>
    <p>t4</p>
    <p>t5</p>
    <p>d1</p>
    <p>d2</p>
    <p>d3</p>
    <p>d4</p>
    <p>d5</p>
    <p>t1</p>
    <p>t2 t3</p>
    <p>t4t5</p>
  </div>
  <div class="page">
    <p>Model (cont.): Connectivity</p>
    <p>Reachable tokens, do not retrieve core tokens</p>
    <p>Tokens that retrieve other tokens and themselves</p>
    <p>Tokens that retrieve other tokens but are not reachable</p>
  </div>
  <div class="page">
    <p>Power-law Graphs</p>
    <p>Conjecture: Degree distribution in the reachability graph is described by a power-law:</p>
    <p>Completely described by only two parameters, and.</p>
    <p>Power-law random graphs are expected to have at most one giant connected component (~Core+In+Out). Other connected components are small.</p>
  </div>
  <div class="page">
    <p>Model (cont.): Reachability</p>
    <p>Reachability: relative size of the largest Core + Out:</p>
    <p>Giant Component CRG t1</p>
    <p>t2 t3</p>
    <p>t4</p>
    <p>seed</p>
    <p>reachab le</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Task 1: Information Extraction  Task 2: Constructing Database Summary  Model:</p>
    <p>Querying, reachability graphs  Power-law graphs  Reachability</p>
    <p>Querying Real Databases  Estimation  Experimental Results  Discussion</p>
  </div>
  <div class="page">
    <p>Querying Real Databases</p>
    <p>Task 1: NYT DiseaseOutbreaks</p>
    <p>(date, disease, location)</p>
    <p>The New York Times</p>
    <p>|D|=137,000</p>
    <p>|T|=8859</p>
    <p>Task 2: 20NG  Postings from 20 Newsgroups  |D| ~ 20,000  |T| ~ 109,000</p>
    <p>Date DiseaseName Locatio n</p>
    <p>Jan. 1995 Malaria Ethiopia</p>
    <p>June 1995</p>
    <p>Ebola Africa</p>
    <p>July 1995 Mad Cow Disease</p>
    <p>The U.K.</p>
    <p>Feb. 1995</p>
    <p>Pneumonia The U.S.</p>
  </div>
  <div class="page">
    <p>NYT Reachability Graph: Outdegree Distribution</p>
    <p>MaxResults= 10</p>
    <p>MaxResults=5 0</p>
    <p>Matches the power-law distribution</p>
  </div>
  <div class="page">
    <p>NYT: Component Size Distribution</p>
    <p>MaxResults= 10</p>
    <p>MaxResults=5 0</p>
    <p>CG / |T| = 0.297</p>
    <p>CG / |T| = 0.620</p>
    <p>Not reachable</p>
    <p>reachable</p>
  </div>
  <div class="page">
    <p>MaxResults=1 MaxResults=10</p>
    <p>CG / |T| = 1 (completely connected)</p>
    <p>Approximated by power-law distribution</p>
  </div>
  <div class="page">
    <p>Estimating Reachability</p>
    <p>In a power-law random graph G a giant component CG emerges* if d (the average outdegree) &gt; 1, and:</p>
    <p>Estimate: Reachability ~ CG / |T|  Depends only on d (average</p>
    <p>outdegree) * For &lt; 3.457</p>
  </div>
  <div class="page">
    <p>Estimating Reachability using Sampling</p>
    <p>edges of nodes in seed. 4. Estimate d as average</p>
    <p>outdegree of seed tokens.</p>
    <p>T D t1</p>
    <p>t2</p>
    <p>t3</p>
    <p>t4</p>
    <p>t5</p>
    <p>d1</p>
    <p>d2</p>
    <p>d3</p>
    <p>d4</p>
    <p>d5</p>
    <p>t1</p>
    <p>t3</p>
    <p>d =1.5</p>
  </div>
  <div class="page">
    <p>Estimating Reachability for NYT</p>
    <p>Approximate reachability is estimated after ~ 50 queries.  Can be used to predict success (or failure) of a Task 1 algorithm.</p>
  </div>
  <div class="page">
    <p>Reachability of NYT (cont.)</p>
    <p>Reachability correctly predicts performance of the Tuples strategy for Task 1 (described in [Agichtein and Gravano, ICDE 2003])</p>
    <p>. 4 6</p>
  </div>
  <div class="page">
    <p>Estimating Reachability of 20NG</p>
    <p>Estimates reachability closely, after just 10 queries</p>
    <p>Corroborates Callans results [Callan et al., SIGMOD 1999]</p>
  </div>
  <div class="page">
    <p>Summary</p>
    <p>Presented graph model for query-based access to text databases  Querying and Reachability graphs  Formal tool for analyzing heuristic algorithms</p>
    <p>The reachability metric: predictions for algorithm performance</p>
    <p>Efficient estimation techniques  Power-law random graph properties + Document</p>
    <p>sampling</p>
  </div>
  <div class="page">
    <p>Future Work</p>
    <p>Other properties of the reachability graph  Edge Density  Diameter</p>
    <p>Real-life limitations:  Total number of queries?  querying graph  Total number of documents?  querying graph</p>
    <p>Analyze other (heuristic) algorithms.</p>
  </div>
  <div class="page">
    <p>Modeling Query-Based Access to Text Databases</p>
    <p>Eugene Agichtein Panagiotis Ipeirotis Luis Gravano</p>
    <p>Computer Science</p>
    <p>Columbia University</p>
    <p>Questions ?</p>
  </div>
  <div class="page">
    <p>Overflow Slides</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Information Extraction Example: Organizations Headquarters</p>
    <p>doc2</p>
    <p>Brent Barlow, a software analyst and beta-tester at Apple Computer's headquarters in Cupertino, was fired Monday for &quot;thinking a little too different.&quot;</p>
    <p>doc4</p>
    <p>&lt;PERSON&gt;Brent Barlow&lt;/PERSON&gt;, a software analyst and beta-tester at &lt;ORGANIZATION&gt;Apple Computer&lt;/ORGANIZATION&gt;'s headquarters in &lt;LOCATION&gt;Cupertino&lt;/LOCATION&gt;, was fired Monday for &quot;thinking a little too different.&quot; doc4</p>
    <p>&lt;ORGANIZATION&gt;'s headquarters in &lt;LOCATION&gt;</p>
    <p>&lt;ORGANIZATION&gt;, based in &lt;LOCATION&gt;</p>
    <p>&lt;ORGANIZATION&gt; = Apple Computer &lt;LOCATION&gt; = Cupertino Pattern = p1</p>
    <p>p1</p>
    <p>p2</p>
    <p>Extraction Patterns</p>
    <p>doc4</p>
    <p>Organization Location</p>
    <p>Eastman Kodak Rochester doc2 doc4</p>
    <p>tid</p>
    <p>W</p>
    <p>Useful</p>
    <p>Input: Documents</p>
    <p>Named-Entity Tagging</p>
    <p>Pattern Matching</p>
    <p>Output: Tuples</p>
  </div>
  <div class="page">
    <p>Efficient Information Extraction: Alternatives</p>
    <p>If a large fraction of documents are relevant:  Scan (not always possible)</p>
    <p>Else  Tuples ?</p>
    <p>Text Database</p>
    <p>? ?</p>
    <p>Given a large text database and an information extraction task, how to proceed?</p>
    <p>Will Tuples retrieve enough of the relation?</p>
  </div>
  <div class="page">
    <p>Search Over Hidden Web Databases</p>
    <p>Metasearchers  Database Selection:</p>
    <p>Choosing best databases for a query</p>
    <p>Database Selection Needs Content Summaries: Typically the vocabulary of</p>
    <p>each database plus simple frequency statistics</p>
    <p>PubMed (3,868,552 documents)</p>
    <p>cancer 1,398,178 aids 106,512 heart 281,506 hepatitis 23,481</p>
    <p>thrombopenia 24,826</p>
  </div>
  <div class="page">
    <p>Model</p>
    <p>Is there a common model for algorithms for Query-Based Information Extraction and Database Summary Construction?</p>
    <p>What are the limitations of these algorithms?</p>
    <p>Given a new database, will such an algorithm for work?</p>
  </div>
</Presentation>
