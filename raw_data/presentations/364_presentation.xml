<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (1/30)</p>
    <p>mCarve: Carving attributed dump sets</p>
    <p>Sjouke Mauw University of Luxembourg sjouke.mauw@uni.lu</p>
    <p>http://satoss.uni.lu/sjouke/</p>
    <p>(joint work with Ton van Deursen, Saa Radomirovic)</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (2/30)</p>
    <p>Public transportation cards easily hacked</p>
    <p>Luxembourg: e-go card</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (3/30)</p>
    <p>All you need is. . .</p>
    <p>. . . a reader, a laptop, publicly available software, a Ton.</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (4/30)</p>
    <p>But decrypting the card is just the first step</p>
    <p>What do all these bits and bytes mean?</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (5/30)</p>
    <p>Manual analysis needed</p>
    <p>Is the number-of-rides-left stored here?</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (6/30)</p>
    <p>Manual analysis is labour intensive</p>
    <p>Hmm, not sure about that.</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (7/30)</p>
    <p>Existing problem from digital forensics</p>
    <p>Carving = recover data from a memory dump of a device</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (8/30)</p>
    <p>Our problem is different</p>
    <p>card identity,  date-of-purchase,  type-of-card,  rides-left,  time-of-use.</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (9/30)</p>
    <p>Standard carving tools dont apply</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (10/30)</p>
    <p>Research question</p>
    <p>Develop a methodology to answer:</p>
    <p>Are these attributes encoded in the dumps?  Where?  With which encoding?</p>
    <p>Assumptions:</p>
    <p>(can be relaxed) 3. Encoding of attribute is deterministic and injective.</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (11/30)</p>
    <p>Central notion: attribute mapping</p>
    <p>a  A an attribute (e.g. rides-left )  s  Bn a dump (i.e. a bit string of length n)  S  Bn a dump set  s|I substring of dump s, restricted to I  [0, n)  vala(s) the value of attribute a for dump s</p>
    <p>(e.g. valrides-left(s) = 5)  e(vala(s)) an injective encoding of the value of attribute a as a bit string</p>
    <p>(e.g. 5 is encoded as 0101)</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (11/30)</p>
    <p>Central notion: attribute mapping</p>
    <p>a  A an attribute (e.g. rides-left )  s  Bn a dump (i.e. a bit string of length n)  S  Bn a dump set  s|I substring of dump s, restricted to I  [0, n)  vala(s) the value of attribute a for dump s</p>
    <p>(e.g. valrides-left(s) = 5)  e(vala(s)) an injective encoding of the value of attribute a as a bit string</p>
    <p>(e.g. 5 is encoded as 0101)</p>
    <p>An attribute mapping determines for every attribute the bit positions where the attribute is stored.</p>
    <p>An attribute mapping for S is a function f : A  P([0, n)), such that for all a  A there exists an encoding e with</p>
    <p>sS s|f(a) = e(vala(s)).</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (12/30)</p>
    <p>Research question formalized</p>
    <p>Given a set of dumps s  S and a set of attributes a  A and their values vala(s), find all possible attribute mappings f.</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (13/30)</p>
    <p>Example</p>
    <p>Finding the rides-left attribute.</p>
    <p>rides-left dump</p>
    <p>s1 4 010100100111010000100</p>
    <p>s2 4 001100100001010010110</p>
    <p>s3 5 101110101011010100011</p>
    <p>s4 6 001010110111011011011</p>
    <p>s5 6 111010110011011001100</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (14/30)</p>
    <p>Example</p>
    <p>Finding the rides-left attribute.</p>
    <p>rides-left dump encoding</p>
    <p>s1 4 010100100111010000100 0100</p>
    <p>s2 4 001100100001010010110 0100</p>
    <p>s3 5 101110101011010100011 0101</p>
    <p>s4 6 001010110111011011011 0110</p>
    <p>s5 6 111010110011011001100 0110</p>
    <p>Two possibilities for this encoding:  f(rides-left) = [5, 8]  f(rides-left) = [12, 15]</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (15/30)</p>
    <p>Example</p>
    <p>Finding the rides-left attribute.</p>
    <p>rides-left dump encoding</p>
    <p>s1 4 010100100111010000100 1001</p>
    <p>s2 4 001100100001010010110 1001</p>
    <p>s3 5 101110101011010100011 1101</p>
    <p>s4 6 001010110111011011011 0101</p>
    <p>s5 6 111010110011011001100 0101</p>
    <p>And for another encoding  f(rides-left) = [3, 6]</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (16/30)</p>
    <p>Observations</p>
    <p>Commonalities: If two dumps have the same attribute value, then the dumps must be identical at the positions of f(a).</p>
    <p>Dissimilarities: If two dumps have a different attribute value, then the dumps differ in at least one bit at the positions of f(a).</p>
    <p>Idea:</p>
    <p>Use this to restrict the search for attribute mappings, independently of the encoding.</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (17/30)</p>
    <p>A bundle is a collection of dumps with the same attribute value.</p>
    <p>bundles(a, S) = {{s  S | vala(s) = d} | d  type(a)}</p>
    <p>The common set determines which bits in the dumps of a dump set are equal if the attribute values are equal.</p>
    <p>common(a, S) =</p>
    <p>bbundles(a,S)</p>
    <p>{i  [0, n) | s,sb si = s</p>
    <p>i}.</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (18/30)</p>
    <p>Example: common set</p>
    <p>Determine common set (*) per bundle and combine.</p>
    <p>rides-left dump</p>
    <p>s1 4 010100100111010000100</p>
    <p>s2 4 001100100001010010110</p>
    <p>*..******..*****.**.* s3 5 101110101011010100011</p>
    <p>********************* s4 6 001010110111011011011</p>
    <p>s5 6 111010110011011001100</p>
    <p>..*******.******.*...</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (18/30)</p>
    <p>Example: common set</p>
    <p>Determine common set (*) per bundle and combine.</p>
    <p>rides-left dump</p>
    <p>s1 4 010100100111010000100</p>
    <p>s2 4 001100100001010010110</p>
    <p>*..******..*****.**.* s3 5 101110101011010100011</p>
    <p>********************* s4 6 001010110111011011011</p>
    <p>s5 6 111010110011011001100</p>
    <p>..*******.******.*...</p>
    <p>common ...******..*****.*...</p>
    <p>Conclusion: rides-left must be encoded within the *-ed bits.</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (18/30)</p>
    <p>Example: common set</p>
    <p>Determine common set (*) per bundle and combine.</p>
    <p>rides-left dump</p>
    <p>s1 4 010100100111010000100</p>
    <p>s2 4 001100100001010010110</p>
    <p>*..******..*****.**.* s3 5 101110101011010100011</p>
    <p>********************* s4 6 001010110111011011011</p>
    <p>s5 6 111010110011011001100</p>
    <p>..*******.******.*...</p>
    <p>common ...******..*****.*...</p>
    <p>Conclusion: rides-left must be encoded within the *-ed bits.</p>
    <p>Complexity: O(n  |S|)</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (19/30)</p>
    <p>The dissimilarity set contains all subsets I of [0, n) such that if the attribute value of any pair of dumps differs, I has a bit that differs.</p>
    <p>dissim(a, S) = {I  [0, n) | s,sS(vala(s) 6= vala(s ) = iIsi 6= s</p>
    <p>i)}</p>
    <p>We can optimize this by taking one representative of each bundle.</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (20/30)</p>
    <p>Example: dissimilarity set</p>
    <p>rides-left dump</p>
    <p>s1 4 010100100111010000100</p>
    <p>s3 5 101110101011010100011</p>
    <p>s4 6 001010110111011011011</p>
    <p>**...................</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (21/30)</p>
    <p>Example: dissimilarity set</p>
    <p>rides-left dump</p>
    <p>s1 4 010100100111010000100</p>
    <p>s3 5 101110101011010100011</p>
    <p>s4 6 001010110111011011011</p>
    <p>**................... .***.................</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (22/30)</p>
    <p>Example: dissimilarity set</p>
    <p>rides-left dump</p>
    <p>s1 4 010100100111010000100</p>
    <p>s3 5 101110101011010100011</p>
    <p>s4 6 001010110111011011011</p>
    <p>**................... .***................. ..**................. ...**................ ....****............. .....****............ ......***............ .......**............ etc.</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (22/30)</p>
    <p>Example: dissimilarity set</p>
    <p>rides-left dump</p>
    <p>s1 4 010100100111010000100</p>
    <p>s3 5 101110101011010100011</p>
    <p>s4 6 001010110111011011011</p>
    <p>**................... .***................. ..**................. ...**................ ....****............. .....****............ ......***............ .......**............ etc.</p>
    <p>Conclusion: the encoding of rides-left must include at least one of the starred intervals.</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (22/30)</p>
    <p>Example: dissimilarity set</p>
    <p>rides-left dump</p>
    <p>s1 4 010100100111010000100</p>
    <p>s3 5 101110101011010100011</p>
    <p>s4 6 001010110111011011011</p>
    <p>**................... .***................. ..**................. ...**................ ....****............. .....****............ ......***............ .......**............ etc.</p>
    <p>Conclusion: the encoding of rides-left must include at least one of the starred intervals.</p>
    <p>Complexity: O(n2 |S| + n |S| log |S|)</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (23/30)</p>
    <p>Main theorem</p>
    <p>Let A be an attribute set and let f be an attribute mapping for dump set S  Bn, then</p>
    <p>aAIdissim(a,S) I  f(a)  common(a, S).</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (24/30)</p>
    <p>Example: common + dissim</p>
    <p>Assuming 4 bits, 4 remaining possibilities.</p>
    <p>rides-left dump</p>
    <p>s1 4 010100100111010000100</p>
    <p>s2 4 001100100001010010110</p>
    <p>s3 5 101110101011010100011</p>
    <p>s4 6 001010110111011011011</p>
    <p>s5 6 111010110011011001100</p>
    <p>...****..............</p>
    <p>....****.............</p>
    <p>.....****............</p>
    <p>............****.....</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (25/30)</p>
    <p>Application: e-go card</p>
    <p>Developed prototype tool.  Collected 68 dumps from 7 cards.  Wrote down attributes for each dump: rides-left, card-type, license-plate,</p>
    <p>swipe-time, swipe-date, etc.</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (26/30)</p>
    <p>Applying common</p>
    <p>= constant 0 = constant 1 = variant</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (26/30)</p>
    <p>Applying common</p>
    <p>= constant 0 = constant 1 = variant</p>
    <p>} shell sector</p>
    <p>product sectors (7)</p>
    <p>transact. sectors (5)</p>
    <p>empty sectors (3)</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (27/30)</p>
    <p>Shell sector</p>
    <p>card-id bcc card-id</p>
    <p>seal CRCpsec-ptr-A</p>
    <p>psec-ptr-B</p>
    <p>tsec-ptr</p>
    <p>next-psec-ptr</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (28/30)</p>
    <p>Product sector</p>
    <p>card type rides left 2 CRC</p>
    <p>rides left exp-time CRC</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (29/30)</p>
    <p>Transaction sector</p>
    <p>date time CRC</p>
    <p>CRCreader id date 2 time 2</p>
  </div>
  <div class="page">
    <p>Sjouke Mauw Carving attributed dump sets (30/30)</p>
    <p>Conclusion</p>
    <p>We defined the carving problem for attributed dump sets.  Developed algorithms and prototype tool.  Results for e-go card: can find most attributes we collected.  Can also find internal and semi-static attributes.  Performance: few seconds for e-go dump set.  Convergence: need approximately 10 bundles to find a regular attribute.  Future work:</p>
    <p>- automatically recover encoding - develop attribute algebra - algorithms to improve robustness - application to security protocol reengineering - recode prototype in C</p>
    <p>Download prototype tool from: http://satoss.uni.lu/mcarve/</p>
  </div>
</Presentation>
