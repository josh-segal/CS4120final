<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Hitag 2 Hell  Brutally Optimizing Guess-and-Determine Attacks</p>
    <p>Aram Verstegen and Roel Verdult and Wouter Bokslag</p>
    <p>FactorIT B.V.</p>
    <p>August 14th 2018</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 1 / 20</p>
  </div>
  <div class="page">
    <p>Overview</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 2 / 20</p>
  </div>
  <div class="page">
    <p>Remote Keyless Entry</p>
    <p>UHF frame format</p>
    <p>Contains 32-bit MAC (KS) on frame data</p>
    <p>KS is a 32-bit sample of Hitag2 keystream</p>
    <p>Determined by the public UID, secret 48-bit key and partly public 32-bit nonce</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 3 / 20</p>
  </div>
  <div class="page">
    <p>LFSR-based stream ciphers</p>
    <p>LFSR</p>
    <p>State register is initialized with secret key</p>
    <p>Round function shifts register by one bit</p>
    <p>Feedback function computes new bit to shift in, based on state</p>
    <p>Cryptanalysis</p>
    <p>Try to find state at any point in time</p>
    <p>Construct inverse round function, roll back to initial state</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 4 / 20</p>
  </div>
  <div class="page">
    <p>LFSR-based stream ciphers</p>
    <p>LFSR</p>
    <p>State register is initialized with secret key</p>
    <p>Round function shifts register by one bit</p>
    <p>Feedback function computes new bit to shift in, based on state</p>
    <p>Cryptanalysis</p>
    <p>Try to find state at any point in time</p>
    <p>Construct inverse round function, roll back to initial state</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 4 / 20</p>
  </div>
  <div class="page">
    <p>Hitag2</p>
    <p>Hitag2 filter function</p>
    <p>Keystream generated by nonlinear filter function</p>
    <p>Consists of two layers of boolean operations</p>
    <p>Keystream bit value is determined by 20 state bits</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 5 / 20</p>
  </div>
  <div class="page">
    <p>Hitag2</p>
    <p>Leakage of state information</p>
    <p>Keystream bit reveals information about cipher state bits</p>
    <p>Eliminate half the possibilities for each keystream bit</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 6 / 20</p>
  </div>
  <div class="page">
    <p>Guess-and-determine</p>
    <p>Propagate guesses over multiple layers</p>
    <p>Several of the input bits for f can overlap with previous guesses</p>
    <p>Fewer guesses to make on the state for each subsequent keystream bit tested</p>
    <p>Still eliminate half the guesses in each layer</p>
    <p>Layer guesses can be expressed as bit masks</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 7 / 20</p>
  </div>
  <div class="page">
    <p>Guess-and-determine</p>
    <p>Propagate guesses over multiple layers</p>
    <p>Several of the input bits for f can overlap with previous guesses</p>
    <p>Fewer guesses to make on the state for each subsequent keystream bit tested</p>
    <p>Still eliminate half the guesses in each layer</p>
    <p>Layer guesses can be expressed as bit masks</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 7 / 20</p>
  </div>
  <div class="page">
    <p>Guess-and-determine</p>
    <p>Propagate guesses over multiple layers</p>
    <p>Several of the input bits for f can overlap with previous guesses</p>
    <p>Fewer guesses to make on the state for each subsequent keystream bit tested</p>
    <p>Still eliminate half the guesses in each layer</p>
    <p>Layer guesses can be expressed as bit masks</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 7 / 20</p>
  </div>
  <div class="page">
    <p>Guess-and-determine</p>
    <p>Propagate guesses over multiple layers</p>
    <p>Several of the input bits for f can overlap with previous guesses</p>
    <p>Fewer guesses to make on the state for each subsequent keystream bit tested</p>
    <p>Still eliminate half the guesses in each layer</p>
    <p>Layer guesses can be expressed as bit masks</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 7 / 20</p>
  </div>
  <div class="page">
    <p>Guess-and-determine</p>
    <p>Full state is determined at layer 9</p>
    <p>Test 23 more keystream bits to reduce to  216</p>
    <p>Internal states can be rolled back to initial state with inverse LFSR</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 8 / 20</p>
  </div>
  <div class="page">
    <p>Performance optimization</p>
    <p>Trivial optimizations</p>
    <p>Pre-compute filter function outputs through lookup tables</p>
    <p>Pre-compute state bit guesses</p>
    <p>Unroll 9 layers of recursion as 9 nested loops</p>
    <p>Advanced optimizations</p>
    <p>Only generate ideal guesses</p>
    <p>Pre-compute and cache the results for later computations in earlier ones</p>
    <p>Bit-slice the implementation</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 9 / 20</p>
  </div>
  <div class="page">
    <p>Performance optimization</p>
    <p>Trivial optimizations</p>
    <p>Pre-compute filter function outputs through lookup tables</p>
    <p>Pre-compute state bit guesses</p>
    <p>Unroll 9 layers of recursion as 9 nested loops</p>
    <p>Advanced optimizations</p>
    <p>Only generate ideal guesses</p>
    <p>Pre-compute and cache the results for later computations in earlier ones</p>
    <p>Bit-slice the implementation</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 9 / 20</p>
  </div>
  <div class="page">
    <p>Performance optimization</p>
    <p>Generating ideal guesses</p>
    <p>Use known state information and expected result to generate ideal lookup tables per layer</p>
    <p>Can test first 9 keystream bits without relying on f entirely</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 10 / 20</p>
  </div>
  <div class="page">
    <p>Performance optimization</p>
    <p>Memoization</p>
    <p>From layer 2 onwards, some subfilters for upcoming layers are entirely determined</p>
    <p>Keep memos of the evaluation of these subfilters (memoization)</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 11 / 20</p>
  </div>
  <div class="page">
    <p>Performance optimization</p>
    <p>s u</p>
    <p>b fi lt e</p>
    <p>rs c</p>
    <p>o m</p>
    <p>p u</p>
    <p>te d</p>
    <p>keystream bit test</p>
    <p>naive memoized to 12</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 12 / 20</p>
  </div>
  <div class="page">
    <p>Performance optimization</p>
    <p>Bit-slicing</p>
    <p>Parallelize to native register width</p>
    <p>Transpose multiple states over multiple v-bit registers</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 13 / 20</p>
  </div>
  <div class="page">
    <p>Performance evaluation</p>
    <p>Optimization type Platform Cores Running time</p>
    <p>Naive BF (Immler 2012) Tesla C2050 448 CUDA 660 minutes 32-way bit-sliced (Benadjila et al. 2017) GTX780Ti 2880 CUDA 1080 minutes 32-way bit-sliced (Benadjila et al. 2017) 16 x Tesla K80 79872 CUDA 45 minutes</p>
    <p>Naive guess-and-determine i7 3700K 4 Intel 127 minutes Avoiding impossible guesses i7 3700K 4 Intel 96 minutes 256-way bit-sliced, memoized to depth 12 i7 3700K 4 Intel 59 minutes 32-way bit-sliced, memoized to depth 17 GTX1080Ti 3584 CUDA 1.2 minutes</p>
    <p>Table: Performance evaluation of average running time compared to related work.</p>
    <p>Performance</p>
    <p>Two previous publications implement naive brute force</p>
    <p>Guess-and-determine offers serious performance improvement</p>
    <p>Factor 500 performance improvementa</p>
    <p>aNormalizing for cuda core count and gpu base clock speed</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 14 / 20</p>
  </div>
  <div class="page">
    <p>Takeaways</p>
    <p>Guess-and-determine optimization techniques</p>
    <p>Conceptual (predetermine guesses, memoized)</p>
    <p>Implementational (unrolled recursion, lookups, bit-sliced)</p>
    <p>Proof of concept on Hitag2 stream cipher</p>
    <p>Recovers internal state in roughly 1 minute</p>
    <p>Applicable in RKE as well as in immobilizer context</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 15 / 20</p>
  </div>
  <div class="page">
    <p>Demonstration</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 16 / 20</p>
  </div>
  <div class="page">
    <p>Demonstration</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 17 / 20</p>
  </div>
  <div class="page">
    <p>Demonstration</p>
    <p>Keystream: 0x74136f48</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 18 / 20</p>
  </div>
  <div class="page">
    <p>Demonstration</p>
    <p>Keystream: 0x74136f48</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 18 / 20</p>
  </div>
  <div class="page">
    <p>Demonstration</p>
    <p>$ ./hitag2_cracker 74136f48</p>
    <p>[+] FactorIT HITAG2 state finder</p>
    <p>[i] Using platform: NVIDIA CUDA</p>
    <p>[+] Cracker started</p>
    <p>[i] Running Hitag2 on 1 device (25.00%)</p>
    <p>[i] Running Hitag2 on 1 device (50.00%)</p>
    <p>[i] Running Hitag2 on 1 device (75.00%)</p>
    <p>[+] Cracker finished</p>
    <p>Writing outfile 74136f48.txt</p>
    <p>$ head 74136f48.txt</p>
    <p>...</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 19 / 20</p>
  </div>
  <div class="page">
    <p>Download</p>
    <p>http://www.hitag2hell.com/</p>
    <p>Verstegen, Verdult, Bokslag (FactorIT) Hitag 2 hell August 14th 2018 20 / 20</p>
  </div>
</Presentation>
