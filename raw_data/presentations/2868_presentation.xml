<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>APKeep: Realtime Verification for Real Networks</p>
    <p>Peng Zhang*, Xu Liu*, Hongkun Yang+, Ning Kang*, Zhengchang Gu*, Hao Li* * Xian Jiaotong University, +Google</p>
  </div>
  <div class="page">
    <p>Background</p>
    <p>Network outages are common human misconfiguration, software bugs, etc.</p>
    <p>Post-effect troubleshooting is slow manually find the root cause after outages using simple tools</p>
    <p>The cost can be quite expensive service down for hours/days, heavy loss of revenue</p>
    <p>&gt;ping</p>
    <p>&gt;tracert</p>
    <p>Network Verification automatically check network correctness with formal methods</p>
  </div>
  <div class="page">
    <p>Realtime Network Verification</p>
    <p>Data Plane State Time</p>
    <p>Control Plane</p>
    <p>FIB ACL FIB ACL</p>
    <p>FIB ACLFIB ACL</p>
    <p>FIB ACL FIB ACL</p>
    <p>FIB ACLFIB ACL</p>
    <p>FIB ACL FIB ACL</p>
    <p>FIB ACLFIB ACL</p>
    <p>FIB ACL FIB ACL</p>
    <p>FIB ACLFIB ACL</p>
    <p>FIB ACL FIB ACL FIB ACL</p>
    <p>Realtime Network verification</p>
    <p>VeriFlow [NSDI13], NetPlumber [NSDI13], AP Verifier [ICNP13], Delta-net[NSDI17]</p>
    <p>Check correctness of data plane state after each update in real time</p>
    <p>correctness: reachability, no loops, no blackholes, isolation,</p>
    <p>real time: verify each update in small amount of time (&lt;1ms)</p>
    <p>BGP OSPF</p>
  </div>
  <div class="page">
    <p>Preliminary to Realtime Network Verification</p>
    <p>EC1</p>
    <p>EC2</p>
    <p>Equivalence Class (EC): a set of packets with the same forwarding behavior</p>
    <p>B</p>
    <p>C D</p>
    <p>Data plane state</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>Network model</p>
    <p>IP header space</p>
    <p>ECs allowed by the edge</p>
  </div>
  <div class="page">
    <p>EC1</p>
    <p>Preliminary to Realtime Network Verification</p>
    <p>EC2</p>
    <p>EC3 EC4EC1IP header space</p>
    <p>B</p>
    <p>C D</p>
    <p>Data plane state</p>
    <p>Update the ECs</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>Network model</p>
    <p>Incremental update and verification [VeriFlow, NSDI13] [AP Verifier, ICNP13] [Delta-net, NSDI17]</p>
  </div>
  <div class="page">
    <p>Preliminary to Realtime Network Verification</p>
    <p>EC2</p>
    <p>EC3 EC4EC1IP header space</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>Network model</p>
    <p>B</p>
    <p>C D</p>
    <p>Data plane state</p>
    <p>Update the ECs &gt;&gt; Update the model</p>
    <p>Incremental update and verification [VeriFlow, NSDI13] [AP Verifier, ICNP13] [Delta-net, NSDI17]</p>
  </div>
  <div class="page">
    <p>Preliminary to Realtime Network Verification</p>
    <p>EC2</p>
    <p>EC3 EC4EC1IP header space</p>
    <p>A</p>
    <p>B</p>
    <p>C</p>
    <p>D</p>
    <p>Network model</p>
    <p>B</p>
    <p>C D</p>
    <p>Data plane state</p>
    <p>Loop found for EC3</p>
    <p>Update the ECs &gt;&gt; Update the model &gt;&gt; Check properties</p>
    <p>Incremental update and verification [VeriFlow, NSDI13] [AP Verifier, ICNP13] [Delta-net, NSDI17]</p>
  </div>
  <div class="page">
    <p>Realtime Verification for Real Networks</p>
    <p>FW</p>
    <p>FW rules: dstIP=192.168.0.0/16 port5 dstIP=192.168.10.0/24 VLAN10</p>
    <p>port1</p>
    <p>port2</p>
    <p>port3</p>
    <p>port4</p>
    <p>port5</p>
  </div>
  <div class="page">
    <p>Realtime Verification for Real Networks</p>
    <p>ACL1 vlan10</p>
    <p>NATACL2</p>
    <p>ACL2</p>
    <p>FW</p>
    <p>Various functionalities beyond forwarding - filtering (ACL), rewriting (NAT), traffic policy,</p>
    <p>FW rules: dstIP=192.168.0.0/16 port5 dstIP=192.168.10.0/24 VLAN10</p>
    <p>Requirement 1: Network model should be expressive of common functionalities</p>
    <p>port1</p>
    <p>port2</p>
    <p>port3</p>
    <p>port4</p>
    <p>port5</p>
  </div>
  <div class="page">
    <p>Realtime Verification for Real Networks</p>
    <p>ACL1 vlan10</p>
    <p>NATACL2</p>
    <p>ACL2</p>
    <p>FW</p>
    <p>Various functionalities beyond forwarding - filtering (ACL), rewriting (NAT), traffic policy,</p>
    <p>FW rules: dstIP=192.168.0.0/16 port5 dstIP=192.168.10.0/24 VLAN10</p>
    <p>Requirement 1: Network model should be expressive of common functionalities</p>
    <p>port1</p>
    <p>port2</p>
    <p>port3</p>
    <p>port4</p>
    <p>port5</p>
    <p>Multiple fields other than IP prefix - 5-tuples used by ACL, traffic policy, NAT, etc.</p>
    <p>ACL1 rules: dstIP=10.0.0.0/16 dstPort=22 permit dstIP=10.0.1.0/24 srcIP=10.0.2.0/24 dstPort=80 deny</p>
    <p>Requirement 2: Update of ECs should be scalable for multi-field rules</p>
  </div>
  <div class="page">
    <p>Scalability Issue due to Multi-Field Rules (1) ECs based on Ranges: fast for single-dimensional forwarding rules</p>
    <p>Network #fw rules #acl rules # of ECs</p>
    <p>Stanford 3.84103 686 15,100,968</p>
    <p>Purdue 3.52106 2707 &gt;104,743,229</p>
    <p>EC6EC5EC2EC1 EC4 EC8EC7EC3 EC10EC9 111000 01 111000 01 111000 01 111000 01</p>
    <p>EC1 EC4EC2 EC3 111000 01 111000 01</p>
    <p>R3. dstIP=0, dstPort=0: deny R4. dstIP=, dstPort&lt;2: permit</p>
    <p>R1. dstIP=00: forward port2 R2. dstIP=10: forward port2</p>
    <p>ACL rules</p>
    <p>Forwarding rules</p>
    <p>Explosion of ECs - Memory overflow - Long verification time</p>
  </div>
  <div class="page">
    <p>Scalability Issue due to Multi-Field Rules</p>
    <p>$%&amp;y$&amp;y%$%$$%$</p>
    <p>(2) ECs based on Atomic Predicates [AP Verifier, ICNP13]: minimum # of ECs</p>
    <p>challenging to update atomic predicate fast - An update potentially affects all atomic predicates - Checking all atomic predicates is expensive (~10ms)</p>
    <p>c</p>
    <p>c</p>
    <p>c</p>
    <p>d b</p>
    <p>$  %</p>
    <p>dstIP: $%</p>
    <p>EC1 R3. dstIP=0, dstPort=0: deny R4. dstIP=, dstPort&lt;2: permit</p>
    <p>R1. dstIP=00: forward port2 R2. dstIP=10: forward port2</p>
    <p>ACL rules</p>
    <p>Forwarding rules</p>
    <p>EC1 EC1</p>
    <p>EC2</p>
    <p>EC2 EC2</p>
    <p>EC3 EC4 EC3 EC4</p>
    <p>Network #fw rules #acl rules # of ECs</p>
    <p>Stanford 3.84103 686 515</p>
    <p>Purdue 3.52106 2707 4160</p>
  </div>
  <div class="page">
    <p>APKeep</p>
    <p>Modular Network Model  Scalable Update of ECs</p>
  </div>
  <div class="page">
    <p>The Modular Network Model</p>
    <p>ACL1 vlan10</p>
    <p>NATACL2</p>
    <p>ACL2 port1</p>
    <p>port2</p>
    <p>port3</p>
    <p>port4</p>
    <p>port5</p>
    <p>FW</p>
    <p>A Network Device</p>
  </div>
  <div class="page">
    <p>The Modular Network Model</p>
    <p>in permit</p>
    <p>deny</p>
    <p>ACL1</p>
    <p>in permit</p>
    <p>deny</p>
    <p>ACL2</p>
    <p>in rule1</p>
    <p>id</p>
    <p>NAT</p>
    <p>in permit</p>
    <p>deny</p>
    <p>ACL1</p>
    <p>port1 port4</p>
    <p>default</p>
    <p>FW</p>
    <p>port5</p>
    <p>vlan10 port3</p>
    <p>port2</p>
    <p>elements</p>
    <p>A Network Device</p>
  </div>
  <div class="page">
    <p>APKeep</p>
    <p>Modular Network Model  Scalable Update of ECs</p>
  </div>
  <div class="page">
    <p>Equivalence Class in Modular Network Model</p>
    <p>in permit</p>
    <p>deny</p>
    <p>ACL1</p>
    <p>in permit</p>
    <p>deny</p>
    <p>ACL2</p>
    <p>in rule1</p>
    <p>id</p>
    <p>NAT</p>
    <p>in permit</p>
    <p>deny</p>
    <p>ACL1</p>
    <p>port1 port4</p>
    <p>default</p>
    <p>FW</p>
    <p>port5</p>
    <p>vlan10 port3</p>
    <p>d</p>
    <p>a,b,c a,c</p>
    <p>b,d</p>
    <p>b,c</p>
    <p>a,d</p>
    <p>a,b,c</p>
    <p>d</p>
    <p>c d</p>
    <p>a b</p>
    <p>port2</p>
    <p>The model supports general representation of EC</p>
  </div>
  <div class="page">
    <p>Equivalence Class in Modular Network Model</p>
    <p>in permit</p>
    <p>deny</p>
    <p>ACL1</p>
    <p>in permit</p>
    <p>deny</p>
    <p>ACL2</p>
    <p>in rule1</p>
    <p>id</p>
    <p>NAT</p>
    <p>in permit</p>
    <p>deny</p>
    <p>ACL1</p>
    <p>port1 port4</p>
    <p>default</p>
    <p>FW</p>
    <p>port5</p>
    <p>vlan10 port3</p>
    <p>d</p>
    <p>a,b,c a,c</p>
    <p>b,d</p>
    <p>b,c</p>
    <p>a,d</p>
    <p>a,b,c</p>
    <p>d</p>
    <p>c d</p>
    <p>a b</p>
    <p>port2</p>
    <p>predicate a: dstIP=10.0.0.0/16  dstPort !=22</p>
    <p>a</p>
    <p>a</p>
    <p>a</p>
    <p>a a</p>
    <p>The model supports general representation of EC</p>
  </div>
  <div class="page">
    <p>Fast Update of Minimum Number of ECs</p>
    <p>Split a predicate*</p>
    <p>Transfer a predicate</p>
    <p>Merge predicates</p>
    <p>port1 port2 ,</p>
    <p>port1 port2 ,</p>
    <p>port1 port2</p>
    <p>APKeep fast updates the minimum number of ECs (atomic predicates) with three operations</p>
    <p>*Inspired by AP Verifier to compute atomic predicates</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>permit</p>
    <p>deny</p>
    <p>ACL</p>
    <p>port2</p>
    <p>default</p>
    <p>FW port1</p>
    <p>R1. dstIP=0, dstPort=0: deny R2. dstIP=, dstPort&lt;2: permit</p>
    <p>R3. dstIP=00: forward port2 R4. dstIP=10: forward port2</p>
    <p>ACL rules Forwarding rules</p>
    <p>Device</p>
  </div>
  <div class="page">
    <p>Initial State without Rules</p>
    <p>permit</p>
    <p>deny</p>
    <p>ACL</p>
    <p>port2</p>
    <p>default</p>
    <p>FW port1</p>
    <p>a</p>
    <p>a</p>
    <p>$  %</p>
    <p>dstIP: $%</p>
    <p>a</p>
  </div>
  <div class="page">
    <p>Initial State without Rules</p>
    <p>permit</p>
    <p>deny</p>
    <p>ACL</p>
    <p>port2</p>
    <p>default</p>
    <p>FW port1</p>
    <p>a</p>
    <p>a</p>
    <p>No behavior change: no need to update</p>
    <p>$  %</p>
    <p>dstIP: $%</p>
    <p>a</p>
    <p>R1. dstIP=0, dstPort=0: deny ACL rules</p>
    <p>R1</p>
  </div>
  <div class="page">
    <p>Splitting and Transferring Predicates</p>
    <p>permit</p>
    <p>deny</p>
    <p>ACL</p>
    <p>port2</p>
    <p>default</p>
    <p>FW port1</p>
    <p>a</p>
    <p>a</p>
    <p>R1. dstIP=0, dstPort=0: deny R2. dstIP=, dstPort&lt;2: permit</p>
    <p>ACL rules</p>
    <p>$  %</p>
    <p>dstIP: $%</p>
    <p>a</p>
    <p>R2</p>
  </div>
  <div class="page">
    <p>Splitting and Transferring Predicates</p>
    <p>permit</p>
    <p>deny</p>
    <p>ACL</p>
    <p>port2</p>
    <p>default</p>
    <p>FW port1</p>
    <p>a</p>
    <p>a</p>
    <p>Part of a changes behavior from deny to permit</p>
    <p>R1. dstIP=0, dstPort=0: deny R2. dstIP=, dstPort&lt;2: permit</p>
    <p>ACL rules</p>
    <p>$  %</p>
    <p>dstIP: $%</p>
    <p>a</p>
  </div>
  <div class="page">
    <p>Splitting and Transferring Predicates</p>
    <p>permit</p>
    <p>deny</p>
    <p>ACL</p>
    <p>port2</p>
    <p>default</p>
    <p>FW port1</p>
    <p>a</p>
    <p>a</p>
    <p>R1. dstIP=0, dstPort=0: deny R2. dstIP=, dstPort&lt;2: permit</p>
    <p>ACL rules</p>
    <p>$  %</p>
    <p>dstIP: $%</p>
    <p>a</p>
    <p>Transfer part of a from deny to permit</p>
  </div>
  <div class="page">
    <p>Splitting and Transferring Predicates</p>
    <p>permit</p>
    <p>deny</p>
    <p>ACL</p>
    <p>port2</p>
    <p>default</p>
    <p>FW port1</p>
    <p>a</p>
    <p>a</p>
    <p>R1. dstIP=0, dstPort=0: deny R2. dstIP=, dstPort&lt;2: permit</p>
    <p>ACL rules</p>
    <p>$  %</p>
    <p>dstIP: $%</p>
    <p>b</p>
    <p>a</p>
    <p>a</p>
    <p>Split a to b and a-b</p>
    <p>b</p>
    <p>b</p>
    <p>Transfer part of a from deny to permit</p>
  </div>
  <div class="page">
    <p>Splitting and Transferring Predicates</p>
    <p>permit</p>
    <p>deny</p>
    <p>ACL</p>
    <p>port2</p>
    <p>default</p>
    <p>FW port1</p>
    <p>a</p>
    <p>a</p>
    <p>R1. dstIP=0, dstPort=0: deny R2. dstIP=, dstPort&lt;2: permit</p>
    <p>ACL rules</p>
    <p>$  %</p>
    <p>dstIP: $%</p>
    <p>b</p>
    <p>a</p>
    <p>a</p>
    <p>b b</p>
    <p>Transfer part of a from deny to permit</p>
  </div>
  <div class="page">
    <p>Merging Predicates</p>
    <p>R1. dstIP=0, dstPort=0: deny R2. dstIP=, dstPort&lt;2: permit</p>
    <p>R3. dstIP=00: forward port2 R4. dstIP=10: forward port2</p>
    <p>ACL rules Forwarding rules</p>
    <p>permit</p>
    <p>deny</p>
    <p>ACL</p>
    <p>port2</p>
    <p>default</p>
    <p>FW port1</p>
    <p>a</p>
    <p>b a b</p>
    <p>c d d</p>
    <p>c</p>
    <p>f</p>
    <p>e fe</p>
    <p>c and e have the same forwarding behavior</p>
    <p>ac</p>
    <p>ac</p>
    <p>c</p>
    <p>d</p>
    <p>a</p>
    <p>b</p>
    <p>$  %</p>
    <p>dstIP: $%</p>
    <p>d b f b</p>
    <p>c</p>
    <p>c e</p>
  </div>
  <div class="page">
    <p>Merging Predicates</p>
    <p>permit</p>
    <p>deny</p>
    <p>ACL</p>
    <p>port2</p>
    <p>default</p>
    <p>FW port1</p>
    <p>a</p>
    <p>b a b</p>
    <p>c d d</p>
    <p>c</p>
    <p>Merge c and e</p>
    <p>Merge d and f</p>
    <p>R1. dstIP=0, dstPort=0: deny R2. dstIP=, dstPort&lt;2: permit</p>
    <p>R3. dstIP=00: forward port2 R4. dstIP=10: forward port2</p>
    <p>ACL rules Forwarding rules</p>
    <p>ac</p>
    <p>ac</p>
    <p>c</p>
    <p>d</p>
    <p>a</p>
    <p>b</p>
    <p>$  %</p>
    <p>dstIP: $%</p>
    <p>d b d b</p>
    <p>c</p>
    <p>c c</p>
  </div>
  <div class="page">
    <p>M od</p>
    <p>el model builder</p>
    <p>model updater</p>
    <p>Port-Predicate Map (PPM)</p>
    <p>forwarding graph constructor</p>
    <p>dataplane config</p>
    <p>invariant checker policy checker what-if analysis</p>
    <p>V er</p>
    <p>if ie</p>
    <p>r</p>
    <p>build update</p>
    <p>dataplane update</p>
    <p>config files, topology</p>
    <p>config parser update parser</p>
    <p>FIB/ACL/NAT()</p>
    <p>D ri</p>
    <p>ve r</p>
    <p>Network</p>
    <p>System Implementation</p>
    <p>Using AP Verifier and APT to encode match fields and packet rewriting action with BDD (BDD library: JDD)</p>
    <p>Parsing config files and rule updates into vendor-neutral format</p>
    <p>Verification applications running on the model (policy checker still under development)</p>
    <p>AP Verifier and APT are open source, available at: http://www.cs.utexas.edu/users/lam/NRL/Atomic_Predicates_Verifiers.html</p>
  </div>
  <div class="page">
    <p>Evaluation  Dataset 8 Datasets from Stanford, Internet2, Purdue, and Delta-net  6 datasets with only IP forwarding rules  2 datasets with both IP forwarding rules and ACL rules</p>
    <p>IP forwarding rules only</p>
    <p>IP forwarding rules + ACL rules</p>
  </div>
  <div class="page">
    <p>Evaluation  Verification Speed</p>
    <p>Verification: checking loops after each update. Setting: Linux desktop with 3.0GHz Intel Core i5 CPU and 32GB RAM</p>
  </div>
  <div class="page">
    <p>Evaluation  Verification Speed</p>
    <p>+ ACL 90%: &lt;250s</p>
    <p>IP forwarding only 90%: &lt;50s</p>
    <p>Verification: checking loops after each update. Setting: Linux desktop with 3.0GHz Intel Core i5 CPU and 32GB RAM</p>
  </div>
  <div class="page">
    <p>Evaluation  Verification Speed Our multi-field</p>
    <p>extension of Delta-net</p>
    <p>Memory overflow: &gt;32GBTimeout: &gt;24 hours</p>
    <p>Verification: checking loops after each update. Setting: Linux desktop with 3.0GHz Intel Core i5 CPU and 32GB RAM</p>
  </div>
  <div class="page">
    <p>Conclusion APKeep: checking correctness of data plane with real devices in real time</p>
    <p>p Modular network model: expressive and extensible for real network devices</p>
    <p>p Scalable update of ECs: fast updating the minimum number of ECs (&lt;1ms)</p>
    <p>Future work</p>
    <p>p Checking operator intent beyond reachability</p>
    <p>p Parallelizing the update of predicates</p>
  </div>
  <div class="page">
    <p>Thanks for your attention</p>
    <p>Peng Zhang p-zhang@xjtu.edu.cn</p>
  </div>
</Presentation>
