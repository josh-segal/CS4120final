<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Anshul Gandhi, Mor Harchol-Balter Carnegie Mellon University</p>
    <p>Michael A. Kozuch Intel Labs</p>
    <p>Timothy Zhu Carnegie Mellon University</p>
  </div>
  <div class="page">
    <p>Load Balancer</p>
    <p>Application Tier</p>
    <p>Caching Tier Database</p>
    <p>Why have a caching tier? 1. Reduce database (DB) load</p>
    <p>req/sec</p>
    <p>DB req/sec</p>
    <p>(DB &lt;&lt; )</p>
  </div>
  <div class="page">
    <p>Why have a caching tier? 1. Reduce database (DB) load</p>
    <p>(DB &lt;&lt; )</p>
    <p>DB response time rapidly increases at high DB load M</p>
    <p>e a</p>
    <p>n r</p>
    <p>e sp</p>
    <p>o n</p>
    <p>se t</p>
    <p>im e</p>
    <p>( m</p>
    <p>s)</p>
    <p>DB req/sec</p>
  </div>
  <div class="page">
    <p>Load Balancer</p>
    <p>Application Tier</p>
    <p>Caching Tier Database</p>
    <p>Why have a caching tier? 1. Reduce database (DB) load 2. Reduce latency</p>
    <p>req/sec</p>
    <p>DB req/sec</p>
    <p>(DB &lt;&lt; )</p>
    <p>Load</p>
    <p>&gt; 1/3 of the cost</p>
    <p>[Krioukov`10] [Chen`08]</p>
    <p>[Ousterhout`10]</p>
  </div>
  <div class="page">
    <p>Shrink your cache during low load</p>
    <p>Load Balancer</p>
    <p>Application Tier</p>
    <p>Caching Tier Database</p>
    <p>req/sec</p>
    <p>DB req/sec</p>
    <p>Load</p>
    <p>&gt; 1/3 of the cost</p>
    <p>[Krioukov`10] [Chen`08]</p>
    <p>[Ousterhout`10]</p>
  </div>
  <div class="page">
    <p>DB too high?</p>
  </div>
  <div class="page">
    <p>DB too high?</p>
  </div>
  <div class="page">
    <p>Caching Tier</p>
    <p>Load Balancer</p>
    <p>Application Tier</p>
    <p>Database</p>
    <p>Goal: Keep DB = (1-p) low</p>
    <p>req/sec</p>
    <p>DB req/sec</p>
    <p>p</p>
    <p>(1-p) = DB</p>
    <p>If  drops (1-p) can be higher p can be lower</p>
    <p>SAVE $$$</p>
  </div>
  <div class="page">
    <p>No, we can afford a lower hit rate at low load</p>
  </div>
  <div class="page">
    <p>No, we can afford a lower hit rate at low load</p>
  </div>
  <div class="page">
    <p>Small decrease in caching tier size</p>
    <p>Small decrease in hit rate</p>
    <p>Uniform</p>
    <p>% of data cached</p>
    <p>H it</p>
    <p>r a</p>
    <p>te ,</p>
    <p>p</p>
    <p>It depends on the popularity distribution</p>
  </div>
  <div class="page">
    <p>Large decrease in caching tier size</p>
    <p>Small decrease in hit rate</p>
    <p>Zipf</p>
    <p>% of data cached</p>
    <p>H it</p>
    <p>r a</p>
    <p>te ,</p>
    <p>p</p>
    <p>It depends on the popularity distribution</p>
  </div>
  <div class="page">
    <p>Load</p>
    <p>Peak to low load ratio</p>
    <p>% c</p>
    <p>a ch</p>
    <p>e r</p>
    <p>e d</p>
    <p>u ct</p>
    <p>io n</p>
  </div>
  <div class="page">
    <p>No, we can afford a lower hit rate at low load</p>
    <p>Small decrease in hit rate</p>
    <p>Large decrease in caching tier size Zipf</p>
  </div>
  <div class="page">
    <p>a. Is there a problem?</p>
    <p>b. What can we do about it?</p>
    <p>No, we can afford a lower hit rate at low load</p>
    <p>Small decrease in hit rate</p>
    <p>Large decrease in caching tier size Zipf</p>
  </div>
  <div class="page">
    <p>Performance can temporarily suffer if we lose a lot of hot data</p>
    <p>M e</p>
    <p>a n</p>
    <p>r e</p>
    <p>sp o</p>
    <p>n se</p>
    <p>t im</p>
    <p>e (</p>
    <p>m s)</p>
    <p>Time (min)</p>
    <p>Shrink the</p>
    <p>cache</p>
    <p>Response time</p>
    <p>stabilizes</p>
  </div>
  <div class="page">
    <p>Caching Tier</p>
    <p>Start state End state</p>
    <p>Caching Tier</p>
  </div>
  <div class="page">
    <p>Caching Tier</p>
    <p>Caching Tier</p>
    <p>Start state End state</p>
    <p>O p</p>
    <p>ti o</p>
    <p>n 1</p>
    <p>O</p>
    <p>p ti</p>
    <p>o n</p>
    <p>We need to transfer the hot data before shrinking the cache</p>
    <p>Caching Tier</p>
    <p>Caching Tier T</p>
    <p>ra n</p>
    <p>sfe r</p>
    <p>Caching Tier</p>
    <p>P ri</p>
    <p>m a</p>
    <p>ry</p>
    <p>R e</p>
    <p>ti ri</p>
    <p>n g</p>
  </div>
  <div class="page">
    <p>Transferring the hot data before shrinking the cache eliminates performance degradation</p>
    <p>M e</p>
    <p>a n</p>
    <p>r e</p>
    <p>sp o</p>
    <p>n se</p>
    <p>t im</p>
    <p>e (</p>
    <p>m s)</p>
    <p>Time (min)</p>
    <p>Shrink the</p>
    <p>cache</p>
    <p>Response time</p>
    <p>stabilizes</p>
    <p>Nave solution</p>
    <p>Our solution</p>
  </div>
  <div class="page">
    <p>No, we can afford a lower hit rate at low load</p>
    <p>Small decrease in hit rate</p>
    <p>Large decrease in caching tier size Zipf</p>
    <p>We need to transfer the hot data before shrinking the cache</p>
    <p>Use less cache</p>
    <p>Save $$$ Low load</p>
    <p>Load Balancer</p>
    <p>Application Tier Caching Tier Database</p>
    <p>req/sec</p>
    <p>DB req/sec</p>
    <p>Load</p>
  </div>
</Presentation>
