<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Time-aware Provenance for Distributed Systems</p>
    <p>Wenchao Zhou, Ling Ding, Andreas Haeberlen, Zachary Ives, Boon Thau Loo</p>
    <p>University of Pennsylvania</p>
  </div>
  <div class="page">
    <p>Provenance for Distributed Systems</p>
    <p>Goal: Develop capability to answer diagnostic questions</p>
    <p>We need to tackle additional challenges  Provenance in transient and inconsistent state  Explanation for state changes  Security without trusted nodes</p>
    <p>Nodes may be compromised by the attacker</p>
  </div>
  <div class="page">
    <p>Provenance in Dynamic Environments</p>
    <p>Reason - insertion of link(a,b,1)</p>
    <p>Provenance for system state Not track dependency between changes Possible solution: differencing the current provenance with a previous version. But, what about a deletion? No current version to compare</p>
    <p>Why did node cs route to node</p>
    <p>a change?</p>
  </div>
  <div class="page">
    <p>Provenance in Dynamic Environments</p>
    <p>Explicitly capture time Handle question asked when the system is in transient state Consistent view of the provenance graph</p>
    <p>c: minCost(@c,a,4) b: minCost(@b,a,3)</p>
    <p>Who is right?</p>
  </div>
  <div class="page">
    <p>Time-aware Provenance</p>
    <p>Explicitly capture causalities between state changes Explain the INSERT / DELETE of tuples Event-based execution triggered by state changes</p>
    <p>sp2: pathCost(@Z,D,C1+C2) :- link(@S,Z,C1), minCost(@S,D,C2). sp2a: pathCost(@Z,D,C1+C2) :- link(@S,Z,C1), minCost(@S,D,C2). sp2b: pathCost(@Z,D,C1+C2) :- link(@S,Z,C1), minCost(@S,D,C2).</p>
  </div>
  <div class="page">
    <p>Time-aware Provenance</p>
    <p>Explicitly capture causalities between state changes Explain the INSERT / DELETE of tuples Event-based execution triggered by state changes Update due to constraints (primary keys, aggregation)</p>
    <p>sp3: minCost(@S,D,MIN&lt;C&gt;) :- pathCost(@S,D,C). insertion of minCost(@c,a,4) caused deletion of minCost(@c,a,5)</p>
  </div>
  <div class="page">
    <p>TAP Provenance Model</p>
    <p>Update due to constraints</p>
    <p>Rule triggering</p>
    <p>Why did node cs route to</p>
    <p>node a change?</p>
    <p>link(@b,c,3) exists in time [t1, t2] 7</p>
  </div>
  <div class="page">
    <p>Provenance Maintenance</p>
    <p>Provenance with temporal dimension Versions of provenance Expensive  provenance explosion</p>
    <p>Active maintenance Provenance deltas  deltas between adjacent versions Incrementally applied in querying</p>
    <p>Reactive maintenance Input logs  communications and update of base tuples Reconstruct provenance by deterministic replay Long-running systems? Periodic snapshots</p>
    <p>M ai</p>
    <p>nt en</p>
    <p>an ce</p>
    <p>v s.</p>
    <p>Q ue</p>
    <p>ry in</p>
    <p>g pe</p>
    <p>rf or</p>
    <p>m an</p>
    <p>ce</p>
  </div>
  <div class="page">
    <p>Secure Provenance Querying</p>
    <p>Byzantine adversaries May have compromised an arbitrary subset of the nodes May have complete control over the nodes  arbitrary behavior</p>
    <p>Guarantees Idealism: Always get correct forensics results (not possible!) Practicality: The conservative model requires compromises</p>
    <p>May be incomplete, but, it will identify at least one faulty node</p>
  </div>
  <div class="page">
    <p>Thank You</p>
  </div>
</Presentation>
