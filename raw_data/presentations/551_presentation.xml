<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>The Phantom Tollbooth: Privacy-Preserving Toll Collection in the Presence of Driver Collusion</p>
    <p>Sarah Meiklejohn (UC San Diego) Keaton Mowery (UC San Diego) Stephen Checkoway (UC San Diego) Hovav Shacham (UC San Diego)</p>
  </div>
  <div class="page">
    <p>Motivation: how tolling works today</p>
  </div>
  <div class="page">
    <p>Motivation: how tolling works today</p>
  </div>
  <div class="page">
    <p>Motivation: how tolling works today</p>
  </div>
  <div class="page">
    <p>Motivation: how tolling works today</p>
    <p>This process leaves a lot to be desired in terms of flexibility:</p>
  </div>
  <div class="page">
    <p>Motivation: how tolling works today</p>
    <p>This process leaves a lot to be desired in terms of flexibility:</p>
    <p>How do we charge more according to the time of day?</p>
  </div>
  <div class="page">
    <p>Motivation: how tolling works today</p>
    <p>This process leaves a lot to be desired in terms of flexibility:</p>
    <p>How do we charge more according to the time of day?</p>
    <p>Or as drivers enter city centers?</p>
  </div>
  <div class="page">
    <p>Motivation: how tolling works today</p>
  </div>
  <div class="page">
    <p>Motivation: how tolling works today</p>
  </div>
  <div class="page">
    <p>Motivation: how tolling works today</p>
  </div>
  <div class="page">
    <p>Motivation: how tolling works today</p>
    <p>Core tension between privacy and desire for more flexible toll pricing</p>
  </div>
  <div class="page">
    <p>Motivation: how tolling works today</p>
    <p>Core tension between privacy and desire for more flexible toll pricing</p>
    <p>In this talk well see our system, Milo, which allows for fine-grained pricing policies without sacrificing drivers privacy</p>
  </div>
  <div class="page">
    <p>Motivation: how tolling works today</p>
    <p>Core tension between privacy and desire for more flexible toll pricing</p>
    <p>In this talk well see our system, Milo, which allows for fine-grained pricing policies without sacrificing drivers privacy</p>
    <p>In the process, we strongly guarantee that drivers remain honest</p>
  </div>
  <div class="page">
    <p>Previous work [BKS05,BC06,TDKP07,dJJ08,...]</p>
  </div>
  <div class="page">
    <p>Previous work [BKS05,BC06,TDKP07,dJJ08,...]</p>
    <p>USENIX Security 2009: VPriv [PBB]</p>
  </div>
  <div class="page">
    <p>Previous work [BKS05,BC06,TDKP07,dJJ08,...]</p>
    <p>USENIX Security 2009: VPriv [PBB]</p>
    <p>Fine-grained policy: uses small road segments (where,when)</p>
  </div>
  <div class="page">
    <p>Previous work [BKS05,BC06,TDKP07,dJJ08,...]</p>
    <p>USENIX Security 2009: VPriv [PBB]</p>
    <p>Fine-grained policy: uses small road segments (where,when)</p>
    <p>Privacy: uses Tor to maintain anonymity while driver uploads segments</p>
  </div>
  <div class="page">
    <p>Previous work [BKS05,BC06,TDKP07,dJJ08,...]</p>
    <p>USENIX Security 2009: VPriv [PBB]</p>
    <p>Fine-grained policy: uses small road segments (where,when)</p>
    <p>Privacy: uses Tor to maintain anonymity while driver uploads segments</p>
    <p>Honesty: relies on audits wherein driver is asked to verify locations</p>
  </div>
  <div class="page">
    <p>Previous work [BKS05,BC06,TDKP07,dJJ08,...]</p>
    <p>USENIX Security 2009: VPriv [PBB]</p>
    <p>Fine-grained policy: uses small road segments (where,when)</p>
    <p>Privacy: uses Tor to maintain anonymity while driver uploads segments</p>
    <p>Honesty: relies on audits wherein driver is asked to verify locations</p>
    <p>USENIX Security 2010: PrETP [BRTPVG]</p>
    <p>Fine-grained policy: again uses small road segments</p>
    <p>Privacy: drivers commit to segments in a way that eliminates need for Tor</p>
    <p>Honesty: again relies on audits</p>
  </div>
  <div class="page">
    <p>Previous work [BKS05,BC06,TDKP07,dJJ08,...]</p>
    <p>USENIX Security 2009: VPriv [PBB]</p>
    <p>Fine-grained policy: uses small road segments (where,when)</p>
    <p>Privacy: uses Tor to maintain anonymity while driver uploads segments</p>
    <p>Honesty: relies on audits wherein driver is asked to verify locations</p>
    <p>USENIX Security 2010: PrETP [BRTPVG]</p>
    <p>Fine-grained policy: again uses small road segments</p>
    <p>Privacy: drivers commit to segments in a way that eliminates need for Tor</p>
    <p>Honesty: again relies on audits</p>
  </div>
  <div class="page">
    <p>A potential problem: keeping colluding drivers honest</p>
  </div>
  <div class="page">
    <p>A potential problem: keeping colluding drivers honest</p>
    <p>In these audits, we see a challenge/response behavior:</p>
  </div>
  <div class="page">
    <p>A potential problem: keeping colluding drivers honest</p>
    <p>In these audits, we see a challenge/response behavior:</p>
  </div>
  <div class="page">
    <p>A potential problem: keeping colluding drivers honest</p>
    <p>In these audits, we see a challenge/response behavior:</p>
  </div>
  <div class="page">
    <p>A potential problem: keeping colluding drivers honest</p>
    <p>In these audits, we see a challenge/response behavior:</p>
  </div>
  <div class="page">
    <p>A potential problem: keeping colluding drivers honest</p>
    <p>In these audits, we see a challenge/response behavior:</p>
  </div>
  <div class="page">
    <p>A potential problem: keeping colluding drivers honest</p>
    <p>In these audits, we see a challenge/response behavior:</p>
  </div>
  <div class="page">
    <p>A potential problem: keeping colluding drivers honest</p>
    <p>In these audits, we see a challenge/response behavior:</p>
    <p>Proof of payment</p>
  </div>
  <div class="page">
    <p>A potential problem: keeping colluding drivers honest</p>
    <p>In these audits, we see a challenge/response behavior:</p>
    <p>Proof of payment</p>
  </div>
  <div class="page">
    <p>A potential problem: keeping colluding drivers honest</p>
    <p>So the authority reveals to the driver the segment in which he was seen! This information can then be shared to help drivers avoid cameras in the future</p>
    <p>In these audits, we see a challenge/response behavior:</p>
    <p>Proof of payment</p>
  </div>
  <div class="page">
    <p>A potential problem: keeping colluding drivers honest</p>
    <p>So the authority reveals to the driver the segment in which he was seen! This information can then be shared to help drivers avoid cameras in the future</p>
    <p>In these audits, we see a challenge/response behavior:</p>
    <p>Proof of payment</p>
  </div>
  <div class="page">
    <p>A potential problem: keeping colluding drivers honest</p>
    <p>So the authority reveals to the driver the segment in which he was seen! This information can then be shared to help drivers avoid cameras in the future</p>
    <p>In these audits, we see a challenge/response behavior:</p>
    <p>Proof of payment</p>
  </div>
  <div class="page">
    <p>A potential problem: keeping colluding drivers honest</p>
    <p>So the authority reveals to the driver the segment in which he was seen! This information can then be shared to help drivers avoid cameras in the future</p>
    <p>In these audits, we see a challenge/response behavior:</p>
    <p>Proof of payment USENIX Security 2011: Milo</p>
    <p>Fine-grained policy: uses same small road segments (where,when)</p>
    <p>Privacy: drivers commit to segments in a way similar to PrETP</p>
    <p>Honesty: audit protocol no longer reveals locations to drivers</p>
  </div>
  <div class="page">
    <p>Outline</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Cryptographic background</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Cryptographic background Milo</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Cryptographic background Milo</p>
    <p>Evaluation</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Cryptographic background Milo</p>
    <p>Evaluation Conclusions</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Cryptographic background Milo</p>
    <p>Evaluation Conclusions</p>
    <p>Cryptographic background Commitment schemes Zero-knowledge proofs</p>
    <p>Blind identity-based encryption</p>
  </div>
  <div class="page">
    <p>Commitments [BCC88,P91]</p>
  </div>
  <div class="page">
    <p>Commitments [BCC88,P91]</p>
  </div>
  <div class="page">
    <p>Commitments [BCC88,P91]</p>
    <p>My favorite number is 42</p>
  </div>
  <div class="page">
    <p>Commitments [BCC88,P91]</p>
    <p>number is 42</p>
  </div>
  <div class="page">
    <p>Commitments [BCC88,P91]</p>
    <p>My favorite number is 42</p>
  </div>
  <div class="page">
    <p>Commitments [BCC88,P91]</p>
    <p>My favorite number is 42</p>
  </div>
  <div class="page">
    <p>Commitments [BCC88,P91]</p>
    <p>My favorite number is 42</p>
  </div>
  <div class="page">
    <p>Commitments [BCC88,P91]</p>
    <p>My favorite number is 42</p>
  </div>
  <div class="page">
    <p>Commitments [BCC88,P91]</p>
    <p>Open(c)</p>
    <p>My favorite number is 42</p>
  </div>
  <div class="page">
    <p>Commitments [BCC88,P91]</p>
    <p>Open(c)</p>
    <p>My favorite number is 42</p>
  </div>
  <div class="page">
    <p>Commitments [BCC88,P91]</p>
    <p>There are two important properties of commitments:</p>
    <p>Open(c)</p>
    <p>My favorite number is 42</p>
  </div>
  <div class="page">
    <p>Commitments [BCC88,P91]</p>
    <p>There are two important properties of commitments:</p>
    <p>Hiding: Bob didnt know the value in c until Alice gave him Open(c)</p>
    <p>Open(c)</p>
    <p>My favorite number is 42</p>
  </div>
  <div class="page">
    <p>Commitments [BCC88,P91]</p>
    <p>There are two important properties of commitments:</p>
    <p>Hiding: Bob didnt know the value in c until Alice gave him Open(c)</p>
    <p>Binding: Alice couldnt change the value in c after giving Bob the envelope</p>
    <p>Open(c)</p>
    <p>My favorite number is 42</p>
  </div>
  <div class="page">
    <p>Zero-knowledge proofs [GMR89,BdSMP91]</p>
    <p>c =</p>
  </div>
  <div class="page">
    <p>Zero-knowledge proofs [GMR89,BdSMP91]</p>
    <p>The value in c is between 0</p>
    <p>and 100 c =</p>
  </div>
  <div class="page">
    <p>Zero-knowledge proofs [GMR89,BdSMP91]</p>
    <p>The value in c is between 0</p>
    <p>and 100 c =</p>
  </div>
  <div class="page">
    <p>Zero-knowledge proofs [GMR89,BdSMP91]</p>
    <p>The value in c is between 0</p>
    <p>and 100 c =</p>
  </div>
  <div class="page">
    <p>Zero-knowledge proofs [GMR89,BdSMP91]</p>
    <p>The value in c is between 0</p>
    <p>and 100 c =</p>
    <p>Okay, I believe you!</p>
  </div>
  <div class="page">
    <p>Zero-knowledge proofs [GMR89,BdSMP91]</p>
    <p>The value in c is between 0</p>
    <p>and 100 c =</p>
    <p>There are two important properties of zero-knowledge proofs:</p>
    <p>Okay, I believe you!</p>
  </div>
  <div class="page">
    <p>Zero-knowledge proofs [GMR89,BdSMP91]</p>
    <p>The value in c is between 0</p>
    <p>and 100 c =</p>
    <p>There are two important properties of zero-knowledge proofs:</p>
    <p>Soundness: Alice cant convince Bob of something that isnt true</p>
    <p>Okay, I believe you!</p>
  </div>
  <div class="page">
    <p>Zero-knowledge proofs [GMR89,BdSMP91]</p>
    <p>The value in c is between 0</p>
    <p>and 100 c =</p>
    <p>There are two important properties of zero-knowledge proofs:</p>
    <p>Soundness: Alice cant convince Bob of something that isnt true</p>
    <p>Zero knowledge: Bob doesnt learn anything about Alices exact number</p>
    <p>Okay, I believe you!</p>
  </div>
  <div class="page">
    <p>Zero-knowledge proofs [GMR89,BdSMP91]</p>
    <p>The value in c is between 0</p>
    <p>and 100 c =</p>
    <p>There are two important properties of zero-knowledge proofs:</p>
    <p>Soundness: Alice cant convince Bob of something that isnt true</p>
    <p>Zero knowledge: Bob doesnt learn anything about Alices exact number</p>
    <p>Zero-knowledge proofs are much more general than this, but this range proof is the only type we will need</p>
    <p>Okay, I believe you!</p>
  </div>
  <div class="page">
    <p>Blind identity-based encryption (IBE)</p>
  </div>
  <div class="page">
    <p>Blind identity-based encryption (IBE)</p>
    <p>Regular [S84,BF01,C01]:</p>
  </div>
  <div class="page">
    <p>Blind identity-based encryption (IBE)</p>
    <p>Regular [S84,BF01,C01]:</p>
    <p>c = Enc(Bob, m)</p>
  </div>
  <div class="page">
    <p>Blind identity-based encryption (IBE)</p>
    <p>Regular [S84,BF01,C01]:</p>
    <p>c = Enc(Bob, m)</p>
  </div>
  <div class="page">
    <p>Blind identity-based encryption (IBE)</p>
    <p>Regular [S84,BF01,C01]:</p>
    <p>c = Enc(Bob, m) Bob</p>
  </div>
  <div class="page">
    <p>Blind identity-based encryption (IBE)</p>
    <p>Regular [S84,BF01,C01]:</p>
    <p>c = Enc(Bob, m) Bob</p>
    <p>skBob</p>
  </div>
  <div class="page">
    <p>Blind identity-based encryption (IBE)</p>
    <p>Regular [S84,BF01,C01]:</p>
    <p>c = Enc(Bob, m) Bob</p>
    <p>skBob</p>
    <p>m = Dec(skBob,c)</p>
  </div>
  <div class="page">
    <p>Blind identity-based encryption (IBE)</p>
    <p>Regular [S84,BF01,C01]:</p>
    <p>Blind [GH07]:</p>
    <p>c = Enc(Bob, m) Bob</p>
    <p>skBob</p>
    <p>m = Dec(skBob,c)</p>
  </div>
  <div class="page">
    <p>Blind identity-based encryption (IBE)</p>
    <p>Regular [S84,BF01,C01]:</p>
    <p>Blind [GH07]:</p>
    <p>c = Enc(Bob, m) Bob</p>
    <p>skBob</p>
    <p>c = Enc(Bob, m)</p>
    <p>m = Dec(skBob,c)</p>
  </div>
  <div class="page">
    <p>Blind identity-based encryption (IBE)</p>
    <p>Regular [S84,BF01,C01]:</p>
    <p>Blind [GH07]:</p>
    <p>c = Enc(Bob, m) Bob</p>
    <p>skBob</p>
    <p>c = Enc(Bob, m) req(Bob)</p>
    <p>m = Dec(skBob,c)</p>
  </div>
  <div class="page">
    <p>Blind identity-based encryption (IBE)</p>
    <p>Regular [S84,BF01,C01]:</p>
    <p>Blind [GH07]:</p>
    <p>c = Enc(Bob, m) Bob</p>
    <p>skBob</p>
    <p>c = Enc(Bob, m) req(Bob)</p>
    <p>resp(skBob)</p>
    <p>m = Dec(skBob,c)</p>
  </div>
  <div class="page">
    <p>Blind identity-based encryption (IBE)</p>
    <p>Regular [S84,BF01,C01]:</p>
    <p>Blind [GH07]:</p>
    <p>c = Enc(Bob, m) Bob</p>
    <p>skBob</p>
    <p>c = Enc(Bob, m) req(Bob)</p>
    <p>resp(skBob)</p>
    <p>m = Dec(skBob,c)</p>
  </div>
  <div class="page">
    <p>Blind identity-based encryption (IBE)</p>
    <p>Regular [S84,BF01,C01]:</p>
    <p>Blind [GH07]:</p>
    <p>c = Enc(Bob, m) Bob</p>
    <p>skBob</p>
    <p>c = Enc(Bob, m) req(Bob)</p>
    <p>resp(skBob)</p>
    <p>m = Dec(skBob,c)</p>
    <p>So the authority doesnt learn which key is being extracted</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Cryptographic background</p>
    <p>Milo A generic toll collection system A look back at (adapted) PrETP</p>
    <p>A new Audit protocol</p>
    <p>Evaluation Conclusions</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>segments</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>segments</p>
    <p>A</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>segments</p>
    <p>A</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>segments</p>
    <p>A B</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>(A-B,13:01-13:02) segments</p>
    <p>A B</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>(A-B,13:01-13:02) segments</p>
    <p>A B</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>(A-B,13:01-13:02) segments</p>
    <p>A B</p>
    <p>C</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>(A-B,13:01-13:02) (B-C,13:02-13:03)</p>
    <p>segments</p>
    <p>A B</p>
    <p>C</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>(A-B,13:01-13:02) (B-C,13:02-13:03)</p>
    <p>segments</p>
    <p>A B</p>
    <p>C</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>(A-B,13:01-13:02) (B-C,13:02-13:03)</p>
    <p>segments</p>
    <p>A B</p>
    <p>C</p>
    <p>D</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>(A-B,13:01-13:02) (B-C,13:02-13:03) (C-D,13:03-13:04)</p>
    <p>segments</p>
    <p>A B</p>
    <p>C</p>
    <p>D</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>OBU</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>OBU segments</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>OBU</p>
    <p>TSP</p>
    <p>segments</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>Payment</p>
    <p>OBU</p>
    <p>TSP</p>
    <p>segments</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>Payment</p>
    <p>OBU</p>
    <p>TSP</p>
    <p>segments</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>Check information and charge driver what they owe</p>
    <p>Payment</p>
    <p>OBU</p>
    <p>TSP</p>
    <p>segments</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>Check information and charge driver what they owe</p>
    <p>Payment</p>
    <p>OBU</p>
    <p>TSP</p>
    <p>TC</p>
    <p>segments</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>Check information and charge driver what they owe</p>
    <p>Payment</p>
    <p>OBU</p>
    <p>TSP</p>
    <p>TC</p>
    <p>segments</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>Check information and charge driver what they owe</p>
    <p>Audit</p>
    <p>Payment</p>
    <p>OBU</p>
    <p>TSP</p>
    <p>TC</p>
    <p>segments</p>
  </div>
  <div class="page">
    <p>How privacy-preserving toll pricing works</p>
    <p>Check information and charge driver what they owe</p>
    <p>Audit</p>
    <p>Payment</p>
    <p>OBU</p>
    <p>TSP</p>
    <p>TC</p>
    <p>Check outcome of Audit to ensure driver is being honest</p>
    <p>segments</p>
  </div>
  <div class="page">
    <p>An adapted version of PrETP</p>
  </div>
  <div class="page">
    <p>An adapted version of PrETP</p>
    <p>{ci,i}i</p>
  </div>
  <div class="page">
    <p>An adapted version of PrETP</p>
    <p>{ci,i}i</p>
    <p>Commitment to segment</p>
    <p>price pi</p>
  </div>
  <div class="page">
    <p>An adapted version of PrETP</p>
    <p>{ci,i}i</p>
    <p>NIZK that the value in ci is in the proper</p>
    <p>range</p>
    <p>Commitment to segment</p>
    <p>price pi</p>
  </div>
  <div class="page">
    <p>An adapted version of PrETP</p>
    <p>{ci,i}i</p>
  </div>
  <div class="page">
    <p>An adapted version of PrETP</p>
    <p>{ci,i}i</p>
  </div>
  <div class="page">
    <p>An adapted version of PrETP</p>
    <p>{ci,i}i</p>
  </div>
  <div class="page">
    <p>An adapted version of PrETP</p>
    <p>{ci,i}i</p>
  </div>
  <div class="page">
    <p>An adapted version of PrETP</p>
    <p>{ci,i}i</p>
    <p>(where,when)</p>
  </div>
  <div class="page">
    <p>An adapted version of PrETP</p>
    <p>{ci,i}i</p>
    <p>(where,when)</p>
  </div>
  <div class="page">
    <p>An adapted version of PrETP</p>
    <p>{ci,i}i</p>
    <p>(where,when)</p>
    <p>Find commitment cj for</p>
    <p>(where,when)</p>
  </div>
  <div class="page">
    <p>An adapted version of PrETP</p>
    <p>{ci,i}i</p>
    <p>(where,when) cj, Open(cj)</p>
    <p>Find commitment cj for</p>
    <p>(where,when)</p>
  </div>
  <div class="page">
    <p>An adapted version of PrETP</p>
    <p>{ci,i}i</p>
    <p>(where,when) cj, Open(cj)</p>
    <p>Find commitment cj for</p>
    <p>(where,when)</p>
  </div>
  <div class="page">
    <p>An adapted version of PrETP</p>
    <p>{ci,i}i</p>
    <p>(where,when) cj, Open(cj)</p>
    <p>NIZK zero knowledge and commitment hiding guarantee driver privacy</p>
    <p>NIZK soundness guarantees price pi is in the right range (e.g., non-negative)</p>
    <p>Commitment binding guarantees cj is the right commitment for (where,when)</p>
    <p>Find commitment cj for</p>
    <p>(where,when)</p>
  </div>
  <div class="page">
    <p>PrETP with sugar on top: our new Audit protocol</p>
  </div>
  <div class="page">
    <p>PrETP with sugar on top: our new Audit protocol</p>
    <p>{ci,Ci,i}i</p>
  </div>
  <div class="page">
    <p>PrETP with sugar on top: our new Audit protocol</p>
    <p>{ci,Ci,i}i</p>
    <p>Blind IBE of the opening to ci, using</p>
    <p>(where,when) as identity</p>
  </div>
  <div class="page">
    <p>PrETP with sugar on top: our new Audit protocol</p>
    <p>{ci,Ci,i}i</p>
  </div>
  <div class="page">
    <p>PrETP with sugar on top: our new Audit protocol</p>
    <p>{ci,Ci,i}i</p>
  </div>
  <div class="page">
    <p>PrETP with sugar on top: our new Audit protocol</p>
    <p>{ci,Ci,i}i</p>
  </div>
  <div class="page">
    <p>PrETP with sugar on top: our new Audit protocol</p>
    <p>{ci,Ci,i}i</p>
  </div>
  <div class="page">
    <p>PrETP with sugar on top: our new Audit protocol</p>
    <p>{ci,Ci,i}i</p>
    <p>req(where,when)</p>
  </div>
  <div class="page">
    <p>PrETP with sugar on top: our new Audit protocol</p>
    <p>{ci,Ci,i}i</p>
    <p>req(where,when)</p>
  </div>
  <div class="page">
    <p>PrETP with sugar on top: our new Audit protocol</p>
    <p>{ci,Ci,i}i</p>
    <p>req(where,when) resp(skwhere,when)</p>
  </div>
  <div class="page">
    <p>PrETP with sugar on top: our new Audit protocol</p>
    <p>{ci,Ci,i}i</p>
    <p>req(where,when) resp(skwhere,when)</p>
  </div>
  <div class="page">
    <p>PrETP with sugar on top: our new Audit protocol</p>
    <p>{ci,Ci,i}i</p>
    <p>req(where,when) resp(skwhere,when)</p>
    <p>NIZK zero knowledge and commitment hiding guarantee driver privacy</p>
    <p>NIZK soundness guarantees price pi is in the right range (e.g., non-negative)</p>
    <p>Commitment binding guarantees cj is the right commitment for (where,when)</p>
  </div>
  <div class="page">
    <p>PrETP with sugar on top: our new Audit protocol</p>
    <p>{ci,Ci,i}i</p>
    <p>req(where,when) resp(skwhere,when)</p>
    <p>NIZK zero knowledge and commitment hiding guarantee driver privacy</p>
    <p>NIZK soundness guarantees price pi is in the right range (e.g., non-negative)</p>
    <p>Commitment binding guarantees cj is the right commitment for (where,when)</p>
    <p>IBE blindness guarantees that driver doesnt learn segment (where,when)</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Cryptographic background Milo</p>
    <p>Evaluation Implementation details</p>
    <p>Milos performance Conclusions</p>
  </div>
  <div class="page">
    <p>Implementation</p>
  </div>
  <div class="page">
    <p>Implementation</p>
    <p>Used MIRACL [Scott] for blind IBE, ZKPDL [MEKHL10] for commitments and NIZKs</p>
  </div>
  <div class="page">
    <p>Implementation</p>
    <p>Used MIRACL [Scott] for blind IBE, ZKPDL [MEKHL10] for commitments and NIZKs</p>
    <p>Collected timing information on both a MacBook Pro (acting as the TC) and an ARM v5TE (acting as the OBU)</p>
  </div>
  <div class="page">
    <p>Implementation</p>
    <p>Used MIRACL [Scott] for blind IBE, ZKPDL [MEKHL10] for commitments and NIZKs</p>
    <p>Collected timing information on both a MacBook Pro (acting as the TC) and an ARM v5TE (acting as the OBU)</p>
    <p>When are blind IBE operations happening?</p>
  </div>
  <div class="page">
    <p>Implementation</p>
    <p>Used MIRACL [Scott] for blind IBE, ZKPDL [MEKHL10] for commitments and NIZKs</p>
    <p>Collected timing information on both a MacBook Pro (acting as the TC) and an ARM v5TE (acting as the OBU)</p>
    <p>When are blind IBE operations happening?</p>
    <p>Encryption: during Payment process</p>
    <p>Extraction: during Audit (OBU as authority, TC as user)</p>
    <p>Decryption: during Audit (TC needs to trial decrypt each ciphertext)</p>
  </div>
  <div class="page">
    <p>Various measurements: time and space</p>
  </div>
  <div class="page">
    <p>Various measurements: time and space</p>
    <p>Algorithm 4.3: Audit, run by the TC Input: payment tuple (m,m), camera tuples</p>
    <p>{(loci,timei)}ki=1, verification key vktag if SigVerify(vktag,m,m) = 0 then1</p>
    <p>return 2 parse m as (tag,openfinal,{(c j,C j, j)}nj=1)3 forall 1  i  k do4</p>
    <p>determine segment (wherei,wheni) for5 (loci,timei) ski = BlindExtract(wherei,wheni)6 match = 07 forall 1  j  n do8</p>
    <p>m j = IBDec(ski;C j)9 if m j parses as (p j ; r j ; 0 ) then10</p>
    <p>match = 111 if Com(m j) = c j then12</p>
    <p>return suspicious13 if p j = f (wherei,wheni) then14</p>
    <p>return suspicious15 break16</p>
    <p>if match = 0 then17 return suspicious18</p>
    <p>return okay19</p>
    <p>cial for maintaining driver honesty, both individually and in the face of possible collusions. In terms of privacy, if the OBU and TC sign their messages in the BlindExtract phase, then we can guarantee that no malicious third party can alter messages in their interaction in an attempt to learn the segment in which the driver was caught on camera (or, alternatively, frame the driver by corrupting skid ). As mentioned in Section 2, whereas the cameras do take away some part of the drivers privacy, they are necessary to maintain honesty; we also note that no additional information is revealed throughout the course of this audit interaction provided both parties behave honestly. One potential downside of this protocol, however, is that the TC is not restricted to querying locations at which it had cameras; it can essentially query any location it wants without the drivers knowledge (although the driver is at least aware of how many queries are being made). We believe that our system could be augmented to resist such misbehavior through an audit protocol audit protocol that requires the TC to demonstrate that it actually has camera records corresponding to some small fraction of the spot check it performs, much as its own audit protocol requires the driver to reveal some small fraction of its segments driven. This audit audit could be performed on behalf of drivers by an organization such as EFF or the ACLU; alternatively, in some legal settings an exclusionary rule could be introduced that invalidates evidence obtained through auditing authority misbehavior.</p>
    <p>Time (ms)</p>
    <p>Operation Laptop ARM</p>
    <p>Creating parameters 75.12 1083.61 Encryption 82.11 1187.82 Blind extraction (user) 13.13 214.06 Blind extraction (authority) 11.21 175.25 Decryption 78.31 1131.58</p>
    <p>Table 1: The average time, in milliseconds and over a run of 10, for the various operations in our blind IBE protocol, performed on both a MacBook Pro and an ARM v5TE. The numbers for encryption and decryption represent the time taken to encrypt/decrypt a pair of 1024-bit numbers using the curve y2 = x3 + x mod p at the 80-bit security level, and the numbers for blind extraction represent the time to complete the computation required for each side of the interactive protocol.</p>
    <p>Table 1 shows the time taken for each of the unit operations performed within the IBE scheme. As mentioned in Section 4, in the context of our system the creation of the parameters will be performed when the OBU is initialized, the encryption will be performed during the Pay protocol (line 4 of Algorithm 4.1), and both blind extraction and decryption will be performed in the audit phase between the TC and the OBU (lines 6 and 9 of Algorithm 4.3 respectively).</p>
    <p>We consider the computational costs for the OBU and the TC separately, as well as the communication overhead for the whole system.5</p>
    <p>Time for blind IBE</p>
  </div>
  <div class="page">
    <p>Various measurements: time and space</p>
    <p>Algorithm 4.3: Audit, run by the TC Input: payment tuple (m,m), camera tuples</p>
    <p>{(loci,timei)}ki=1, verification key vktag if SigVerify(vktag,m,m) = 0 then1</p>
    <p>return 2 parse m as (tag,openfinal,{(c j,C j, j)}nj=1)3 forall 1  i  k do4</p>
    <p>determine segment (wherei,wheni) for5 (loci,timei) ski = BlindExtract(wherei,wheni)6 match = 07 forall 1  j  n do8</p>
    <p>m j = IBDec(ski;C j)9 if m j parses as (p j ; r j ; 0 ) then10</p>
    <p>match = 111 if Com(m j) = c j then12</p>
    <p>return suspicious13 if p j = f (wherei,wheni) then14</p>
    <p>return suspicious15 break16</p>
    <p>if match = 0 then17 return suspicious18</p>
    <p>return okay19</p>
    <p>cial for maintaining driver honesty, both individually and in the face of possible collusions. In terms of privacy, if the OBU and TC sign their messages in the BlindExtract phase, then we can guarantee that no malicious third party can alter messages in their interaction in an attempt to learn the segment in which the driver was caught on camera (or, alternatively, frame the driver by corrupting skid ). As mentioned in Section 2, whereas the cameras do take away some part of the drivers privacy, they are necessary to maintain honesty; we also note that no additional information is revealed throughout the course of this audit interaction provided both parties behave honestly. One potential downside of this protocol, however, is that the TC is not restricted to querying locations at which it had cameras; it can essentially query any location it wants without the drivers knowledge (although the driver is at least aware of how many queries are being made). We believe that our system could be augmented to resist such misbehavior through an audit protocol audit protocol that requires the TC to demonstrate that it actually has camera records corresponding to some small fraction of the spot check it performs, much as its own audit protocol requires the driver to reveal some small fraction of its segments driven. This audit audit could be performed on behalf of drivers by an organization such as EFF or the ACLU; alternatively, in some legal settings an exclusionary rule could be introduced that invalidates evidence obtained through auditing authority misbehavior.</p>
    <p>Time (ms)</p>
    <p>Operation Laptop ARM</p>
    <p>Creating parameters 75.12 1083.61 Encryption 82.11 1187.82 Blind extraction (user) 13.13 214.06 Blind extraction (authority) 11.21 175.25 Decryption 78.31 1131.58</p>
    <p>Table 1: The average time, in milliseconds and over a run of 10, for the various operations in our blind IBE protocol, performed on both a MacBook Pro and an ARM v5TE. The numbers for encryption and decryption represent the time taken to encrypt/decrypt a pair of 1024-bit numbers using the curve y2 = x3 + x mod p at the 80-bit security level, and the numbers for blind extraction represent the time to complete the computation required for each side of the interactive protocol.</p>
    <p>Table 1 shows the time taken for each of the unit operations performed within the IBE scheme. As mentioned in Section 4, in the context of our system the creation of the parameters will be performed when the OBU is initialized, the encryption will be performed during the Pay protocol (line 4 of Algorithm 4.1), and both blind extraction and decryption will be performed in the audit phase between the TC and the OBU (lines 6 and 9 of Algorithm 4.3 respectively).</p>
    <p>We consider the computational costs for the OBU and the TC separately, as well as the communication overhead for the whole system.5</p>
    <p>Time for blind IBE cost for OBU during</p>
    <p>Audit is reduced</p>
  </div>
  <div class="page">
    <p>Various measurements: time and space</p>
    <p>Algorithm 4.3: Audit, run by the TC Input: payment tuple (m,m), camera tuples</p>
    <p>{(loci,timei)}ki=1, verification key vktag if SigVerify(vktag,m,m) = 0 then1</p>
    <p>return 2 parse m as (tag,openfinal,{(c j,C j, j)}nj=1)3 forall 1  i  k do4</p>
    <p>determine segment (wherei,wheni) for5 (loci,timei) ski = BlindExtract(wherei,wheni)6 match = 07 forall 1  j  n do8</p>
    <p>m j = IBDec(ski;C j)9 if m j parses as (p j ; r j ; 0 ) then10</p>
    <p>match = 111 if Com(m j) = c j then12</p>
    <p>return suspicious13 if p j = f (wherei,wheni) then14</p>
    <p>return suspicious15 break16</p>
    <p>if match = 0 then17 return suspicious18</p>
    <p>return okay19</p>
    <p>cial for maintaining driver honesty, both individually and in the face of possible collusions. In terms of privacy, if the OBU and TC sign their messages in the BlindExtract phase, then we can guarantee that no malicious third party can alter messages in their interaction in an attempt to learn the segment in which the driver was caught on camera (or, alternatively, frame the driver by corrupting skid ). As mentioned in Section 2, whereas the cameras do take away some part of the drivers privacy, they are necessary to maintain honesty; we also note that no additional information is revealed throughout the course of this audit interaction provided both parties behave honestly. One potential downside of this protocol, however, is that the TC is not restricted to querying locations at which it had cameras; it can essentially query any location it wants without the drivers knowledge (although the driver is at least aware of how many queries are being made). We believe that our system could be augmented to resist such misbehavior through an audit protocol audit protocol that requires the TC to demonstrate that it actually has camera records corresponding to some small fraction of the spot check it performs, much as its own audit protocol requires the driver to reveal some small fraction of its segments driven. This audit audit could be performed on behalf of drivers by an organization such as EFF or the ACLU; alternatively, in some legal settings an exclusionary rule could be introduced that invalidates evidence obtained through auditing authority misbehavior.</p>
    <p>Time (ms)</p>
    <p>Operation Laptop ARM</p>
    <p>Creating parameters 75.12 1083.61 Encryption 82.11 1187.82 Blind extraction (user) 13.13 214.06 Blind extraction (authority) 11.21 175.25 Decryption 78.31 1131.58</p>
    <p>Table 1: The average time, in milliseconds and over a run of 10, for the various operations in our blind IBE protocol, performed on both a MacBook Pro and an ARM v5TE. The numbers for encryption and decryption represent the time taken to encrypt/decrypt a pair of 1024-bit numbers using the curve y2 = x3 + x mod p at the 80-bit security level, and the numbers for blind extraction represent the time to complete the computation required for each side of the interactive protocol.</p>
    <p>Table 1 shows the time taken for each of the unit operations performed within the IBE scheme. As mentioned in Section 4, in the context of our system the creation of the parameters will be performed when the OBU is initialized, the encryption will be performed during the Pay protocol (line 4 of Algorithm 4.1), and both blind extraction and decryption will be performed in the audit phase between the TC and the OBU (lines 6 and 9 of Algorithm 4.3 respectively).</p>
    <p>We consider the computational costs for the OBU and the TC separately, as well as the communication overhead for the whole system.5</p>
    <p>Length Time step Segments Time for TC (s)</p>
    <p>Table 2: The average time, in seconds and over a run of 10, for the TC to perform a single spot check given segment lengths and time steps; we consider only the active time spent and not the time waiting for the OBU. Essentially all of the time was</p>
    <p>spent iterating over the segments; as such, the time taken grows approximately linearly with the number of segments. To</p>
    <p>determine the approximate number of segments given segment lengths and time steps, we assumed that an average user would</p>
    <p>drive for 1,000 miles in a 30-day month, or about 33 hours (1 hour each weekday and an extra 11 hours over four weekends).</p>
    <p>Object Size (B)</p>
    <p>NIZK 5455</p>
    <p>Commitment 130</p>
    <p>Ciphertext 366</p>
    <p>Total Pay segment 5955 Audit message 494</p>
    <p>Table 3: Size of each of the components that needs to be sent between the OBU and the TC, in bytes. Each</p>
    <p>segment of the payment consists of a NIZK, commitment,</p>
    <p>and ciphertext; all the segments are forwarded to the TC</p>
    <p>from the TSP at the start of an audit. In the course of the</p>
    <p>Audit protocol the OBU must also send blind IBE keys to the TC.</p>
    <p>each user ends up costing the system between one-third</p>
    <p>of a cent and 2 cents each month; this is an amount that</p>
    <p>the TSP could easily charge the users if need be (although</p>
    <p>the cost would presumably be cheaper if the TC simply</p>
    <p>performed the computations itself). We therefore believe</p>
    <p>that the amount of computation required to perform the</p>
    <p>audits, in addition to being necessary in guaranteeing</p>
    <p>fairness and honesty within the system, is reasonably</p>
    <p>practical.</p>
    <p>Finally, to examine how much Milo would cost if de</p>
    <p>ployed in a real population we consider the county of San</p>
    <p>Diego, which consists of 3 million people possessing ap</p>
    <p>proximately 1.8 million vehicles, and almost 2,800 miles</p>
    <p>of roads [16, 17, 44]. As we just saw, Milo has a compu</p>
    <p>tational cost of up to 2 cents per user per month, which</p>
    <p>means a worst-case expected annual cost of $432,000; in</p>
    <p>the best case, wherein users cost only one-third of a cent</p>
    <p>per month, the expected annual cost is only $72,000. In</p>
    <p>the next section, we can see how these costs compares</p>
    <p>to that of the nave solution to collusion protection;</p>
    <p>i.e., one in which we attempt to protect against driver</p>
    <p>collusion through placement of cameras as opposed to</p>
    <p>prevention and protection at the system level.</p>
    <p>into account, as they allow the auditing authority to trans</p>
    <p>mit camera locations in the clear to drivers. Given these</p>
    <p>locations, colluding drivers can then share their audit tran</p>
    <p>scripts each month in order to learn a greater number of</p>
    <p>camera locations than they would have learned alone. Fur</p>
    <p>thermore, websites already exist which record locations</p>
    <p>of red light cameras [37] and speed cameras [36]; one</p>
    <p>can easily imagine websites similar to these that collect</p>
    <p>crowd-based reports of audit camera locations. With cam</p>
    <p>eras whose locations are fixed from month to month, the</p>
    <p>cost to cheat is therefore essentially zero (just check the</p>
    <p>website!) and so we can and should expect enterprising</p>
    <p>drivers to take advantage of the system. In contrast, Milo</p>
    <p>is specifically designed to prevent these sorts of trivial</p>
    <p>collusion attacks.</p>
    <p>In addition to learning camera locations through the</p>
    <p>course of the audit phase, drivers may also learn camera</p>
    <p>locations from simply seeing them on the road. This is</p>
    <p>also quite damaging to the system, as drivers can learn</p>
    <p>the locations of cameras simply by spotting them. After</p>
    <p>pooling together the various locations and times at which</p>
    <p>they saw cameras, cheating drivers can fix up their driving</p>
    <p>record in time to pass any end-of-month audit protocol.</p>
    <p>To prevent such cheating, a system could instead re</p>
    <p>quire the OBU to transmit the tuples corresponding to</p>
    <p>segments as they are driven, rather than all together at</p>
    <p>the end of the month. Without an anonymizing service</p>
    <p>such as Tor (used in VPriv [39]), transmitting data while</p>
    <p>driving represents too great a privacy loss, as the TSP</p>
    <p>can easily determine when and for how long each driver</p>
    <p>is using their car. One possible fix might seem to be to</p>
    <p>continually transmit dummy segments while the car is</p>
    <p>not in use; transmitting segments in real time over a cel</p>
    <p>lular network, however, leaks coarse-grained real-time</p>
    <p>location information to nearby cell towers (for example,</p>
    <p>staying connected to a single tower for many hours sug</p>
    <p>gests that you are stationary), thus defeating the main goal</p>
    <p>of preserving driver privacy.</p>
    <p>Finally, we note that there exists a class of expensive</p>
    <p>physical attacks targeting any real-world implementation</p>
    <p>of a camera-based audit protocol. For example, against</p>
    <p>fixed-location cameras, cheating drivers could disable</p>
    <p>their OBU for specific segments each month, revealing in</p>
    <p>formation about those segments. Against mobile cameras,</p>
    <p>a driver could follow each audit vehicle and record its</p>
    <p>path, sharing with other cheating drivers as they go. One</p>
    <p>can imagine defenses against these attacks and even more</p>
    <p>Time for blind IBE Size for messages cost for OBU during</p>
    <p>Audit is reduced</p>
  </div>
  <div class="page">
    <p>Various measurements: time and space</p>
    <p>Algorithm 4.3: Audit, run by the TC Input: payment tuple (m,m), camera tuples</p>
    <p>{(loci,timei)}ki=1, verification key vktag if SigVerify(vktag,m,m) = 0 then1</p>
    <p>return 2 parse m as (tag,openfinal,{(c j,C j, j)}nj=1)3 forall 1  i  k do4</p>
    <p>determine segment (wherei,wheni) for5 (loci,timei) ski = BlindExtract(wherei,wheni)6 match = 07 forall 1  j  n do8</p>
    <p>m j = IBDec(ski;C j)9 if m j parses as (p j ; r j ; 0 ) then10</p>
    <p>match = 111 if Com(m j) = c j then12</p>
    <p>return suspicious13 if p j = f (wherei,wheni) then14</p>
    <p>return suspicious15 break16</p>
    <p>if match = 0 then17 return suspicious18</p>
    <p>return okay19</p>
    <p>cial for maintaining driver honesty, both individually and in the face of possible collusions. In terms of privacy, if the OBU and TC sign their messages in the BlindExtract phase, then we can guarantee that no malicious third party can alter messages in their interaction in an attempt to learn the segment in which the driver was caught on camera (or, alternatively, frame the driver by corrupting skid ). As mentioned in Section 2, whereas the cameras do take away some part of the drivers privacy, they are necessary to maintain honesty; we also note that no additional information is revealed throughout the course of this audit interaction provided both parties behave honestly. One potential downside of this protocol, however, is that the TC is not restricted to querying locations at which it had cameras; it can essentially query any location it wants without the drivers knowledge (although the driver is at least aware of how many queries are being made). We believe that our system could be augmented to resist such misbehavior through an audit protocol audit protocol that requires the TC to demonstrate that it actually has camera records corresponding to some small fraction of the spot check it performs, much as its own audit protocol requires the driver to reveal some small fraction of its segments driven. This audit audit could be performed on behalf of drivers by an organization such as EFF or the ACLU; alternatively, in some legal settings an exclusionary rule could be introduced that invalidates evidence obtained through auditing authority misbehavior.</p>
    <p>Time (ms)</p>
    <p>Operation Laptop ARM</p>
    <p>Creating parameters 75.12 1083.61 Encryption 82.11 1187.82 Blind extraction (user) 13.13 214.06 Blind extraction (authority) 11.21 175.25 Decryption 78.31 1131.58</p>
    <p>Table 1: The average time, in milliseconds and over a run of 10, for the various operations in our blind IBE protocol, performed on both a MacBook Pro and an ARM v5TE. The numbers for encryption and decryption represent the time taken to encrypt/decrypt a pair of 1024-bit numbers using the curve y2 = x3 + x mod p at the 80-bit security level, and the numbers for blind extraction represent the time to complete the computation required for each side of the interactive protocol.</p>
    <p>Table 1 shows the time taken for each of the unit operations performed within the IBE scheme. As mentioned in Section 4, in the context of our system the creation of the parameters will be performed when the OBU is initialized, the encryption will be performed during the Pay protocol (line 4 of Algorithm 4.1), and both blind extraction and decryption will be performed in the audit phase between the TC and the OBU (lines 6 and 9 of Algorithm 4.3 respectively).</p>
    <p>We consider the computational costs for the OBU and the TC separately, as well as the communication overhead for the whole system.5</p>
    <p>Length Time step Segments Time for TC (s)</p>
    <p>Table 2: The average time, in seconds and over a run of 10, for the TC to perform a single spot check given segment lengths and time steps; we consider only the active time spent and not the time waiting for the OBU. Essentially all of the time was</p>
    <p>spent iterating over the segments; as such, the time taken grows approximately linearly with the number of segments. To</p>
    <p>determine the approximate number of segments given segment lengths and time steps, we assumed that an average user would</p>
    <p>drive for 1,000 miles in a 30-day month, or about 33 hours (1 hour each weekday and an extra 11 hours over four weekends).</p>
    <p>Object Size (B)</p>
    <p>NIZK 5455</p>
    <p>Commitment 130</p>
    <p>Ciphertext 366</p>
    <p>Total Pay segment 5955 Audit message 494</p>
    <p>Table 3: Size of each of the components that needs to be sent between the OBU and the TC, in bytes. Each</p>
    <p>segment of the payment consists of a NIZK, commitment,</p>
    <p>and ciphertext; all the segments are forwarded to the TC</p>
    <p>from the TSP at the start of an audit. In the course of the</p>
    <p>Audit protocol the OBU must also send blind IBE keys to the TC.</p>
    <p>each user ends up costing the system between one-third</p>
    <p>of a cent and 2 cents each month; this is an amount that</p>
    <p>the TSP could easily charge the users if need be (although</p>
    <p>the cost would presumably be cheaper if the TC simply</p>
    <p>performed the computations itself). We therefore believe</p>
    <p>that the amount of computation required to perform the</p>
    <p>audits, in addition to being necessary in guaranteeing</p>
    <p>fairness and honesty within the system, is reasonably</p>
    <p>practical.</p>
    <p>Finally, to examine how much Milo would cost if de</p>
    <p>ployed in a real population we consider the county of San</p>
    <p>Diego, which consists of 3 million people possessing ap</p>
    <p>proximately 1.8 million vehicles, and almost 2,800 miles</p>
    <p>of roads [16, 17, 44]. As we just saw, Milo has a compu</p>
    <p>tational cost of up to 2 cents per user per month, which</p>
    <p>means a worst-case expected annual cost of $432,000; in</p>
    <p>the best case, wherein users cost only one-third of a cent</p>
    <p>per month, the expected annual cost is only $72,000. In</p>
    <p>the next section, we can see how these costs compares</p>
    <p>to that of the nave solution to collusion protection;</p>
    <p>i.e., one in which we attempt to protect against driver</p>
    <p>collusion through placement of cameras as opposed to</p>
    <p>prevention and protection at the system level.</p>
    <p>into account, as they allow the auditing authority to trans</p>
    <p>mit camera locations in the clear to drivers. Given these</p>
    <p>locations, colluding drivers can then share their audit tran</p>
    <p>scripts each month in order to learn a greater number of</p>
    <p>camera locations than they would have learned alone. Fur</p>
    <p>thermore, websites already exist which record locations</p>
    <p>of red light cameras [37] and speed cameras [36]; one</p>
    <p>can easily imagine websites similar to these that collect</p>
    <p>crowd-based reports of audit camera locations. With cam</p>
    <p>eras whose locations are fixed from month to month, the</p>
    <p>cost to cheat is therefore essentially zero (just check the</p>
    <p>website!) and so we can and should expect enterprising</p>
    <p>drivers to take advantage of the system. In contrast, Milo</p>
    <p>is specifically designed to prevent these sorts of trivial</p>
    <p>collusion attacks.</p>
    <p>In addition to learning camera locations through the</p>
    <p>course of the audit phase, drivers may also learn camera</p>
    <p>locations from simply seeing them on the road. This is</p>
    <p>also quite damaging to the system, as drivers can learn</p>
    <p>the locations of cameras simply by spotting them. After</p>
    <p>pooling together the various locations and times at which</p>
    <p>they saw cameras, cheating drivers can fix up their driving</p>
    <p>record in time to pass any end-of-month audit protocol.</p>
    <p>To prevent such cheating, a system could instead re</p>
    <p>quire the OBU to transmit the tuples corresponding to</p>
    <p>segments as they are driven, rather than all together at</p>
    <p>the end of the month. Without an anonymizing service</p>
    <p>such as Tor (used in VPriv [39]), transmitting data while</p>
    <p>driving represents too great a privacy loss, as the TSP</p>
    <p>can easily determine when and for how long each driver</p>
    <p>is using their car. One possible fix might seem to be to</p>
    <p>continually transmit dummy segments while the car is</p>
    <p>not in use; transmitting segments in real time over a cel</p>
    <p>lular network, however, leaks coarse-grained real-time</p>
    <p>location information to nearby cell towers (for example,</p>
    <p>staying connected to a single tower for many hours sug</p>
    <p>gests that you are stationary), thus defeating the main goal</p>
    <p>of preserving driver privacy.</p>
    <p>Finally, we note that there exists a class of expensive</p>
    <p>physical attacks targeting any real-world implementation</p>
    <p>of a camera-based audit protocol. For example, against</p>
    <p>fixed-location cameras, cheating drivers could disable</p>
    <p>their OBU for specific segments each month, revealing in</p>
    <p>formation about those segments. Against mobile cameras,</p>
    <p>a driver could follow each audit vehicle and record its</p>
    <p>path, sharing with other cheating drivers as they go. One</p>
    <p>can imagine defenses against these attacks and even more</p>
    <p>Time for blind IBE Size for messages cost for OBU during</p>
    <p>Audit is reduced</p>
    <p>NIZK size dominates total size</p>
  </div>
  <div class="page">
    <p>Various measurements: time and space</p>
    <p>Algorithm 4.3: Audit, run by the TC Input: payment tuple (m,m), camera tuples</p>
    <p>{(loci,timei)}ki=1, verification key vktag if SigVerify(vktag,m,m) = 0 then1</p>
    <p>return 2 parse m as (tag,openfinal,{(c j,C j, j)}nj=1)3 forall 1  i  k do4</p>
    <p>determine segment (wherei,wheni) for5 (loci,timei) ski = BlindExtract(wherei,wheni)6 match = 07 forall 1  j  n do8</p>
    <p>m j = IBDec(ski;C j)9 if m j parses as (p j ; r j ; 0 ) then10</p>
    <p>match = 111 if Com(m j) = c j then12</p>
    <p>return suspicious13 if p j = f (wherei,wheni) then14</p>
    <p>return suspicious15 break16</p>
    <p>if match = 0 then17 return suspicious18</p>
    <p>return okay19</p>
    <p>cial for maintaining driver honesty, both individually and in the face of possible collusions. In terms of privacy, if the OBU and TC sign their messages in the BlindExtract phase, then we can guarantee that no malicious third party can alter messages in their interaction in an attempt to learn the segment in which the driver was caught on camera (or, alternatively, frame the driver by corrupting skid ). As mentioned in Section 2, whereas the cameras do take away some part of the drivers privacy, they are necessary to maintain honesty; we also note that no additional information is revealed throughout the course of this audit interaction provided both parties behave honestly. One potential downside of this protocol, however, is that the TC is not restricted to querying locations at which it had cameras; it can essentially query any location it wants without the drivers knowledge (although the driver is at least aware of how many queries are being made). We believe that our system could be augmented to resist such misbehavior through an audit protocol audit protocol that requires the TC to demonstrate that it actually has camera records corresponding to some small fraction of the spot check it performs, much as its own audit protocol requires the driver to reveal some small fraction of its segments driven. This audit audit could be performed on behalf of drivers by an organization such as EFF or the ACLU; alternatively, in some legal settings an exclusionary rule could be introduced that invalidates evidence obtained through auditing authority misbehavior.</p>
    <p>Time (ms)</p>
    <p>Operation Laptop ARM</p>
    <p>Creating parameters 75.12 1083.61 Encryption 82.11 1187.82 Blind extraction (user) 13.13 214.06 Blind extraction (authority) 11.21 175.25 Decryption 78.31 1131.58</p>
    <p>Table 1: The average time, in milliseconds and over a run of 10, for the various operations in our blind IBE protocol, performed on both a MacBook Pro and an ARM v5TE. The numbers for encryption and decryption represent the time taken to encrypt/decrypt a pair of 1024-bit numbers using the curve y2 = x3 + x mod p at the 80-bit security level, and the numbers for blind extraction represent the time to complete the computation required for each side of the interactive protocol.</p>
    <p>Table 1 shows the time taken for each of the unit operations performed within the IBE scheme. As mentioned in Section 4, in the context of our system the creation of the parameters will be performed when the OBU is initialized, the encryption will be performed during the Pay protocol (line 4 of Algorithm 4.1), and both blind extraction and decryption will be performed in the audit phase between the TC and the OBU (lines 6 and 9 of Algorithm 4.3 respectively).</p>
    <p>We consider the computational costs for the OBU and the TC separately, as well as the communication overhead for the whole system.5</p>
    <p>Length Time step Segments Time for TC (s)</p>
    <p>Table 2: The average time, in seconds and over a run of 10, for the TC to perform a single spot check given segment lengths and time steps; we consider only the active time spent and not the time waiting for the OBU. Essentially all of the time was</p>
    <p>spent iterating over the segments; as such, the time taken grows approximately linearly with the number of segments. To</p>
    <p>determine the approximate number of segments given segment lengths and time steps, we assumed that an average user would</p>
    <p>drive for 1,000 miles in a 30-day month, or about 33 hours (1 hour each weekday and an extra 11 hours over four weekends).</p>
    <p>Object Size (B)</p>
    <p>NIZK 5455</p>
    <p>Commitment 130</p>
    <p>Ciphertext 366</p>
    <p>Total Pay segment 5955 Audit message 494</p>
    <p>Table 3: Size of each of the components that needs to be sent between the OBU and the TC, in bytes. Each</p>
    <p>segment of the payment consists of a NIZK, commitment,</p>
    <p>and ciphertext; all the segments are forwarded to the TC</p>
    <p>from the TSP at the start of an audit. In the course of the</p>
    <p>Audit protocol the OBU must also send blind IBE keys to the TC.</p>
    <p>each user ends up costing the system between one-third</p>
    <p>of a cent and 2 cents each month; this is an amount that</p>
    <p>the TSP could easily charge the users if need be (although</p>
    <p>the cost would presumably be cheaper if the TC simply</p>
    <p>performed the computations itself). We therefore believe</p>
    <p>that the amount of computation required to perform the</p>
    <p>audits, in addition to being necessary in guaranteeing</p>
    <p>fairness and honesty within the system, is reasonably</p>
    <p>practical.</p>
    <p>Finally, to examine how much Milo would cost if de</p>
    <p>ployed in a real population we consider the county of San</p>
    <p>Diego, which consists of 3 million people possessing ap</p>
    <p>proximately 1.8 million vehicles, and almost 2,800 miles</p>
    <p>of roads [16, 17, 44]. As we just saw, Milo has a compu</p>
    <p>tational cost of up to 2 cents per user per month, which</p>
    <p>means a worst-case expected annual cost of $432,000; in</p>
    <p>the best case, wherein users cost only one-third of a cent</p>
    <p>per month, the expected annual cost is only $72,000. In</p>
    <p>the next section, we can see how these costs compares</p>
    <p>to that of the nave solution to collusion protection;</p>
    <p>i.e., one in which we attempt to protect against driver</p>
    <p>collusion through placement of cameras as opposed to</p>
    <p>prevention and protection at the system level.</p>
    <p>into account, as they allow the auditing authority to trans</p>
    <p>mit camera locations in the clear to drivers. Given these</p>
    <p>locations, colluding drivers can then share their audit tran</p>
    <p>scripts each month in order to learn a greater number of</p>
    <p>camera locations than they would have learned alone. Fur</p>
    <p>thermore, websites already exist which record locations</p>
    <p>of red light cameras [37] and speed cameras [36]; one</p>
    <p>can easily imagine websites similar to these that collect</p>
    <p>crowd-based reports of audit camera locations. With cam</p>
    <p>eras whose locations are fixed from month to month, the</p>
    <p>cost to cheat is therefore essentially zero (just check the</p>
    <p>website!) and so we can and should expect enterprising</p>
    <p>drivers to take advantage of the system. In contrast, Milo</p>
    <p>is specifically designed to prevent these sorts of trivial</p>
    <p>collusion attacks.</p>
    <p>In addition to learning camera locations through the</p>
    <p>course of the audit phase, drivers may also learn camera</p>
    <p>locations from simply seeing them on the road. This is</p>
    <p>also quite damaging to the system, as drivers can learn</p>
    <p>the locations of cameras simply by spotting them. After</p>
    <p>pooling together the various locations and times at which</p>
    <p>they saw cameras, cheating drivers can fix up their driving</p>
    <p>record in time to pass any end-of-month audit protocol.</p>
    <p>To prevent such cheating, a system could instead re</p>
    <p>quire the OBU to transmit the tuples corresponding to</p>
    <p>segments as they are driven, rather than all together at</p>
    <p>the end of the month. Without an anonymizing service</p>
    <p>such as Tor (used in VPriv [39]), transmitting data while</p>
    <p>driving represents too great a privacy loss, as the TSP</p>
    <p>can easily determine when and for how long each driver</p>
    <p>is using their car. One possible fix might seem to be to</p>
    <p>continually transmit dummy segments while the car is</p>
    <p>not in use; transmitting segments in real time over a cel</p>
    <p>lular network, however, leaks coarse-grained real-time</p>
    <p>location information to nearby cell towers (for example,</p>
    <p>staying connected to a single tower for many hours sug</p>
    <p>gests that you are stationary), thus defeating the main goal</p>
    <p>of preserving driver privacy.</p>
    <p>Finally, we note that there exists a class of expensive</p>
    <p>physical attacks targeting any real-world implementation</p>
    <p>of a camera-based audit protocol. For example, against</p>
    <p>fixed-location cameras, cheating drivers could disable</p>
    <p>their OBU for specific segments each month, revealing in</p>
    <p>formation about those segments. Against mobile cameras,</p>
    <p>a driver could follow each audit vehicle and record its</p>
    <p>path, sharing with other cheating drivers as they go. One</p>
    <p>can imagine defenses against these attacks and even more</p>
    <p>Length Time step Segments Time for TC (s)</p>
    <p>Table 2: The average time, in seconds and over a run of 10, for the TC to perform a single spot check given segment lengths and time steps; we consider only the active time spent and not the time waiting for the OBU. Essentially all of the time was</p>
    <p>spent iterating over the segments; as such, the time taken grows approximately linearly with the number of segments. To</p>
    <p>determine the approximate number of segments given segment lengths and time steps, we assumed that an average user would</p>
    <p>drive for 1,000 miles in a 30-day month, or about 33 hours (1 hour each weekday and an extra 11 hours over four weekends).</p>
    <p>Object Size (B)</p>
    <p>NIZK 5455</p>
    <p>Commitment 130</p>
    <p>Ciphertext 366</p>
    <p>Total Pay segment 5955 Audit message 494</p>
    <p>Table 3: Size of each of the components that needs to be sent between the OBU and the TC, in bytes. Each</p>
    <p>segment of the payment consists of a NIZK, commitment,</p>
    <p>and ciphertext; all the segments are forwarded to the TC</p>
    <p>from the TSP at the start of an audit. In the course of the</p>
    <p>Audit protocol the OBU must also send blind IBE keys to the TC.</p>
    <p>each user ends up costing the system between one-third</p>
    <p>of a cent and 2 cents each month; this is an amount that</p>
    <p>the TSP could easily charge the users if need be (although</p>
    <p>the cost would presumably be cheaper if the TC simply</p>
    <p>performed the computations itself). We therefore believe</p>
    <p>that the amount of computation required to perform the</p>
    <p>audits, in addition to being necessary in guaranteeing</p>
    <p>fairness and honesty within the system, is reasonably</p>
    <p>practical.</p>
    <p>Finally, to examine how much Milo would cost if de</p>
    <p>ployed in a real population we consider the county of San</p>
    <p>Diego, which consists of 3 million people possessing ap</p>
    <p>proximately 1.8 million vehicles, and almost 2,800 miles</p>
    <p>of roads [16, 17, 44]. As we just saw, Milo has a compu</p>
    <p>tational cost of up to 2 cents per user per month, which</p>
    <p>means a worst-case expected annual cost of $432,000; in</p>
    <p>the best case, wherein users cost only one-third of a cent</p>
    <p>per month, the expected annual cost is only $72,000. In</p>
    <p>the next section, we can see how these costs compares</p>
    <p>to that of the nave solution to collusion protection;</p>
    <p>i.e., one in which we attempt to protect against driver</p>
    <p>collusion through placement of cameras as opposed to</p>
    <p>prevention and protection at the system level.</p>
    <p>into account, as they allow the auditing authority to trans</p>
    <p>mit camera locations in the clear to drivers. Given these</p>
    <p>locations, colluding drivers can then share their audit tran</p>
    <p>scripts each month in order to learn a greater number of</p>
    <p>camera locations than they would have learned alone. Fur</p>
    <p>thermore, websites already exist which record locations</p>
    <p>of red light cameras [37] and speed cameras [36]; one</p>
    <p>can easily imagine websites similar to these that collect</p>
    <p>crowd-based reports of audit camera locations. With cam</p>
    <p>eras whose locations are fixed from month to month, the</p>
    <p>cost to cheat is therefore essentially zero (just check the</p>
    <p>website!) and so we can and should expect enterprising</p>
    <p>drivers to take advantage of the system. In contrast, Milo</p>
    <p>is specifically designed to prevent these sorts of trivial</p>
    <p>collusion attacks.</p>
    <p>In addition to learning camera locations through the</p>
    <p>course of the audit phase, drivers may also learn camera</p>
    <p>locations from simply seeing them on the road. This is</p>
    <p>also quite damaging to the system, as drivers can learn</p>
    <p>the locations of cameras simply by spotting them. After</p>
    <p>pooling together the various locations and times at which</p>
    <p>they saw cameras, cheating drivers can fix up their driving</p>
    <p>record in time to pass any end-of-month audit protocol.</p>
    <p>To prevent such cheating, a system could instead re</p>
    <p>quire the OBU to transmit the tuples corresponding to</p>
    <p>segments as they are driven, rather than all together at</p>
    <p>the end of the month. Without an anonymizing service</p>
    <p>such as Tor (used in VPriv [39]), transmitting data while</p>
    <p>driving represents too great a privacy loss, as the TSP</p>
    <p>can easily determine when and for how long each driver</p>
    <p>is using their car. One possible fix might seem to be to</p>
    <p>continually transmit dummy segments while the car is</p>
    <p>not in use; transmitting segments in real time over a cel</p>
    <p>lular network, however, leaks coarse-grained real-time</p>
    <p>location information to nearby cell towers (for example,</p>
    <p>staying connected to a single tower for many hours sug</p>
    <p>gests that you are stationary), thus defeating the main goal</p>
    <p>of preserving driver privacy.</p>
    <p>Finally, we note that there exists a class of expensive</p>
    <p>physical attacks targeting any real-world implementation</p>
    <p>of a camera-based audit protocol. For example, against</p>
    <p>fixed-location cameras, cheating drivers could disable</p>
    <p>their OBU for specific segments each month, revealing in</p>
    <p>formation about those segments. Against mobile cameras,</p>
    <p>a driver could follow each audit vehicle and record its</p>
    <p>path, sharing with other cheating drivers as they go. One</p>
    <p>can imagine defenses against these attacks and even more</p>
    <p>Time for blind IBE Size for messages</p>
    <p>Time for TC to perform Audit</p>
    <p>cost for OBU during Audit is reduced</p>
    <p>NIZK size dominates total size</p>
  </div>
  <div class="page">
    <p>Various measurements: time and space</p>
    <p>Algorithm 4.3: Audit, run by the TC Input: payment tuple (m,m), camera tuples</p>
    <p>{(loci,timei)}ki=1, verification key vktag if SigVerify(vktag,m,m) = 0 then1</p>
    <p>return 2 parse m as (tag,openfinal,{(c j,C j, j)}nj=1)3 forall 1  i  k do4</p>
    <p>determine segment (wherei,wheni) for5 (loci,timei) ski = BlindExtract(wherei,wheni)6 match = 07 forall 1  j  n do8</p>
    <p>m j = IBDec(ski;C j)9 if m j parses as (p j ; r j ; 0 ) then10</p>
    <p>match = 111 if Com(m j) = c j then12</p>
    <p>return suspicious13 if p j = f (wherei,wheni) then14</p>
    <p>return suspicious15 break16</p>
    <p>if match = 0 then17 return suspicious18</p>
    <p>return okay19</p>
    <p>cial for maintaining driver honesty, both individually and in the face of possible collusions. In terms of privacy, if the OBU and TC sign their messages in the BlindExtract phase, then we can guarantee that no malicious third party can alter messages in their interaction in an attempt to learn the segment in which the driver was caught on camera (or, alternatively, frame the driver by corrupting skid ). As mentioned in Section 2, whereas the cameras do take away some part of the drivers privacy, they are necessary to maintain honesty; we also note that no additional information is revealed throughout the course of this audit interaction provided both parties behave honestly. One potential downside of this protocol, however, is that the TC is not restricted to querying locations at which it had cameras; it can essentially query any location it wants without the drivers knowledge (although the driver is at least aware of how many queries are being made). We believe that our system could be augmented to resist such misbehavior through an audit protocol audit protocol that requires the TC to demonstrate that it actually has camera records corresponding to some small fraction of the spot check it performs, much as its own audit protocol requires the driver to reveal some small fraction of its segments driven. This audit audit could be performed on behalf of drivers by an organization such as EFF or the ACLU; alternatively, in some legal settings an exclusionary rule could be introduced that invalidates evidence obtained through auditing authority misbehavior.</p>
    <p>Time (ms)</p>
    <p>Operation Laptop ARM</p>
    <p>Creating parameters 75.12 1083.61 Encryption 82.11 1187.82 Blind extraction (user) 13.13 214.06 Blind extraction (authority) 11.21 175.25 Decryption 78.31 1131.58</p>
    <p>Table 1: The average time, in milliseconds and over a run of 10, for the various operations in our blind IBE protocol, performed on both a MacBook Pro and an ARM v5TE. The numbers for encryption and decryption represent the time taken to encrypt/decrypt a pair of 1024-bit numbers using the curve y2 = x3 + x mod p at the 80-bit security level, and the numbers for blind extraction represent the time to complete the computation required for each side of the interactive protocol.</p>
    <p>Table 1 shows the time taken for each of the unit operations performed within the IBE scheme. As mentioned in Section 4, in the context of our system the creation of the parameters will be performed when the OBU is initialized, the encryption will be performed during the Pay protocol (line 4 of Algorithm 4.1), and both blind extraction and decryption will be performed in the audit phase between the TC and the OBU (lines 6 and 9 of Algorithm 4.3 respectively).</p>
    <p>We consider the computational costs for the OBU and the TC separately, as well as the communication overhead for the whole system.5</p>
    <p>Length Time step Segments Time for TC (s)</p>
    <p>Table 2: The average time, in seconds and over a run of 10, for the TC to perform a single spot check given segment lengths and time steps; we consider only the active time spent and not the time waiting for the OBU. Essentially all of the time was</p>
    <p>spent iterating over the segments; as such, the time taken grows approximately linearly with the number of segments. To</p>
    <p>determine the approximate number of segments given segment lengths and time steps, we assumed that an average user would</p>
    <p>drive for 1,000 miles in a 30-day month, or about 33 hours (1 hour each weekday and an extra 11 hours over four weekends).</p>
    <p>Object Size (B)</p>
    <p>NIZK 5455</p>
    <p>Commitment 130</p>
    <p>Ciphertext 366</p>
    <p>Total Pay segment 5955 Audit message 494</p>
    <p>Table 3: Size of each of the components that needs to be sent between the OBU and the TC, in bytes. Each</p>
    <p>segment of the payment consists of a NIZK, commitment,</p>
    <p>and ciphertext; all the segments are forwarded to the TC</p>
    <p>from the TSP at the start of an audit. In the course of the</p>
    <p>Audit protocol the OBU must also send blind IBE keys to the TC.</p>
    <p>each user ends up costing the system between one-third</p>
    <p>of a cent and 2 cents each month; this is an amount that</p>
    <p>the TSP could easily charge the users if need be (although</p>
    <p>the cost would presumably be cheaper if the TC simply</p>
    <p>performed the computations itself). We therefore believe</p>
    <p>that the amount of computation required to perform the</p>
    <p>audits, in addition to being necessary in guaranteeing</p>
    <p>fairness and honesty within the system, is reasonably</p>
    <p>practical.</p>
    <p>Finally, to examine how much Milo would cost if de</p>
    <p>ployed in a real population we consider the county of San</p>
    <p>Diego, which consists of 3 million people possessing ap</p>
    <p>proximately 1.8 million vehicles, and almost 2,800 miles</p>
    <p>of roads [16, 17, 44]. As we just saw, Milo has a compu</p>
    <p>tational cost of up to 2 cents per user per month, which</p>
    <p>means a worst-case expected annual cost of $432,000; in</p>
    <p>the best case, wherein users cost only one-third of a cent</p>
    <p>per month, the expected annual cost is only $72,000. In</p>
    <p>the next section, we can see how these costs compares</p>
    <p>to that of the nave solution to collusion protection;</p>
    <p>i.e., one in which we attempt to protect against driver</p>
    <p>collusion through placement of cameras as opposed to</p>
    <p>prevention and protection at the system level.</p>
    <p>into account, as they allow the auditing authority to trans</p>
    <p>mit camera locations in the clear to drivers. Given these</p>
    <p>locations, colluding drivers can then share their audit tran</p>
    <p>scripts each month in order to learn a greater number of</p>
    <p>camera locations than they would have learned alone. Fur</p>
    <p>thermore, websites already exist which record locations</p>
    <p>of red light cameras [37] and speed cameras [36]; one</p>
    <p>can easily imagine websites similar to these that collect</p>
    <p>crowd-based reports of audit camera locations. With cam</p>
    <p>eras whose locations are fixed from month to month, the</p>
    <p>cost to cheat is therefore essentially zero (just check the</p>
    <p>website!) and so we can and should expect enterprising</p>
    <p>drivers to take advantage of the system. In contrast, Milo</p>
    <p>is specifically designed to prevent these sorts of trivial</p>
    <p>collusion attacks.</p>
    <p>In addition to learning camera locations through the</p>
    <p>course of the audit phase, drivers may also learn camera</p>
    <p>locations from simply seeing them on the road. This is</p>
    <p>also quite damaging to the system, as drivers can learn</p>
    <p>the locations of cameras simply by spotting them. After</p>
    <p>pooling together the various locations and times at which</p>
    <p>they saw cameras, cheating drivers can fix up their driving</p>
    <p>record in time to pass any end-of-month audit protocol.</p>
    <p>To prevent such cheating, a system could instead re</p>
    <p>quire the OBU to transmit the tuples corresponding to</p>
    <p>segments as they are driven, rather than all together at</p>
    <p>the end of the month. Without an anonymizing service</p>
    <p>such as Tor (used in VPriv [39]), transmitting data while</p>
    <p>driving represents too great a privacy loss, as the TSP</p>
    <p>can easily determine when and for how long each driver</p>
    <p>is using their car. One possible fix might seem to be to</p>
    <p>continually transmit dummy segments while the car is</p>
    <p>not in use; transmitting segments in real time over a cel</p>
    <p>lular network, however, leaks coarse-grained real-time</p>
    <p>location information to nearby cell towers (for example,</p>
    <p>staying connected to a single tower for many hours sug</p>
    <p>gests that you are stationary), thus defeating the main goal</p>
    <p>of preserving driver privacy.</p>
    <p>Finally, we note that there exists a class of expensive</p>
    <p>physical attacks targeting any real-world implementation</p>
    <p>of a camera-based audit protocol. For example, against</p>
    <p>fixed-location cameras, cheating drivers could disable</p>
    <p>their OBU for specific segments each month, revealing in</p>
    <p>formation about those segments. Against mobile cameras,</p>
    <p>a driver could follow each audit vehicle and record its</p>
    <p>path, sharing with other cheating drivers as they go. One</p>
    <p>can imagine defenses against these attacks and even more</p>
    <p>Length Time step Segments Time for TC (s)</p>
    <p>Table 2: The average time, in seconds and over a run of 10, for the TC to perform a single spot check given segment lengths and time steps; we consider only the active time spent and not the time waiting for the OBU. Essentially all of the time was</p>
    <p>spent iterating over the segments; as such, the time taken grows approximately linearly with the number of segments. To</p>
    <p>determine the approximate number of segments given segment lengths and time steps, we assumed that an average user would</p>
    <p>drive for 1,000 miles in a 30-day month, or about 33 hours (1 hour each weekday and an extra 11 hours over four weekends).</p>
    <p>Object Size (B)</p>
    <p>NIZK 5455</p>
    <p>Commitment 130</p>
    <p>Ciphertext 366</p>
    <p>Total Pay segment 5955 Audit message 494</p>
    <p>Table 3: Size of each of the components that needs to be sent between the OBU and the TC, in bytes. Each</p>
    <p>segment of the payment consists of a NIZK, commitment,</p>
    <p>and ciphertext; all the segments are forwarded to the TC</p>
    <p>from the TSP at the start of an audit. In the course of the</p>
    <p>Audit protocol the OBU must also send blind IBE keys to the TC.</p>
    <p>each user ends up costing the system between one-third</p>
    <p>of a cent and 2 cents each month; this is an amount that</p>
    <p>the TSP could easily charge the users if need be (although</p>
    <p>the cost would presumably be cheaper if the TC simply</p>
    <p>performed the computations itself). We therefore believe</p>
    <p>that the amount of computation required to perform the</p>
    <p>audits, in addition to being necessary in guaranteeing</p>
    <p>fairness and honesty within the system, is reasonably</p>
    <p>practical.</p>
    <p>Finally, to examine how much Milo would cost if de</p>
    <p>ployed in a real population we consider the county of San</p>
    <p>Diego, which consists of 3 million people possessing ap</p>
    <p>proximately 1.8 million vehicles, and almost 2,800 miles</p>
    <p>of roads [16, 17, 44]. As we just saw, Milo has a compu</p>
    <p>tational cost of up to 2 cents per user per month, which</p>
    <p>means a worst-case expected annual cost of $432,000; in</p>
    <p>the best case, wherein users cost only one-third of a cent</p>
    <p>per month, the expected annual cost is only $72,000. In</p>
    <p>the next section, we can see how these costs compares</p>
    <p>to that of the nave solution to collusion protection;</p>
    <p>i.e., one in which we attempt to protect against driver</p>
    <p>collusion through placement of cameras as opposed to</p>
    <p>prevention and protection at the system level.</p>
    <p>into account, as they allow the auditing authority to trans</p>
    <p>mit camera locations in the clear to drivers. Given these</p>
    <p>locations, colluding drivers can then share their audit tran</p>
    <p>scripts each month in order to learn a greater number of</p>
    <p>camera locations than they would have learned alone. Fur</p>
    <p>thermore, websites already exist which record locations</p>
    <p>of red light cameras [37] and speed cameras [36]; one</p>
    <p>can easily imagine websites similar to these that collect</p>
    <p>crowd-based reports of audit camera locations. With cam</p>
    <p>eras whose locations are fixed from month to month, the</p>
    <p>cost to cheat is therefore essentially zero (just check the</p>
    <p>website!) and so we can and should expect enterprising</p>
    <p>drivers to take advantage of the system. In contrast, Milo</p>
    <p>is specifically designed to prevent these sorts of trivial</p>
    <p>collusion attacks.</p>
    <p>In addition to learning camera locations through the</p>
    <p>course of the audit phase, drivers may also learn camera</p>
    <p>locations from simply seeing them on the road. This is</p>
    <p>also quite damaging to the system, as drivers can learn</p>
    <p>the locations of cameras simply by spotting them. After</p>
    <p>pooling together the various locations and times at which</p>
    <p>they saw cameras, cheating drivers can fix up their driving</p>
    <p>record in time to pass any end-of-month audit protocol.</p>
    <p>To prevent such cheating, a system could instead re</p>
    <p>quire the OBU to transmit the tuples corresponding to</p>
    <p>segments as they are driven, rather than all together at</p>
    <p>the end of the month. Without an anonymizing service</p>
    <p>such as Tor (used in VPriv [39]), transmitting data while</p>
    <p>driving represents too great a privacy loss, as the TSP</p>
    <p>can easily determine when and for how long each driver</p>
    <p>is using their car. One possible fix might seem to be to</p>
    <p>continually transmit dummy segments while the car is</p>
    <p>not in use; transmitting segments in real time over a cel</p>
    <p>lular network, however, leaks coarse-grained real-time</p>
    <p>location information to nearby cell towers (for example,</p>
    <p>staying connected to a single tower for many hours sug</p>
    <p>gests that you are stationary), thus defeating the main goal</p>
    <p>of preserving driver privacy.</p>
    <p>Finally, we note that there exists a class of expensive</p>
    <p>physical attacks targeting any real-world implementation</p>
    <p>of a camera-based audit protocol. For example, against</p>
    <p>fixed-location cameras, cheating drivers could disable</p>
    <p>their OBU for specific segments each month, revealing in</p>
    <p>formation about those segments. Against mobile cameras,</p>
    <p>a driver could follow each audit vehicle and record its</p>
    <p>path, sharing with other cheating drivers as they go. One</p>
    <p>can imagine defenses against these attacks and even more</p>
    <p>Time for blind IBE Size for messages</p>
    <p>Time for TC to perform Audit time to iterate dominates cost for TC</p>
    <p>cost for OBU during Audit is reduced</p>
    <p>NIZK size dominates total size</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Cryptographic background Milo</p>
    <p>Evaluation Conclusions</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>We presented Milo, a privacy-preserving electronic toll collection system</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>We presented Milo, a privacy-preserving electronic toll collection system</p>
    <p>Guarantees honesty even in the face of driver collusion</p>
    <p>Did so using blind IBE</p>
    <p>Found that computational overhead was manageable, significantly cheaper than certain alternatives</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>We presented Milo, a privacy-preserving electronic toll collection system</p>
    <p>Guarantees honesty even in the face of driver collusion</p>
    <p>Did so using blind IBE</p>
    <p>Found that computational overhead was manageable, significantly cheaper than certain alternatives</p>
    <p>Future work:</p>
    <p>Possibly formalizing security definitions</p>
    <p>Find cheaper methods for achieving same security properties</p>
  </div>
  <div class="page">
    <p>Conclusions</p>
    <p>We presented Milo, a privacy-preserving electronic toll collection system</p>
    <p>Guarantees honesty even in the face of driver collusion</p>
    <p>Did so using blind IBE</p>
    <p>Found that computational overhead was manageable, significantly cheaper than certain alternatives</p>
    <p>Future work:</p>
    <p>Possibly formalizing security definitions</p>
    <p>Find cheaper methods for achieving same security properties</p>
    <p>Thanks! Any questions?</p>
  </div>
</Presentation>
