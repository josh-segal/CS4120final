<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>USENIX W00T 18 12th USENIX Workshop on Offensive Technologies</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
    <p>Michael Lescisin University of Ontario Institute of</p>
    <p>Technology (UOIT)</p>
    <p>michael.lescisin@uoit.net</p>
    <p>Qusay H. Mahmoud University of Ontario Institute of</p>
    <p>Technology (UOIT)</p>
    <p>qusay.mahmoud@uoit.ca</p>
    <p>August 14th 2018 Baltimore, MD, USA</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Agenda</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Introduction</p>
    <p>Cryptography as go-to solution for communication security in insecure environments.</p>
    <p>Even under properly implemented cryptosystems, information such as packet timings and session lengths still remains intact.</p>
    <p>Related research has shown that it is possible to learn sensitive information from observing these information features.</p>
    <p>Unlike more direct information leaks such as SQL Injections, the current state of research for detection tools based on known-to-be-vulnerable design patterns still lags behind.</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>SSL/TLS</p>
    <p>SSL/TLS</p>
    <p>Secure Sockets Layer (SSL) and its successor, Transport Layer Security (TLS) are popular cryptographic protocols for maintaining the confidentiality, authenticity and integrity of a web session.</p>
    <p>Works by using public key cryptography to exchange a symmetric encryption and authentication key. A list of certificate authorities is trusted to endorse, by public key signature, the public key certificate for an SSL/TLS using website. The protocol is used on every HTTPS URL.</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Threat Model</p>
    <p>Threat Model</p>
    <p>The protocol is designed to maintain confidentiality, authenticity, and integrity even if network traffic can be intercepted or manipulated.</p>
    <p>The protocol should allow a developer to wrap their plaintext TCP connections with SSL/TLS and the above three information security properties should be upheld.</p>
    <p>Any violation of these properties would be a case where SSL/TLS does not perform sufficiently to satisfy its threat model.</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Threat Model</p>
    <p>Practically Speaking</p>
    <p>Wi-Fi snooping</p>
    <p>Compromising internal network equipment for ARP/IP/DNS spoofing</p>
    <p>Malicious VPNs or proxies</p>
    <p>Malicious ISPs</p>
    <p>Illegal wiretapping</p>
    <p>Etc...</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Underlying Concepts</p>
    <p>A fundamental understanding of the interaction between computer networks and modern web development is necessary for understanding the side-channel vulnerabilities in SSL/TLS.</p>
    <p>One must be aware that SSL/TLS does not hide the following information:</p>
    <p>Approximate size of data transferred in a session Start and end times of each session IP addresses and domain names of clients and servers Order of sessions</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Network Traffic Features</p>
    <p>Network Traffic Features</p>
    <p>Let us consider measuring the approximate size of a session:</p>
    <p>Maximum payload size of Ethernet frame is 1500 bytes. Minimal size of IP header is 20 bytes. Minimal size of TCP header is 20 bytes. Therefore maximum HTTP payload carried in one Ethernet frame is 1460 bytes. Our empirical observations have shown the maximum HTTP payload size to be 1370 bytes.</p>
    <p>Therefore session size can be estimated by finding the sum of continuous sequences of 1370 bytes, plus the size immediately before, plus the size immediately after.</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Network Traffic Features</p>
    <p>Network Traffic Features</p>
    <p>Figure: An approximation of session length can be recovered by summing continuous sequences of 1370 bytes.</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Network Traffic Features</p>
    <p>Network Traffic Features</p>
    <p>Other useful features within a network traffic sample include:</p>
    <p>Bursts of network activity Timing between activity bursts DNS information Packet counting</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Modern Web Development</p>
    <p>Modern Web Development</p>
    <p>Web applications, not just web pages.</p>
    <p>Real-time client-server communication (AJAX). Responsivity</p>
    <p>Lazy-loading of resources Scalable protocols (ie. DASH)</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Design</p>
    <p>Be able to exploit the following three modern web designs:</p>
    <p>Response Dependant Page Loads Real-time Feedback Systems Lazy Loading</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Exploiting Response Dependant Page Loads</p>
    <p>Exploiting Response Dependant Page Loads</p>
    <p>Remember, SSL/TLS is supposed to protect the confidentiality of a web application.</p>
    <p>Therefore, an adversary observing the encrypted communications of a web browser should be able to learn nothing on what the user has entered into an HTTPS submitted form.</p>
    <p>But what if the next page to be loaded depends on the responses submitted through this form?</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Exploiting Real-time Feedback Systems</p>
    <p>Exploiting Real-time Feedback Systems</p>
    <p>Remember, using SSL/TLS does not hide the sizes of sessions nor the times at which they begin and end.</p>
    <p>Therefore, an adversary can learn:</p>
    <p>When the real-time event occurred The possible type(s) of the real-time event based on its size</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Exploiting Lazy Loading</p>
    <p>Exploiting Lazy Loading</p>
    <p>A webpage with lazy loaded images will make different network requests dependant upon the geometry of the viewport.</p>
    <p>Remember that an adversary can open and close popup windows in arbitrary sizes to cross-domain webpages!</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Exploiting Lazy Loading</p>
    <p>Exploiting Lazy Loading</p>
    <p>Therefore an adversary can learn about the page layout by observing the network traffic generated when loaded in different sizes.</p>
    <p>exploit.js</p>
    <p>function do_popup(){</p>
    <p>var TARGET_URL = &quot;https://targeturl.com/targetpage&quot;;</p>
    <p>popup_window = window.open(TARGET_URL,'targetWindow','toolbar=no,location=no,status=no,</p>
    <p>menubar=no, scrollbars=no, resizable=no, width=100, height=200');</p>
    <p>//Set a timer to close automatically close this window</p>
    <p>window.setTimeout(function(){</p>
    <p>popup_window.close();</p>
    <p>}, 10000);</p>
    <p>}</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Implementation</p>
    <p>Our tools were built with the help of several open-source software packages.</p>
    <p>This section discusses those packages which play primary roles in our tools.</p>
    <p>Understanding these packages is also necessary for future improvements to our tools.</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Docker Container</p>
    <p>Docker Container</p>
    <p>We would like to make our tests:</p>
    <p>Isolated from normal computer use Easily distributable and reproducible</p>
    <p>Docker is the perfect tool for this!</p>
    <p>Dockerfile</p>
    <p>FROM ubuntu:latest</p>
    <p>RUN apt-get update</p>
    <p>RUN apt-get install -y vnc4server jwm firefox</p>
    <p>RUN apt-get install -y tcpdump</p>
    <p>...</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Linux Kernel Netfilter</p>
    <p>Linux Kernel Netfilter</p>
    <p>A subsystem of the Linux kernel allowing for network packet filtering and manipulation. Most commonly used through the iptables command.</p>
    <p>Netfilter Queue (NFQUEUE) target of iptables allows for network traffic to be manipulated through user space programs!</p>
    <p>nfqueue example.py</p>
    <p>def process(i, payload):</p>
    <p>payload.set_verdict(nfqueue.NF_DROP) #Drop all packets</p>
    <p>q = nfqueue.queue()</p>
    <p>q.open()</p>
    <p>q.bind(socket.AF_INET)</p>
    <p>q.set_callback(process)</p>
    <p>q.create_queue(0)</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Scapy</p>
    <p>Scapy</p>
    <p>A very robust Python library for packet creation, manipulation, and inspection.</p>
    <p>scapy example.py</p>
    <p>from scapy.all import *</p>
    <p>cap = rdpcap('captured_example.pcap')</p>
    <p>len(cap)</p>
    <p>&gt;&gt;&gt; 1889</p>
    <p>cap[281][IP].dst</p>
    <p>&gt;&gt;&gt; '172.19.0.2'</p>
    <p>cap[281][IP].src</p>
    <p>&gt;&gt;&gt; '52.84.143.116'</p>
    <p>cap[281][IP][TCP].sport</p>
    <p>&gt;&gt;&gt; 443</p>
    <p>cap[281][IP][TCP].dport</p>
    <p>&gt;&gt;&gt; 44782</p>
    <p>len(cap[281][IP][TCP].payload)</p>
    <p>&gt;&gt;&gt; 1370</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Evaluation</p>
    <p>We have discovered that through monitoring network traffic an adversary can:</p>
    <p>Discover which political candidate is recommended for a user of iSideWith.com. Determine which of the top ten Google searches of 2017 a user is likely searching for. Estimate the number of items in a users eBay shopping cart.</p>
    <p>These examples demonstrate the exploitation of the three vulnerable web designs discussed in this presentation; response dependant page loads, real-time feedback systems, and lazy-loading of web resources.</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>iSideWith.com</p>
    <p>iSideWith.com</p>
    <p>iSideWith.com recommends a political candidate based on a users responses to questions on divisive political issues.</p>
    <p>After submitting the questionnaire, a page displaying the recommended candidate is loaded.</p>
    <p>Therefore, the web design to be exploited in this example is Response Dependant Page Loads.</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>iSideWith.com</p>
    <p>iSideWith.com</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>iSideWith.com</p>
    <p>iSideWith.com</p>
    <p>Collected 80 PCAP network traffic capture files.</p>
    <p>Evaluated various machine learning classifiers.</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Analyzing Google Auto-Suggest</p>
    <p>Analyzing Google Auto-Suggest</p>
    <p>Every keystroke entered into the Google Search bar results in a burst of network traffic sent to the server containing the search substring followed by a burst of network traffic sent from server to client containing the suggested search queries.</p>
    <p>By observing this encrypted network traffic, an adversary can learn:</p>
    <p>The approximate number of keystrokes entered. The sizes of the suggestion lists.</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Analyzing Google Auto-Suggest</p>
    <p>Analyzing Google Auto-Suggest</p>
    <p>Figure: By observing the timing of network packets, counting the number of keystrokes entered becomes a trivial task.</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Analyzing Google Auto-Suggest</p>
    <p>Analyzing Google Auto-Suggest</p>
    <p>For analyzing the Google Auto-Suggest traffic, the following machine learning approaches were taken:</p>
    <p>Bayesian classification using number of bytes sent from server to client in each burst of network activity as well as the total number of bursts, as features. Nearest neighbour classification using the total number of exchanged packets in a session. A hybrid approach where the score is calculated as the Bayesian score divided by one plus the packet count distance.</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Analyzing Google Auto-Suggest</p>
    <p>Number Search Term</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Censoring Google Auto-Suggest</p>
    <p>Censoring Google Auto-Suggest</p>
    <p>Remember that SSL/TLS should protect the integrity of a web session.</p>
    <p>But if certain functionality can be detected and blocked then the integrity property is violated.</p>
    <p>What if we feed live network traffic to the Google Auto-Suggest classifier and use the output to control network traffic policy?</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Censoring Google Auto-Suggest</p>
    <p>realtime google filter.py</p>
    <p>drop_traffic = False #Should traffic be dropped or not</p>
    <p>captured_session = []</p>
    <p>def process(i, payload):</p>
    <p>global drop_traffic</p>
    <p>data = payload.get_data()</p>
    <p>if drop_traffic:</p>
    <p>print &quot;!!! Your Internet has been censored !!!&quot;</p>
    <p>...</p>
    <p>payload.set_verdict(nfqueue.NF_DROP)</p>
    <p>return</p>
    <p>...</p>
    <p>#Try to classify this session</p>
    <p>hybrid_result = getHybridClassifierType(captured_session,...)</p>
    <p>print &quot;!!! Hybrid Result is {}. Length of session is {} !!!&quot;.format(...)</p>
    <p>for censor_item in CENSORSHIP:</p>
    <p>...</p>
    <p>if hybrid_result == censor_label:</p>
    <p>if len(captured_session) in range(size_min, size_max):</p>
    <p>drop_traffic = True #Flip the killswitch!</p>
  </div>
  <div class="page">
    <p>Censoring Google Auto-Suggest</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Counting eBay Cart Items</p>
    <p>Counting eBay Cart Items</p>
    <p>Remember how on a page with lazy-loaded elements only the elements which are within the viewport are downloaded over the network.</p>
    <p>Therefore, if expanding the geometry of the viewport causes additional network traffic, this implies that lazy-loaded elements are present.</p>
    <p>eBays shopping cart uses lazy-loading. Therefore we can exploit this web design to estimate the number of items in the shopping cart.</p>
    <p>We can read DNS replies and isolate traffic from eBays image content delivery network (CDN).</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Counting eBay Cart Items</p>
    <p>Counting eBay Cart Items</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Defences</p>
    <p>To prevent against these types of attacks two conditions must be satisfied:</p>
    <p>Network traffic patterns must be indistinguishable from each other. The user and web application should immediately be made aware of network traffic tampering (eg. blocking requests).</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Defences</p>
    <p>Consider the implications of strict adherence to the condition that network traffic patterns must be indistinguishable from each other:</p>
    <p>All web requests must be padded to match the size of the largest web request. Noise traffic must be generated to obscure the presence of real-time events.</p>
    <p>Not suitable as a general-purpose fix as this would result in intolerable performance overheads for many applications.</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Defences</p>
    <p>At the current state of research an application-specific threat model and a cost-benefit approach are required.</p>
    <p>Does revealing what page was loaded violate the security requirements? Does revealing the timing of user events violate the security requirements? Etc...</p>
    <p>The model-driven software development process can help.</p>
    <p>Assign a property that all pages of a class be of the same size. Assign a property that the timing of network events must follow a predefined schedule. Etc...</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Conclusion</p>
    <p>We have discussed the theory and implementation for side-channel detection tools capable of detecting the following types of network traffic based side-channels in web applications:</p>
    <p>Response dependant page loads Real-time feedback systems Lazy-loading of web resources</p>
    <p>We have determined these vulnerable designs to be present in modern web applications.</p>
    <p>We have released all source code and example network traffic capture files on our GitHub page.</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Future Work</p>
    <p>Work with model-driven software development to enforce side-channel resistance properties such as those discussed in the defences section.</p>
    <p>Expand the future model-driven development work to include non-web network services such as remote shells (SSH) or control of IoT devices.</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
  <div class="page">
    <p>Introduction Underlying Concepts Design Implementation Evaluation Defences Conclusion and Future Work</p>
    <p>Thank you!</p>
    <p>Any questions?</p>
    <p>https://github.com/uoitdnalab/networksidechannel</p>
    <p>Michael Lescisin, Qusay H. Mahmoud University of Ontario Institute of Technology (UOIT)</p>
    <p>Tools for Active and Passive Network Side-Channel Detection for Web Applications</p>
  </div>
</Presentation>
