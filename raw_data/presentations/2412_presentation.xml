<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Preventing the Revealing of Online Passwords to Inappropriate Websites with LoginInspector</p>
    <p>Chuan Yue University of Colorado Colorado Springs</p>
  </div>
  <div class="page">
    <p>Text Passwords: the Dominant Position in Online User Authentication</p>
  </div>
  <div class="page">
    <p>Password Security</p>
    <p>The something you know authentication factor  Expectations: strong, protected from being stolen  Reality: weak/shared passwords, various attacks</p>
  </div>
  <div class="page">
    <p>Related Features and Mechanisms in Browsers (Internet Explorer, Firefox, Google Chrome, Safari, and Opera)</p>
    <p>Password Manger  Phishing Detection and Warning  Extended Validation (EV) Certificate</p>
  </div>
  <div class="page">
    <p>Are those password related features and mechanisms in modern browsers sufficient?</p>
  </div>
  <div class="page">
    <p>Are those password related features and mechanisms in modern browsers sufficient?</p>
  </div>
  <div class="page">
    <p>Accidental Revealing of Online Password to Inappropriate Websites May Happen!</p>
    <p>We highlight two cases  undetected phishing attacks</p>
    <p>risky password tries</p>
    <p>Modern browsers do not provide sufficient protection</p>
  </div>
  <div class="page">
    <p>Accidental Revealing of Online Password to Inappropriate Websites May Happen!</p>
    <p>We highlight two cases  undetected phishing attacks</p>
    <p>risky password tries</p>
    <p>Modern browsers do not provide sufficient protection</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Introduction  Motivation, Justification, and Related Work  Design of the LoginInspector  Implementation and Evaluation  Security, Usability, and Deployment Analysis  Conclusion and Acknowledgments</p>
  </div>
  <div class="page">
    <p>Undetected Phishing Attacks  Browsers fail to detect phishing attacks and give warning</p>
    <p>Blacklist-based techniques, heuristic-based techniques  Not able to detect all the phishing attacks in a timely manner and</p>
    <p>meanwhile maintain a low false positive rate [4, 13, 29, 39, 48, 49].</p>
    <p>Passwords for real sites  inappropriate phishing sites !</p>
    <p>LoginInspector takes a whitelist-based approach  Provide one more layer of protection even if browsers failed</p>
  </div>
  <div class="page">
    <p>Risky Password Tries  When users forget passwords for one site, a common</p>
    <p>practice is to try passwords for other sites they remember.  A user study for testing whether this risky practice is common</p>
    <p>Browsers do not and do not have the knowledge to detect</p>
    <p>Passwords for high-security sites  inappropriate lowsecurity sites !</p>
    <p>LoginInspector intends to also detect this risky practice</p>
  </div>
  <div class="page">
    <p>The First User Study on Risky Password Tries</p>
    <p>Q3: Agree or Strongly Agree that sometimes they forget the password for a website Q5: Agree or Strongly Agree that sometimes they try the password for one website</p>
    <p>on another website Q7: Agree or Strongly Agree that when they try the password for one website on</p>
    <p>another website, they hope the Web browser can give them a warning</p>
    <p>30 participants, on campus  a five-point Likert-scale [58]</p>
    <p>questionnaire with 7 questions</p>
    <p>Q3 Q5 Q7</p>
  </div>
  <div class="page">
    <p>Some Closely Related Work  Password hashing systems</p>
    <p>E.g., Password Multiplier[14], PwdHash[33], Passpet[43]</p>
    <p>Migrating original passwords to hashed ones is a big burden  Cannot log into a website without the tool</p>
    <p>Whitelist-based systems  E.g., Antiphish[24],  uses password encryption, less fine-grained  E.g., Web Wallet[41]  uses password encryption, special UI  Hashing is more appropriate than encryption, users prefer</p>
    <p>regular login forms than special login dialog boxes</p>
  </div>
  <div class="page">
    <p>The Key Idea and Functioning of LoginInspector</p>
    <p>Continuously monitor a users login actions and securely store domain specific successful login information to an in-browser database</p>
    <p>For any login attempt that does not have the corresponding successful login record, warn and enable the user to make an informed decision</p>
  </div>
  <div class="page">
    <p>High-level Architecture of LoginInspector</p>
  </div>
  <div class="page">
    <p>The Successful Login Profile Database</p>
    <p>An in-browser database instance  Contains a loginprofile table</p>
    <p>where, HMAC is Keyed-Hashing for Message Authentication[27] with SHA-256 [59] cryptographic hash; key is secret key stored in password manager and protected with a master password; d is extracted from each login forms owner document (e.g., https://www.amazon.com or http://en.wikipedia.org).</p>
  </div>
  <div class="page">
    <p>Login Fields Identification and Protection</p>
    <p>Identification: first password field, then username field  Password field: user-assisted identification (@@ prefix[33])</p>
    <p>and automatic identification; Username field: heuristic</p>
    <p>Protection  Intercept password keystrokes, generate fake ones, replace back</p>
  </div>
  <div class="page">
    <p>Login Profile Inspection  When a user submits a login form</p>
    <p>Compute a currentDomainHmac and a currentRecordHmac  Run the login profile inspection procedure</p>
    <p>Display Initial Visit warning</p>
    <p>Display Credential Mismatch warning</p>
    <p>Submit the form using real password</p>
  </div>
  <div class="page">
    <p>Warning Generation  Modal chrome type of dialog box</p>
  </div>
  <div class="page">
    <p>Admin Report  Generate/send reports to system administrators if enabled</p>
    <p>some users may not properly interpret the warning messages  only contain the LoginInspector usage information, e.g., a users</p>
    <p>responses to the two types of warning messages in a session</p>
    <p>{userid: 123456, ignored Initial Visit warning: 10 times, ignored Credential Mismatch warning: 6 times, sessionStartTime: 1345846451434, sessionEndTime: 1345846648635, ......}.</p>
    <p>administrators can help individual users or aggregate information</p>
  </div>
  <div class="page">
    <p>Successful Login Detection, Management, Import/Export</p>
    <p>Successful Login Detection  Heuristic approach does not always work well  A user-assisted method is useful, a dialog box with Yes, No  Determine if a new successful login record should be added</p>
    <p>Management  customize warning messages, remove records, etc.</p>
    <p>Import/Export  export records to a file, import from another computer</p>
  </div>
  <div class="page">
    <p>Implementation and Evaluation</p>
    <p>Firefox Extension  Pure JavaScript  SQLite[62] database instance  Possible for other browsers</p>
    <p>Correctness Evaluation  Works correctly on 30 popular legitimate websites, 30</p>
    <p>phishing websites, and a new phishing scam[60]</p>
    <p>Performance Evaluation  Overhead is low on 30 popular legitimate websites</p>
  </div>
  <div class="page">
    <p>Correctness Evaluation (1)</p>
    <p>Works correctly on 30 popular legitimate websites  Automatic password/username fields identification</p>
    <p>Correct passwords interception and replacement</p>
    <p>Correct database operations, login profile inspection, etc.</p>
    <p>Automatic successful login detection works on 29 sites; the one with an extra link on the failed login page needs user assistance</p>
    <p>Correct decisions on whether and what type of warning messages should be displayed</p>
  </div>
  <div class="page">
    <p>Correctness Evaluation (2)</p>
    <p>Works correctly on 30 phishing websites  Automatic password/username fields identification on 29 sites;</p>
    <p>the one with password type=text needs user assistance  Correct passwords interception and replacement  Initial Visit warning message was correctly displayed</p>
    <p>Firefox failed to detect seven of them</p>
    <p>Google Chrome failed to detect eight of them</p>
  </div>
  <div class="page">
    <p>Correctness Evaluation (3)</p>
    <p>Works correctly on a new phishing scam[60]  Email attached HTML file, POST type HTTP request to a</p>
    <p>hacked legitimate site, very stealthy (1) a browser simply loads the phishing webpage as a local file such as file:///C:/Users/.../home.html (2) the form is submitted to a legitimate, albeit hacked, website</p>
    <p>Firefox and Google Chrome did not detect such scams[60]</p>
  </div>
  <div class="page">
    <p>Performance Evaluation</p>
    <p>Overhead is low on 30 popular legitimate websites  2.67GHz CPU</p>
    <p>HMAC calculations completed in 3 milliseconds</p>
    <p>Overhead is mainly on JavaScript invoked SQLite operations  Insert: average 140.6 milliseconds, with standard deviation 47.2  Update: average 70.2 milliseconds, with standard deviation 13.1  Overhead is incurred only when a login form is submitted</p>
  </div>
  <div class="page">
    <p>Security, Usability, Deployment Advantages</p>
    <p>Security  Only store hashed value, does not involve third party  Display active warnings, send reports to administrators</p>
    <p>Usability  Does not need to change the original passwords for any site  Designed as an auxiliary tool, does not affect the login process</p>
    <p>Deployment  Can be incrementally deployed, deployment is very simple</p>
  </div>
  <div class="page">
    <p>Security &amp; Usability Limitations and Suggestions</p>
    <p>The effectiveness of active warnings still depends on whether a user can read/understand/pay attention to them  a training should target at-risk population, be cost effective</p>
    <p>In the profiling phase, warnings must be carefully ignored  perform the profiling in a batch manner, e.g., in an hour  system administrators can help regular users build up the profile  be cautious about the warnings if they appear again</p>
    <p>The successful login profile is only locally accessible  Synchronize to a cloud storage service</p>
  </div>
  <div class="page">
    <p>Conclusion and Future Work  Accidental online password revealing may happen</p>
    <p>Undetected phishing attacks, risky password tries</p>
    <p>LoginInspector  a profiling-based warning mechanism</p>
    <p>Implemented and evaluated as a Firefox extension</p>
    <p>Future: usability evaluation, password manager integration</p>
  </div>
  <div class="page">
    <p>Acknowledgments</p>
    <p>Anonymous reviewers, shepherd Mario Obejas  Jeff Hinson for his important contributions  Voluntary students and faculty members in user study  UCCS 2011-2012 CRCW research grant</p>
    <p>Thank You!</p>
  </div>
</Presentation>
