<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Automatic Problem Generation for Capture-the-Flag Competitions</p>
    <p>This material is based upon work supported by the National Science Foundation under Grant No. 1419362 and by a Graduate Research Fellowship under Grant No. 0946825. 8/11/2015</p>
    <p>Jonathan Burket jburket@cmu.edu</p>
    <p>Peter Chapman peter@cmu.edu</p>
    <p>Tim Becker tjbecker@cmu.edu</p>
    <p>Carnegie Mellon University</p>
    <p>Chris Ganas cganas@cmu.edu</p>
    <p>David Brumley dbrumley@cmu.edu</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Overview of Automatic Problem Generation Flag Sharing in picoCTF 2014 Future Work</p>
  </div>
  <div class="page">
    <p>Jeopardy-Style Capture-the-Flag</p>
    <p>Cryptography 100</p>
    <p>Cryptography 200</p>
    <p>Web 100</p>
    <p>Web 200</p>
    <p>Forensics 100</p>
    <p>Flag: sql_injection_rox</p>
    <p>Points!</p>
  </div>
  <div class="page">
    <p>Example CTF Problem You find an encrypted message written on the documents. Can you decrypt it? rfc qcapcr nyqqnfpyqc gq bmuasiugssaxxlextkasoklntcidhm</p>
    <p>the secret passphrase is dowcukwiuuczzngzvmcuqmnpvekfjo</p>
  </div>
  <div class="page">
    <p>Flag Sharing</p>
    <p>Flag: sql_injection_rox</p>
    <p>Points!</p>
    <p>Points!</p>
    <p>Alice</p>
    <p>Bob</p>
  </div>
  <div class="page">
    <p>Flag Sharing</p>
    <p>Flag: sql_injection_rox</p>
    <p>Points!</p>
    <p>freeflags.com</p>
    <p>Points!Points!Points!</p>
    <p>Alice</p>
    <p>Bob Carol Dave</p>
  </div>
  <div class="page">
    <p>Changing Problems Automatically</p>
    <p>the secret passphrase is dowcukwiuuczzngzvmcuqmnpvekfjo</p>
    <p>rfc qcapcr nyqqnfpyqc gq bmuasiugssaxxlextkasoklntcidhm</p>
    <p>the secret passphrase is vrsoblzffauncgrgknleuxedsknnhb</p>
    <p>rfc qcapcr nyqqnfpyqc gq tpqmzjxddyslaepeiljcsvcbqillfz</p>
    <p>k=24</p>
    <p>k=24</p>
  </div>
  <div class="page">
    <p>Changing Problems Automatically</p>
    <p>the secret passphrase is dowcukwiuuczzngzvmcuqmnpvekfjo</p>
    <p>rfc qcapcr nyqqnfpyqc gq bmuasiugssaxxlextkasoklntcidhm</p>
    <p>the secret passphrase is dowcukwiuuczzngzvmcuqmnpvekfjo</p>
    <p>znk ykixkz vgyyvnxgyk oy juciaqcoaaifftmfbsiawstvbkqlpu</p>
    <p>k=24</p>
    <p>k=6</p>
    <p>These different versions can be generated automatically!</p>
  </div>
  <div class="page">
    <p>Automatic Problem Generation Through Automatic Problem Generation, different competitors can receive different versions (autogen problem instances) of a given problem.</p>
    <p>wkh vhfuhw sdvvskudvh lv yuvreociidxqfjujnqohxahgvnqqke</p>
    <p>Flag: vrsoblzffauncgrgknleux</p>
    <p>rfc qcapcr nyqqnfpyqc gq bmuasiugssaxxlextkasoklntcidhm</p>
    <p>Flag: dowcukwiuuczzngzvmc</p>
    <p>Alice</p>
    <p>Bob</p>
    <p>Flags cant be shared!</p>
  </div>
  <div class="page">
    <p>Templated Autogen Problems</p>
    <p>What is the value of {register} after executing the instruction at address {memory address}?</p>
    <p>What is the value of eax after executing the instruction at address 0x12345678?</p>
    <p>What is the value of ebx after executing the instruction at address 0x20202020?</p>
    <p>Problem instances are essentially the same, but have slightly different details.</p>
    <p>Good for detection and prevention of flag sharing</p>
  </div>
  <div class="page">
    <p>Flag: vrsoblzffauncgrgknleux</p>
    <p>Correct Flag: dowcukwiu</p>
    <p>Alice</p>
    <p>Bob</p>
    <p>Flag: vrsoblzffauncgrgknleux</p>
    <p>Correct Flag: vrsoblzff</p>
    <p>Correct!</p>
    <p>Flag Sharing!</p>
    <p>We detect flag sharing by looking for cases where users submit incorrect flags that are correct for an instance other</p>
    <p>than their own</p>
  </div>
  <div class="page">
    <p>Correct Flag: dowcukwiu</p>
    <p>Alice</p>
    <p>Bob</p>
    <p>Correct Flag: vrsoblzff</p>
    <p>freeflags.com</p>
    <p>The correct flag for this problem is vrsoblzffauncgrgknleux</p>
    <p>Distinct, per instance flags allows competition to detect the source of shared flags</p>
  </div>
  <div class="page">
    <p>Challenges</p>
    <p>Balanced Difficulty  Bug Prevention  Scalability and Deployment</p>
  </div>
  <div class="page">
    <p>Balanced Problem Difficulty</p>
    <p>Need to make sure each problem instance is reasonably close to the same difficulty.</p>
    <p>the secret passphrase is dowcukwiuuczzngzvmcuqmnpvekfjo</p>
    <p>the secret passphrase is dowcukwiuuczzngzvmcuqmnpvekfjo</p>
    <p>k=0</p>
  </div>
  <div class="page">
    <p>Scalability and Deployment</p>
    <p>Each team must be given a team-specific problem instance</p>
    <p>Problem instance generation must not bottleneck the performance of the competition</p>
    <p>For problems served from remote machines, instances must be deployed to those machines and synchronized with the grading server</p>
  </div>
  <div class="page">
    <p>Automatic Problem Generation in picoCTF 2014</p>
  </div>
  <div class="page">
    <p>picoCTF 2014</p>
    <p>3,185 Eligible Teams  9,738 Eligible Students  12 Day Competition  66 Security Challenges  Cash Prizes for Top 10</p>
    <p>Teams</p>
  </div>
  <div class="page">
    <p>Automatically Generated Problems in picoCTF 2014</p>
    <p>Problem Name Category Score Teams Solved Tyrannosaurus Hex Miscellaneous 10 3185 No Comment Web 20 2952 Caesar Cryptography 20 2648 Internet Inspection Web 30 2704 Javascrypt Web 40 1719 Substitution Cryptography 50 1677 ZOR Cryptography 50 554 Basic ASM Reversing 60 887 Repeated XOR Cryptography 70 182 Block Cryptography 130 35</p>
  </div>
  <div class="page">
    <p>Flag Sharing in picoCTF 2014 127,412 flags (correct and incorrect) submitted to automatically generated problems 1,081 (0.84%) labeled as shared flags 530 distinct flag sharing cases 14% (460/3185) of teams involved</p>
  </div>
  <div class="page">
    <p>Likely Source of Shared Flag</p>
  </div>
  <div class="page">
    <p>Unknown, 126, 25%</p>
    <p>Likely Source of Shared Flag</p>
  </div>
  <div class="page">
    <p>Unknown, 126, 25%</p>
    <p>Youtube, 47, 10%</p>
    <p>Stack Overflow, 47, 10%</p>
    <p>Other Online Disclosure, 12, 2%</p>
    <p>Likely Source of Shared Flag</p>
  </div>
  <div class="page">
    <p>N um</p>
    <p>be r</p>
    <p>of S</p>
    <p>ub m</p>
    <p>is si</p>
    <p>on s</p>
    <p>Submissions of &quot;flag_2238&quot; for Problem &quot;Javascrypt&quot;</p>
    <p>Correct Submissions (Cumulative) Incorrect Submissions (Cumulative)</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Unknown, 126, 25%</p>
    <p>Youtube, 47, 10%</p>
    <p>Stack Overflow, 47, 10%</p>
    <p>Other Online Disclosure, 12, 2%</p>
    <p>Likely Source of Shared Flag</p>
  </div>
  <div class="page">
    <p>Unknown, 126, 25%</p>
    <p>Submitted by Another Team at School (Earlier),</p>
    <p>Youtube, 47, 10%</p>
    <p>Stack Overflow, 47, 10%</p>
    <p>Other Online Disclosure, 12, 2%</p>
    <p>Likely Source of Shared Flag</p>
  </div>
  <div class="page">
    <p>Pe rc</p>
    <p>en t o</p>
    <p>f S ub</p>
    <p>m is</p>
    <p>si on</p>
    <p>s (C</p>
    <p>um ul</p>
    <p>at iv</p>
    <p>e)</p>
    <p>Number of Hours after Original Submission</p>
    <p>Time Between Original Submission and Copied Flag Submission</p>
  </div>
  <div class="page">
    <p>Future of Automatic Problem Generation in CTFs</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Synthesized Autogen Problems</p>
    <p>void check_input(int v0, int v1) { v0 += 7; int v2 = 0; v0 *= v2; v1 += 2; if(v0 &lt; 45) {</p>
    <p>int v3 = v0; v2 -= v3;</p>
    <p>} v1 *= 8; int v4 = 3; v4 *= v1; if(v0 != 0) {</p>
    <p>you_lose(); return;</p>
    <p>} if(v2 != 0) {</p>
    <p>you_lose(); return;</p>
    <p>} if(v4 != -456) {</p>
    <p>you_lose(); return;</p>
    <p>} get_key(); return;</p>
    <p>}</p>
    <p>void check_input(int v0, int v1, int v2, int v3, int v4, int v5, int v6) { int v7 = -1; v3 -= 3; v6 -= 1; for(int v8=1; v8&lt;= 9; v8+=v1) {</p>
    <p>v5 += v8; v2 *= v6;</p>
    <p>} int v9 = 6; int v10 = 0; if(v2 &lt;= v9) {</p>
    <p>v5 *= v4; v0 += v3;</p>
    <p>} else {</p>
    <p>v3 |= v6; } int v11 = v6; v11 += v10; for(int v12=1; v12&lt; 10; v12+=v5) {</p>
    <p>int v13 = v7; v6 *= v0; if(v5 == 44) {</p>
    <p>v13 -= v2; v11 *= v10;</p>
    <p>} else {</p>
    <p>v13 *= v11;</p>
    <p>void check_input(int v0, int v1) { int v2 = v1; int v3 = v0; if(v1 &gt; 29) {</p>
    <p>v0 *= v1; } if(v0 != -8930) {</p>
    <p>you_lose(); return;</p>
    <p>} if(v2 != 94) {</p>
    <p>you_lose(); return;</p>
    <p>} if(v3 != -95) {</p>
    <p>you_lose(); return;</p>
    <p>} get_key(); return;</p>
    <p>}</p>
    <p>Similar Difficulty</p>
    <p>Harder</p>
  </div>
  <div class="page">
    <p>Synthesized Autogen Problems</p>
    <p>Easy</p>
    <p>Hard</p>
  </div>
  <div class="page">
    <p>Questions?</p>
    <p>https://github.com/picoCTF/picoCTF-Platform-2</p>
  </div>
</Presentation>
