<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>MAD12</p>
    <p>Monitoring the Dynamics of Network Traffic by Recursive Multi-dimensional Aggregation Midori Kato, Kenjiro Cho, Michio Honda, Hideyuki Tokuda</p>
  </div>
  <div class="page">
    <p>Background  Traffic monitoring is important to detect changes in traffic</p>
    <p>patterns 1. Understanding network usage 2. Detecting abnormal conditions (e.g. flash crowd, DDoS</p>
    <p>attacks and mis-configuration)</p>
    <p>Concise summary is needed for operators  not to overlook possible anomalies but detailed enough to</p>
    <p>identify anomalies and dynamics  produced by efficient flow based traffic analysis</p>
    <p>The dynamics of flows is good enough to understand network condition</p>
  </div>
  <div class="page">
    <p>Multi-dimensional Flow Aggregation  Extract significant patterns by aggregating flows</p>
    <p>Flow: packets with unique 5-tuple (source/destination IP address, source/destination port and protocol) (e.g. a single TCP connection)</p>
    <p>Aggregated flow: a set of common attributes in 5-tuple (e.g. TCP connections directed from 10.0.0.0/29:80 to 10.1.0.0/24:*)</p>
    <p>Flow 10.0.0.7:80 - 10.1.0.2:3003 TCP</p>
    <p>Aggregated Flow (src/dst address)</p>
    <p>Aggregated Flow (+ dst port)</p>
  </div>
  <div class="page">
    <p>Example of visualization</p>
  </div>
  <div class="page">
    <p>Aggregated flow representation</p>
    <p>traffic volume and packet counter percentage</p>
    <p>Decomposition of protocol and src/dst port numbers within IP address pair</p>
    <p>src/dst IP addresses</p>
  </div>
  <div class="page">
    <p>Problem statement  Most of aggregated flow visualization lacks interactivity</p>
    <p>trade-off between performance and flexibility</p>
    <p>Motivation: we enhance interactivity with granularity control of aggregated flows  Temporal granularity: a period while significant (aggregated) flows</p>
    <p>are extracted  Spatial granularity: details of addresses and ports</p>
    <p>Spatial granularity</p>
    <p>Temporal granularity</p>
  </div>
  <div class="page">
    <p>Challenges  Cluster flows in huge attribute spaces on the fly</p>
    <p>Millions of flows into several aggregated flows  Reduce computer overhead when changing views</p>
    <p>Raw data</p>
    <p>Zoom-in</p>
    <p>Overview</p>
    <p>Zoom-out</p>
  </div>
  <div class="page">
    <p>Agurim  Agurim: our proposed algorithm for efficient and</p>
    <p>flexible multi-dimensional flow aggregation  realizes interactive visualization  Efficiency: produces reusable and fine-grained aggregated-flow</p>
    <p>records from raw data</p>
    <p>Flexibility: aggregates flows to provide a requested view by using these records</p>
    <p>aggregated flow records</p>
    <p>Zoom-in Overview</p>
    <p>Zoom-out</p>
    <p>Raw data</p>
  </div>
  <div class="page">
    <p>Agurim overview: two-staged flow aggregation</p>
    <p>Primary Aggregation for efficient data processing - produce reusable and fine-grained aggregated flow records from raw data</p>
    <p>aggregated flow records</p>
    <p>Zoom-in Overview</p>
    <p>Zoom-out</p>
    <p>Raw data</p>
    <p>Secondary Aggregation for flexible visualization - generate plot data for desired temporal and spatial</p>
    <p>granularity by using flow records</p>
  </div>
  <div class="page">
    <p>aggregated flow records</p>
    <p>Zoom-in Overview</p>
    <p>Zoom-out</p>
    <p>Raw data</p>
    <p>Agurim overview: two-staged flow aggregation</p>
    <p>Primary Aggregation for efficient data processing - produce reusable and fine-grained aggregated flow records from raw data</p>
    <p>Secondary Aggregation for visualization - generate plot data for desired temporal and spatial</p>
    <p>granularity - recursive aggregation: re-aggregate flow records 10</p>
    <p>recursive aggregation</p>
  </div>
  <div class="page">
    <p>Previous Work</p>
    <p>Monitoring tool Multi-dimensional Flow Aggregation?</p>
    <p>Recursive Aggregation?</p>
    <p>[1] K. Cho, R. Kaizaki, and A. Kato. Aguri: An aggregation-based traffic profiler In Quality of Future Internet Services, 2001. [2] C. Estan, S. Savage, and G. Varghese. Automatically inferring patterns of resource consumption in network traffic In ACM SIGCOMM 2003. [3] L. Yuan, C.-N. Chuah, and P. Mohapatra. Progme: towards programmable network measurement In ACM SIGCOMM,2007 [4] Y. Zhang, S. Singh, S. Sen, N. Duffield, and C. Lund. Online identification of hierarchical heavy hitters: algorithms, evaluation, and applications In ACM IMC 2004 [5] G. Cormode, F. Korn, S. Muthukrishnan, and D. Srivastava. Diamond in the rough: finding hierarchical heavy hitters in multidimensional data. In ACM SIGMOD, 2004</p>
    <p>Agurim yes yes</p>
  </div>
  <div class="page">
    <p>Primary Aggregation Overview</p>
    <p>Agurim produces fine-grained aggregated flow records for each time bin</p>
    <p>Time bin (e.g. 1 min)</p>
    <p>time</p>
    <p>wild card 70% 78% Aggregated flow 1 19% 12% Aggregated flow 2 5% 6% Aggregated flow 3 6% 4%</p>
    <p>[TCP:*:*] 93.2% 90.8% [UDP:52771:*] 12.5% 11.0%</p>
    <p>[TCP:*:*] 40.2% 50.8% [TCP:80:*] 60.5% 30.0%</p>
    <p>wild card 71% 80% Aggregated flow 1 14% 10% Aggregated flow 2 5% 5% Aggregated flow 4 5% 5%</p>
    <p>[TCP:*:*] 93.2% 95.0% [TCP:41:*] 12.5% 4.9%</p>
  </div>
  <div class="page">
    <p>Primary Aggregation overview (cont)</p>
    <p>processes 5-attribute space by two-pass algorithm</p>
    <p>Raw data</p>
    <p>aggregated flow records</p>
    <p>S1, S2,  , Sm</p>
    <p>D1, D2,  , Dn</p>
    <p>Aggregated attributes for src address</p>
    <p>Aggregated attributes for dst address</p>
    <p>S1 S2 Sm</p>
    <p>Dn</p>
    <p>D1</p>
    <p>D2</p>
    <p>S0</p>
    <p>D0</p>
    <p>dst\src</p>
    <p>(unit: KB)</p>
    <p>[1st-pass] Aggregate each attribute separately</p>
    <p>[2nd-pass] Match each packet against aggregated attributes</p>
    <p>* Protocol/port space are processed in a similar way</p>
    <p># of attributes: 1/100  1/1000</p>
  </div>
  <div class="page">
    <p>Secondary Aggregation Overview - Aggregated flow records still have redundant information to visualize - In the secondary aggregation, Agurim</p>
    <p>[1] maps all the flow records into address space for a specified duration</p>
    <p>[2] aggregates small flows to find superset for visualization [3] re-aggregate flows to reduce computation overhead</p>
    <p>wild card 70% 78%</p>
    <p>Aggregated flow 1 19% 12%</p>
    <p>Aggregated flow 2 5% 6%</p>
    <p>Aggregated flow 3 6% 4%</p>
    <p>...</p>
    <p>source address space</p>
    <p>destination address space</p>
    <p>time</p>
    <p>wild card 71% 80%</p>
    <p>Aggregated flow 1 14% 10%</p>
    <p>Aggregated flow 2 5% 5%</p>
    <p>Aggregated flow 4 5% 5%</p>
    <p>wild card 80% 85%</p>
    <p>Aggregated flow 1 10% 8%</p>
    <p>Aggregated flow 2 6% 5%</p>
    <p>Aggregated flow 7 4% 2%</p>
    <p>Time bin (e.g. 1 min)</p>
    <p>[TCP:*:*] 93.2% 90.8% [UDP:52771:*] 12.5% 11.0%</p>
    <p>[1] mapping flows</p>
  </div>
  <div class="page">
    <p>R1</p>
    <p>R2</p>
    <p>R3</p>
    <p>R5 R4</p>
    <p>o2 o3</p>
    <p>o6</p>
    <p>o7 o4</p>
    <p>o5</p>
    <p>R4 R5</p>
    <p>R1 R2 R3</p>
    <p>o7o6</p>
    <p>o3o2</p>
    <p>o4 o5</p>
    <p>o1</p>
    <p>o1</p>
    <p>R-tree enables spatial data access  Parent node holds the entire region of child nodes  Aggregate neighbors based on minimum boundary region</p>
    <p>We use R-tree not to answer range queries but to find superset 15</p>
    <p>[2] aggregating small flows</p>
    <p>Secondary Aggregation Overview (cont)</p>
  </div>
  <div class="page">
    <p>Secondary Aggregation Overview (cont)</p>
    <p>wild card 70% 78%</p>
    <p>Aggregated flow 1 19% 12%</p>
    <p>Aggregated flow 2 5% 6%</p>
    <p>Aggregated flow 3 6% 4%</p>
    <p>...</p>
    <p>source address space</p>
    <p>destination address space</p>
    <p>time</p>
    <p>wild card 71% 80%</p>
    <p>Aggregated flow 1 14% 10%</p>
    <p>Aggregated flow 2 5% 5%</p>
    <p>Aggregated flow 4 5% 5%</p>
    <p>wild card 80% 85%</p>
    <p>Aggregated flow 1 10% 8%</p>
    <p>Aggregated flow 2 6% 5%</p>
    <p>Aggregated flow 7 4% 2%</p>
    <p>Time bin (e.g. 1 min)</p>
    <p>[TCP:*:*] 93.2% 90.8% [UDP:52771:*] 12.5% 11.0%</p>
    <p>- Agurim aggregates short and significant flows by flow reaggregation</p>
    <p>wild card 75% 80%</p>
    <p>Aggregated flow 1 16% 25%</p>
    <p>Aggregated flow 2 9% 9%</p>
    <p>[3] re-aggregates records to reduce computation overhead</p>
  </div>
  <div class="page">
    <p>Demo</p>
  </div>
  <div class="page">
    <p>- Significant UDP traffic using RIP port - From several srcs to many dsts</p>
    <p>Agurim visualization</p>
  </div>
  <div class="page">
    <p>Agurim visualization</p>
    <p>zooming a suspicious flow by changing granularity</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Performance of Primary Aggregation  Measure processing time using pcap(tcpdump) and Netflow[6] data</p>
    <p>Netflow: Agurim takes less than 10-second to process 1-minutelong 3Gbps traffic  Because trace data has been aggregated to some extent</p>
    <p>Pcap: Agurim takes 40-second to process 1-minute-long 1Gbps traffic  Main contributor: attirubute lookup for each packet  Possible optimization: flow cache to store frequently-accessed</p>
    <p>items 21</p>
    <p>Dataset: 4-hour trace data collected on 10Gbps link from Tier 1 ISP to CAIDA timebin: 1 min. CPU: Intel Core i5 @2.5GHz</p>
    <p>ce ss</p>
    <p>in g</p>
    <p>tim e</p>
    <p>(s ec</p>
    <p>)</p>
    <p>Gbps</p>
    <p>Netflow v5 pcap</p>
    <p>[6] T. Zseby and S. Zander and G. CarleRFC3334: Policy-Based Accounting</p>
  </div>
  <div class="page">
    <p>Performance of Secondary Aggregation  Measure processing time until Agurim generates plot data</p>
    <p>Processing time increases exponentially with the number of flows  Main contributor: loop of finding and aggregating small flows</p>
    <p>until the requested # of flows is reached  On-going work: optimization with flow re-aggregation</p>
    <p>Pre-aggregate small flows  Recursive aggregation: Prepare coarser data (e.g., 1-hour, 1-day)</p>
    <p>for coarse grained views</p>
    <p>time period in the entire view</p>
    <p>observed unique aggr. flows</p>
    <p>processing time</p>
    <p>Dataset: 7-day-long aggregated flow records collected on 150Mbps transit link of WIDE backbone Time bin of records: 1 min Time resolution of plot: 1 hour</p>
  </div>
  <div class="page">
    <p>Conclusion  Agurim</p>
    <p>achieve dynamic granularity control by multi-dimensional flow re-aggregation</p>
    <p>produce 1-day-long plot data in 1.5 seconds</p>
    <p>Agurim will help to manage complex and dynamic todays networks</p>
    <p>Future work  Release the code as open source software  Improve system performance  Evaluate the aggregation accuracy</p>
    <p>Demo in the demo session</p>
  </div>
</Presentation>
