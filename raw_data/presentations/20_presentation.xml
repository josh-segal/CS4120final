<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Contour Tracking and InformationContour Tracking and Information--guided guided Navigation Navigation</p>
    <p>in Wireless Sensor Networksin Wireless Sensor Networks</p>
    <p>Jie Gao</p>
    <p>Stony Brook University</p>
    <p>Joint work with</p>
    <p>Xianjin Zhu, Rik Sarkar,</p>
    <p>Leonidas Guibas, Joseph S. B. Mitchell</p>
  </div>
  <div class="page">
    <p>Sensing and reacting to a spatial signal</p>
    <p>Dense sensors distributed to monitor a spatial</p>
    <p>signal (temperature, traffic density, pollution</p>
    <p>level, etc).</p>
  </div>
  <div class="page">
    <p>A smart environment</p>
    <p>Real-time situation understanding</p>
    <p>Information-guided navigation  Real-time response and emergency rescue</p>
    <p>Direct vehicles to alleviate traffic jam</p>
    <p>Find a low-value path? Am I surrounded?</p>
  </div>
  <div class="page">
    <p>Goal: track the spatial structure</p>
    <p>Track contours and their evolvement over time.</p>
    <p>Track local max/min, saddles, and relationship</p>
    <p>between them.</p>
  </div>
  <div class="page">
    <p>Contour tree</p>
    <p>A tree on critical points</p>
    <p>(local max/min,</p>
    <p>saddles).</p>
    <p>Capture the contour  Capture the contour</p>
    <p>merging/splitting,</p>
    <p>emergence,</p>
    <p>disappearance.</p>
  </div>
  <div class="page">
    <p>Information guided navigation</p>
    <p>Iso-contour queries: find the contours at level x.</p>
    <p>Low-value routing: find a path from s to t with value</p>
    <p>below x.</p>
    <p>Gradient descent</p>
    <p>methods + contour</p>
    <p>tree maintenance.</p>
  </div>
  <div class="page">
    <p>Challenges of maintaining a contour tree</p>
    <p>Can we locally identify max/min and saddles?</p>
    <p>?</p>
  </div>
  <div class="page">
    <p>Challenges of maintaining a contour tree</p>
    <p>Connect the critical points.</p>
    <p>Emergence of a local max/min can change the tree  Emergence of a local max/min can change the tree</p>
    <p>in a non-local fashion.</p>
  </div>
  <div class="page">
    <p>This talk: two (simpler) problems</p>
    <p>Maintain the iso-contour at value x in a time-varying signal field.</p>
    <p>Construct the contour tree in a static field.</p>
  </div>
  <div class="page">
    <p>Contour tracking problemContour tracking problem</p>
    <p>Binary sensor model:</p>
    <p>Value 1 = in the range of interest</p>
    <p>Value 0, otherwise.</p>
    <p>Color of senor i Color of senor i  BLACK: with value 1 and all its neighbor have value 1</p>
    <p>WHITE: with value 0 and all its neighbor have value 0</p>
    <p>GRAY: otherwise.</p>
    <p>Black regions and white regions are separated by gray.</p>
    <p>Robustness: a salt-and-pepper signal field is not worth</p>
    <p>tracking.</p>
  </div>
  <div class="page">
    <p>Contour tracking problemContour tracking problem</p>
    <p>Contour network: capture topological features of</p>
    <p>dynamic contours</p>
    <p>Inside k-gray band: within k hops</p>
    <p>from BLACK regions (tightly enclosing</p>
    <p>BLACK &amp; reduced communication cost) BLACK &amp; reduced communication cost)</p>
    <p>Deformation retract:</p>
    <p>A continuous map that shrinks a</p>
    <p>space to a thinner subspace,</p>
    <p>while maintain the same topology</p>
    <p>Contour network</p>
  </div>
  <div class="page">
    <p>ChallengesChallenges</p>
    <p>A valid contour network may have very different local</p>
    <p>features.</p>
    <p>When a part of the network is removed, how to repair it?</p>
    <p>? How to reconnect the partial contours?</p>
  </div>
  <div class="page">
    <p>Repair a single contour cycleRepair a single contour cycle</p>
    <p>Who is responsible for the repair?</p>
    <p>Open red nodes take responsibility to repair</p>
    <p>Red nodes (on the contour) that lose one or more current red neighbors become OPEN.</p>
    <p>Competition is resolved by IDs (lower ID wins). Competition is resolved by IDs (lower ID wins).</p>
  </div>
  <div class="page">
    <p>Repair a single contour cycleRepair a single contour cycle</p>
    <p>Make sure we re-connect the open endpoints in the</p>
    <p>correct direction.</p>
    <p>The k-hop neighbors of the closed red segments block</p>
    <p>the propagation of repair messages.</p>
  </div>
  <div class="page">
    <p>Contour mergingContour merging</p>
    <p>Simultaneous repair, merging and splitting</p>
    <p>A repair message may encounter multiple OPEN</p>
    <p>RED nodes, how to connect them?</p>
  </div>
  <div class="page">
    <p>Contour mergingContour merging</p>
    <p>Simultaneous repair, merging and splitting</p>
    <p>Connect by a (non self-intersecting) spanning tree.</p>
    <p>Say, the shortest path tree.</p>
  </div>
  <div class="page">
    <p>Contour tracking examples</p>
  </div>
  <div class="page">
    <p>Video clipVideo clip</p>
  </div>
  <div class="page">
    <p>Theoretical resultsTheoretical results</p>
    <p>Theorem: when the system stabilizes, the contour</p>
    <p>network is a deformation retract of the k-gray region.</p>
    <p>First, how to find a deformation retract.</p>
    <p>Cut locus: collection of points</p>
    <p>with 2 or more shortest paths to r.</p>
    <p>Cut along the cut locus  simple region whose boundary has alternating cut locus segments and hole boundaries.</p>
    <p>Connect via shortest paths to each cut locus segments.</p>
    <p>Connect these attaching points by a tree on each cut locus component.</p>
  </div>
  <div class="page">
    <p>Theoretical resultsTheoretical results</p>
    <p>Algorithm: inside each open neighborhood, combine the</p>
    <p>contour network inside this region &amp; shortest paths to</p>
    <p>bounding red segments.</p>
    <p>Note: this repair uses</p>
    <p>collection of shortest collection of shortest</p>
    <p>paths, thus doesnt</p>
    <p>create extra crossings.</p>
    <p>Proof sketch: define a</p>
    <p>continuous map to</p>
    <p>shrink the k-gray band</p>
    <p>to the contour network.</p>
  </div>
  <div class="page">
    <p>A few notesA few notes</p>
    <p>A light-weight distributed algorithm that captures the</p>
    <p>topological features of time-varying contours.</p>
    <p>The communication cost is output-sensitive,</p>
    <p>proportional to the amount of contour changes.proportional to the amount of contour changes.</p>
    <p>The algorithm provides a foundation for further</p>
    <p>processing of spatial sensor data, e.g., contour</p>
    <p>compression and aggregation [Gandhi, Hershberger,</p>
    <p>Suri 2007].</p>
  </div>
  <div class="page">
    <p>This talk: two (simpler) problems</p>
    <p>Maintain the iso-contour at value x in a time-varying signal field.</p>
    <p>Construct the contour tree in a static field.</p>
  </div>
  <div class="page">
    <p>Recall: contour tree</p>
    <p>Tree capturing the</p>
    <p>contour merging and</p>
    <p>splitting as the value</p>
    <p>decreases.</p>
    <p>First: how to define a</p>
    <p>saddle point?</p>
  </div>
  <div class="page">
    <p>Use distributed sweeps</p>
    <p>Start from local maximum.</p>
    <p>A node is swept if all its higher neighbors have been</p>
    <p>swept.</p>
    <p>The sweep carries the ID of the local MAX.</p>
  </div>
  <div class="page">
    <p>Saddle point</p>
    <p>Saddle: the node w/ highest value that receives</p>
    <p>sweep msgs from different critical points.</p>
    <p>Property: a saddle v is a cut node of the graph on</p>
    <p>vertices with values above it.</p>
  </div>
  <div class="page">
    <p>Algorithm to find a saddle</p>
    <p>A node receiving two different sweep msgs</p>
    <p>Propose to be a saddle candidate</p>
    <p>Flood the saddle contour (nodes with value above f(v)</p>
    <p>who has a neighbor below f(v)).</p>
    <p>Saddle candidates retire if they meet a candidate with higher value.</p>
  </div>
  <div class="page">
    <p>Ambiguity?</p>
    <p>Sweep progresses in an asynchronous manner.</p>
    <p>Contour traversal will verify that all nodes on the</p>
    <p>saddle contour have been swept properly.</p>
    <p>S1 proposes to be saddle for P1, S1 proposes to be saddle for P1,</p>
    <p>P2 and only wins if all nodes in</p>
    <p>the contour saddle have been</p>
    <p>swept by P1 and P2.</p>
    <p>S2 will stop sweeping --- this will</p>
    <p>prevent S1 to win.</p>
    <p>S2 wins and starts a new sweep</p>
    <p>with ID of S2.</p>
  </div>
  <div class="page">
    <p>Sweeps</p>
    <p>Top-down sweeps from all local MAX</p>
    <p>Find all merge saddles.</p>
    <p>Bottom-up sweeps from all local MIN</p>
    <p>Find all split saddles. Find all split saddles.</p>
  </div>
  <div class="page">
    <p>Merge tree and split tree</p>
    <p>Merge tree: on all merge saddles.</p>
    <p>Split tree: on all split saddles.</p>
    <p>Put them together: the contour tree.</p>
  </div>
  <div class="page">
    <p>Info stored on each node</p>
    <p>Each node w stores</p>
    <p>MIN/MAX value inside and outside the contour</p>
    <p>component through w.</p>
    <p>The same info about neighboring saddles.</p>
    <p>Such info can be propagated by another top</p>
    <p>down and bottom-up sweep.</p>
  </div>
  <div class="page">
    <p>Gradient descent to find all contours</p>
    <p>At each node w checks</p>
    <p>Is x inside the [MIN, MAX] of the interior/exterior of</p>
    <p>the contour through w? If so, send a msg following</p>
    <p>gradient descend/ascend.</p>
    <p>Is x inside the [MIN, MAX] of each of the upcoming  Is x inside the [MIN, MAX] of each of the upcoming</p>
    <p>saddle component? If so, send 1 or 2 msgs.</p>
  </div>
  <div class="page">
    <p>A few notes</p>
    <p>Construction cost: 4 global sweeps, O(n).</p>
    <p>Gradient descent: discover all components in an iso</p>
    <p>contour.</p>
    <p>Low-value routing: consult the contour tree to find a path.</p>
  </div>
  <div class="page">
    <p>Noises</p>
    <p>Smooth out the signal by some local averaging.</p>
    <p>Define a noisy max/min by its height, and/or</p>
    <p>spread.</p>
    <p>Remove noises. Remove noises.</p>
  </div>
  <div class="page">
    <p>Summary and future work</p>
    <p>Track spatial structures.</p>
    <p>On-going work:</p>
    <p>Maintain a time-varying contour tree. Maintain a time-varying contour tree.</p>
    <p>(maintain saddle contours over time)</p>
    <p>Online robot navigation and discovery of the</p>
    <p>spatial structure.</p>
  </div>
  <div class="page">
    <p>References</p>
    <p>Xianjin Zhu, Rik Sarkar, Jie Gao, Joseph S. B. Mitchell, Lightweight Contour Tracking in Wireless Sensor Networks, to appear in INFOCOM08.</p>
    <p>Rik Sarkar, Xianjin Zhu, Jie Gao, Leonidas Guibas, Joseph S. B. Mitchell, Iso-Contour Queries and Gradient</p>
    <p>Rik Sarkar, Xianjin Zhu, Jie Gao, Leonidas Guibas, Joseph S. B. Mitchell, Iso-Contour Queries and Gradient Descent with Guaranteed Delivery in Sensor Networks, to appear in INFOCOM08.</p>
  </div>
  <div class="page">
    <p>Questions or comments?</p>
    <p>http://www.cs.sunysb.edu/~jgao</p>
    <p>Email: jgao@cs.sunysb.edu</p>
  </div>
</Presentation>
