<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>ECOS: Practical Mobile Application Offloading for Enterprises</p>
    <p>Aaron Gember, Chris Dragga, Aditya Akella</p>
    <p>University of Wisconsin-Madison</p>
  </div>
  <div class="page">
    <p>Mobile Device Trends</p>
    <p>More mobile device usage in enterprises</p>
    <p>Need to run complex applications</p>
    <p>Complex mobile applications have significant CPU, memory, and energy demands</p>
    <p>Need to reconcile application demands and device capabilities</p>
  </div>
  <div class="page">
    <p>Designing for Remote Computation</p>
    <p>Mobile apps designed to use remote services</p>
    <p>e.g., Google Voice Search, Apples Siri, Amazon Silk</p>
    <p>Requires developers to use this paradigm</p>
    <p>Remote desktop / VNC</p>
    <p>User interface not designed for mobile devices</p>
  </div>
  <div class="page">
    <p>Application-Independent Offloading</p>
    <p>Dynamically divide execution between mobile device and compute resource</p>
    <p>Application code unmodified</p>
    <p>Informed by model and/or runtime monitoring</p>
    <p>Several proposed systems  Chroma [Balan et al. 2003], MAUI [Cuervo et al. 2011], CloneCloud [Chun et al. 2011]</p>
  </div>
  <div class="page">
    <p>Roadblocks to Offloading Adoption</p>
    <p>Privacy and trust</p>
    <p>Proposed systems largely ignore privacy</p>
    <p>Privacy is paramount in enterprises</p>
    <p>Resource sharing and churn</p>
    <p>Proposed systems consider one device, plus a dedicated resource</p>
    <p>Enterprises have many devices and many resources</p>
  </div>
  <div class="page">
    <p>Enterprise-Centric Offload System allows many devices to opportunistically</p>
    <p>leverage diverse compute resources,</p>
    <p>while controlling where applications</p>
    <p>offload depending on privacy, performance,</p>
    <p>and energy constraints of users and apps.</p>
    <p>Augment offloading decisions with privacy and resource considerations</p>
  </div>
  <div class="page">
    <p>Outline</p>
    <p>Offloading benefits and roadblocks</p>
    <p>Privacy and trust</p>
    <p>Resource sharing and churn</p>
    <p>ECOS Prototype</p>
    <p>Evaluation for small enterprise</p>
  </div>
  <div class="page">
    <p>Privacy and Trust</p>
    <p>Data may leave device without explicit actions</p>
    <p>Sufficient privacy requires</p>
    <p>Protecting execution state in transit</p>
    <p>Executing on trusted compute resources</p>
    <p>Offloading benefits and opportunities should not be significantly diminished</p>
  </div>
  <div class="page">
    <p>Overhead of Privacy Protection</p>
    <p>Encrypting state in transit with TLS</p>
    <p>High latency and energy overhead</p>
    <p>Limited number of trusted compute resources</p>
    <p>Reduced offloading opportunities</p>
  </div>
  <div class="page">
    <p>Data-Driven Privacy Protection</p>
    <p>Data Privacy</p>
    <p>Resources Trusted</p>
    <p>Communication Protection</p>
    <p>None Any None</p>
    <p>Enterprise All internal resources</p>
    <p>None</p>
    <p>User Select servers and desktops</p>
    <p>Encrypt always</p>
    <p>Policy specifies labels for devices &amp; applications</p>
  </div>
  <div class="page">
    <p>Resource Sharing and Churn</p>
    <p>Systems consider one device and static resource</p>
    <p>Challenges</p>
    <p>Devices with varying applications and objectives</p>
    <p>Limited resources and diverse capabilities</p>
    <p>Offload requests not know a priori</p>
    <p>Enable many mobile devices to opportunistically leverage diverse compute resources</p>
  </div>
  <div class="page">
    <p>Multiplexing Based on Objective</p>
    <p>Offloads with same objective use same resource</p>
    <p>Performance improvement</p>
    <p>Resources with unused CPU &gt; mobile CPU speed</p>
    <p>Energy savings</p>
    <p>Separate from performance seeking offloads</p>
  </div>
  <div class="page">
    <p>Resource Affinity</p>
    <p>Use same resource for subsequent offloads</p>
    <p>Cache state  less latency and energy overhead</p>
    <p>Assumes constant resource availability/capacity</p>
    <p>Resource not capable/available</p>
    <p>Deny offloads until capacity increases</p>
    <p>Assign a new resource, re-transfer or migrate state</p>
  </div>
  <div class="page">
    <p>Prototype</p>
  </div>
  <div class="page">
    <p>Evaluation</p>
    <p>Small enterprise setting</p>
    <p>12 phones (Android emulator)</p>
    <p>4 to 6 desktops (2.4Ghz quad-core, 4GB RAM)</p>
    <p>Two applications</p>
    <p>AI-decision making (Chess)</p>
    <p>Speech-to-text (emulated)</p>
    <p>Varying objectives and privacy levels 15</p>
  </div>
  <div class="page">
    <p>Performance Improvement</p>
    <p>Phones</p>
    <p>T im</p>
    <p>e (</p>
    <p>se c)</p>
    <p>No Offloading 4 Desktops 6 Desktops</p>
  </div>
  <div class="page">
    <p>Summary &amp; Future Work</p>
    <p>Enterprise-Centric Offloading System</p>
    <p>Considers privacy requirements/costs</p>
    <p>Resources assigned based on user goals</p>
    <p>Maximize latency and energy benefits</p>
    <p>Future Work</p>
    <p>Dynamic privacy label assignment</p>
    <p>Network path provisioning  mobility, bandwidth</p>
    <p>Larger evaluation</p>
  </div>
</Presentation>
