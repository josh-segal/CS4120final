<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Nexus A common substrate for cluster computing Benjamin Hindman, Andy Konwinski, Matei Zaharia, Ion Stoica, Scott Shenker</p>
  </div>
  <div class="page">
    <p>Problem Rapid innovation in cluster computing frameworks</p>
    <p>No single framework optimal for all applications</p>
    <p>Running multiple frameworks in a single cluster</p>
  </div>
  <div class="page">
    <p>Solution Nexus is a resource manager over which frameworks like Hadoop can be written  Nexus multiplexes resources between</p>
    <p>frameworks  Frameworks control job execution</p>
  </div>
  <div class="page">
    <p>Implications Users can pick best framework for each app</p>
    <p>Specialized frameworks, not one-size-fits-all</p>
  </div>
  <div class="page">
    <p>I only want to use Hadoop Nexus is a better way to manage Hadoop</p>
    <p>Hadoop master is complex, hard to scale and make robust</p>
    <p>Multiple Hadoop instances/versions at same time</p>
  </div>
  <div class="page">
    <p>Outline Beyond MapReduce and Dryad</p>
    <p>Nexus Architecture</p>
    <p>Implementation</p>
    <p>Philosophy</p>
  </div>
  <div class="page">
    <p>Beyond MapReduce &amp; Dryad</p>
  </div>
  <div class="page">
    <p>p = random(); while (p not converged) { p = f(p, dataset); }</p>
  </div>
  <div class="page">
    <p>Difficult in MapReduce/Dryad, possible with NESL model</p>
  </div>
  <div class="page">
    <p>Hard to hack into MapReduce/Dryad, easy with work-stealing programming model (Cilk)</p>
  </div>
  <div class="page">
    <p>Parallel unit test (Selenium Grid)</p>
    <p>Web servers (!)</p>
  </div>
  <div class="page">
    <p>Nexus Architecture</p>
  </div>
  <div class="page">
    <p>Hadoop master</p>
    <p>App</p>
    <p>Hadoop slave</p>
    <p>task</p>
    <p>Hadoop slave</p>
    <p>task</p>
    <p>Hadoop slave</p>
    <p>task</p>
    <p>Hadoop</p>
  </div>
  <div class="page">
    <p>Nexus master</p>
    <p>Hadoop scheduler</p>
    <p>Nexus slave</p>
    <p>App</p>
    <p>Hadoop executor</p>
    <p>task</p>
    <p>Nexus slave</p>
    <p>Hadoop executor</p>
    <p>task</p>
    <p>Nexus slave</p>
    <p>Hadoop executor</p>
    <p>task</p>
    <p>Nexus</p>
  </div>
  <div class="page">
    <p>Nexus master</p>
    <p>Hadoop v20 scheduler</p>
    <p>Nexus slave</p>
    <p>App 2</p>
    <p>Hadoop v20</p>
    <p>executor task</p>
    <p>Nexus slave</p>
    <p>MPI executor</p>
    <p>task</p>
    <p>Nexus slave Hadoop v15 executor</p>
    <p>task</p>
    <p>MPI scheduler</p>
    <p>App 3</p>
    <p>MPI executor</p>
    <p>task</p>
    <p>Nexus</p>
    <p>Hadoop v15 scheduler</p>
    <p>App 1</p>
  </div>
  <div class="page">
    <p>Scheduler API</p>
    <p>Framework scheduler</p>
    <p>Nexus master</p>
    <p>status(task, status)</p>
    <p>accept_offer(task)</p>
    <p>reject_offer()</p>
    <p>slot_offer(slot)</p>
  </div>
  <div class="page">
    <p>Executor API</p>
    <p>Nexus slave</p>
    <p>Framework executor</p>
    <p>status(task, status)</p>
    <p>start_task(task)</p>
    <p>kill_task(task)</p>
  </div>
  <div class="page">
    <p>Analysis Frequency of slot offers t = average task length (e.g. 60s) r = # replicas (e.g. 3) s = slots per node (e.g. 8)</p>
    <p>Avg slot offer wait time = t / rs (e.g. 2.5s)</p>
  </div>
  <div class="page">
    <p>Analysis Right of first refusal Provides code locality</p>
    <p>Grab and hold Avg co-located slot offer wait time = t / s</p>
  </div>
  <div class="page">
    <p>Implementation</p>
  </div>
  <div class="page">
    <p>Implementation Status Simple 2000 lines of C++</p>
    <p>Scalable 500 slaves on EC2</p>
    <p>Frameworks Preliminary port of Hadoop, and specialized LR framework</p>
  </div>
  <div class="page">
    <p>LR Job Comparison</p>
    <p>Ti m</p>
    <p>e (s</p>
    <p>)</p>
    <p>Iterations</p>
    <p>Hadoop</p>
    <p>Hadoop on Nexus</p>
    <p>Nexus</p>
  </div>
  <div class="page">
    <p>Philosophy</p>
  </div>
  <div class="page">
    <p>Microkernel  Make reliable component as small as</p>
    <p>possible</p>
    <p>Exokernel  Give maximal control to frameworks</p>
    <p>IP model  Narrow waist over which diverse</p>
    <p>frameworks can run</p>
  </div>
  <div class="page">
    <p>Questions</p>
    <p>? ? ?</p>
  </div>
</Presentation>
