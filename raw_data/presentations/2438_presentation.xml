<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Compiling Abstract Specifica4ons into Concrete Systems  Bringing Order to the Cloud</p>
    <p>Ian Unruh, Alexandru G. Bardas, Rui Zhuang, Xinming Ou, Sco4 DeLoach</p>
    <p>ANCOR - Automated eNterprise network COmpileR -</p>
  </div>
  <div class="page">
    <p>Cloud Users - Desired Features  Flexibility  access to the raw resources e.g., compute, storage</p>
    <p>Reliable automa4on capabiliCes  Non-scenario-dependent  AutomaCc deployment and maintenance  Dynamic cluster expansion and contracCon</p>
    <p>Migra4on between different could providers  Capturing infrastructure and applicaCon requirements in a specificaCon</p>
  </div>
  <div class="page">
    <p>Current Cloud CompuCng Offerings</p>
    <p>Allow customers to decide how much management they want: o Infrastructure as a Service (IaaS)</p>
    <p>e.g., Amazon Web Services, OpenStack</p>
    <p>o PlaSorm as a Service (PaaS)  e.g., Heroku, MicrosoV Azure</p>
    <p>o SoVware as a Service (SaaS)  e.g., SalesForce, Google Apps</p>
  </div>
  <div class="page">
    <p>Current Cloud CompuCng Offerings</p>
    <p>Allow customers to decide how much management they want: o Infrastructure as a Service (IaaS)</p>
    <p>e.g., Amazon Web Services, OpenStack</p>
    <p>o PlaSorm as a Service (PaaS)  e.g., Heroku, MicrosoV Azure</p>
    <p>o SoVware as a Service (SaaS)  e.g., SalesForce, Google Apps</p>
    <p>Flexibility (access to the raw resources)  Automa4on (non-scenario-dependent)  Migra4on (capturing requirements in a specificaCon)</p>
  </div>
  <div class="page">
    <p>Current Cloud CompuCng Offerings</p>
    <p>Allow customers to decide how much management they want: o SoVware as a Service (SaaS)</p>
    <p>e.g., SalesForce, Google Apps</p>
    <p>o PlaSorm as a Service (PaaS)  e.g., Heroku, MicrosoV Azure</p>
    <p>o SoVware as a Service (SaaS)  e.g., SalesForce, Google Apps</p>
    <p>Flexibility (access to the raw resources)  Automa4on (non-scenario-dependent)  Migra4on (capturing requirements in a specificaCon)</p>
  </div>
  <div class="page">
    <p>Current Cloud CompuCng Offerings</p>
    <p>Allow customers to decide how much management they want: o PlaSorm as a Service (PaaS)</p>
    <p>e.g., Heroku, MicrosoV Azure</p>
    <p>o PlaSorm as a Service (PaaS)  e.g., Heroku, MicrosoV Azure</p>
    <p>o SoVware as a Service (SaaS)  e.g., SalesForce, Google Apps</p>
    <p>Flexibility (access to the raw resources)  Automa4on (non-scenario-dependent)  Migra4on (capturing requirements in a specificaCon)</p>
  </div>
  <div class="page">
    <p>Proposed SoluCon</p>
    <p>An abstrac4on that captures what a cloud user needs instead of low-level details on how to implement those needs</p>
    <p>There must be a process to automa4cally compile the abstrac4on into a valid concrete system</p>
  </div>
  <div class="page">
    <p>Proposed SoluCon</p>
    <p>An abstrac4on that captures what a cloud user needs instead of low-level details on how to implement those needs</p>
    <p>There must be a process to automa4cally compile the abstrac4on into a valid concrete system</p>
    <p>COMPILATION PROCESS</p>
  </div>
  <div class="page">
    <p>Compiler</p>
    <p>Cloud Platform (OpenStack)</p>
    <p>Configuring Provisioning</p>
    <p>OpenStack API Library (Fog)</p>
    <p>Orchestrator (Mcollective)</p>
    <p>CMT (Puppet)</p>
    <p>Conductor</p>
    <p>Requirements Model System Model</p>
    <p>Operations ModelANCOR</p>
    <p>COMPILATION PROCESS</p>
  </div>
  <div class="page">
    <p>Compiler</p>
    <p>Cloud Platform (OpenStack)</p>
    <p>Configuring Provisioning</p>
    <p>OpenStack API Library (Fog)</p>
    <p>Orchestrator (Mcollective)</p>
    <p>CMT (Puppet)</p>
    <p>Conductor</p>
    <p>Requirements Model System Model</p>
    <p>Operations ModelANCOR</p>
    <p>COMPILATION PROCESS</p>
  </div>
  <div class="page">
    <p>Compiler</p>
    <p>Cloud Platform (OpenStack)</p>
    <p>Configuring Provisioning</p>
    <p>OpenStack API Library (Fog)</p>
    <p>Orchestrator (Mcollective)</p>
    <p>CMT (Puppet)</p>
    <p>Conductor</p>
    <p>Requirements Model System Model</p>
    <p>Operations ModelANCOR</p>
    <p>COMPILATION PROCESS</p>
    <p>Configura4on Management Tools (CMTs)</p>
  </div>
  <div class="page">
    <p>Deploying an eCommerce Website</p>
    <p>Scalable and highly available eCommerce website architecture</p>
  </div>
  <div class="page">
    <p>ANCOR Requirement Modeling Language (ARML)</p>
    <p>eCommerce Website Requirements SpecificaCon 13</p>
  </div>
  <div class="page">
    <p>Ancor Requirement Modeling Language (ARML)</p>
    <p>eCommerce Website Requirements SpecificaCon 14</p>
  </div>
  <div class="page">
    <p>Ancor Requirement Modeling Language (ARML)</p>
    <p>eCommerce Website Requirements SpecificaCon 15</p>
    <p>goals: ecommerce: name: eCommerce frontend roles: - weblb - webapp - worker - work_queue - db_master - db_slave</p>
  </div>
  <div class="page">
    <p>Ancor Requirement Modeling Language (ARML)</p>
    <p>eCommerce Website Requirements SpecificaCon 16</p>
  </div>
  <div class="page">
    <p>Ancor Requirement Modeling Language (ARML)</p>
    <p>eCommerce Website Requirements SpecificaCon 17</p>
    <p>roles: weblb: name: Web application load balancer min: 2 is_public: true implementations: default:{ profile: &quot;role::ecommerce:: weblb::default&quot; }</p>
    <p>exports: http: { type: single_port, protocol: tcp, number: 80 }</p>
    <p>imports: webapp: http</p>
  </div>
  <div class="page">
    <p>ANCOR Workflow</p>
    <p>Compiler</p>
    <p>Cloud Platform (OpenStack)</p>
    <p>Configuring Provisioning</p>
    <p>OpenStack API Library (Fog)</p>
    <p>Orchestrator (Mcollective)</p>
    <p>CMT (Puppet)</p>
    <p>Conductor</p>
    <p>Requirements Model System Model</p>
    <p>Operations Model</p>
  </div>
  <div class="page">
    <p>ANCOR Workflow</p>
    <p>Compiler</p>
    <p>Cloud Platform (OpenStack)</p>
    <p>Configuring Provisioning</p>
    <p>OpenStack API Library (Fog)</p>
    <p>Orchestrator (Mcollective)</p>
    <p>CMT (Puppet)</p>
    <p>Conductor</p>
    <p>Requirements Model System Model</p>
    <p>Operations Model</p>
  </div>
  <div class="page">
    <p>ANCOR Workflow</p>
    <p>Compiler</p>
    <p>Cloud Platform (OpenStack)</p>
    <p>Configuring Provisioning</p>
    <p>OpenStack API Library (Fog)</p>
    <p>Orchestrator (Mcollective)</p>
    <p>CMT (Puppet)</p>
    <p>Conductor</p>
    <p>Requirements Model System Model</p>
    <p>Operations Model</p>
    <p>them in the System Model</p>
  </div>
  <div class="page">
    <p>ANCOR Workflow</p>
    <p>Compiler</p>
    <p>Cloud Platform (OpenStack)</p>
    <p>Configuring Provisioning</p>
    <p>OpenStack API Library (Fog)</p>
    <p>Orchestrator (Mcollective)</p>
    <p>CMT (Puppet)</p>
    <p>Conductor</p>
    <p>Requirements Model System Model</p>
    <p>Operations Model</p>
    <p>them in the System Model</p>
    <p>infrastructure using cloud plaTorm and CMT APIs</p>
  </div>
  <div class="page">
    <p>ANCOR Workflow</p>
    <p>Compiler</p>
    <p>Cloud Platform (OpenStack)</p>
    <p>Configuring Provisioning</p>
    <p>OpenStack API Library (Fog)</p>
    <p>Orchestrator (Mcollective)</p>
    <p>CMT (Puppet)</p>
    <p>Conductor</p>
    <p>Requirements Model System Model</p>
    <p>Operations Model</p>
    <p>them in the System Model</p>
    <p>infrastructure using cloud plaSorm and CMT APIs</p>
  </div>
  <div class="page">
    <p>ANCOR Benefits</p>
    <p>Infrastructure and applicaCon portability  Up-to-date applicaCon dependencies</p>
    <p>Building highly dynamic systems</p>
    <p>Automated fine-grained firewall configuraCon  Security assessments  Performance evaluaCons  CreaCng customized PaaS</p>
  </div>
  <div class="page">
    <p>ANCOR</p>
    <p>Current implementaCon and more informaCon:</p>
    <p>hWp://arguslab.github.io/ancor/</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>SeparaCng user requirements from the implementaCon details has the potenCal of changing the way IT systems are deployed and managed in the cloud</p>
    <p>ANCOR  framework that captures the high- level requirements and translates them into a working IT system on a cloud infrastructure</p>
    <p>hWp://arguslab.github.io/ancor/</p>
  </div>
  <div class="page">
    <p>LISA Labs</p>
    <p>Today 4:00PM  5:30PM</p>
    <p>Alex Bardas: bardasag@ksu.edu</p>
  </div>
  <div class="page">
    <p>Related Work  Automa.on Solu.ons  AutomaCng instance management e.g., AWS OpsWorks  Deploying/migraCng applicaCons on different cloud providers e.g., Cliqr, Cloud Velocity, CloudSwitch</p>
    <p>Managing and automaCng instances deployment e.g., Right-Scale, Service-Now</p>
    <p>Abstrac.on Approaches (PaaS specific)  Windows Azure Service DefiniCon Schema (.csdef), Google AppEngine YAML-based specificaCon</p>
    <p>Managing Infrastructure (support CMT integraCon)  OpenStack Heat, AWS CloudFormaCon, Terraform</p>
    <p>Addi)onal Slide</p>
  </div>
  <div class="page">
    <p>More Related Work</p>
    <p>Docker container-based soluCons:  Maestro-NG, Flynn, Deis, OpenShiV, etc.</p>
    <p>Ubuntu Juju:  Works at a similar abstracCon level</p>
    <p>Addi)onal Slide</p>
  </div>
  <div class="page">
    <p>ANCOR vs.  SimilariCes:  Work at a similar abstracCon level  Have a way of capturing the dependencies between soVware applicaCons (services)</p>
    <p>Differences:  Using existent CMT modules and workflow:</p>
    <p>ANCOR: minimal changes  Juju: usually, significant changes (integraCon with Juju Tools)</p>
    <p>Dependent services  ANCOR: more centralized management scheme  Juju: negoCaCon scheme</p>
    <p>Current feature sets e.g, OS support</p>
    <p>Addi)onal Slide</p>
  </div>
</Presentation>
