<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Renuka Kumar1, Sreesh K., Hao Lu1, Atul Prakash1</p>
    <p>Security Analysis of Unified Payments Interface and Payment Apps in India</p>
  </div>
  <div class="page">
    <p>Early Indian Payments Apps - Wallets Payment Service</p>
    <p>Provider</p>
    <p>Add Money to Wallet</p>
    <p>Paytm</p>
    <p>Paytm Paytm</p>
    <p>India was predominantly a cash-based economy and while payment apps existed, they were not the chosen mode of payment</p>
    <p>Add Money to Wallet</p>
  </div>
  <div class="page">
    <p>Mobile Payments using Unified Payments Interface</p>
    <p>UPI Payment Service</p>
    <p>Add bank account</p>
    <p>Financial Institution</p>
    <p>Add Bank Account</p>
    <p>BHIM G Pay</p>
    <p>In 2016, the National Payments Corporation of India launched UPI to enable free instant micro-payments from a mobile platform</p>
  </div>
  <div class="page">
    <p>$34 Billion USD*</p>
    <p>*https://www.npci.org.in/product-statistics/upi-product-statistics</p>
    <p>As of June 2020</p>
  </div>
  <div class="page">
    <p>In this research, we conduct a security analysis of UPI 1.0, a complex black-box</p>
    <p>application layer protocol used by several Indian payment apps and its</p>
    <p>design choices</p>
  </div>
  <div class="page">
    <p>Factor 1 Device fingerprint</p>
    <p>Cell number + device info</p>
    <p>device hard-binding</p>
    <p>Factor 2 Factor 3</p>
    <p>UPIs Broad Guidelines</p>
    <p>Users primary cell number (UPI ID) must be registered with the bank out-of-band</p>
    <p>Passcode Optional</p>
    <p>UPI PIN 6-digits of debit card +</p>
    <p>expiry date</p>
    <p>User Profile Setup Authorize Transactions</p>
  </div>
  <div class="page">
    <p>Objectives of Protocol Analysis</p>
    <p>Uncover the client-server handshake step-by-step  Collect from each step</p>
    <p>Credentials required  Leaked user-specific attributes</p>
    <p>Find alternate workflows that can be exploited  Triage the findings to determine plausible attack vectors</p>
  </div>
  <div class="page">
    <p>Reverse Engineering Barriers</p>
    <p>Protocol Analysis</p>
    <p>Unpublished protocol and no back-end access to UPI servers</p>
    <p>Analyze the protocol through the lens of UPI apps</p>
    <p>Evading App Defenses</p>
    <p>Security defenses are many and differ for each app</p>
  </div>
  <div class="page">
    <p>Evading App Defenses Defenses</p>
    <p>Obfuscated  Use encrypted communication  Emulator detection built-in  Requires a physical SIM card to be present on the phone</p>
    <p>Makes dynamic analysis difficult  UPI apps undergo a thorough security review in India</p>
    <p>Approach: A combination of static reverse-engineering, code instrumentation and traffic analysis</p>
  </div>
  <div class="page">
    <p>Setup</p>
    <p>Client: Indias flagship app- BHIM  Reference implementation of a UPI app  Instrument and repackage BHIM</p>
    <p>Map GUI with the handshake traffic  Confirm findings on other popular UPI 1.0 apps (Paytm, PhonePe etc.)  Mobile OS: Android</p>
  </div>
  <div class="page">
    <p>UPI 1.0 Handshake An Attacker View</p>
  </div>
  <div class="page">
    <p>Threat Model Victim (Any good user)</p>
    <p>Installs BHIM from Google Play  Uses a properly configured phone  Prevent unauthorized physical access by untrusted parties</p>
    <p>Attacker (Any good attacker)  Uses a rooted phone  Can use any tool at his disposal to reverse engineer apps  Releases a useful unprivileged trojan app that somehow enters a victims phone</p>
  </div>
  <div class="page">
    <p>Is the Threat Model Realistic? For the attack to succeed, the victim must have installed the Trojan app</p>
    <p>Threat because of PHAs are very real:  53% of attacks are because of preinstalled PHAs on low cost cell</p>
    <p>phones  India is in the top 3 countries with the most number of PHAs</p>
    <p>pre-installed *.</p>
    <p>*https://source.android.com/security/reports/Google_Android_Security_2018_Report_Final.pdf/</p>
  </div>
  <div class="page">
    <p>Factor 1 Device fingerprint</p>
    <p>cell number + device info</p>
    <p>device hard-binding</p>
    <p>Factor 2 Factor 3</p>
    <p>Attacking User Profile Setup</p>
    <p>Passcode</p>
    <p>Optional</p>
    <p>UPI PIN</p>
    <p>User Profile Setup Authorize Transactions</p>
  </div>
  <div class="page">
    <p>Device Hard-binding Default Workflow</p>
    <p>BHIM UPI Server</p>
    <p>Device Details</p>
    <p>Registration Token</p>
    <p>Send SMS with Token</p>
    <p>Device Binding Success</p>
    <p>BHIM</p>
    <p>BHIM</p>
    <p>Save device info</p>
    <p>Verify cell#</p>
    <p>Read users cell phone from device</p>
  </div>
  <div class="page">
    <p>Device Hard-binding Default Workflow</p>
    <p>BHIM UPI Server</p>
    <p>Device Details</p>
    <p>Registration Token</p>
    <p>Send SMS with Token</p>
    <p>Device Binding Success</p>
    <p>BHIM</p>
    <p>BHIM</p>
    <p>Save device info</p>
    <p>Verify cell#</p>
    <p>Read users cell phone from device</p>
    <p>Attackers View To attack Step 2, compromise the</p>
    <p>protections provided the cell phone company</p>
  </div>
  <div class="page">
    <p>Device Hard-binding Default Workflow</p>
    <p>BHIM UPI Server</p>
    <p>Device Details</p>
    <p>Registration Token</p>
    <p>Send SMS with Token</p>
    <p>Device Binding Success</p>
    <p>BHIM</p>
    <p>BHIM</p>
    <p>Save device info</p>
    <p>Verify cell#</p>
    <p>Read users cell phone from device</p>
    <p>BUT...</p>
    <p>Attackers View To attack Step 2, compromise the</p>
    <p>protections provided the cell phone company</p>
  </div>
  <div class="page">
    <p>BHIM UPI Server</p>
    <p>Attacker Device Details</p>
    <p>Registration Token</p>
    <p>Send Cell# + Token as HTTP msg</p>
    <p>Send OTP</p>
    <p>Device Hard-binding Alternate Workflow</p>
    <p>Attacker enters victim cell number from on an attacker</p>
    <p>device</p>
    <p>Attacker can induce a failure in step 2 of default workflow by</p>
    <p>turning on airplane mode</p>
    <p>BHIM</p>
    <p>BHIM</p>
    <p>Alternate workflow may allow an attacker to bind her cell phone with a cell number registered</p>
    <p>to bank account of another user</p>
  </div>
  <div class="page">
    <p>BHIM UPI Server</p>
    <p>Attacker Device Details</p>
    <p>Registration Token</p>
    <p>Send Cell# + Token as HTTP msg</p>
    <p>Send OTP</p>
    <p>Breaking Device Binding</p>
    <p>Attacker enters victims cell number</p>
    <p>Trojan needs RECEIVE_SMS permission to read OTP</p>
    <p>ATTACKER PHONE</p>
    <p>BHIM</p>
    <p>BHIM</p>
  </div>
  <div class="page">
    <p>To break device binding, attacker only needs a users cell number and an OTP from that number</p>
  </div>
  <div class="page">
    <p>UPI Server</p>
    <p>Send Passcode</p>
    <p>Send Passcode</p>
    <p>Add Bank Account</p>
    <p>Leak Passcode</p>
    <p>BHIM</p>
    <p>Use an overlay on BHIMs passcode entry screen</p>
    <p>No additional permissions required</p>
    <p>BHIM</p>
    <p>BHIM</p>
    <p>BHIM</p>
  </div>
  <div class="page">
    <p>Passcode is a secret shared with the payment server and</p>
    <p>not the bank</p>
    <p>For third-party payment apps like GPay, passcode is a secret shared with Google payment server</p>
  </div>
  <div class="page">
    <p>The attacker is never prompted for a bank-related secret at any</p>
    <p>point in the user registration workflow</p>
  </div>
  <div class="page">
    <p>Add Bank Account</p>
    <p>Attacker can start bruteforcing with the most popular banks</p>
    <p>BHIM UPI Server</p>
    <p>Choose Bank</p>
    <p>Bank Acct#, Name</p>
    <p>UPI server appears to allow brute-force attacks. An attacker can learn of all bank accounts of a user</p>
  </div>
  <div class="page">
    <p>UPI server reveals sensitive bank info without the user providing any bank specific secrets</p>
    <p>Add Bank Account</p>
    <p>BHIM UPI Server</p>
    <p>Choose Bank</p>
    <p>Bank Acct#, Name</p>
  </div>
  <div class="page">
    <p>BHIM UPI Server</p>
    <p>Bind Device + Cell</p>
    <p>Device Bind Successful</p>
    <p>Send Passcode</p>
    <p>Add Bank Account</p>
    <p>BHIM</p>
    <p>BHIM</p>
    <p>New UPI User vs. Existing User</p>
    <p>BHIM UPI Server</p>
    <p>Bind Device + Cell</p>
    <p>Device Bind Successful</p>
    <p>Send Passcode</p>
    <p>Bank Acct#, Name</p>
    <p>BHIM</p>
    <p>BHIM</p>
    <p>For an existing user, attacker can sync a users bank account through UPI without providing any</p>
    <p>bank-related secrets</p>
  </div>
  <div class="page">
    <p>Demo Attack on Existing User</p>
  </div>
  <div class="page">
    <p>Preconditions for Attack</p>
    <p>Attacker disables BHIMs client-side defenses  Installs repackaged version of BHIM</p>
    <p>Victims device is already compromised with the trojan  Learning cell number</p>
    <p>Attacker can get the cell number starting with no knowledge of a user  Cell number is not a secret and widely circulated in India</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Authorize Transaction: UPI PIN</p>
    <p>UPI PIN can be leaked the same way as the passcode.</p>
    <p>Setting UPI PIN  Requires partial card details printed on a card  Transactions require complete card number + secret PIN shared</p>
    <p>with the bank</p>
    <p>Setting UPI PIN requires only partial debit card info and NO secret - a lower bar in India</p>
  </div>
  <div class="page">
    <p>Unlike mobile wallets where money may only be lost from the wallet, here the attacker can empty a users bank account.</p>
    <p>The Damage!</p>
  </div>
  <div class="page">
    <p>There are 155 UPI apps and an attacker can use any of the</p>
    <p>apps to leak information</p>
    <p>Security Hole</p>
  </div>
  <div class="page">
    <p>Conclusion  We uncover core security holes in the workflow of UPI 1.0</p>
    <p>Using an attacker-controlled app, we show how an attacker can attack a users bank account and steal money from him</p>
    <p>Responsibly disclosed the vulnerabilities to CERT-IN and makers of UPI in 2017  Contacted all the app vendors</p>
    <p>UPI 2.0 released in August 2018  Fixed the alternate workflow we exploit, but other security</p>
    <p>holes remain  Other attack vectors that could potentially compromise UPI 2.0</p>
    <p>SMS spoofing, loss of users device or compromising the system</p>
    <p>Calls for proper security vetting of the proprietary protocol since discussions are on to make UPI global[2]https://government.economictimes.indiatimes.com/news/digital-payments/upi-hits-1-billion-transactions-in-oct-plans-to-go-global/71799413</p>
  </div>
  <div class="page">
    <p>This material is based on the work supported by the National Science Foundation under grant number 1646392.</p>
    <p>Contact: renukak@umich.edu</p>
    <p>Thank You!</p>
  </div>
</Presentation>
