<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>TIE Breaking: Tunable Interdomain Egress Selection</p>
    <p>Renata Teixeira Laboratoire dInformatique de Paris 6</p>
    <p>Universit Pierre et Marie Curie</p>
    <p>with Tim Griffin (Cambridge), Mauricio Resende (AT&amp;T), and Jennifer Rexford (Princeton)</p>
  </div>
  <div class="page">
    <p>Internet as a Communication Infrastructure</p>
    <p>InternetHighly-sensitive to transient and persistent performance problems</p>
  </div>
  <div class="page">
    <p>Two-Tier Routing Architecture</p>
    <p>Internet UCSD</p>
    <p>Sprint</p>
    <p>AT&amp;T Verio</p>
    <p>AOL</p>
    <p>User</p>
    <p>Web Server</p>
    <p>UCSD</p>
    <p>AT&amp;T Verio</p>
    <p>AOL</p>
    <p>Interdomain routing (BGP) Selects AS-level path</p>
    <p>based on policies</p>
    <p>Intradomain routing (IGP) Most common: OSPF, IS-IS</p>
    <p>Selects shortest path from ingress to egress based on link weights</p>
  </div>
  <div class="page">
    <p>UCSD Sprint</p>
    <p>AT&amp;T Verio</p>
    <p>AOL</p>
    <p>Selecting Among Multiple Egresses Today</p>
    <p>User</p>
    <p>Web Server</p>
    <p>UCSD</p>
    <p>AT&amp;T Verio</p>
    <p>Hot-potato routing BGP selects closest egress by</p>
    <p>comparing IGP distances</p>
    <p>NY</p>
    <p>SF</p>
    <p>LA Bs IGP distance</p>
    <p>d(B,NY): 2 d(B,SF): 31 d(B,LA): 26</p>
    <p>B</p>
  </div>
  <div class="page">
    <p>However, Hot-Potato Routing is</p>
    <p>Too disruptive  Small changes inside can lead to big disruptions</p>
    <p>A B</p>
    <p>C</p>
    <p>D G</p>
    <p>EF 4</p>
    <p>A B dst</p>
    <p>Consequences -Transient forwarding instability -Traffic shift (largest traffic variations) -BGP updates to other domains</p>
  </div>
  <div class="page">
    <p>However, Hot-Potato Routing is</p>
    <p>Too disruptive  Small changes inside can lead to big disruptions</p>
    <p>Too restrictive  Egress selection mechanism dictates a policy</p>
    <p>Too convoluted  IGP metrics determine BGP egress selection  IGP paths and egress selection are coupled</p>
  </div>
  <div class="page">
    <p>Maybe a Fixed Ranking?</p>
    <p>Goal: No disruptions because of internal changes  Solution</p>
    <p>Each router has a fixed ranking of egresses  Select the highest-ranked egress for each destination  Use tunnels from ingress to egress</p>
    <p>Disadvantage  Sometimes changing egresses would be useful</p>
    <p>A B</p>
    <p>C</p>
    <p>D G</p>
    <p>EF 4</p>
    <p>A B dst</p>
  </div>
  <div class="page">
    <p>Egress Selection Mechanisms a u</p>
    <p>to m</p>
    <p>a tic</p>
    <p>a d</p>
    <p>a p</p>
    <p>ta tio</p>
    <p>n</p>
    <p>robustness to internal changes</p>
    <p>hot-potato routing</p>
    <p>fixed ranking</p>
    <p>Explore trade-off</p>
  </div>
  <div class="page">
    <p>Metrics for Ranking Egresses</p>
    <p>Egress selection mechanisms are based on a metric (m) that each ingress router (i) uses to rank each egress router (e) for a destination  Hot-potato routing</p>
    <p>m is the intradomain distance (d(i,e))  Fixed ranking</p>
    <p>m is a constant</p>
  </div>
  <div class="page">
    <p>Goals of New Metric</p>
    <p>Configurable  Implement a wide-range of egress selection policies</p>
    <p>Simple computation  Compute on-line, in real-time  Based on information already available in routers (distance)</p>
    <p>Easy to optimize  Expressive for a management system to optimize</p>
    <p>Fine control  Each ingress can implement its own ranking policy for each</p>
    <p>destination</p>
  </div>
  <div class="page">
    <p>Decouples egress selection from internal paths  Egress selection is done by tuning  and</p>
    <p>Allow a wide variety of egress selection policies  Hot-potato:  =1,  = 0  Fixed ranking:  =0,  = constant rank</p>
    <p>Requirements  Small change in router decision logic  Use of tunnels (as with fixed ranking)</p>
    <p>m (e) =  (e) . d(i,e) +  (e)</p>
    <p>TIE: Tunable Interdomain Egress Selection</p>
    <p>mi(dst,e) = i(dst,e) . d(i,e) + i(dst,e)</p>
    <p>weighted intradomain</p>
    <p>distance</p>
    <p>constant</p>
  </div>
  <div class="page">
    <p>Routers</p>
    <p>Management System</p>
    <p>Using TIE</p>
    <p>Run optimization</p>
    <p>,  Configure routers</p>
    <p>Path computation using mi(dst,e)</p>
    <p>Forwarding table</p>
    <p>Administrator defines policy</p>
    <p>Upon  and  change or routing change</p>
  </div>
  <div class="page">
    <p>Configuring TIE to Minimize Sensitivity</p>
    <p>Simulation Phase</p>
    <p>Optimization Phase</p>
    <p>Network topology</p>
    <p>Set of egress routers per prefix</p>
    <p>Set of failures system of</p>
    <p>inequalities</p>
    <p>Management System</p>
    <p>configure routers with values i(dst,e) and i(dst,e)</p>
    <p>that minimize sensitivity</p>
  </div>
  <div class="page">
    <p>At design time: mC(dst,A) &lt; mC(dst,B)</p>
    <p>Simulation Phase</p>
    <p>A B</p>
    <p>C</p>
    <p>dst</p>
    <p>Output of simulation phase</p>
    <p>C(dst,A)=1, C(dst,A)=1, C(dst,B) =2, C(dst,B) =0</p>
  </div>
  <div class="page">
    <p>Optimization Phase</p>
    <p>One system of inequalities per (node, prefix) pair  (num egresses  1) x (num failures +1)</p>
    <p>Practical requirements for setting parameters  Finite-precision parameter values</p>
    <p>Limiting the number of unique values</p>
    <p>Robustness to unplanned events</p>
    <p>Running time  37 seconds (Abilene network) and 12 minutes (ISP network)</p>
    <p>196MHz MIPS R10000 processor on an SGI Challenge</p>
    <p>Integer programming</p>
    <p>Objective function: min  (+)</p>
    <p>1</p>
  </div>
  <div class="page">
    <p>Evaluation of TIE on Operational Networks</p>
    <p>Topology and egress sets  Abilene network (U.S. research network)  Set link weight with geographic distance</p>
    <p>Configuration of TIE  Considering single-link failures  Threshold of delay ratio: 2   [1,4] and 93% of i(dst,e)=1    {0,1,3251} and 90% of i(dst,e)=0</p>
    <p>Evaluation against hot-potato and fixed ranking  Simulate single-node failures  Measure routing sensitivity and delay</p>
  </div>
  <div class="page">
    <p>Sensitivity to Node Failures</p>
    <p>fraction prefixes affected</p>
    <p>C C</p>
    <p>D F</p>
    <p>o f</p>
    <p>(n o</p>
    <p>d e ,f</p>
    <p>a il</p>
    <p>u re</p>
    <p>) p</p>
    <p>a ir</p>
    <p>s</p>
  </div>
  <div class="page">
    <p>Delay under Node Failures C</p>
    <p>C D</p>
    <p>F o</p>
    <p>f (</p>
    <p>n o</p>
    <p>d e ,</p>
    <p>d e s</p>
    <p>ti n</p>
    <p>a ti</p>
    <p>o n</p>
    <p>,f a il</p>
    <p>u re</p>
    <p>) tu</p>
    <p>p le</p>
    <p>s</p>
    <p>ratio of delay after failure to design time delay</p>
    <p>Under threshold, TIE has longer delay than hot-potato</p>
    <p>It is better than fixed ranking for 60% of tuples</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>TIE mechanism for selecting egresses  Decouples interdomain and intradomain routing  Designed for being easy to optimize  Small change to router implementation</p>
    <p>Operators can optimize TIE for other policies  Traffic engineering  Robust traffic engineering  Planning for maintenance</p>
  </div>
  <div class="page">
    <p>More details</p>
    <p>http://rp.lip6.fr/~teixeira</p>
  </div>
  <div class="page">
    <p>UCSD Sprint</p>
    <p>AT&amp;T Verio</p>
    <p>AOL</p>
    <p>Multiple Interdomain Egresses</p>
    <p>User</p>
    <p>Web Server</p>
    <p>UCSD</p>
    <p>AT&amp;T Verio</p>
    <p>Multiple egresses for a destination are common! ISPs usually peer in multiple locations and</p>
    <p>customers buy multiple connections to one or more ISPs for reliability and performance</p>
    <p>NY</p>
    <p>SF</p>
    <p>LA</p>
    <p>AOL</p>
  </div>
  <div class="page">
    <p>Why Hot-Potato Routing?</p>
    <p>Independent and consistent egress decision  Forward packet to neighbors that have selected</p>
    <p>same (closest) egress</p>
    <p>Minimize resource consumption  Limits consumption of bandwidth by sending traffic</p>
    <p>to next domain as early as possible</p>
    <p>A B</p>
    <p>C</p>
    <p>D G</p>
    <p>EF 4</p>
    <p>A B dst</p>
  </div>
  <div class="page">
    <p>Summary of BGP Decision Process</p>
    <p>BGP decision process  Ignore if exit point unreachable  Highest local preference  Lowest AS path length  Lowest origin type  Lowest MED (with same next hop AS)  Lowest IGP cost to next hop  Lowest router ID of BGP speaker</p>
  </div>
  <div class="page">
    <p>Other Policies</p>
    <p>Traffic engineering  Configure TIE parameters to select egresses to</p>
    <p>obtain optimal link utilization  Solution: Path-based multi-commodity flow</p>
    <p>Robust traffic engineering  Combine minimizing sensitivity with traffic</p>
    <p>engineering problem</p>
    <p>Preparing for maintenance</p>
  </div>
  <div class="page">
    <p>Traffic Engineering with TIE</p>
    <p>Problem definition  Balance utilization of internal links</p>
    <p>Configure TIE parameters to select egresses to obtain optimal link utilization  No need to set intradomain link weights</p>
    <p>Solution  Path-based multicommodity flow</p>
    <p>No need to tweak routing protocols  Avoid routing convergence</p>
  </div>
  <div class="page">
    <p>Example Policy: Minimizing Sensitivity</p>
    <p>Problem definition  Minimize sensitivity to equipment failures  No delay more than twice design time delay</p>
    <p>Would be a simple change to routers  If distance is more than twice original distance</p>
    <p>Change to closest egress  Else</p>
    <p>Keep using old egress point</p>
    <p>But cannot change routers for all possible goals</p>
    <p>We can do this with TIE just by setting  and</p>
  </div>
</Presentation>
