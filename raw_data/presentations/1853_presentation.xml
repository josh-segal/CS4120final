<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Riza Suminto, Agung Laksono*, Anang Satria*,  Thanh Do, Haryadi Gunawi</p>
    <p>*</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>q Users demand high dependability, reliability, and performance stability</p>
    <p>q Amazon found that every 100ms of latency cost them 1% in sales</p>
    <p>q Google found an extra 0.5 second in search page generation time dropped traffic by 20%</p>
  </div>
  <div class="page">
    <p>What Bugs Live in the Cloud? A Study of 3000+ Issues in Cloud Systems, SOCC14</p>
    <p>SPV @ HotCloud 15</p>
  </div>
  <div class="page">
    <p>Performance  Bug</p>
    <p>System Performance  Verifier</p>
    <p>SPV @ HotCloud 15 5</p>
  </div>
  <div class="page">
    <p>q Jobs take multiple times than usual to finish  Improper speculative execution</p>
    <p>JCH1 &amp; TPL1 &amp; FPL2 &amp; FTY1  Unnecessary repeated recovery</p>
    <p>TPL1 &amp; TPL4 &amp; FTY4 &amp; TOP1</p>
    <p>SPV @ HotCloud 15</p>
  </div>
  <div class="page">
    <p>Map read locally</p>
    <p>Mappers and reducers  in different nodes</p>
    <p>All-to-All</p>
    <p>Fault at map node</p>
    <p>Slow NIC</p>
    <p>DLCA</p>
    <p>TPLA</p>
    <p>FPLA</p>
    <p>FTYA</p>
    <p>JCHA</p>
    <p>M1</p>
    <p>M2</p>
    <p>M3</p>
    <p>Mappers Reducers</p>
    <p>All reducers slow!</p>
    <p>DLCA &amp; TPLA &amp; JCHA &amp; FPLA &amp; FTYA</p>
    <p>No straggler = No SpecExec</p>
    <p>SPV @ HotCloud 15</p>
    <p>slow!</p>
  </div>
  <div class="page">
    <p>q DLCA &amp; TPLA &amp; JCHA &amp; FPLA &amp; FTYA</p>
    <p>M1</p>
    <p>M2</p>
    <p>M3</p>
    <p>MappersDN</p>
    <p>DLCB = read remote</p>
    <p>Straggler!</p>
    <p>SPV @ HotCloud 15</p>
    <p>q DLCA &amp; TPLA &amp; JCHA &amp; FPLA &amp; FTYA</p>
    <p>M1</p>
    <p>M2</p>
    <p>M3</p>
    <p>Mappers Reducers</p>
  </div>
  <div class="page">
    <p>q DLCA &amp; TPLA &amp; JCHA &amp; FPLA &amp; FTYA</p>
    <p>M1</p>
    <p>M2</p>
    <p>M3</p>
    <p>Mappers Reducers</p>
    <p>FPLBslow reducer =</p>
    <p>Straggler!</p>
    <p>SPV @ HotCloud 15</p>
    <p>q DLCA &amp; TPLA &amp; JCHA &amp; FPLA &amp; FTYA</p>
    <p>M1</p>
    <p>M2</p>
    <p>M3</p>
    <p>Mappers Reducers</p>
  </div>
  <div class="page">
    <p>Mappers and Reducers  in different nodes</p>
    <p>Mappers and Reducers  in different racks</p>
    <p>Large number of nodes per rack</p>
    <p>Slow inter-rack switch</p>
    <p>M</p>
    <p>M</p>
    <p>M</p>
    <p>M</p>
    <p>R</p>
    <p>Rack 1 Rack 2</p>
    <p>M</p>
    <p>TPLA</p>
    <p>TPLB</p>
    <p>TOPA</p>
    <p>FTYB</p>
    <p>TPLA &amp; TPLB &amp; TOPA &amp; FTYB</p>
    <p>SPV @ HotCloud 15</p>
    <p>slow!</p>
  </div>
  <div class="page">
    <p>q Untriggered Speculative Execution  MR-70001 = JCH1 &amp; TPL1 &amp; FPL2 &amp; FTY1  MR-70002 = DSR1 &amp; DLC1 &amp; FPL1 &amp; FTY1  MR-5533 = FTY2 &amp; FPL3 &amp; TPL3</p>
    <p>q O(n) Recovery  MR-5251 = FTY3 &amp; FPL3 &amp; FTM1  MR-5060 = TPL1 &amp; TPL3 &amp; FTY1 &amp; FPL2  MR-1800 = TPL1 &amp; TPL4 &amp; FTY4 &amp; TOP1</p>
    <p>q Long lock contention  MR-9191 = FTY3 &amp; FPL3 &amp; FTM1  MR-9292 = TPL1 &amp; TPL3 &amp; FTY1 &amp; FPL2  MR-9393 = TPL1 &amp; TPL4 &amp; FTY4 &amp; TOP1</p>
    <p>Scenario Type Possible Condition</p>
    <p>DLC: Data Locality (1) Read from remote disk, (2) read from local disk, ...</p>
    <p>DSR: Data Source (1) Some tasks read from same datanode, (2) all tasks read from different datanodes,</p>
    <p>JCH: Job Characteristic</p>
    <p>Map-reduce is (1) many-to-all, (2) all-to-many, (3) large fan-in, (4) large fan-out, ...</p>
    <p>JSZ: Job Size (1)1GBjarfile,(2)1MBjarfile,...</p>
    <p>LSZ: Load Size (1) Thousands of tasks, (2) small number of tasks,</p>
    <p>FTY: Fault Type (1) Slow node/NIC, (2) Node disconnect/packet drop, (3) Disk error/out of space, (4) Rack switch,</p>
    <p>FPL: Fault Placement Slowdown fault injection at the (1) source datanode, (2) mapper, (3) reducer,</p>
    <p>FGR: Fault Ganularity (1) Single disk/NIC, (2) single node (deadnode), (3) en- tire rack (network switch),</p>
    <p>FTM: Fault Timing (1) During shuffling, (2) during 95% of task completion,</p>
    <p>TOP: Topology (1) 30 nodes per rack, (2) 3 nodes per rack,</p>
    <p>TPL: Task Placement (1) Mappers and reducers are in different nodes, (2) AM and reducers in different nodes, (3) Mappers are in the same node, (4) Most of reducers placed in the same rack, ...</p>
    <p>SPV @ HotCloud 15</p>
  </div>
  <div class="page">
    <p>Performance  Bug</p>
    <p>System Performance  Verifier</p>
    <p>SPV @ HotCloud 15 12</p>
  </div>
  <div class="page">
    <p>SPV @ HotCloud 15 13</p>
    <p>q Benchmarking</p>
    <p>q Hundreds benchmark for every scenario q Injecting slowdowns and failures</p>
    <p>q Take days to weeks!!</p>
  </div>
  <div class="page">
    <p>q Four goals in performance verification  Fast  Covers many deployment scenario  Runs in pre-deployment  Directly checks implementation code</p>
    <p>SPV @ HotCloud 15</p>
    <p>Formal modeling tools!</p>
  </div>
  <div class="page">
    <p>@Data public class JobInProgress { JobID jobId; TaskInProgress maps[]; ... } @IO public HeartbeatResponse heartbeat (HeartbeatData hd){ ... }</p>
    <p>Target system (e.g., Hadoop code)</p>
    <p>SPV Compiler</p>
    <p>Auto-generated model (in Colored Petri Net)</p>
    <p>Performance Verification</p>
    <p>Hand model</p>
  </div>
  <div class="page">
    <p>Tasks</p>
    <p>Node Task to</p>
    <p>Run</p>
    <p>(T1,map)</p>
    <p>A @0 (A,T1,map) @10</p>
    <p>input(node,task); output(assignment); action let val (id,type) = task in (node,id,type) end;</p>
    <p>@+10</p>
    <p>node assignment</p>
    <p>task</p>
    <p>Schedule Task</p>
    <p>SPV @ HotCloud 15</p>
  </div>
  <div class="page">
    <p>CPN Java</p>
    <p>SPV @ HotCloud 15</p>
  </div>
  <div class="page">
    <p>q Java  SysJava  Data flattening  Code modularization  Annotation tagging</p>
    <p>q SysJava  Model compiler</p>
  </div>
  <div class="page">
    <p>q Java system states = ArrayList, Map, Tree,</p>
    <p>q CPN states = multisets</p>
    <p>List&lt;JobInProgress&gt; runningJobs;</p>
    <p>public class JobInProgress { JobID jobId; TaskInProgress maps[]; ... }</p>
    <p>class TaskInProgress { TaskID id; double progress; ... }</p>
    <p>Job In Progress</p>
    <p>Task In Progress</p>
    <p>Job Task Mapping</p>
    <p>[(1)]</p>
    <p>[(1,a),(1,b)]</p>
    <p>[(a,10%),(b,15%)]</p>
    <p>SPV @ HotCloud 15</p>
  </div>
  <div class="page">
    <p>private boolean processHeartbeat( TaskTrackerStatus trackerStats) {</p>
    <p>synchronized (taskTrackers) { ... }</p>
    <p>for (TaskStatus ts: trackerStats) { tasks.get(ts.id).updateStatus(ts); }</p>
    <p>... }</p>
    <p>@ProcessState private void initCheck() { synchronized (taskTrackers) { ... } }</p>
    <p>@ForEach private void updateStatuses( TaskTrackerStatus trackerStats) { for (TaskStatus ts: trackerStats) { ... } }</p>
    <p>@GetState private TaskInProgress getTask(TaskID id) { tasks.get(ts.id); } @UpdateState private void tipUpdate(TaskInProgress tip, TaskStatus ts) { tip.updateStatus(ts); }</p>
    <p>Modular function</p>
    <p>Control Flow logic</p>
    <p>CRUD Logic</p>
    <p>SPV @ HotCloud 15</p>
  </div>
  <div class="page">
    <p>q Assist compiler</p>
    <p>q Annotation Category:  Data Structure  I/O  CRUD &amp; Process  Miscellaneous</p>
    <p>public HeartbeatResponse heartbeat (HeartbeatData hd) { ... }</p>
    <p>public class JobInProgress { JobID jobId; TaskInProgress maps[]; ... }</p>
    <p>SPV @ HotCloud 15</p>
    <p>@Data</p>
    <p>@IO</p>
  </div>
  <div class="page">
    <p>q SPV Compiler  Executable XML</p>
    <p>q Define configurations, assertions, and specifications</p>
    <p>q Explore every non-deterministic choices  Task to node mapping</p>
    <p>Tasks</p>
    <p>Node</p>
    <p>Task to Run</p>
    <p>(T1,map)</p>
    <p>B</p>
    <p>(A,T1,map)</p>
    <p>Tasks</p>
    <p>Node</p>
    <p>Task to Run</p>
    <p>(T1,map)</p>
    <p>B</p>
    <p>T1 on A T1 on B</p>
    <p>A</p>
    <p>Schedule Task</p>
    <p>A</p>
    <p>(B,T1,map)</p>
    <p>Schedule Task</p>
    <p>SPV @ HotCloud 15</p>
  </div>
  <div class="page">
    <p>q 5305 lines of code on top of WALA &amp; Access/CPN</p>
    <p>q Hadoop MapReduce 1.2.1, with 1067 lines code change</p>
    <p>q 20x larger than hand-made model</p>
    <p>q 34 scenario, 30 assertion violation, 4 performance bug</p>
    <p>q 1.5 hour model checking</p>
    <p>Configuration Value Worker Node Node A, B</p>
    <p>Data Node Node A, B, C</p>
    <p>Tasks 2 Task</p>
    <p>Fault Type Slow Data Node</p>
    <p>Fault Placement Node C</p>
    <p>SPV @ HotCloud 15</p>
  </div>
  <div class="page">
    <p>http://ucare.cs.uchicago.edu</p>
    <p>SPV @ HotCloud 15</p>
  </div>
  <div class="page">
    <p>q Is it time for pre-deployment detection of performance bugs?</p>
    <p>q Bridging system code and formal methods</p>
    <p>q Future of data-centric languages</p>
    <p>q Beyond Hadoop</p>
    <p>q Root cause anatomy of performance bugs</p>
    <p>q Beyond performance bugs</p>
    <p>SPV @ HotCloud 15</p>
  </div>
</Presentation>
