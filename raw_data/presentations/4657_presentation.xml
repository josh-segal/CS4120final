<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Mayssam Sayyadian, Yoonkyong Lee, AnHai Doan University of Illinois, USA</p>
    <p>Arnon Rosenthal MITRE Corp., USA</p>
    <p>eTuner: Tuning Schema Matching eTuner: Tuning Schema Matching Software using Synthetic ScenariosSoftware using Synthetic Scenarios</p>
  </div>
  <div class="page">
    <p>Main PointsMain Points</p>
    <p>Tuning matching systems: long standing problem  becomes increasingly worse</p>
    <p>We propose a principled solution  exploits synthetic input/output pairs  promising, though much work remains</p>
    <p>Idea applicable to other contexts</p>
  </div>
  <div class="page">
    <p>price agent-name address</p>
    <p>Schema MatchingSchema Matching</p>
    <p>listed-price contact-name city state</p>
    <p>Schema 2</p>
    <p>Schema 1</p>
  </div>
  <div class="page">
    <p>Schema Matching is UbiquitousSchema Matching is Ubiquitous</p>
    <p>Databases  data integration,</p>
    <p>model management</p>
    <p>data translation,</p>
    <p>collaborative data sharing</p>
    <p>keyword querying, schema/view integration</p>
    <p>data warehousing, peer data management,</p>
    <p>AI  knowledge bases, ontology merging, information gathering agents, ...</p>
    <p>Web  e-commerce, Deep Web, Semantic Web</p>
    <p>eGovernment, bio-informatics, scientific data management</p>
  </div>
  <div class="page">
    <p>Current State of AffairsCurrent State of Affairs  Finding semantic mappings is now a key bottleneck!</p>
    <p>largely done by hand, labor intensive &amp; error prone</p>
    <p>Numerous matching techniques have been developed  Databases: IBM Almaden, Microsoft Research, BYU, George Mason,</p>
    <p>U Leipzig, U Wisconsin, NCSU, U Illinois, Washington, Humboldt-Universitt zu Berlin, ...</p>
    <p>AI: Stanford, Karlsruhe University, NEC Japan, ...</p>
    <p>Techniques are often synergistic, leading to multi-component matching architectures  each component employs a particular technique</p>
    <p>final predictions combine those of the components</p>
  </div>
  <div class="page">
    <p>An Example: LSD An Example: LSD [SIGMOD-01][SIGMOD-01] Schema 1</p>
    <p>Urbana, IL James Smith Seattle, WA Mike Doan</p>
    <p>address agent-name</p>
    <p>area contact-agent</p>
    <p>Peoria, IL (206) 634 9435 Kent, WA (617) 335 4243</p>
    <p>Schema 2</p>
    <p>Name Matcher</p>
    <p>Naive Bayes Matcher</p>
    <p>Combiner</p>
    <p>agent</p>
    <p>name</p>
    <p>contact</p>
    <p>agent 0.5</p>
    <p>area =&gt; (address, 0.7), (description, 0.3) contact-agent =&gt; (agent-phone, 0.7), (agent-name, 0.3)</p>
    <p>comments =&gt; (address, 0.6), (desc, 0.4)</p>
    <p>Match Selector</p>
    <p>Constraint Enforcer</p>
    <p>Only one attribute of Schema 2 matches address</p>
    <p>area = address</p>
    <p>contact-agent = agent-phone</p>
    <p>...</p>
    <p>comments = desc</p>
  </div>
  <div class="page">
    <p>Multi-Component Matching SolutionsMulti-Component Matching Solutions</p>
    <p>Such systems are very powerful ...  maximize accuracy; highly customizable to individual domain</p>
    <p>... but place a serious tuning burden on domain users</p>
    <p>Constraint enforcer</p>
    <p>Match selector</p>
    <p>Matcher Matcher Combiner</p>
    <p>Matcher 1 Matcher n</p>
    <p>Constraint enforcer</p>
    <p>Match selector</p>
    <p>Combiner</p>
    <p>Matcher 1 Matcher n</p>
    <p>Constraint enforcer</p>
    <p>Match selector</p>
    <p>Combiner</p>
    <p>Matcher 1 Matcher n</p>
    <p>Match selector</p>
    <p>Combiner</p>
    <p>LSD COMA SF</p>
    <p>LSD-SF</p>
    <p>Developed in many recent works  e.g., Doan et. al., WebDB-00, SIGMOD-01; Do&amp;Rahm, VLDB-02;</p>
    <p>Embley et.al.-02; Bernstein et. al. SIGMOD Record-04; Madhavan et. al. 05</p>
    <p>Now commonly adopted, with industrial-strength systems  e.g., Protoplasm [MSR], COMA++ [Univ of Lepzig]</p>
  </div>
  <div class="page">
    <p>Tuning Schema Matching SystemsTuning Schema Matching Systems</p>
    <p>Library of matching components</p>
    <p>Constraint enforcer</p>
    <p>Match selector</p>
    <p>Combiner</p>
    <p>Matcher 1 Matcher n</p>
    <p>Execution graph</p>
    <p>Knobs of decision tree matcher</p>
    <p>Threshold selector</p>
    <p>Bipartite graph selector</p>
    <p>A* search enforcer Relax. labeler ILP</p>
    <p>Average combiner</p>
    <p>Min combiner</p>
    <p>Max combiner</p>
    <p>Weighted sum combiner</p>
    <p>q-gram name matcher</p>
    <p>Decision tree matcher</p>
    <p>Nave Bays matcher</p>
    <p>TF/IDF name matcher</p>
    <p>SVM matcher</p>
    <p>Characteristics of attr.</p>
    <p>Post-prune?  Size of validation set</p>
    <p>Split measure</p>
    <p>Given a particular matching situation</p>
    <p>how to select the right components?</p>
    <p>how to adjust the multitude of knobs?</p>
    <p>Untuned versions produce inferior accuracy, however ...</p>
  </div>
  <div class="page">
    <p>Large number of knobs  e.g., 8-29 in our experiments</p>
    <p>Wide variety of techniques  database, machine learning, IR, information theory, etc.</p>
    <p>Complex interaction among components  Not clear how to compare the quality of knob configs</p>
    <p>Matching systems are still tuned manually, by trial and error  Multiple component systems make tuning even worse</p>
    <p>... Tuning is Extremely Difficult ... Tuning is Extremely Difficult</p>
    <p>Developing efficient tuning techniques is crucial to making matching systems attractive in practice</p>
  </div>
  <div class="page">
    <p>The eTuner SolutionThe eTuner Solution  Given schema S &amp; matching system M</p>
    <p>tunes M to maximize average accuracy of matching S with future schemas</p>
    <p>incurs virtually no cost to user</p>
    <p>Key challenge 1: Evaluation  must search for best knob config  how to compute the quality of any knob config C?</p>
    <p>if knowing ground-truth matches for a representative workload W = {(S,T1), ..., (S,Tn)}, then can use W to evaluate C</p>
    <p>but often have no such W</p>
    <p>Key challenge 2: Search  how to efficiently evaluate the huge space of knob configs?</p>
  </div>
  <div class="page">
    <p>Key Idea: Generate Synthetic Input/Output PairsKey Idea: Generate Synthetic Input/Output Pairs</p>
    <p>Need workload W = {(S,T1), (S,T2), , (S,Tn)}</p>
    <p>To generate W</p>
    <p>start with S</p>
    <p>perturb S to generate T1</p>
    <p>perturb S to generate T2</p>
    <p>etc.</p>
    <p>Know the perturbation =&gt; know matches between S &amp; Ti</p>
  </div>
  <div class="page">
    <p>Key Idea: Generate Synthetic Input/Output PairsKey Idea: Generate Synthetic Input/Output Pairs</p>
    <p>Perturb # of tables</p>
    <p>id first last salary ($)</p>
    <p>EMPLOYEES</p>
    <p>EMPS emp-last id wage</p>
    <p>Laup 1 45200</p>
    <p>Brown 2 59328</p>
    <p>V1</p>
    <p>Schema S</p>
    <p>id first last salary ($)</p>
    <p>EMPLOYEES</p>
    <p>id first last salary ($)</p>
    <p>EMPLOYEES</p>
    <p>Perturb # of columns in each table</p>
    <p>last id salary($)</p>
    <p>Laup 1 40,000$</p>
    <p>Brown 2 60,000$</p>
    <p>EMPLOYEES</p>
    <p>Perturb column and table names</p>
    <p>Perturb data tuples in each table</p>
    <p>EMPS emp-last id wage</p>
    <p>Laup 1 40,000$</p>
    <p>Brown 2 60,000$</p>
    <p>EMPS.emp-last = EMPLOYEES.last EMPS.id = EMPLOYEES.id EMPS.wage = EMPLOYEES.salary($)</p>
    <p>U</p>
    <p>V</p>
    <p>V1U 1: a set of semantic matches</p>
    <p>Vn</p>
    <p>.</p>
    <p>.</p>
    <p>. Split S into V and U with disjoint data tuples</p>
  </div>
  <div class="page">
    <p>Examples of Perturbation RulesExamples of Perturbation Rules  Number of tables</p>
    <p>merge two tables based on a join path  splits a table into two</p>
    <p>Structure of table  merges two columns</p>
    <p>e.g., neighboring columns, or sharing prefix/suffix (last-name, first-name)</p>
    <p>drop a column  swap location of two columns</p>
    <p>Names of tables/columns  rules capture common name transformations  abbreviation to the first 3-4 characters, dropping all vowels, synonyms,</p>
    <p>dropping prefixes, adding table name to column name, etc</p>
    <p>Data values  rules capture common format transformations: 12/4 =&gt; Dec 4  values are changed based on some distributions (e.g., Gaussian)</p>
    <p>See paper for details</p>
  </div>
  <div class="page">
    <p>The eTuner ArchitectureThe eTuner Architecture</p>
    <p>Staged Tuner</p>
    <p>Tuning Procedures</p>
    <p>Workload Generator</p>
    <p>Perturbation Rules</p>
    <p>Matching Tool M</p>
    <p>Synthetic Workload</p>
    <p>(Optional)</p>
    <p>Tuned Matching Tool M</p>
    <p>U 1 V1</p>
    <p>U 2 V2</p>
    <p>U n Vn Schema S</p>
  </div>
  <div class="page">
    <p>The Staged TunerThe Staged Tuner</p>
    <p>Level 1</p>
    <p>Level 2</p>
    <p>Level 3Constraint enforcer</p>
    <p>Match selector</p>
    <p>Combiner</p>
    <p>Matcher 1 Matcher n</p>
    <p>Level 4</p>
    <p>Tuning direction</p>
    <p>Tune sequentially starting with lowest-level components  Assume</p>
    <p>execution graph has k levels, m nodes per level</p>
    <p>each node can be assigned one of n components</p>
    <p>each component has p knobs, each of which has q values</p>
    <p>tuning examines (npqkm) out of (npq)^(km) knob configs</p>
  </div>
  <div class="page">
    <p>Empirical Evaluation Empirical Evaluation</p>
    <p>Domain # schemas # tables per</p>
    <p>schema # attributes per schema</p>
    <p># tuples per table</p>
    <p>reference paper</p>
    <p>Real Estate 5 2 30 1000 LSD (SIGMOD01)</p>
    <p>Courses 5 3 13 50 LSD</p>
    <p>Inventory 10 4 10 20 Corpus (ICDE05)</p>
    <p>Product 2 2 50 120 iMAP (SIGMOD04)</p>
    <p>Domains</p>
    <p>LSD: 6 Matchers, 6 Combiners, 1 Constraint enforcer, 2 Match selectors, 21 Knobs</p>
    <p>iCOMA: 10 Matchers, 4 Combiners, 2 Match selectors, 20 Knobs</p>
    <p>SF: 3 Matchers, 1 Constraint enforcer, 2 Match selectors, 8 Knobs</p>
    <p>LSD-SF: 7 Matcher, 7 Combiners, 1 Constraint enforcer, 2 Match selectors, 29 Knobs</p>
    <p>Matching systems</p>
  </div>
  <div class="page">
    <p>Matching AccuracyMatching Accuracy</p>
    <p>CourseInventoryProductReal Estate</p>
    <p>LSD COMA</p>
    <p>SF</p>
    <p>Off-the-shelf Domain-independent</p>
    <p>LSD-SF</p>
    <p>eTuner achieves higher accuracy than current best methods, at virtually no cost to the user</p>
    <p>Domain-dependent Source-dependent</p>
    <p>eTUNER: Automatic eTUNER: Human-assisted</p>
    <p>CourseInventoryProductReal Estate 0</p>
    <p>CourseInventoryProductReal Estate CourseInventoryProductReal Estate 0</p>
  </div>
  <div class="page">
    <p>Cost of Using eTunerCost of Using eTuner</p>
    <p>You have a schema S and a matching system M  Vendor supplies eTuner</p>
    <p>will hook it up with matching system M</p>
    <p>Vendor supplies a matching system M  bundles eTuner inside</p>
  </div>
  <div class="page">
    <p>Sensitivity AnalysisSensitivity Analysis  Adding perturbation rules  Exploiting prior match results (enriching the workload)</p>
    <p>A cc</p>
    <p>u ra</p>
    <p>cy (</p>
    <p>F 1 )</p>
    <p>Average</p>
    <p>Inventory Domain</p>
    <p>Real Estate Domain</p>
    <p>Tuned LSD</p>
    <p>Previous matches in collection (%)</p>
  </div>
  <div class="page">
    <p>Summary: The eTuner Project @ IllinoisSummary: The eTuner Project @ Illinois</p>
    <p>Tuning matching systems is crucial  long standing problem, is getting worse</p>
    <p>a next logical step in schema matching research</p>
    <p>Provides an automatic &amp; principled solution  generates a synthetic workload, employs it to tune efficiently  incurs virtually no cost to human users</p>
    <p>exploits user assistance whenever available</p>
    <p>Extensive experiments over 4 domains with 4 systems</p>
    <p>Future directions  find optimal synthetic workload</p>
    <p>apply to other matching scenarios  adapt ideas to scenarios beyond schema matching (see 3rd speaker)</p>
  </div>
  <div class="page">
    <p>Backup: User AssistanceBackup: User Assistance  S(phone1,phone2,)  Generate V by dropping phone2: V(phone1,)  Rename phone1 in V: V(x,)  Problem:</p>
    <p>x matches phone1, x does not match phone2</p>
    <p>User:  group phone1 and phone2</p>
    <p>so if x matches phone1, it will also match phone2</p>
    <p>Intuition: tell system do not bother to try distinguish phone1 and phone2</p>
  </div>
</Presentation>
