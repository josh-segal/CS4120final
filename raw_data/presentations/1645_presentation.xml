<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>GoSeed: Generating an Optimal Seeding Plan for Deduplicated Storage</p>
    <p>Aviv Nachman, Gala Yadgar, Sarai Sheinvald</p>
  </div>
  <div class="page">
    <p>Seeding</p>
    <p>Data migration: transfer files and their blocks between volumes</p>
    <p>Seeding is data migration with empty destination</p>
    <p>block</p>
    <p>file1 file2</p>
    <p>block</p>
    <p>file3</p>
    <p>blockblock</p>
  </div>
  <div class="page">
    <p>Seeding</p>
    <p>Data migration: transfer files and their blocks between volumes</p>
    <p>Seeding is data migration with empty destination</p>
    <p>block</p>
    <p>file1 file2</p>
    <p>block</p>
    <p>file3</p>
    <p>block</p>
    <p>File is remapped</p>
    <p>block</p>
    <p>file3</p>
    <p>blockblock</p>
    <p>moved</p>
  </div>
  <div class="page">
    <p>Seeding in deduplicated systems  System contains only unique physical blocks</p>
    <p>File remap can cause replication</p>
    <p>block</p>
    <p>file1 file2</p>
    <p>block</p>
    <p>file3</p>
    <p>block</p>
    <p>file3</p>
    <p>block</p>
  </div>
  <div class="page">
    <p>Seeding in deduplicated systems  System contains only unique physical blocks</p>
    <p>File remap can cause replication</p>
    <p>block</p>
    <p>file1 file2</p>
    <p>block</p>
    <p>file3</p>
    <p>block</p>
    <p>file3</p>
    <p>blockblock</p>
    <p>replication</p>
    <p>Load balancing Data domain cloud tier [Duggal et al. ATC19]</p>
    <p>File is remapped</p>
  </div>
  <div class="page">
    <p>The seeding optimization problem</p>
    <p>Migrate % of physical occupancy to an empty destination</p>
    <p>Minimize block replication</p>
    <p>Each file is kept/remapped</p>
    <p>Each block is kept/moved/replicated</p>
    <p>NP-hard</p>
  </div>
  <div class="page">
    <p>Our approach: formulate seeding as ILP</p>
    <p>ILP [Integer Linear Programming] optimization with linear constraints</p>
    <p>NP-hard</p>
    <p>Industrial and open source ILP solvers</p>
    <p>Use ILP for data migration</p>
    <p>ILP problem</p>
    <p>ILP solution</p>
    <p>Seeding PlanSolverSeeding Problem</p>
  </div>
  <div class="page">
    <p>Constraint I: migration goal</p>
    <p>Migrate M% of physical occupancy</p>
    <p>Actually</p>
  </div>
  <div class="page">
    <p>Constraint II: blocks follow their file</p>
    <p>Blocks are copied or moved with their files</p>
    <p>block</p>
    <p>file1 file2</p>
    <p>block</p>
    <p>file3</p>
    <p>block</p>
    <p>file3</p>
    <p>block</p>
    <p>File is remapped</p>
  </div>
  <div class="page">
    <p>Constraint II: blocks follow their file</p>
    <p>Blocks are copied or moved with their files</p>
    <p>block</p>
    <p>file1 file2</p>
    <p>block</p>
    <p>file3</p>
    <p>block</p>
    <p>file3</p>
    <p>blockblock</p>
    <p>Block replication Block moved</p>
    <p>File is remapped</p>
  </div>
  <div class="page">
    <p>Constraint III: file follows removed blocks</p>
    <p>Blocks cannot move without their files</p>
    <p>block</p>
    <p>file1 file2</p>
    <p>block</p>
    <p>file3</p>
    <p>block</p>
    <p>Block moved</p>
    <p>file1</p>
    <p>block</p>
  </div>
  <div class="page">
    <p>Constraint III: file follows removed blocks</p>
    <p>Blocks cannot move without their files</p>
    <p>block</p>
    <p>file1 file2</p>
    <p>block</p>
    <p>file3</p>
    <p>block</p>
    <p>Block moved</p>
    <p>File is remapped</p>
    <p>file1</p>
    <p>block</p>
  </div>
  <div class="page">
    <p>Theory vs. Practice</p>
    <p>~10 logical TB  ~billion variables and constraints</p>
    <p>Solvers are efficient with several 100K</p>
    <p>Acceleration (approximation) methods: Shorter running time  Further from optimum</p>
  </div>
  <div class="page">
    <p>Method I: solver timeout</p>
    <p>Solvers can output best solution so far</p>
    <p>Most progress is made early</p>
    <p>Shorter guaranteed running time  Further from optimum</p>
    <p>Good enough?Optimum</p>
  </div>
  <div class="page">
    <p>Method II: fingerprint sampling</p>
    <p>Sample a subset of the fingerprints [Harnik et al. FAST19]</p>
    <p>Sample degree k: sample 1</p>
    <p>Smaller problem  more information lost</p>
  </div>
  <div class="page">
    <p>Method III: container-based aggregation</p>
    <p>Deduplication system stores blocks in containers</p>
    <p>We treat each container as a block</p>
    <p>block</p>
    <p>file1 file2</p>
    <p>block</p>
    <p>file3</p>
    <p>block</p>
    <p>file2 file3file1</p>
    <p>container container</p>
    <p>+smaller problem +no need to decompress/unpack containers - Creates false dependencies</p>
    <p>Original representation</p>
    <p>Container representation</p>
  </div>
  <div class="page">
    <p>Experimental setup</p>
    <p>MacOS -day</p>
    <p>HomesUBC500</p>
    <p>We compare:</p>
    <p>GoSeed: our ILP-based approach</p>
    <p>Rangoli [Nagesh &amp; Kathpal Systor13]:  Sort &amp; divide the blocks into bins  Migrate the best bin</p>
    <p>SGreedy [Harnik et al. FAST19]:  Iterative method  Each iteration remap the best file</p>
    <p>f1 f2 f3 f4</p>
    <p>More workloads in the paper</p>
    <p>UBC traces: http://iotta.snia.org/traces/ FSL traces: http://tracer.filesystems.org/</p>
  </div>
  <div class="page">
    <p>Cost</p>
    <p>UBC-500 is considered easy  Homes is harder  MacOS-Day consists daily backups</p>
    <p>SGreedy (k=12)</p>
    <p>GoSeed (k=12)</p>
    <p>Cost</p>
    <p>(% replicated)</p>
    <p>Low dedup High dedup Very high dedup</p>
    <p>GoSeed always finds a solution, its often the best 18</p>
    <p>Rangoli</p>
    <p>SGreedy</p>
  </div>
  <div class="page">
    <p>Time</p>
    <p>Sampling reduces solving time  Complexity costs time (tradeoff)</p>
    <p>Time</p>
    <p>(secs)</p>
    <p>SGreedy (k=12)</p>
    <p>GoSeed (k=12)</p>
    <p>Rangoli</p>
    <p>SGreedy</p>
  </div>
  <div class="page">
    <p>Container cost</p>
    <p>GoSeed always gives a solution, almost always better</p>
    <p>Cost</p>
    <p>(% replicated)</p>
    <p>Rangoli</p>
    <p>SGreedy</p>
    <p>GoSeed</p>
    <p>Additional evaluation in the paper: effects of M, , k, timeout</p>
  </div>
  <div class="page">
    <p>We solve the seeding problem with ILP solvers</p>
    <p>Acceleration methods are essential and effective</p>
    <p>GoSeed often outperforms greedy approaches</p>
    <p>Future steps: general data migration More details in the paper</p>
    <p>Conclusions</p>
  </div>
</Presentation>
