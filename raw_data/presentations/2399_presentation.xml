<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>A Sybil-Proof Distributed Hash Table</p>
    <p>Chris Lesniewski-Laas M. Frans Kaashoek MIT</p>
    <p>http://pdos.csail.mit.edu/whanau/slides.pptx</p>
  </div>
  <div class="page">
    <p>Distributed Hash Table</p>
    <p>Interface: PUT(key, value), GET(key)value  Route to peer responsible for key</p>
    <p>GET( sip://alice@foo )</p>
    <p>PUT( sip://alice@foo, 18.26.4.9 )</p>
  </div>
  <div class="page">
    <p>The Sybil aBack on open DHTs</p>
    <p>Create many pseudonyms (Sybils), join DHT  Sybils join the DHT as usual, disrupt rouFng</p>
    <p>Bruteforce aBack Clustering aBack</p>
  </div>
  <div class="page">
    <p>Sybil state of the art 20</p>
    <p>P2P mania!</p>
    <p>Chord, Pastry, Tapestry, CAN</p>
    <p>The Sybil ABack [Douceur], Security ConsideraFons [Sit, Morris]</p>
    <p>Restricted tables [Castro et al]</p>
    <p>BFT [Rodrigues, Liskov]</p>
    <p>SPROUT, Turtle, Bootstrap graphs</p>
    <p>Puzzles [Borisov]</p>
    <p>CAPTCHA [Rowaihy et al]</p>
    <p>SybilLimit [Yu et al]</p>
    <p>SybilInfer, SumUp, DSybil</p>
    <p>(This work)</p>
    <p>P2P mania!</p>
  </div>
  <div class="page">
    <p>ContribuFon</p>
    <p>Whnau: an efficient Sybilproof DHT protocol  GET cost: O(1) messages, one RTT latency  Cost to build rouFng tables: O(N log N) storage/ bandwidth per node (for N keys)</p>
    <p>Oblivious to number of Sybils!</p>
    <p>Proof of correctness  PlanetLab implementaFon  Largescale simulaFons vs. powerful aBack</p>
  </div>
  <div class="page">
    <p>Division of labor</p>
    <p>ApplicaFon provides integrity  Whnau provides availability</p>
    <p>E.g., applicaFon signs values using private key  Proc GET(key):</p>
    <p>UnFl valid value found: Try value = LOOKUP(key) Repeat</p>
  </div>
  <div class="page">
    <p>Approach</p>
    <p>Use a social network to limit Sybils  Addresses bruteforce aBack</p>
    <p>New technique: layered iden4fiers  Addresses clustering aBacks</p>
  </div>
  <div class="page">
    <p>SETUP: periodically build tables using social links  LOOKUP: use tables to route efficiently</p>
    <p>Two main phases</p>
    <p>SETUP LOOKUP</p>
    <p>Social Network RouFng Tables</p>
    <p>key</p>
    <p>value</p>
    <p>key value</p>
    <p>PUT(key, value)</p>
    <p>PUT Queue</p>
  </div>
  <div class="page">
    <p>Social links created</p>
  </div>
  <div class="page">
    <p>Social links maintained over Internet</p>
  </div>
  <div class="page">
    <p>Sybil region</p>
    <p>Social network Honest region</p>
    <p>ABack edges</p>
  </div>
  <div class="page">
    <p>Random walks c.f. SybilLimit [Yu et al 2008]</p>
  </div>
  <div class="page">
    <p>Building tables using random walks c.f. SybilLimit [Yu et al 2008]</p>
    <p>What have we accomplished?</p>
    <p>Small fracFon (e.g. &lt; 50%) of bad nodes in rouFng tables</p>
    <p>Bad fracFon is independent of number of Sybil nodes</p>
  </div>
  <div class="page">
    <p>SETUP LOOKUP</p>
    <p>Social Network RouFng Tables</p>
    <p>key</p>
    <p>value</p>
    <p>key value</p>
    <p>PUT(key, value)</p>
    <p>PUT Queue</p>
  </div>
  <div class="page">
    <p>RouFng table structure</p>
    <p>O(n) fingers and O(n) keys stored per node  Fingers have random IDs, cover all keys WHP  Lookup: query closest finger to target key</p>
    <p>Finger tables: (ID, address)</p>
    <p>Key tables: (key,value)</p>
    <p>Keynes</p>
    <p>Aardvark Zyzzyva</p>
    <p>Kelvin</p>
  </div>
  <div class="page">
    <p>From social network to rouFng tables</p>
    <p>Finger table: randomly sample O(n) nodes  Most samples are honest</p>
    <p>ID IP address</p>
  </div>
  <div class="page">
    <p>A B</p>
    <p>C</p>
    <p>D</p>
    <p>E</p>
    <p>F</p>
    <p>G</p>
    <p>H</p>
    <p>I</p>
    <p>J</p>
    <p>K</p>
    <p>L M N O</p>
    <p>P</p>
    <p>Q</p>
    <p>R</p>
    <p>S</p>
    <p>T</p>
    <p>U</p>
    <p>V</p>
    <p>W</p>
    <p>X</p>
    <p>Y</p>
    <p>Z</p>
    <p>Honest nodes pick IDs uniformly</p>
    <p>Plenty of fingers near key</p>
  </div>
  <div class="page">
    <p>A B</p>
    <p>C</p>
    <p>D</p>
    <p>E</p>
    <p>F</p>
    <p>G</p>
    <p>H</p>
    <p>I</p>
    <p>J</p>
    <p>K</p>
    <p>L M N O</p>
    <p>P</p>
    <p>Q</p>
    <p>R</p>
    <p>S</p>
    <p>T</p>
    <p>U</p>
    <p>V</p>
    <p>W</p>
    <p>X</p>
    <p>Y</p>
    <p>Z</p>
    <p>Sybil ID clustering aBack</p>
    <p>[HypotheFcal scenario: 50% Sybil IDs, 50% honest IDs]</p>
    <p>Many bad fingers near key</p>
  </div>
  <div class="page">
    <p>A B</p>
    <p>C</p>
    <p>D</p>
    <p>E</p>
    <p>F</p>
    <p>G</p>
    <p>H</p>
    <p>I</p>
    <p>J</p>
    <p>K</p>
    <p>L M N O</p>
    <p>P</p>
    <p>Q</p>
    <p>R</p>
    <p>S</p>
    <p>T</p>
    <p>U</p>
    <p>V</p>
    <p>W</p>
    <p>X</p>
    <p>Y</p>
    <p>Z A</p>
    <p>B C</p>
    <p>D</p>
    <p>E</p>
    <p>F</p>
    <p>G</p>
    <p>H</p>
    <p>I</p>
    <p>J</p>
    <p>K</p>
    <p>L M N O</p>
    <p>P</p>
    <p>Q</p>
    <p>R</p>
    <p>S</p>
    <p>T</p>
    <p>U</p>
    <p>V</p>
    <p>W</p>
    <p>X</p>
    <p>Y</p>
    <p>Z</p>
    <p>Honest layered IDs mimic Sybil IDs Layer 0 Layer 1</p>
  </div>
  <div class="page">
    <p>Every range is balanced in some layer</p>
    <p>A B</p>
    <p>C</p>
    <p>D</p>
    <p>E</p>
    <p>F</p>
    <p>G</p>
    <p>H</p>
    <p>I</p>
    <p>J</p>
    <p>K</p>
    <p>L M N O</p>
    <p>P</p>
    <p>Q</p>
    <p>R</p>
    <p>S</p>
    <p>T</p>
    <p>U</p>
    <p>V</p>
    <p>W</p>
    <p>X</p>
    <p>Y</p>
    <p>Z A</p>
    <p>B C</p>
    <p>D</p>
    <p>E</p>
    <p>F</p>
    <p>G</p>
    <p>H</p>
    <p>I</p>
    <p>J</p>
    <p>K</p>
    <p>L M N O</p>
    <p>P</p>
    <p>Q</p>
    <p>R</p>
    <p>S</p>
    <p>T</p>
    <p>U</p>
    <p>V</p>
    <p>W</p>
    <p>X</p>
    <p>Y</p>
    <p>Z</p>
    <p>Layer 0 Layer 1</p>
  </div>
  <div class="page">
    <p>A B</p>
    <p>C</p>
    <p>D</p>
    <p>E</p>
    <p>F</p>
    <p>G</p>
    <p>H</p>
    <p>I</p>
    <p>J</p>
    <p>K</p>
    <p>L M N O</p>
    <p>P</p>
    <p>Q</p>
    <p>R</p>
    <p>S</p>
    <p>T</p>
    <p>U</p>
    <p>V</p>
    <p>W</p>
    <p>X</p>
    <p>Y Z</p>
    <p>A B</p>
    <p>C</p>
    <p>D</p>
    <p>E</p>
    <p>F</p>
    <p>G</p>
    <p>H</p>
    <p>I</p>
    <p>J</p>
    <p>K</p>
    <p>L M N O</p>
    <p>P</p>
    <p>Q</p>
    <p>R</p>
    <p>S</p>
    <p>T</p>
    <p>U</p>
    <p>V</p>
    <p>W</p>
    <p>X</p>
    <p>Y Z</p>
    <p>Two layers is not quite enough Layer 0 Layer 1</p>
    <p>RaFo = 1 honest : 10 Sybils</p>
    <p>RaFo = 10 honest : 100 Sybils</p>
  </div>
  <div class="page">
    <p>Log n parallel layers is enough</p>
    <p>log n layered IDs for each node  Lookup steps:</p>
    <p>A B C</p>
    <p>D E F G H I J</p>
    <p>K L M N O</p>
    <p>P Q</p>
    <p>R S T U V W</p>
    <p>X Y Z</p>
    <p>A B C</p>
    <p>D E F G H I J</p>
    <p>K L M N O</p>
    <p>P Q</p>
    <p>R S T U V W</p>
    <p>X Y Z</p>
    <p>A B C</p>
    <p>D E F G H I J</p>
    <p>K L M N O</p>
    <p>P Q</p>
    <p>R S T U V W</p>
    <p>X Y Z</p>
    <p>A B C</p>
    <p>D E F G H I J</p>
    <p>K L M N O</p>
    <p>P Q</p>
    <p>R S T U V W</p>
    <p>X Y Z</p>
    <p>Layer 0 Layer 1 Layer 2 Layer L</p>
  </div>
  <div class="page">
    <p>Main theorem: secure DHT rouFng</p>
    <p>If we run Whnaus SETUP using:</p>
    <p>Then, for any input key and all but n nodes:</p>
    <p>Each lookup aBempt (i.e., coin flip) succeeds with probability (1)</p>
    <p>Thus GET(key) uses O(1) messages (expected)</p>
  </div>
  <div class="page">
    <p>EvaluaFon: Hypotheses</p>
  </div>
  <div class="page">
    <p>Method</p>
    <p>Efficient messagebased simulator  Social network data spidered from Flickr, Youtube, DBLP, and LiveJournal (n=5.2M)</p>
    <p>Clustering aBack, varying number of aBack edges</p>
    <p>PlanetLab implementaFon</p>
  </div>
  <div class="page">
    <p>Escape probability</p>
    <p>Random walk length</p>
    <p>[Flickr social network: n  1.6M, average degree  9.5]</p>
  </div>
  <div class="page">
    <p>Walk length tradeoff</p>
    <p>Random walk length</p>
    <p>Clumpiness</p>
    <p>[Flickr social network: n  1.6M, average degree  9.5]</p>
  </div>
  <div class="page">
    <p>Whnau delivers high availability</p>
    <p>M ed</p>
    <p>ia n lo o ku p m</p>
    <p>es sa ge s</p>
    <p>Table size</p>
    <p>No aBacker</p>
    <p>[Flickr social network: n  1.6M, 3n  4000]</p>
  </div>
  <div class="page">
    <p>Everything rests on the model</p>
  </div>
  <div class="page">
    <p>ContribuFons</p>
    <p>Whnau: an efficient Sybilproof DHT  Use a social network to filter good nodes  Resist up to O(n/log n) aBack edges  Table size per node: O(N log N)  Messages to route: O(1)</p>
    <p>Introduced layers to combat clustering aBacks</p>
  </div>
</Presentation>
