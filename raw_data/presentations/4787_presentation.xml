<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>Fast Probabilistic Planning Through Weighted Model Counting</p>
    <p>Carmel Domshlak Jorg Hoffmann</p>
    <p>Technion (Israel)</p>
    <p>Max-Planck-Institute for Computer Science (Germany)</p>
    <p>June 8, 2006</p>
  </div>
  <div class="page">
    <p>Talk Outline</p>
    <p>I Probabilistic Planning I Probabilistic-FF:</p>
    <p>I Search States as Bayes networks I Search States as Weighted CNFs I Heuristic Function</p>
    <p>I Results I Conclusion</p>
  </div>
  <div class="page">
    <p>Probabilistic Planning: Problem Definition</p>
    <p>Also known as conformant/conditional probabilistic planning</p>
    <p>I Initial (belief) state: probability distribution PI over the world states</p>
    <p>I A set of (possibly) stochastic actions I Goal: a set of goal world states I Plan: a single sequence of actions that transforms the</p>
    <p>system into one of the goal states with probability higher than</p>
  </div>
  <div class="page">
    <p>Probabilistic Planning: Declarative Specification</p>
    <p>STRIPS-like, declarative description: (A, PI , G, ) I Initial belief state PI in structured representation</p>
    <p>I Bayes network NI over state propositions/variables I Deterministic actions</p>
    <p>I STRIPS plus conditional effects I Probabilistic actions</p>
    <p>I STRIPS plus conditional PDs over effects I Goal G: a set of facts</p>
    <p>Probabilistic actions: treated by the framework, but yet to be implemented</p>
  </div>
  <div class="page">
    <p>Example</p>
    <p>I Locations L1, L2, robot R, block B I Actions</p>
    <p>I robot moves between locations (deterministic) I robot in the target location with probability 1</p>
    <p>I robot moves between locations while carrying the block (probabilistic)</p>
    <p>I success with probability 0.7 I robot moves, but block stays with probability 0.2 I complete failure with probability 0.1</p>
    <p>I Initial belief state by NI :</p>
    <p>rL1 rL2 0.9 0.1</p>
    <p>GFED@ABCR // ?&gt;=&lt;89:;B bL1 bL2</p>
    <p>rL1 0.7 0.3 rL2 0.2 0.8</p>
  </div>
  <div class="page">
    <p>Talk Outline</p>
    <p>I Probabilistic Planning I Probabilistic-FF:</p>
    <p>I Search States as Bayes networks I Search States as Weighted CNFs I Heuristic Function</p>
    <p>I Results I Conclusion</p>
  </div>
  <div class="page">
    <p>Probabilistic-FF: Informal Overview</p>
    <p>I . . . is based on the Conformant-FF code</p>
    <p>I . . . simplifies to Conformant-FF when  = 1</p>
    <p>I . . . extends Conformant-FFs belief state representation and heuristic function</p>
    <p>I . . . tests on problems with probabilistic initial state and deterministic actions</p>
    <p>I state of the art: 100 world states, 15-20 steps plans I solved problems with billions world states, &gt; 120 plan steps</p>
  </div>
  <div class="page">
    <p>Probabilistic-FF: Key issues</p>
    <p>I Key ideas: combining between 1. lazy CNF-based (non-probabilistic) belief state</p>
    <p>representation of Conformant-FF [BH04] 2. probabilistic reasoning using weighted CNF model counting</p>
    <p>[SBK05]</p>
    <p>I gluing between (1) and (2) with lazy representation of belief states using Bayes networks</p>
    <p>I structured representation based on logical factoring</p>
    <p>I Most technically involved part I proper modification of the heuristic function</p>
    <p>(relaxed plans)</p>
  </div>
  <div class="page">
    <p>Talk Outline</p>
    <p>I Probabilistic Planning I Probabilistic-FF:</p>
    <p>I Search States as Bayes networks I Search States as Weighted CNFs I Heuristic Function</p>
    <p>I Results I Conclusion</p>
  </div>
  <div class="page">
    <p>Search States as Bayes networks</p>
    <p>I Forward search in belief space I Search states are belief states reachable from PI through</p>
    <p>some actions sequence a I Problem: Explicit belief state description is getting less and</p>
    <p>less structured with |a|</p>
    <p>I Solution: Lazy representation of the belief state after a as a Bayes network Na</p>
    <p>a a a!</p>
    <p>V0 V1 Vm</p>
    <p>Gm</p>
    <p>I Pa = P(Vm) I Pa(G) = P(Gm)</p>
  </div>
  <div class="page">
    <p>Search States as Bayes networks</p>
    <p>I Forward search in belief space I Search states are belief states reachable from PI through</p>
    <p>some actions sequence a I Problem: Explicit belief state description is getting less and</p>
    <p>less structured with |a|   I Solution: Lazy representation of the belief state after a as</p>
    <p>a Bayes network Na</p>
    <p>a a a!</p>
    <p>V0 V1 Vm</p>
    <p>Gm</p>
    <p>I Pa = P(Vm) I Pa(G) = P(Gm)</p>
  </div>
  <div class="page">
    <p>Talk Outline</p>
    <p>I Probabilistic Planning I Probabilistic-FF:</p>
    <p>I Search States as Bayes networks I Search States as Weighted CNFs I Heuristic Function</p>
    <p>I Results I Conclusion</p>
  </div>
  <div class="page">
    <p>Inference in BNs and Weighted CNFs</p>
    <p>I Problems: I Inference in BNs is #P-complete I Classical exact algorithms do not scale well on large, dense</p>
    <p>networks</p>
    <p>I Suggestion: [CD05,SBK05] 1. Compile a BN N into a cnf (N), 2. Associate some literals of (N) with numerical weights</p>
    <p>derived from N , 3. Do weighted model counting on (N) by reusing (and</p>
    <p>adapting) techniques used in DPLL-style search for SAT. I Scales well when ...</p>
    <p>I ... lots of deterministic dependencies I ... lots of context-specific independencies</p>
    <p>We have that!</p>
  </div>
  <div class="page">
    <p>Inference in BNs and Weighted CNFs</p>
    <p>I Problems: I Inference in BNs is #P-complete I Classical exact algorithms do not scale well on large, dense</p>
    <p>networks I Suggestion: [CD05,SBK05]</p>
    <p>derived from N , 3. Do weighted model counting on (N) by reusing (and</p>
    <p>adapting) techniques used in DPLL-style search for SAT.</p>
    <p>I Scales well when ... I ... lots of deterministic dependencies I ... lots of context-specific independencies</p>
    <p>We have that!</p>
  </div>
  <div class="page">
    <p>Inference in BNs and Weighted CNFs</p>
    <p>I Problems: I Inference in BNs is #P-complete I Classical exact algorithms do not scale well on large, dense</p>
    <p>networks I Suggestion: [CD05,SBK05]</p>
    <p>derived from N , 3. Do weighted model counting on (N) by reusing (and</p>
    <p>adapting) techniques used in DPLL-style search for SAT. I Scales well when ...</p>
    <p>I ... lots of deterministic dependencies I ... lots of context-specific independencies</p>
    <p>We have that!</p>
  </div>
  <div class="page">
    <p>WMC in Probabilistic-FF Forward Search Sketch</p>
    <p>At a (belief) search state after a (Na) . . . I compile Na into a wcnf (Na) I compute Pa(G) = WMC</p>
    <p>( (Na)  G|a|</p>
    <p>) I if Pa(G)  : return a I otherwise:</p>
    <p>I determine actions a applicable after a (that is, Pa(pre(a)) = 1)</p>
    <p>I compute heuristic estimates for belief states after a and a I keep searching . . .</p>
  </div>
  <div class="page">
    <p>WMC in Probabilistic-FF Forward Search Some implementation details</p>
    <p>At a (belief) search state after a (Na) . . . I compile Na into a wcnf (Na)</p>
    <p>I ... compilation scheme along [SBK05] I compute Pa(G) = WMC</p>
    <p>( (Na)  G|a|</p>
    <p>) I ... use Cachet [SBBKP04]</p>
    <p>I if Pa(G)  : return a I otherwise:</p>
    <p>I determine actions a applicable after a (that is, Pa(pre(a)) = 1)</p>
    <p>I compute heuristic estimates for belief states after a and a I keep searching . . .</p>
  </div>
  <div class="page">
    <p>WMC in Probabilistic-FF Forward Search Some implementation details</p>
    <p>At a (belief) search state after a (Na) . . . I compile Na into a wcnf (Na)</p>
    <p>I ... compilation scheme along [SBK05] I compute Pa(G) = WMC</p>
    <p>( (Na)  G|a|</p>
    <p>) I ... use Cachet [SBBKP04]</p>
    <p>I if Pa(G)  : return a I otherwise:</p>
    <p>I determine actions a applicable after a (that is, Pa(pre(a)) = 1)</p>
    <p>I ... as in Conformant-FF: SAT queries only I compute heuristic estimates for belief states after a and a</p>
    <p>I ... see next I keep searching . . .</p>
  </div>
  <div class="page">
    <p>Talk Outline</p>
    <p>I Probabilistic Planning I Probabilistic-FF:</p>
    <p>I Search States as Bayes networks I Search States as Weighted CNFs I Heuristic Function</p>
    <p>I Results I Conclusion</p>
  </div>
  <div class="page">
    <p>Probabilistic-FF: Heuristic Function</p>
    <p>Heuristic in Conformant-FF:</p>
    <p>I . . . ignore delete lists I . . . ignore all but one effect condition I . . . extend FFs relaxed planning graph with sets of</p>
    <p>unknown (uncertain) facts, and implications between them</p>
    <p>I With unitary effect conditions, the implications are edges in a DAG  (practically) efficient reasoning possible</p>
  </div>
  <div class="page">
    <p>Probabilistic-FF: Heuristic Function VERY Sketchy</p>
    <p>Idea I: Certain weighted extension of the implication graph</p>
    <p>I No changes in implications due to deterministic actions I Implication c(t)  q(t + 1) for an unknown condition c of</p>
    <p>(an effect e of) a  A(t) such that q  add (e)</p>
    <p>I Probabilistic actions I Special weighted propositions w q (t) for probabilistic</p>
    <p>outcomes  of e (weight(w q ) = prob()) I Implication w q (t)  q(t + 1) I Implication c(t)  w q (t) for an unknown condition c . . .</p>
  </div>
  <div class="page">
    <p>Probabilistic-FF: Heuristic Function VERY Sketchy</p>
    <p>Idea II: Weight propagation to the leafs of the implication graph</p>
    <p>I For each fact node q(t), compute weightq(t)(v ) for all nodes v in the implication sub-graph Impq(t) rooted in q(t)</p>
    <p>I Computed inductively from q(t) down to the leafs of Impq(t)</p>
    <p>I weightq(t)(v ) is an upper bound on the probability of achieving q at time t by a sequence of actions responsible for a path from v to q(t) in Imp</p>
    <p>I The likelihood of achieving the goals by a relaxed plan of t time steps is estimated by:</p>
    <p>prob(G, t) = WMC((NI )</p>
    <p>gG</p>
    <p>leaf Impg(t)</p>
    <p>leaf )</p>
  </div>
  <div class="page">
    <p>Probabilistic-FF: Heuristic Function VERY Sketchy</p>
    <p>I Build pRPG until either levels off or prob(G, t)   I If prob(G, t) &lt; : report FALSE I Otherwise: extract a relaxed plan, and return the number of</p>
    <p>its actions as h</p>
    <p>I Completeness: if FALSE, then there is no relaxed plan that achieves G with probability</p>
  </div>
  <div class="page">
    <p>I</p>
  </div>
  <div class="page">
    <p>I</p>
  </div>
</Presentation>
