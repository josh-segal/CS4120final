<?xml version="1.0" ?>
<Presentation>
  <div class="page">
    <p>AMR dependency parsing with a typed semantic algebra</p>
    <p>Jonas Groschwitz*^, Matthias Lindemann*, Meaghan Fowlie*, Mark Johnson^, Alexander Koller*</p>
    <p>*Saarland University ^Macquarie University</p>
    <p>ACL 2018 Melbourne, Australia</p>
    <p>July 17</p>
  </div>
  <div class="page">
    <p>Matthias Lindemann Saarland University</p>
    <p>Meaghan Fowlie Saarland University</p>
    <p>Mark Johnson Macquarie University</p>
    <p>Alexander Koller Saarland University</p>
  </div>
  <div class="page">
    <p>Abstract Meaning Representation (AMR)</p>
    <p>witch cast</p>
    <p>spell</p>
    <p>A R</p>
    <p>G 0</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0</p>
    <p>ARG1</p>
    <p>try</p>
    <p>The witch tried to cast a spell</p>
    <p>Banarescu et al. 2013</p>
  </div>
  <div class="page">
    <p>Abstract Meaning Representation (AMR)</p>
    <p>witch cast</p>
    <p>spell</p>
    <p>A R</p>
    <p>G 0</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0</p>
    <p>ARG1</p>
    <p>try</p>
    <p>The witch tried to cast a spell</p>
    <p>Parsing</p>
    <p>Banarescu et al. 2013</p>
  </div>
  <div class="page"/>
  <div class="page">
    <p>Classic AMR parser (e.g. JAMR 2014)</p>
    <p>witch cast</p>
    <p>spelltry</p>
    <p>witch cast</p>
    <p>spell</p>
    <p>A R</p>
    <p>G 0</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0</p>
    <p>ARG1</p>
    <p>try</p>
    <p>Step 1: Predict nodes Step 2: Predict edges</p>
    <p>The witch tried to cast a spell</p>
  </div>
  <div class="page">
    <p>Not just nodes and edges</p>
    <p>witch cast</p>
    <p>spell</p>
    <p>A R</p>
    <p>G 0</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0</p>
    <p>ARG1</p>
    <p>try</p>
  </div>
  <div class="page">
    <p>Not just nodes and edges</p>
    <p>Noun Transitive verb</p>
    <p>Control verb</p>
    <p>cast</p>
    <p>A R</p>
    <p>G 0</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0</p>
    <p>ARG1</p>
    <p>try spell</p>
    <p>witch</p>
  </div>
  <div class="page">
    <p>Hidden compositional structure</p>
    <p>Principle of compositionality: the meaning of a complex expression is determined by the meanings of its constituent expressions and the rules used to combine them.</p>
    <p>The witch tried to cast a spell</p>
    <p>witch A R</p>
    <p>G 1</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spellA</p>
    <p>R G</p>
    <p>ARG1</p>
    <p>S O[S]</p>
    <p>try</p>
    <p>APPO</p>
    <p>APPS</p>
    <p>APPO</p>
  </div>
  <div class="page">
    <p>Hidden compositional structure</p>
    <p>Principle of compositionality: the meaning of a complex expression is determined by the meanings of its constituent expressions and the rules used to combine them.</p>
    <p>The witch tried to cast a spell</p>
    <p>witch</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spellA</p>
    <p>R G</p>
    <p>ARG1</p>
    <p>S O[S]</p>
    <p>try</p>
    <p>APPO</p>
    <p>APPS APPO</p>
  </div>
  <div class="page">
    <p>Hidden compositional structure</p>
    <p>Principle of compositionality: the meaning of a complex expression is determined by the meanings of its constituent expressions and the rules used to combine them.</p>
    <p>Widely accepted in linguistics, long history (Frege 1800s)  Use this knowledge to guide machine learning!</p>
    <p>The witch tried to cast a spell</p>
    <p>witch</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spellA</p>
    <p>R G</p>
    <p>ARG1</p>
    <p>S O[S]</p>
    <p>try</p>
    <p>APPO</p>
    <p>APPS APPO</p>
  </div>
  <div class="page">
    <p>The witch tried to cast a spell</p>
    <p>witch cast</p>
    <p>spelltry</p>
    <p>witch A R</p>
    <p>G 1</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spellA</p>
    <p>R G</p>
    <p>ARG1</p>
    <p>S O[S]</p>
    <p>try</p>
    <p>APPO</p>
    <p>APPS APPO</p>
  </div>
  <div class="page">
    <p>The witch tried to cast a spell</p>
    <p>difficult</p>
    <p>witch cast</p>
    <p>spelltry</p>
    <p>witch A R</p>
    <p>G 1</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spellA</p>
    <p>R G</p>
    <p>ARG1</p>
    <p>S O[S]</p>
    <p>try</p>
    <p>APPO</p>
    <p>APPS APPO</p>
  </div>
  <div class="page">
    <p>The witch tried to cast a spell</p>
    <p>easy (easier)</p>
    <p>equivalent</p>
    <p>witch cast</p>
    <p>spelltry</p>
    <p>dependencies! witch A</p>
    <p>R G</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spellA</p>
    <p>R G</p>
    <p>ARG1</p>
    <p>S O[S]</p>
    <p>try</p>
    <p>AppO AppS AppO</p>
    <p>witch A R</p>
    <p>G 1</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spellA</p>
    <p>R G</p>
    <p>ARG1</p>
    <p>S O[S]</p>
    <p>try</p>
    <p>APPO</p>
    <p>APPS APPO</p>
  </div>
  <div class="page">
    <p>The witch tried to cast a spell</p>
    <p>easy (easier)</p>
    <p>equivalent</p>
    <p>witch cast</p>
    <p>spelltry</p>
    <p>Part 1</p>
    <p>Part 2</p>
    <p>dependencies! witch A</p>
    <p>R G</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spellA</p>
    <p>R G</p>
    <p>ARG1</p>
    <p>S O[S]</p>
    <p>try</p>
    <p>AppO AppS AppO</p>
    <p>witch A R</p>
    <p>G 1</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spellA</p>
    <p>R G</p>
    <p>ARG1</p>
    <p>S O[S]</p>
    <p>try</p>
    <p>APPO</p>
    <p>APPS APPO</p>
  </div>
  <div class="page">
    <p>Apply-Modify (AM) Algebra</p>
    <p>witch cast</p>
    <p>spelltry</p>
    <p>G. et al, IWCS 2017</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast</p>
    <p>*HR algebra, Courcelle &amp; Engelfriet 2012</p>
  </div>
  <div class="page">
    <p>Apply-Modify (AM) Algebra</p>
    <p>witch cast</p>
    <p>spelltry</p>
    <p>G. et al, IWCS 2017</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast</p>
    <p>*HR algebra, Courcelle &amp; Engelfriet 2012</p>
    <p>Empty argument slots are labeled with sources* S,O, (subject, object,)</p>
  </div>
  <div class="page">
    <p>Apply-Modify (AM) Algebra</p>
    <p>witch cast</p>
    <p>spelltry</p>
    <p>G. et al, IWCS 2017</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast</p>
    <p>*HR algebra, Courcelle &amp; Engelfriet 2012</p>
    <p>head</p>
    <p>spell</p>
    <p>argument</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0 castS</p>
    <p>spell</p>
    <p>= AppO</p>
    <p>Empty argument slots are labeled with sources* S,O, (subject, object,)</p>
    <p>Have apply operation for each source, e.g. APPO</p>
  </div>
  <div class="page">
    <p>Typed AM Algebra</p>
    <p>cast</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0 castS</p>
    <p>spell</p>
    <p>Has type [S]</p>
    <p>witch cast</p>
    <p>spelltry</p>
  </div>
  <div class="page">
    <p>Typed AM Algebra</p>
    <p>A R</p>
    <p>G 0 ARG1</p>
    <p>try</p>
    <p>S O[S]</p>
    <p>Object must have type [S]</p>
    <p>cast</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0 castS</p>
    <p>spell</p>
    <p>Has type [S]</p>
    <p>witch cast</p>
    <p>spelltry</p>
  </div>
  <div class="page">
    <p>Typed AM Algebra</p>
    <p>A R</p>
    <p>G 0 ARG1</p>
    <p>try</p>
    <p>S O[S]</p>
    <p>Object must have type [S] Matching sources</p>
    <p>automatically merge</p>
    <p>cast</p>
    <p>spell</p>
    <p>A R</p>
    <p>G 0</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0</p>
    <p>ARG1</p>
    <p>try</p>
    <p>S</p>
    <p>=</p>
    <p>AppO</p>
    <p>cast</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0 castS</p>
    <p>spell</p>
    <p>Has type [S]</p>
    <p>witch cast</p>
    <p>spelltry</p>
  </div>
  <div class="page">
    <p>Apply-Modify Algebra</p>
    <p>witch cast</p>
    <p>spell</p>
    <p>A R</p>
    <p>G 0</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0</p>
    <p>ARG1</p>
    <p>try</p>
    <p>cast</p>
    <p>spell</p>
    <p>A R</p>
    <p>G 0</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0</p>
    <p>ARG1</p>
    <p>try</p>
    <p>S</p>
    <p>witch</p>
    <p>=</p>
    <p>witch cast</p>
    <p>spelltry</p>
    <p>AppS</p>
    <p>The witch tried to cast a spell</p>
  </div>
  <div class="page">
    <p>Types control reentrancies</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast</p>
    <p>AppO</p>
    <p>AR G0</p>
    <p>S</p>
    <p>sleep AR</p>
    <p>G0 sleep</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0 S cast</p>
    <p>=</p>
    <p>*cast to sleepHas type [S]</p>
  </div>
  <div class="page">
    <p>Types control reentrancies</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast</p>
    <p>AppO</p>
    <p>AR G0</p>
    <p>S</p>
    <p>sleep AR</p>
    <p>G0 sleep</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0 S cast</p>
    <p>=</p>
    <p>*cast to sleep Object must have type [ ]</p>
    <p>Has type [S]</p>
  </div>
  <div class="page">
    <p>Types control reentrancies</p>
    <p>witch</p>
    <p>A R</p>
    <p>G 0 ARG1</p>
    <p>try</p>
    <p>S</p>
    <p>A R</p>
    <p>G 0 ARG1</p>
    <p>try</p>
    <p>S O[S]</p>
    <p>Object must have type [S]</p>
    <p>AppO</p>
    <p>Has type [ ]</p>
    <p>witch</p>
    <p>*tried to witch</p>
    <p>=</p>
    <p>witch cast</p>
    <p>spelltry</p>
  </div>
  <div class="page">
    <p>AM Dependency Trees</p>
    <p>dependencies define operations, but not their order</p>
    <p>The witch cast a spell</p>
    <p>witch AR G</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spell</p>
    <p>AppS AppO</p>
  </div>
  <div class="page">
    <p>AM Dependency Trees</p>
    <p>dependencies define operations, but not their order</p>
    <p>The witch cast a spell</p>
    <p>witch AR G</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spell</p>
    <p>AppS AppO</p>
    <p>here: order does not matter</p>
  </div>
  <div class="page">
    <p>AM Dependency Trees</p>
    <p>The witch tried to cast a spell</p>
    <p>witch AR G</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spellAR</p>
    <p>G 0 ARG1</p>
    <p>S O[S]</p>
    <p>try</p>
    <p>AppO AppS AppO</p>
    <p>here: need APPO before APPS to get reentrancies</p>
  </div>
  <div class="page">
    <p>AM Dependency Trees</p>
    <p>The witch tried to cast a spell</p>
    <p>witch AR G</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spellAR</p>
    <p>G 0 ARG1</p>
    <p>S O[S]</p>
    <p>try</p>
    <p>AppO AppS AppO</p>
    <p>here: need APPO before APPS to get reentrancies</p>
    <p>Always need to resolve reentrancies first  Types encode reentrencies</p>
    <p>use type system to determine operation order</p>
  </div>
  <div class="page">
    <p>AM Dependency Trees</p>
    <p>The witch tried to cast a spell</p>
    <p>witch AR G</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spellAR</p>
    <p>G 0 ARG1</p>
    <p>S O[S]</p>
    <p>try</p>
    <p>AppO AppS AppO</p>
    <p>Building instructions for an AMR that we know how to predict</p>
  </div>
  <div class="page">
    <p>The witch tried to cast a spell</p>
    <p>easy (easier)</p>
    <p>equivalent</p>
    <p>witch cast</p>
    <p>spelltry</p>
    <p>Part 1</p>
    <p>Part 2</p>
    <p>witch A R</p>
    <p>G 1</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spellA</p>
    <p>R G</p>
    <p>ARG1</p>
    <p>S O[S]</p>
    <p>try</p>
    <p>APPO</p>
    <p>APPS APPO</p>
    <p>witch A R</p>
    <p>G 1</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spellA</p>
    <p>R G</p>
    <p>ARG1</p>
    <p>S O[S]</p>
    <p>try</p>
    <p>AppO AppS AppO</p>
  </div>
  <div class="page">
    <p>Model</p>
    <p>The witch tried to cast a spell</p>
    <p>witch A R</p>
    <p>G 1</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spellA</p>
    <p>R G</p>
    <p>ARG1</p>
    <p>S O[S]</p>
    <p>try</p>
    <p>AppO AppS AppO</p>
    <p>witch A R</p>
    <p>G 1</p>
    <p>ARG0 S</p>
    <p>O</p>
    <p>cast spellA</p>
    <p>R G</p>
    <p>ARG1</p>
    <p>S O[S]</p>
    <p>try</p>
    <p>AppO AppS</p>
  </div>
  <div class="page">
    <p>E.g. Lewis et al. (2014) for CCG</p>
    <p>The witch tried  spell</p>
    <p>w0 w1 w2 wn</p>
    <p>P0 P1 P2 Pn</p>
    <p>bidirectional LSTM</p>
    <p>probability distribution over graph lexicon</p>
    <p>word embeddings</p>
    <p>A R</p>
    <p>G 0</p>
    <p>ARG1</p>
    <p>S O[S]</p>
    <p>try</p>
    <p>train to predict</p>
  </div>
  <div class="page">
    <p>Kiperwasser &amp; Goldberg (2016) for syntactic dependencies</p>
    <p>The witch tried  spell</p>
    <p>w0 w1 w2 wn</p>
    <p>P2 1</p>
    <p>bidirectional LSTM</p>
    <p>probability distribution over operations</p>
    <p>word embeddings</p>
    <p>train to predict AppS</p>
    <p>triedwitch</p>
  </div>
  <div class="page">
    <p>witch cast</p>
    <p>spell A</p>
    <p>R G</p>
    <p>ARG0</p>
    <p>The witch cast a spell</p>
    <p>witch A R</p>
    <p>G 1</p>
    <p>ARG0 castS</p>
    <p>O</p>
    <p>spell</p>
    <p>AppOAppS</p>
    <p>AMR Corpus Required training data</p>
    <p>The witch cast a spell</p>
  </div>
  <div class="page">
    <p>witch cast</p>
    <p>spell A</p>
    <p>R G</p>
    <p>ARG0</p>
    <p>The witch cast a spell</p>
    <p>witch A R</p>
    <p>G 1</p>
    <p>ARG0 castS</p>
    <p>O</p>
    <p>spell</p>
    <p>AppOAppS</p>
    <p>AMR Corpus Required training data</p>
    <p>The witch cast a spell</p>
    <p>witch</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0</p>
    <p>castS</p>
    <p>O</p>
    <p>spell</p>
    <p>Heuristics</p>
    <p>Alignments  Attaching edges  Source names  Source annotations</p>
    <p>The witch cast a spell</p>
  </div>
  <div class="page">
    <p>witch cast</p>
    <p>spell A</p>
    <p>R G</p>
    <p>ARG0</p>
    <p>The witch cast a spell</p>
    <p>witch A R</p>
    <p>G 1</p>
    <p>ARG0 castS</p>
    <p>O</p>
    <p>spell</p>
    <p>AppOAppS</p>
    <p>AMR Corpus Required training data</p>
    <p>The witch cast a spell</p>
    <p>witch</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0</p>
    <p>castS</p>
    <p>O</p>
    <p>spell</p>
    <p>Heuristics</p>
    <p>Alignments  Attaching edges  Source names  Source annotations</p>
    <p>The witch cast a spell</p>
    <p>determine</p>
  </div>
  <div class="page">
    <p>Find the best well-typed dependency tree</p>
  </div>
  <div class="page">
    <p>ill-typed trees do not evaluate to AMRs  ill-typed trees to not match our linguistic intuitions</p>
    <p>Find the best well-typed dependency tree</p>
  </div>
  <div class="page">
    <p>ill-typed trees do not evaluate to AMRs  ill-typed trees to not match our linguistic intuitions</p>
    <p>Exact typed decoding is NP-hard  Untyped decoding: 74% of trees are ill-typed</p>
    <p>Find the best well-typed dependency tree</p>
  </div>
  <div class="page">
    <p>ill-typed trees do not evaluate to AMRs  ill-typed trees to not match our linguistic intuitions</p>
    <p>Exact typed decoding is NP-hard  Untyped decoding: 74% of trees are ill-typed</p>
    <p>Approximate decoders</p>
    <p>Find the best well-typed dependency tree</p>
  </div>
  <div class="page">
    <p>Approximate decoders</p>
    <p>A: Fixed tree</p>
    <p>The witch cast a spell The witch cast a spell</p>
    <p>witch A R</p>
    <p>G 1</p>
    <p>ARG0 castS</p>
    <p>O</p>
    <p>spell</p>
    <p>AppOAppS</p>
  </div>
  <div class="page">
    <p>Approximate decoders</p>
    <p>A: Fixed tree</p>
    <p>The witch cast a spell The witch cast a spell</p>
    <p>witch A R</p>
    <p>G 1</p>
    <p>ARG0 castS</p>
    <p>O</p>
    <p>spell</p>
    <p>AppOAppS</p>
  </div>
  <div class="page">
    <p>Approximate decoders</p>
    <p>A: Fixed tree</p>
    <p>The witch cast a spell The witch cast a spell</p>
    <p>witch A R</p>
    <p>G 1</p>
    <p>ARG0 castS</p>
    <p>O</p>
    <p>spell</p>
    <p>AppOAppS</p>
    <p>B: Projective: can only combine adjacent constituents</p>
    <p>&quot;CKY parsing with types as nonterminals&quot;</p>
  </div>
  <div class="page">
    <p>Results</p>
  </div>
  <div class="page">
    <p>Classic AMR parser (graph decoder)</p>
    <p>witch cast</p>
    <p>spelltry</p>
    <p>witch cast</p>
    <p>spell</p>
    <p>A R</p>
    <p>G 0</p>
    <p>A R</p>
    <p>G 1</p>
    <p>ARG0</p>
    <p>ARG1</p>
    <p>try</p>
    <p>Step 1: Predict nodes Step 2: Predict edges</p>
  </div>
  <div class="page">
    <p>Results</p>
    <p>Model Method Smatch score</p>
    <p>JAMR (Flanigan et al. 2016) graph decoder 67</p>
    <p>Foland &amp; Martin 2017 graph decoder 70.7</p>
    <p>van Noord &amp; Bos 2017 neural seq2seq 68.5</p>
    <p>Lyu &amp; Titov (ACL 2018) graph decoder 73.7</p>
    <p>Our baseline graph decoder 66.1</p>
    <p>Our projective decoder 70.2</p>
    <p>Our fixed tree decoder 70.2</p>
    <p>Dataset: LDC2015E86</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>We built a competitive compositional AMR parser</p>
    <p>Clear avenues to improvement  Update to recent advancements in training regimen (e.g. Lyu &amp;</p>
    <p>Tivov 2018)</p>
    <p>Look into specific phenomena, e.g.  anaphora  ellipsis</p>
    <p>Future work: extend method to other formalisms</p>
  </div>
  <div class="page">
    <p>Conclusion</p>
    <p>We built a competitive compositional AMR parser</p>
    <p>Clear avenues to improvement  Update to recent advancements in training regimen (e.g. Lyu &amp;</p>
    <p>Tivov 2018)</p>
    <p>Look into specific phenomena, e.g.  anaphora  ellipsis</p>
    <p>Future work: extend method to other formalisms</p>
    <p>we thank</p>
    <p>you A</p>
    <p>R G</p>
    <p>ARG0</p>
  </div>
</Presentation>
