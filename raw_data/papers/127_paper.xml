<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:30+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Automatic Wrapper Induction from Hidden-Web Sources with Domain Knowledge</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pierre</forename><surname>Senellart</surname></persName>
							<email>pierre@senellart.com</email>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">INRIA Saclay</orgName>
								<orgName type="institution" key="instit2">TELECOM ParisTech Paris</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Avin</forename><surname>Mittal</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Indian Institute of Technology</orgName>
								<address>
									<settlement>Bombay</settlement>
									<country key="IN">India</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Muschick</surname></persName>
							<email>daniel.muschick@gmail.com</email>
							<affiliation key="aff2">
								<orgName type="institution">Technische Universität Graz Graz</orgName>
								<address>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rémi</forename><surname>Gilleron</surname></persName>
							<email>remi.gilleron@univ-lille3.fr</email>
							<affiliation key="aff3">
								<orgName type="institution">Univ. Lille</orgName>
								<address>
									<addrLine>3 &amp; INRIA</addrLine>
									<settlement>Lille Villeneuve d&apos;Ascq</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Tommasi</surname></persName>
							<email>marc.tommasi@univ-lille3.fr</email>
							<affiliation key="aff4">
								<orgName type="institution">Univ. Lille</orgName>
								<address>
									<addrLine>3 &amp; INRIA</addrLine>
									<settlement>Lille Villeneuve d&apos;Ascq</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Automatic Wrapper Induction from Hidden-Web Sources with Domain Knowledge</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>H35 [Information Storage and Retrieval]: Online In- formation Services-Web-based services; I26 [Artificial In- telligence]: Learning General Terms Design</term>
					<term>Experimentation Keywords Hidden Web</term>
					<term>deep Web</term>
					<term>invisible Web</term>
					<term>information extrac- tion</term>
					<term>probing</term>
					<term>wrapper</term>
					<term>form</term>
					<term>Web service</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We present an original approach to the automatic induction of wrappers for sources of the hidden Web that does not need any human supervision. Our approach only needs domain knowledge expressed as a set of concept names and concept instances. There are two parts in extracting valuable data from hidden-Web sources: understanding the structure of a given HTML form and relating its fields to concepts of the domain, and understanding how resulting records are represented in an HTML result page. For the former problem, we use a combination of heuristics and of probing with domain instances; for the latter, we use a supervised machine learning technique adapted to tree-like information on an automatic, imperfect, and imprecise, annotation using the domain knowledge. We show experiments that demonstrate the validity and potential of the approach.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">DOMAIN KNOWLEDGE</head><p>As understanding services of the hidden Web is a very broad, difficult, and undoubtedly AI-complete problem, we limit our interest to a specific application domain, relying on available domain-specific knowledge. This will be illustrated in this paper by the domain of research publication databases, but the approach proposed here is quite general and can be applied to any domain, provided that the necessary knowledge described here is given. The needed domain knowledge can be decomposed into two different parts: domain concepts and domain instances.</p><p>Domain concepts. The domain concepts are just a set of concept names that describe the different concepts that may appear in this specific domain. We shall, for example, consider the following self-describing concepts for the research publication domain: Title, Author, Date, Journal, Conference. Additional concepts (e.g., Publisher, Pages, Volume) could be added in a similar way. Knowledge about each concept is given next as domain instances.</p><p>Domain instances. We deal here with concrete representations (as strings) of concepts. Observe for instance that the strings June 2007 and 07/06 may both stand for the same instance of a Date concept. Domain instances are character strings that stand for instances of the domain concepts. The following steps are then carried out. First, a representative set of words appearing in these strings, with their corresponding frequency, is selected as an approximate frequency distribution of domain instances. Second, for each given string s, if s may stand for an instance of concepts c1 . . . cn, we assign 1/n as the (approximate) probability that s stands for an instance of each concept ci.</p><p>Note that acquiring the domain knowledge is done only during initialization and once for each domain. The system is fully unsupervised once the domain knowledge has been built, and the only other external input that we use in the following sections is a general ontology for the language that we consider (Wordnet in this case). So, the system can be quite easily generalized to services in other languages by simply changing the ontology, and to other domains by using the knowledge from some other domain.</p><p>Let us describe the domain instances that we use in the case of the research publication domain. We downloaded the content of the DBLP database as an XML file from http://dblp.uni-trier.de/xml/, and we used it to generate our domain instances. For the concepts Title, Journal, Conference, we used the basic technique described above. For the Date concept, we provide a specific entity recognizer (in the form of a set of regular expressions describing monthly or yearly dates). For the Author concept, we extracted first and last names from DBLP person names with some heuristics, and use regular expressions describing the ways to recombine first names and last names (forming for instance Smith , Smith, John , John Smith , Smith John , Smith John Jack with various probabilities, from the last name Smith and the first names John and Jack ).</p><p>For the last two cases, probabilities associated with a regular expression are chosen in a quite ad hoc way. Ideally, they should come from statistical evaluation on large corpora. Note that the use of the DBLP data results in a quite computer-science-centric domain knowledge, but this may not necessarily be a problem for dealing with general research publication databases, as discussed in Section 6.  Given the URL of an HTML form, the aim of the work presented in this section is to annotate each relevant field of the form with the domain concept it maps to, to confirm these annotations by probing the form with domain instances (that is, submitting the form with some filled-in field), and to retrieve the result pages that are analyzed in the process described in the subsequent section. We describe the system using the scientific publications domain, but our approach is quite general and can be applied to any other domain for which we have appropriate domain knowledge.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Syntactic</head><p>We make some simplifying assumptions on the structure and semantics of the forms. First, we assume that forms support partial match queries. For instance, a field for typing in the title of an article may be queried with a single word from the title; we never found any form where this assumption failed to hold in our experiments. Second, we assume that there are no specifically required fields in the form, and that each field can be either filled-in or omitted. This is actually quite a strong assumption, and it would be a very interesting extension to use probes to distinguish between required and optional fields.</p><p>Our system for probing the hidden Web is shown in <ref type="figure" target="#fig_0">Fig- ure 1</ref>. The different modules, which are described next, are shown as rectangular boxes, while external data and agents are represented as ellipses. Four different modules constitute the main part of the system, while a fifth one is used to handle Web-service requests from the user. The syntactic analyzer processes the HTML code of the form, extracts relevant information, and adds initial annotations. The probing and response page analyzer modules probe the form with domain instances, so as to confirm or refute these annotations. Finally, the resulting analyzed form is wrapped as a Web service (WSDL generator ) that can be used to provide a user with an abstract interface to a given form of the hidden Web. We describe these modules in the following sections.</p><p>Structural Analysis of an HTML Form. The role of the first module of our probing system is to analyze the structure of the form and to find fields that are relevant to the domain concepts. The proper (semantic) way to give the label of a form field is the use of the HTML element label, whose for attribute must correspond to the id attribute of a form field <ref type="bibr">[28]</ref>. Unfortunately, this tag is rarely used by Web developers and we thus have to resort to other contextual information, such as the name or id attribute, or the text appearing before the field (in the source code). An alternative is to use the graphical layout of the form, as in <ref type="bibr" target="#b20">[22,</ref><ref type="bibr" target="#b29">32]</ref>, and rules indicating where the label of a field most often lies relative to the field. (i) Gather all words of the textual context: name and id attributes, content of the corresponding label element, words appearing before the field. (ii) Remove stop-words and stem all context words with Porter's stemming algorithm <ref type="bibr" target="#b19">[20]</ref>. (iii) Check whether any resulting stem matches a stem of concept related words as given by WordNet <ref type="bibr">[21]</ref>. (iv) Annotate the fields with matching concepts, with the associated confidence as the probability that this field represents this concept.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 1 Structural analysis of an HTML form</head><p>We present in Algorithm 1 our algorithm for structural analysis of a form. Once contextual information is retrieved for each field, some standard preprocessing (stop-word removal, stemming) is applied to words of the context, before comparison to words related to concept names. Related words are extracted from WordNet <ref type="bibr">[21]</ref> (they could also come from a domain-specific ontology) by following relations such as synonymy, meronymy, etc. Matches between the context of a field and words related to a concept correspond to an annotation of the field with the concept name, subject to a confidence that is computed from the source of context words and the distance between matched and concept words in the ontology graph. Confidence values are at the moment chosen a bit arbitrarily. Assigning useful (probabilistic or statistical) interpretations to these confidence values and making further use of them for interpreting the probing results is an interesting direction and should be addressed in future work.</p><p>Form Probing. Probabilistic annotations of concepts are confirmed by probing the form. Specifically, we compare what happens when we probe a field, annotated (automatically, as described earlier) as concept c, with instances of this concept, chosen representatively of the frequency distribution of instances of c in the domain database. If the result pages we obtain are significantly different from result pages obtained by probing the field with nonsense words (e.g., dsqkhzei), we may conclude that the annotation is indeed correct. Algorithm 2 describes this confirmation step.</p><p>One of the important aspects of this module is to be able to distinguish between match and no-match pages resulting from the submission of the form. The distinction between match and no-match pages can be made using a number of heuristics (the size of the no-match page is smaller, there are less outgoing links, presence of keywords like Error or No match, absence of keywords such as Next or More). We choose to use a much more robust approach by performing a clustering of result pages obtained through probing. If a page is in a different cluster than the no-match page obtained with the submission of a nonsense word, the page is labeled as a match page.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 2 Confirming field annotations with probing</head><p>Input: A given field of a form together with its probabilistic annotations. Output: A confirmed annotation for this field, or none. We use an incremental clustering algorithm, which works well in our context since we have a small number of documents to cluster, with significant differences between error and result pages. The feature vector representing an HTML page for clustering is built as follows: In the DOM tree of an HTML document, Terminal paths are the set of paths from the root to a leaf of the tree. Each distinct sequence of node labels (that is, HTML element names) along a terminal path forms a dimension of the vector space that we use for clustering. Each page is then represented in this vector space with a tf-idf (term frequency / inverse document frequency) measure, depending on which terminal paths are present in the DOM tree. Finally, the cosine similarity measure is used to compare any two vectors during clustering. The idea is that two result pages share most of their terminal paths, some of them may just be repeated more often than others; on the other hand, a result page and an error page have significantly different structures (no list of results appears in an error page) that leads to a completely different representation in the vector space of terminal paths in the DOM tree.</p><p>Note that we may get more than two clusters using our clustering algorithm, if there are two or more significantly different kinds of result pages. This is the case, for instance, with the publication database DBLP, where searching for an ambiguous author name results in a different page than searching for a name that only appears once in the database. It is then important to use multiple words for probing, representative of their frequency distribution, so as to (i) generate all possible kinds of result pages; and (ii) be sure to get a result page, as long as the service probed has similar content to our domain knowledge.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">EXTRACTING RESULT PAGE DATA</head><p>Each cluster identified in the probing step represents a specific class of result pages. All pages of a class have a similar structure and typically display repetitive sections, such as items of a list or rows in a table; each such item stands for one possible query result, or a record of the database. As our goal is to understand the result pages, and thus to be able to identify records and their corresponding domain instances, we need to somehow (i) find the repetitive parts on a page (e.g., the articles); and (ii) determine the internal structure of these records that defines the position of the domain instances (title, authors, publication date, etc.). The general process that we propose for this is shown in <ref type="figure" target="#fig_3">Figure 2</ref> and detailed in this section. Several approaches exist to recognize the variable parts of a page (which may correspond to the records) in an unsupervised way (e.g., <ref type="bibr" target="#b5">[6]</ref>), but most lack the ability to map the extracted fields to the domain concepts and thus in the end depend on some user input.</p><p>We approach the problem from the other side: instead of first regarding the structure, we rely on our domain knowledge to annotate HTML text nodes with domain concepts. This is done using a gazetteer, i.e., a dictionary of possible domain instances created with the domain knowledge (e.g., lists of author names, known article titles or journals). This results in a very raw, incomplete, and faulty, textual annotation.</p><p>However, if we interpret the HTML document as its DOM tree, we can use a probabilistic discriminative model to infer structural relationships between the annotations, and thus use the repetitive structure to improve our initial annotation. We have elaborated a flexible model working on XML documents (XCRFS, <ref type="bibr" target="#b11">[12]</ref>) which can easily be applied to well-formated XHTML documents. It is a special form of a Conditional Random Field <ref type="bibr" target="#b12">[13]</ref> which models dependencies between parent, child and sibling nodes, conditioned </p><formula xml:id="formula_0">exp " P C P k λ k f k (x, yC , C) "</formula><p>where Z is a normalization factor, C are the 3-cliques (parent, child and sibling nodes) of the graph and f k are feature functions evaluated on a clique C weighted by λ k . They are of the form</p><formula xml:id="formula_1">f k (x, yC , C) = 8 &lt; : 1 if yparent = label 1, y this = label 2, y sibling = label 3, p(x, C); 0 otherwise.</formula><p>The predicate p(x, C) is an XPath expression evaluated in the context of the clique C. We can thus model all kinds of conditions (e.g., label some node as Title depending on the annotation of its father, only if it is a &lt;td&gt; node with attribute class="author"), provided that the information is accessible via XPath expressions. Luckily, almost all kinds of information can be introduced into the XHTML model by adding attributes to tree nodes in a preprocessing step.</p><p>As the nature of the input documents is forcedly unknown in an unsupervised context, these conditions, which refer directly to the tag names and attributes, cannot be predefined or, even worse, provided by the user. Instead, a few templates combined with a neighborhood definition are fixed (e.g., tag name or attribute values of grandparent, parent, siblings) and the explicit values and label conditions are filled in by observing the training data. For example, if a node annotated as Author is found, the tag names of its grandparent, parent and sibling are checked and the corresponding three f k 's are created. This defines a procedure to generate features in a completely unsupervised way. As this produces a great magnitude of possible features, a preliminary sorting out of features with little support is performed.</p><p>Once the model is defined by the automatic feature generation process, it must be trained to determine the feature weights λ k . The input sample is obtained by the gazetteer annotation. Unfortunately, the annotation is imprecise: precision as well as recall of the gazetteer annotation are often below 0.5. To obtain meaningful results, we have to subject our naively annotated input documents to heuristic algorithms, filtering out very unlikely annotations before using them as training data for our probabilistic model. We have implemented a simple algorithm to identify records in the HTML tree using LCAs (least common ancestors) of annotated nodes and suffix trees (more details in <ref type="bibr" target="#b16">[17]</ref>). This allows us to (i) eliminate all annotations not belonging to a record and (ii) find the annotations belonging together to define a record, which is necessary for the extraction step following the annotation. After this heuristic cleanup, we select those records which contain a significant number of annotated nodes and use them to train the XCRF. It is worth noting that the same heuristics used to prepare the training data can also be applied to the annotations resulting from an annotation by the XCRF to improve the overall quality and to allow for extraction. Results presented in Section 6 all include this cleanup.</p><p>The trained model can then be used to find an annotationˆytationˆ tationˆy of a new input page x with maximum likelihoodˆy likelihoodˆ likelihoodˆy = arg max y p(y|x). We obtained annotations of mainly higher quality than that of the gazetteer and can use them to extract the data from the pages. We can also use this information to enhance our domain knowledge, and thus the gazetteer. This leads to a bootstrapping process, where a better gazetteer leads to better trained XCRFs and thus to better information extraction and further enhancement. Furthermore, if this process is extended to include more than one result page class (e.g., not only the results of CiteSeer, but also of GoogleScholar and ACM), we can use the inherent redundancy of information to filter out unlikely data or enhance incomplete data. If our domain knowledge is not sufficient to allow for a good gazetteer annotation of one source, we can first enhance it with another source and then use the additional information to exploit the first source. However, this requires data integration techniques and heuristics to determine the quality of the information extracted from the sources, and thus be able to decide which data should be used for learning, and which should be rejected as uncertain.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">WRAPPING FORMS AS WEB SERVICES</head><p>Once the input fields of a given query form are identified as well as the output understood, the human-centric HTML interface can be wrapped as an abstract Web-service, which communicates its input and output format in some machine-readable form. One way of describing such a service is using a WSDL <ref type="bibr" target="#b26">[29]</ref> document, implemented as a Java servlet. All services wrapping individual query forms are then integrated in one main service offering relevant domain concepts as inputs and transmitting the user request to the selected service. A user (whether human or machine) can thus query different services such as GoogleScholar or DBLP with the same well-defined interface, and get back structured results. This is is done by integrating the two systems described in Sections 3 and 4 in the following way. Given the URL of a form, this form is analyzed and probed as described in Section 3. This also results in the decomposition into clusters of generated result pages. Inside each of these clusters, pages are annotated by the gazetteer and serve as the training set for a separate XCRF wrapper, as described in Section 4. Then, the user is presented with the concepts that were found in the form analysis phase. When submitting a query, the concepts are translated into the corresponding fields of the original form, the form is submitted, the cluster of the resulting page is identified, and the appropriate XCRF wrapper is used to extract the data and present it to the user.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">EXPERIMENTS</head><p>The components of the system presented in this paper have been implemented in either Java or Perl, and we report here on the experiments carried out to validate the approach. A set of ten publication database services of the hidden Web were selected by hand (with the help of a classical search engine), the list of which is given in the first column of <ref type="table">Table 1</ref>; these databases are either specific to computer science or generalist. Each corresponding URL was then fed to the system, which resulted, after processing by the different modules, into a wrapped service, as described in Section 5. Because of the limitations of our system for probing the hidden Web described in Section 3, a different approach was followed for two of the sources, namely ACM (the advanced search form uses complex combinations of fields for expressing a concept/value relation) and CiteSeer (there is no advanced search feature). For these two sources, a few result pages were generated by manual queries, and the gazetteer annotation and XCRF wrapper induction was performed on these pages, as described in Section 4. Otherwise, five probes per pair of field and candidate concept annotation were performed and, when found, "Next" links were followed to retrieve a maximum of five HTML result pages.</p><p>The testing process of the induced wrappers was then the following: For each source, a perfect wrapper of its result pages was manually written for comparison <ref type="bibr" target="#b0">1</ref> . We then arbitrarily generated additional result pages and compared the result of both the gazetteer and the learned XCRF wrapper with the reference annotation given by the perfect wrapper.</p><p>Experimental results are presented in <ref type="table">Table 1</ref>. Let us first focus on the columns under the heading Query form, that are an evaluation of the quality of the analysis of the HTML form by the heuristics and probing described in Section 3. For each source, the precision (ratio of fields correctly annotated over all annotated fields) and recall (ratio of fields correctly annotated over all relevant fields) of both the initial annotation (cf. Algorithm 1) and the step of confirmation by probing (cf. Algorithm 2) are given. They are computed with respect to a perfect annotation of the form, manually elaborated. The first observation is that, despite the various assumptions that we made on the fields of a form, we still get quite good results; in particular, the average precision for our dataset is 82 %, while the average recall is 73 %. Besides, the precision reaches 100 % in a majority of cases. The other observation that can be made is that the probing and confirmation step is indeed very useful, since it removes a large number of incorrect annotations. Indeed, this probing step has for effect, for all considered sources, to raise the precision of the annotation while keeping the same recall. This may obviously not always be so, the probing step may very well reduce the recall in some cases, especially if the database is small, but it is interesting to note that this did not happen in the experiments. It is a validation of the probing and clustering approach. Note also that the perfect annotation of DBLP is not really an artifact of our choice of DBLP as domain knowledge (since we only use concept names and no concept instances in our initial form annotation), but rather due to the good structure and simplicity of the DBLP search form.</p><p>The observed quality of form analysis is all the more interesting since the methods that we used are quite basic and subject to all kinds of refinements. Improving even more the precision should perhaps be easier than improving recall: An idea is to be more cautious and less tolerant during <ref type="table">Table 1</ref>: Experimental results of the analysis of the query form and result pages of some publication databases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Query form</head><p>Response page the probing step, only probing with words that are unambiguously attached to a given concept, while requiring that most probes return result pages. This might, however, reduce the coverage quite a lot. Improving the recall may be quite hard, in the situation where the textual context of a field is not descriptive enough to get an annotation. We may try, however, in these cases, to probe a field with each concept in turn; as the number of fields and concepts are small enough, this seems feasible. Note finally that the time required for all this processing is essentially the network access times required for the probes, all other operations taking a negligible time.</p><formula xml:id="formula_2">Initial annot. Confirmed annot. Title Author Date p (%) r (%) p (%) r (%) Fg (%) Fx (%) Fg (%) Fx (%) Fg (%) Fx (%)<label>ACM 77</label></formula><p>As explained in Section 3, the feature vector that we use for clustering is the set of terminal paths in the DOM tree of the document, with tf-idf weighting. The DOM tree captures the structure of the document perfectly, and works particularly well for our experiments. For instance, the cosine similarities between the result pages from GoogleScholar are up at around 0.99, whereas the similarities between result and error pages are of the order of 0.01. To show that the DOM tree model is an adequate choice, we also experimented with a feature vector based simply on the occurrence of HTML tags in the document <ref type="bibr" target="#b3">[4]</ref>. We simply consider all tags that occur in the document, compute the tf-idf score based on the occurrence of tags in the collection and use the cosine similarity between these vectors for clustering. It was found that this approach assigns a rather high degree of similarity between result and error pages (for GoogleScholar, it was of the order of 0.5 to 0.6, for instance, which makes the clustering process very dependent of the threshold).</p><p>Consider now the columns under the heading Response page of <ref type="table">Table 1</ref>. For each of the three most occurring concepts in the result pages of publication databases, namely Title, Author, and Date, the precision p and recall r of the annotations obtained both by the gazetteer and by the learned XCRF wrapper over a set of sample pages are summarized with the standard F1-measure defined as F1 = 2·p·r p+r .</p><p>Here, precision and recall are measured in terms of the numbers of tokens whose annotation is the same as with the perfect wrapper. When result pages of a single source belonged to multiple clusters, only the results on the most commonly occurring cluster are shown.</p><p>Note first that absolute values of the F1-measures, between 60 % and 80 % are quite acceptable, in the absence of any other fully automatic alternative for assigning concepts to parts of the result pages. With the notable exception of the concept Date, the structural XCRF wrapper performs generally better than the gazetteer. This means that the XCRF wrapper was not only capable of reproducing the gazetteer annotation (this was not guaranteed, since the wrapper does not have access to the domain knowledge, but only to structural features), but also of improving it by filtering out outliers or adding missing annotations thanks to a structural generalization. This shows that it is indeed possible to use supervised machine learning techniques in an unsupervised way with the help of a noisy annotation, to induce a structural wrapper that performs better than this noisy annotation. There are exceptions to this, however, which are interesting in themselves, as detailed below.</p><p>In cases where the gazetteer performs badly (see for example, Title for DivaPortal and Elsevier), the XCRF wrapper performs even more badly, because it is not able to find any structural generalization of the annotation with enough support. Recall that the gazetteer only annotates titles when it finds the same exact title as an article appearing in DBLP records. This is not a very elaborate scheme, and it fails when the content of the database is significantly different from that of the domain knowledge : the pages from Elsevier from which the learning was made were semantically too far away from computer science, while most publications from DivaPortal have a Swedish title, which has no chance of appearing in the domain knowledge. However, even with such a na¨ıvena¨ıve way of recognizing titles, the structural pattern learned by the wrapper is in all other cases better (and sometimes much better, see for instance IngentaConnect and IowaState) than the original gazetteer annotation. The case of the concept Date is special, as the gazetteer already performs very well due to the relative nonambiguity of dates as lexical tokens, while their position in the document structure is often not easy to isolate. This means that, for such a concept, there is not much (if anything) to be gained by this structural learning, and that classical date entity recognizers are often enough. Some result pages do not make much use of the structuring features of HTML and basically present the different fields of each publication in a linear, textual, way. In such conditions, it can be very difficult to isolate each field in a structural manner; this was also reflected by the complexity of writing the corresponding perfect wrappers. In such cases (see, for instance, Author and Date for GoogleScholar or Cambridge), a simple gazetteer annotation, which already gives quite good results, is enough. Perhaps a direction for future work would be to identify in an automatic way such cases in advance, and not to try any structural generalization then. On the other hand, on highly structured result pages such as those from ACM, the generated XCRF is close to perfection.</p><p>We would like to stress that one of the major advantages of the learned XCRF wrapper over the gazetteer is that it is mostly independent of the considered subdomain; this means that if such a wrapper has been learned for a generalist database such as GoogleScholar on a set of computerscience-related result pages generated by the prober, it can then be used on any result page of this source (as long as it has the same structure and can be handled by the same structural wrapper), while the gazetteer is utterly unable to annotate titles of, say, theoretical physics articles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">RELATED WORK</head><p>An early work on crawling the hidden Web is <ref type="bibr" target="#b20">[22]</ref>, where Raghavan and Garcia-Molina present a system that focuses on analyzing Web forms, automatically generating queries and extracting information from the response pages thus obtained. There are many similarities between the approach described in <ref type="bibr" target="#b20">[22]</ref> and our initial structural analysis of an HTML form, though the authors choose to use a method based on the visual layout of elements to determine the label of a field, rather than the more structural method that we use. The MetaQuerier system similarly processes forms with multiple attributes <ref type="bibr" target="#b30">[33]</ref> and uses predicate mapping to convert user-given queries to specific form queries, and thus fetches the required response pages hidden behind the form interface. The focus of this work is on schema mapping and query rewriting to translate queries to a given interface. The paper does not address the analysis of forms themselves, but the same authors describe in <ref type="bibr" target="#b29">[32]</ref> a fairly elaborate approach, based on the notion of hidden grammars that describe the relation between structure of a query form and its visual layout. <ref type="bibr" target="#b10">[11]</ref> focuses on the sampling of a source of the hidden Web, by using domain knowledge to obtain a representative subset of result documents. <ref type="bibr" target="#b0">[1]</ref> is another example of a system which extracts hidden-Web data from keyword based interfaces by querying the interface with high coverage keywords. The aim of the authors is to extract all the data from the database, and index it locally, which is quite a different goal. They exploit the same idea as we do for distinguishing between result and error pages, citing <ref type="bibr" target="#b6">[7]</ref> as their inspiration, that is, probing the form with nonsense keywords that we are sure do not exist in the database. Finally, the idea of using clustering for distinguishing between result and error pages comes from <ref type="bibr" target="#b3">[4]</ref>, although we do not use the same input for the clustering algorithm. In <ref type="bibr" target="#b3">[4]</ref>, the authors construct the feature vector for a page by extracting the tags from HTML code and use the cosine similarity measure with a tf-idf weighting. In practice, we found out that this tag-signature-based clustering does not work very well in comparison to our scheme of clustering based on the terminal paths in the DOM tree.</p><p>Early works on machine learning approaches to Web information extraction deal with the supervised approach. It is supposed that domain instances of a target domain concept are first manually annotated by an expert. Then machine learning techniques are applied to generate an extraction program. Several systems explicitly consider the tree structure of Web documents with different machine learning techniques, e.g., <ref type="bibr">Stalker [18]</ref>, Squirrel <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr">Lipx [27]</ref>. Later on, the unsupervised approach was introduced, systematically trying to avoid manual labeling <ref type="bibr" target="#b28">[31]</ref>. However, they are less accurate than supervised systems. Moreover a manual post-processing is needed to map the extracted fields to the domain concepts because of the inability of the extraction programs to understand the semantic of extracted data. In the Natural Language Processing (NLP) community, discriminative probabilistic models have been successfully applied to a number of information extraction tasks in supervised systems <ref type="bibr" target="#b23">[25,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b21">23]</ref>. Most approaches use models for sequences whereas we use models for trees in order to take profit of the tree structure of result pages. For instance, a generative model of sequences is used in <ref type="bibr" target="#b8">[9]</ref> whereas a discriminative model is used in <ref type="bibr" target="#b13">[14]</ref>. In the latter, a small set of labeled sentences is required whereas in the former the domain is restricted and labeled sequences are constructed by using many heuristics. It was recently proposed to use gazetteers in a discriminative model <ref type="bibr" target="#b24">[26]</ref> containing userdefined features. Gazetteers are used to define additional features. We follow this approach but we use gazetteers to define an initial approximate annotation which replaces the manual annotation, i.e., we use gazetteers to use discriminative models in an unsupervised context. Moreover, we use a discriminative model for tree-structured documents rather than for text. Two aspects of our work on information extraction have some similarities with papers about the MetaQuerier system. In <ref type="bibr" target="#b27">[30]</ref>, bootstrapping a knowledge base by extracting information on result pages and injecting them back on subsequent probing is discussed. Bootstrapping across different sources, in order to benefit from their different coverage, is the topic of <ref type="bibr" target="#b4">[5]</ref>. Our main idea of using supervised techniques on the structure of a document to generalize an annotation by a gazetteer has not been explored in either of these works.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">CONCLUSIONS</head><p>We have presented an original, standalone, approach to automatic wrapper induction from sources of the hidden Web, with the help of domain knowledge. It does not need any human supervision and relies on a combination of heuristics, clustering, gazetteer annotation and machine learning. Experiments show that this approach is able to understand quite well the structure of a form, and that there is potential in the use of machine learning to obtain a structural generalization and correction of an imperfect, imprecise, annotation. It is our belief that, as illustrated here in the case of hidden-Web services, exploiting the structure of content to help correct or disambiguate a purely linear text-based analysis is a fruitful idea. Another important pattern is shown in the two-step process of our form analysis and probing module, the first step with high recall but possibly low precision, and the second step raising precision without hurting recall.</p><p>There are a number of directions that can be followed in relation to this work. First, this system is to be thought as part of a general framework for the understanding of the hidden Web, that would include service discovery, semantic analysis of the relations between input and output concepts of a service, and indexing and high-level querying of semantically analyzed services. We are already working on some of these problems. Second, a number of improvements could be made to our system: a number of the assumptions made on the structure of the forms could be removed by more elaborate structural analysis, or the gazetteer could be improved to recognize titles as linguistic entities of a certain form, rather than as fixed strings. Finally, a perhaps deeper issue would be to improve the learning step itself, that is at the moment partially hindered by the fact that conditional random fields, as all supervised machine learnings techniques that we know of, assume that the original annotation is perfect and try to fit it as much as possible. An adapted machine learning model would consider the description length of the corresponding wrapper as something as important to minimize as the fitting to the annotated dataset.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Architecture of a system for probing the hidden Web</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>Input: URL of a form. Output: List of fields with probabilistic annotations. (a) Retrieve the Web page at the given URL. (b) For each form field:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>(a) First, identify an error page by probing the field with a nonsense word. (b) Let c be the concept with the highest probability the field is annotated with. (c) Probe the field with a set of instance words, randomly chosen according to their frequency distribution, to get a corresponding set of pages. (d) Cluster the set of pages obtained by probing with the error page, using an incremental clustering algorithm on terminal paths in the DOM tree of the pages. (e) If some pages obtained by probing are different from the result page, confirm the annotation; otherwise, retry with the next best concept annotation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Result page extraction process</figDesc></figure>

			<note place="foot" n="1"> This task was actually quite time-consuming, even with the full expressive power of a programming language; besides, defining the perfect annotation of a given result page may be ambiguous.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.">ACKNOWLEDGMENTS</head><p>We would like to acknowledge Serge Abiteboul, Patrick Marty, Fabien Torre, and especially Florent Jousse, for their comments and participation in earlier versions of this work. This work was partially supported by the projects Atash ANR-05-RNTL00102 and Webcontent ANR-05-RNTL02014.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Siphoning hidden-Web data through keyword-based interfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Barbosa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Freire</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Simpósio Brasileiro de Bancos de Dados</title>
		<meeting>Simpósio Brasileiro de Bancos de Dados<address><addrLine>Brasília, Brasil</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">The deep Web: Surfacing hidden value. White Paper</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Brightplanet</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Interactive learning of node selecting tree transducers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Carme</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gilleron</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lemay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Niehren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Machine Learning Journal</title>
		<imprint>
			<biblScope unit="volume">66</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="33" to="67" />
			<date type="published" when="2007-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Probe, cluster, and discover: Focused extraction of qa-pagelets from the deep Web</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Caverlee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Buttler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICDE</title>
		<meeting>ICDE<address><addrLine>Boston, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Context-aware wrapping: Synchronized data extraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S.-L</forename><surname>Chuang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">C.-C</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Zhai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. VLDB</title>
		<meeting>VLDB<address><addrLine>Vienna, Austria</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Roadrunner: Towards automatic data extraction from large Web sites</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Crescenzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Mecca</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Merialdo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. VLDB</title>
		<meeting>VLDB<address><addrLine>Roma, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A scalable comparison-shopping agent for the World-Wide Web</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Doorenbos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Etzioni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Weld</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Agents</title>
		<meeting>Agents<address><addrLine>Marina del Ray, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Boosted wrapper induction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Freitag</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Kushmerick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. AAAI</title>
		<meeting>AAAI<address><addrLine>Austin, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">AUTOBIB: Automatic extraction of bibliographic information on the web</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Geng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IDEAS</title>
		<meeting>IDEAS</meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Accessing the deep Web: A survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Patel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">C</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">-C</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="94" to="101" />
			<date type="published" when="2007-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Distributed search over the hidden Web: Hierarchical database sampling and selection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">G</forename><surname>Ipeirotis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Gravano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. VLDB</title>
		<meeting>VLDB<address><addrLine>Hong Kong, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Conditional Random Fields for XML trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Jousse</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gilleron</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Tellier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Tommasi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ECML Workshop on Mining and Learning in Graphs</title>
		<meeting>ECML Workshop on Mining and Learning in Graphs<address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Conditional Random Fields: Probabilistic models for segmenting and labeling sequence data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lafferty</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mccallum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Pereira</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICML</title>
		<meeting>ICML<address><addrLine>Williamstown, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A system for integrating unstructured data into relational databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Mansuri</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Sarawagi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICDE</title>
		<meeting>ICDE</meeting>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Early results for named entity recognition with conditional random fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mccallum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. CoNLL</title>
		<meeting>CoNLL<address><addrLine>Edmonton, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Probing the hidden Web</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
		<idno>479</idno>
		<imprint>
			<date type="published" when="2007-07" />
			<pubPlace>Gemo, INRIA Futurs</pubPlace>
		</imprint>
	</monogr>
<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Unsupervised learning of XML tree annotations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Muschick</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007-06" />
		</imprint>
		<respStmt>
			<orgName>Université de Technologie de Lille and Technischen Universität Graz</orgName>
		</respStmt>
	</monogr>
	<note>Master&apos;s thesis</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Hierarchical wrapper induction for semistructured information sources</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Muslea</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Minton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">A</forename><surname>Knoblock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. AAMAS</title>
		<meeting>AAMAS</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="93" to="114" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Table extraction using conditional random fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Pinto</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mccallum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">B</forename><surname>Croft</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGIR</title>
		<meeting>SIGIR<address><addrLine>Toronto, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">An algorithm for suffix stripping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">F</forename><surname>Porter</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1980-07" />
			<publisher>Program</publisher>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="130" to="137" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Crawling the hidden Web</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Raghavan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Garcia-Molina</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. VLDB</title>
		<meeting>VLDB<address><addrLine>Roma, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Semi-Markov conditional random fields for information extraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Sarawagi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">W</forename><surname>Cohen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. NIPS</title>
		<meeting>NIPS<address><addrLine>Vancouver, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Understanding the Hidden Web</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Senellart</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007-12" />
			<pubPlace>Orsay, France</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Université Paris-Sud 11</orgName>
		</respStmt>
	</monogr>
<note type="report_type">PhD thesis</note>
	<note>Comprendre le Web caché</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Shallow parsing with conditional random fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Sha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Pereira</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. HLT-NAACL</title>
		<meeting>HLT-NAACL<address><addrLine>Edmonton, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Using gazetteers in discriminative information extraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Osborne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. CoNLL</title>
		<meeting>CoNLL<address><addrLine>New York, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Bottom-up learning of logic programs for information extraction from hypertext documents</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Thomas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. PKDD</title>
		<meeting>PKDD<address><addrLine>Catvat-Dubrovnik, Croatia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Services Description Language (WSDL) 1.1</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W3c</forename><surname>Web</surname></persName>
		</author>
		<ptr target="http://www.w3.org/TR/wsdl" />
		<imprint>
			<date type="published" when="2001-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Bootstrapping domain ontology for semantic Web services from source Web sites</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Doan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">T</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Meng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Technologies for E-Services</title>
		<meeting>Technologies for E-Services<address><addrLine>Trondheim, Norway</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Web data extraction based on partial tree alignment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. WWW</title>
		<meeting>WWW<address><addrLine>Chiba, Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Understanding Web query interfaces: best-effort parsing with hidden syntax</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">C</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">-C</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGMOD</title>
		<meeting>SIGMOD<address><addrLine>Paris, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Light-weight domain-based form assistant: Querying Web databases on the fly</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">C</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">-C</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. VLDB</title>
		<meeting>VLDB<address><addrLine>Trondheim, Norway</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-09" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
