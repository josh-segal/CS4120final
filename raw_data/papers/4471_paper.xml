<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:50+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Preventing SQL Injection Attacks Using AMNESIA</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">G J</forename><surname>Halfond</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Computing</orgName>
								<orgName type="institution">Georgia Institute of Technology</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alessandro</forename><surname>Orso</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Computing</orgName>
								<orgName type="institution">Georgia Institute of Technology</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Preventing SQL Injection Attacks Using AMNESIA</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>D25 [Software Engi- neering]: Testing and Debugging-Monitors; General Terms: Security</term>
					<term>Verification Keywords: SQL injection</term>
					<term>static analysis</term>
					<term>runtime monitoring</term>
				</keywords>
			</textClass>
			<abstract>
				<p>AMNESIA is a tool that detects and prevents SQL injection attacks by combining static analysis and runtime monitoring. Empirical evaluation has shown that AMNESIA is both effective and efficient against SQL injection.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Companies and organizations use Web applications to provide a broad range of services to users, such as on-line banking and shopping. Because the databases underlying Web applications often contain confidential information (e.g., customer and financial records), these applications are a frequent target for attacks. One particular type of attack, SQL injection, can give attackers a way to gain access to the databases underlying Web applications and, with that, the power to leak, modify, or even delete information that is stored on these databases. In recent years, both commercial and government institutions have been victims of SQLIAs.</p><p>SQL injection vulnerabilities are due to insufficient input validation. More precisely, SQL Injection Attack s (SQLIAs) can occur when a Web application receives user input and uses it to build a database query without adequately validating it. An attacker can take advantage of a vulnerable application by providing it with input that contains embedded malicious SQL commands that are then executed by the database. Although the vulnerabilities that lead to SQLIAs are well understood, they continue to be a significant problem because of a lack of effective techniques to detect and prevent them. Conceptually, SQLIAs could be prevented by a more rigorous application of defensive coding techniques <ref type="bibr" target="#b10">[10]</ref>. In practice, however, these techniques have been less than effective in addressing the problem because they are susceptible to human errors and expensive to apply on large legacy code-bases.</p><p>In our demonstration, we present AMNESIA (Analysis and Monitoring for NEutralizing SQL-Injection Attacks), a tool that implements our technique for detecting and preventing SQLIAs <ref type="bibr" target="#b7">[7,</ref><ref type="bibr" target="#b8">8]</ref>. AMNESIA uses a model-based approach that is specifically designed to target SQLIAs and combines static analysis and runtime monitoring. tomatically build a model of the legitimate queries that the application can generate. At runtime, the technique monitors all dynamically-generated queries and checks them for compliance with the statically-generated model. When the technique detects a query that violates the model, it classifies the query as an attack, prevents it from accessing the database, and logs the attack information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">EXAMPLE OF SQL INJECTION</head><p>To illustrate how an SQLIA occurs, we introduce a simple example that we will use throughout the paper. The example is based on a servlet, show.jsp, for which a possible implementation is shown in <ref type="figure">Figure 1</ref>. Connection conn = DriverManager.getConnection("MyDB"); 3.</p><p>Statement stmt = conn.createStatement(); 4.</p><p>String queryString = "";</p><p>5. queryString = "SELECT info FROM userTable WHERE "; 6.</p><p>if ((! login.equals("")) &amp;&amp; (! password.equals(""))) { 7.</p><p>queryString += "login='" + login + "' AND pass='" + password + "'"; 8.</p><p>} else { 9.</p><p>queryString+="login='guest'"; } 10.</p><p>ResultSet tempSet = stmt.execute(queryString); 11. return tempSet; } ... } <ref type="figure">Figure 1</ref>: Example servlet.</p><p>Method getUserInfo is called with a login and password provided by the user, in string format, through a Web form. If both login and password are empty, the method submits the following query to the database:</p><formula xml:id="formula_0">SELECT info FROM users WHERE login='guest'</formula><p>Conversely, if the user submits login and password, the method embeds the submitted credentials in the query. For instance, if a user submits login and password as "doe" and "xyz," the servlet dynamically builds the query:</p><p>SELECT info FROM users WHERE login='doe' AND pass='xyz'</p><p>A Web application that uses this servlet would be vulnerable to SQLIAs. For example, if a user enters "' OR 1=1 --" and "", instead of "doe" and "xyz", the resulting query is:</p><p>SELECT info FROM users WHERE login='' OR 1=1 --' AND pass=''</p><p>The database interprets everything after the WHERE token as a conditional statement, and the inclusion of the "OR 1=1" clause turns this conditional into a tautology. (The characters "--" mark the beginning of a comment, so everything after them is ignored.) As a result, the database would re- turn information about all users. Introducing a tautology is only one of the many possible ways to perform SQLIAs, and variations can have a wide range of effects, including modification and destruction of database tables. We provide a thorough survey of SQLIAs in <ref type="bibr" target="#b9">[9]</ref>.</p><formula xml:id="formula_1">i n f o S E L E C T F R O M u s e r T a b l e W H E R E = g u e s t = ' ' β ' ' A N D</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">THE AMNESIA TOOL</head><p>In this section we summarize our technique, implemented in the AMNESIA tool, and then discuss the main characteristics of the tool implementation. A detailed description of the approach is provided in <ref type="bibr" target="#b7">[7]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Underlying Technique</head><p>Our technique uses a combination of static analysis and runtime monitoring to detect and prevent SQLIAs. It consists of four main steps.</p><p>Identify hotspots: Scan the application code to identify hotspots-points in the application code that issue SQL queries to the underlying database. Build SQL-query models: For each hotspot, build a model that represents all of the possible SQL queries that may be generated at that hotspot. An SQL-query model is a non-deterministic finite-state automaton in which the transition labels consist of SQL tokens, delimiters, and placeholders for string values. Instrument Application: At each hotspot in the application, add calls to the runtime monitor. Runtime monitoring: At runtime, check the dynamicallygenerated queries against the SQL-query model and reject and report queries that violate the model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1">Identify Hotspots</head><p>This step performs a simple scanning of the application code to identify hotspots. For the example servlet in <ref type="figure">Fig- ure 1</ref>, the set of hotspots would contain a single element, the statement at line 10.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2">Build SQL-Query Models</head><p>To build the SQL-query model for each hotspot, we first compute all of the possible values for the hotspot's query string. To do this, we leverage the Java String Analysis (JSA) library developed by Christensen, Møller, and Schwartzbach <ref type="bibr" target="#b2">[3]</ref>. The JSA library produces a non-deterministic finite automaton (NDFA) that expresses, at the character level, all the possible values the considered string can assume. The string analysis is conservative, so the NDFA for a string is an overestimate of all the possible values of the string.</p><p>To produce the final SQL-query model, we perform an analysis of the NDFA and transform it into a model in which all of the transitions represent semantically meaningful tokens in the SQL language. This operation creates an NDFA in which all of the transitions are annotated with SQL keywords, operators, or literal values. (This step is configurable to recognize different dialects of SQL.) In our model, we mark transitions that correspond to externally defined strings with the symbol β.</p><p>To illustrate, <ref type="figure" target="#fig_2">Figure 2</ref> shows the SQL-query model for the hotspot in the example provided in Section 2. The model reflects the two different query strings that can be generated by the code depending on the branch followed after the if statement at line 6 <ref type="figure">(Figure 1</ref>). In the model, β marks the position of the user-supplied inputs in the query string.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.3">Instrument Application</head><p>In this step, we instrument the application code with calls to a monitor that checks the queries at runtime. For each hotspot, we insert a call to the monitor before the call to the database. The monitor is invoked with two parameters: the query string that is about to be submitted and a unique identifier for the hotspot. The monitor uses the identifier to retrieve the SQL-query model for that hotspot. <ref type="figure" target="#fig_4">Figure 3</ref> shows how the example application would be instrumented by our technique. The hotspot, originally at line 10 in <ref type="figure">Figure 1</ref>, is now guarded by a call to the monitor at line 10a.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.4">Runtime Monitoring</head><p>At runtime, the application executes normally until it reaches a hotspot. At this point, the query string is sent to the runtime monitor. The monitor parses the query string into a sequence of tokens according to the specific SQL dialect considered. <ref type="figure">Figure 4</ref> shows how the last two queries discussed in Section 2 would be parsed during runtime monitoring.</p><p>After parsing the query, the runtime monitor checks whether the query violates the hotspot's SQL-query model. To do this, the runtime monitor checks whether the model accepts the sequence of tokens in the query string. When matching the query string against the SQL-query model, a token that corresponds to a numeric or string constant (including the empty string, ε) can match either an identical literal value or a β label. If the model does not accept the sequence of tokens, the monitor identifies the query as an SQLIA.</p><p>To illustrate runtime monitoring, consider again the queries from Section 2, shown in <ref type="figure">Figure 4</ref>  <ref type="figure">Figure 4</ref>: Example of parsed runtime queries.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Implementation</head><p>In our demonstration, we show an implementation of our technique, AMNESIA, that works for Java-based Web applications. The technique is fully automated, requiring only the Web application as input, and requires no extra runtime environment support beyond deploying the application with the AMNESIA library. We developed the tool in Java and its implementation consists of three modules: Analysis module. This module implements Steps 1 and 2 of our technique. It inputs a Java Web application and outputs a list of hotspots and a SQL-query model for each hotspot. For the implementation of this module, we leveraged the Java String Analysis library <ref type="bibr" target="#b2">[3]</ref>. The analysis module is able to analyze Java Servlets and JSP pages. Instrumentation module. This module implements Step 3 of our technique. It inputs a Java Web application and a list of hotspots and instruments each hotspot with a call to the runtime monitor. We implemented this module using InsECTJ, a generic instrumentation and monitoring framework for Java <ref type="bibr" target="#b19">[19]</ref>. Runtime-monitoring module. This module implements</p><p>Step 4 of our technique. The module takes as input a query string and the ID of the hotspot that generated the query, retrieves the SQL-query model for that hotspot, and checks the query against the model. <ref type="figure">Figure 5</ref> shows a high-level overview of AMNESIA. In the static phase, the Instrumentation Module and the Analysis Module take as input a Web application and produce (1) an instrumented version of the application and (2) an SQL-query model for each hotspot in the application. In the dynamic phase, the Runtime-Monitoring Module checks the dynamic queries while users interact with the Web application. If a query is identified as an attack, it is blocked and reported.</p><p>To report an attack, AMNESIA throws an exception and encodes information about the attack in the exception. If developers want to access the information at runtime, they can leverage the exception-handling mechanism of the language and integrate their handling code into the application. Having this attack information available at runtime allows developers to react to an attack right after it is detected and develop an appropriate customized response. Currently, the information reported by AMNESIA includes the time of the attack, the location of the hotspot that was exploited, the attempted-attack query, and the part of the query that was not matched against the model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Assumptions and Limitations</head><p>Our tool makes one primary assumption regarding the applications it targets-that queries are created by manip-  <ref type="figure">Figure 5</ref>: High-level overview of AMNESIA.</p><p>ulating strings in the application. In other words, AMNE-SIA assumes that the developer creates queries by combining hard-coded strings and variables using operations such as concatenation, appending, and insertion. Although this assumption precludes the use of AMNESIA on some applications (e.g., applications that externalize all query-related strings in files), it is not an overly restrictive assumption. Moreover, it is an implementation-related assumption that can be eliminated with suitable engineering. In certain situations our technique can generate false positives and false negatives. False positives can occur when the string analysis is not precise enough. For example, if the analysis cannot determine that a hard-coded string in the application is a keyword, it could assume that it is an inputrelated value and erroneously place a β in the SQL query model. At runtime, the original keyword would not match the placeholder for the variable, and AMNESIA would flag the corresponding query as an SQLIA. False negatives can occur when the constructed SQL query model contains spurious queries and the attacker is able to generate an injection attack that matches one of the spurious queries.</p><p>To assess the practical implications of these limitations, we conducted an extensive empirical evaluation of our technique. The evaluation used AMNESIA to protect seven applications while the applications where subjected to thousands of attacks and legal accesses. AMNESIA's performance in the evaluation was excellent: it did not generate any false positives or negatives <ref type="bibr" target="#b7">[7]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">RELATED WORK</head><p>To address the problem of SQLIAs, researchers have proposed a wide range of techniques. Two recent techniques <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b20">20]</ref> use an approach similar to ours, in that they also build models of legitimate queries and enforce conformance with the models at runtime. Other techniques include intrusion detection <ref type="bibr" target="#b21">[21]</ref>, black-box testing <ref type="bibr" target="#b11">[11]</ref>, static code checkers <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b12">12,</ref><ref type="bibr" target="#b13">13,</ref><ref type="bibr" target="#b22">22]</ref>, Web proxy filters <ref type="bibr" target="#b18">[18]</ref>, new query-development paradigms <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b15">15]</ref>, instruction set randomization <ref type="bibr" target="#b0">[1]</ref>, and taint-based approaches <ref type="bibr" target="#b6">[6,</ref><ref type="bibr" target="#b14">14,</ref><ref type="bibr" target="#b16">16,</ref><ref type="bibr" target="#b17">17]</ref>.</p><p>While effective, these approaches have limitations that affect their ability to provide general detection and prevention capabilities against SQLIAs <ref type="bibr" target="#b9">[9]</ref>. Furthermore, some of these approaches are difficult to deploy. Static analysis techniques, such as <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b22">22]</ref>, address only a subset of the problem. Other solutions require developers to learn and use new APIs <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b15">15]</ref>, modify their application source code <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b20">20]</ref>, deploy their applications using customized runtime environments <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b15">15,</ref><ref type="bibr" target="#b16">16,</ref><ref type="bibr" target="#b18">18]</ref>, or accept limitations on the completeness and precision of the technique <ref type="bibr" target="#b11">[11,</ref><ref type="bibr" target="#b21">21]</ref>. Techniques based solely on static analysis, such as <ref type="bibr" target="#b12">[12,</ref><ref type="bibr" target="#b13">13]</ref>, do not achieve the same levels of precision as dynamic techniques. Finally, defensive coding <ref type="bibr" target="#b10">[10]</ref>, while offering an effective solution to SQLIAs, has shown to be difficult to apply effectively in practice.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">SUMMARY</head><p>In this paper, we have presented AMNESIA, a fully automated tool for protecting Web applications against SQLIAs. Our tool uses static analysis to build a model of the legitimate queries an application can generate and monitors the application at runtime to ensure that all generated queries match the statically-generated model. In <ref type="bibr" target="#b7">[7]</ref>, we have presented an extensive evaluation that uses commercial applications and real-world SQLIAs to evaluate the effectiveness of AMNESIA. The results of this evaluation show that AM-NESIA can be very effective and efficient in detecting and preventing SQLIAs.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>It uses static analysis to analyze the Web-application code and au- Copyright is held by the author/owner. ICSE'06, May 20-28, 2006, Shanghai, China. ACM 1-59593-085-X/06/0005.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: SQL-query model for the servlet in Figure 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Example hotspot after instrumentation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>) SELECT info FROM users WHERE login='doe' AND pass='xyz') SELECT info FROM users WHERE login='' OR 1=1 --'AND pass=''</head><label></label><figDesc>. The tokens in query (a) specify a set of transitions that terminate in an accepting state. Therefore, query (a) is executed on the database. Conversely, query (b) contains extra tokens that prevent it from reaching an accepting state and is recognized as an SQLIA. (a</figDesc><table>SELECT 
info 
FROM 
users 
WHERE 
login 
= 
' 
doe 
' 
AND 
pass 
= 
' 
xyz 
' 

(bSELECT 
info 
FROM 
users 
WHERE 
login 
= 
' 
ε 
' 
OR 
1 
= 
1 
--
' 
AND 
pass 
= 
' 
ε 
' 

</table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This work was partially supported by DHS contract FA8750-05-2-0214 and NSF awards CCR-0205422 and CCR-0209322 to Georgia Tech.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">SQLrand: Preventing SQL injection attacks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">W</forename><surname>Boyd</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">D</forename><surname>Keromytis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 2nd Applied Cryptography and Network Security Conf. (ACNS 2004)</title>
		<meeting>of the 2nd Applied Cryptography and Network Security Conf. (ACNS 2004)</meeting>
		<imprint>
			<date type="published" when="2004-06" />
			<biblScope unit="page" from="292" to="302" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Using Parse Tree Validation to Prevent SQL Injection Attacks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">T</forename><surname>Buehrer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">W</forename><surname>Weide</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">A G</forename><surname>Sivilotti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 5th Intern. Workshop on Software Engineering and Middleware (SEM 2005)</title>
		<meeting>of the 5th Intern. Workshop on Software Engineering and Middleware (SEM 2005)</meeting>
		<imprint>
			<date type="published" when="2005-09" />
			<biblScope unit="page" from="106" to="113" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Precise analysis of string expressions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">S</forename><surname>Christensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Møller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">I</forename><surname>Schwartzbach</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 10th Intern. Static Analysis Symposium (SAS 2003)</title>
		<meeting>10th Intern. Static Analysis Symposium (SAS 2003)</meeting>
		<imprint>
			<date type="published" when="2003-06" />
			<biblScope unit="page" from="1" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Safe Query Objects: Statically Typed Objects as Remotely Executable Queries</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">R</forename><surname>Cook</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 27th Intern. Conf. on Software Engineering (ICSE 2005)</title>
		<meeting>of the 27th Intern. Conf. on Software Engineering (ICSE 2005)</meeting>
		<imprint>
			<date type="published" when="2005-05" />
			<biblScope unit="page" from="97" to="106" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Static Checking of Dynamically Generated Queries in Database Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gould</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Devanbu</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
				<title level="m">Proc. of the 26th Intern. Conf. on Software Engineering (ICSE 2004)</title>
		<meeting>of the 26th Intern. Conf. on Software Engineering (ICSE 2004)</meeting>
		<imprint>
			<date type="published" when="2004-05" />
			<biblScope unit="page" from="645" to="654" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Dynamic taint propagation for java</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Haldar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Chandra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Franz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 21st Annual Computer Security Applications Conf. (ACSAC 2005)</title>
		<meeting>of the 21st Annual Computer Security Applications Conf. (ACSAC 2005)</meeting>
		<imprint>
			<date type="published" when="2005-12" />
			<biblScope unit="page" from="303" to="311" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">AMNESIA: Analysis and Monitoring for NEutralizing SQL-Injection Attacks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">G</forename><surname>Halfond</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Orso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the IEEE and ACM Intern. Conf. on Automated Software Engineering (ASE 2005)</title>
		<meeting>of the IEEE and ACM Intern. Conf. on Automated Software Engineering (ASE 2005)</meeting>
		<imprint>
			<date type="published" when="2005-11" />
			<biblScope unit="page" from="174" to="183" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Combining Static Analysis and Runtime Monitoring to Counter SQL-Injection Attacks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">G</forename><surname>Halfond</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Orso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Third Intern. ICSE Workshop on Dynamic Analysis (WODA 2005)</title>
		<meeting>of the Third Intern. ICSE Workshop on Dynamic Analysis (WODA 2005)</meeting>
		<imprint>
			<date type="published" when="2005-05" />
			<biblScope unit="page" from="22" to="28" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A Classification of SQL-Injection Attacks and Countermeasures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">G</forename><surname>Halfond</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Viegas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Orso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Intern. Symposium on Secure Software Engineering</title>
		<meeting>of the Intern. Symposium on Secure Software Engineering</meeting>
		<imprint>
			<date type="published" when="2006-03" />
		</imprint>
	</monogr>
	<note>ISSSE 2006</note>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Writing Secure Code</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Howard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Leblanc</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
			<publisher>Microsoft Press</publisher>
			<pubPlace>Redmond, Washington, 2 nd edition</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Web Application Security Assessment by Fault Injection and Behavior Monitoring</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Tsai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 12th Intern. World Wide Web Conf. (WWW 2003)</title>
		<meeting>of the 12th Intern. World Wide Web Conf. (WWW 2003)</meeting>
		<imprint>
			<date type="published" when="2003-05" />
			<biblScope unit="page" from="148" to="159" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Securing Web Application Code by Static Analysis and Runtime Protection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Tsai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">T</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">Y</forename><surname>Kuo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 13th Intern. World Wide Web Conf. (WWW 2004)</title>
		<meeting>of the 13th Intern. World Wide Web Conf. (WWW 2004)</meeting>
		<imprint>
			<date type="published" when="2004-05" />
			<biblScope unit="page" from="40" to="52" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Finding Security Vulnerabilities in Java Applications with Static Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><forename type="middle">B</forename><surname>Livshits</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Lam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Usenix Security Symposium</title>
		<imprint>
			<date type="published" when="2005-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Finding application errors and security flaws using PQL: a program query language</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Livshits</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Lam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 20th annual ACM SIGPLAN Conf. on Object Oriented Programming Systems Languages and Applications (OOPSLA 2005)</title>
		<meeting>of the 20th annual ACM SIGPLAN Conf. on Object Oriented Programming Systems Languages and Applications (OOPSLA 2005)</meeting>
		<imprint>
			<date type="published" when="2005-10" />
			<biblScope unit="page" from="365" to="383" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Compile Time Checking of Dynamic SQL Statements</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Mcclure</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Krüger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sql Dom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 27th Intern. Conf. on Software Engineering (ICSE 2005)</title>
		<meeting>of the 27th Intern. Conf. on Software Engineering (ICSE 2005)</meeting>
		<imprint>
			<date type="published" when="2005-05" />
			<biblScope unit="page" from="88" to="96" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Automatically Hardening Web Applications Using Precise Tainting Information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Nguyen-Tuong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Guarnieri</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Greene</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shirley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Evans</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Twentieth IFIP Intern. Information Security Conf. (SEC 2005)</title>
		<imprint>
			<date type="published" when="2005-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Defending Against Injection Attacks through Context-Sensitive String Evaluation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Pietraszek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">V</forename><surname>Berghe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Recent Advances in Intrusion Detection (RAID 2005)</title>
		<meeting>of Recent Advances in Intrusion Detection (RAID 2005)</meeting>
		<imprint>
			<date type="published" when="2005-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Abstracting Application-level Web Security</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Scott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Sharp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 11 th Intern. Conf. on the World Wide Web</title>
		<meeting>of the 11 th Intern. Conf. on the World Wide Web</meeting>
		<imprint>
			<publisher>WWW</publisher>
			<date type="published" when="2002-05" />
			<biblScope unit="page" from="396" to="407" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">InsECTJ: A Generic Instrumentation Framework for Collecting Dynamic Information within Eclipse</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Seesing</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Orso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the eclipse Technology eXchange (eTX) Workshop at OOPSLA 2005</title>
		<meeting>of the eclipse Technology eXchange (eTX) Workshop at OOPSLA 2005</meeting>
		<imprint>
			<date type="published" when="2005-10" />
			<biblScope unit="page" from="49" to="53" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">The Essence of Command Injection Attacks in Web Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wassermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The 33rd Annual Symposium on Principles of Programming Languages (POPL 2006)</title>
		<imprint>
			<date type="published" when="2006-01" />
			<biblScope unit="page" from="372" to="382" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A Learning-Based Approach to the Detection of SQL Attacks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Valeur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Mutz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Vigna</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Conf. on Detection of Intrusions and Malware and Vulnerability Assessment</title>
		<meeting>of the Conf. on Detection of Intrusions and Malware and Vulnerability Assessment</meeting>
		<imprint>
			<date type="published" when="2005-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">An Analysis Framework for Security in Web Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wassermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Su</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the FSE Workshop on Specification and Verification of Component-Based Systems (SAVCBS 2004)</title>
		<meeting>of the FSE Workshop on Specification and Verification of Component-Based Systems (SAVCBS 2004)</meeting>
		<imprint>
			<date type="published" when="2004-10" />
			<biblScope unit="page" from="70" to="78" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
