<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:43+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Staying in the Middle: Exact and Approximate Medians in R 1 and R 2 for Moving Points *</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pankaj</forename><forename type="middle">K</forename><surname>Agarwal</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>De Berg</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jie</forename><surname>Gao</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leonidas</forename><forename type="middle">J</forename><surname>Guibas</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sariel</forename><surname>Har-Peled</surname></persName>
						</author>
						<author>
							<affiliation>
								<orgName>1 Introduction</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Staying in the Middle: Exact and Approximate Medians in R 1 and R 2 for Moving Points *</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>We study the problem of "staying in the middle": we have a set of points moving in a geometric space and wish to maintain another point (possibly one of the given points, but not necessarily) that stays continuously "in the middle" of the moving set. More precisely, in R 1 we wish to maintain the median or, more generally, a point of rank k. In R 2 we wish to maintain suitable analogs of the median and point of rank k, defined as follows.</p><p>Let P be a point set in R d , and define the depth ∆(p) of a point p ∈ R d as the minimum number of points of P on either side of any hyperplane passing through p. A point with depth at least δn is called a δ-center point. A 1/(d + 1)-center point is called just a center point, and it generalizes the concept of median. It has been proven using Helly's Theorem that any point set has a center point <ref type="bibr" target="#b9">[10]</ref>. For R 2 , given some k ≤ n/2, the set of points with depth at least k is called k-th depth contour, denoted by D k .</p><p>We study both exact and approximate algorithms for kinetic medians (in R 1 ) and kinetic center points and depth contours (in R 2 ). As we will see, in both cases the approximate algorithms offer far greater stability and maintenance efficiency, for a very modest loss in the quality of the partitions they can generate. Another advantage of approximation algorithms is that we can maintain not only the (median or) center point of the current configuration but also a compact representation of the trajectory of an approximate (median or) center point over the entire motion of points, so we can answer various queries on the center point of any future configuration of points. Such queries are central to spatialtemporal database systems. A main tool we develop for these approximate algorithms is the efficient maintenance of an ε-approximation of a range space under point insertion and deletion -which we believe to be of independent interest.</p><p>Related work. Finding the median (or more generally the point of rank k, for some given k) of a set of points in R 1 can be done in linear time. If the points move on the real line, then maintaining the point of rank k is closely related to the concept of levels in the arrangement defined by the trajectories in the xt-plane, as defined next. The level of a point p ∈ R 2 in an arrangement A(Γ) defined by a set Γ of x-monotone curves is the number of curves in Γ lying below p. Let Λ k (Γ) denote the closure of the edges of A(Γ) whose level is k; Λ k (Γ) is an x-monotone curve and it is called the k-level of the arrangement. Hence, the point of rank k at time t 0 is given by the trajectory that is on the klevel for t = t 0 . Set λ k (Γ) = |Λ k (Γ)|, and define λ k (n) = max{λ k (Γ)}, where the maximum is taken over all sets Γ of n curves of a given type (lines, for example, or algebraic curves of a certain maximum degree). Maintaining the median thus reduces to computing the n/2-level, and λ n/2 (n) bounds the number of changes of the median if the trajectories in the xtplane are of the given type. If Γ is a set of n lines, then λ k (Γ) = O(n 4/3 ) <ref type="bibr" target="#b8">[9]</ref>. For general curves, a recent result of Chan <ref type="bibr" target="#b3">[4]</ref> implies that λ k (Γ) = O(n 2−1/2s ), where s is the maximum number of intersection points between two curves.</p><p>Maintaining an ε-approximate median reduces to computing an ε-approximate n/2-level, that is, an xmonotone curve lying between the (1 − ε)n/2-level and the (1 + ε)n/2-level. There has been a lot of work on computing approximate levels. For line arrangements, Edelsbrunner and Welzl <ref type="bibr" target="#b10">[11]</ref> showed that an ε-approximate median level with at most λ n/2 (n)/(εn) edges exists, and Matoušek <ref type="bibr" target="#b12">[13]</ref> gave an algorithm for obtaining an ε-approximate median level of constant complexity (depending on ε only). This idea was further explored by Agarwal et al. <ref type="bibr" target="#b0">[1]</ref>, who obtained an algorithm to compute in time O(n log n/ε 2 ) an ε-approximate median of size O(1/ε 2 ) for arrangements of lines or line segments.</p><p>In 2-D, a center point can be computed in linear time <ref type="bibr" target="#b11">[12]</ref>. Clarkson et al. <ref type="bibr" target="#b6">[7]</ref> proposed a randomized algorithm to compute an ε-approximate center point in time polynomial in the dimension and 1/ε. Miller et al. used O(n 2 ) time and space to find all the depth contours, by computing the arrangement of the n lines in the dual plane <ref type="bibr" target="#b13">[14]</ref>. A single k-th depth contour can be computed in O(n log 2 n) time <ref type="bibr" target="#b4">[5]</ref>. To our knowledge, there are no prior results on maintaining the exact/approximate depth contours or center points under motion.</p><p>Our results. Most of our algorithms are based on the kinetic data structure (KDS) framework, originally proposed by Basch et al. <ref type="bibr" target="#b1">[2]</ref>. We start by briefly looking at the problem of maintaining medians and points of a given rank k for points moving in R 1 . Then we present two KDS's for maintaining a center point of a set of n points moving in the plane. The first KDS actually maintains the k-th depth contour for a given 0 ≤ k &lt; n. As a byproduct, it gives a KDS for maintaining the entire center region (the set of all center points). It requires O(n 2 ) certificates and processes O(n 4+δ ) events under pseudo-algebraic motion of points, each event requiring O(log 2 n) time. The second KDS maintains a subset of the center points. It needs only O(n log n) certificates but processes O(n 7+δ ) events in the worst case.</p><p>Since these exact algorithms are quite expensive, we then study approximation algorithms. We first describe an algorithm for maintaining an ε-approximation A ⊆ S of a finite range space (S, R) under insertions and deletions of points. We show that a center point of A for a suitably defined range space is an ε-approximate center point of S. Whenever we compute A, we also compute in O(1/ε O(1) ) time a t-monotone polygonal curve γ so that γ(t) is a center point of A(t). Therefore for any t, we can compute in O(log(1/ε)) time an ε-approximate center point of the points in S(t) based on their current trajectories. The set A does not change as long as the trajectories of the points in S don't change. Whenever a point p changes its trajectory, we delete p from S and re-insert it with the new trajectory. Our algorithm can update A in (log(n)/ε) O(1) time. The same idea can also be used to maintain an ε-approximate median of a set of points moving in R 1 .</p><p>The ε-approximation based algorithm maintains an ε-approximate median that changes O(1/ε 4 log 2 (1/ε)) times, and the total time spent is O(n/ε O <ref type="formula">(1)</ref> ). If the trajectories of the points are known in advance, then we can improve this. For example, if the points have fixed velocities, we give a Las Vegas algorithm such that the ε-approximate median changes O(1/ε 4/3 log 2 (1/ε)) times, by spending O(n/ε 1/3 log(1/ε)) expected time, thus improving the result of Agarwal et al. <ref type="bibr" target="#b0">[1]</ref>.</p><p>Due to lack of space, we omit most details from this extended abstract.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Exact Algorithms</head><p>Maintaining the median. Maintaining the exact median of a set S of n points moving in R 1 , or more generally, maintaining the point of rank k for a fixed k, can be done by adapting the HeapSweep algorithm <ref type="bibr" target="#b2">[3]</ref>. We maintain (i) the point of rank k, (ii) the maximum of S &lt;k (t), the points of rank less then k, in a kinetic tournament, and (iii) the minimum of S &gt;k , the points with rank greater than k, in a kinetic tournament. Following the analysis of <ref type="bibr" target="#b2">[3]</ref>, we prove the following.</p><p>Theorem 1 Let S be a set of n points moving in R 1 , and let k be an integer. We can maintain the point of S of rank k using a KDS that uses O(n) certificates. Assuming pseudo-algebraic motion, the number of events processed by the KDS is O(λ k (n) log 2 n), and each event can be handled in O(log n) time.</p><p>Maintaining the depth contour and center region. Given a set S of n points moving in R 2 and an integer 0 ≤ k &lt; n/2, we describe a KDS for maintaining the k-th depth contour D k of S as the points in S move. The center region of S is simply D n/3 . Note that the k-th depth contour of a set P of n stationary points in the plane is also closely related to the k-th and (n − k)-th levels in arrangements: if we dualize <ref type="bibr" target="#b7">[8]</ref> P , we obtain a set P * of n lines, and a point at depth k dualizes to a line lying between Λ k (P * ) and Λ n−k (P * ). Hence, the dual of points whose depth is at least k is the region lying between the lower hull of Λ n−k (S * ) and the upper hull of Λ k (S * ). Thus the problem at hand reduces to the following. Let L = { 1 , . . . , n } be a set of n lines in the plane, each moving independently, i.e., i : y = a i (t)+b i (t)x, where a i (·) and b i (·) are polynomials in t. We wish to maintain the upper (or lower) hull of Λ k (L), the k-th level of A(L), as the lines in L move.</p><p>For each line ∈ L, let v − () (resp. v + ()) be the leftmost (resp. rightmost) point of</p><formula xml:id="formula_0">Λ k (L) ∩ . Let V = {v − (), v + () | ∈ L}. The upper hull of Λ k (L)</formula><p>is the same as that of V . We maintain the upper hull of V using the kinetic data structure described in <ref type="bibr" target="#b1">[2]</ref>. In more detail, we proceed as follows.</p><p>For a line ∈ L, let Σ() be the sequence of vertices of A(L) ∩ , sorted from left to right. Σ() partitions into the edges of A(L). For each edge e, let λ(e) be the level of the points in e. Note that if e lies immediately to the right of e, then λ(e ) = λ(e) ± 1 depending on the local geometric situation. We maintain the set E() of all the edges on whose level is k. We add the left endpoint of the leftmost edge and the right endpoint of the rightmost edge of E() (i.e., v − (), v + ()) to V . For each , we maintain: (i) the sequence of vertices and edges of the arrangement on , (ii) E(), and (iii) v − (), v + (). In addition, we also use a KDS to maintain the upper hull of V , as the lines in L move <ref type="bibr" target="#b1">[2]</ref>. We will also need it to handle insertion and deletion of points.</p><p>There are three types of events that the algorithm has to handle to maintain the above structures: (E1) Two lines 1 , 2 become parallel. (E2) Three lines 1 , 2 , 3 become concurrent. (E3) An event of KDS for maintaining UH(V ).</p><p>The KDS for maintaining UH(V ) maintains O(n log n) certificates. We need additional O(n 2 ) certificates to detect events of type (E1) and (E2): (i) leftmost and right vertices along each line of L, and (ii) adjacent pairs of vertices of A(L) along each line of L. We can show that the total number of events of all types is O(n 4+δ ), and that each event can be handled in O(log 2 n) time, leading to the following result.</p><p>Theorem 2 Let S be a set of n points moving in the plane. We can maintain the center region of S or, more generally, the k-th depth contour of S, using O(n 2 ) certificates. The algorithm processes O(n 4+δ ) events under algebraic motion of S, and each event can be processed in O(log 2 n) time.</p><p>A space-efficient algorithm for maintaining a center point. We now describe a KDS for maintaining a center point of a set S of n = 3m points moving in the plane that uses only O(n log n) certificates. First, let us assume that the points in S are stationary. A result by <ref type="bibr">Tverberg [16]</ref> implies that S can be partitioned into m triples S 1 , . . . , S m so that the intersection of triangles ∆ i = conv(S i ), 1 ≤ i ≤ m, is nonempty. Such a partition is called a Tverberg partition, and any point in ∆ = m i=1 ∆ i is called a Tverberg point. Any point in ∆ is also a center point. Moreover, a Tverberg partition in the plane can be computed in O(n log n) time <ref type="bibr" target="#b14">[15]</ref>. Since each Tverberg triangle ∆ i can be regarded as the intersection of three halfplanes, each bounded by a line passing through a pair of points in ∆ i , the region ∆ is the intersection of a set H of 3m = n halfplanes. In the dual plane, a halfplane h ∈ H is mapped to a point h * and the intersection of the halfplanes maps to the convex hull of the set H * of points. Therefore we use a KDS to maintain the convex hull CH(H * ) <ref type="bibr" target="#b1">[2]</ref>; it uses O(n log n) certificates. Now as the points in S move, we wish to maintain ∆. More precisely, we compute an initial Tverberg partition of S in O(n log n) time and maintain ∆ using the kinetic convex hull structure described by Basch et al. <ref type="bibr" target="#b1">[2]</ref>, with the following twist. Whenever ∆ shrinks to a point, we update the underlying Tverberg partition so that the interior of ∆ after the modification becomes nonempty. The idea is similar to the one used by Tverberg <ref type="bibr" target="#b16">[17]</ref>. We omit the details of the events and the analysis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 3</head><p>One can maintain a center point of a set S of moving points in the plane using O(n log n) certificates. The algorithm processes O(n 7+δ ) events under algebraic motion of S, and each event can be processed in O(log 2 n) time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Maintaining ε-approximations</head><p>A range space is a pair X = (S, R), where S is a set and R ⊂ 2 S . S is called the set of points, and R is called the set of ranges. In the sequel we deal with finite range spaces, where S is finite. A subset A ⊆ S is called an ε-approximation for X if, for every range R ∈ R, ||A ∩ R|/|A| − |R|/|S|| &lt; ε. We give a deterministic algorithm, based on <ref type="bibr" target="#b5">[6]</ref>, for maintaining an ε-approximation as points are inserted or deleted.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 4 Given a range space</head><formula xml:id="formula_1">X = (S, R) of VC-dimension d, one can (deterministically) maintain an ε-approximation of X of size O(1/ε 2 log(1/ε)), in O log 2d+3 n ε 2d+2 (log(log(n)/ε)) 2d+2</formula><p>time per insertion or deletion, for a parameter ε &gt; 0.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Approximation Algorithms</head><p>The ε-approximation based algorithms. Let S be a set of n points moving in R 1 , and R the set of vertically downward rays in the tx-plane. For ρ ∈ R, let S ρ = {p | there is a t with p(t) ∈ ρ}. We define the range space M = (S, {S ρ | ρ ∈ R}). Let A ⊆ S be an ε-approximation of S for the range space M. Then for any t, the median of A(t) is an ε-approximate median of S(t).</p><p>If the trajectories of S are algebraic then the VCdimension of M is finite. Therefore we can use the algorithms of the previous section to maintain an ε-approximation of S. We can compute the median level of the trajectories of A. Since we compute the entire median level, there are no events unless the trajectory of a point in S changes. When the trajectory of a point changes, A is recomputed in (log(n)/ε) O(1) time using Theorem 4, and we recompute the median level of A in (1/ε) O(1) additional time. We thus obtain the following.</p><p>Theorem 5 Let S be a set of points moving in R 1 (or R 2 ), and let ε &gt; 0 be a parameter. Assuming that the motion of S is algebraic, we can construct a data structure that can be updated in (log(n)/ε) O(1) time whenever the trajectory of a point in S changes, and that, for any time t, can return an ε-approximate median (or ε-approximate center point) of S(t) in O(log(1/ε)) time based on the current trajectories of S.</p><p>Faster off-line algorithms. An ε-approximate median of a set S of n points moving in R 1 can be computed more efficiently off-line. However, unlike the algorithm of Section 4, the ε-approximate median we maintain is not necessarily one of the input points, and we cannot change the trajectory of points on-line. Theorem 6 Let S be a set of points moving in R 1 , and ε &gt; 0 a constant. Assuming that their trajectories are algebraic with degree of motion µ, we can compute in O(n log(1/ε) + 1/ε O(µ 2 ) ) time a t-monotone curve γ of size O(1/ε 2 ) so that the rank of γ(t), for any t ∈ R, lies between n/2(1 ± ε).</p><p>We can compute an ε-approximate median with fewer breakpoints if the points have fixed velocities.</p></div>		</body>
		<back>

			<div type="acknowledgement">
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Kinetic medians and kd-trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">K</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">J</forename><surname>Guibas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 10th Annu. European Sympos. Algorithms</title>
		<meeting>10th Annu. European Sympos. Algorithms</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="5" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Data structures for mobile data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Basch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">J</forename><surname>Guibas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hershberger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Algorithms</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="28" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Reporting red-blue intersections between two sets of connected line segments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Basch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">J</forename><surname>Guibas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">D</forename><surname>Ramkumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithmica</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="1" to="20" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">On levels in arrangements of curves, II: a simple inequality and its consequence</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">M</forename><surname>Chan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 44th IEEE FOCS&apos;03</title>
		<meeting>44th IEEE FOCS&apos;03</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="544" to="550" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">An optimal randomized algorithm for maximum tukey depth</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">M</forename><surname>Chan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 15th ACM-SIAM Symposium on Discrete Algorithms (SODA)</title>
		<meeting>15th ACM-SIAM Symposium on Discrete Algorithms (SODA)</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="423" to="429" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">The Discrepancy Method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Chazelle</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Cambridge University Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Approximating center points with iterative Radon points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">L</forename><surname>Clarkson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Eppstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">L</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Sturtivant</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S.-H</forename><surname>Teng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internat. J. Comput. Geom. Appl</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="357" to="377" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Berg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Van Kreveld</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Overmars</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Schwarzkopf</surname></persName>
		</author>
		<title level="m">Computational Geometry: Algorithms and Applications</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
	<note>2nd edition</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Improved bounds for planar k-sets and related problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">K</forename><surname>Dey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Comput. Geom</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="373" to="382" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Algorithms in Combinatorial Geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">EATCS Monographs on Theoretical Computer Science</title>
		<imprint>
			<date type="published" when="1987" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Constructing belts in twodimensional arrangements with applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Welzl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Comput</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="271" to="284" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Computing a centerpoint of a finite planar set of points in linear time</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Jadhav</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mukhopadhyay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Comput. Geom</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="291" to="312" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Construction of -nets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Matoušek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Comput. Geom</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="427" to="448" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Fast implementation of depth contours using topological sweep</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ramaswami</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rousseeuw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Sellares</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">L</forename><surname>Souvaine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Streinu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Struyf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 12th ACM-SIAM Sympos. Discrete Algorithms</title>
		<meeting>12th ACM-SIAM Sympos. Discrete Algorithms</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="690" to="699" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Points, Spheres, and Separators: a unified geometric approach to graph partitioning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">H</forename><surname>Teng</surname></persName>
		</author>
		<idno>Re- port CMU-CS-91-184</idno>
	</analytic>
	<monogr>
		<title level="j">School Comp. Sci</title>
		<imprint>
			<date type="published" when="1990" />
		</imprint>
		<respStmt>
			<orgName>Carnegie-Mellon Univ.</orgName>
		</respStmt>
	</monogr>
<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A generalization of Radon&apos;s theorem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Tverberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. London Math. Soc</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="page" from="123" to="128" />
			<date type="published" when="1966" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A generalization of Radon&apos;s theorem II</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Tverberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bull. Australian Math. Soc</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="321" to="325" />
			<date type="published" when="1981" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
