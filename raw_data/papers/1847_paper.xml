<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:40+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Multi-Label Informed Latent Semantic Indexing</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kai</forename><surname>Yu</surname></persName>
							<email>kai.yu@siemens.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shipeng</forename><surname>Yu</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Institute for Computer Science</orgName>
								<orgName type="institution">University of Munich</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Volker</forename><surname>Tresp</surname></persName>
							<email>volker.tresp@siemens.com</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Corporate Technology, Information and Communications</orgName>
								<orgName type="institution">Siemens AG</orgName>
								<address>
									<settlement>Munich</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Multi-Label Informed Latent Semantic Indexing</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>H3 [Information Storage and Retrieval]: Content Anal- ysis and Indexing-Indexing methods General Terms Algorithms</term>
					<term>Theory</term>
					<term>Measurement</term>
					<term>Performance Keywords Latent Semantic Indexing</term>
					<term>Dimensionality Reduction</term>
					<term>Su- pervised Projection</term>
					<term>Multi-label Classification</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Latent semantic indexing (LSI) is a well-known unsuper-vised approach for dimensionality reduction in information retrieval. However if the output information (i.e. category labels) is available, it is often beneficial to derive the indexing not only based on the inputs but also on the target values in the training data set. This is of particular importance in applications with multiple labels, in which each document can belong to several categories simultaneously. In this paper we introduce the multi-label informed latent semantic indexing (MLSI) algorithm which preserves the information of inputs and meanwhile captures the correlations between the multiple outputs. The recovered &quot;latent seman-tics&quot; thus incorporate the human-annotated category information and can be used to greatly improve the prediction accuracy. Empirical study based on two data sets, Reuters-21578 and RCV1, demonstrates very encouraging results.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Information retrieval and pattern recognition often suffer from the problem of high dimensionality of the data, for the reason of learnability or computational efficiency. Therefore dimensionality reduction in terms of semantic indexing or feature projection is of great importance and is commonly applied to solve real world problems <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b0">1,</ref><ref type="bibr" target="#b5">5]</ref>.</p><p>Among various methods, latent semantic indexing (LSI) turns out to be a successful approach and is widely applied to document analysis and information retrieval <ref type="bibr" target="#b1">[2]</ref>. To apply LSI, documents are represented in a vector space model, and singular value decomposition (SVD) is performed to find the sub-eigenspace with large eigenvalues. It is shown that LSI can find the best subspace in terms of Frobenius norm of matrix. Thus the technology behind LSI is also called principal component analysis (PCA) in the sense that each "latent semantic" can be viewed as a "component" to represent the data (see, e.g. <ref type="bibr" target="#b4">[4]</ref>).</p><p>LSI is purely unsupervised and is not capable to incorporate some additional knowledge. There are at least two reasons for further improvements on this issue. First, considerable information about the content of documents is reflected by document's labels, which is often annotated by human experts. This is particularly the case in the multi-label setting where each document is assigned to multiple categories. The semantic correlations of assignments for variant categories and the hierarchical structure of categories expresses the semantic relationships between documents. Therefore, it is desired to have a LSI technique that can be informed by this additional knowledge and produce semantically more meaningful latent factors.</p><p>Second, the unsupervision of LSI leads to results that may be or may not be useful in discriminative analysis like automatic text categorization. However in one specific classification or regression problem, output information is in general very important and should be incorporated into the feature mapping or selection process. In particular we consider problems with multiple labels: For an input x the corresponding output is no longer a scalar but a vector y = [y 1 , . . . , y L ] T . Thus the text categorization system solves many related tasks at the same time. In this setting the dependencies between multiple labels are worth considering for multivariate data analysis, and can be used to improve the indexing for these specific tasks. Furthermore, training a system with multiple labels might lead to smaller parameter variance and the prediction for a particular label is improved if the labels are correlated.</p><p>This setting is very common in real-world applications. One example is the problem of multi-label document categorization, where each document is allowed to be associated with more than one category and where categories often have semantic correlations <ref type="bibr" target="#b8">[8]</ref>. The well-known text data set Reuters-21578 contains such documents, and the new text data corpus RCV1 has additionally a topic hierarchy <ref type="bibr" target="#b7">[7]</ref>. These two data sets will be used in the experiments.</p><p>In this paper we introduce a supervised LSI called multilabel informed latent semantic indexing (MLSI). MLSI maps the input features into a new feature space that retains the information of original inputs and meanwhile captures the dependency of output dimensions. The mapping is derived by solving an optimization problem for linear projections, and can be easily extended for nonlinear mappings with kernels. We use this method as a preprocessing step and achieve encouraging results on the multi-label text classification problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Notations</head><p>We consider a set of N documents. For i = 1, . . . , N , each document i is described by an M -dimensional feature vector x i ∈ X , and is associated with an L-dimensional output vector y i ∈ Y. We denote the input data as a matrix <ref type="bibr">[·]</ref> T denotes matrix transpose. We aim to derive a mapping Ψ : X → V that projects the input features into a K-dimensional latent space.</p><formula xml:id="formula_0">X = [x1, . . . , xN ] T ∈ R N ×M , and the output data as Y = [y 1 , . . . , y N ] T ∈ R N ×L , where</formula><p>In the following, lower-case bold Roman letters denote column vectors, and upper-case ones denote matrices. In particular, I is reserved for identity matrix. Eigenvalues are usually denoted as λ and it should be clear from the context which matrix they are corresponding to. · denotes Frobenius norm for matrices and 2-norm for vectors, and Tr [·] denotes trace for square matrices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Paper Organization</head><p>The paper is organized as follows. In Section 2 we formulate the data projection as an optimization problem in the linear case and then propose a regularized version to prevent overfitting, which is generalized to nonlinear mapping by using kernels. Then we point out its connections to related work in Section 3 and report the experimental results in Section 4. In Section 5 we conclude the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">THE MLSI ALGORITHM</head><p>We begin by introducing an optimization explanation for LSI, and then take into account the output information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Optimization Problem for LSI</head><p>In LSI, we aim at finding a linear mapping from the input space X to some low-dimensional latent space V, while most of the structure in the data can be explained and recovered. We can achieve this by taking a latent variable model and solving the following optimization problem which minimizes the reconstruction error (see, e.g., <ref type="bibr" target="#b4">[4]</ref>):</p><formula xml:id="formula_1">min A,V X − VA 2</formula><p>(1) subject to:</p><formula xml:id="formula_2">V T V = I,</formula><p>where V ∈ R N ×K and A ∈ R K×M , given K ≤ M . Each column of V corresponds to one latent variable or latent semantic, and by V T V = I we constrain that they are uncorrelated and each has unit variance 1 . For each document in X (represented as one row in X), the corresponding row in V explicitly gives its projection in V. A is sometimes called factor loadings and gives the mapping from latent space V to input space X . At the optimum, VA leads to the best K-rank approximation of the observations X. The derived indexing explains the covariance of input data, which is however not necessarily relevant to the output quantities. Thus LSI may or may not be beneficial to supervised learning problems. Generally speaking, it is more desirable to consider the correlation between input X and output Y, and the intra-correlation within Y (if multiple labels). Therefore, we turn to supervised indexing in the next subsection, incorporating both input X and output Y.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">A Supervised LSI</head><p>The unsupervised indexing problem (1) explicitly represents the projections of input data X in matrix V. To consider the label information, we can enforce the projections V in problem (1) sensitive to Y as well. Thus in supervised LSI we solve the following optimization problem:</p><formula xml:id="formula_3">min A,B,V (1 − β)X − VA 2 + βY − VB 2<label>(2)</label></formula><p>subject to:</p><formula xml:id="formula_4">V T V = I,</formula><p>where V ∈ R N ×K gives the K-dimensional projections of documents, for features of both X and Y; A ∈ R K×M , B ∈ R K×L are the factor loadings for X and Y, respectively. 0 ≤ β ≤ 1 is a tuning parameter determining how much the indexing should be biased by the outputs. As before, V T V = I restricts the K latent variables to be uncorrelated and have unit variance. Clearly, the cost function is a trade-off between the reconstruction error of both X and Y. We wish to find the optimal indexing that gives the minimum reconstruction error. The second part in the objective function of problem (2) enforces the latent semantics to explain the dependency structure of multiple labels. The following theorem states the interdependency between A, B and V at the optimum. </p><formula xml:id="formula_5">(a) A = V T X, B = V T Y; (b) V = [v 1 , . . . , v K ]R, where R is an arbitrary K × K orthogonal rotation matrix;</formula><p>(c) At the optimum, the objective function in (2) equals to</p><formula xml:id="formula_6">Tr [C] − Tr V T CV , or equivalently, N i=K+1 λ i .</formula><p>To improve readability, we put all proofs into Appendix. Theorem 1 states that the leading eigenvectors of C form a solution for matrix V, and any arbitrary rotation for V does not change the optimum. Therefore to remove the ambiguity, we focus on the solution given by the leading eigenvectors of C, i.e., V = [v 1 , . . . , v K ]. Problem (2) can thus be achieved by solving the eigenvalue problem Cv = λv for the first K leading eigenvectors, which is equivalent to solving 2 : <ref type="bibr">v1, . . . , vK ]</ref>, A = V T X, and B = V T Y gives the optimal solution for problem (2).</p><formula xml:id="formula_7">max v∈R N v T Cv (3) subject to : v T v = 1. Then V = [</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">MLSI -Primal Form</head><p>To complete the MLSI algorithm, we still need to consider two things. Firstly, the indexing should not rely on the labels, since for new documents we have no target information yet. Secondly, the stability of indexing should be taken into account, because otherwise overfitting is likely to occur.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.1">Linear Constraint</head><p>It is not hard to see that solving problem (3) only gives the projections for training data with both features in X and Y. We wish to construct a mapping Ψ : X → V that is able to handle the input features of any new documents, thus we add a linear constraint to problem (2) and restrict the latent variables as linear mappings of X, i.e.,</p><formula xml:id="formula_8">V = XW.</formula><p>Therefore we have vi = Xwi, for i = 1, . . . , K, if we denote <ref type="formula">(3)</ref>, we have an optimization problem with respect to w:</p><formula xml:id="formula_9">W = [w1, . . . , wK ] ∈ R M ×K . Plugging v = Xw into</formula><formula xml:id="formula_10">max w∈R M w T X T CXw (4) subject to : w T X T Xw = 1.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.2">Overfitting and Regularization</head><p>Similar to other linear systems, the learned mappings can be unstable when the span{x 1 , . . . , x N } has a lower rank than M , due to the small size of training set or dependence between input features 3 . As a result, a disturbance of w with an arbitrary w * ⊥ span{x1, . . . , xN } does not change the objective function of optimization since (w + w * ) T x i = w T x i , but may dramatically change the projections of unseen test documents which are not in the spanned space. To improve the stability, we have to constrain w in some way.</p><p>Suppose rank(C) = N , then maximizing (3) is equivalent to minimizing v T C −1 v. <ref type="bibr" target="#b4">4</ref> We introduce the Tikhonov 2 Solving problem (3) itself only gives the first eigenvector v1 of C. The full optimization problem should be recursively computing vj by maximizing v T Cv with the constraint v T v = 1 and v ⊥ span{v 1 , . . . , v j−1 }. Here we state the problem as (3) for simplicity and also because its Lagrange formulism directly leads to the eigenvalue problem. 3 This will be a crucial problem when we consider nonlinear mapping in the dual form (cf. Section 2.4), since the dimensionality of data point x in the reproducing kernel Hilbert space (RKHS) could be very high, or even infinite (e.g., in case of RBF kernel). See, e.g., <ref type="bibr" target="#b12">[12]</ref>. <ref type="bibr" target="#b4">4</ref> This equivalence holds whenever C is positive definite and thus invertible. It is easy to show that matrix C is at least positive semi-definite, since we have</p><formula xml:id="formula_11">u T Cu = (1 − β)u T XX T u + βu T YY T u = (1 − β)X T u 2 + βY T u 2 ≥ 0, ∀u ∈ R N .</formula><p>In case that C is not positive definite, it suffices to use pseudo-inverse instead, or makes it so by adding a tiny positive scalar to diagonal entries. regularization <ref type="bibr" target="#b14">[14]</ref> into problem (4) as the following</p><formula xml:id="formula_12">min w∈R M w T X T C −1 Xw + γw 2 (5) subject to : w T X T Xw = 1,</formula><p>where w 2 = w T w is a penalty term and γ is a tuning parameter. The following theorem shows that the regularization term w 2 removes the ambiguity of mapping functions by restricting w in the span of x i , i = 1, . . . , N , and thus improves the stability of mapping functions.</p><p>Theorem 2. If w is an eigenvector of the generalized eigenvalue problem (5), then w must be a linear combination of x i , i = 1, . . . , N , namely</p><formula xml:id="formula_13">w = X T α = N i=1 (α) i x i where α ∈ R N .</formula><p>Problem <ref type="formula">(5)</ref> is easily solvable by setting the derivative of its Lagrange formulism with respect to w to be zero. Then we obtain a generalized eigenvalue problem</p><formula xml:id="formula_14">X T C −1 X + γI w = ˜ λX T Xw,<label>(6)</label></formula><p>which gives generalized eigenvectors w 1 , . . . , w M with eigen-</p><formula xml:id="formula_15">values˜λvalues˜ values˜λ 1 ≤ . . . ≤ ˜ λ M .</formula><p>Note we sort eigenvalues in a nondecreasing order, since we take the K eigenvectors with the smallest eigenvalues to form the mapping. The first K eigenvectors are used to form the mapping functions as the following</p><formula xml:id="formula_16">ψj(x) = w T j x, j = 1, . . . , K,<label>(7)</label></formula><p>where in this paper we focus on the projection directions and ignore possible scaling factors. As the main results we obtain Ψ(x) = [ψ1(x), . . . , ψK (x)] T which maps x into a K-dimensional space. In problem (6) we are interested in the eigenvectors with the smallest eigenvalues, whose computation is however the most unstable part in solving an eigenvalue problem. Thus we let λ = 1/ ˜ λ and turn the problem into an equivalent one:</p><formula xml:id="formula_17">X T Xw = λ X T C −1 X + γI w,<label>(8)</label></formula><p>where we are seeking the K eigenvectors with the largest eigenvalues. This gives the MLSI algorithm in primal form, as summarized in <ref type="table">Table 1</ref>.</p><formula xml:id="formula_18">Table 1: MLSI in primal form Input X ∈ R N ×M , Y ∈ R N ×L , 0 ≤ β ≤ 1, γ ≥ 0, K &gt; 0 Steps (i) Calculate C = (1 − β)XX T + βYY T ;</formula><p>(ii) Solve the generalized eigenvalue problem:</p><formula xml:id="formula_19">X T Xw = λ X T C −1 X + γI w, obtain eigenvectors w 1 , . . . , w K with largest K eigenvalues λ 1 ≥ . . . ≥ λ K . Output indexing function ψ j (x) = w T j x, j = 1, . . . , K</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">MLSI -Dual Form</head><p>So far we have considered linear mappings that project inputs x into a meaningful space V. However, Theorem 2 implies that we can also derive a nonlinear mapping Ψ.</p><formula xml:id="formula_20">Let a kernel function k x (·, ·) be the inner product in X , i.e., k x (x i , x j ) = x i , x j = x T i x j , then from Theorem 2, v = Xw = XX T α = Kxα,</formula><p>where</p><formula xml:id="formula_21">K x is the N × N kernel matrix satisfying (K x ) i,j = kx(xi, xj)</formula><p>. w 2 can also be calculated with kernel Kx:</p><formula xml:id="formula_22">w 2 = w T w = α T XX T α = α T K x α.</formula><p>Similarly, we can define a kernel function k y (·, ·) for inner product in Y and obtain a kernel matrix Ky = YY T . Then we can calculate the matrix C using kernels:</p><formula xml:id="formula_23">C = (1 − β)K x + βK y ,<label>(9)</label></formula><p>and express the dualf ormalism of problem <ref type="formula">(5)</ref> with respect to coefficients α as</p><formula xml:id="formula_24">min α∈R N α T K x C −1 K x α + γα T K x α<label>(10)</label></formula><p>subject to : α T K 2 x α = 1, which gives rise to again a generalized eigenvalue problem</p><formula xml:id="formula_25">KxC −1 Kx + γKx α = ˜ λK 2 x α.<label>(11)</label></formula><p>We obtain the generalized eigenvectors α 1 , . . . , α N , with˜λ with˜ with˜λ 1 ≤ . . . ≤ ˜ λ N . The first K eigenvectors are applied to form the mappings. The j-th mapping function, j = 1, . . . , K, is given by</p><formula xml:id="formula_26">ψ j (x) = w T j x = N i=1 (α j ) i k x (x i , x).</formula><p>As before we define λ = 1/ ˜ λ and change (11) to the following equivalent form:</p><formula xml:id="formula_27">K 2 x α = λ K x C −1 K x + γK x α,<label>(12)</label></formula><p>and hence we can choose the K eigenvectors with the largest eigenvalues. The MLSI algorithm in dual form is summarized in <ref type="table" target="#tab_0">Table 2</ref>. </p><formula xml:id="formula_28">Input X ∈ R N ×M , Y ∈ R N ×L , 0 ≤ β ≤ 1, γ ≥ 0, K &gt; 0 Steps (i) (Kx)i,j = kx(xi, xj), (Ky)i,j = ky(y i , y j ), C = (1 − β)K x + βK y ;</formula><p>(ii) Solve the generalized eigenvalue problem:</p><formula xml:id="formula_29">K 2 x α = λ K x C −1 K x + γK x α, obtain eigenvectors α 1 , . . . , α K with largest eigenvalues λ 1 ≥ . . . ≥ λ K . Output indexing function ψ j (x) = N i=1 (α j ) i k x (x i , x), j = 1, . . . , K</formula><p>Several advantages of dual MLSI can be seen from <ref type="table" target="#tab_0">Table 2</ref>. First of all, in contrast of solving a generalized eigenvalue problem for M × M matrices in primal MLSI, in dual MLSI we only need to solve a similar problem for N × N matrices. In a general indexing problem, the input dimension M (i.e., number of words) is much larger than the number of documents N , and therefore working in dual form is more efficient. In the experiments we will use the dual form for indexing. Second, MLSI in dual form is ready to deal with nonlinear mappings. For this we consider a nonlinear mapping φ : x ∈ X → φ(x) ∈ F , which maps x into a high-dimensional or even infinite-dimensional feature space</p><note type="other">F , and change X to be [φ(x 1 ), . . . , φ(x N )] T . Then the kernel function is accordingly defined as</note><formula xml:id="formula_30">k x (x i , x j ) = φ(x i ), φ(x j ) F ,</formula><p>where we still have K x = XX T . Therefore, we can directly work with kernels (e.g., RBF kernel k x (x i , x j ) = exp(−−x i − xj 2 /2σ 2 )), without knowing φ(·) explicitly. Similarly, we can define a nonlinear mapping for Y and directly work on the corresponding kernel matrix K y . Although this paper mainly considers the linear kernel to explore the linear correlation of inputs and multivariate labels, the formulism implies that the method can generally handle more complex inputs and outputs (e.g., images) by using some other suitable kernels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">CONNECTIONS TO RELATED WORK</head><p>The proposed algorithm MLSI is seen to solve the same optimization problem as LSI when β = 0, as seen in <ref type="formula">(1)</ref> and <ref type="bibr" target="#b1">(2)</ref>. Therefore MLSI takes as special case the unsupervised LSI, or more specifically, kernel PCA <ref type="bibr" target="#b10">[10,</ref><ref type="bibr" target="#b11">11]</ref>. Kernel PCA is the dual form of PCA and turns out to solve the eigenvalue problem K x α = λα with kernel matrix (K x ) i,j = kx(xi, xj). To build this connection, we see from (9) that C = Kx holds when β = 0 in MLSI. Therefore from Table 2 it is easy to check that MLSI solves the generalized eigenvalue problem</p><formula xml:id="formula_31">K 2 x α = λ(1 + γ)K x α,</formula><p>which is identical to kernel PCA since Kx is invertible. Under this situation, the regularization term controlled by γ is just a rescaling of the cost function, as can be seen in (10).</p><p>Hence γ is just a nuisance parameter and we obtain rescaled eigenvalues compared to kernel PCA. From this perspective, MLSI in general performs label informed kernel PCA or supervised kernel PCA, since it can be viewed as directly modifying the kernel matrix C with label information. In the literature there are some other well-known supervised projection methods, like linear discriminant analysis (LDA) (e.g., <ref type="bibr" target="#b13">[13]</ref>), canonical correlation analysis (CCA) (e.g., <ref type="bibr" target="#b6">[6,</ref><ref type="bibr" target="#b2">3]</ref>) and partial least squares (PLS) <ref type="bibr" target="#b15">[15,</ref><ref type="bibr" target="#b9">9]</ref>. MLSI substantially differs from them. LDA is focusing on single classification problem where the output is one-dimensional, while in contrast MLSI considers predictions with multivariate labels and is thus more general. CCA finds the correlations between two representatives of the same documents (e.g., inputs X and outputs Y in our setting) by minimizing vx − vy 2 subject to both vx and vy being unitary and linear mappings of x i and y i (see a recent discussion in <ref type="bibr" target="#b2">[3]</ref>). However, it does not require the projections v x and v y to promise low-reconstruction error of x and y and thus ignores the intra correlation of either (especially y). Instead, MLSI takes into account all the inter and intra dependencies, since the projections minimize the reconstruction error of inputs and outputs simultaneously. PLS can be seen as a penalized CCA, but it cannot find a space of larger dimensionality than that of Y, thus its generalization performance on new dimensions of outputs is restricted (see discussions in <ref type="bibr" target="#b14">[14]</ref>). Instead, MLSI can find in principle N orthogonal dimensions (if K x is positive definite). In this section we evaluate the proposed MLSI algorithm based on the task of multi-label text classification, in which we allow one document to be assigned to multiple labels. One can treat each classification problem separately, but these problems could have correlations between each other and could be solved simultaneously. We solve this problem by applying MLSI and encoding the labelling information into the mapping, and then each classification problem is solved independently using the projected features. By incorporating the output information that may be difficult to reveal from inputs, the indexing is biased by the specific classification tasks and is thus more suitable for discriminate analysis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">EMPIRICAL STUDY</head><p>We compare the classification performance using features learned by MLSI and normal LSI, where in the latter case no labelling information is used in indexing. Experiments are performed on two text data sets taken from Reuters-21578 and RCV1, respectively, followed by detailed discussions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Data Sets and Preparation</head><p>Our first data set is a text corpus which contains all the documents in Reuters-21578 that are associated with multiple categories. Eliminating those minor categories that contain less then 50 documents, we have 47 categories to work with. Picking up all the words that occur at least in 5 documents, we finally obtain 1600 documents with 6076 words that are used in computing TFIDF feature vectors. In average, each document is assigned to 2.48 categories, and each category has 85 positive documents.</p><p>The other data set is a subset of the RCV1-v2 text data set, provided by Reuters and corrected by Lewis et al. <ref type="bibr" target="#b7">[7]</ref>. The data set contains topics, regions and industries information to each document and a hierarchical structure for topics and industries. Since it is common that one document is assigned to multiple topics, this is an ideal data set for multi-label text classification. We use topics as the classification tasks and simply ignore the topic hierarchy. A small part of the data set is chosen, and similar preprocessing as for Reuters-21578 is done by picking up words with more than 5 occurrences and topics with more than 50 positive assignments. We end up with 3588 documents with 5496 words, and have 79 topics left. In average, each topic contains 180 positive documents, and each document belongs to 3.96 topics. In the following we denote "Reuters" and "RCV1" for these two data sets respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Experimental Design</head><p>We have two settings in this experiment. In the first setting (I), we randomly pick up 70% categories for classification and employ 5-fold cross-validation with one fold training and 4 folds testing. This is a standard classification setting, and our goal is to evaluate whether the feature mappings are generalizable to new data points. The second setting (II) aims to test the generalization performance of the projection methods on new categorization tasks. For this we consider the classification problems for the rest 30% categories. To make a fair comparison, we perform 5-fold cross-validation on previous unseen data (with the same size as training data), using the feature mappings derived from setting (I).</p><p>We will compare the following three methods in our experiment:</p><p>1. Original Features: A linear SVM with all the text features is trained for each category, and this serves as the baseline for comparison. 2. LSI: Standard unsupervised projection is performed which maps the input data into a low-dimensional space. Then a linear SVM is trained on this projected space.</p><p>3. MLSI: Additional label information for training data is used for making a supervised mapping. Then the same SVM is trained on this projected space.</p><p>In both of the projection methods LSI and MLSI, we use the dual form in this experiment simply because this gives much improved efficiency. In case of linear kernels, this will give the same results as that in primal form. The classification performance is compared using F 1 Macro, Micro and AUC (Area Under Curve) score. F 1 -measure defines a trade-off between precision and recall, and is known to be a good metric for classification evaluation. In case of multiple outputs, F1 Macro is just the arithmetic average of F 1 measures of all output dimensions, and F 1 Micro can be seen as a weighted average. Alternatively, AUC score is the area under the ROC (receiver operating characteristics) curve, which plots sensitivity versus 1-specificity. It is known to measure the objective quality of ranking for specific classification problems. A higher AUC indicates a better ranking. It is also averaged over all the output dimensions. We also tried classification accuracy, but didn't get informative comparison because most of the classification problems are very unbalanced (more than 90% of data are negative examples).</p><p>We choose all the parameters for these algorithms as follows. We use LIBSVM with linear kernel and fix C = 100, which gives Original Features the best performance and is then fixed for the other two methods. For MLSI we set the parameter β to 0.5 after we scale K x and K y to ensure they have equal traces for balance. γ is simply fixed as 0 to give the best performance. For both settings we repeat the experiments 50 times with randomization, and the performance versus dimensionality of projection is shown with means and standard deviations in <ref type="figure" target="#fig_0">Figure 1</ref> and <ref type="figure" target="#fig_2">Figure 2</ref> for Reuters and RCV1, respectively.</p><p>The first observation from these figures is that MLSI outperforms LSI in all the cases for setting (I). This indicates that the mapping functions in MLSI are generalizable to new test data, by incorporating the output information for the training data.</p><p>Another encouraging observation is that MLSI in most cases can even lead to better classification performance than Original Features, which uses at least 50 times more features. MLSI in this case can not only greatly accelerate the classification tasks, but also improve the performance. This is especially true for F1 Macro and AUC score, where a large gap can be observed for all the figures. For F1 Micro the effect of MLSI is mixed, and an interesting decrease can be observed in <ref type="figure" target="#fig_0">Figure 1</ref>(e) and <ref type="figure" target="#fig_2">Figure 2</ref>(e). Consider the difference between F 1 Macro and F 1 Micro measures, these results indicate that MLSI is particularly useful for classification problems with small positive training examples, since by randomly choosing training data we are more likely to choose small positive examples for them. For large classes that have lots of training data, SVMs with full features can already do a very good job.</p><p>MLSI has two tunable parameters β and γ that controls the kernel combination weights and the strength of regularization, respectively. For previous figures it is assumed fixed, and in this last experiments we study the classification performance when they varied. Since we can see similar results for both data sets on all the evaluation measures, we A first impression from <ref type="figure" target="#fig_3">Figure 3</ref> is that the curves are rather smooth (except when β approaching 1 in setting (II)). This indicates that the performance is not very sensitive to small changes of β value. When β increases from 0 to 1, it is seen that all the curves first increase and then decrease, indicating that a good trade-off should be identified for best performance. When β approaches 0, MLSI tends to be LSI and thus unsupervised. Outputs are ignored in this case, and poor performance is observed for both settings. On the other hand when β approaches 1, the mappings tend to solely explain outputs Y, ignoring the intrinsic structure of inputs X. This also leads to poor performance, especially for setting (II) because the mappings are not good to generalize to new outputs. Overfitting occurs in this case, where a sharp decrease can be observed with even a much worse performance than LSI (β = 0). Finally, β = 0.5 is seen to be a good trade-off for both settings. From our experiences, a slightly larger β (e.g., 0.6) is better for setting (I), and a slightly smaller β (e.g., 0.4) is more stable for setting (II). For γ we have the observation that small γ leads to better performance for setting (I), while an appropriately chosen γ is necessary for setting (II). This reflects its regularization effect, since for setting (II) new categories are considered and setting γ = 0 will lead to overfitting.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">CONCLUSIONS</head><p>In this paper we propose a novel indexing algorithm MLSI for multi-label informed latent semantic indexing. The mappings are supervised and retain the statistical information of not only input features but also the multivariate outputs. We present both the primal and the dual formalisms for the linear mappings, and nonlinear mappings can also be derived by using reproducing kernels. The final solution ends up as a simple generalized eigenvalue problem that can be easily solved. The algorithm is applied for multi-label text classification with very encouraging results. Currently we are mainly exploiting linear dependency of inputs as well as outputs. In the near future we plan to apply the algorithm to other types of objects like images with suitable kernels (e.g., RBF kernels), and define kernels to explore richer structured outputs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. PROOFS A.1 Proof of Theorem 1</head><p>Applying the rule C 2 = Tr CC T for an arbitrary matrix C, we obtain</p><formula xml:id="formula_32">J(A, B, V) : = (1 − β)X − VA 2 + βY − VB 2 = (1 − β)Tr XX T − 2VAX T + VAA T V T + βTr YY T − 2VBY T + VBB T V T .</formula><p>Let the derivative of J with respect to A and B be zero, we have</p><formula xml:id="formula_33">∂J ∂A = 2(1 − β)(V T X − V T VA) = 0 ⇒ A = V T X, ∂J ∂B = 2β(V T Y − V T VB) = 0 ⇒ B = V T Y,</formula><p>which proves (a). Then we use the results (a) to replace A and B in J and obtain Jopt = Tr [C] − Tr V T CV , which is first part of (c).</p><p>Since Tr <ref type="bibr">[C]</ref> is fixed, this suggests that problem (2) can be considered to be an optimization problem only with respect to V:</p><formula xml:id="formula_34">max V∈R N ×K Tr V T CV<label>(13)</label></formula><p>subject to: V T V = I.</p><p>For notation simplicity, we denote the optimal solution for V as˜Vas˜ as˜V = [˜ v 1 , . . . , ˜</p><p>v K ] for a moment. The Lagrange formalism of problem <ref type="formula" target="#formula_34">(13)</ref> is</p><formula xml:id="formula_35">L( ˜ V, ˜ Λ) = K i=1˜v i=1˜ i=1˜v T i C˜vC˜v i − K i=1˜λ i=1˜ i=1˜λ i,i (˜ v T i ˜ v i − 1) − 2 i&gt;j˜λ i&gt;j˜ i&gt;j˜λ i,j ˜ v T i ˜ v j ,</formula><p>where ( ˜ Λ) i,j = ˜ λ i,j is a symmetric matrix if we define˜λdefine˜ define˜λ i,j = ˜ λ j,i for i &lt; j. Setting its derivative with respect tõ v i to be zero, we obtain</p><formula xml:id="formula_36">∂L ∂ ˜ v i = 2C˜v2C˜v i − 2 K j=1˜λ j=1˜ j=1˜λ i,j ˜ v j = 0, i = 1, . . . , K</formula><p>which can be rewritten as C ˜ V = ˜ V ˜ Λ. Since˜ΛSince˜ Since˜Λ is a symmetric matrix, we have˜Λhave˜ have˜Λ = R T ΛR where Λ is a diagonal matrix and R ∈ R K×K is an orthogonal rotation matrix satisfying RR T = R T R = I. Then</p><formula xml:id="formula_37">C ˜ V = ˜ VR T ΛR ⇒ C ˜ VR T = ˜ VR T Λ</formula><p>Since Λ is diagonal, it is easy to see that the columns of V = ˜ VR T are the eigenvectors of C. Thus the optimal˜Voptimal˜ optimal˜V is formed by an arbitrary rotation of C's eigenvectors, i.e. ˜ V = VR. Inserting˜VInserting˜ Inserting˜V back into the objective function, we have the value of objective function as Tr <ref type="bibr">[Λ]</ref>, i.e., sum of the K corresponding eigenvalues of C. It is easy to see that the maximal Tr <ref type="bibr">[Λ]</ref> is the sum of the K largest eigenvalues, which proves second part of (c). In this case, ˜ V is an arbitrary rotation of the K largest eigenvectors, thus conclusion (b) holds.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2 Proof of Theorem 2</head><p>Let J(w) denote the cost function in (5), i.e., J(w) := w T X T C −1 Xw + γw 2 .</p><p>Obviously J(w) achieves the minimum at the first eigenvector w of the generalized eigenvalue problem (6). Denote w as the projection of w on the subspace span{x 1 , . . . , x N }, then we can write w = w + w ⊥ , where w ⊥ is orthogonal to the subspace. Compare J(w ) with J(w). We have</p><formula xml:id="formula_38">w T x i = w T x i + w T ⊥ x i = w T x i ,</formula><p>so Xw = Xw, which means J(w ) and J(w) agree on the first term. Since w 2 = w 2 + w ⊥ 2 ≥ w 2 , J(w) ≥ J(w ) holds. However, this must be an equation since J(w) achieves the minimum. Therefore we have w ⊥ = 0, and hence w ⊥ = 0, which means w is actually a linear combination of x i , i = 1, . . . , N . So far we have proved the theorem for the first eigenvector (with the smallest eigenvalue). Given eigenvectors w j , j = 1, . . . , n− 1, it is known that the n-th eigenvector is obtained by first deflating the matrix C −1 with C † = C −1 − n−1 j=1 λ j Xw j w T j X T , and then solving the following problem min w∈R M w T X T C † Xw + γw 2 subject to : w T X T Xw = 1.</p><p>Following the same procedure as before, we can prove that the eigenvector w n also lies in the span of x i , i = 1, . . . , N .</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Theorem 1 .</head><label>1</label><figDesc>Denote C = (1 − β)XX T + βYY T , and let λ1 ≥ . . . ≥ λN be eigenvalues of C with corresponding eigen- vectors v1, . . . , vN . If V, A and B are the optimal solutions to problem (2), then:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Classification performance on Reuters data set. Upper rows ((a),(b),(c)) show results with setting (I), and lower rows ((d),(e),(f )) show results with setting (II).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Classification performance on RCV1 data set. Upper rows ((a),(b),(c)) show results with setting (I), and lower rows ((d),(e),(f )) show results with setting (II).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Performance of MLSI with respect to β ((a),(b)) and γ ((c),(d)) for Reuters data set. (a),(c) show results with setting (I), and (b),(d) show results with setting (II).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Table 2 : MLSI in dual form</head><label>2</label><figDesc></figDesc><table></table></figure>

			<note place="foot" n="1"> An equivalent version of (1) has the same objective function but instead constraining AA T = I. The difference between the obtained projections and the computed V in (1) is just a linear scaling caused by the top K singular values of X. Here we consider the form (1) for the convenience of deriving the extensions in next section.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Latent semantic-space: iterative scaling improves precision of inter-document similarity measurement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">K</forename><surname>Ando</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 23rd Annual International ACM SIGIR Conference</title>
		<meeting>the 23rd Annual International ACM SIGIR Conference</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="216" to="223" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Indexing by latent semantic analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">C</forename><surname>Deerwester</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">T</forename><surname>Dumais</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">K</forename><surname>Landauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">W</forename><surname>Furnas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Harshman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the American Society of Information Science</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="391" to="407" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">R</forename><surname>Hardoon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Szedmak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shawe-Taylor</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Canonical correlation analysis; an overview with application to learning methods</title>
		<idno>CSD-TR-03-02</idno>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
		<respStmt>
			<orgName>Royal Holloway University of London</orgName>
		</respStmt>
	</monogr>
<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">The Elements of Satatistical Learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hastie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Tibshirani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Friedman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
			<publisher>Springer Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Locality preserving indexing for document representation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W.-Y</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 27th Annual International ACM SIGIR Conference</title>
		<meeting>the 27th Annual International ACM SIGIR Conference</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="96" to="103" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Relations between two sets of variables</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hotelling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biometrika</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="321" to="377" />
			<date type="published" when="1936" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">RCV1: A new benchmark collection for text categorization research</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">D</forename><surname>Lewis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Rose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="361" to="397" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Multi-label text classification with a mixture model trained by EM</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mccallum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI&apos;99 Workshop on Text Learning</title>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Kernel partial least squares regression in reproducing kernel hilbert space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rosipal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">J</forename><surname>Trejo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="97" to="123" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Nonlinear component analysis as a kernel eigenvalue problem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Schölkopf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Smola</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-R</forename><surname>Müller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Computation</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="1299" to="1319" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Kernel principal component analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Schölkopf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Smola</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-R</forename><surname>Müller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Kernel Methods -Support Vector Learning</title>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="327" to="352" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Learning with Kernels</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Schölkopf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J</forename><surname>Smola</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<publisher>MIT Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Kernel Methods for Pattern Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shawe-Taylor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Cristianini</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
			<publisher>Cambridge Univeristy Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Solutions of Ill-Posed Problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">N</forename><surname>Tikhonov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><forename type="middle">Y</forename><surname>Arsenin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1977" />
			<publisher>Wiley</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Soft modeling by latent variables; the nonlinear iterative partial least squares approach. Perspectives in Probability and Statistics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Wold</surname></persName>
		</author>
		<editor>Honour of M.S. Bartlett</editor>
		<imprint>
			<date type="published" when="1975" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
