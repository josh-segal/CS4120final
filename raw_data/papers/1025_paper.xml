<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:37+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Curvature-Based Computation of Antipodal Grasps</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yan-Bin</forename><surname>Jia</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Iowa State University Ames</orgName>
								<address>
									<postCode>50011-1040</postCode>
									<region>IA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Curvature-Based Computation of Antipodal Grasps</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>It is well known that antipodal grasps can be achieved on curved objects in the presence of friction. This paper presents an efficient algorithm that finds, up to numerical resolution, all pairs of antipodal points on a closed, simple, and twice continuously differentiable plane curve. Dissecting the curve into segments everywhere convex or everywhere concave, the algorithm marches simultaneously on a pair of such segments with provable convergence and inter-leaves marching with numerical bisection. It makes use of new insights into the differential geometry at two antipodal points. We have avoided resorting to traditional nonlinear programming which would neither be quite as efficient nor guarantee to find all antipodal points. Dissection and the coupling of marching with bisection introduced in this paper are potentially applicable to many optimization problems involving curves and curved shapes.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>A grasp on an object is force closure if and only if arbitrary force and torque can be exerted on the object through the finger contacts. Two fingers in frictional contact with a 2D curved shape can form a force-closure grasp if they are placed at two points whose inward normals are opposite and collinear. Such a grasp is referred to as an antipodal grasp while the two points are referred to as antipodal points. For example, the closed curve in <ref type="figure" target="#fig_1">Figure 1</ref> has eight pairs of antipodal points (numbered the same within each pair).</p><p>We present a fast algorithm that finds all antipodal points on a general closed plane curve. The novelty of this algorithm lies in (a) its dissection of the curve into segments turning in one direction, and (b) its combination of numerical bisection and marching with provable convergence.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Related Work</head><p>Hong et al. <ref type="bibr" target="#b4">[5]</ref> proved the existence of two pairs of antipodal points on a closed, simple, and smooth convex curve or surface. Chen and Burdick <ref type="bibr" target="#b2">[3]</ref> computed antipodal points on 2D and 3D shapes through minimizing a grasping energy function. Blake and Taylor <ref type="bibr" target="#b1">[2]</ref> gave a geometric classification of two-fingered frictional grasps of smooth contours. Ponce et al. <ref type="bibr" target="#b11">[11]</ref> employed parallel cell decomposition to compute pairs of maximal-length segments on a piecewise-smooth curved 2D object that guarantee force closure with friction.</p><p>Nguyen <ref type="bibr" target="#b9">[9]</ref> described simple algorithms for synthesizing independent grasp regions on polygons and polyhedra, with or without friction. Markenscoff et al. <ref type="bibr" target="#b8">[8]</ref> determined the number of fingers to immobilize 2-D and 3-D objects with piecewise smooth boundaries. We refer the reader to <ref type="bibr" target="#b0">[1]</ref> for a survey of research on grasping and contact.</p><p>In preprocessing our algorithm finds points of simple inflection. In <ref type="bibr" target="#b3">[4]</ref> Goodman gave an upper bound on the number of inflection points on parametric spline curves. Manocha and Canny <ref type="bibr" target="#b7">[7]</ref> used the Sturm sequence method to find inflection points on rational curves. Sakai <ref type="bibr" target="#b12">[12]</ref> obtained the distribution of inflection points and cusps on a parametric rational cubic curve.  This excludes a circle on which any two points determining a diameter are antipodal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Antipodal Points</head><formula xml:id="formula_0">on 9 : £ g @ C ¦ v % £ H I ¦ ' D or equivalently, (1) £ A @ R ¦ v % £ ¥ H I ¦ ' w 6 (2) Let x £ g @ y D I H I ¦ £ g @ C ¦  ) £ ¥ H I ¦ . Since  X   X  £ g @ C ¦  ) £ 5 2 ! £ H I ¦ £ H I ¦ I ¦ 2 ! £ ¥ H I ¦  ( '</formula><p>, by the Implicit Function Theorem, the equation A pair of points may be antipodal only if their normals do not point away from each other. We add a fifth condition:</p><formula xml:id="formula_1">(v) £ A @ C ¦    1 ¢ £ H I ¦  2 ¢ £ A @ C ¦ 5 4 s U ' for all @    £ g @ B D f @ G ¦ .</formula><p>Differentiate (2) and then plug (1) in:</p><formula xml:id="formula_2">£ ! £ g @ C ¦ t 2 ! £ ¥ H I ¦       ¦ £ g @ C ¦ b ' w 6 Thus ! £ g @ C ¦ X 2 ! £ H I ¦       b ' and      d  f e  h g  i e  g .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Antipodal Angle</head><p>Define the antipodal anglej</p><formula xml:id="formula_3"> k £ g @ C ¦</formula><p>as the rotation angle from the normal . To determine k f , we first calculate the derivative:</p><formula xml:id="formula_4">£ g @ C ¦ to the vector l £ A @ C ¦ m ¢ £ H I ¦ R 2 ¢ £ g @ C ¦ (see Fig- ure 2). Under condition (v), k  n £ 5 2 p o  D y o  ¦ . By definition, @ N s ( ) N t ( ) T s ( ) r s ( ) s t θ ( ) T t S T</formula><formula xml:id="formula_5">c c @ ¨  l £ g @ C ¦ ¨ s r £ ¥ H I ¦       2 £ g @ C ¦ I t i  l £ A @ R ¦ ¨  l £ A @ R ¦ ¨ v u ! £ g @ C ¦ ! £ H I ¦ % x w  y Q z | { i k 7 6</formula><p>From <ref type="figure" target="#fig_3">Figure 2</ref> we see that</p><formula xml:id="formula_6">y I z } { i k s d £ g @ C ¦ ) l £ g @ C ¦ Q ~ ¨  l £ A @ C ¦ ¨ .</formula><p>Differentiate both sides of this equation and substitute</p><formula xml:id="formula_7">    ¨  l £ A @ R ¦ ¨</formula><p>in. After a few more steps, we obtain </p><formula xml:id="formula_8">k £ g @ C ¦ 2 ! £ A @ R ¦ v %  ©  y  k ¨  l £ g @ C ¦ ¨ u ! £ A @ R ¦ ! £ H I ¦ % X w  6<label>(3</label></formula><formula xml:id="formula_9"> &amp;    Q          F  ¥      F  and  d ¥    Q      &amp;      F        Q  . </formula><p>In <ref type="bibr" target="#b1">[2]</ref>, it is referred to as the friction angle.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Two Concave Segments</head><p>In this case,</p><formula xml:id="formula_10">! £ g @ C ¦ 0 S ' and ! £ ¥ H I ¦ 0 S '</formula><p>; by (3),</p><formula xml:id="formula_11">k y £ A @ R ¦ i U '</formula><p>. </p><formula xml:id="formula_12">and k £ g @ C G f ¦ 0 U '</formula><p>then a unique pair of antipodal points exists. Otherwise, no antipodal points exist.</p><formula xml:id="formula_13">When k £ A @ B ¦  S ' and k £ g @ G ¦  U '</formula><p>, we use bisection to find the antipodal points. Initialize</p><formula xml:id="formula_14">£ g @ X P D I H h C ¦ ¢ ¡ £ £ g @ B D Q H B ¦ and £ g @ " D Q H " ¦ p ¡ ¤ £ A @ G D I H G ¦ . Then evaluate @  ¡  h ¥ I ¦ &amp;  Q §  and find its opposite point H  . If k £ A @  ¦ U ' , set £ A @ " D Q H " ¦ i ¡ ¨ £ g @  D I H  ¦ ; otherwise set £ A @ x P D I H h C ¦ © ¡ ª £ g @  D Q H  ¦ .</formula><p>Repeat the above steps until  . The first pair will be found through "marching" described in Section 2.3.1 if</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Two Convex Segments</head><formula xml:id="formula_15">k £ g @ B ¦ and k £ g @ G ¦</formula><p>have the same sign or through bisection in Sections 2.3.2 if they have different signs. Section 2.3.3 will describe how all the remaining pairs can be found by letting the two strategies invoke each other recursively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.1">Endpoint Antipodal Angles with the Same Sign</head><p>The marching strategy will rely on the following result. Proof We need only show that</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proposition 2 When</head><formula xml:id="formula_16"> l    ) l S '</formula><p>. Differentiating the vector</p><formula xml:id="formula_17">l yields c y l c @ c c @ 1 ¢ £ ¥ H I ¦  2 ¢ £ g @ C ¦ 4 « £ H I ¦ u % ! £ g @ C ¦ ! £ ¥ H I ¦ w 6 Since ! £ A @ C ¦  D ! £ H I ¦ e U ' , we have %  i e  h g  f e  g U '</formula><p>.</p><p>Hence</p><formula xml:id="formula_18"> l    is in the direction of £ ¥ H I ¦ . Meanwhile, from condition (v) that l £ g @ C ¦   £ A @ C ¦  U ' it follows that £ g @ C ¦ ) l £ g @ C ¦  U ' and £ H I ¦ ¢ ) l £ g @ C ¦ 0 S ' . Therefore  l e  5 g    ) l £ g @ C ¦ ¢ S '</formula><p>. ¬ <ref type="figure">Figure 4</ref> illustrates the working of an iterative method when</p><formula xml:id="formula_19">k £ g @ C B i ¦ T S ' and k £ A @ C G Q ¦ T S '</formula><p>. where</p><formula xml:id="formula_20">£ H 5 ® ¦ " ¦ % £ g @ R ® ¦ " ¦ ¯ '</formula><p>. The iteration continues until Below we establish the correctness of the procedure when</p><formula xml:id="formula_21">k £ g @ C B i ¦ ¢ S ' and k £ g @ C G Q ¦ i S ' .</formula><p>Lemma 3 In the case</p><formula xml:id="formula_22">k £ A @ C B i ¦ ¢ S ' and k £ g @ C G f ¦ 0 S ' of the pro- cedure Antipodal-Convex-March, @ ® U ( @ ® ¦ "</formula><p>and every</p><formula xml:id="formula_23">@ ±   ² @ ® ¦ " D f @ ® ¦ satisfies k £ g @ C ¦ 0 S ' for all ­  ³ W ' . Proof We use induction. That k £ g @ ¦ ´ k £ A @ C G Q ¦ V S '</formula><p>follows directly from the initial condition. Suppose</p><formula xml:id="formula_24">k £ g @ ® ¦ i S ' . The normal £ A @ C ¦ rotates clockwise as @ decreases from @ ® . Also since £ g @ ® ¦  ) l £ g @ ® ¦  S '</formula><p>and the normal</p><formula xml:id="formula_25">£ A @ ® ¦ " ¦ , if @ ® ¦ "</formula><p>exists, is in the direction of</p><formula xml:id="formula_26">l £ g @ ® ¦</formula><p>, we know that ; hence</p><formula xml:id="formula_27">@ ® ¦ " S m @ ® and £ A @ R ¦ i ) l £ A @ ® ¦ µ S ' D for all @   ¶ £ g @ ® ¦ " D F @ ® ¦ .<label>(4</label></formula><formula xml:id="formula_28">l £ A @ X ® · ¦ 0 ) l £ g @ C ¦ 0 S ' D for all @   ¶ ² @ X ® ¦ " D F @ R ® · ¦ .<label>(5)</label></formula><p>Combining inequalities (4) and (5) with condition (v) that  , defined by</p><formula xml:id="formula_29">£ g @ C ¦ 3  l £ g @ C ¦ 0 U ' over £ g @ B D f @ G ¦ , we infer that £ g @ C ¦ 0 ) l £ g @ C ¦ ¢ S ' D for all @   ¶ ² @ X ® ¦ " D F @ R ® g ¦ 6 s a O s O t t i s* s i i+1 t t* i+1 s t* 1/κ( ) s* t a s b t b T i ( ) s i+1 T ( ) s i+1 N ( )</formula><formula xml:id="formula_30">q © ½    q y  ¥   ½ ¥  . Thus k £ g @ C ¦ 0 S ' for all @    ² @ R ® ¦ " D f @ R ® A</formula><formula xml:id="formula_31">£ A @ R ® ¦ " ¦ 0 ) l £ g @ R ® · ¦ m '<label>(6)</label></formula><p>is monotonically decreasing and no antipodal point exists on</p><formula xml:id="formula_32">² @ R ® I D F @ G ¦ ¿ ¾ ® À  Á " ² @ À D f @ À C Â " ¦ for all ­ U '</formula><p>. Suppose the segment  defined implicitly by (6) at</p><formula xml:id="formula_33">@ Y  : @ X ® ¦ " 2  @  AE £ A @ R ® A ¦ 3 2 AE £ g @  ¦ AE £ A @  ¦ x £ g @ R ® 2  @  ¦ v % (  x  X  6</formula><p>Below we determine </p><formula xml:id="formula_34">y I z } { 0 k ® Ç £ A @ ® ¦ ± ) £ g @ ® ¦ " ¦ .</formula><p>Differentiating both sides of this equation with respect to </p><formula xml:id="formula_35">@ ® yields  x  y  k ® k £ A @ ® ¦ 2 ! £ g @ ® ¦ £ A @ ® ¦ ¢ ) £ g @ ® ¦ " ¦ È % £ g @ ® ¦ i ) 1 2 ! £ g @ ® ¦ " ¦ AE £ A @ ® ¦ £ g @ ® ¦ " ¦ 4 2 ! £ g @ R ® · ¦  ©  y  k ®  % ! £ A @ X ® ¦ " ¦ AE £ g @ R ® · ¦  ©  y  k ®</formula><formula xml:id="formula_36">AE £ g @  ¦ k y £ A @ C  X ¦ ! £ g @  ¦ % ! £ g @ Y  X ¦ &amp; % ! £ H Q  X ¦ ! £ g @  ¦ ! £ H  ¦ ¨ © l £ g @  ¦ ¨ U ' w 6<label>(7)</label></formula><p>Note that the iteration starts at must hold.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.2">Endpoint Antipodal Angles with Different Signs</head><p>In this case, the two antipodal angles </p><formula xml:id="formula_37">£ A @ Y  x ¦ 0 U ' or k f £ A @ C  X ¦ 0 S ' .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.3">Finding All Pairs of Antipodal Points</head><p>After finding one pair of antipodal points . Therefore the interval</p><formula xml:id="formula_38">£ g @ B D F @ Y  p 2 Ë  ¦</formula><p>contains at least one antipodal point. So we need to invoke the proce-</p><formula xml:id="formula_39">dure Antipodal-Convex-Bisect £ A @ R B P D f @ Y  Ì 2 Í Ë R D I H I B P D Q H Q   2 Í Î i ¦</formula><p>, where</p><formula xml:id="formula_40">H Q  ± 2 m Î is the opposite pointÏ of @ Y   2 Ð Ë . Similarly, when k £ A @ R B Y ¦ e U ' and k £ A @ R G f ¦ p U '</formula><p>, the interval</p><formula xml:id="formula_41">£ A @ Y  d % m Ë R D f @ R G F ¦</formula><p>contains at least one antipodal point. We need to invoke , where</p><formula xml:id="formula_42">Antipodal-Convex-Bisect £ g @ Y   % t Ë R D F @ C G © D Q H Q   % t Î Y D I H I G F ¦ . Suppose k £ g @ C B i</formula><formula xml:id="formula_43">Ù  ¥    È  n Ù   ¸   , Ù d  ¥    Q    m Ù   ¸  </formula><p>, and</p><formula xml:id="formula_44">Ú   ¥      Û  Ú    ¸   . Antipodal-Convex- March starts the iteration at    and¸·</formula><p>and¸ and¸·  and finds the first pair of antipodal points</p><formula xml:id="formula_45"> ¡ u and¸¡ and¸ and¸¡ u . Next, Antipodal-Convex-Bisect is invoked on  ¥   f Ø  ¡ u Û V Ü I  and   ¸  f Ø ¸ ¡ u Û © Ý u </formula><p>, where</p><formula xml:id="formula_46">Ú    ¸ ¡ u Û T Ý u  &amp;  Û  Ú   ¥  ¡ u Û  Ü I </formula><p>, and finds a second antipodal pair</p><formula xml:id="formula_47"> ¡  and¸¡ and¸ and¸¡ </formula><p>. Finally, Antipodal-Convex-March is invoked again, on the pair</p><formula xml:id="formula_48"> ¥  f  Ø  ¡  Û T Ü Q  and   ¸ ·  Ø ¸ ¡  Û V Ý  </formula><p>and on the pair</p><formula xml:id="formula_49"> ¥  ¡  § Þ Ü Ø  ¡ u Û V Ü I  and   ¸ ¡  Þ Ý  Ø ¸ ¡ u Û V Ý u </formula><p>, respectively. It finds no more antipodal points.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Convex and Concave Segments</head><p>Without loss of generality, suppose 8 is convex and 9 is concave. We again compare the signs of the antipodal angles at the two endpoints of 8 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4.1">Endpoint Antipodal Angles with the Same Sign</head><p>We first determine if one of the rays extending the normals points vertically upward, as shown in <ref type="figure">Figure 7</ref>. Under condition (v), . Since</p><formula xml:id="formula_50">k £ g @ C G f ¦ has the same sign, k £ A @ R G f ¦ Ê U '</formula><p>. Then  reach the other endpoints, in which case no antipodal points exist, or if they converge to a pair of antipodal points.   </p><formula xml:id="formula_51">x £ g @  ¦ ( ! £ g @  ¦ ¨ x ¢ £ ¥ H  ¦ Ì 2 ¢ £ g @  ¦ ¨ 2 ! £ A @ C  R ¦ ! £ H  ¦ 6 (9) Because ! £ g @ Y  x ¦ T U ' and ! £ H Q  X ¦ T S ' , x  £ A @ Y  x ¦ T U ' . Because k £ g @ ® ¦ ¢ S ' , for ­ Ì m ' D D 6 x 6 x 6</formula><p>, we see that</p><formula xml:id="formula_52">k £ g @  ¦ 2 ! £ g @  ¦ &amp; % ¨ © l £ g @  ¦ ¨ u ! £ A @  ¦ ! £ H  ¦ % w U ' 7 6<label>(10)</label></formula><p>in the non-degenerate case. This implies that</p><formula xml:id="formula_53">' S x  £ g @ Y  R ¦ ¢ S</formula><p>. Hence the algorithm converges in linear rate. It also follows from (10) that¨x</p><formula xml:id="formula_54">that¨ that¨x ¢ £ ¥ H Q  x ¦  2 ¢ £ g @ Y  R ¦ ¨ S "  f e  Q ã F g % "  f e  ã F g 6</formula><p>Geometrically, the osculating circle at   3. Enumerate all pairs of segments. For each pair, determine if any of their endpoints are antipodal. If not, shorten the segments until condition (iii) is satisfied. To illustrate, for the pair in <ref type="figure" target="#fig_16">Figure 9</ref>(c), we intersect the cone of inward normals over</p><formula xml:id="formula_55">z 1 N ( ) N ( ) z 3 N ( ) z 2 N ( ) z4 N ( ) z 3 - u 1 N ( ) N ( ) z4 - u 2 N ( ) z 3 z 2 z 1 z4 z 2 z 1 u 1 z 3 z4 u 2 u 1 z 3 z4 s b t b ta s a κ &gt; 0 κ &lt; 0 κ &gt; 0 κ &lt; 0 (a) (b) (c)<label>(d)</label></formula><formula xml:id="formula_56">£ H I B P D Q H I G Q ¦ satisfy conditions (i)-(v).</formula><p>In <ref type="bibr" target="#b6">[6]</ref> we describe an involved algorithm with quadratic convergence rate that computes common tangent lines of two curve segments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Implementation</head><p>We have implemented the algorithm in C++ for arbitraryspeed curves. For details of implementation, we refer the . A non-degenerate closed convex curve, like the cubic spline in (a), has two pairs of antipodal points <ref type="bibr" target="#b6">[6]</ref>. Antipodal points in (b), (c), and (d) can be verified. reader to <ref type="bibr" target="#b6">[6]</ref>.</p><p>The eight pairs of antipodal points in <ref type="figure" target="#fig_1">Figure 1</ref> has all three combinations of curvature signs. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion</head><p>The algorithm described in this paper computes all antipodal points on a closed simple curve up to numerical precision. Inflection points divide the curve into segments that are either convex everywhere or concave everywhere. Such monotonicity allows a recursive combination of marching with bisection to find all antipodal points of different local geometry.</p><p>The algorithm is also applicable to a curve that is not closed, as long as an inward normal field is specified on the curve. It can also be extended in a straightforward way to a curve that is piecewise twice continuously differentiable. Due to the nonlinear nature of curves, a conventional nonlinear programming approach, inherently local, would rely heavily on initial guesses of antipodal positions. It would be slow and not guarantee to always find antipodal points, not to mention all of them.</p><p>The described work will be implemented as part of our ongoing research on localization and grasping of curved objects. Future work will also include an extension of the algorithm to curved shapes in 3D.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>¡</head><label></label><figDesc>Support for this research was provided by Iowa State University.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Eight pairs of antipodal points on a curved shape. The grasp at pair 7 (or at any other pair) is force-closure.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>Appeared in Proceedings of the 2002 IEEE International Conference on Robotics and Automation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Antipodal angle</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>.</head><label></label><figDesc>Multiple pairs of antipodal points may exist on 8 and 9</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>,</head><label></label><figDesc>Figure 4: The working of the procedure AntipodalConvex-March when q y  ¥    3  °  an q y  ¥    I  3  s  .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>Figure 5: Geometry at the antipodal points</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 8 (</head><label>8</label><figDesc>a) illustrates this it-</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head></head><label></label><figDesc>Figure 8: The iteration when the ray of Ú    ¸   intersects</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Figure 9 :</head><label>9</label><figDesc>Figure 9: Four preprocessing steps.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Figure 10 :</head><label>10</label><figDesc>Figure 10: Antipodal points on four different shapes: (a) a convex cubic spline; (b) an elliptic lemniscate given by è   é ê   ë f ì R í Q  7 î Þ  ï  w í h ð ae ñ  î in polar coordinates; (c) a limaçon è p  ò Þ ô ó  ë f ì R í  î ; and (d) a curve with convexities è õ  ï R ö  · ÷ Þ u  ë f ì R í ï î </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head></head><label></label><figDesc>Figure 10 displays all antipodal points found on four more different shapes. The first three examples each took time 10 ms on a DELL Dimension PC with Pentium III 933 MHz CPU. The fourth example took 30 ms. Let ø be the number of inflection points and ù the num- ber of pairs of antipodal points. There are ú £ ø v  ¦ pairs of segments after the preprocessing. The total number of calls to the marching and bisection procedures in Sections 2</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>)</head><label></label><figDesc></figDesc><table>Two antipodal point 

@ 
Y  

and 

H 
Q  

with 

k 
y 
£ 
A @ 
Y  
x ¦ 
  

' 

are called 
simple antipodal points. 
The rest of Section 2 presents an algorithm to find all 
simple antipodal points on 

8 

and 

9 

. This algorithm deals 
separately with three cases: 

8 

and 

9 

are both concave, both 
convex, or one concave and the other convex. 

 

The Frenet formulas [10, pp. 56-58] for planar curves state that 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9" validated="false"><head>8 and 9 , the pro- cedure Antipodal-Convex-March terminates at @ B and H B if k</head><label></label><figDesc></figDesc><table>@ 
R G 

where 

k 
£ 
A @ 
R G 
f ¦ 
É S 
' 

and never passes 

@ 
Y  

. So 

k 
y 
£ 
A @ 
Y  
x ¦ 
É S 
' 

must hold in the 

non-degenerate case. This and that 

! 
£ 
A @ 
C  
X ¦ 
V U 
' 

imply that 

AE 

£ 
g @ 
Y  
R ¦ 
¢ S 


. Therefore the convergence rate is linear. 
The correctness and linear convergence rate for the case 

k 
£ 
g @ 
C B 
Y ¦ 
¢ U 
' 

and 

k 
£ 
A @ 
C G 
F ¦ 
¢ U 
' 

can be established similarly. 

Theorem 4 Let 

8 

and 

9 

both be convex. Suppose the two 
antipodal angles 

k 
£ 
A @ 
R B 
Y ¦ 

and 

k 
£ 
A @ 
C G 
F ¦ 

have the same sign. Then 
the following statements hold: 

1. When no antipodal points exist on 

£ 
g @ 
B 
¦ 
Ê S 
' 

and 

k 
£ 
g @ 
G 
¦ 
 S 
' 

or at 

@ 
G 

and 

H 
G 

if 

k 
£ 
g @ 
C B 
Y ¦ 
0 U 
' 

and 

k 
£ 
g @ 
C G 
f ¦ 
¢ U 
' 

. 

2. Otherwise, the procedure converges at linear rate to a 
pair of antipodal points 

@ 
Y  

and 

H 
Q  

closest to the two 
endpoints at which the iteration starts. Furthermore, 

k 
f 
£ 
g @ 
Y  
x ¦ 
i S 
' 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_12" validated="false"><head>2 t* 2 t* 1 s* 1 t* 1 t a −ε −δ s* 1</head><label></label><figDesc></figDesc><table>¦ 

and 

k 
£ 
g @ 
C G 
f ¦ 

have different signs. Then 

@ 
Y  

and 

H 
Q  

are found by Antipodal-Convex-Bisect. And 

k 
£ 
g @ 
Y  
f 2 
d Ë 
 ¦ 

has the sign of 

k 
£ 
A @ 
R B 
Y ¦ 

while 

k 
£ 
A @ 
Y  
Y % 
± Ë 
 ¦ 

has the sign of 

k 
£ 
g @ 
G 
¦ 

. The procedure Antipodal-Convex-March needs 
to be invoked on both intervals 

£ 
A @ 
B 
D 
F @ 
Y  
3 2 
 Ë 
 ¦ 

and 

£ 
g @ 
Y  
v % 
Ñ Ë 
X D 
f @ 
G 
¦ 

to search for possible antipodal points. 
Figure 6 illustrates the above procedure on an ellipse. 

Ò 

Note that 

Ó 
 Ô 
e Õ 

if 

Ö 
  
× 
 Ö 
 

and 

Ó 
» × 
 Õ 

otherwise. s a 

b 

s 

t b 

s* 1 

Figure 6: Two pairs of antipodal points on a pair of convex el-
liptic segments over 

 
¥  
 
y Ø 
 
 
 

and 

 
 ¸ 
 
i Ø 
¸ 
 
 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_16" validated="false"><head>1 w 2 z 3 z 2 z 1</head><label></label><figDesc></figDesc><table>). 
Similar analysis can be performed for the case that the 
ray of 

£ 
¥ H 
I G 
Q ¦ 

intersects 

8 

. The convergence rate is still lin-
ear and 

k 
f 
£ 
g @ 
Y  
X ¦ 
0 U 
' 

also holds. 
If no antipodal points exist on w z4 

s a 

ta 
t b 

s b 

</table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgement</head><p>The author would like to thank David Persky for helping with the implementation and Ravi Janardan for suggesting to analyze the numerical algorithm.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Robotic grasping and contact: a review</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bicchi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Intl. Conf. Robot. and Automation</title>
		<meeting>IEEE Intl. Conf. Robot. and Automation</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="348" to="353" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Planning planar grasps of smooth contours</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Blake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Taylor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Intl. Conf. Robot. and Automation</title>
		<meeting>IEEE Intl. Conf. Robot. and Automation</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="834" to="839" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Finding antipodal point grasps on irregularly shaped objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I-M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Burdick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Intl. Conf. Robot. and Automation</title>
		<meeting>IEEE Intl. Conf. Robot. and Automation</meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="2278" to="2283" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Inflections on curves in two and three dimensions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">N T</forename><surname>Goodman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comp. Aided Geom. Design</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="37" to="50" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Fine manipulation with multifinger hands</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Lafferriere</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mishra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE</title>
		<meeting>IEEE</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Intl. Conf. Robot. and Automation</title>
		<imprint>
			<biblScope unit="page" from="1568" to="1573" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Geometry and Computation of Antipodal Points on Plane Curves</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y.-B</forename><surname>Jia</surname></persName>
		</author>
		<idno>ISU-CS-01-04</idno>
		<ptr target="http://www.cs.iastate.edu/˜jia/papers/isu-cs-01-04.pdf" />
		<imprint>
			<date type="published" when="2001" />
			<pubPlace>Ames, IA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Computer Science Department, Iowa State University</orgName>
		</respStmt>
	</monogr>
<note type="report_type">Tech. Report</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Detecting cusps and inflection points in curves</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Canny</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comp. Aided Geom. Design</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="24" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">The geometry of grasping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Markenscoff</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Ni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Papadimitriou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Intl. J. Robot. Res</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="61" to="74" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Constructing stable grasps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V.-D</forename><surname>Nguyen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Intl. J. Robot. Res</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="26" to="37" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>O&amp;apos;neill</surname></persName>
		</author>
		<title level="m">Elementary Differential Geometry</title>
		<imprint>
			<publisher>Academic Press, Inc</publisher>
			<date type="published" when="1966" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">On computing twofinger force-closure grasps of curved 2D objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ponce</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Stam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Faverjon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Intl. J. Robot. Res</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Inflection points and singularities on planar rational cubic curve segments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sakai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comp. Aided Geom. Design</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="149" to="156" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
