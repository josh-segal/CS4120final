<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:39+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Floorplan Evaluation with Timing-Driven Global Wireplanning, Pin Assignment, and Buffer/Wire Sizing £</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christoph</forename><surname>Albrecht</surname></persName>
							<email>albrecht@or.uni-bonn.de</email>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">CSE Department</orgName>
								<orgName type="department" key="dep2">Ý Research Institute for Discrete Mathematics</orgName>
								<orgName type="institution">UCSD</orgName>
								<address>
									<addrLine>La Jolla</addrLine>
									<postCode>92093-0114</postCode>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Ion M˘</roleName><forename type="first">Andrew</forename><forename type="middle">B</forename><surname>Kahng</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Þ CS Department</orgName>
								<orgName type="institution">University of Bonn</orgName>
								<address>
									<addrLine>Lennéstr. 2</addrLine>
									<postCode>53113</postCode>
									<settlement>Bonn</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><surname>Zelikovsky</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">Georgia State University</orgName>
								<address>
									<postCode>30303</postCode>
									<settlement>Atlanta</settlement>
									<region>GA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Floorplan Evaluation with Timing-Driven Global Wireplanning, Pin Assignment, and Buffer/Wire Sizing £</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>We describe a new algorithm for floorplan evaluation using timing-driven buffered routing according to a prescribed buffer site map. Specifically, we describe a provably good multi-commodity flow based algorithm that finds a global routing minimizing routing area (wirelength and number of buffers) subject to given constraints on buffer/wire congestion and sink delays. This permits detailed floorplan evaluation, i.e., computing the tradeoff curve between routing area and wire/buffer congestion under any combination of delay and capacity constraints. Our algorithm (1) enforces maximum source/buffer wireloads; (2) enforces wire and buffer congestion constraints by taking into account routing channel capacities and buffer site locations; (3) enforces individual sink delay constraints; (4) performs buffer/wire sizing and layer assignment ; and (5) integrates pin assignment with virtually no increase in runtime. Preliminary experiments show that near-optimal results are obtained with a practical runtime.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Early planning of buffer and wiring resources is a critical aspect of every modern high-performance VLSI implementation methodology. Today, such planning is needed to evaluate the quality of RT-level partitioning and soft (pre-synthesis) block placement/shaping, system-level timing constraints, and pin definition and buffered routing of global interconnects.</p><p>The requirements for global wire planning as an adjunct to floorplan definition have not changed very much from £ Work supported in part by Cadence Design Systems, Inc., the MARCO Gigascale Silicon Research Center, and NSF <ref type="bibr">Grant CCR- 9988331.</ref> those set out in pioneering works as BBL <ref type="bibr" target="#b5">[6]</ref> and BEAR <ref type="bibr" target="#b9">[10]</ref>: the floorplan definition must be aware of congestion, wirelength, timing, etc. Similarly, the need for simultaneous pin assignment and global routing has not changed since, e.g., <ref type="bibr" target="#b6">[7]</ref>. It is well-understood that today's context for floorplan definition and global wire planning has evolved: (1) channel-less multilayer area routing has replaced channel/switchbox routing; (2) interconnect delays are more balanced with (appropriately sized) gate delays, and no longer dominated by gate delays; (3) layer RC constants vary by factors of up to 100¢, so that layer assignment must be planned; (4) global interconnects are buffered; and (5) floorplanning is at the RT-level (instead of physical floorplanning) with soft blocks having uncertain area/delay envelopes. At the same time, the underlying problem formulations and algorithmic technologies have separately advanced in at least three important ways: ¯ The buffer block methodology, along with the associated planning problem (i.e., solving for locations and capacities of buffer blocks), was proposed by Cong et al. <ref type="bibr" target="#b8">[9]</ref> and further elucidated by Tang and Wong <ref type="bibr" target="#b18">[18]</ref>. While the buffer block methodology has indeed been used throughout the late 1990s in hierarchical structuredcustom (high-end microprocessor) methodologies, it may be less relevant to flat or ASIC-like regimes due to issues of separate power distribution, congestion, etc. To alleviate congestion problems associated with the use of buffer blocks, the DAC'2001 work of Alpert et al. <ref type="bibr" target="#b2">[3]</ref> proposed a buffer site methodology which more uniformly distributes buffers across the chip "wherever possible". ¯ The increased impact of interconnects on system performance in deep-submicron technologies has led to a large literature on performance-driven optimizations for individual global nets. Such optimizations include buffer insertion and sizing, wire sizing, and topology synthesis, as comprehensively surveyed in <ref type="bibr" target="#b7">[8]</ref>. We note that for the purposes of buffered global wire planning, it is likely sufficient that the tool be able to exploit the availability of multiple buffer types, multiple wire widths, and multiple layer assignments. ¯ A literature on provably good global routing has been developed based on the primal-dual framework, starting with "column-generating" analogies in <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b4">5]</ref>, then continuing with the work of Albrecht <ref type="bibr" target="#b0">[1]</ref> exploiting recent fast approximations for multi-commodity flows <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b13">14]</ref>. The work of Dragan et al. <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b12">13]</ref> has even more recently applied such provable approximations to the problem of global routing with a prescribed buffer block plan, taking into account signal parity, delay upper/lower bounds, and other practical considerations.</p><p>Our ongoing work seeks to combine the above separate threads of the recent literature into a coherent approach to floorplan definition, global route planning, and pin assignment. In some sense, we hope to regain the "holistic" perspective of the earliest works cited above, e.g., BBL/BEAR. Eventually, we seek to overcome the individual limitations of various "component" technologies: (1) single-net performance optimizations should adapt to the congestionaware global routing context; (2) the buffer block framework should adapt to the more continuous buffer site framework; (3) both congestion and timing should be addressed simultaneously (e.g., the work of Cong et al. <ref type="bibr" target="#b8">[9]</ref> addresses timing but not congestion; the work of Alpert et al. <ref type="bibr" target="#b2">[3]</ref> addresses congestion but not timing); (4) pin assignment (which is especially important in soft block planning) as well as buffer insertion/sizing, wire sizing, and layer assignment degrees of freedom should be exploited; and (5) bounds on performance ratio should be maintained as in "provably good" methods. In this paper, we present our initial efforts toward this end. Our contribution is summarized as follows.</p><p>¯ We describe a new algorithm for floorplan evaluation using timing-driven buffered routing according to a prescribed buffer site map. Specifically, we describe a provably good multi-commodity flow based algorithm that finds a global routing minimizing routing area (wirelength and number of buffers) subject to given constraints on buffer/wire congestion and sink delays. Following Alpert et al. <ref type="bibr" target="#b2">[3]</ref>, we use a 2-dimensional tile graph to capture the wire and buffer congestion of a given floorplan. The tile size depends on the desired tradeoff between estimation accuracy and runtime. ¯ Our implementation permits detailed floorplan evaluation in that it enables computing the tradeoff curve between routing area and wire/buffer congestion under any combination of delay and capacity constraints.</p><p>¯ Like the allocation heuristic in <ref type="bibr" target="#b2">[3]</ref>, our algorithm enforces maximum source/buffer wireloads and controls congestion by taking into account routing channel capacities and buffer site locations. At the same time, like the buffer-block planning algorithm in <ref type="bibr" target="#b8">[9]</ref>, our algorithm takes into account individual sink delay constraints.</p><p>¯ Simultaneously, our algorithm performs buffer and wire sizing by taking into account given libraries of buffer types and wire widths, and integrates layer and pin assignment (the latter with virtually no increase in runtime). Soft pin locations are modeled as multiple sites (grid locations), and are enabling to solution quality.</p><p>The paper is organized as follows. In Section 2 we formalize the floorplan evaluation problem for 2-pin nets. In Section 3 we reformulate the problem as a minimum cost integer multicommodity flow problem (with capacities on sets of edges), give an efficient algorithm for finding nearoptimal solutions to the fractional relaxation, and show how to convert fractional solutions to near-optimal routings by randomized rounding. In Section 4 we give the modifications needed to enforce sink delay constraints and take into account simultaneous buffer and wire sizing and/or layer assignment. We discuss handling of multi-pin nets in Section 5 and conclude the paper with experimental results comparing our algorithm with the allocation heuristic in <ref type="bibr" target="#b2">[3]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Problem formulation</head><p>For a given floorplan and tile size, we construct a vertexand edge-weighted tile graph 񮽙 񮽙´Î񮽙´񮽙´Î Ûµ, where ¯ Î is the set of tiles; ¯ 񮽙 contains an edge between any two adjacent tiles; ¯ For each tile Ú ¾ Î , the buffer capacity 񮽙´Úµ is the number of buffer sites located in Ú; and ¯ For each edge 񮽙 񮽙´ÙÙ񮽙´񮽙´ÙÙ Úµ ¾ 񮽙, the wire capacity Û´񮽙µ is the number of routing channels available between tiles Ù and Ú.</p><p>To simplify the presentation, in this and the following two sections we will assume that all nets have 2 pins; multipin nets are considered in Section 5. We denote by AE 񮽙 񮽙AE ½ 񮽙 AE ¾ 񮽙 񮽙 񮽙 񮽙 񮽙 AE 񮽙 񮽙 the given netlist, where each net AE 񮽙 is specified by the sets of tiles, Ë 񮽙 񮽙 Î and Ì 񮽙 񮽙 Î , to which the source, respectively the sink of AE 񮽙 can be assigned.</p><p>We consider first the case when a single buffer and wire width are available, and only buffer wireload constraints must be satisfied. In this case we seek for each net AE 񮽙 a path È 񮽙 buffered using the available buffer sites and connecting a vertex from Ë 񮽙 to a vertex from Ì 񮽙 (see <ref type="figure" target="#fig_0">Figure 1</ref>) such that the source vertex and the buffers drive each at most Í units of wire, where Í is a given upper-bound (the example in   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Solving FEP via multicommodity flow approximation</head><p>Recall that, for every feasible buffered routing in the tile graph 񮽙 񮽙´Î´񮽙µ񮽙񮽙´Î񮽙´Î´񮽙µ񮽙 񮽙´񮽙µ񮽙´񮽙µ Û µ, the wireload of the source and of each buffer must be at most Í.  <ref type="figure" target="#fig_1">Figure 2</ref>). Finally, vertices corresponding to each net source and sink are added to À and connected to the tiles to which they may be assigned.</p><p>Formally The algorithm for approximating the optimum solution to LP (2) (see <ref type="figure">Figure 3</ref>) uses the general framework for multicommodity flow approximation introduced in <ref type="bibr" target="#b14">[15]</ref>, and relies on simultaneously approximating the dual LP:  <ref type="formula">(3)</ref>). The dual variables are increased by a multiplicative factor for all vertices/edges on a routed path; this ensures that dual weights increase exponentially with usage and thus often used edges are subsequently avoided.</p><p>Minimum-weight paths are computed using Dijkstra's single-source shortest path algorithm. To reduce the number of shortest path computations, paths are recomputed only when their weight increases by a factor of more than´½ than´½ · ­ ­ µ. This speed-up idea, first applied in <ref type="bibr" target="#b13">[14]</ref> for the maximum multicommodity flow problem, has been shown in <ref type="bibr" target="#b0">[1]</ref> to decrease the running time in practice while maintaining the same theoretical worst-case runtime. <ref type="figure">Figure 3</ref>   <ref type="bibr" target="#b17">[17]</ref>. Remark. Using ideas from <ref type="bibr" target="#b0">[1]</ref> it can be shown that the algorithm in <ref type="figure">Figure 3</ref> does not only minimize 񮽙, but also "strives" for a lexicographically minimum solution w.r.t.   Therefore, a solution of the algorithm indicates where possible changes to the floorplan have to be made in order to reach a feasible routing of all nets. For this it is especially useful to run the algorithm with a large value for 񮽙, that is to relax the constraint on the total area. If we want to ignore this constraint completely (i.e., set 񮽙 񮽙 ½), the dual variable Ù is ¼ during the whole algorithm and can be eliminated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 3.2 The algorithm in</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Timing-driven floorplan evaluation</head><p>In this section we address the floorplan evaluation problem under given sink delay constraints. First, we consider enforcing sink delay constraints when a single buffer type and wire width are available. Then, we extend our algorithm to simultaneously handle buffer and wire sizing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Enforcing sink delay constraints</head><p>Assume that we are given an upper-bound of 񮽙 񮽙 on the source-to-sink delay of net AE 񮽙 . The Elmore delay of a buffered path is the sum of delays of the wire segments comprising the path. Here, Ö Ù and 񮽙 񮽙Ò´Ùµ񮽙Ò´Ùµ are the output resistance, respectively input capacitance, of the buffer/terminal Ù, Ö Û and 񮽙 Û are the resistance, respectively capacitance, of a tile-long wire, and Ð ÙÙÚ is the wirelength (in tiles) between Ù and Ú.</p><p>To simplify the exposition we will assume that the intrinsic delay and output resistance of sources are equal to the corresponding parameters of a buffer; in Section 4.2 we will give a construction that handles non-uniform source parameters. Under this assumption the total (i.e., gate + wire) delay of each routing segment depends only on the segment's length, Ð, and the input capacitance of the driven buffer/sink. Note that every routing segment ending in tile Ú corresponds in À to a path whose last arc is either the buffer arc´Úarc´Ú Ð 񮽙 Ú ¼ µ if the segment drives a buffer, or the arc´Úarc´Ú Ð 񮽙 Ø 񮽙 µ if the segment drives the 񮽙th sink. Since these arcs fully identify both the segment length and the input capacitance of the driven buffer/sink, we can assign them pre-computed segment delays, thus obtaining: To enforce the delay upper-bounds for the solution computed by the algorithm given in Section 3 we must restrict the computation to those paths Ô ¾ È 񮽙 that have delay at most 񮽙 񮽙 . Although the problem of finding a least weight <ref type="figure">Figure 4</ref>. Routing which is not a tree in 񮽙. × 񮽙 -Ø 񮽙 path with bounded delay is NP-hard, there is a practical algorithm with arbitrarily good approximation guarantee, i.e., fully polynomial approximation scheme (FPTAS) <ref type="bibr" target="#b15">[16]</ref>. This suffices for obtaining arbitrarily good approximations to the timing-driven floorplan evaluation problem:</p><formula xml:id="formula_0">Theorem 4.2</formula><p>There is a fully polynomial approximation scheme for the timing-driven floorplan evaluation problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Buffer and wire sizing</head><p>In this section we show how to take into account buffer and wire sizing during timing-driven floorplan evaluation.</p><p>Consider first buffering with a given buffer library 񮽙 and a fixed wire width. Each buffer type in 񮽙 has a given area, input capacitance, and output resistance; the different buffer parameters also translate into different upperbounds Í on the wirelength that can be driven by a buffer of each type.</p><p>The directed graph À 񮽙 capturing all feasible routings with buffers from 񮽙 is obtained as follows. First construct, as in Section 4.1, a delay weighted graph À for each buffer type, with the same source and sink nodes, × 񮽙 and Ø 񮽙 , 񮽙 񮽙 ½ , and also with the same nodes Ú ¼ for every Ú ¾ Î ´񮽙µ. Then, remove all arcs of the form´×form´× 񮽙 񮽙 Ú ¼ µ, except the arc from the graph corresponding to the buffer whose driving strength is closest to that of × 񮽙 .</p><p>To reduce the complexity of wire sizing, we require a fixed wire width along any buffer-to-buffer wire segment. As shown in <ref type="bibr" target="#b1">[2]</ref>, this requirement may increase propagation delays by at most 5% compared to the optimum delay achieved by wire tapering. Simultaneous wire sizing can now be taken into account by a construction similar to the one used above for buffer sizing. Let Ï be a given library of wire widths. The directed graph À 񮽙¢Ï capturing all feasible buffered routings with buffers from 񮽙 and wire widths from Ï is obtained by constructing for each wire width in Ï a graph À 񮽙 as above, with the same source and sink nodes, × 񮽙 and Ø 񮽙 , 񮽙 񮽙 ½ , and also with the same nodes Ú ¼ for every Ú ¾ Î ´񮽙µ.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lemma 4.3 There is a delay-preserving 1-to-1 correspondence between buffer-and wire-sized feasible routings of</head><p>net AE 񮽙 in 񮽙 and the × 񮽙 -Ø 񮽙 paths in À 񮽙¢Ï .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 4.4</head><p>There is a fully polynomial approximation scheme for the timing-driven floorplan evaluation problem with given buffer and wire width libraries.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Solving FEP for multipin nets</head><p>For a multipin net we are looking for a buffered tree (instead of a buffered path) in which the wireload of each buffer is at most Í. Such a buffered tree does not necessarily have to be a tree in the graph 񮽙. <ref type="figure">Figure 4</ref> shows such an example: When Í 񮽙 񮽙 we need at least two buffers for any tree connecting the three terminals, and the cheapest (possibly the only available) place for these two buffers might be exactly the tile shown.</p><p>Extending the approximation algorithm from Section 3 to multipin nets requires a subroutine for computing feasible routings having minimum weight with respect to the dual variables. <ref type="figure" target="#fig_6">Figure 5</ref> gives such a subroutine for 3-pin nets. We assume here that the possible locations of the source pin for a net AE 񮽙 are specified by Ë 񮽙 as before, while the two sinks are specified by <ref type="bibr">sets</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Experimental results</head><p>In this section we report results for a 2-pin net implementation of our algorithm; multipin nets, delay constraints, and buffer and wire sizing are currently under implementation. All experiments were conducted on an SGI Origin 2000 with 16 195MHz MIPS R10000 processors (only one of which is actually used by our sequential implementation) and 4 G-Bytes of internal memory, running under IRIX 6.5. The algorithm was coded in C and compiled using g++ version egcs-2.91.66 with -O4 optimization.</p><p>We tested our algorithm on the 10 circuits from <ref type="bibr" target="#b8">[9]</ref>, which were also used in <ref type="bibr" target="#b2">[3]</ref>. Multipin nets were decomposed into 2-pin nets in the same way as in <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b2">3]</ref>. The circuit parameters are summarized in <ref type="table" target="#tab_5">Table 1</ref>. <ref type="table" target="#tab_10">Table 2</ref> shows the results of the multicommodity flow algorithm (with pin assignment) when run with 񮽙 񮽙 ½, i.e., when the objective is to minimize the wire and buffer congestion only. The table shows that progressively better fractional solutions are obtained by the approximation algorithm. The results also show the tradeoff between congestion on one hand and wiring resources (number of buffers and wirelength) on the other hand. <ref type="table" target="#tab_11">Table 3</ref> gives the results for wirelength minimization (« 񮽙 ¼ and ¬ 񮽙 ½) subject to wire and buffer congestion constraints (񮽙 ¼ 񮽙 ½񮽙¼ and 񮽙 ¼ 񮽙 ½񮽙¼). In these experiments the multicommodity flow algorithm is run once per testcase (without binary search), with 񮽙 equal to the lower bound computed by routing each net optimally without taking into account capacity constraints. The multicommodity flow runtime includes randomized rounding (10000 trials), while RABID runtime is for an RS6000/595 workstation with 1Gb of memory, as reported in <ref type="bibr" target="#b2">[3]</ref>. The wirelength of the global routing obtained by our algorithm without pin assignment (MCF) is always within 1.03% of the lower bound. In contrast, the RABID heuristic of <ref type="bibr" target="#b2">[3]</ref> exceeds the lower bound by 񮽙񮽙񮽙񮽙 ½½񮽙񮽙񮽙±. To evaluate the effect of simultaneous pin assignment, we have added the possibility for each sink to be positioned not only in the given tile, but also in the 3-8 surrounding tiles (see  <ref type="table" target="#tab_5">Table 1</ref> for the average number of tiles per pin of each testcase). Running our algorithm with pin assignment enabled (MCF+PA) further decreases wirelength by 񮽙 ½¼±, while being within at most 0.15% of the corresponding lower bound. We note that routing and pin assignment is performed by our algorithm in virtually the same time as routing alone. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Conclusions</head><p>In this paper we propose the first provably good approach to floorplan evaluation with simultaneous timingand congestion-driven buffered global route planning, pin and layer assignment, and wire/buffer sizing. Preliminary experimental results show that our method significantly outperforms approaches based on cascading individual optimizations such as the recent RABID algorithm of Alpert et al. <ref type="bibr" target="#b2">[3]</ref>.</p><p>Future work aims to incorporate in our implementation practical improvements such as the use of uneven sized tiles, window constraints on buffer usage (as opposed to tile constraints), and faster-converging dual-update rules.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">Acknowledgments</head><p>We thank Charles Alpert, Jason Cong, and Jiang Hu for kindly providing us with the testcases used in <ref type="bibr" target="#b8">[9]</ref> and <ref type="bibr" target="#b2">[3]</ref>. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1</head><label>1</label><figDesc>Figure 1 has Í 񮽙 񮽙 ). Formally, a feasible buffered routing for net AE 񮽙 is a path È 񮽙 񮽙´Ú񮽙´񮽙´Ú ¼ 񮽙 Ú ½ Ú Ð񮽙 µ in 񮽙 together with</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. Gadget replacing edgéÙÙ Úµ for Í 񮽙 񮽙 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>(</head><label></label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 . Approximation algorithm for LP ( 2 ) and its dual.</head><label>32</label><figDesc>Figure 3. Approximation algorithm for LP (2) and its dual. the vector consisting of the relative buffer congestion of the vertices, the relative wire congestion of the edges, and the ratio between the total routing area and the upperbound 񮽙.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Lemma 4. 1</head><label>1</label><figDesc>The 1-to-1 correspondence between feasible buffered routings of net AE 񮽙 in 񮽙 and the × 񮽙 -Ø 񮽙 paths in À preserves the delay.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>(</head><label></label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 .</head><label>5</label><figDesc>Figure 5. Algorithm for finding minimum weight buffered routings for 3-pin nets.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>). Formally, a feasible buffered routing for net AE 񮽙 is a path È 񮽙 񮽙´Ú񮽙´񮽙´Ú ¼ 񮽙 Ú ½ Ú Ð񮽙 µ in 񮽙 together with a set of buffers 񮽙 񮽙 񮽙 񮽙 Ú ¼ Ú Ð񮽙 񮽙 such that: ¯ Ú ¼ ¾ Ë 񮽙 and Ú Ð񮽙 ¾ Ì 񮽙 ; ¯ Û´Ú 񮽙 ½ 񮽙 Ú 񮽙 µ 񮽙 ½ for every 񮽙 񮽙 ½ 񮽙 񮽙 񮽙 񮽙 񮽙 Ð 񮽙 ; ¯ 񮽙´Ú 񮽙 µ 񮽙 ½ for every Ú 񮽙 ¾ 񮽙 񮽙 ; andalong È 񮽙 between Ú ¼ and the first buffer in 񮽙 񮽙 , between consecutive buffers, and between the last buffer and Ú Ð񮽙 , are all at most Í. We will denote by Ê 񮽙 the set of all feasible routings´È routings´È 񮽙 񮽙 񮽙 񮽙 µ for net AE 񮽙 . Given buffered routings´Èroutings´È 񮽙 񮽙 񮽙 񮽙 µ ¾ Ê 񮽙 for each net AE 񮽙 , the relative buffer congestion is</head><label></label><figDesc></figDesc><table>T 1 

S 1 

S 2 

T 2 

b 1 

Figure 1. Tile graph with two 2-pin nets. 

¯ The length 񮽙 ÑÑÜ Ú¾Î 
񮽙񮽙񮽙 񮽙 Ú ¾ 񮽙 񮽙 񮽙񮽙 

񮽙´Úµ 

and the relative wire congestion is 

񮽙 Ñ Ü 

񮽙¾񮽙 

񮽙񮽙񮽙 񮽙 񮽙 ¾ È 񮽙 񮽙񮽙 

Û´񮽙µ 

The buffered paths´Èpaths´È 񮽙 񮽙 񮽙 񮽙 µ, 񮽙 񮽙 ½ , are simultane-
ously routable iff both 񮽙 񮽙 ½ and 񮽙 񮽙 ½. To leave resources 

available for subsequent optimization of critical nets and 
ECO routing, we will generally seek simultaneous buffered 
routings with buffer and wire congestion bounded away 
from 1. Using the total wire and buffer area as measure of 
floorplan quality we get: 

Floorplan Evaluation Problem (FEP) 
Given: 

¯ Grid-graph 񮽙 񮽙´Î񮽙´񮽙´Î Ûµ, with buffer capacities 񮽙´Úµ 

and wire capacities Û´񮽙µ; 

¯ Set AE 񮽙 񮽙AE ½ AE 񮽙 񮽙 of 2-pin nets with unassigned 

source and sink pins Ë 񮽙 񮽙 Ì 񮽙 񮽙 Î ; and 
¯ Wireload, buffer congestion, and wire congestion upper-

bounds Í Í ¼, 񮽙 ¼ 񮽙 ½, and 񮽙 ¼ 񮽙 ½. 
Find: feasible buffered routings´Èroutings´È 񮽙 񮽙 񮽙 񮽙 µ ¾ Ê 񮽙 for each net 

AE 񮽙 with relative buffer congestion 񮽙 񮽙 񮽙 ¼ and relative wire 
congestion 񮽙 񮽙 񮽙 ¼ , minimizing the total wire and buffer 

area, i.e., « 

È 񮽙 

񮽙񮽙½ 񮽙񮽙 񮽙 񮽙 · ¬ È 񮽙 񮽙񮽙½ 񮽙È 񮽙 񮽙, where «« ¬ 񮽙 ¼ are 

given constants. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>, the graph À has vertex set Î ´Àµ µ 񮽙× 񮽙 񮽙 Ø 񮽙 񮽙 ½ 񮽙 񮽙 񮽙 񮽙񮽙񮽙񮽙Ú 񮽙 񮽙 Ú ¾ Î ´񮽙µ񮽙 ¼ 񮽙 񮽙 񮽙 Í񮽙 and arc set 񮽙´Àµ µ 񮽙 ×Ö 񮽙 񮽙 ××ÒÒ 񮽙 񮽙´ÙÙÚµ¾񮽙´񮽙µ 񮽙´ÙÙÚµ¾񮽙´񮽙µ 񮽙 ÙÙÚ ¡ 񮽙 񮽙 Ú¾Î´񮽙µÚ¾Î´񮽙µ 񮽙 Ú ¡ where 񮽙 ×Ö 񮽙 񮽙´× 񮽙 񮽙 Ú ¼ µ 񮽙 Ú ¾ Ë 񮽙 񮽙 ½ 񮽙 񮽙 񮽙 񮽙񮽙 񮽙 ××ÒÒ 񮽙 񮽙´Ú 񮽙 񮽙 Ø 񮽙 µ 񮽙 Ú ¾ Ì 񮽙 񮽙 ¼ 񮽙 񮽙 񮽙 ÍÍ ½ 񮽙 񮽙 񮽙 񮽙񮽙 񮽙 ÙÙÚ 񮽙 񮽙´Ù 񮽙 ½ 񮽙 Ú 񮽙 µ񮽙´Úµ񮽙´Ú 񮽙 ½ 񮽙 Ù 񮽙 µ 񮽙 ½ 񮽙 񮽙 񮽙 Í񮽙 񮽙 Ú 񮽙 񮽙´Ú 񮽙 񮽙 Ú ¼ µ 񮽙 ½ 񮽙 񮽙 񮽙 Í񮽙net AE 񮽙 in the tile graph 񮽙 and the × 񮽙 -Ø 񮽙 paths in À.set of all simple × 񮽙 -Ø 񮽙 paths in À. We introduce a ¼񮽙½ variable Ü Ô for every path Ô ¾ È 񮽙񮽙 񮽙 񮽙 ½ È 񮽙 . The variable Ü Ô is set to ½ if the buffered routing corresponding to Ô ¾ È 񮽙 is used to connect net AE 񮽙 , and to 0 otherwise. With this notation, FEP can be formulated as follows: ÑÑÒ 񮽙 Ô¾È 񮽙 « 񮽙 Ú¾Î´񮽙µÚ¾Î´񮽙µ 񮽙Ô 񮽙 񮽙 Ú 񮽙 · ¬ 񮽙´ÙÙÚµ¾񮽙´񮽙µ 񮽙´ÙÙÚµ¾񮽙´񮽙µ 񮽙Ô 񮽙 񮽙 ÙÙÚ 񮽙</head><label></label><figDesc></figDesc><table>Since every × 񮽙 -Ø 񮽙 path in À can visit at most Í vertices 

between any two buffer arcs, we get: 

Lemma 3.1 There is a 1-to-1 correspondence between the 

feasible buffered routings for We will use the correspondence established in 
Lemma 3.1 to give an integer linear program (ILP) 

formulation for the floorplan evaluation problem. Let È 񮽙 

denote the 񮽙 Ü Ô (1) 

subject to 

È 

Ô¾È 

񮽙Ô 񮽙 񮽙 Ú 񮽙 Ü Ô 񮽙 񮽙 ¼ 񮽙´Úµ񮽙 

Ú ¾ Î ´񮽙µ 

È 

Ô¾È 

񮽙Ô 񮽙 񮽙 ÙÙÚ 񮽙 Ü Ô 񮽙 񮽙 ¼ Û´ÙÙ Úµ񮽙´ÙÙÚµ񮽙´ÙÙ Úµ ¾ 񮽙´񮽙µ 

È 

Ô¾È񮽙 

Ü Ô 񮽙 ½ 񮽙 
񮽙 񮽙 ½ 
Ü Ô ¾ ¾ ¼񮽙 ½񮽙񮽙 

Ô ¾ È 

Solving exactly ILP (1) is NP-hard. Our approach is 
to solve its fractional relaxation (obtained by replacing the 

constraints Ü Ô ¾ ¾ ¼񮽙 ½񮽙 with Ü Ô 񮽙 ¼) and then obtain near-

optimal integer solutions by randomized rounding. 
The fractional relaxation of ILP (1) is a minimum cost 
multicommodity flow problem with capacity constraints on 
sets of edges; such capacity constraints have been previ-
ously considered in [13] for the maximum multicommodity 
flow problem. Instead of solving this relaxation directly, we 

introduce an upper bound 񮽙 on the wire and buffer area and 

consider the following linear program (LP): 

ÑÑÒ 񮽙 

(2) 

subject to 

È 

Ô¾È 

񮽙 

« 

È 

Ú¾Î´񮽙µÚ¾Î´񮽙µ 

񮽙Ô 񮽙 񮽙 Ú 񮽙 · ¬ È 

´ÙÙÚµ¾񮽙´񮽙µ 

񮽙Ô 񮽙 񮽙 ÙÙÚ 񮽙 
񮽙 Ü Ô 񮽙 񮽙 񮽙 

È 

Ô¾È 

񮽙Ô 񮽙 񮽙 Ú 񮽙 Ü Ô 񮽙 񮽙 񮽙 ¼ 񮽙´Úµ񮽙 

Ú ¾ Î ´񮽙µ 

È 

Ô¾È 

񮽙Ô 񮽙 񮽙 ÙÙÚ 񮽙 Ü Ô 񮽙 񮽙 񮽙 ¼ Û´ÙÙ Úµ񮽙´ÙÙÚµ񮽙´ÙÙ Úµ ¾ 񮽙´񮽙µ 

È 

Ô¾È 񮽙 

Ü Ô 񮽙 ½ 񮽙 
񮽙 񮽙 ½ 
Ü Ô 񮽙 ¼񮽙 

Ô ¾ È 

Let 񮽙 £ be the optimum objective value for LP (2). Solving 

the fractional relaxation of ILP (1) is equivalent to finding 

the minimum 񮽙 for which 񮽙 £ 񮽙 ½. This can be done by 

a binary search which requires solving the LP (2) for each 

probed value of 񮽙; a similar approach was used in [15] for 

solving the minimum cost concurrent multicommodity flow 

problem. A lower bound on the optimal value of 񮽙 can 

be derived by ignoring all buffer and wire capacity con-

straints, i.e., by computing for each net AE 񮽙 buffered paths 

Ô ¾ È 񮽙 minimizing « È 

Ú¾Î´񮽙µÚ¾Î´񮽙µ 

񮽙Ô 񮽙 񮽙 Ú 񮽙 · ¬ È 

´ÙÙÚµ¾񮽙´񮽙µ 

񮽙Ô 񮽙 񮽙 ÙÙÚ 񮽙. 

A trivial upper bound is the total routing area available, i.e., 

« « ¼ 

È 

Ú¾Î´񮽙µÚ¾Î´񮽙µ 

񮽙´Úµ · ¬ ¬ ¼ 

È 

´ÙÙÚµ¾񮽙´񮽙µ 

Û´ÙÙ Úµ񮽙 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="false"><head>finds an´½an´½ · 񮽙 ¼ µ- approximation with Ç ½ 񮽙 ¾ ¼ 񮽙 £ 񮽙 ÐÒ Ò ¡ shortest path computa- tions, using 񮽙񮽙ÑÑÒ¨½ 񮽙񮽙ÑÑÒ¨񮽙񮽙ÑÑÒ¨½ ­ 񮽙 ½ ­ ´ Ô ½ · 񮽙 ¼ ½µ񮽙 ½ 񮽙 ½ ½ ½·񮽙¼ ¡ ½񮽙񮽙 ¡© and AE 񮽙 ½ 񮽙 ¼ Ò·Ñ ¡ ½񮽙񮽙 , where Ò and Ñ are the number of ver- tices and edges of 񮽙, and 񮽙 ¼ 񮽙񮽙 񮽙´½ · 񮽙µ´½ · 񮽙­µ.</head><label></label><figDesc>After solving LP (2) we route each net AE 񮽙 by randomly choosing one of the paths Ô ¾ È 񮽙 with probabilities given by the flows Ü Ô . Randomized rounding guarantees that (for large enough capacities) the relative congestion increases only by a small amount. For details see</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="false"><head>1 ) Set ÝÚ 񮽙񮽙 AE 񮽙 ¼ 񮽙´Úµ 񮽙Ú ¾ Î ´񮽙µ, Þ񮽙 񮽙񮽙 AE 񮽙 ¼ Û´񮽙µ 񮽙񮽙 ¾ 񮽙´񮽙µ, Ù 񮽙񮽙 AE 񮽙 (2) Set ÜÔ ¼ 񮽙Ô ¾ È . (3) Set Ô񮽙 񮽙񮽙 񮽙 for 񮽙 񮽙 ½ .</head><label>1</label><figDesc></figDesc><table>(4) While 񮽙¼ 

È 

Ú¾Î´񮽙µÚ¾Î´񮽙µ 

񮽙´ÚµÝÚ · 񮽙¼ 

È 

´ÙÙÚµ¾񮽙´񮽙µ 

Û´ÙÙ ÚµÞÙÙÚ · Ù½ do: 

(5) begin 

(6) For 񮽙 ½ to 񮽙, do 

(7) begin 
(8) 

If Ô񮽙 񮽙 񮽙 or È 

Ú¾Î´񮽙µÚ¾Î´񮽙µ 

񮽙Ô񮽙 񮽙 񮽙Ú񮽙´ÝÚ񮽙Ú񮽙´ÝÚ · «Ùµ · È 

´ÙÙÚµ¾񮽙´񮽙µ 

񮽙Ô񮽙 񮽙 񮽙ÙÙÚ񮽙´ÞÙÙÚ񮽙ÙÙÚ񮽙´ÞÙÙÚ · ¬Ù µ 񮽙´½񮽙´½ · ­­ µ Ð񮽙 then 

(9) 
begin 
(10) 

Find a path Ô񮽙 ¾ È 񮽙 minimizing Ð񮽙 񮽙񮽙 È 

Ú¾Î´񮽙µÚ¾Î´񮽙µ 

񮽙Ô񮽙 񮽙 񮽙Ú񮽙´ÝÚ񮽙Ú񮽙´ÝÚ · «Ùµ · È 

´ÙÙÚµ¾񮽙´񮽙µ 

񮽙Ô񮽙 񮽙 񮽙ÙÙÚ񮽙´ÞÙÙÚ񮽙ÙÙÚ񮽙´ÞÙÙÚ · ¬Ù µ 

(11) 
end 
(12) 

Set ÜÔ 񮽙 񮽙񮽙 ÜÔ 񮽙 · ½ 

(13) 

Set ÝÚ 񮽙񮽙 ÝÚ 

񮽙 

½ · 񮽙 񮽙Ô 񮽙 񮽙񮽙Ú񮽙 

񮽙 ¼ 񮽙´Úµ 

񮽙 񮽙Ú ¾ Î ´񮽙µ, Þ񮽙 񮽙񮽙 Þ񮽙 

񮽙 

½ · 񮽙 񮽙Ô 񮽙 񮽙񮽙ÙÙÚ񮽙 

񮽙 ¼ Û´ÙÙÚµ 

񮽙 񮽙´ÙÙ Úµ ¾ 񮽙´񮽙µ 

Ù 񮽙񮽙 Ù 

񮽙 

½ · 񮽙 

« È 

Ú¾Î´񮽙µÚ¾Î´񮽙µ 

񮽙Ô 񮽙 񮽙񮽙Ú񮽙 · ¬ È 

´ÙÙÚµ¾񮽙´񮽙µ 

񮽙Ô 񮽙 񮽙񮽙ÙÙÚ񮽙 

񮽙 

񮽙 

(14) end 
(15) end 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6" validated="false"><head>The delay of a wire segment connecting the source or buffer Ù to the sink or buffer Ú is the sum between the gate delay ÒØÖÒ××× ÐÝ Ù · Ö Ù ¡ ´񮽙 Û Ð ÙÙÚ · 񮽙 񮽙Ò´Úµµ񮽙Ò´Úµµ and the wire delay Ö Û Ð ÙÙÚ ¡ ´񮽙 Û Ð ÙÙÚ 񮽙¾ · 񮽙 񮽙Ò´Úµµ񮽙Ò´Úµµ</head><label></label><figDesc></figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7" validated="false"><head>1 ) Set Û £ 񮽙񮽙 ½ (2) For all Ú ¾ Î do // try all possible Steiner points</head><label>1</label><figDesc></figDesc><table>(3) begin 

(4) For 񮽙 ¼ to Í 

(5) begin 
(6) 

Find a shortest Ú Í 񮽙 Ø ½ 񮽙 -path È½ in À 

(7) 

For 񮽙 ¼ to Í 񮽙 

(8) 
begin 
(9) 

Find a shortest Ú Í 񮽙 Ø ¾ 񮽙 -path È¾ in À 

(10) 

Find a shortest × ¼ 񮽙 Ú Í 񮽙 񮽙 -path È¼ in À 

(11) 

If Û´È¼µ · Û´È½µ · Û´È¾µ 񮽙 Û £ then 

(12) 

Set Û £ 񮽙񮽙 Û´È¼µ · Û´È½µ · Û´È¾µ 

Ì £ 񮽙񮽙 È¼ 񮽙 È½ 񮽙 È¾ 

(13) 
end 
(14) end 
(15) end 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9" validated="true"><head>Table 1 . Circuit parameters.</head><label>1</label><figDesc></figDesc><table>Circuit 
#Nets 
Grid 
Tile 
Avg. tiles 
U 
#Buffer 
size 
area 
per pin 
sites 
a9c3 
1526 
30 x 30 
1.09 
4.9 
6 
32780 
ac3 
409 
30 x 30 
0.49 
5.0 
7 
8550 
ami33 
324 
30 x 33 
0.46 
5.0 
6 
17750 
ami49 
493 
30 x 30 
0.68 
4.8 
6 
11450 
apte 
141 
33 x 30 
0.36 
5.0 
7 
4200 
hc7 
1318 
30 x 30 
1.04 
4.8 
6 
17780 
hp 
187 
30 x 30 
0.42 
5.0 
7 
2350 
playout 
1663 
30 x 33 
0.78 
4.8 
7 
37550 
xc5 
2149 
30 x 30 
0.58 
5.0 
7 
19150 
xerox 
390 
30 x 30 
0.38 
5.0 
7 
7000 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10" validated="false"><head>Table 2 .</head><label>2</label><figDesc></figDesc><table>Congestion minimization results (񮽙 񮽙 ½). 

Circuit Phase# 
Wire 
Buffer #Buffers Wlen 
CPU 
Congest Congest 
sec. 
a9c3 1 
0.75 
0.80 
3351 26057 
15.6 
4 
0.59 
0.43 
3356 26123 
63.0 
16 
0.51 
0.23 
3402 26595 255.1 
64 
0.46 
0.18 
3505 27328 1023.6 
64+ROUND 
0.60 
0.31 
3606 27989 
1087 
ac3 1 
0.77 
1.00 
796 4998 
4.0 
4 
0.62 
0.53 
797 5008 
15.9 
16 
0.40 
0.27 
803 5072 
64.4 
64 
0.28 
0.18 
826 5211 260.1 
64+ROUND 
0.46 
0.67 
832 5254 
281 
ami33 1 
0.66 
0.67 
909 4466 
3.4 
4 
0.55 
0.36 
908 4476 
13.4 
16 
0.47 
0.20 
910 4515 
54.0 
64 
0.40 
0.14 
930 4618 214.2 
64+ROUND 
0.56 
0.36 
953 4703 
234 
ami49 1 
1.36 
0.90 
948 6045 
4.2 
4 
1.00 
0.46 
958 6083 
17.1 
16 
0.74 
0.29 
1040 6509 
74.0 
64 
0.66 
0.21 
1205 7278 304.4 
64+ROUND 
1.00 
0.56 
1321 7767 
329 
apte 1 
1.08 
1.00 
328 1668 
1.6 
4 
0.87 
0.57 
327 1677 
6.5 
16 
0.53 
0.30 
336 1725 
27.0 
64 
0.44 
0.17 
359 1836 112.0 
64+ROUND 
0.69 
1.00 
362 1833 
123 
hc7 1 
1.00 
1.19 
2203 17670 
10.6 
4 
0.79 
0.61 
2206 17738 
43.3 
16 
0.69 
0.31 
2301 18481 180.1 
64 
0.62 
0.23 
2498 19660 736.4 
64+ROUND 
0.86 
0.50 
2678 20616 
788 
hp 1 
0.92 
1.67 
334 1952 
1.7 
4 
0.71 
0.85 
330 1961 
6.9 
16 
0.46 
0.45 
334 2003 
28.4 
64 
0.33 
0.29 
355 2119 118.8 
64+ROUND 
0.58 
1.00 
367 2153 
131 
playout 1 
0.64 
0.98 
2890 23155 
19.9 
4 
0.52 
0.42 
2892 23199 
80.5 
16 
0.40 
0.24 
2922 23582 339.9 
64 
0.33 
0.17 
3238 25809 1480.8 
64+ROUND 
0.34 
0.27 
3453 27266 
1544 
xc5 1 
1.14 
1.31 
3187 22314 
23.4 
4 
0.98 
0.66 
3202 22492 
94.3 
16 
0.74 
0.37 
3277 23231 388.6 
64 
0.66 
0.31 
3570 24872 1623.1 
64+ROUND 
0.84 
0.59 
3929 26381 
1704 
xerox 1 
0.93 
1.42 
659 3662 
3.7 
4 
0.72 
0.77 
660 3698 
15.3 
16 
0.45 
0.40 
684 3858 
68.1 
64 
0.32 
0.21 
753 4174 299.0 
64+ROUND 
0.45 
0.67 
781 4303 
319 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11" validated="false"><head>Table 3 .</head><label>3</label><figDesc></figDesc><table>Wirelength minimization (« 񮽙 ¼ and ¬ 񮽙 ½ ) 

subject to wire and buffer congestion constraints 

(񮽙 ¼ 񮽙 ½ 񮽙¼ and 񮽙 ¼ 񮽙 ½ 񮽙¼). 

Circuit Algorithm Wlen %LB #buffers %LB 
Wire Buffer CPU 
gap 
gap Congest Congest sec. 
a9c3 RABID 
30723 5.64 
4225 11.95 
0.60 
0.44 502 
MCF 
29082 0.00 
3801 0.72 
0.63 
0.31 1082 
MCF+PA 26057 0.00 
3376 0.75 
0.58 
0.30 1079 
ac3 RABID 
5954 7.67 
1037 15.74 
0.58 
0.33 208 
MCF 
5530 0.00 
905 1.00 
0.73 
0.67 280 
MCF+PA 4993 0.00 
805 1.39 
0.69 
0.50 279 
ami33 RABID 
5232 6.93 
1150 14.20 
0.69 
0.44 138 
MCF 
4893 0.00 
1015 0.79 
0.69 
0.31 239 
MCF+PA 4464 0.00 
916 0.88 
0.59 
0.25 237 
ami49 RABID 
7592 11.87 
1339 21.51 
0.93 
0.36 167 
MCF 
6792 0.07 
1135 2.99 
1.00 
0.47 314 
MCF+PA 6041 0.01 
991 4.87 
1.00 
0.50 304 
apte RABID 
2010 10.78 
417 18.47 
1.00 
0.33 
95 
MCF 
1833 1.03 
373 5.97 
1.00 
1.00 118 
MCF+PA 1663 0.15 
330 4.43 
1.00 
1.00 117 
hc7 RABID 
21523 7.54 
2983 17.44 
0.82 
0.35 386 
MCF 
20024 0.05 
2591 2.01 
0.96 
0.45 775 
MCF+PA 17660 0.00 
2217 0.82 
0.93 
0.54 767 
hp RABID 
2403 11.12 
450 20.97 
0.83 
0.28 
67 
MCF 
2164 0.06 
395 6.18 
1.00 
1.00 127 
MCF+PA 1945 0.00 
345 6.81 
0.83 
1.00 126 
playout RABID 
27601 6.38 
3840 15.04 
0.45 
0.64 813 
MCF 
25946 0.00 
3428 2.70 
0.51 
0.32 1393 
MCF+PA 23138 0.00 
3004 4.12 
0.40 
0.32 1386 
xc5 RABID 
27060 8.35 
4410 23.25 
0.84 
0.81 694 
MCF 
25155 0.73 
3841 7.35 
0.96 
0.60 1641 
MCF+PA 22265 0.05 
3340 4.87 
0.98 
0.50 1644 
xerox RABID 
4541 11.48 
957 30.56 
0.93 
0.57 167 
MCF 
4078 0.12 
807 10.10 
1.00 
0.80 284 
MCF+PA 3658 0.00 
691 6.14 
0.88 
0.75 281 </table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Global Routing by New Approximation Algorithms for Multicommodity Flow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Albrecht</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems</title>
		<imprint>
			<biblScope unit="page" from="622" to="632" />
			<date type="published" when="2001-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Is wire tapering worthwhile?</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Alpert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Devgan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Quay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICCAD</title>
		<meeting>ICCAD</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="430" to="435" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A practical methodology for early buffer and wire resource allocation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Alpert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Sapatnekar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Villarrubia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. DAC</title>
		<meeting>DAC</meeting>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A global router using an efficient approximate multicommodity multiterminal flow algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">C</forename><surname>Carden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-K</forename><surname>Cheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. DAC</title>
		<meeting>DAC</meeting>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="316" to="321" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A Global Router with a Theoretical Bound on the Optimum Solution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">C</forename><surname>Carden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-K</forename><surname>Cheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems</title>
		<imprint>
			<biblScope unit="page" from="208" to="216" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The Berkeley building-block (BBL) layout system for VLSI design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">P</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-P</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">S</forename><surname>Kuh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IFIP TC WG 10.5 International Conference on Very Large Scale Integration</title>
		<meeting>the IFIP TC WG 10.5 International Conference on Very Large Scale Integration<address><addrLine>Trondheim</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1983-08" />
			<biblScope unit="volume">83</biblScope>
			<biblScope unit="page" from="37" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Pin Assignment with Global Routing for General Cell Design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on CAD</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1401" to="1412" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Performance optimization of VLSI interconnect layout</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-K</forename><surname>Koh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">H</forename><surname>Madden</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Integration</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="1" to="94" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Buffer block planning for interconnect-driven floorplanning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">Z</forename><surname>Pan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICCAD</title>
		<meeting>ICCAD</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="358" to="363" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Simultaneous floor planning and global routing for hierarchical building-block layout</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">W</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">-M</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">S</forename><surname>Kuh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on CAD</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="828" to="837" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Provably good global buffering using an available buffer block plan</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">F</forename><surname>Dragan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">B</forename><surname>Kahng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">I</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Muddu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zelikovsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICCAD</title>
		<meeting>ICCAD</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="104" to="109" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Provably good global buffering by multiterminal multicommodity flow approximation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">F</forename><surname>Dragan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">B</forename><surname>Kahng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">I</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Muddu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zelikovsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ASP-DAC</title>
		<meeting>ASP-DAC</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="120" to="125" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Practical approximation algorithms for separable packing linear programs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">F</forename><surname>Dragan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">B</forename><surname>Kahng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">I</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Muddu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zelikovsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 7th Workshop on Algorithms and Datastructures (WADS)</title>
		<meeting>7th Workshop on Algorithms and Datastructures (WADS)</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="325" to="337" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Approximating fractional multicommodity flow independent of the number of commodities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">K</forename><surname>Fleischer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Discrete Math</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="505" to="520" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Faster and simpler algorithms for multicommodity flow and other fractional packing problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Garg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Könemann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 39th Annual Symposium on Foundations of Computer Science</title>
		<meeting>39th Annual Symposium on Foundations of Computer Science</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="300" to="309" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">The network inhibition problem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">A</forename><surname>Phillips</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 25th</title>
		<meeting>25th</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
				<title level="m">Annual ACM Symposium on Theory of Computing</title>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="776" to="785" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Randomized rounding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Raghavan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">D</forename><surname>Thomson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Combinatorica</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="365" to="374" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Planning buffer locations by network flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">F</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ISPD</title>
		<meeting>ISPD</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
