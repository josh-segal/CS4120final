<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:38+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Load Balancing in Processor Sharing Systems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eitan</forename><surname>Altman</surname></persName>
							<email>altman@sophia.inria.fr</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Urtzi</forename><surname>Ayesta</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Balakrishna</forename><surname>Prabhu</surname></persName>
							<email>bjprabhu@laas.fr</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">route des Lucioles</orgName>
								<orgName type="laboratory">LAAS-CNRS Université de Toulouse</orgName>
								<orgName type="institution">INRIA Sophia Antipolis</orgName>
								<address>
									<addrLine>7, Avenue Colonel Roche</addrLine>
									<postCode>2004, 06902, F-31077</postCode>
									<settlement>Sophia Antipolis, Toulouse</settlement>
									<country>France, France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="laboratory">LAAS-CNRS Université de Toulouse</orgName>
								<address>
									<addrLine>7, Avenue Colonel Roche</addrLine>
									<postCode>F-31077</postCode>
									<settlement>Toulouse</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Load Balancing in Processor Sharing Systems</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>In this paper, we investigate optimal load balancing strategies for a multi-class multi-server processor-sharing system with a Poisson input stream, heterogeneous service rates, and a server-dependent holding cost per unit time. Specifically , we study (i) the centralized setting in which a dis-patcher routes incoming jobs based on their service time requirements so as to minimize the weighted mean sojourn time in the system; and (ii) the decentralized, distributed non-cooperative setting in which each job, aware of its service time, selects a server with the objective of minimizing its weighted mean sojourn time in the system. For the decentralized setting we show the existence of a potential function , which allows us to transform the non-cooperative game into a standard convex optimization problem. For the two aforementioned settings, we characterize the set of optimal routing policies and obtain a closed form expression for the load on each server under any such policy. Furthermore, we show the existence of an optimal policy that routes a job independently of its service time requirement. We also show that the set of servers used in the decentralized setting is a subset of set of servers used in the centralized setting. Finally, we compare the performance perceived by jobs in the two settings by studying the so-called Price of Anarchy (PoA), that is, the ratio between the decentralized and the optimal centralized solutions. When the holding cost per unit time is the same for all servers, it is known that the PoA is upper bounded by the number of servers in the system. Interestingly, we show that the PoA for our system can be unbounded. In particular this indicates that in our system, the performance of selfish routing can be extremely inefficient.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Communication services such as web server-farms, database systems and grid computing clusters, routinely employ multiserver systems to provide a range of services to their customers. An important issue in such systems is to determine the server to which an incoming request should be routed to in order to optimize a given performance criterion. From the service provider's perspective, this choice of the strategy (centralized or decentralized) and the service discipline (Processor Sharing (PS), First-Come-First-Served (FCFS), etc.) determines the amount of resources it needs to deploy in order to guarantee a certain Quality-of-Service (QoS) to its customers. Thus, an investigation of load balancing or routing strategies in multi-server systems can give guidelines to the service provider on dimensioning its system.</p><p>In this paper we study the optimal load balancing in a multi-server processor-sharing system with heterogeneous service capacities. This configuration is also known as processorsharing server-farms, and is a popular architecture in computing centers, used for example in the Cisco Local Director, IBM Network Dispatcher and Microsoft Sharepoint (see <ref type="bibr" target="#b4">[5]</ref> for a recent survey). This configuration can also be used to model a web server farm, where requests for files (or HTTP pages) arrive to a dispatcher are dispatched immediately to one of the servers in the farm for processing. With each server, we associate a service capacity (i.e., some servers could be faster than the others) and a holding cost per unit time. We assume that requests arrive as a Poisson process, and that the service requirement of each request is sampled from a finite set. For such a multi-server system, we investigate load balancing in two different settings: (i) the centralized setting in which a dispatcher assigns the server to an incoming request with the objective of minimizing the weighted mean sojourn time of jobs in the system, and (ii) the distributed non-cooperative setting in which an incoming request selects a server in order to minimize its own weighted mean sojourn time in the system. In both cases we assume that the only information available to the decision maker (the dispatcher or the request itself) is the service time requirement of the request. This might be the case, for example, in situations where not all the servers are in the same location and it may be costly to gather information on the current queue lengths at the various servers.</p><p>The main contributions of the present work are as follows. For both settings, we characterize the set of optimal routing policies, and give closed-form expressions for the load on each server under any optimal policy. It is worthwhile to note that for the distributed non-cooperative setting this is done by showing the existence of a potential function, which allows us to transform the non-cooperative game into a standard convex optimization problem. We then give an optimal policy in which an incoming request is routed to a server with a probability that is independent of the service requirement of the request. This property of the PS discipline could be useful in systems in which the service requirement of requests is not known a priori and it illustrates an important difference between the optimal load balancing policy in a PS server-farm and FCFS server-farm, since in the case of a FCFS server-farm it has been shown that the optimal load balancing does use information on the service requirement of each request <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b7">8]</ref>. Further, we show that higher the ratio of the holding cost per unit time to the service capacity of a server the lighter is the load on it, thus defining an index to order the servers. For certain input parameters (i.e., an arrival process, service time distribution, available service capacities, holding cost per unit time), it is thus possible that some of the servers will not be processing any requests. We show that the set of servers processing requests in the decentralized setting is a subset of that in the centralized setting. Thus, there is a trade-off in the performance gains and cost of servers to be considered when choosing between the two settings. We also note that, given the input parameters, this analysis gives the set of servers that a service provider should choose in order to minimize the mean sojourn time in its system. Finally, we compare the performance perceived by jobs in the two settings by studying the so-called Price of Anarchy (PoA), that is, the ratio between the selfish decentralized and the optimal centralized solutions. When the holding cost per unit of time is the same in every server it is has been shown that the PoA is upper bounded by the number of servers in the system, see for example <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b10">11]</ref>. Interestingly, we show that for our system the PoA is unbounded, that is, it can be arbitrarily close to infinity. This indicates that unequal holding costs may have a profound impact on the system's performance. In particular, the performance of selfish routing can be unboundedly worse than the performance obtained by a centralized routing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Related work</head><p>Load balancing in multi-server systems has been previously investigated not only in the context of communications services but also in the broader context of queueing systems. Global and Individual optimality in load balancing are considered in the monograph <ref type="bibr" target="#b12">[13]</ref>, which does not consider decisions based on knowledge of the amount of load. Systems with general service time distribution and FCFS scheduling discipline were studied in <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b7">8]</ref>, while <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b10">11]</ref> studied systems with exponential service time distributions and arbitrary scheduling discipline. In <ref type="bibr" target="#b8">[9]</ref> the authors analysed a multi-servers PS system where requests join the server that has the smallest number of requests. In a recent work <ref type="bibr" target="#b5">[6]</ref> the authors investigate the performance of a server farm where the scheduling discipline in each server is SRPT (Shortest Remaining Processing Time First).</p><p>Our work is closely related to <ref type="bibr" target="#b21">[22]</ref> and <ref type="bibr" target="#b10">[11]</ref>. The main differences are that (i) we consider a multi-class job arrival process, allowing the dispatcher to use information on the size of the requests and (ii) the addition of a heterogeneous holding cost per time unit in each server. As we will see, both (i) and (ii) generalizations allow us to draw important conclusions, that to the best of our knowledge were not known before.</p><p>By considering a multi-class system, we wish to analyze how the information on the service requirements of users impacts the structure of the optimal load balancing. Our results show that the structure of the optimal routing in a system with the PS scheduling discipline is radically different with respect to the FCFS case. For a multi-server FCFS system with homogeneous service capacities it was conjectured in <ref type="bibr" target="#b9">[10]</ref>, and proved in <ref type="bibr" target="#b7">[8]</ref>, that the optimal load balancing scheme consists in assigning to each server all jobs whose processing times fall within non-overlapping, continuous intervals of processing times. The intuitive explanation to this result comes from the fact that this strategy reduces the variability of service times for each queue. Since the mean delay in a FCFS queue is directly proportional to the variability of the service time distribution (Pollaczek-Khinchin formula), an interval-based policy can minimize the overall mean delay in the system. Interestingly, if the service capacities are heterogeneous an interval-based strategy need not be optimal <ref type="bibr" target="#b7">[8]</ref>. In contrast, we show that in the case of a multi-server PS system the optimal load balancing strategy does not take advantage of the service time information, that is, the probability that a job joins a given server is independent of the job's service requirement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Organization of the paper</head><p>The rest of this paper is organized as follows. In Section 2, we describe the system model, state the assumptions, and give the mathematical formulation for the problem under consideration. In Section 3, we treat the centralized setting, which is followed by the treatment of the decentralized setting in Section 4. In Section 5, we compare the performance of the two settings using various measures, such as the server utilization and the Price of Anarchy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">MODEL FORMULATION</head><p>Consider a server farm consisting of a set of C servers. Let S = {1, 2, ..., C} denote the index set of the set of servers. Server j has a service rate rj, for all j ∈ S. At every server, jobs are served according to the processor sharing (PS) discipline. Customers arrive to the system according to a Poisson process with rate λ. Depending on the application in mind, a customer may correspond to a job with a certain amount of service requirement, or of a file that has to be transmitted and has a certain size. In the latter case we shall identify the service requirement of the file as being its size.</p><p>Let {σ k : 1 ≤ k ≤ K} denote the set of possible service requirements (i.e. the job sizes) and assume that K is finite. Let K = {1, 2, ..., K} denote the index set of the set of possible service requirement. Customers have independent and identically distributed service requirements which are sampled from {σ k : k ∈ K} such that the probability that a customer has service requirement σ −1 i is given by βi, for all i ∈ K.</p><p>As mentioned in the Introduction, we are interested in comparing the performance between the globally optimal solution and the distributed non-cooperative problem. We assume that decisions are open-loop: they are taken without knowledge of the queue sizes. However, we assume that the service requirement of an arriving user is known, both to the dispatcher in the centralized case and to the user itself in the distributed non-cooperative setting. The decision on which queue an arrival joins is assumed to depend only on that information. Since the processes generated by splitting a Poisson process are still Poisson, each server can be seen as an M/G/1 − P S queue. We recall that the mean delay in a PS queue depends on the service time distribution only through its mean (the so-called insensitivity property of PS <ref type="bibr" target="#b13">[14]</ref>), therefore the mean number of jobs in an M/G/1 − P S queue is the same as in an M/M/1 queue.</p><p>All arrivals with a given size are called a class. We thus have K classes of jobs where jobs of class i have mean size σ −1 i . We associate with class i an arrival rate λi = λβi, and a traffic intensity ηi = λiσ −1 i . Let η = X i∈K ηi denote the total input traffic intensity.</p><p>Remark 1. Note that the value of K is arbitrary. Therefore our formulation allows us to approximate a continuous distribution arbitrarily closely, and thus we can investigate the optimal size-based routing strategy.</p><p>Notation. We shall use a lower case bold-faced character to denote a vector. The elements of a vector will be denoted by the corresponding lower case characters. For example, a denotes the 1 × m vector (a1, a2, ..., am) where m is the size of a. The vectors 0m and 1m will denote the 1 × m vectors with all elements as 0 and 1, respectively. We shall use the symbol to denote elementwise inequality for vectors. Strategies. A strategy for a class i of customers is defined to be the probability vector (pi1, ..., piC ), where pij is the probability that a class i customer goes to queue j. Note that for any strategy</p><formula xml:id="formula_0">P C j=1 pij = 1. We define a multi- strategy p = (pij), 1 ≤ i ≤ K, 1 ≤ j ≤ C as the matrix of strategies of all classes.</formula><p>For a multi-strategy p, let ρ i j (p) denote the load on server j due to class i. The total load on server j is given by</p><formula xml:id="formula_1">ρj(p) = X i∈K ρ i j (p) = X i∈K ηipij rj .<label>(1)</label></formula><p>From queueing theory we know that server j is stable if ρj(p) &lt; 1. We shall say that p is a stable multi-strategy if all servers are stable. The next proposition states the necessary and sufficient condition for the existence of a stable multistrategy.</p><p>Proposition 1. There exists a stable multi-strategy if and only if</p><formula xml:id="formula_2">X j∈S rj &gt; η.<label>(2)</label></formula><p>Proof. For a multi-strategy p, from (1) we get</p><formula xml:id="formula_3">rjρj(p) = X i∈K ηipij, for all j ∈ S.</formula><p>Summing over all j and interchanging the two summations on the right-hand side we get</p><formula xml:id="formula_4">X j∈S rjρj(p) = X i∈K ηi X j∈S pij = η.<label>(3)</label></formula><p>If P j∈S rj &lt; η, then the load on some server must be larger than 1 for (3) to hold. Thus, (2) is necessary for the existence of a stable multi-strategy. Now, assume (2) and consider the multi-strategy defined by</p><formula xml:id="formula_5">pij = rj P k∈S r k</formula><p>, for all i ∈ K, and for all j ∈ S.</p><p>Due to the splitting property of Poisson processes, the arrival process to each of the queues will also be Poisson under this multi-strategy. Then, each server can be modeled as an M/G/1 queue with</p><formula xml:id="formula_6">ρj(p) = X i∈K ηipij rj = P i∈K ηi P k∈S r k &lt; 1.<label>(4)</label></formula><p>and as a consequence every server j is stable. Thus, <ref type="formula" target="#formula_2">(2)</ref> is sufficient for the existence of a stable multi-strategy.</p><p>Assumption 1. The traffic intensities and the service rates are such that <ref type="formula" target="#formula_2">(2)</ref> is always satisfied.</p><p>Note that if p is a stable multi-strategy, then necessarily</p><formula xml:id="formula_7">P C j=1 ρj(p) &lt; C.</formula><p>Since all the queues in our system are M/G/1−P S queues, the mean number of jobs at any queue has the insensitivity property: it depends on the service distribution only through its expectation. For all j ∈ S, the mean number of jobs is given by</p><formula xml:id="formula_8">E[Nj(p)] = ρj(p) 1 − ρj(p) ,<label>(5)</label></formula><p>for ρj(p) &lt; 1, and is infinity otherwise. The total arrival rate to server j is P K i=1 λipij. Thus, by Little's law the mean sojourn time at queue j is given by</p><formula xml:id="formula_9">E[Tj(p)] = E[Nj(p)] P K i=1 λipij .<label>(6)</label></formula><p>Even though sometimes we will not make the dependency explicit, E[Nj], ρj and E <ref type="bibr">[Tj]</ref>, for all j ∈ S, shall be understood to depend on the multi-strategy relevant to the context.</p><p>Our objective is to determine the multi-strategy p that minimizes the weighted mean number of jobs in the system, that is,</p><formula xml:id="formula_10">argmin p C X j=1 cjE[Nj],<label>(7)</label></formula><p>where cj are some constants that depend on the index of the of the queue and that can represent, for example, a cost on the holding time. We recall that in all previous works, the case cj = c, for all j ∈ S, was studied. By Little's law, minimizing the weighted mean number of jobs is equivalent to minimizing the weighted mean sojourn time in the system. Finally we note that throughout the paper we will assume the servers are labeled such that c1 r1</p><formula xml:id="formula_11">≤ c2 r2 ≤ . . . ≤ cC rC .<label>(8)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">THE GLOBAL OPTIMIZATION PROB-LEM</head><p>In this section we consider the global optimization problem, in which a dispatcher decides where each job will get service so as to minimize the weighted mean number of jobs in the system. The global optimization problem can be formulated in terms of the following Mathematical Program (MP):</p><formula xml:id="formula_12">minimize X j∈S cjE[Nj(p)]<label>(9)</label></formula><p>subject to X j∈S pij = 1, for all i ∈ K;</p><formula xml:id="formula_13">p 0; (11) X i∈K ηipij &lt; rj, for all j ∈ S.<label>(10)</label></formula><p>We note that if condition (2) is satisfied, then there exists a multi-strategy which satisfies these constraints and vice versa.</p><p>Since the objective function is convex and the constraints are linear, MP is a standard convex programme, and its solution can be found in polynomial time in the number of unknowns and in the number of constraints. We note that there may exist multiple multi-strategies that minimize (9) subject to (10)-(12).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Size-unaware multi-strategies</head><p>The following result will play a key role in the rest of the paper. It shows that there exists a size-unaware multistrategy that is optimal.</p><p>Proposition 2. Let p be a multi-strategy satisfying the constraints (10)-(12). The multi-strategyˆpstrategyˆ strategyˆp defined byˆpij</p><formula xml:id="formula_15">byˆ byˆpij = P l∈K η l p lj η = ρj(p)rj η ,<label>(13)</label></formula><p>for all i ∈ K and for all j ∈ S, also satisfies the constraints (10)-(12). Moreover, the load on a server underˆpunderˆ underˆp is equal to the load on it under p.</p><p>Proof. The equality</p><formula xml:id="formula_16">X j∈Sˆpij j∈Sˆ j∈Sˆpij = X j∈S P l∈K η l p lj η = 1,</formula><p>for all i ∈ K, shows thatˆpthatˆ thatˆp satisfies (10).</p><p>Since ηi is non-negative for all i ∈ K, and p satisfies (11), ˆ p also satisfies (11).</p><p>The equality</p><formula xml:id="formula_17">X i∈K ηî pij = X i∈K ηi P l∈K η l p lj η = X l∈K η l p lj</formula><p>helps us to verify thatˆpthatˆ thatˆp indeed satisfies (12). Finally, since</p><formula xml:id="formula_18">ρj(ˆ p) = P i∈K ηî pij rj = P l∈K η l p lj rj = ρj(p),</formula><p>for all j ∈ S, the load on a server is the same under both p andˆpandˆ andˆp.</p><p>From Proposition 2, we can infer that, for every feasible multi-strategy, there exists a feasible size-unaware multistrategy such that both these strategies induce the same load on the servers. Since the objective function in the MP depends on the multi-strategy only through the induced load (cf. <ref type="formula" target="#formula_8">(5)</ref>), we can conclude that one may restrict oneself without loss of optimality to finding policies that take routing decisions independently of the (known) amount of service requirement of a job. The result of Proposition 2 further illustrates that the optimal load balancing in PS server farms is rather different than in FCFS server farms, where the size of jobs is used by the optimal routing policy.</p><p>Moreover, the value of the mathematical programming (9)-(12) can be obtained by optimizing directly over the loads. The routing probabilities can be determined later from (13), once the load on each server is determined.</p><p>Let</p><formula xml:id="formula_19">fj(x) =  cjx/(1 − x), for 0 ≤ x &lt; 1; ∞,</formula><p>otherwise.</p><p>From <ref type="formula" target="#formula_8">(5)</ref> and Proposition 2, we can conclude that an optimal load balancing policy is obtained by applying <ref type="formula" target="#formula_1">(13)</ref> to the solution of the following Reduced Mathematical Program (RMP):</p><formula xml:id="formula_20">minimize X j∈S fj(ρj)<label>(14)</label></formula><p>subject to 0 ρ 1;</p><formula xml:id="formula_21">(15) X j∈S rjρj = η.<label>(16)</label></formula><p>Constraint <ref type="formula" target="#formula_1">(16)</ref> guarantees that all incoming jobs are served.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Characterizing the solution</head><p>Depending on the values of the service rates and the holding costs per unit time, the optimal multi-strategy may not use all servers, but due to constraint (16) we are certain that at least one server will be used. Let SG ⊆ S denote the subset of servers that the optimal multi-strategy uses.</p><p>In the following theorem we characterize the solution of (14)-(16). In particular we note that the solution to (14)-(16) is unique. Theorem 1. The subset of servers that are used in the optimal load balancing is SG = {1, . . . , j * }, where</p><formula xml:id="formula_22">j * = sup ( j ≤ C : j X k=1 √ cjrj &gt; j X k=1 r k − η ! r cj rj )<label>(17)</label></formula><p>Under the optimal multi-strategy, the load on server j ∈ SG is</p><formula xml:id="formula_23">ρ * j = 1 − r cj rj P k∈S G r k − η P k∈S G √ c k r k .<label>(18)</label></formula><p>Proof. The Lagrangian associated with the RMP can be defined as</p><formula xml:id="formula_24">L(ρ, ν, ζ, γ G ) = X j∈S fj(ρj) + X j∈S νj(0 − ρj) + X j∈S ζj(ρj − 1) + γG X j∈S rjρj − η ! ,<label>(19)</label></formula><p>where ν 0, ζ 0 and γ G ∈ R.</p><p>Note that the RMP is convex. From Proposition 1 (see (4)) there exists a feasible solution. As a consequence by</p><note type="other">Slater's condition [4, Section 5.2.3] strong duality is satisfied. Then, ρ * and (γ G * , ν * , ζ * ) are primal and dual optimal</note><p>with zero duality gap if they satisfy the Karush-KuhnTucker (KKT) conditions</p><formula xml:id="formula_25">0 ρ * 1; X j∈S rjρ * j = η; γ G * ∈ R; ν * 0; ζ * 0; ν * j ρ * j = 0, ζ * j (ρ * j − 1) = 0, for all j ∈ S;<label>(20)</label></formula><formula xml:id="formula_26">cj 1 (1 − ρ * j ) 2 − γ G * rj − ν * j + ζ * j = 0, for all j ∈ S.<label>(21)</label></formula><p>Condition <ref type="formula" target="#formula_2">(20)</ref> are the so-called complementary slackness, which hold due to strong duality.</p><p>Since the objective function tends to infinity when ρj tends to 1 at any server j, it follows that necessarily ρ * 1. Therefore, from (20) it follows that ζ * = 0. Since ν 0, from (21) we get</p><formula xml:id="formula_27">γ G * ≤ cj rj 1 (1 − ρ * j ) 2 , for all j ∈ S,<label>(22)</label></formula><p>and on eliminating the variables νj from <ref type="formula" target="#formula_2">(20)</ref>, we get</p><formula xml:id="formula_28">" cj 1 (1 − ρ * j ) 2 − γ G * rj « ρ * j = 0, for all j ∈ S.<label>(23)</label></formula><p>For a given server j, if γ G * is greater than cj/rj, then <ref type="formula" target="#formula_2">(22)</ref> can only be satisfied if ρ * j is greater than 0 as well, which together with (23) implies that</p><formula xml:id="formula_29">ρj = 1 − r cj rj r 1 γ G * .<label>(24)</label></formula><p>Assume now that γ G * ≤ cj/rj. If ρj is greater than 0 then</p><formula xml:id="formula_30">γ G * ≤ cj/rj &lt; cj (1 − ρ * j ) 2 rj ,</formula><p>which violates the complementary slackness condition (23). Thus, if γ G * ≤ cj/rj, then ρ * j is equal to 0. In conclusion, we have</p><formula xml:id="formula_31">ρ * j = ( 1 − q c j r j q 1 γ G * , if γ G * &gt; cj/rj; 0, otherwise.<label>(25)</label></formula><p>From the above equation, we see that ρ * j are non-decreasing in γ G * . Therefore, there is a unique value of γ G * such that constraint (16) is satisfied. Since cj/rj is non-decreasing in j, it now follows that SG = {1, . . . , j * }, where j * can be computed using <ref type="bibr" target="#b21">(22)</ref> and is such that</p><formula xml:id="formula_32">cj * rj * &lt; γ G * &lt; cj * +1 rj * +1 .<label>(26)</label></formula><p>From <ref type="formula" target="#formula_2">(24)</ref> and <ref type="formula" target="#formula_1">(16)</ref>, we obtain</p><formula xml:id="formula_33">r 1 γ G * = P k∈S G r k − η P k∈S G √ c k r k ,<label>(27)</label></formula><p>which together with (26) gives</p><formula xml:id="formula_34">j * = sup ( j ≤ C : cj rj &lt; P j k=1 √ c k r k P j k=1 r k − η ! 2 ) ,</formula><p>which is an equivalent condition to the one stated in (17) On combining <ref type="formula" target="#formula_2">(26)</ref> and <ref type="formula" target="#formula_2">(25)</ref>, we get</p><formula xml:id="formula_35">ρ * j = 1 − r cj rj P k∈S G r k − η P k∈S G √ c k r k ,</formula><p>which is the result stated in (18).</p><p>Corollary 1. The size-unaware multi-strategy, ˆ p * , is given byˆp</p><formula xml:id="formula_36">byˆ byˆp * ij = ρ * j rj η</formula><p>, for all i ∈ K and for all j ∈ S.</p><p>Remark 3. The solution structure of Theorem 1 is known as water-filling. We will say more about this in Section 4.4.</p><p>From Theorem 1 we see that ρ * j &gt; ρ * i , for any j &lt; i. Since the mean number of jobs in a server increases with its load, we conclude that, under any optimal multi-strategy, E[Nj] &gt; E <ref type="bibr">[Ni]</ref> for any j &lt; i. Interestingly, in the next proposition we show that, even though ρ * j &gt; ρ * i , the weighted mean sojourn time in server j will be smaller than the weighted mean sojourn time in server i.</p><p>Proposition 3. For the multi-strategy (28), and for any two servers j and i in SG,</p><formula xml:id="formula_38">cjE[Tj] &lt; ciE[Ti], for j &lt; i.</formula><p>Proof. From Little's law (see equation <ref type="formula" target="#formula_9">(6)</ref>) and the multistrategy (2) we have</p><formula xml:id="formula_39">cjE[Tj] = cjE[Nj] P i∈K λî p * ij = cjE[Nj] P i∈K λi ρ j r j η .</formula><p>Substituting <ref type="formula" target="#formula_1">(18)</ref> we get</p><formula xml:id="formula_40">cjE[Tj] = r cj rj η P k∈S G √ c k r k P k∈K λi " P k∈S G r k − η " .</formula><p>The result now follows by noting that for any j &lt; i, cj/rj &lt; ci/ri.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Alternative characterization of the optimal solution</head><p>In this subsection we write in vector form the KKT conditions that characterize the optimal solution to the global optimization problem. This representation will play a crucial role in determining the optimal routing strategy in the distributed non-cooperative setting. For simplicity in the exposition, we assume that all servers are used.</p><p>Let us first introduce the Hadamard product for matrices. For two arbitrary matrices X = (x)ij and Y = (y)ij of the same dimension, we denote by X • Y the matrix whose (i, j) element is aijbij. Thus, the Hadamard product just refers to the element-wise product of matrices. The standard product of two matrices is denoted by X · B. Finally for an arbitrary matrix X we denote by X T its transpose matrix.</p><p>Let t(p) be the gradient of the objective function, i.e., t(p) is a matrix of dimension K × C whose (i, j) element is given by</p><formula xml:id="formula_41">tij = ∂ P k∈S f k (p) ∂pij .<label>(29)</label></formula><p>Then, similar to the derivation of (22)-(23), p is optimal for the original problem (9)-(12) if and only if there exist Lagrange multipliers γ1, ..., γC and a matrix Γ of dimensions K × C whose (i, j) element is given by</p><formula xml:id="formula_42">Γij = γj, such that (t + Γ) • p = 0,<label>(30)</label></formula><formula xml:id="formula_43">t + Γ 0,<label>(31)</label></formula><formula xml:id="formula_44">1C · p T = 1K , p 0.<label>(32)</label></formula><p>Note that equations <ref type="formula" target="#formula_4">(30)</ref> and <ref type="formula" target="#formula_1">(31)</ref> are the analogue of equations <ref type="formula" target="#formula_2">(23)</ref> and <ref type="formula" target="#formula_2">(22)</ref>, respectively.</p><p>This equivalent characterization through complementarity inequalities of a globally optimal solution will be essential for the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">THE INDIVIDUAL OPTIMALITY</head><p>We study now the distributed non-cooperative setting, where an arriving customer, say of class i, aware of its required amount of service (σi) −1 , wishes to minimize its own weighted expected sojourn time. The weighting is done according to the queue to which the file is sent as can be viewed as a pricing that may vary from one queue to another. If a class-i user chooses to be served by server j then its weighted conditional expected sojourn time there is</p><formula xml:id="formula_45">τij(p) = cjE[Tj(p)|i] = cj rjσi × 1 1 − ρj(p) .<label>(33)</label></formula><p>Definition 1. We say that customers of class i use queue j if ρ i j &gt; 0; i.e., queue j receives a strictly positive load from class i.</p><p>Definition 2. We say that a strategy p is an equilibrium for the individual optimization problem if for each i = 1, ..., K, each j = 1, ..., C and each queue k used by class i,</p><formula xml:id="formula_46">E[c k T k (p)|i] = min j=1,...,K E[cjTj(p)|i].<label>(34)</label></formula><p>Without loss of generality, we can replace the equilibrium condition in (34) with the condition</p><formula xml:id="formula_47">E[dic k T k (p)|i] = min j=1,...,K diE[cjTj(p)|i].<label>(35)</label></formula><p>where di are arbitrary strictly positive constants. Equation (34) characterizes the equilibrium, since only when (34) is satisfied users will not have an incentive to deviate from their strategy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">A potential game approach to obtain the equilibrium</head><p>Denote by T(p) a K × C matrix whose (i, j) element is τij(p). Let a be the matrix of dimensions K ×C whose (i, j) element is given by aij = aj.</p><p>We can characterize the equilibrium by the following relations: p is an equilibrium if and only if there is some a such that the following holds.</p><formula xml:id="formula_48">` T(p) + a ´ • p = 0,<label>(36)</label></formula><formula xml:id="formula_49">T(p) + a 0,<label>(37)</label></formula><formula xml:id="formula_50">1C · p T = 1K , p 0.<label>(38)</label></formula><p>We observe (36)-(38) and note that they are the same as the system <ref type="formula" target="#formula_4">(30)</ref>- <ref type="formula" target="#formula_2">(32)</ref>, provided that we identify the minimum cost vector a with the Lagrange multiplier vector Γ, and we identify T as a gradient vector of some potential function G.</p><p>Since system <ref type="formula" target="#formula_4">(30)</ref>- <ref type="formula" target="#formula_2">(32)</ref> were equivalent to a global minimization, we conclude that (36)-(38) are equivalent to the equilibrium p being the global minimum of the function G subject to the constraints (38). Note that the minimum is unique in terms of ρj if G is a strictly convex function of ρj.</p><p>Games that can be transformed into an equivalent optimization problem with a common function optimized jointly by all users are known as potential games. They have been introduced in <ref type="bibr" target="#b0">[1]</ref> in the context of road traffic, see also <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b20">21]</ref>. In particular, the existence of a potential function is a sufficient condition for various greedy dynamics of the game to converge to equilibrium.</p><p>Proposition 4. The distributed non-cooperative game can be transformed into a standard convex optimization problem of minimizing</p><formula xml:id="formula_51">C X k=1 c k log T (ρ k (p))<label>(39)</label></formula><p>subject to the constraints <ref type="formula" target="#formula_1">(10)</ref>- <ref type="formula" target="#formula_1">(12)</ref> where T (z) := 1/(1 − z) for 0 ≤ z &lt; 1 and ∞ for z ≥ 1.</p><p>Proof. Define</p><formula xml:id="formula_52">G(p) := C X k=1 Z ρ k (p) z=0 c k T (z)dz.<label>(40)</label></formula><p>Then</p><formula xml:id="formula_53">G(p) = C X k=1 Z ρ k (p) z=0 c k T (z)dz = C X k=1 c k log T (ρ k (p))</formula><p>Thus,</p><formula xml:id="formula_54">∂G(p) ∂pij = cjT j (p) × dρj dpij = cj 1 − ρj(p) × λi σirj = λi " cjE[Tj(p)|i] "</formula><p>We conclude that G is indeed a potential as its gradient coincides with the original costs as given in <ref type="formula" target="#formula_4">(35)</ref>, where di = λi. The optimal solution p to <ref type="formula" target="#formula_4">(39)</ref> is given by the only vector that satisfies the KKT conditions, which in turn are precisely given by (36)- <ref type="formula" target="#formula_4">(38)</ref>, where a denotes the Lagrange multiplier vector.</p><p>This implies that indeed the game can be transformed into a standard convex optimization problem of minimizing G subject to the constraints (10)-(12), whose solutions are equilibria in the original game.</p><p>As we did in Section 3.1, we can further simplify the above optimization problem. Indeed, the value is directly obtained through minimizing G(p) :</p><formula xml:id="formula_55">= P C k=1 R ρ k z=0</formula><p>c k T (z)dz subject to (15)-(16). The solution to the game problem is obtained from the loads that achieve the minimization by using (13).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Fairness</head><p>Let us interpret the meaning of the potential function G. Define ∆ k := 1 − ρ k to be the excess capacity at server k. We note that the argument that achieves the minimization of G(p) achieves the maximum of the product of (∆1) c 1 × (∆2) c 2 × · · · × (∆C ) c C . We conclude the following: Theorem 2. The individual optimal load balancing solution coincides with the routing strategy that achieves the weighted proportional fair excess capacities between the C servers, where the weight for server k is given by the powers c k .</p><p>Proof. The result is a direct consequence of (39) and the definition of Proportional Fair allocation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Characterizing the Individual Optimal solution</head><p>Since we have shown that the individual setting corresponds to a potential game, in equilibrium, the optimal routing strategy will minimize (40) subject to (15)-(16). We have the following result.</p><p>Theorem 3. The subset of servers that are used in the optimal routing strategy in the non-cooperative setting is of type SI = {1, . . . , j * }, where</p><formula xml:id="formula_56">j * = sup ( j ≤ C : j X k=1 cj &gt; j X k=1 r k − η ! cj rj )<label>(41)</label></formula><p>For every j ∈ SI , the load is</p><formula xml:id="formula_57">ρj = 1 − cj rj P j k=1 r k − η P j k=1 c k .<label>(42)</label></formula><p>Proof. The derivation follows the same steps of the proof of Theorem 1. From Proposition 1 (see equation <ref type="formula" target="#formula_6">(4)</ref> </p><formula xml:id="formula_58">cj (1 − ρj) − γ I rj − νj + ζj = 0,<label>(43)</label></formula><p>then ρj, j = 1, . . . , C and (γ I , ν, ζ) are primal and dual optimal with zero duality gap. Since the objective function tends to infinity if ρj → 1 at some server, it follows that necessarily ρj &lt; 1, j = 1, . . . , C. Because of (43) this implies that ζj = 0, for all j. Now note that νj are slack variables which can be eliminated. Since νj ≥ 0, from (44) we get</p><formula xml:id="formula_60">γ I ≤ cj rj 1 (1 − ρj) ,<label>(45)</label></formula><p>and from (43) we have</p><formula xml:id="formula_61">" cj (1 − ρj) − γ I rj « ρj = 0.<label>(46)</label></formula><p>Now, if γ I &gt; cj/rj, equation <ref type="formula" target="#formula_6">(45)</ref> can only be satisfied if ρj &gt; 0, and from (46) this implies that</p><formula xml:id="formula_62">ρj = 1 − cj rj 1 γ I .<label>(47)</label></formula><p>Assume now that γ I ≤ cj/rj. If ρj &gt; 0 then this implies that γ I ≤ cj/rj &lt; c j (1−ρ j )r j , which violates the complementary slackness condition (46). Thus if γ I ≤ cj/rj then ρj = 0. In conclusion we have that</p><formula xml:id="formula_63">ρj = ( 1 − c j r j 1 γ I γ I &gt; cj/rj 0 γ I &lt; cj/rj.</formula><p>It follows that ρj &gt; 0 are non-decreasing in γ I . Thus there is a unique value of γ I such that constraint (16) is satisfied. It follows that SI = {1, . . . , j * }. From (45) we have that the index j * is such that</p><formula xml:id="formula_64">cj * rj * &lt; γ I &lt; cj * +1 rj * +1 .<label>(48)</label></formula><p>Substituting <ref type="formula" target="#formula_6">(47)</ref> in <ref type="formula" target="#formula_1">(16)</ref> we get</p><formula xml:id="formula_65">1 γ I = P k∈S I r k − P K i=1 ηi P k∈S I c k .<label>(49)</label></formula><p>This proves equation <ref type="formula" target="#formula_2">(42)</ref>. From (48) we get that server j is used if and only if</p><formula xml:id="formula_66">cj rj &lt; P j k=1 c k P j k=1 r k − P K i=1 ηi ,</formula><p>from where (41) follows.</p><p>We note that a routing strategy that achieves the desired load (42) in every server (and as a consequence the same performance) can be obtained by <ref type="bibr" target="#b12">(13)</ref>.</p><p>Remark 4. From (42) it is easy to see that (34) is satisfied for each i = 1, . . . , K and each j ∈ SI . This can also be seen from equation <ref type="formula" target="#formula_6">(47)</ref>, which implies that in every server j ∈ SI that is used the mean cost per unit of service required at the server, c j /r j 1−ρ j = γ I , is independent of the server.</p><p>From Remark 4 and Proposition 3 we observe the main difference between the global and individual optimal solutions. In the individual optimal solution is constrained to a solution such that the mean sojourn time is the same in each server. In the global optimal solution the weighted mean sojourn time varies across the servers, and in fact, it increases as the index of the server increases (see Proposition 3).</p><p>When ci = c, ∀i, equation <ref type="formula" target="#formula_1">(41)</ref> becomes</p><formula xml:id="formula_67">rj+1 &lt; ( j X k=1 r k − K X k=1 ηi) 1 j .<label>(50)</label></formula><p>Equation <ref type="formula" target="#formula_8">(50)</ref> has a clear interpretation. Server j+1 will not be used if the exceeding capacity per server when j servers are used is larger than rj+1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">The structure of the selfish routing</head><p>We recall from (8) that servers are relabeled in increasing order with respect to the ratio cj/rj, j = 1, . . . , C. Let there be M1 servers with ci/ri = c1/r1. Let there be M2 servers with ci/ri = cM 1 +1/rM 1 +1. Let there be M k servers with ci/ri = cM k−1 +1/rM k−1 +1.</p><p>Then, from (34), the optimal policy has the following water-filling structure. For λ sufficiently small, only the first M1 servers receive positive flow. This flow is assigned in a way that equalizes the expected delay among the first M 1 servers. We increase λ till a point where</p><formula xml:id="formula_68">c1 r1 × 1 1 − ρ1(p) = c2 r2 .</formula><p>From this point, we route flow to all M1 + M2 first servers in a way that equalizes the expected delays on these servers.</p><p>No flow is sent to other servers. This type of solution is often referred as to water-filling.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">COMPARING THE GLOBAL AND INDI-VIDUAL OPTIMUM SOLUTIONS</head><p>In this section we compare the optimal load balancing expressed in Theorems 1 and 3. Our first result shows SI ⊆ SG, that is, the number of servers that are used in the global optimum solution is greater or equal to the number of servers used in the distributed non-cooperative setting. This indicates that in the non-cooperative setting, users will tend to overload fast servers, and fail to recognize the benefits that using a slower server can have. A similar property was proven in <ref type="bibr" target="#b1">[2]</ref> for a exponential multi-server system.</p><p>In this section, ρ G j and ρ I j will denote the load in server j in the global and individual optimal solution, respectively. In view of <ref type="formula" target="#formula_2">(24)</ref> and <ref type="formula" target="#formula_6">(47)</ref> we will consider that both ρ G j := ρ G j (γ) and ρ I j := ρ I j (γ) are a function of a common variable γ. We start with the following Lemma.</p><formula xml:id="formula_69">Lemma 1. For 0 &lt; γ ≤ cj/rj, ρ G j (γ) = ρ I j (γ) = 0. For γ &gt; cj/rj, ρ G j (γ) &lt; ρ I j (γ).</formula><p>Proof. The case γ ≤ cj/rj is obvious. For the second case, we have</p><formula xml:id="formula_70">γ &gt; cj/rj √ γ √ γ √ γ &gt; r cj rj = c j r j q c j r j r cj rj r 1 γ &gt; cj rj 1 γ</formula><p>and from equations (24) and (47) it follows that ρ G j (γ) &lt; ρ I j (γ).</p><p>Proposition 5. For any arrival rate and service time distribution it holds SI ⊆ SG Proof. From Theorems 1 and 3 (equations <ref type="bibr">(27)</ref> and <ref type="formula" target="#formula_6">(49)</ref>) it is sufficient to prove that γ G &gt; γ I . We prove the statement by contradiction. Assume that</p><formula xml:id="formula_71">γ G ≤ γ I . If γ I &lt; cj/rj, then ρ I j (γ) = ρ G j (γ) = 0. If γ I &gt; cj/rj then ρ I j (γ I</formula><p>) &gt; 0 and from Lemma 1 we have</p><formula xml:id="formula_72">ρ I j = ρ I j (γ I ) γ I ≥γ G ≥ ρ I j (γ G ) Lemma 1 &gt; ρ G j (γ G ) = ρ G j .</formula><p>It follows then that P C j=1 rj(ρ I j − ρ G j ) &gt; 0, but this is a contradiction with (3), and as a consequence γ G &gt; γ I .</p><p>In the following theorem we show that the individual optimal overloads the servers with smallest cj/rj.</p><formula xml:id="formula_73">Theorem 4. There exists an index i * such that  ρ G j &lt; ρ I j j &lt; i * ρ G j &gt; ρ I j j ≥ i * .</formula><p>Proof. Due to constrain (3), there exists an index i * such that ρ G i * &gt; ρ I i * . Now it suffices to show that ρ G j &gt; ρ I j , for all j &gt; i * . From (24) and (47) we have that</p><formula xml:id="formula_74">ρ G i * &gt; ρ I i * r ci * ri * r 1 γ G &lt; ci * ri * 1 γ I γ I &lt; r ci * ri * p γ G .</formula><p>Since j &gt; i * , it follows that cj/rj &gt; ci * /ri * . Thus</p><formula xml:id="formula_75">γ I &lt; r ci * ri * p γ G &lt; r cj rj p γ G = c j r j q c j r j p γ G ,</formula><p>and rearranging we get q</p><formula xml:id="formula_76">c j r j q 1 γ G &lt; c j r j 1 γ I .</formula><p>From <ref type="formula" target="#formula_2">(24)</ref> and (47) it follows that ρ G j &gt; ρ I j .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Price of Anarchy</head><p>We now study the so-called Price of Anarchy. Definition. The price of anarchy (PoA) is defined as the ratio between the performance (mean delay) obtained by the Wardrop equilibrium and the global optimal solution <ref type="bibr" target="#b14">[15]</ref> (see also <ref type="bibr" target="#b19">[20]</ref>). By Little's law, calculating the ratio between the mean delays is equivalent to calculating the ratio of the mean number of users. Then from the objective function (7) and the solution of Theorems 1 and (3) we get (note that x</p><formula xml:id="formula_77">1−x = 1 1−x −1): P oA = P k∈S I c k P k∈S I r k P k∈S I r k −η − P k∈S I c k " P k∈S G √ c k r k " 2 P k∈S G r k −η − P k∈S G c k .<label>(51)</label></formula><p>The Price of Anarchy has been studied as a measure of the inefficiency of selfish-routing (or non-cooperative decentralized) in networks. This measure has received lot of attention in recent years. For example, in an important general result, it has been shown that when the cost function in every arc is linear, then for any arbitrary multi-commodity network the PoA is upper bounded by 4/3 <ref type="bibr" target="#b19">[20]</ref>. In <ref type="bibr" target="#b10">[11]</ref> and <ref type="bibr" target="#b21">[22]</ref> the authors study a multi-server system with the objective of minimizing <ref type="formula" target="#formula_10">(7)</ref> with equal costs, that is, cj = c, ∀j, and show that P oA ≤ C, with C denoting the number of servers. Note that the upper bound holds for any parameter configuration. In addition, in [11, Example 3.1] it is shown that the upper bound is tight, i.e., there exists a network configuration such that the PoA is arbitrarily close to C. This result indicates that the inefficiency of selfish routing is limited. In Theorem 5 we show that this changes dramatically when holding costs per unit of time associated to each server are considered in the objective function. In this case the PoA is unbounded, that is, for every θ &lt; ∞, there exist a set of values such that P oA &gt; θ. Our main result on the Price of Anarchy is the following.</p><p>Theorem 5. For every θ, there exist cj and rj, j ∈ S, such that P oA &gt; θ.</p><p>Proof. In order to prove this result we construct an example in which P oA can be unbounded. Let r1 &gt; η, and let</p><formula xml:id="formula_78">cj = rj = 1 for 2 ≤ j ≤ C. Let (r1 − η) r1 &lt; c1 &lt; r1 − η.<label>(52)</label></formula><p>For this particular choice of costs and server speeds, cj/rj is non-decreasing in j.</p><p>We first show that in the globally optimal multi-strategy all the servers are used, whereas in the solution of the individual optimization problem only the first server is used.</p><p>Global optimization: Note that cj/rj = 1, ∀j ≥ 2. In view of (17), server j, j ≥ 2, will be used if</p><formula xml:id="formula_79">j X k=1 √ cjrj = √ c1r1 + j − 1 &gt; r1 − η + j − 1 = j X k=1 rj − η ! r cj rj ,</formula><p>where the inequality follows from the assumption c1 &gt; (r 1 −η) 2 r 1 . Since this is true for every j ≤ C, the load on every server is positive.</p><p>Individual optimization: For j = 2, the left-hand side of (41) we have</p><formula xml:id="formula_80">c1 + c2 = c1 + r2 &lt; r1 − η + r2 = (r1 + r2 − η) r c2 r2 ,</formula><p>where the inequality follows from the assumption c1 &lt; r1−η. Thus, in the non-cooperative setting all the jobs choose to go to the first server. From (51), the Price of Anarchy</p><formula xml:id="formula_81">P oA = " c1r1 r1 − η − c1 « × 1 ( P k∈S G √ c k r k ) 2 P k∈S G r k −η − P k∈S G c k = c1η r1 − η × r1 − η + (C − 1) ( √ c1r1 + (C − 1)) 2 − (c1 + (C − 1))(r1 − η + (C − 1)) (53) Since (r 1 −η) 2 r 1 &lt; c1 &lt; r1 − η, let c1 = 1 2 " (r1 − η) 2 r1 + r1 − η « = (r1 − η) 2r1 − η 2r1 .<label>(54)</label></formula><p>Now as r1 ↓ η, the numerator of (53) tends to η 2 (C − 1), whereas the denominator tends to 0.</p><p>Therefore, by choosing r1 close enough to η, the Price of Anarchy for this system can be made to exceed any given real number.</p><p>Remark 5. We note that examples where the PoA is unbounded have been previously found. For instance, it is easy to determine an instance of the popular Prisoner's dilemma where the PoA is unbounded. It also follows from the network studied in <ref type="bibr" target="#b11">[12]</ref> that the PoA is unbounded.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.1">Discussion on Theorem 5</head><p>In order to provide an intuitive idea behind Theorem 5, first note that a key underlying idea is that in the global optimal all servers are used, whereas in the non-cooperative setting only one server is used. This property follows directly from the the upper and lower bounds of (52). Let us consider the lower bound in (52). From equations <ref type="formula" target="#formula_2">(26)</ref> and <ref type="bibr">(27)</ref> and the water-filling structure of the solution, we see that if r 1 c 1 (r 1 −η) 2 &lt; c 2 r 2 = 1, only server 1 will be used. Server 2 (and similarly all other servers), will start being used exactly when c1 &gt; (r1 − η) 2 /r1, which explains the lower bound on c1 in (52). Similarly, from <ref type="formula" target="#formula_6">(48)</ref> and <ref type="formula" target="#formula_6">(49)</ref> we can see that the upper bound in (52) guarantees that only server 1 is used in the non-cooperative setting.</p><p>As we have seen, the Price of Anarchy is given by P oA =</p><formula xml:id="formula_82">minp P C j=1 c j E[N I j ] minp P C j=1 c j E[N G j ]</formula><p>. Let us look to the numerator and denominator separately.</p><p>In the non-cooperative solution only server 1 is used. Thus P C j=1 cjE[N I j ] = c1E <ref type="bibr">[N I 1 ]</ref>, and server 1 is a standard M/G/1 queue. Thus, as r1 ↓ η, E <ref type="bibr">[N I 1 ]</ref> tends to infinity, but this is compensated by the fact that c1 → 0, and overall c1E[N I 1 ] → η/2. Another way to see this is from equation <ref type="formula" target="#formula_4">(33)</ref>, where we see that τi1 = c 1 r 1 −η . Thus, with c1 given from (54), it turns out that as r1 ↓ η, the performance (weighted with the cost) that users joining server 1 remains unchanged.</p><p>In the global optimal solution, always all servers are used. As r1 ↓ η, the global optimal also tends to route everything towards server 1, but the key property is that since all servers are used, the global optimal can do this in such a way that E[N G 1 ] grows more slowly than the decrease of c1, and as a consequence This result states that the P oA is unbounded for the load balancing problem under consideration. It is in complete contrast to finite upper bounds obtained by <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b21">22]</ref>, for similar models but without holding costs per unit of time associated to each server. Thus, when holding costs are taken into account, a significantly different P oA is obtained.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5.2</head><p>The case when rj and cj/rj are not equal Theorem 5 can be extended to the case when not all rj are equal and cj/rj are not necessarily equal.</p><p>Let r = P j∈S rj be the aggregate available service rate of system. Let us assume that we are given a sequence of server rates rj such that r1 &gt; η. We wish to show that there exists a sequence {cj, j ∈ S}, such that cj/rj is strictly increasing and that the following two inequalities are satisfied</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>) there exists a feasible solution. As a consequence, by Slater's con- dition [4, Section 5.2.3] strong duality holds. Then from the Karush-Kuhn-Tucker (KKT) conditions if 0 ≤ ρj ≤ 1, j = 1, . . . , C, X j∈S I rjρj = η, γ I ∈ R, νj ≥ 0, ζj ≥ 0, j = 1, . . . , C, νjρj = 0, ζj(ρj − 1) = 0, j = 1, . . . , C,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>More specifically, this is what happens with the global optimal solution. First, for all j ≥ 2, as r1 ↓ η (and c1 given by (54)), ρj → 0. Since cj, ∀j ≥ 2, remain constant this implies that P C j=2 cjE[N G j ] → 0. Concerning server 1, from (24), as r1 ↓ η, ρ1 = 1 − o( √ r1 − η), which implies that E[N G 1 ] = O(1/ √ r1 − η). Since c1 = o(r1 − η) as r1 ↓ η, it turns out that c1E[N G 1 ] → 0. Thus, for the global optimal solution P C j=1 cjE[N G j ] → 0 as r1 ↓ η, which explains why the PoA can not be bounded.</figDesc></figure>

			<note place="foot">Remark 2. Since the objective function defined in (7) depends only on the mean service time at each of the servers, we could also interpret that the arrival stream is composed of K classes, where jobs of different classes have different service time distributions. The mean service time of class i jobs is σ −1 i , for i ∈ K. All the results in the present paper would hold under this interpretation as well. Nevertheless, for conciseness, in the present paper we stick to the interpretation expressed in Remark 1.</note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">ACKNOWLEDGEMENTS</head><p>The work of the third author was carried out while he was a post-doctoral fellow with the CWI (Amsterdam), TU/e (Eindhoven) and EURANDOM (Eindhoven). He wishes to acknowledge their support.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Studies in the Economics and Transportation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Beckmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">B</forename><surname>Mcguire</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">B</forename><surname>Winsten</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1956" />
		</imprint>
		<respStmt>
			<orgName>Yale University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Individual versus social optimization in the allocation of customers to alternative servers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Bell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Stidham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="831" to="839" />
			<date type="published" when="1983" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Optimal probabilistic allocation of customer types to servers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">C</forename><surname>Borst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGMETRICS</title>
		<meeting>ACM SIGMETRICS</meeting>
		<imprint>
			<date type="published" when="1995-09" />
			<biblScope unit="page" from="116" to="125" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Boyd</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Vandenberghe</surname></persName>
		</author>
		<title level="m">Convex optimization</title>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The state of the art in locally distributed Web-server systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Cardellini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Casalicchio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Colajanni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Yu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="263" to="311" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">The effect of local scheduling in load balancing designs. Performance Evaluation Review</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Marden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Wierman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Models for dynamic load balancing in a heterogeneous multiple processor system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y-C</forename><surname>Chow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">H</forename><surname>Kohler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="354" to="361" />
			<date type="published" when="1979" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Optimal state-free, size-aware dispatching for heterogeneous M/G/-type systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Misra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Rubenstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Performance Evaluation</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="issue">1-4</biblScope>
			<biblScope unit="page" from="36" to="39" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Analysis of join-the-shortest-queue routing for web server farms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Harchol-Balter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Sigman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Whitt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Performance</title>
		<meeting>Performance</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page">180</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">On choosing a task assignment policy for a distributed server system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Harchol-Balter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Crovella</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Murta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal of Parallel and Distributed Computing</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="204" to="228" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">The price of anarchy in an exponential multi-server</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Haviv</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Roughgarden</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operations Research Letters</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="421" to="426" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Paradoxes in performance optimization of distributed systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Kameda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Altman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Pourtallier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Hosokawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SSGRR 2000 Computer and ebusiness conference</title>
		<meeting>SSGRR 2000 Computer and ebusiness conference</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Optimal load balancing in distributed computer systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Kameda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Stochastic Networks and Reversibility</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Kelly</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979" />
			<publisher>Wiley</publisher>
			<pubPlace>Chichester</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Worst-case equilibria</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Koutsoupias</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Papadimitriou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of STACS 1999</title>
		<meeting>STACS 1999</meeting>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Monderer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">S</forename><surname>Shapley</surname></persName>
		</author>
		<title level="m">Potential games. Games and Econ. Behavior</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="124" to="143" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Optimal load balancing in a multiple processor with many job classes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">M</forename><surname>Ni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Hwang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Software Eng</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="491" to="496" />
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">The Traffic Assignment Problem: Models and Methods. VSP BV</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Patriksson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<pubPlace>The Netherlands</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A class of games possessing pure strategy Nash equilibria</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">W</forename><surname>Rosenthal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Game Theory</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="65" to="67" />
			<date type="published" when="1973" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Selfish Routing and the Price of Anarchy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Roughgarden</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
			<publisher>MIT Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Potential games with continuous player sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">H</forename><surname>Sandholm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Economic Theory</title>
		<imprint>
			<biblScope unit="volume">97</biblScope>
			<biblScope unit="page" from="81" to="108" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Performance of server selection algorithms for content replication networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Starobinski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IFIP Networking</title>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
