<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:42+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Symmetries and the Complexity of Pure Nash Equilibrium</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Felix</forename><surname>Brandt</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Institut für Informatik</orgName>
								<orgName type="institution">Universität München</orgName>
								<address>
									<addrLine>Oettingenstr. 67</addrLine>
									<postCode>80538</postCode>
									<settlement>München</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Felix</forename><surname>Fischer</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Institut für Informatik</orgName>
								<orgName type="institution">Universität München</orgName>
								<address>
									<addrLine>Oettingenstr. 67</addrLine>
									<postCode>80538</postCode>
									<settlement>München</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Markus</forename><surname>Holzer</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Institut für Informatik</orgName>
								<orgName type="institution">Technische Universität München</orgName>
								<address>
									<addrLine>Boltzmannstr. 3</addrLine>
									<postCode>85748</postCode>
									<settlement>Garching</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Symmetries and the Complexity of Pure Nash Equilibrium</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>game theory</term>
					<term>normal-form games</term>
					<term>symmetries</term>
					<term>pure Nash equilibrium</term>
					<term>compu- tational complexity</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Strategic games may exhibit symmetries in a variety of ways. A characteristic feature, enabling the compact representation of games even when the number of players is unbounded, is that players cannot, or need not, distinguish between the other players. We investigate the computational complexity of pure Nash equilibria in four classes of symmetric games obtained by considering two additional properties: identical payoff functions for all players and the ability to distinguish oneself from the other players. In contrast to other types of succinctly representable multi-player games, the pure equilibrium problem is tractable in all four classes when only a constant number of actions is available to each player. Identical payoff functions make the difference between TC 0-completeness and membership in AC 0 , while a growing number of actions renders the equilibrium problem NP-hard for three of the classes and PLS-hard for the most restricted class for which the existence of a pure equilibrium is guaranteed. Our results also extend to larger classes of threshold symmetric games where players are unable to determine the exact number of players playing a certain action.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>In recent years, the computational complexity of game-theoretic solution concepts, both in cooperative and non-cooperative game theory, has come under increas-ing scrutiny. A major obstacle when considering normal-form games with an unbounded number of players is the exponential size of the explicit representation of the payoffs. More precisely, a general game in normal-form with n players and k actions per player comprises n·k n numbers. Computational statements over such large objects are somewhat dubious for two reasons <ref type="bibr">[cf. 28]</ref>. First, the value of efficient, i.e., polynomial-time, algorithms for problems whose input size is already exponential in a natural parameter (the number of players) is questionable. Secondly, most, if not all, "natural" multi-player games will hardly be given as multi-dimensional payoff matrices but rather in terms of some more intuitive (and compact) representation. A natural and straightforward way to simplify the representation of multiplayer games is to somehow formalize similarities between players. As a matter of fact, symmetric games have been studied since the early days of game theory <ref type="bibr">[e.g., 34, 15, 25]</ref>. The established definition states that a game is symmetric if the payoff functions of all players are identical and symmetric in the other players' actions, i.e., it is impossible to distinguish between the other players <ref type="bibr" target="#b34">[35,</ref><ref type="bibr" target="#b23">24]</ref>. When explicitly looking at multi-player games, there are other conceivable notions of symmetry. For instance, dropping the requirement of identical payoff functions yields a more general class of multi-player games that still admit a compact representation.</p><p>In this paper, we define four classes of succinctly representable symmetric multiplayer games and study the computational complexity of finding pure Nash equilibria in games belonging to these classes. It turns out that in all four classes equilibria can be found efficiently if only a constant number of actions is available to each player. Moreover, identical payoff functions for all players further reduce the computational complexity of pure equilibria, an effect that is nullified as soon as there are two different payoff functions. The fact that a player cannot (or does not) distinguish himself from the other players, does not seem to offer any computational advantage. Finally, computing pure equilibria becomes intractable in all four classes of symmetric games when the number of actions grows at least linearly in the number of players.</p><p>Unlike Nash equilibria in mixed strategies, i.e., probabilistic combinations of actions, pure Nash equilibria are not guaranteed to exist. If they exist, however, pure equilibria have two distinct advantages over mixed ones. For one, requiring randomization in order to reach a stable outcome has been criticized on various grounds. In multi-player games, where action probabilities in equilibrium can be irrational numbers, randomization is particularly questionable. Secondly, pure equilibria as computational objects are usually much smaller in size than mixed ones.</p><p>We assume the reader to be familiar with the well-known chain of complexity classes AC 0 ⊂ TC 0 ⊆ L ⊆ P ⊆ NP, and the notions of constant-depth and polynomial-time reducibility <ref type="bibr">[e.g., 7, 27, 21]</ref>. AC 0 is the class of problems solvable by uniform constant-depth Boolean circuits with unbounded fan-in, and TC 0 adds so-called threshold gates which output true if and only if the number of true inputs exceeds a certain threshold. Here, uniformity means that there is an "effi-cient" algorithm for constructing, for each input length n, the circuit C n from the circuit family C = (C n ) n≥0 . Different notions of efficiency give rise to different notions of uniformity <ref type="bibr" target="#b30">[31]</ref>. We will consider logspace-uniform circuit families, where the mapping n → C n is computable in deterministic logarithmic space. In some of our constructions we use sub-circuits described by Chandra et al. <ref type="bibr" target="#b6">[7]</ref> as basic building blocks. It is easy to see that all these sub-circuits are logspace-uniform. Finally, L is the class of problems solvable by deterministic Turing machines using only logarithmic space, and P and NP are the classes of problems that can be solved in polynomial time by deterministic and nondeterministic Turing machines, respectively. Furthermore, #P is the class of counting problems associated with polynomially balanced polynomial-time decidable relations. The class PLS of polynomial local search problems and an appropriate notion of reduction <ref type="bibr" target="#b21">[22]</ref> will be introduced as needed.</p><p>The remainder of this paper is organized as follows: In the following section, we survey relevant work on symmetric games, succinct representations, and the computational complexity of pure Nash equilibrium. In Section 3, we then formally introduce four different notions of symmetry in strategic games and the solution concept of Nash equilibrium. The main results of this paper, including efficient algorithms as well as hardness results for all four symmetry classes, are given in Section 4. In Section 5, we provide additional results for a more general notion of symmetry. Section 6 concludes the paper and points to some open problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Symmetries in games have been investigated since the earliest days of game theory. Von Neumann <ref type="bibr" target="#b33">[34]</ref> and von <ref type="bibr">Neumann and Morgenstern [35]</ref> were the first to consider symmetries of cooperative games, calling a game in characteristic form symmetric if the value of a coalition depends only on its size. In the context of two-player (non-cooperative) normal-form games, the term symmetric is used to refer to games with a skew-symmetric payoff matrix [e.g., <ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b14">15]</ref>, corresponding to strong symmetry in the vocabulary of this paper. Gale et al. <ref type="bibr" target="#b14">[15]</ref> provided a (polynomial-time) reduction from arbitrary games to symmetric games which preserves equilibria. Since finding a (possibly mixed) equilibrium in general games has recently been shown PPAD-complete even for games with just two players <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b7">8]</ref>, the same holds for symmetric games as well. The above hardness result has also led to an increased interest in approximate equilibria. In particular, the larger class of anonymous games, allowing different payoff functions for different players, has been shown to admit an approximation by a factor depending on the Lipschitz constant of the payoff function and on the square of the number of actions, and a polynomial-time approximation scheme for the case of two actions <ref type="bibr" target="#b10">[11]</ref>.</p><p>To date, most research on symmetries in games has concentrated on games that require identical payoff functions for all players, called symmetric games in this paper. One of the reasons for this may have been the strong focus of the early research in non-cooperative game theory on two-player games, where anonymity as defined in this paper does not impose any restrictions. An early result by Nash <ref type="bibr" target="#b24">[25]</ref> shows that there always exists an equilibrium respecting all symmetries of the game, which in symmetric games implies the existence of a symmetric equilibrium, i.e., one where all players play the same (mixed) strategy. Papadimitriou and Roughgarden <ref type="bibr" target="#b27">[28]</ref> capitalize on this existence result and show that a Nash equilibrium of a symmetric game with n players and k actions can be computed in P if k = O(log n/ log log n). While their tractability results for correlated equilibrium <ref type="bibr" target="#b0">[1]</ref> do not rely on identical payoff functions and hence apply to anonymous games as well, this is not the case for the results about Nash equilibria. The aforementioned existence of symmetric Nash equilibria neither extends to pure equilibria, nor does it hold for anonymous games. For example, <ref type="figure">Figure 3</ref> on Page 8 shows an anonymous game without a symmetric equilibrium.</p><p>Obviously, deciding the existence of a pure Nash equilibrium is easy if the number of candidates for such an equilibrium, i.e., the number of action profiles, is polynomial in the size of the game. This is certainly the case for the explicit representation of a game as a multi-dimensional table of payoffs, but no longer holds if the game is represented succinctly. For example, deciding the existence of a pure equilibrium has been shown to be NP-complete for games in graphical normal form <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b13">14]</ref> or circuit form <ref type="bibr" target="#b32">[33]</ref>. Apart from these generic types, many succinct representations are related to symmetries in that they exploit some form of independence among certain actions or players playing these actions. In congestion games <ref type="bibr" target="#b29">[30]</ref>, the available actions consist of sets of resources, and the payoff depends on the number of other players that have selected the same resources (i.e., played the same action). Congestion games always have a pure equilibrium <ref type="bibr" target="#b29">[30]</ref>, and finding one is PLScomplete even for symmetric congestion games and in P in the symmetric network case <ref type="bibr" target="#b12">[13]</ref>. For singleton (or simple) congestion games, where only a single resource can be selected, there is a polynomial-time algorithm for finding a social-welfaremaximizing equilibrium <ref type="bibr" target="#b18">[19]</ref>. In local-effect games <ref type="bibr" target="#b22">[23]</ref>, the payoff from an action may also depend on (a function of) the number of agents playing "neighboring" actions. Unlike congestion games and local-effect games, action-graph games <ref type="bibr" target="#b2">[3]</ref> can encode arbitrary payoffs. For action-graph games of bounded degree, expected payoffs and the Jacobian of the payoff function can be computed in polynomial time. The latter forms the practical bottleneck step of the algorithm of Govindan and Wilson <ref type="bibr" target="#b17">[18]</ref> for finding Nash equilibria, but the algorithm may still take exponentially many steps to converge even for bounded degree. In fact, the pure equilibrium problem is NP-complete for symmetric action-graph games with bounded degree, but becomes tractable if the treewidth is bounded <ref type="bibr" target="#b19">[20]</ref>. In general action-graph games, the pure equilibrium problem is NP-complete even if the action-graph is a boundeddegree tree <ref type="bibr" target="#b11">[12]</ref>. Finally, Brandt et al. <ref type="bibr" target="#b5">[6]</ref> transfer different notions of symmetry to graphical games and obtain mostly negative results concerning the complexity of pure Nash equilibrium.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Preliminaries</head><p>In this section, we formally define essential game-theoretic concepts, introduce four notions of symmetry in strategic multi-player games, and state several facts concerning these notions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Strategic Games</head><p>An accepted way to model situations of strategic interaction is by means of a normal-form game <ref type="bibr">[e.g., 24]</ref>.</p><formula xml:id="formula_0">Definition 1 (normal-form game) A game in normal-form is a tuple Γ = (N, (A i ) i∈N , (p i ) i∈N )</formula><p>where N is a set of players and for each player i ∈ N, A i is a nonempty set of actions available to player i, and p i : ( i∈N A i ) → R is a function mapping each action profile of the game (i.e., combination of actions) to a real-valued payoff for player i.</p><p>A combination of actions s ∈ i∈N A i is also called a profile of pure strategies. This concept can be generalized to (mixed) strategy profiles s ∈ S = i∈N S i , by letting players randomize over their actions. We have S i denote the set of probability distributions over player i's actions, or (mixed) strategies available to player i. We further write n = |N| for the number of players in a game, s i for the ith strategy in profile s, and s −i for the vector of all strategies in s but s i .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Symmetries in Multi-Player Games</head><p>Symmetry as a property of a mathematical object typically refers to its invariance under a certain type of transformation. Symmetries of games usually mean invariance of the payoffs under automorphisms of the set of action profiles induced by some group of permutations of the set of players. Since such an automorphism preserves the number of players that play a particular action, a characteristic feature of symmetries in games is the inability to distinguish between other players. Following Daskalakis and Papadimitriou <ref type="bibr" target="#b10">[11]</ref> the most general class of games with this property will be called anonymous. Four different classes of games are obtained by considering two additional characteristics: identical payoff functions for all players and the ability to distinguish oneself from the other players. The games obtained by adding the former property will be called symmetric, and presence of the latter will be indicated by the prefix "self ". For the obvious reason, we will henceforth talk about games where the set of actions is the same for all players and write A = A 1 = · · · = A n and k = |A|, respectively, to denote this set and its cardinality. An intuitive way to describe anonymous games is in terms of equivalence classes of the aforementioned automorphism group, using a notion introduced by Parikh <ref type="bibr" target="#b28">[29]</ref> in the context of context-free languages. Given a set A of actions, the commutative image of an action profile s ∈ A N is given by #(s) = (#(a, s)) a∈A where #(a, s) = |{ i ∈ N : s i = a }|. In other words, #(a, s) denotes the number of players playing action a in action profile s, and #(s) is the vector of these numbers for all the different actions. This definition naturally extends to action profiles for subsets of the players.</p><formula xml:id="formula_1">Definition 2 (symmetries) Let Γ = (N, (A i ) i∈N , (p i ) i∈N )</formula><p>be a normal-form game and A a set of actions such that A i = A for all i ∈ N. Γ is called</p><p>• anonymous if p i (s) = p i (t) for all i ∈ N and all s, t ∈ A N with s i = t i and</p><formula xml:id="formula_2">#(s −i ) = #(t −i ), • symmetric if p i (s) = p j (t)</formula><p>for all i, j ∈ N and all s, t ∈ A N with s i = t j and #(s −i ) = #(t − j ), • self-anonymous if p i (s) = p i (t) for all i ∈ N and all s, t ∈ A N with #(s) = #(t), and • self-symmetric if p i (s) = p j (t) for all i, j ∈ N and all s, t ∈ A N with #(s) = #(t).</p><p>When talking about anonymous games, we write p i (s i , x −i ) to denote the payoff of player i under any action profile s with #(s −i ) = x −i . For self-anonymous games, p i (x) is used to denote the payoff of player i under any profile s with #(s) = x. It is easily verified that the class of self-symmetric games equals the intersection of symmetric and self-anonymous games, which in turn are both strictly contained in the class of anonymous games. An illustration of these inclusions is shown in <ref type="figure" target="#fig_0">Figure 1</ref>. <ref type="figure" target="#fig_1">Figure 2</ref> illustrates the different payoff structures for n = 3 and k = 2. In terms of this characterization, a game is anonymous if the payoff p i (s) of player i ∈ N in action profile s depends, besides his own action s i , only on the number #(a, s −i ) of other players playing each of the actions a ∈ A, but not on who plays them. If two players exchange actions, all other players' payoffs remain the same. For two-player games, anonymity does not impose any restrictions (action sets of equal size can simply be achieved by adding dummy actions for one of the players). This may be one of the reasons why anonymity has not received much attention in the past. A game is symmetric if it is anonymous and if the payoff function is the same for all players. Hence, if two players exchange actions, their payoffs are also exchanged while all other players' payoffs remain the same. Many well-known games like the Prisoner's Dilemma, Rock-Paper-Scissors, or Chicken are examples of symmetric (two-player) games. Multi-player simple congestion games <ref type="bibr" target="#b18">[19]</ref> are also symmetric. In a self-anonymous game the payoff of each player depends only on the number #(a, s) of players playing each of the actions a ∈ A, including the player himself. If two players exchange actions, the payoffs of all players remain the same. Matching Pennies is a self-anonymous two-player game, voting with identical weights can be seen as an example for the multi-player case. Finally, in a self-symmetric game the payoff is always the same for all players and stays the same if two players exchange actions. Self-symmetric games thus are a special case of common payoff (or pure coordination) games, in which every action profile with maximum payoff is an equilibrium (since no player can gain by deviating). Other games guaranteed to possess a pure equilibrium, and the complexity of finding an equilibrium in these games, have been investigated by Fabrikant et al. <ref type="bibr" target="#b12">[13]</ref>.</p><formula xml:id="formula_3">Γ 1 : (·, ·, ·) (a, g, c) (a, b, · ) ( · , e, f ) ( · , b, c) (d, e, · ) (d, ·, f ) (·, ·, ·) Γ 2 : (a, a, a) (b, c, b) (b, b, c) (e, d, d) (c, b, b) (d, d, e) (d, e, d) ( f, f, f ) Γ 3 : (·, ·, ·) (a, b, c) (a, b, c) (d, e, f ) (a, b, c) (d, e, f ) (d, e, f ) (·, ·, ·) Γ 4 : (a, a, a) (b, b, b) (b, b, b) (c, c, c) (b, b, b) (c, c, c) (c, c, c) (d, d, d)</formula><p>Interestingly, the ability to distinguish oneself from the other players does not increase the complexity of the pure equilibrium problem when players only have two actions.</p><p>Lemma 1 When there are only two actions available to each player, there exists an AC 0 -reduction from anonymous games to self-anonymous games that preserves pure Nash equilibria and identical payoff functions.</p><p>Proof: Let Γ = (N, ({a 1 , a 2 }) i∈N , (p i ) i∈N ) be an anonymous game, and define a new game Γ = (N, {a 1 , a 2 } n , (p i ) i∈N ) such that for all i ∈ N and for all x ∈ {0, 1, . . . , n−1},</p><formula xml:id="formula_4">(1) p i ((x, n − x)) &gt; p i ((x + 1, n − x − 1)) if and only if p i (a 1 , (x, n − x − 1)) &gt; p i (a 2 , (x, n − x − 1)), (2) p i ((x, n − x)) &lt; p i ((x + 1, n − x − 1)) if and only if p i (a 1 , (x, n − x − 1)) &lt; p i (a 2 , (x, n − x − 1)), and (0, 1, 1) (0,0,1) (1,1,1) (0, 0, 0) (0,1,0) (0, 0, 0) (0, 1, 0) (1, 0, 1) Fig. 3</formula><p>. Anonymous game with a unique, non-symmetric Nash equilibrium at the action profile with payoff (1, 1, 1). Players 1, 2, and 3 choose rows, columns, and tables, respectively. Outcomes are denoted as a vector of payoffs for the three players. Action profiles with the same commutative image as the equilibrium are shaded.</p><formula xml:id="formula_5">(3) p i ((x, n − x)) = p i ((x + 1, n − x − 1)) if and only if p i (a 1 , (x, n − x − 1)) = p i (a 2 , (x, n − x − 1)).</formula><p>Depending on the payoff structure of Γ, it may be necessary to use up to n different payoffs in Γ , even when Γ contains only two. It is now easily verified that Γ is selfanonymous in general, and self-symmetric if the original game Γ is symmetric. It should be noted that this construction cannot in general be extended to games where players have more than two actions, because it can lead to cyclic preference relations. For example, the symmetric two-player game Rock-Paper-Scissors cannot be mapped to a corresponding self-symmetric game using the above technique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Nash Equilibrium</head><p>One of the best-known solution concepts for strategic games is Nash equilibrium <ref type="bibr" target="#b24">[25]</ref>. In a Nash equilibrium, no player is able to increase his payoff by unilaterally changing his strategy.</p><p>Definition 3 (Nash equilibrium) A strategy profile s ∈ S is called a Nash equilibrium if for each player i ∈ N and each strategy s i ∈ S i ,</p><formula xml:id="formula_6">p i (s) ≥ p i ((s −i , s i )).</formula><p>A Nash equilibrium is called pure if it is a pure strategy profile.</p><p>For general games, simply checking the equilibrium condition for each action profile takes time polynomial in the size of their explicit representation. Using a succinct representation for games where the size of the explicit representation grows exponentially in the number of players, which is the case for k = 2 already, quickly renders the problem NP-complete <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b32">33]</ref>. On the other hand, the polynomial size even of the explicit representation for anonymous games with a constant number of actions might suggest that finding pure equilibria is easy by a similar argument as above. This reasoning is flawed, however, since a single entry in the payoff table corresponds to an exponential number of action profiles, and it is very well possible that only a single one of them is an equilibrium while all others are not. The anonymous game given in <ref type="figure">Figure 3</ref> illustrates this fact.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Solving Anonymous and Symmetric Games</head><p>In this section, we analyze the computational complexity of pure Nash equilibrium in anonymous and symmetric games with a constant number of actions and a growing number of actions, respectively. We first consider games with a constant number of actions, and show membership of the pure equilibrium problem for complexity classes inside P. We then show that the same problem becomes NP-hard and PLS-hard, respectively, if the number of actions is not bounded.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">A Few Words on Encodings</head><p>Since we are interested in games that model real-world situations, we will henceforth restrict ourselves to games that can be represented in space polynomial in their natural parameters, like the number of players or actions <ref type="bibr">[cf. 28]</ref>. We will try to characterize games in terms of their natural parameters, while making as few assumptions as possible about any particular encoding. Apart from hardness results in Section 4.3, which will be shown to extend to games with an exponential number of players, we assume that the number of players of a game is polynomial in the size of its representation. We further assume that each player can determine efficiently whether a particular action is a best response for a given action profile of the other players, which obviously is both necessary and sufficient for playing a game rationally and efficiently at the same time. Tractability results then hold for any encoding satisfying these properties. Hardness, on the other hand, is established via some encoding which allows efficient and rational play.</p><p>The most basic way to encode a normal-form game is to explicitly write down a multi-dimensional table listing the payoffs for every single action profile. Certain games can be represented more succinctly because the payoff is the same for action profiles that are equivalent according to some equivalence relation, and needs only be specified once. For anonymous games, this equivalence relation is given by the number of players playing each action. The representation that lists the payoffs for every equivalence class will henceforth be referred to as the explicit representation of an anonymous game. There are n+k−1 k−1 distributions of n players among k actions. Since these are exactly the equivalence classes of the set of action profiles for n − 1 players under the commutative image, an anonymous game can be represented using at most n · k · n+k−2 k−1 numbers, and is representable using space polynomial in n if and only if k is bounded by a constant. On the other hand, the size of the game becomes super-polynomial in n even for the slightest growth of k. Nevertheless, space polynomial in n may still suffice to encode certain subclasses of symmetric games with a larger number of actions if we use an implicit representation of the payoff functions like a Boolean circuit. It is easy to see that for games with a constant number of actions, any encoding of a game that has size at least linear in the number of players and satisfies the above assumption of rational and efficient play is equivalent to its explicit representation under polynomial-time reductions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Games with a Constant Number of Actions</head><p>We begin by investigating games with a constant number of actions. Obviously, solving a game cannot be easier than playing it optimally given that the opponents' actions are known. The most interesting upper bounds for the former problem will thus be obtained when the latter problem is easy. We will therefore assume throughout this section that for any action profile of his opponents, a player can compute the payoff of a particular action in AC 0 , i.e., by evaluating a Boolean circuit with constant depth and bounded fan-in. This particularly holds if the payoff function is given explicitly. It will further be obvious from the proofs that for payoff functions that are harder to compute, the complexity of the pure equilibrium problem exactly matches that of computing the payoff function.</p><p>As we have noted earlier, the potential hardness of finding pure equilibria in games with succinct representations stems from the fact that the number of action profiles that are candidates for being an equilibrium is exponential in the size of the representation of the game. While anonymous games certainly satisfy this property, the pure equilibrium problem nevertheless turns out to be tractable. The following theorem concerns games where the number of players is polynomial in the size of the representation.</p><p>Theorem 1 Deciding whether an anonymous or self-anonymous game with a constant number of actions has a pure Nash equilibrium is TC 0 -complete under constant-depth reducibility. Hardness holds even for games with three different payoffs and two different payoff functions.</p><p>Proof: For membership in TC 0 , we propose an algorithm that decides whether there exists a pure Nash equilibrium with a given commutative image. The theorem then follows by observing that the number of different commutative images is polynomial in the number of players if the number of actions is constant.</p><p>Let Γ = (N, (A i ) i∈N , (p i ) i∈N ) be an anonymous game, A = {a 1 , a 2 , . . . , a k } a set of actions such that A i = A for all i ∈ N. Given the commutative image x = (x a 1 , x a 2 , . . . , x a k ) for some action profile of Γ, call an action a ∈ A a potential best response for player i in x if x a &gt; 0 and</p><formula xml:id="formula_7">p i (a , x − ) ≥ p i (a m , x − ) for all a m ∈ A,<label>(1)</label></formula><p>where</p><formula xml:id="formula_8">x − = (x a 1 , . . . , x a −1 , x a − 1, x a +1 , . . . , x a k ).</formula><p>Fix a particular commutative image x = (x a 1 , x a 2 , . . . , x a k ), and define a bipartite graph G = (V, E) such that</p><formula xml:id="formula_9">V = V 1 ∪ V 2 , V 1 = N, V 2 = { (a j , ) : a j ∈ A, 1 ≤ ≤ x j }, and E = { (i, (a j , ))</formula><p>: a j is a potential best response for i under x }.</p><p>In other words, the two sides of G correspond to players and actions of Γ, respectively, with multiplicities of the actions chosen according to x. Edges connect each player to his potential best responses. The graph corresponding to the shaded action profiles in <ref type="figure">Figure 3</ref> is shown on the left of <ref type="figure" target="#fig_2">Figure 4</ref>. It is now readily appreciated that a pure equilibrium of Γ with commutative image x directly corresponds to a perfect matching of G, and vice versa. Furthermore, by Hall's Theorem, G has a perfect matching if and only if |ν(V )| ≥ |V | for all V ⊆ V 1 , where</p><formula xml:id="formula_10">ν(V ) = {v ∈ V 2 : (u, v) ∈ E, u ∈ V 1 } is the neighborhood of vertex set V [e.g., 4].</formula><p>Observe that Hall's condition cannot be verified efficiently in general. We will see, however, that this can indeed be done for G, by considering a new graph obtained from G which possesses only a constant number of vertices. More formally, assume w.l.o.g. that for all v ∈ V 1 , ν(v) ∅, and define an equivalence relation ∼ ⊆ V × V such that for all v, v ∈ V, v ∼ v if and only if ν(v) = ν(v ). By construction of G, and since both the number of actions and the number of possible subsets of actions are constant, the set V/∼ of equivalence classes has constant size, and</p><formula xml:id="formula_11">V/∼ = (V 1 /∼) ∪ (V 2 /∼)</formula><p>. Each element of V 1 /∼ corresponds to the set of players having a particular set of actions as their potential best responses in x. Each element of V 2 /∼ corresponds to an action in A. The neighborhood function ν can naturally be extended to equivalence classes by letting for each</p><formula xml:id="formula_12">U ∈ V 1 /∼, ν(U) = { U ∈ V 2 /∼ : v ∈ ν(u) for some u ∈ U, v ∈ U }.</formula><p>This yields a bipartite graph with vertex set V/∼, the graph corresponding to the game in <ref type="figure">Figure 3</ref> is shown on the right of <ref type="figure" target="#fig_2">Figure 4</ref>. It is now easily verified that G has a perfect matching, and Γ a pure equilibrium, if and only if for every</p><formula xml:id="formula_13">Y ⊆ V 1 /∼, X∈Y |ν(X)| ≥ |Y|.</formula><p>We proceed to show that this property can be verified by a threshold circuit with unbounded fan-in, constant depth, and a polynomial number of gates. From the description given below it is easy to see that the constructed circuit is logspaceuniform. Since V 1 /∼ has only a constant number of subsets, we can construct a constant depth threshold circuit which uses sub-circuits UNARY-COUNT and UNARY-TO-BINARY as described by Chandra et al. <ref type="bibr" target="#b6">[7]</ref> to sum over elements of</p><formula xml:id="formula_14">p 0 0 . . . + 1 . . . m + 2</formula><p>. . . 1 0 1 0 2 1 0 1 0 1 . . .</p><formula xml:id="formula_15">p 1 0 . . . + 1 . . . m + 2</formula><p>. . . 1 0 1 0 1 2 0 1 0 1 . . . the equivalence classes, and COMPARISON sub-circuits to verify the inequalities. The former is easily realized with the help of MAJORITY gates. It thus remains to be shown that for any X ∈ V 1 /∼, |X| and |ν(X)| can be computed in TC 0 . For this, recall that a particular element of V 1 /∼ corresponds to the set of players that have a certain set of actions as their set of best responses in x. To compute the number of such players we first construct a circuit of constant depth that uses COMPARISON sub-circuits to check whether Equation 1 is satisfied for a fixed commutative image x, a particular player i ∈ N, and a particular action a ∈ A. To check whether C ⊆ A is the set of best responses for player i under x, we simply combine the outputs of the above circuits for all actions a ∈ A into a single AND gate, negating the outputs of that for actions a C. The desired number of players is then obtained by adding up the outputs of these gates for all players i ∈ N, again using UNARY-COUNT sub-circuits. On the other hand, |ν(X)| corresponds to the number of players bound to play an action from a certain subset in every action profile with commutative image x, and can easily be obtained by summing over the respective elements of x.</p><p>For hardness, we reduce the problem of deciding whether exactly bits of a string of m bits are 1 to deciding the existence of a pure equilibrium in a self-anonymous game. Hardness of the former problem is immediate from that of MAJORITY [e.g., 7]. For a particular m-bit string b, we define a game Γ with m + 2 players of two different types 0 and 1 and actions A = {0, 1}. The ith player of Γ is of type 0 or 1 if the ith bit of b is 0 or 1, respectively. Player m + 1 is of type 0, player m + 2 is of type 1. The payoffs p 0 and p 1 for the two types are given in <ref type="figure" target="#fig_3">Figure 5</ref>, the column labeled j specifies the payoff when exactly j players, including the player himself, play action 1. It is easily verified that this is an AC 0 reduction. We claim that Γ possesses a pure equilibrium if and only if exactly bits of b are 1. We observe the following:</p><p>• An action profile s cannot be an equilibrium of Γ if #(1, s) + 1. In this case, the players of one of the two types get a higher payoff at both #(1, s) − 1 and #(1, s) + 1, or at one of these in case #(1, s) = 0 and #(1, s) = m + 2. Since by construction we have at least one player of each type, there always exists a player who can change his action to get a higher payoff.</p><p>• If there are + 1 players of type 1, the action profile where all players of type 0 play action 0 and all players of type 1 play action 1 is an equilibrium. None of the players of type 0 can gain by changing his action to 1, and none of them can change his action to 0 (because all of them already play 0). A symmetric condition holds for players of type 1.</p><p>• In turn, if the number of players of type 1 does not equal + 1, an action profile s with #(1, s) = + 1 cannot be an equilibrium. In this case, there must be (i) a player of type 0 playing action 1 in s, or (ii) a player of type 1 playing 0. This player can change his action to get a higher payoff.</p><p>Hence, a pure equilibrium exists if and only if there are + 1 players of type 1, i.e., if and only if b has 1-bits. This completes the reduction.</p><p>In contrast to anonymous games, if s is a pure equilibrium of a symmetric game, so are all t satisfying #(t) = #(s). This is due to the fact that the payoff functions of all players, and thus the situation of all players playing the same action a ∈ A, is identical, as would be the situation of any other player exchanging actions with someone playing a. We exploit this property to show that deciding the existence of a pure equilibrium in symmetric games with a constant number of actions is strictly easier than for anonymous and self-anonymous games.</p><p>Theorem 2 The problem of deciding whether a symmetric game with a constant number of actions has a pure Nash equilibrium is in AC 0 .</p><p>Proof: Like with anonymous games, an action profile s is an equilibrium of a symmetric game if and only if, for all i ∈ N, s i is a best response to #(s −i ), i.e., if</p><formula xml:id="formula_16">p i (s i , #(s −i )) ≥ p i (a, #(s −i )) for all a ∈ A.<label>(2)</label></formula><p>For a particular player i ∈ N and for constant k, checking this inequality requires only a constant number of comparisons and can be done using a circuit of constant depth and polynomial size [e.g., 7]. When it comes to checking Equation 2 for the different players, the observation about action profiles with identical commutative images affords us a considerable computational advantage as compared to, say, anonymous or self-anonymous games. More precisely, we only have to check if Equation 2 is satisfied for a player playing a certain action, of which there are at most k. Again, this can be done using a circuit of constant depth and polynomial size if k is a constant.</p><p>Finally, to decide whether game Γ has a pure equilibrium, we have to check Equation 2 for the different values of #(s) for s ∈ A N . If k is constant, there are only polynomially many of these, so the complete check requires only polynomial size and constant depth.</p><p>The reasoning in the proof of Theorem 2 also provides a nice illustration of the fact that every symmetric game with two actions possesses a pure equilibrium, as recently shown by Cheng et al. <ref type="bibr" target="#b8">[9]</ref>. In the case of two actions, p i depends only on player i's action (0 or 1) and on the number of other players playing action 1. A pure equilibrium exists if for some m neither the players playing 0 (who see m players playing 1) nor the players playing 1 (who see m−1 other players playing 1) have an incentive to deviate, i.e., p i (0, m) ≥ p i (1, m) and p i (1, m − 1) ≥ p i (0, m − 1). For m = 0 and m = n, one of the conditions is trivially satisfied, because there are no players playing 1 or 0, respectively. It is now straightforward to show that at least one such m must exist. Alternatively, the existence of pure equilibria in symmetric games with two actions can also be obtained as an immediate consequence of Lemma 1. We can transform every symmetric game with two actions into a self-symmetric game with the same set of equilibria, and every game in the latter class is guaranteed to have at least one pure equilibrium.</p><p>As stated earlier, self-symmetric games always possess a pure equilibrium, namely an action profile with maximum payoff for every player. We proceed to show that such an action profile, which has the additional property of maximizing social welfare, i.e., the sum of all players' payoffs, can be found in AC 0 .</p><p>Theorem 3 The problem of finding a social-welfare-maximizing pure Nash equilibrium of a self-symmetric game with a constant number of actions is in AC 0 .</p><p>Proof: Since self-symmetric games belong to the class of common payoff games, any action profile with maximum payoff (for all players) is a social-welfaremaximizing equilibrium (and Pareto dominates any other strategy profile). Finding such an equilibrium is thus equivalent to finding the maximum of n+k−2 k−1 integers. The exact number is irrelevant as long as it is polynomial in the size of the input, which is certainly the case if k is bounded by a constant. Chandra et al. <ref type="bibr" target="#b6">[7]</ref> have shown that the maximum of m m-bit binary numbers can be computed by an unbounded fan-in, constant-depth Boolean circuit of size polynomial in m. Since m is of course polynomial in the size of the input, the size of this circuit is as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Games with a Growing Number of Actions</head><p>The proofs we have seen so far could exploit the fact that for constant k the explicit representation of an anonymous game is equivalent, under the appropriate type of reduction, to any kind of payoff function computable in a particular complexity class inside P. This need no longer be the case for unbounded k, because then the size of the explicit representation grows exponentially in n. Such games may of course still admit a polynomial representation, for example if payoff functions are encoded by a Boolean circuit. We will now show that deciding the existence of a pure equilibrium in anonymous, symmetric, and self-anonymous games becomes NP-hard if the number of actions grows in n. For self-symmetric games, which always have a pure equilibrium, the associated search problem will be shown to be PLS-hard. In particular, we show NP-completeness and PLS-completeness, respectively, for games that have a polynomial number of players-like those covered by Theorems 1 and 2-and a number of actions that grows linearly in the number of players. It will be obvious from the proofs that hardness for the respective classes also holds for games with an exponential number of players and logarithmic growth of the number of actions. The corresponding case with a constant number of actions, on the other hand, remains open.</p><p>If the number of actions in a game is large enough, they can in principle be used to distinguish the players playing them. We will exploit this fact and prove the following theorems by reductions from satisfiability of a Boolean circuit. For this, recall that circuit satisfiability (CSAT), i.e., deciding whether a Boolean circuit has a satisfying assignment, is NP-complete [e.g., <ref type="bibr" target="#b26">27</ref>]. We provide a reduction from CSAT to the problem of deciding the existence of a pure equilibrium in a special class of games. For a particular circuit C with inputs M = {1, 2, . . . , m}, we define a game Γ with at least m players and actions A = { a 0 j , a 1 j : j ∈ M } ∪ {b}. An action profile s of Γ where #(a 0 j , s) + #(a 1 j , s) = 1 for all j ∈ M, i.e., one where exactly one action of each pair a 0 j , a 1 j is played, directly corresponds to an assignment c of C, the jth bit of this assignment being 1 if and only if a 1 j is played. Observe that in this case the auxiliary action b has to be played by exactly n − m players. We can thus distinguish the action profiles of Γ corresponding to a satisfying assignment of C from those corresponding to a non-satisfying assignment and those not corresponding to an assignment at all.</p><p>Theorem 4 Deciding whether a self-anonymous game has a pure Nash equilibrium is NP-complete, even if the number of actions is linear in the number of players and there is only a constant number of different payoffs.</p><p>Proof: Membership in NP is obvious. Since the number of players is polynomial, we can simply guess an action profile and verify that it satisfies the equilibrium condition.</p><p>For hardness, we reduce satisfiability of a Boolean circuit C with inputs M = {1, 2, . . . , m} to the existence of a pure equilibrium in a game Γ with n ≥ m players, actions A = { a 0 j , a 1 j : j ∈ M } ∪ {b}, and payoff functions p i as follows:</p><p>• If s corresponds to a satisfying assignment of C, we let p i (s) = 1 for all i ∈ N.</p><p>• Otherwise we let</p><formula xml:id="formula_17">· p 1 (s) = 1, p 2 (s) = 0 if #(b, s) is even, · p 1 (s) = 0, p 2 (s) = 1 if #(b, s)</formula><p>is odd, and · p i (s) = 1 for all i ∈ N \ {1, 2}.</p><p>We observe the following:</p><p>• In all of the above cases, the payoff of player i only depends on the number of players playing certain actions. If two players exchange actions, the payoff to all players remains the same. Hence, Γ is self-anonymous.</p><p>• Clearly, every action profile s corresponding to a satisfying assignment of C is an equilibrium, because in this case all players receive the maximum payoff of 1.</p><p>• For an action profile s not corresponding to a satisfying assignment of C, either player 1 or player 2 receives a payoff of 0. Furthermore, by choosing his own action to be either b or some other action, this player can determine the parity of the number of players playing b. Changing the parity strictly increases the player's payoff. This means that s cannot be an equilibrium.</p><p>We have hence established a direct correspondence between satisfying assignments of C and pure equilibria of Γ. The transformation from C to Γ essentially works by writing down Boolean circuits that compute p i . Observing that this can be done in time polynomial in the size of C if n ≤ 2 k , where k = |A|, completes the proof.</p><p>As the reader may have noticed, the construction used in this proof has players 1 and 2 play matching pennies in the case where the Boolean circuit is not satisfied. Not only is this game a well-known example for a game that does not possess a pure equilibrium, it is also self-anonymous on its own. On the other hand, it is readily appreciated that the payoffs in this game do depend on the identities of the players, i.e., the game is not symmetric. We will have to avail of a different construction for the symmetric case.</p><p>Theorem 5 Deciding whether a symmetric game has a pure Nash equilibrium is NP-complete, even if the number of actions is linear in the number of players and there is only a constant number of different payoffs.</p><p>Proof: Membership in NP is again obvious.</p><p>For hardness, we provide a reduction from CSAT, mapping a circuit C with inputs M = {1, 2, . . . , m} to a game Γ with n ≥ m players, actions A = { a 0 j , a 1 j : j ∈ M } ∪ {b}, and payoff functions p i as follows:</p><p>• If s corresponds to a satisfying assignment of C, we let p i (s) = 2 for all i ∈ N.</p><p>• • For all of the above cases, the payoff of player i only depends on his own action and on the number of players playing certain other actions. If two players exchange actions, their payoffs are also exchanged. Hence, Γ is symmetric.</p><p>• Clearly, any action profile corresponding to a satisfying assignment of C is an equilibrium, because in this case all players receive the maximum payoff of 2.</p><p>• On the other hand, if s does not correspond to a satisfying assignment, we have one of three different cases, in none of which s is an equilibrium: · If #(b, s) &lt; n − m or #(b, s) &gt; n − m + 1, then there exists a player that receives payoff 0 and can change his action to receive a payoff of 1. · If #(a 0 j , s) = 1 for all j ∈ M, which can only be the case if #(b, s) &lt; n − m, player i can change to some a 1 m such that s i a 0 m to increase his payoff from 1 to 2. · Otherwise, there has to be some player i ∈ N who gets payoff 0, and, by the pigeonhole principle, some j ∈ M such that #(a 0 j , s −i ) = #(a 1 j , s −i ) = 0. Then, player i can change to a 0 j to get a higher payoff.</p><p>Again, there is a direct correspondence between pure equilibria of Γ and satisfying assignments of C. The transformation from C to Γ essentially works by writing down Boolean circuits that compute p i . Observing that this can be done in time polynomial in the size of C if n ≤ 2 k , where k = |A|, completes the proof.</p><p>By each of the previous two theorems and by the inclusion relationships between the different classes of games, we also have the following.</p><p>Corollary 1 Deciding whether an anonymous game has a pure Nash equilibrium is NP-complete, even if the number of actions is linear in the number of players and there is only a constant number of different payoffs.</p><p>Since the proofs of Theorems 4 and 5 work by mapping satisfying assignments of a Boolean circuit to a certain number of pure equilibria of a strategic game, we can show that counting the number of pure equilibria in the above classes of games is hard.</p><p>Corollary 2 For anonymous, symmetric, and self-anonymous games, counting the number of pure Nash equilibria is #P-hard, even if the number of actions is linear in the number of players and there is only a constant number of different payoffs.</p><p>Proof: Recall that in the proof of Theorem 4, actions of the game Γ are identified with inputs of the Boolean circuit C. As a direct consequence of anonymity or symmetry, it does not matter which player plays a particular action to assign a value to the corresponding gate. Every satisfying assignment of C thus corresponds to n! equilibria of Γ, so the number of satisfying assignments can be determined by counting the number of pure equilibria, of which there are at most 2 n n!, and dividing this number by n!. Division of two m-bit binary numbers can be done using a circuit with bounded fan-in and depth O(log m) <ref type="bibr" target="#b1">[2]</ref>. For m = log(2 n n!) = O(n 2 ), we have depth O(log n 2 ) = O(log n), so the above division can be carried out in NC 1 . We have thus found a reduction of the problem #SAT of counting the number of satisfying assignments of C, which is #P-complete [e.g., 27], to the problem of counting the pure equilibria of Γ. The same line of reasoning applies to the proof of Theorem 5. Analogously to Corollary 1, #P-hardness extends to anonymous games.</p><p>As we have already outlined above, every self-symmetric game possesses a pure equilibrium. Theorem 3 states that finding even a social-welfare-maximizing equilibrium is very easy as long as the number of actions is bounded by a constant. If now the number of actions is growing but polynomial in the size of the input, we can start at an arbitrary action profile and check in polynomial time whether some player can change his action to increase the (common) payoff. If this is not the case, we have found an equilibrium. Otherwise, we can repeat the process for the new profile, resulting in a procedure called best-response dynamics in game theory. Since the payoff strictly increases in each step, we are guaranteed to find an equilibrium in polynomial time if the number of different payoffs is polynomial. Conversely, we will show that, given a self-symmetric game with a growing number of actions and an exponential number of different payoffs, finding a pure equilibrium is at least as hard as finding a locally optimal solution to an NP-hard optimization problem. For this, we formally introduce the class of search problems for which a solution is guaranteed to exist by a local optimality argument.</p><p>Definition 4 (local search, PLS) A local search problem is given by (i) a set I of instances, (ii) a set F (x) of feasible solutions for each x ∈ I, (iii) an integer measure µ(S , x) for each S ∈ F (x), and (iv) a set N(S , x) of neighboring solutions for each S ∈ F (x). A solution is locally optimal if it does not have a strictly better neighbor, i.e., one with a higher or lower measure depending on the kind of optimization problem.</p><p>A local search problem is in the class PLS of polynomial local search problems <ref type="bibr" target="#b21">[22]</ref> if for every x ∈ I there exist polynomial time algorithms for (i) computing an initial feasible solution in F (x), (ii) computing the measure µ(S , x) of a solution S ∈ F , and (iii) determining that S is locally optimal or finding a better solution in N(S , x).</p><p>A problem P in PLS is PLS-reducible to another problem Q in PLS if there exist polynomial time computable functions Φ and Ψ mapping (i) instances x of P to instances Φ(x) of Q and (ii) solutions S of an instance Φ(x) of Q to solutions Ψ(S , x) of the corresponding instance x of P such that locally optimal solutions are mapped to locally optimal solutions.</p><p>Interestingly, problems in PLS have a fully polynomial-time approximation scheme <ref type="bibr" target="#b25">[26]</ref>.</p><p>The proof of the following theorem works along similar lines as those of Theorems 4 and 5 to give a reduction from the PLS-complete problem FLIP.</p><p>Theorem 6 The problem of finding a pure Nash equilibrium in a self-symmetric game is PLS-complete, even if the number of actions is linear in the number of players.</p><p>Proof: Neighborhood among action profiles is given by a single player changing his action. Since the number of players and actions is polynomial in the input size, and since the payoff function is computable in polynomial time, membership in PLS is immediate.</p><p>For hardness, consider a Boolean circuit C with inputs M = {1, 2, . . . , m} and outputs. Finding an assignment such that the output interpreted as an -bit binary number is a local maximum under the FLIP neighborhood (i.e., changing a single input bit) is known to be PLS-complete <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b31">32]</ref>. We provide a PLS reduction to the problem of finding a pure equilibrium in a self-symmetric game by mapping a particular circuit C as described above to a game Γ with n ≥ m players, actions A = { a 0 j , a 1 j : j ∈ M }, and a (common) payoff function p as follows:</p><p>• If s corresponds to an assignment c of C, we let p(s) = n + C(c), where C(c) denotes the output of C for input c, interpreted as a binary number.</p><formula xml:id="formula_18">• Otherwise, we let p(s) = min(#(b, s), n − m) + |{ j ∈ M : #(a 0 j , s) + #(a 1 j , s) &gt; 0 }|.</formula><p>That is, the payoff is at most n − 1 and decreases in the minimum number of players that would have to change their action in order to make s correspond to an assignment of C.</p><p>We observe the following:</p><p>• Obviously, Γ is a common payoff game. Since p is invariant under any permutation of the players in both of the above cases, Γ is self-symmetric.</p><p>• If n ≤ 2 k , where k = |A|, a Boolean circuit that computes p can be constructed from C in time polynomial in the size of C. Hence, there exists a polynomial time computable function that maps instances of FLIP to instances of the problem under consideration.</p><p>• An action profile a that does not correspond to an assignment of C cannot be an equilibrium of Γ. In this case there always exists j ∈ M such that a 0 j and a 1 j are played by more than one player. At the same time, less than n − m players play b, or no one plays a 0 j or a 1 j for some j ∈ M. If one of the players playing the former changes to the latter, he gets a higher payoff (actually, all players do).</p><p>• There is a direct correspondence between the FLIP neighborhood of C and a single player changing between a 0 j and a 1 j for some j ∈ M. Furthermore, changing to an action profile that does not correspond to an assignment of C will get the player strictly less payoff. Thus, there is a direct correspondence between pure equilibria of Γ and local maxima of C under the FLIP neighborhood. Obviously, the assignment corresponding to an action profile can be computed in polynomial time, if such an assignment exists. The conditions of Definition 4 do not require that we map solutions of Γ that are not locally optimal to solutions of C that are not locally optimal. This means that action profiles not corresponding to an assignment can simply be mapped to an arbitrary assignment.</p><p>It is easily verified that this satisfies the properties of a PLS reduction.</p><p>Implicit in the definition of PLS is a standard algorithm for finding a locally optimal solution for a given input x ∈ I: start with an arbitrary feasible solution S ∈ F (x) and repeatedly find a strictly better neighbor until a locally optimal solution T ∈ F (x) has been found. The standard algorithm problem can be phrased as follows: given x, find the locally optimal solution T output by the standard algorithm on input x. Schäffer and Yannakakis <ref type="bibr" target="#b31">[32]</ref> introduce the notion of a tight PLS reduction and show that tight reductions preserve both hardness of the standard algorithm problem and exponential worst-case running time of the standard algorithm.</p><p>Definition 5 (tight PLS reduction) Let P, Q be PLS problems. A PLS reduction (Φ, Ψ) from P to Q is called tight if for any instance x of P there exists a set R ⊆ F (Φ(x)) with the following properties:</p><p>(1) R contains all local optima of Φ(x). (2) For every p ∈ F (x), a solution q ∈ R satisfying Ψ(q, x) = p can be computed in polynomial time. (3) Consider q 0 , q 1 , . . . , q ∈ F (Φ(x)) such that q 0 , q ∈ R, q i R for all 0 &lt; i &lt; , q i+1 ∈ N(q i , Φ(x)) for all i &lt; , and</p><formula xml:id="formula_19">µ(q i ) &gt; µ(q j ) if i &gt; j. Let p = Ψ(q 0 , x), p = Ψ(q , x). Then, either p = p or p ∈ N(p, x).</formula><p>With some extra work, we can show that the reduction used in the proof of Theorem 6 is tight, and draw additional conclusions about the standard algorithm and the standard algorithm problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Corollary 3</head><p>The standard algorithm for finding pure Nash equilibria in selfsymmetric games has an exponential worst-case running time. The standard algorithm problem is NP-hard.</p><p>Proof: Johnson et al. <ref type="bibr" target="#b21">[22]</ref> have shown that the standard algorithm for FLIP has an exponential worst-case running time, and the standard algorithm problem is NPhard. By Lemma 3.3 of Schäffer and Yannakakis <ref type="bibr" target="#b31">[32]</ref> it thus suffices to show that the reduction in the proof of Theorem 6 is tight. To this end, choose R to be the set of actions profiles of Γ that correspond to an assignment of C. Obviously, R contains all optimal solutions, and a payoff profile corresponding to a particular assignment can be computed in polynomial time. The third condition is trivially satisfied because the measure of any solution inside R is strictly greater than that of any solution outside of R.</p><p>By a slight modification of the proof of Theorem 6, PLS-hardness, exponential worst-case running time of the standard algorithm, and NP-hardness of the standard algorithm problem can also be shown for general (i.e., not necessarily symmetric) common payoff games with k = 2. This fact nicely illustrates the influence of symmetry on the hardness of finding, or deciding the existence of, a pure equilibrium.</p><p>In order to extend the basic concept of symmetry as the indistinguishability of players, we will now consider games where the players cannot even observe the exact number of players playing a certain action, but only whether this number reaches certain thresholds. Let Γ = (N, (A i ) i∈N , (p i ) i∈N ) be a normal-form game and A a set of actions such that A i = A for all i ∈ N. For T ⊆ {1, 2, . . . , n}, let ∼ T ⊆ A N × A N be defined as follows: s ∼ T t if for all a ∈ A and all x ∈ T , #(a, s) &lt; x if and only if #(a, t) &lt; x. ∼ T naturally extends to action profiles for subsets of N. It is easily verified that for any T ⊆ {1, 2, . . . , n}, ∼ T is an equivalence relation on the set A M of action profiles for players M ⊆ N. We use ∼ T to generalize Definition 2.</p><formula xml:id="formula_20">Definition 6 (threshold symmetry) Let Γ = (N, (A i ) i∈N , (p i ) i∈N )</formula><p>be a normal-form game, A a set of actions such that A i = A for all i ∈ N. Let T ⊆ {1, 2, . . . , n}. Γ is called</p><p>• T -anonymous if p i (s) = p i (t) for all i ∈ N and all s, t ∈ A N with s i = t i and s −i ∼ T t −i , • T -symmetric if p i (s) = p j (t) for all i, j ∈ N and all s, t ∈ A N with s i = t j and s −i ∼ T t − j , • T -self-anonymous if p i (s) = p i (t) for all i ∈ N and all s, t ∈ A N with s ∼ T t, and • T -self-symmetric if p i (s) = p j (t) for all i, j ∈ N and all s, t ∈ A N with s ∼ T t.</p><p>For T = {1, 2, . . . , n}, these classes are equivalent to those of Definition 2. Moreover, we obtain Boolean symmetry, where payoffs only depend on the support of an action profile (i.e., the actions that are played by at least one player), for T = {1}. In general, we call a game threshold anonymous (for one of the above classes) if it is T -anonymous for some T (and the corresponding class).</p><p>Obviously, the number of payoffs that need to be written down for each player to specify a general T -anonymous game is exactly the number of equivalence classes of ∼ T for action profiles of the other players. A T -anonymous game can be represented using at most n · k · |A n−1 /∼ T | numbers, where X/∼ denotes the quotient set of set X by equivalence relation ∼. For Boolean anonymity, the number of equivalence classes equals the number of k-bit binary numbers where at least one bit is 1, i.e., 2 k − 1. More generally, there cannot be more than (|T | + 1) k equivalence classes if |T | is bounded by a constant (since for every action, the number of players playing this action must be between two thresholds), while for T = {n} there are as few as k + 1. Hence, any T -anonymous game with constant |T | is representable using space polynomial in n if k = O(log n). It does not matter if the thresholds themselves are constant or not. We are now ready to identify a class of threshold symmetric games for which the pure equilibrium problem is tractable. It should be noted that the proof technique is not limited to this particular class, but in fact applies to the larger class of games for which the kernel of the best response function has polynomial size.</p><p>Theorem 7 For threshold anonymous games with k = O(log n) and a constant number of thresholds, deciding the existence of a pure Nash equilibrium is in P.</p><p>Proof: Like in the proof of Theorem 1, we provide an algorithm that checks whether there is an equilibrium in a particular equivalence class X ∈ A N /∼ T . Since for k = O(log n) and |T | = O(1), the cardinality of A N /∼ T is polynomial in n, it suffices to show that the algorithm requires only polynomial time for every such set. For a particular element X ∈ A N /∼ T , the algorithm is again divided into two phases: (i) computing the set of best responses for each player under X, and (ii) checking whether there is a particular action profile s ∈ X where each player plays a best response.</p><p>In the first phase, and unlike the case T = {1, 2, . . . , n} covered by Theorem 1, the action a played by player i ∈ N may or may not yield a different element of A N\{i} /∼ T against which a should be a best response. Instead of just looking for best responses under elements of T N , we thus look for best responses under those of U N , where U = { u ≤ n : u ∈ T or (u − 1) ∈ T }. Since the cardinalities of both U N and of the set of possible best responses is polynomial if |T | = O(1) and k = O(log n), the first phase requires only polynomial time.</p><p>As for the second phase, we show that it can be reduced to deciding the existence of an integer flow with upper and lower bounds in a directed network with O(2 k ) vertices. Since this problem is in P if the number of vertices is polynomial [e.g., 16], observing that 2 k is polynomial in the size of the input if k = O(log n) completes the proof. Fix X ∈ A N /∼ T and define a directed graph G = (V, E) such that</p><formula xml:id="formula_21">V = {s, t, t } ∪ V 1 ∪ V 2 , V 1 = 2 A , V 2 = A, and E = {s} × V 1 ∪ { (A , a) ∈ V 1 × V 2 : a ∈ A } ∪ V 2 × {t} ∪ {(t, t )}.</formula><p>Further define two functions : E → N and u : E → N such that,</p><formula xml:id="formula_22">for all A ∈ V 1 , (s, A ) = u(s, A ) = |{ i ∈ N :</formula><p>A is the set of best responses of i under X }|, for all A ∈ V 1 and a ∈ A , (A , a) = 0 and u(A , a) = n, for all a ∈ V 2 , (a, t) = min x∈X #(a, x) and u(a, t) = max x∈X #(a, x), and (t, t ) = u(t, t ) = n. Obviously every feasible flow from s to t must have size n. Furthermore, the conditions for flow leaving vertices in V 1 require that there exists an assignment of actions to players such that each player plays a best response, while those for flow leaving edges in V 2 require that the resulting action profile is an element of X. It is thus readily appreciated that a flow from s to t satisfying lower bounds and upper bounds u directly corresponds to a Nash equilibrium of Γ, and vice versa.</p><p>On the other hand, it is rather straightforward to modify the games defined in the proofs of Theorems 4, 5, and 6 to be Boolean if n = k. We obtain the following corollary.</p><p>Corollary 4 Deciding the existence of a pure Nash equilibrium is NP-hard for threshold anonymous, threshold symmetric, and threshold self-anonymous games, even if thresholds are Boolean, the number of actions is linear in the number of players, and there is only a constant number of different payoffs. For the same classes, counting the number of pure Nash equilibria is #P-hard.</p><p>For threshold self-symmetric games, finding a pure Nash equilibrium is PLS-hard, even if thresholds are Boolean and the number of actions is linear in the number of players.</p><p>Proof: In all constructions, we assume n = m and remove the auxiliary action b. In addition to that, the self-anonymous game used in the proof of Theorem 4 is modified by letting players 1 and 2 play matching pennies on the parity of the number |{ j ∈ M : #(a 0 j , s) &gt; 0 }| of 0-actions that are played by at least one player. It is easily verified that the arguments used to show the correspondence between satisfying assignments of the Boolean circuit and pure equilibria of the respective game still go through. Furthermore, the payoff of a particular player in each of these games only depends on whether certain actions are played by at least one player and, potentially, on the player's own action.  <ref type="table">Table 1</ref> Complexity of pure Nash equilibrium in symmetric games</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion and Future Work</head><p>In this paper, we have introduced four notions of symmetry in strategic multi-player games and investigated the computational complexity of finding pure Nash equilibria. We established that this problem is tractable for games with a constant number of actions, but intractable if the number of actions grows at least linearly in the number of players. It is worth noting that, for games with a constant number of actions, the pure equilibrium problem happens to lie in NC 1 for all symmetry types and is thus open to parallel computation. For games with an exponential number of players in which the number of actions grows sub-logarithmically, the complexity remains open. The main results are summarized in <ref type="table">Table 1</ref>.</p><p>In future work, it would be interesting to extend our tractability results to larger classes of games. For example, games with a certain number of player types, where indistinguishability holds only for players of the same type, can be obtained by restricting Definition 2 to permutations that map players from a certain subset to players of the same set. Given a game in this class, we can construct an anonymous game with the same set of players and an action set that is the Cartesian product of the original set of actions and the set of player types. By assigning a unique minimum payoff to all actions not corresponding to the type of the respective player, we can ensure that players only play actions corresponding to their type in every equilibrium of the new game, effectively allowing us to distinguish players of different types in the new game. For games with a constant number of players the size of the new game is polynomial in the size of the original game, and the tractability result of Theorem 1 carries over immediately. A different notion, such that players of the same type have identical payoff functions, does not seem to provide additional structure. As we have already shown, only two different payoff functions suffice to make the pure equilibrium problem TC 0 -hard for a constant number of actions and NP-hard for a growing number of actions. More generally, one might investigate games where payoffs are invariant under particular sets of permutations. For example, von Neumann and Morgenstern <ref type="bibr" target="#b34">[35]</ref> regard the number of permutations under which the payoffs of a game are invariant as a measure for the degree of symmetry. The question is in how far the computational complexity of solving a game depends on the degree of symmetry.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Inclusion relationships between anonymous, symmetric, self-anonymous, and self-symmetric games</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Relationships between the payoffs of anonymous (Γ 1 ), symmetric (Γ 2 ), self-anonymous (Γ 3 ), and self-symmetric (Γ 4 ) games for n = 3 and k = 2. Players 1, 2, and 3 simultaneously choose rows, columns, and tables, respectively, and obtain payoffs according to the vector in the resulting cell. Each lower case letter stands for a payoff value, dots denote arbitrary payoff values. As an example for the separation of the different classes, Γ 1 is not symmetric if a c and not self-anonymous if b g. Γ 2 is not self-anonymous if b c. Γ 3 is not self-symmetric if a c.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Matching problem for the game of Figure 3 (left) and representation of the same problem by a graph with a constant number of vertices (right), as used in the proof of Theorem 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Payoffs of the game Γ used in the proof of Theorem 1</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>If s does not correspond to a satisfying assignment of C, we distinguish three different cases according to the number #(b, s) of players playing action b: · If #(b, s) &lt; n − m, we let p i (s) = 1 if s i = b, and p i (s) = 0 otherwise. · If #(b, s) &gt; n − m, we let p i (s) = 0 if s i = b, and p i (s) = 1 otherwise. · Finally, if #(b, s) = n − m, we let p i (s) = 2 if s i = a 1 j for some j ∈ M, #(a 0 j , s) &gt; 0, and #(a 1 j , s) &gt; 0, p i (s) = 1 if s i = a 0 j for some j ∈ M, #(a 0 j , s) &gt; 0, and #(a 1 j , s) = 0, and p i (s) = 0 otherwise. We observe the following:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 shows the flow network for the game in Figure 3 .Fig. 6 .</head><label>636</label><figDesc>Figure 6 shows the flow network for the game in Figure 3. Edge capacities have been computed by checking for each player if his action in the respective (shaded) action profile of Figure 3 is a best response. Observe that since this game is not only threshold anonymous but also anonymous, upper and lower bounds are the same for flow leaving vertices in V 2 = A.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>This material is based upon work supported by the Deutsche Forschungsgemeinschaft under grants BR 2312/3-1 and BR 2312/3-2. An extended abstract of an earlier version of the paper appeared in the Proceedings of the 24th International Symposium on Theoretical Aspects of Computer Science (STACS). We thank Jan Johannsen for helpful discussions on circuit complexity and local search, and Rob Powers for introducing the first author to the ambiguity of symmetry in games. We further thank the anonymous referees for helpful comments.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Subjectivity and correlation in randomized strategies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">J</forename><surname>Aumann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Mathematical Economics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="67" to="96" />
			<date type="published" when="1974" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Log depth circuits for division and related problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Beame</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename><surname>Cook</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">J</forename><surname>Hoover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal of Computing</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="994" to="1003" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Computing Nash equilibria of action-graph games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Bhat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Leyton-Brown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 20th Annual Conference on Uncertainty in Artificial Intelligence (UAI)</title>
		<meeting>the 20th Annual Conference on Uncertainty in Artificial Intelligence (UAI)</meeting>
		<imprint>
			<publisher>AUAI Press</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="35" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Modern Graph Theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Bollobás</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">La théorie du jeu et leséquationsles´leséquations intégralesintégrales`intégralesà noyau symétrique</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Borel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comptes Rendus de l&apos;Académie des Sciences</title>
		<imprint>
			<biblScope unit="volume">173</biblScope>
			<biblScope unit="page" from="1304" to="1308" />
			<date type="published" when="1921" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Equilibria of graphical games with symmetries</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Brandt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Fischer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Holzer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Electronic Colloquium on Computational Complexity</title>
		<imprint>
			<date type="published" when="2007" />
			<publisher>ECCC</publisher>
		</imprint>
	</monogr>
<note type="report_type">Tech. Rep. TR07-136</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Constant depth reducibility</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">K</forename><surname>Chandra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Stockmeyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Vishkin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="423" to="439" />
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Settling the complexity of 2-player Nashequilibrium</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Deng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 47th Symposium on Foundations of Computer Science (FOCS)</title>
		<meeting>the 47th Symposium on Foundations of Computer Science (FOCS)</meeting>
		<imprint>
			<publisher>IEEE Press</publisher>
			<date type="published" when="2006" />
			<biblScope unit="page" from="261" to="272" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Notes on equilibria in symmetric games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S.-F</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>Reeves</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Vorobeychik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">P</forename><surname>Wellman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6th International Workshop On Game Theoretic And Decision Theoretic Agents (GTDT)</title>
		<meeting>the 6th International Workshop On Game Theoretic And Decision Theoretic Agents (GTDT)</meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">The complexity of computing a Nash equilibrium</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Daskalakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Goldberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Papadimitriou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 38th Annual ACM Symposium on the Theory of Computing (STOC)</title>
		<meeting>the 38th Annual ACM Symposium on the Theory of Computing (STOC)</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2006" />
			<biblScope unit="page" from="71" to="78" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Computing equilibria in anonymous games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Daskalakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Papadimitriou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 48th Symposium on Foundations of Computer Science (FOCS)</title>
		<meeting>the 48th Symposium on Foundations of Computer Science (FOCS)</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2007" />
			<biblScope unit="page" from="83" to="93" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">On the complexity of nash equilibria of action-graph games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Daskalakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Schoenebeck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Valiant</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Valiant</surname></persName>
		</author>
		<idno>ArXiv:0802.1604v1</idno>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The complexity of pure Nash equilibria</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Fabrikant</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Papadimitriou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Talwar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 36th Annual ACM Symposium on the Theory of Computing (STOC)</title>
		<meeting>the 36th Annual ACM Symposium on the Theory of Computing (STOC)</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="604" to="612" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">The influence of neighbourhood and choice on the complexity of finding pure Nash equilibria</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Fischer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Holzer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Katzenbeisser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Processing Letters</title>
		<imprint>
			<biblScope unit="volume">99</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="239" to="245" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">On symmetric games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gale</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">W</forename><surname>Kuhn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">W</forename><surname>Tucker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Contributions to the Theory of Games</title>
		<editor>Kuhn, H. W., Tucker, A. W.</editor>
		<imprint>
			<publisher>Princeton University Press</publisher>
			<date type="published" when="1950" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="81" to="87" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Computers and Intractability: A Guide to the Theory of NP-Completeness</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">R</forename><surname>Garey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Johnson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979" />
			<publisher>W. H. Freeman</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Pure Nash equilibria: Hard and easy games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Gottlob</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Greco</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Scarcello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Artificial Intelligence Research</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="195" to="220" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A global Newton method to compute Nash equilibria</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Govindan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Wilson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Economic Theory</title>
		<imprint>
			<biblScope unit="volume">110</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="65" to="86" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Fast and compact: A simple class of congestion games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ieong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Mcgrew</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Nudelman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shoham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Sun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 20th National Conference on Artificial Intelligence (AAAI)</title>
		<meeting>the 20th National Conference on Artificial Intelligence (AAAI)</meeting>
		<imprint>
			<publisher>AAAI Press</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="489" to="494" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Computing pure nash equilibria in symmetric action-graph games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">X</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Leyton-Brown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 22nd AAAI Conference on Artificial Intelligence (AAAI)</title>
		<meeting>the 22nd AAAI Conference on Artificial Intelligence (AAAI)</meeting>
		<imprint>
			<publisher>AAAI Press</publisher>
			<date type="published" when="2007" />
			<biblScope unit="page" from="79" to="85" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A catalog of complexity classes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Theoretical Computer Science</title>
		<editor>van Leeuwen, J.</editor>
		<imprint>
			<publisher>Elsevier</publisher>
			<date type="published" when="1990" />
			<biblScope unit="page" from="67" to="161" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">How easy is local search?</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Papadimitriou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Yannakakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer and System Sciences</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="79" to="100" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Local-effect games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Leyton-Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Tennenholtz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 18th International Joint Conference on Artificial Intelligence (IJ-CAI)</title>
		<meeting>the 18th International Joint Conference on Artificial Intelligence (IJ-CAI)</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="772" to="777" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Games and Decisions: Introduction and Critical Survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">D</forename><surname>Luce</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Raiffa</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1957" />
			<publisher>John Wiley &amp; Sons Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Non-cooperative games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Nash</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annals of Mathematics</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="286" to="295" />
			<date type="published" when="1951" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Approximate local search in combinatorial optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">B</forename><surname>Orlin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">P</forename><surname>Punnen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">S</forename><surname>Schulz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal of Computing</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1201" to="1214" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Computational Complexity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Papadimitriou</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<publisher>Addison-Wesley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Computing equilibria in multiplayer games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Papadimitriou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Roughgarden</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 16th Annual ACM-SIAM Symposium on Discrete Algorithms (SODA). SIAM</title>
		<meeting>the 16th Annual ACM-SIAM Symposium on Discrete Algorithms (SODA). SIAM</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="82" to="91" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">On context-free languages</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Parikh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the ACM</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="570" to="581" />
			<date type="published" when="1966" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A class of games possessing pure-strategy Nash equilibria</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">W</forename><surname>Rosenthal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Game Theory</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="65" to="67" />
			<date type="published" when="1973" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">On uniform circuit complexity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Ruzzo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer and System Sciences</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="365" to="383" />
			<date type="published" when="1981" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Simple local search problems that are hard to solve</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">A</forename><surname>Schäffer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Yannakakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="56" to="87" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">The computational complexity of Nash equilibria in concisely represented games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Schoenebeck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Vadhan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th ACM Conference on Electronic Commerce</title>
		<meeting>the 7th ACM Conference on Electronic Commerce</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2006" />
			<biblScope unit="page" from="270" to="279" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Zur Theorie der Gesellschaftspiele</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Von Neumann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematische Annalen</title>
		<imprint>
			<biblScope unit="volume">100</biblScope>
			<biblScope unit="page" from="295" to="320" />
			<date type="published" when="1928" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">The Theory of Games and Economic Behavior</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Von Neumann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Morgenstern</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1947" />
			<publisher>Princeton University Press</publisher>
		</imprint>
	</monogr>
	<note>2nd Edition</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
