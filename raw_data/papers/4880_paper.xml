<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T17:04+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">FTW: Fast Similarity Search under the Time Warping Distance</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yasushi</forename><surname>Sakurai</surname></persName>
							<email>sakurai.yasushi@lab.ntt.co.jp</email>
							<affiliation key="aff0">
								<orgName type="laboratory">NTT Cyber Space Laboratories</orgName>
								<orgName type="institution" key="instit1">Nagoya University</orgName>
								<orgName type="institution" key="instit2">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Masatoshi</forename><surname>Yoshikawa</surname></persName>
							<email>yosikawa@itc.nagoya-u.ac.jp</email>
							<affiliation key="aff0">
								<orgName type="laboratory">NTT Cyber Space Laboratories</orgName>
								<orgName type="institution" key="instit1">Nagoya University</orgName>
								<orgName type="institution" key="instit2">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christos</forename><surname>Faloutsos</surname></persName>
							<email>christos@cs.cmu.edu</email>
							<affiliation key="aff0">
								<orgName type="laboratory">NTT Cyber Space Laboratories</orgName>
								<orgName type="institution" key="instit1">Nagoya University</orgName>
								<orgName type="institution" key="instit2">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">FTW: Fast Similarity Search under the Time Warping Distance</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Time-series data naturally arise in countless domains, such as meteorology, astrophysics, geology, multimedia, and economics. Similarity search is very popular, and DTW (Dy-namic Time Warping) is one of the two prevailing distance measures. Although DTW incurs a heavy computation cost, it provides scaling along the time axis. In this paper, we propose FTW (Fast search method for dynamic Time Warping), which guarantees no false dismissals in similarity query processing. FTW efficiently prunes a significant number of the search candidates, which leads to a direct reduction in the search cost. Experiments on real and synthetic sequence data sets reveal that FTW is significantly faster than the best existing method, up to 222 times.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Time-series data naturally occur in many application domains, such as computational biology, meteorology, astrophysics, geology, multimedia and economics. Even though the databases generated by the corresponding applications continue to grow in size, a common demand is to find similarities between time-series data sequences. Moreover, these applications require a sequence-matching mechanism that is robust against noise while providing scaling of the time axis of the sequences. Retrieving long sequences is very expensive given the large data sets involved, and various indexing and searching methods have been proposed to reduce this cost. Most of the earlier works on high-speed sequence matching are based on the Euclidean distance function. Since the Euclidean distance function treats sequence elements independently, it cannot be used to calculate the distance between sequences whose lengths and/or sampling rates are different. Furthermore, it can be sensitive to outliers <ref type="bibr" target="#b1">[2]</ref>. Recent applications have adopted Dynamic Time Warping (DTW) <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b21">22]</ref> to overcome these problems <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b11">12]</ref>. DTW is a transformation that allows sequences to be stretched along the time axis to minimize the distance between the sequences. The distance of DTW is calculated by dynamic programming (See <ref type="table">Fig-</ref>  shall refer to it as the time warping matrix. The warping path is the set of grid cells in the time warping matrix, which represents an alignment between the sequences. Although DTW incurs a heavy computation cost, it is more robust against noise and provides scaling along the time axis. This ability allows DTW to identify similarities far more accurately and so enhances the functionality of the applications that use it.</p><p>The ideal method for DTW should fulfill the following requirements:</p><p>1. Fast: The exact DTW is quadratic, and prohibitive for long sequences.</p><p>2. No false dismissals: A search method that returns the qualifying sequences without any omissions is required. It should achieve a high level of search performance even though it ensures no false dismissals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">No restriction on the sequence lengths:</head><p>The method should handle any sequence, even data sequences of different lengths and/or data sequences with lengths different from that of the query sequence. <ref type="bibr" target="#b3">4</ref>. Support for any, as well as for no restriction on warping scope: The method in <ref type="bibr" target="#b13">[14]</ref> is fast, because it cleverly exploits global constraints <ref type="bibr" target="#b21">[22]</ref> that appear in dynamic programming (See <ref type="figure" target="#fig_1">Figure 2</ref>). We would like to have a method that can exploit the restrictions on the warping scope, when the user so desires; but we also want a method that will be fast for the plain DTW, that is, even when the user specifies no restrictions warping scope.</p><p>Our method, described below, bears all these characteristics, while none of the existing methods can claim the same.</p><p>The problem we address in this paper is the following:</p><p>Problem 1. Given S time-series data sequences of unequal lengths {P1, P2, . . ., PS}, a query sequence Q, an integer k, and optionally a warping scope W , find the knearest neighbors of Q from the data sequence set by using DTW with W .</p><p>The warping scope is the area that the warping path is allowed to visit in the time warping matrix. It can be limited by global constraints as shown in <ref type="figure" target="#fig_1">Figure 2</ref>. Some constraints are discussed in <ref type="bibr" target="#b21">[22]</ref> and <ref type="bibr" target="#b13">[14]</ref>. Note that W can be the unrestricted warping scope as well as any restricted warping scope in the problem definition of this paper.</p><p>In this paper, we propose FTW (Fast search method for dynamic Time Warping). To obtain the exact time warping distance, we have to compute distances for all possible warping paths; this incurs a high computation cost. In order to reduce the computation time, (1) we propose a new lower bounding measure that approximates the time warping distance, (2) we exclude the warping paths that will not yield fruitful search results by using a new algorithm for dynamic programming, and (3) the search algorithm gradually enhances the accuracy of the distance approximations.</p><p>We carried out experiments on real and synthetic sequence data sets. FTW pruned a significant number of data sequences at low computation cost, thus reducing the total search cost. In fact, it is significantly faster than the best existing method, outperforming it by at least one order of magnitude, and occasionally up to 222 times. Moreover, the superiority of FTW grows as data size and/or sequence length increases. This tendency makes it more attractive for large and long sequence databases.</p><p>The remainder of the paper is organized as follows. Section 2 discusses related work. Section 3 describes our proposed method, FTW. We show how the approximate distance can be computed, and then introduce our data structure and search algorithm. Section 4 reviews the results of the experiments, which clearly show the effectiveness of FTW. Section 5 is a brief conclusion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">RELATED WORK</head><p>Agrawal et al. first proposed an approach for similarity sequence matching <ref type="bibr" target="#b0">[1]</ref>. Their method extracts feature vectors from sequences, and indexes them using R*-trees. Only a small number of features are extracted, since most multidimensional index structures cannot provide high enough performance for high-dimensional data because of the dimensionality curse problem <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b22">23]</ref>. Their work focus on whole sequence matching. This was generalized to allow subsequence matching <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b17">18]</ref>. <ref type="bibr">Keogh et al. presented</ref> an indexing method by using the Adaptive Piecewise Constant Approximation (APCA) <ref type="bibr" target="#b14">[15]</ref>. APCA is a dimensionality reduction technique for sequence matching based on the Euclidean distance. This technique uses constant-value segments to approximate sequences. While many dimensionality reduction techniques have been proposed (e.g. DFT <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b9">10]</ref>, Discrete Wavelet Transform <ref type="bibr" target="#b23">[24]</ref> and Karhunen-Loeve Transform <ref type="bibr" target="#b8">[9]</ref>), APCA gives especially high approximation quality.</p><p>Recent applications require DTW for calculating the similarity of sequences <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b11">12]</ref>. To reduce the matching cost, many sequence-matching techniques based on dynamic programming have been proposed, especially in speech recognition <ref type="bibr" target="#b21">[22]</ref> and bioinformatics <ref type="bibr" target="#b18">[19]</ref>. These techniques trade off  sequence retrieval speed against precision. They must visit all data sequences of length N , and the time complexity is still basically O(N 2 ).</p><p>Chu et al. <ref type="bibr" target="#b5">[6]</ref> proposed a search method based on distance approximation, which varies its accuracy during the course of query processing. Although this method is efficient, it does not guarantee no false dismissals.</p><p>Yi et al. proposed a lower bounding measure for DTW <ref type="bibr" target="#b25">[26]</ref>. The distance from a query sequence to each data sequence is evaluated by using a lower bounding measure, after which a candidate set is constructed. The current data sequence for each candidate is visited, and the exact distance between the data sequence and the query sequence is calculated. The lower bounding measure is the sum of the squared differences between the maximum of the query sequence and elements in the data sequence that are greater than that maximum. This lower bounding measure also employs elements in the data sequence that are smaller than the minimum of the query sequence.</p><p>Kim et al. introduced a lower bounding measure employing 4-dimensional vectors <ref type="bibr" target="#b16">[17]</ref> that represent the first, last, minimum, and maximum sequence elements. The vectors can be readily indexed using any spatial access method. The lower bounding measures proposed in <ref type="bibr" target="#b25">[26]</ref> and <ref type="bibr" target="#b16">[17]</ref> guarantee no false dismissal. However, the results provided in <ref type="bibr" target="#b13">[14]</ref> indicate that these approximations are coarse. The number of exact distance calculations for the search is large, thus leading to high search costs.</p><p>Keogh <ref type="bibr" target="#b13">[14]</ref> proposed a search method based on global constraints that appear in dynamic programming. Global constraints (e.g. the Sakoe-Chiba Band and the Itakura Parallelogram <ref type="bibr" target="#b21">[22]</ref>) limit the scope of the warping path. Zhu et al.'s search method <ref type="bibr" target="#b26">[27]</ref> is also based on global constraints and represents an improvement over the one of <ref type="bibr" target="#b13">[14]</ref>. The search methods of <ref type="bibr" target="#b13">[14]</ref> and <ref type="bibr" target="#b26">[27]</ref> compute the envelope of the query sequence from the scope of warping paths; they then derive the PAA (Piecewise Aggregate Approximation) <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b24">25]</ref> of the envelope (See <ref type="figure" target="#fig_2">Figures 3 and 4)</ref>. The lower bounding distance between each data sequence and the query sequence is defined as the Euclidean distance between the PAA of the envelope and the MBR (Minimum Bounding Rectangle) of the data sequence. Although these search methods are efficient for warping paths with narrow scope, their search performance deteriorates as the warping scope becomes wider. Since the optimum scope depends on the application and data set, search methods that give high search performance, even for wide scopes, are required.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">PROPOSED METHOD</head><p>We propose FTW (Fast search method for dynamic Time Warping), which guarantees no false dismissals. The examples provided in this section assume that there is no restriction on the warping scope; recall that is the most expensive setting, that most competing methods can not handle. Note that FTW can also improve search performance when the warping scope is limited by global constraints. Unlike previous works <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b26">27]</ref>, FTW can handle any sequence, even data sequences of different lengths and/or data sequences with lengths different from that of the query sequence.</p><p>Range queries and k-nearest neighbor queries are essentially important for practical applications. Although we mainly focus on k-nearest neighbor queries in this paper, FTW can efficiently support queries of both types.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Preliminaries</head><p>Dynamic Time Warping (DTW) is a transformation that temporally warps sequences with the goal being to minimize the distance between the sequences. Consider two sequences P = {p1, p2, . . . , pN } of length N and Q={q1, q2, . . . , qM } of length M . Their time warping distance D dtw (P, Q) is defined as:</p><formula xml:id="formula_0">D dtw (P, Q) = f (N, M) f (i, j) = 񮽙pi − qj 񮽙 + min ⎧ ⎨ ⎩ f (i, j − 1) f (i − 1, j) f (i − 1, j − 1) (1) f (0, 0) = 0, f(i, 0) = f (0, j) = ∞ (i = 1, . . . , N; j = 1, . . . , M)</formula><p>where 񮽙pi − qj 񮽙 = (pi − qj ) 2 is the distance between two numerical values. Notice that any other choice (say, absolute difference: 񮽙pi −qj 񮽙 = |pi −qj |) would be fine; our upcoming algorithms are completely independent of such choices. The time warping distance between two sequences is obtained by matching each sequence element of P to an element of Q in increasing time order. Since the time warping distance is obtained by using a dynamic programming algorithm whose complexity is O(NM), it can be slow, especially for long sequences.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Sketch of FTW</head><p>Our solution is based on three major ideas, described below. First we give the intuition behind each of them, and in the three subsections we describe each of them in detail. </p><formula xml:id="formula_1">R i = (p L i : p U i ).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>LBS: New Lower Bounding Distance Measure</head><p>As described in Section 3.1, the complexity of DTW is O(NM), where N and M are sequence lengths. Since computing the exact DWT distance is expensive, especially for long sequences, it is beneficial to use approximations in query processing.</p><p>We operate on coarse representations of the sequences, which is obtained by segmentation. <ref type="figure">Figure 6</ref> shows an example of the representation, called approximate segments. In this figure, we represent the coarse version of a sequence with three segments, each of which consists of its segment ranges and time intervals.</p><p>We use the coarse version of sequences to estimate the time warping distance. <ref type="figure" target="#fig_5">Figure 7</ref>(a-1) illustrates the approximate segments of P and Q, P A and Q A . We compute the lower bounding distance from P A and Q A by using a dynamic programming approach as shown in <ref type="figure" target="#fig_5">Figure 7</ref>(a-2). Our algorithms work for segments of arbitrary, even unequal sizes; but for exposition purposes, let's assume that all segments have the same size t. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>EarlyStopping: New Algorithm for Dynamic Programming</head><p>Query processing maintains the list of candidate k-nearest neighbors before reporting the final k-nearest neighbors. The current k-th nearest neighbor distance, d cb (i.e., the current best), means the exact distance of the best k candidates so far. When a similar sequence, which gives an exact distance less than d cb , is found, the list of candidate k-nearest neighbors has to be updated; this makes d cb smaller. d cb keeps decreasing or remains unchanged; it never increases.</p><p>The second idea is to exclude the warping paths that will not yield fruitful search results by using d cb . In other words, we exclude the warping paths by using the exact distance between the query sequence and the candidate k-th nearest neighbor sequence. This makes the distance computation more efficient as d cb becomes smaller. Even if a given warping scope is not restricted (i.e. a global constraint is not used), we can dynamically reduce the warping scope by excluding warping paths that give distances exceeding d cb . That is, d cb serves as the threshold for reducing the warping scope. Now let us use <ref type="figure" target="#fig_5">Figure 7</ref>(a-2) again to give an example of this idea. We assume a coarse representation of the time sequences. Let g(i, j) be the lower bounding distance for the grid cell (i, j) (the exact definition of the distance g(i, j) will be given in Equation 2). In the figure, if</p><formula xml:id="formula_2">g(1, 2) &gt; d cb , we do not need to compute g(1, 3) since g(1, 3) ≥ g(1, 2) always holds. Similarly, we can exclude g(4, 1) if g(3, 1) &gt; d cb .</formula><p>The gray area represents the reduced warping scope. We can safely skip the distance computation for a warping path which goes through one or more white areas. We dynamically compute the time warping distance by using d cb . As well as for the approximate time warping distance calculation, this idea can be used for the exact time warping distance calculation (See <ref type="figure" target="#fig_5">Figure 7(c)</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>"Refinement": New Search Algorithm for DTW</head><p>Instead of operating on approximate segments of a single granularity, we propose to use multiple granularities, trying to balance the trade-off between accuracy and comparison speed. As the approximate segment becomes more accurate, the approximate distance often increases, but the computation cost also grows. There is a tradeoff between the approximation distance and the computation cost. Accordingly, we gradually increase the granularity of sequences, which improves the accuracy of the approximate distance, during the course of query processing. <ref type="figure" target="#fig_5">Figure 7</ref> shows the gradual 'refinement' of the approximation. In <ref type="figure" target="#fig_5">Figure 7</ref> (a), we compute the approximate distance from the coarsest version of sequences as the first step of the refinement. If the distance is greater than d cb , we can safely prune P . Otherwise, we compute the distance from the more accurate sequences as the second refinement step (See <ref type="figure" target="#fig_5">Figure 7 (b)</ref>). We need to compute the exact distance from the original sequences only if the approximate distance does not exceed d cb (See <ref type="figure" target="#fig_5">Figure 7 (c)</ref>). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Details for the proposed LBS</head><p>We first introduce the approximate segments of sequences. Let P = {p1, p2, . . . , pN } be a sequence of length N , then the i-th approximate segment p A i of P is defined as follows:</p><formula xml:id="formula_3">p A i = {p R i , p T i }, p R i = {p L i , p U i } p L i = min{px, . . . , py}, p U i = max{px, . . . , py} x = 񮽙 1 ( i = 1) 񮽙 i−1 j=1 p T j + 1 (2 ≤ i ≤ n), y = i 񮽙 j=1 p T j</formula><p>where p R i and p T i denotes the segment range and time interval of P , p L i and p U i are the lower and upper bounds of p R i . That is, p L i and p U i are the maximum and minimum values among the p T i elements within the subsequence from px to py. Therefore, we approximate P by:</p><formula xml:id="formula_4">P A = {p A 1 , p A 2 , . . . , p A n }</formula><p>where n denotes the number of segments.</p><p>Example 1. Let P be a data sequence of length N = 18, and p T i = 3 (i = 1, . . . , 6). The approximate segments of P can be derived as follows: P = {3, 2, 3, 5, 7, 6, 6, 5, 7, 10, 12, 11, 13, 15, 14, 12, 13, 12}</p><formula xml:id="formula_5">p R 1 = {2, 3}, p R 2 = {5, 7}, p R 3 = {5, 7}, p R 4 = {10, 12}, p R 5 = {13, 15}, p R 6 = {12, 13}</formula><p>Let Q be a query sequence of length M = 12, and q T i = 3 (i = 1, . . . , 4) The approximate segments of Q is computed as: Q = {7, 6, 7, 10, 12, 11, 9, 8, 11, 10, 8, 9}</p><formula xml:id="formula_6">q R 1 = {6, 7}, q R 2 = {10, 12}, q R 3 = {8, 11}, q R 4 = {8, 10}</formula><p>We propose a new lower bounding distance measure based on a combination of dynamic programming and approximate segments. Let P A = {p A 1 , . . . , p A n } and Q A = {q A 1 , . . . , q A m }. We then introduce LBS (Lower Bounding distance measure with Segmentation) as follows:</p><formula xml:id="formula_7">D lbs (P A , Q A ) = g(n, m) g(i, j) = g cell (i, j) + min ⎧ ⎨ ⎩ g(i, j − 1) g(i − 1, j) g(i − 1, j − 1) (2) g cell (i, j) = min(p T i , q T j ) · Dseg(p R i , q R j ) g(0, 0) = 0, g(i, 0) = g(0, j) = ∞</formula><p>where Dseg(p R i , q R j ) denotes the distance between p R i and q R j ; the distance of two ranges is intuitively the distance of their two closest points. Formally:</p><formula xml:id="formula_8">Dseg(p R i , q R j ) = ⎧ ⎨ ⎩ 񮽙p L i − q U j 񮽙 (p L i &gt; q U j ) 񮽙q L j − p U i 񮽙 (q L j &gt; p U i ) 0 ( otherwise)</formula><p>Notice that, if each range degenerates to a point, the distance Dseg becomes the original distance 񮽙 * , * * between two points. Theorem 1. Let P A and Q A be the approximate segments of sequences P and Q, respectively, then</p><formula xml:id="formula_9">D lbs (P A , Q A ) ≤ D dtw (P, Q)<label>( 3 )</label></formula><p>Proof.</p><p>Since</p><formula xml:id="formula_10">g cell (1, 1) = min(p T 1 , q T 1 ) · Dseg(p R 1 , q R 1 )</formula><p>the following inequalities hold:</p><formula xml:id="formula_11">g(1, 1) ≤ f (x, q T 1 ) (1≤ x ≤ p T 1 ) g(1, 1) ≤ f (p T 1 , y) (1≤ y ≤ q T 1 ) Since g cell (i, j) = min(p T i , q T j ) · Dseg(p R i , q R j ) we have min{g(i − 1, j − 1), g(i − 1, j)} ≤ f (x, y) (x = i−1 񮽙 k=1 p T k , j−1 񮽙 k=1 q T k &lt; y ≤ j 񮽙 k=1 q T k ) min{g(i − 1, j − 1), g(i, j − 1)} ≤ f (x, y) ( i−1 񮽙 k=1 p T k &lt; x ≤ i 񮽙 k=1 p T k , y = j−1 񮽙 k=1 q T k )</formula><p>Therefore, we obtain</p><formula xml:id="formula_12">g(i, j) ≤ f (x, y) (x = i 񮽙 k=1 p T k , y = j 񮽙 k=1 q T k )</formula><p>Thus, g(n, m) ≤ f (N, M), which completes the proof.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">EarlyStopping</head><p>To compute D lbs (P A , Q A ) efficiently, we introduce an algorithm called EarlyStopping (See <ref type="figure" target="#fig_7">Figure 8)</ref>. During search processing, we maintain the best-so-far distance, d cb ; lower bounding distances greater than d cb do not need to be computed using Equation (2). EarlyStopping reduces the distance computation cost by using d cb .</p><p>Example 2. Let us consider the approximate segments of P and Q as shown in Example 1. The lower bounding distance between P and Q is efficiently computed by using EarlyStopping as shown in <ref type="figure" target="#fig_8">Figure 9</ref>. Each value indicates g(i, j) in the figure. If d cb = 40, the calculations of g(1, 3) and g(1, 4) are omitted since g(1, 2) = 174 is greater than d cb . Similarly, the other white cells are also omitted since g(1, 2) &gt; d cb and g(2, 2) = g(3, 2) = g(4, 1) = 54 &gt; d cb . As a result, the lower bounding distance between P and Q is computed as g(6, 4) = 45. Consequently, we can safely prune P , since the lower bounding distance is greater than d cb .</p><p>EarlyStopping can be applied to the exact time warping distance calculation for data sequences as well as for the approximate distance calculation, and it reduces computation cost. Thus, we utilize EarlyStopping for computing the exact distance D dtw (P, Q) of the sequences P and Q. Moreover, EarlyStopping supports global constraints <ref type="bibr" target="#b21">[22]</ref>. When the warping scope is limited by global constraints, we change the initial values of begin <ref type="bibr">[i]</ref> and end <ref type="bibr">[i]</ref> in <ref type="figure" target="#fig_7">Figure 8</ref> according to the given warping scope.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Refinement</head><p>In the preceding section, we presented an algorithm computing an approximate distance with approximate segments of a single granularity. However, we can use segments of multiple granularities for query processing. Here, we describe the gradual refinement of the distance approximation with multiple granularities. We use c different versions of P for query processing. Let P A i be the coarse version of P , which is computed from the time interval ti as:</p><p>1 &lt; t1 &lt; t2 &lt; . . . &lt; tc−1 &lt; tc &lt; N That is, P A c is the coarsest, while P A 1 is the most accurate.</p><p>Various algorithms have been proposed to find the optimal representation of approximate segments of each sequences (e.g., <ref type="bibr" target="#b6">[7]</ref>). We will use equal-sized segments to approximate sequences for simplicity although segments of different time intervals would be acceptable to FTW. Since we operate on equal-sized segments, the time interval of each i-th segment is</p><formula xml:id="formula_13">p T i = 񮽙 t (1 ≤ i ≤ n − 1) tn − N (i = n)<label>(4)</label></formula><p>where n = 񮽙N/t񮽙.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.1">Indexing</head><p>We propose a sequential structure to accelerate search performance. The coarse version of P , P A , consists of the series of time intervals P T and the series of segment ranges P R . While the search algorithm uses both P T and P R , the data structure does not includes P T since P T can be easily com- puted by using Equation (4). The data structure is simply an array of feature data of a sequence P :</p><formula xml:id="formula_14">F (P ) = {N, Set(P R )} Set(P R ) = {P R c , . . . P R 1 }</formula><p>The feature data F (P ) consists of the length of P , N , and the set of segment ranges of P , Set(P R ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.2">Search Algorithm</head><p>Our search algorithm is based on the following ideas:</p><p>1. The search algorithm first collects as candidates the knearest neighbors based on the lower bounding distance measure computed from approximate segments.</p><p>FTW reduces computation cost by using the current k-th nearest neighbor distance, d cb ; consequently its efficiency is improved if the current value of d cb is close to the final k-th nearest neighbor distance early in the search process. Therefore, the algorithm calculates the lower bounding distance between the query sequence and each data sequence from their approximate segments, and then collects the k sequences that have the shortest distance in the sense of the lower bounding distance. The set of the k collected sequences is regarded as the initial candidate set for the k-nearest neighbor query. We obtain the initial k-th nearest neighbor distance by computing the exact time warping distance between the collected sequences and the query sequence. We pick the lowest granularity (i.e., the coarsest sequences) for this initial processing.</p><p>2. The search algorithm gradually enhances the accuracy of the distance approximations.</p><p>Distance approximations incur a lower computation cost than exact distance calculations; moreover, we require a lower distance computation cost for coarser sequences. The search algorithm first calculates an approximate distance of the coarsest data sequence of the time interval tc. If the approximate distance is greater than d cb , the algorithm excludes the data sequence without computing its exact distance. If the approximate distance does not exceed d cb , the algorithm then generates a more accurate approximation based on tc−1, and compares it with d cb . That is, the search algorithm gradually enhances the accuracy of the distance approximations. It determines the exact distance only when the approximate distance derived from t1 does not exceed d cb . <ref type="figure" target="#fig_0">Figure 10</ref> shows the search algorithm that uses the data structure described in Section 3.5.1. We first compute the approximate segments of a given query sequence Q. We then collect the candidate k-nearest neighbor sequences based on the lower bounding distance measure. The set of the k collected sequences is used as the initial candidate set. We obtain the initial k-th nearest neighbor distance by calculating the exact time warping distance between each candidate sequence and the query sequence. We compute a tighter approximation distance, while reducing the time interval. If the lower bounding distance is greater than d cb , we exclude the data sequence since it can't be one of the k-nearest neighbors.</p><p>Although we described only the search algorithm for k-nearest neighbor queries, FTW can be applied to range queries. It utilizes the current k-th nearest neighbor distance d cb for k-nearest neighbor queries, and the search range is used to handle range queries.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">EXPERIMENTS</head><p>We conducted experiments to verify the superiority of FTW. <ref type="bibr" target="#b13">[14]</ref> claims that the method of <ref type="bibr" target="#b13">[14]</ref> outperforms those of <ref type="bibr" target="#b25">[26]</ref> and <ref type="bibr" target="#b16">[17]</ref>; moreover, <ref type="bibr" target="#b26">[27]</ref> confirms that Zhu et al.'s method is more effective than that of <ref type="bibr" target="#b13">[14]</ref>. Thus, we show the results of a performance evaluation that compared FTW with the best existing method proposed in <ref type="bibr" target="#b26">[27]</ref>. <ref type="bibr" target="#b26">[27]</ref>'s method is denoted by LB PAA. For LB PAA, we used the R*-tree <ref type="bibr" target="#b2">[3]</ref>, and each sequence was indexed according to 16 reduced dimensions as shown in <ref type="bibr" target="#b26">[27]</ref>. We evaluated the search performance mainly based on wall clock time since the wall clock time for DTW exceeds the disk access time for retrieval processing; that is, the total execution time depends primarily on wall clock time. The wall clock time was measured on an Intel Xeon 2.8GHz with 1GB of memory, running Linux. We used 20-nearest neighbor queries. Each result reported here for a particular database size and sequence length is the average of 100 trials.</p><p>The data sets we used included the following real and synthetic data sets:</p><p>1. Temperature: Temperature measurements, from 55 sensors in buildings of Carnegie Mellon University. Each sensor gives one value every 30 seconds.</p><p>2. FinTime: This is the financial time-series benchmark from <ref type="bibr" target="#b10">[11]</ref>. We used historical stock market data for 100,000 securities.</p><p>3. RandomWalk: We generated 100,000 sequences by using random-walk models <ref type="bibr" target="#b24">[25]</ref>: pi = pi−1 + xi where the p1 of each sequence is uniformly distributed in the range <ref type="bibr">(0,</ref><ref type="bibr" target="#b9">10)</ref>. xi is normally distributed and the variance is 1.</p><p>For FTW, we used four different time intervals (t1 = 2, t2 = 8, t3 = 32, t4 = 128) for sequences of length 2048. For sequences of length 512, we used three varieties (t1, t2 and t3). Before discussing the search performance, we should mention the cost of constructing the index structures. Our method required 381 seconds to construct the data structure for the data set of sequence length 2048 and size 100,000. LB PAA required 531 seconds including the time for constructing the R*-tree.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Search Performance</head><p>To evaluate the search performance, we compared FTW with LB PAA. We constructed index structures for the data sets of Temperature, FinTime, and RandomWalk.</p><p>We present experimental results on search performance for when the data set size varies. <ref type="figure" target="#fig_0">Figure 11</ref> depicts the wall clock time of FTW and LB PAA for various data set sizes. The global constraint we employed for this figure is the Itakura Parallelogram, which is widely used in practical situations <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b21">22]</ref>. The exact distance calculation also employed the same global constraint. Database size varied from 25,000 to 100,000. Note that the y-axis starts from a negative value to avoid the overlap between the x-axis and the line of FTW. The experimental results show that FTW gives superior approximations for all data sets. As the database size increases, the effectiveness of FTW increases, making it even more attractive for large data sets.  wall clock time. We employed the Sakoe-Chiba Band for these figures, and let the width of the warping scope vary from 10% to 100% of the sequence length N . In these figures, the data set size is 100,000, and the scale of the y-axis is logarithmic. These figures indicate that FTW significantly reduces the search cost for all data sets. FTW outperforms LB PAA significantly, by orders of magnitude. Concretely, FTW is up to 222 times faster than LB PAA. <ref type="figure" target="#fig_0">Figure 14</ref> shows how often each approximation was used in FTW for the data set size of 100,000. As shown in the figure, most of the data sequences are excluded by the approximations of t4 = 128 and t3 = 32. The approximations of ti−1 incur a computation cost that is (ti/ti−1) 2 times that of the cost of ti; moreover, the exact time warping distance calculation requires a higher computation cost than the approximation of t1. The coarser approximation provides reasonable approximation quality, and its calculation speed is high. On the other hand, although the approximation with higher granularity is not very fast, it offers good approximation quality. Accordingly, using approximations of various granularities has significant advantages in terms of approximation quality and calculation speed. FTW efficiently prunes a large number of the search candidates, which leads to a significant reduction in the search cost. <ref type="figure" target="#fig_0">Figure 15</ref> shows the number of page accesses for FTW and LB PAA. Our data structure is simply an array of feature data. Although data sequences are accessed randomly, feature data are visited sequentially in query processing. A sequential scan of feature data should significantly boost performance because of the sequential nature of their I/O requests. In <ref type="bibr" target="#b22">[23]</ref>, Weber et al. indicate two speed-up factors for the phenomenon: a practical factor of 10 and a conservative one of 5. Thus, we used these speed-up factors, SF , in our experimental evaluations. The number of page accesses of FTW for a speed-up factor SF is given by:</p><formula xml:id="formula_15">P ASF = P A f d SF + P A ds ,</formula><p>where P A f d and P A ds are the number of page accesses for feature data and data sequences, respectively. <ref type="figure" target="#fig_0">Figure 15</ref> indicates that FTW outperforms LB PAA for SF = 5 and SF = 10 in terms of page accesses. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Search Performance for Sequences of Different Lengths</head><p>We created four sequence data sets that contained sequences with different lengths, <ref type="bibr">N : Random(2048</ref><ref type="bibr">, 32), Random(2048</ref><ref type="bibr">, 64), Random(2048</ref><ref type="bibr">, 128), and Random(2048</ref>, where Random(Nave, N dif f ) is a random function, Nave is the average sequence length in a data set, and N dif f is the difference between the minimum sequence length and the maximum sequence length in a data set. All data sets had 100,000 sequences. <ref type="figure" target="#fig_0">Figure 16</ref> shows the wall clock time of a linear scan and FTW as a function of N dif f . We employed the Itakura Parallelogram for this figure. Clearly, FTW outperforms sequential scanning for all data sets. Its search performance is superior even when N dif f is large.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">CONCLUSIONS</head><p>We presented a new search method for DTW, called FTW, which meets all the requirements mentioned in the introduction. FTW has been careful designed based on a new lower bounding distance measure that approximates the time warping distance. Based on this lower-bounding idea, and several careful optimizations ('EarlyStopping', 'Refinement'), our method has all of the following specifications, that no competing method matches:</p><p>1. It is fast: In experiments on real and synthetic data sets, FTW clearly outperformed the best existing method, for all queries, achieving one or two orders of magnitude speed up.</p><p>2. It has no false dismissals (by our Theorem 1)</p><p>3. It can handle sequences of arbitrary lengths 4. It allows for arbitrary warping restrictions, as well as no restrictions at all</p><p>Our experimental results reveal that FTW is significantly faster than the best existing method, outperforming it by at least one order of magnitude, and occasionally up to 222 times.</p><p>A promising but very challenging research direction is to extend FTW for a streaming setting. The goal would be to monitor time sequences, looking for one or more prespecified patterns, where the (dis-)similarity score is determined by DTW.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 : Illustration of DTW. (a) The alignment of measurements by DTW for measuring the dis- tance between two sequences. (b) DTW obtains a mapping between the sequences. The black squares denote the optimum warping path.</head><label>1</label><figDesc>Figure 1: Illustration of DTW. (a) The alignment of measurements by DTW for measuring the distance between two sequences. (b) DTW obtains a mapping between the sequences. The black squares denote the optimum warping path.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 : Illustration of global constraints. Global constraints limit the warping scope. The gray area corresponds to the warping scope. (a) Sakoe-Chiba Band. (b) Itakura Parallelogram.</head><label>2</label><figDesc>Figure 2: Illustration of global constraints. Global constraints limit the warping scope. The gray area corresponds to the warping scope. (a) Sakoe-Chiba Band. (b) Itakura Parallelogram.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 : Example of PAA representation for a se- quence. In this case, the sequence is reduced to 8 dimensions. Each equal-sized segment of PAA is the average of the sequence during the time period of the segment.</head><label>3</label><figDesc>Figure 3: Example of PAA representation for a sequence. In this case, the sequence is reduced to 8 dimensions. Each equal-sized segment of PAA is the average of the sequence during the time period of the segment.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 : Example of a sequence envelope. The en- velope consists of lower and upper bounds that to- tally enclose the sequence.</head><label>4</label><figDesc>Figure 4: Example of a sequence envelope. The envelope consists of lower and upper bounds that totally enclose the sequence.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 : Symbols and definitions.Figure 6 : Illustration of sequence approximation.</head><label>56</label><figDesc>Figure 5: Symbols and definitions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7 : Sketch of FTW. The bottom row shows the time warping matrices; the gray squares are potentially useful while the white squares are not promising. The black squares show the final optimal path. (a) The coarse approximation requires a low computation cost. (b) The refinement gives higher approximation quality. (c) The exact distance calculation by EarlyStopping that visits the small gray area.</head><label>7</label><figDesc>Figure 7: Sketch of FTW. The bottom row shows the time warping matrices; the gray squares are potentially useful while the white squares are not promising. The black squares show the final optimal path. (a) The coarse approximation requires a low computation cost. (b) The refinement gives higher approximation quality. (c) The exact distance calculation by EarlyStopping that visits the small gray area.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Algorithm</head><label></label><figDesc>EarlyStopping(P A , Q A , d cb ) // Set the initial values of begin[i] and end[i] according // to the global constraint for i = 1 to n do begin[i] := 1; end[i] := m; endfor // Compute the lower bounding distance for i = 1 to n do for j = begin[i] to end[i] do compute g(i, j); if i 񮽙 = 1 and i 񮽙 = n then if j &gt; end[i − 1] and g(i, j) &gt; d cb then end[i] := j; break; endif endif endfor if no grid cell satisfies g(i, j) ≤ d cb then return g(i, end[i]); else begin[i] := min{j|g(i, j) ≤ d cb }; end[i] := max{j|g(i, j) ≤ d cb }; if i 񮽙 = n and begin[i + 1] &lt; begin[i] then begin[i + 1] := begin[i]; endif endif endfor return g(n, m);</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Time warping distance calculation algorithm using the k-nearest neighbor distance.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 9 : Example of a time warping distance calcu- lation using approximate segments. The white cells are omitted because they are greater</head><label>9</label><figDesc>Figure 9: Example of a time warping distance calculation using approximate segments. The white cells are omitted because they are greater than d cb = 28.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 11 : Wall clock time as a function of data set size (N = 2048 ). The superiority of FTW grows as data size increases.</head><label>112048</label><figDesc>Figure 11: Wall clock time as a function of data set size (N = 2048). The superiority of FTW grows as data size increases.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>FiguresFigure 12 : Wall clock time as a function of warping scope (N = 512 ). Note that FTW is up to 49 times faster than the best existing methodFigure 13 : Wall clock time as a function of warping scope (N</head><label>1251213</label><figDesc>Figures 12 and 13 compare the search methods in terms of</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 14 :</head><label>14</label><figDesc>Figure 14: Frequency of approximation use (FinTime, N = 2048).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 15 : Number of page accesses as a function of data set size (FinTime,Figure 16 : Wall clock time as a function of the differ- ence in sequence lengths in a data set (RandomWalk,</head><label>1516</label><figDesc>Figure 15: Number of page accesses as a function of data set size (FinTime, N = 2048).</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Efficient similarity search in sequence databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Agrawal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Faloutsos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">N</forename><surname>Swami</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th Conference on Foundations of Data Organization and Algorithms (FODO)</title>
		<meeting>the 4th Conference on Foundations of Data Organization and Algorithms (FODO)</meeting>
		<imprint>
			<date type="published" when="1993-02" />
			<biblScope unit="page" from="69" to="84" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Fast similarity search in the presence of noise, scaling, and translation in time-series databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Agrawal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-I</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">S</forename><surname>Sawhney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Shim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VLDB</title>
		<meeting>VLDB</meeting>
		<imprint>
			<date type="published" when="1995-09" />
			<biblScope unit="page" from="490" to="501" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The R*-tree: An efficient and robust access method for points and rectangles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Beckmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Kriegel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Seeger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGMOD</title>
		<meeting>ACM SIGMOD</meeting>
		<imprint>
			<date type="published" when="1990-05" />
			<biblScope unit="page" from="322" to="331" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The pyramid-technique: Towards breaking the curse of dimensionality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Berchtold</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Böhm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Kriegel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGMOD</title>
		<meeting>ACM SIGMOD</meeting>
		<imprint>
			<date type="published" when="1998-06" />
			<biblScope unit="page" from="142" to="153" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Finding patterns in time series: A dynamic programming approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">J</forename><surname>Berndt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Clifford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Knowledge Discovery and Data Mining</title>
		<imprint>
			<publisher>AAAI/MIT</publisher>
			<date type="published" when="1996" />
			<biblScope unit="page" from="229" to="248" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Iterative deepening dynamic time warping for time series</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Keogh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Hart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Pazzani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIAM International Conference on Data Mining</title>
		<meeting>SIAM International Conference on Data Mining</meeting>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A signature technique for similarity-based queries</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Faloutsos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">V</forename><surname>Jagadish</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">O</forename><surname>Mendelzon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Milo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SEQUENCES</title>
		<imprint>
			<date type="published" when="1997-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Fast subsequence matching in time-series databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Faloutsos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ranganathan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Manolopoulos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGMOD</title>
		<meeting>ACM SIGMOD</meeting>
		<imprint>
			<date type="published" when="1994-05" />
			<biblScope unit="page" from="419" to="429" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Introduction to Statistical Pattern Recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Fukunaga</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
			<publisher>Academic Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Digital Filters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">W</forename><surname>Hamming</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1977" />
			<pubPlace>Englewood Cliffs, N. J.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Fintime -a financial time series benchmark</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">J</forename><surname>Jacob</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Shasha</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Hierarchical filtering method for content-based music retrieval via acoustic input</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-S</forename><forename type="middle">R</forename><surname>Jang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-R</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM Multimedia</title>
		<meeting>ACM Multimedia</meeting>
		<imprint>
			<date type="published" when="2001-10" />
			<biblScope unit="page" from="401" to="410" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Automatic modeling of a 3d city map from real-world video</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Kawasaki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Yatabe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ikeuchi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sakauchi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM Multimedia (1)</title>
		<meeting>ACM Multimedia (1)</meeting>
		<imprint>
			<date type="published" when="1999-11" />
			<biblScope unit="page" from="11" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Exact indexing of dynamic time warping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">J</forename><surname>Keogh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VLDB</title>
		<meeting>VLDB</meeting>
		<imprint>
			<date type="published" when="2002-08" />
			<biblScope unit="page" from="406" to="417" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Locally adaptive dimensionality reduction for indexing large time series databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">J</forename><surname>Keogh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Chakrabarti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mehrotra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Pazzani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGMOD</title>
		<meeting>ACM SIGMOD</meeting>
		<imprint>
			<date type="published" when="2001-05" />
			<biblScope unit="page" from="151" to="162" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Dimensionality reduction for fast similarity search in large time series databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">J</forename><surname>Keogh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Chakrabarti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Pazzani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mehrotra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Knowledge and Information Systems</title>
		<imprint>
			<biblScope unit="page" from="263" to="286" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">An index-based approach for similarity search supporting time warping in large sequence databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S.-W</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">W</forename><surname>Chu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ICDE</title>
		<meeting>ICDE</meeting>
		<imprint>
			<date type="published" when="2001-04" />
			<biblScope unit="page" from="607" to="614" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">General match: a subsequence matching method in time-series databases based on generalized windows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y.-S</forename><surname>Moon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-Y</forename><surname>Whang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W.-S</forename><surname>Han</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGMOD</title>
		<meeting>ACM SIGMOD</meeting>
		<imprint>
			<date type="published" when="2002-06" />
			<biblScope unit="page" from="382" to="393" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Bioinfomatics: Sequence and Genome Analysis. Cold Spring Harbor</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">W</forename><surname>Mount</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">V</forename><surname>Oppenheim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">W</forename><surname>Schafer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Digital Signal Processing. Englewood Cliffs, N. J</title>
		<imprint>
			<date type="published" when="1975" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Memory-based forecasting for weather image patterns</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Otsuka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Horikoshi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Suzuki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Kojima</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th Conference on Artificial Intelligence (AAAI)</title>
		<meeting>the 17th Conference on Artificial Intelligence (AAAI)</meeting>
		<imprint>
			<date type="published" when="2000-07" />
			<biblScope unit="page" from="330" to="336" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Fundamentals of Speech Recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Rabiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B.-H</forename><surname>Juang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993" />
			<pubPlace>Englewood Cliffs, N. J.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A quantitative analysis and performance study for similarity-search methods in high-dimensional spaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-J</forename><surname>Schek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Blott</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VLDB</title>
		<meeting>VLDB</meeting>
		<imprint>
			<date type="published" when="1998-08" />
			<biblScope unit="page" from="194" to="205" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Adapted Wavelet Analysis from Theory to Software. A K Peters Ltd</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">V</forename><surname>Wickerhauser</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<pubPlace>Massachusetts</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Fast time sequence indexing for arbitrary lp norms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B.-K</forename><surname>Yi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Faloutsos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VLDB</title>
		<meeting>VLDB</meeting>
		<imprint>
			<date type="published" when="2000-09" />
			<biblScope unit="page" from="385" to="394" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Efficient retrieval of similar time sequences under time warping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B.-K</forename><surname>Yi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">V</forename><surname>Jagadish</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Faloutsos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ICDE</title>
		<meeting>ICDE</meeting>
		<imprint>
			<date type="published" when="1998-02" />
			<biblScope unit="page" from="201" to="208" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Warping indexes with envelope transforms for query by humming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Shasha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGMOD</title>
		<meeting>ACM SIGMOD</meeting>
		<imprint>
			<date type="published" when="2003-06" />
			<biblScope unit="page" from="181" to="192" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
