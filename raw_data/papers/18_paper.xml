<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:27+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">In-Network Coding for Resilient Sensor Data Storage and Efficient Data Mule Collection</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michele</forename><surname>Albano</surname></persName>
							<email>michele@av.it.pt</email>
							<affiliation key="aff0">
								<orgName type="institution">Instituto de TelecomunicaçTelecomunicaç˜Telecomunicações (IT)</orgName>
								<address>
									<settlement>Aveiro</settlement>
									<country key="PT">Portugal</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jie</forename><surname>Gao</surname></persName>
							<email>jgao@cs.sunysb.edu</email>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Stony Brook University</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">In-Network Coding for Resilient Sensor Data Storage and Efficient Data Mule Collection</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Sensor Networks</term>
					<term>Erasure Coding</term>
					<term>Resilient Storage</term>
					<term>Data Mule</term>
				</keywords>
			</textClass>
			<abstract>
				<p>In a sensor network of n nodes in which k of them have sensed interesting data, we perform in-network erasure coding such that each node stores a linear combination of all the network data with random coefficients. This scheme greatly improves data resilience to node failures: as long as there are k nodes that survive an attack, all the data produced in the sensor network can be recovered with high probability. The in-network coding storage scheme also improves data collection rate by mobile mules and allows for easy scheduling of data mules. We show that using spatial gossip we can compute the erasure codes for the entire network with a total of near linear message transmissions, thus improving substantially the communication cost in previous scheme [5]. We also extend the scheme to allow for online data reconstruction, by interleaving spatial gossip steps with mule collection. We present simulation results to demonstrate the performance improvement using erasure codes.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Data representation is a central problem in sensor network design. How to represent sensor data and where to store it greatly influence the design of other operation modules. In the most straightforward scheme, the sensor readings are simply kept in the sensor's local flash drives. However, this scheme is vulnerable to node failures: when a node stops being functional (by natural disasters, human/animal intrusion, or due to energy depletion), the data stored on the broken nodes is lost as well.</p><p>The issue of data storage and representation is also closely related to the data collection mechanism that gathers the sensor data to a base station. Earlier schemes have mostly adopted data collection trees and used multi-hop routing, e.g., in TinyDB <ref type="bibr" target="#b18">[19]</ref>. This scheme presents the problem that nodes near the base station relay more traffic than an average node, and thus would use up their energy sooner. This will create a network hole around the base station that isolates the base station from the rest of functioning sensor network. For this reason, data collection by a mobile base station, called data mule, becomes attractive <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b25">26]</ref>.</p><p>A data mule tours around in the network and retrieves data through direct communication with a sensor in close proximity. The mule can be either a vehicle/robot specifically employed for this task, or existing mobile entities (e.g., wild animals) that collect data in an opportunistic manner. For dedicated mules, the problem of motion planning and coordination is not trivial. A natural metric to plan routes is to minimize the total travel distance (proportional to delay or energy consumption) of the data mules. This becomes the multiple traveling salesman problem (mTSP), which is NP-complete and does not have any efficient approximation algorithms <ref type="bibr" target="#b3">[4]</ref>. Existing solutions for mule planning are all heuristic schemes <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b25">26]</ref>. Alternatively, a practically appealing solution is to let data mules follow random movement, which requires minimum coordination. The downside is that we encounter the coupon collector problem. Specifically, if the data mule visits a random node each time, initially it picks up new data with high probability from each visited node. After the data mule has collected a substantial fraction of all the data from the network, it is highly likely that the next random node encountered has been visited before. Thus it takes the mule a long time to aimlessly walk in the network and hope to find the last few pieces. Theoretically for a random walk to cover a grid-like network, the number of steps is quadratic in the size of the network <ref type="bibr" target="#b16">[17]</ref>.</p><p>In many applications the sensor network is to detect target presence or other discrete events. Only a subset of sensors may have interesting data to report (we will denote these sensors as data nodes and the other ones as storage nodes) and the locations of these sensors are uncertain before hand (see <ref type="bibr" target="#b5">[6]</ref>). Before the data mule visits the data nodes they have no idea where they are. Thus any pre-defined motion planning is inefficient as the mules may visit many nodes without anything to report. One can alleviate this problem by data replication (s.t. some storage nodes hold data copies). But one data mule may collect data that has been collected before; and multiple mules may collect the same piece of data due to lack of coordination.</p><p>In-network coding. Consider the following simplified setting with k sensors with data and altogether n nodes that can possibly store it. Typically k is a fraction of n. We apply erasure coding, which transforms k data blocks into n codewords such that the original data can be recovered from any k codewords. Thus, as long as data mules collectively gather k codewords, the original data can be successfully reconstructed at the base station.</p><p>Using erasure codes for data storage brings two benefits for data mule collection: (1) sensor data is preprocessed in the network. Nodes with interesting data will initiate the encoding procedure and will preload useful information into other nodes in the network. Should only a small set of unknown sensors hold data to report, the data mule would not need to acquire the location of these sensors and can pick up data from any sensor; (2) Using erasure codes solves the coupon collector problem. The mules only needs to pick up a sufficient number of codewords, and it takes only linear time for random walk to achieve that <ref type="bibr" target="#b2">[3]</ref>. The challenge of using erasure codes for sensor data storage is to develop distributed encoding algorithm with low communication cost. Our contribution. In this work, we construct the erasure codes with near linear message cost. In particular, we use spatial gossip in which each node p chooses another node q with probability proportional to 1/|pq| 3 , where |pq| is the Euclidean distance between p and q. The gossip proceeds in synchronous rounds. In each round, every node with data (either its own data or data received in previous rounds) multiplies its data by a random coefficient and sends it to another node chosen with the above spatial distribution. A node may receive messages from multiple other nodes, in this case it will store the summation of the received data and its current data. After O(polylogn) rounds, each node in the network stores a random linear combination of the original data. Once a node i receives data from node j, either directly or indirectly, some linear combination with the data of node i will be delivered to all other nodes that j communicates with in the following rounds. Thus data will be disseminated in an exponential rate. Using spatial gossip to build the in-network codes limits the total number of transmissions needed to build the erasure codes to O(n polylogn), that is substantially smaller than the cost O(n √ n) of the state of the art <ref type="bibr" target="#b4">[5]</ref>. In addition to the basic mule collection, we also consider time critical applications for which we would like to reconstruct data as soon as the data mule acquires new information. For this, we keep all the computed coded values in the sensors, instead of replacing them with the newly computed codeword. If we denote the number of original data pieces in a linear combination as the degree of the codeword, this strategy considers increasing the degree of the codewords "slowly". In the first rounds, the sensors exchange the original data, so that initially the mule will pick up data in the original form. Gradually when the mule has collected a sufficiently large subset of data, it becomes harder to encounter new original data. Now we use gossip algorithm to exchange codewords of degree 2, and 3, and so on. For each piece of coded data collected, the mule will use its available data to reconstruct the original data. This is motivated by the idea of growth code developed by Kamra et al <ref type="bibr" target="#b8">[9]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Related work</head><p>In-network coding. In the past, random linear codes have been proposed for improving sensor data resilience <ref type="bibr" target="#b4">[5]</ref>. In that scheme each node that produced some data sends its data to O(log k) randomly chosen storage nodes. A storage node that receives multiple data from different data nodes saves a linear combination of them with random coefficients. The paper showed that a random set of k storage nodes can recover the original data with high probability. But the total message cost is O(n √ n) for uniformly randomly distributed sensors. Fountain codes and other erasure codes have been used for in-network coding <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b13">14]</ref> as well. These papers use random walk with the Metropolis algorithm to disseminate packets from data nodes. More variations have also been introduced such that small node failures can be recovered locally <ref type="bibr" target="#b14">[15]</ref>, or more important data is recovered with higher probability. For all these schemes, the message cost is super linear.</p><p>Data collection by mules. Most prior work on using mobile mules for data collection has focused on the system issues <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b25">26]</ref>. The scheduling problem is more challenging if both latency and energy consumption are under consideration. A lot of interesting work has been done on mule scheduling <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b24">25]</ref>. We will not survey them here, since our objective is to prepare the data in the network in a nice format such that data collection is easy even for a mule performing a random walk.</p><p>Gossip algorithms. Gossip algorithms have been extensively studied. See the survey <ref type="bibr" target="#b6">[7]</ref> and the book <ref type="bibr" target="#b21">[22]</ref> for references. There have been lots of variations depending on which node is selected to gossip to, and what information is exchanged between two gossip partners. Of particular relevance to our work is spatial gossip proposed by Kempe et al <ref type="bibr" target="#b11">[12]</ref>. Our analysis uses a theorem proved in <ref type="bibr" target="#b11">[12]</ref> to prove an upper bound on its convergence rate. The application of gossip algorithm in computing codewords in sensor network with near linear message cost, to our knowledge, has not been done before.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">In-network Coding by Spatial Gossip</head><p>We assume that n sensors are in the network but only k of them have data to report at any moment. These nodes are called data nodes and the rest are denoted as storage nodes. We assume that the storage quota at each node is limited. For simplicity we assume that the data at a storage node almost hit the quota, so we can not put more data than one data symbol into a storage node.</p><p>Distributed erasure codes. Erasure coding transforms a message of m blocks into a longer message with M blocks, M &gt; m, such that the original message can be recovered from a subset of the M blocks. In our case we use random linear codes over a finite Galois field GF (q), q = 2 b . An original data piece is a vector of GF (q) and is called a symbol. There are k symbols {s 1 , s 2 , · · · , s k } distributed in the network. A codeword is a linear combination of the k symbols, denoted as w = k i=1 λ i s i , where λ i 's are coefficients. The calculation above is under the arithmetic of the Galois Field. The size of a codeword w is the same as the size of the symbols (b-bits long). The degree of a codeword w is the number of non-zero coefficients. Now suppose we have n codewords w 1 , w 2 , · · · , w n , with w j = k i=1 λ ij s i . This coding scheme can be represented by the k by n generator matrix</p><formula xml:id="formula_0">G = {λ ij }. Take w = (w 1 , w 2 , · · · , w n ), s = (s 1 , s 2 , · · · , s k ). Thus w = sG.</formula><p>The property required for decoding the symbols by using any k codewords is that any k columns from G form a full rank matrix G . The decoding procedure is essentially solving a linear system w = sG in GF (q) and recover s, e.g., by Gaussian elimination.</p><p>The coefficients are taken as elements of GF (q) as well and have b bits. The coefficients are delivered and stored along with the codeword. This causes storage/transmission overhead. However, we can make the overhead arbitrarily small by amortization over time by coding a long stream of data with the same set of coefficients.</p><p>Erasure code constructed by spatial gossip. We use spatial gossip to construct an erasure code in a distributed manner. At the beginning some subset of k nodes in the network has interesting data -the symbols s i . We take t as the indicator of the number of rounds that have been executed. The current codeword at node j is denoted as w t j = k i=1 λ t ij s i . At round t, sensor x takes a random coefficient λ t x and updates its own codeword as w x ← λ t x · w x . Suppose at this point w x is k i=1 β i s i . The node x will choose a geographical location y * and sends its current codeword w x , as well as the current coefficients of the codeword {β i }, to the node y closest to y * (for example, by using geographical routing <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b20">21]</ref>). In particular, y * is selected with probability p(x, y * ) = 1/(2πr 3 ), where r = |xy * | ≥ 1. Since the sensors are distributed nearly uniformly, the probability that a node y is chosen is also proportional to 1/|xy| 3 . The proof is given in <ref type="bibr" target="#b20">[21]</ref> and is not repeated here.</p><p>A node at round t may receive multiple messages from different nodes. It simply stores the summation of the incoming data and its own codeword as its current codeword. The coefficients of w t j are updated by the summation of the according coefficients. Notice that the degree of the codeword at any node is monotonically non-decreasing. The following theorem has been proved in <ref type="bibr" target="#b11">[12]</ref> regarding spatial gossip: We run the spatial gossip algorithm for m = O(log 3.4 n) rounds so that for each data node x and any storage node y, y's codeword contains the symbol from x with high probability 1 − O(1/n). Recall that at round t, the node x takes a random number λ t x and multiplies it with the current codeword. The coefficient for symbol i in the final erasure code at node j is the multiplication of m random numbers corresponding to the nodes on the path of propagation from i to j, and is null with a very small probability O(1/n).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Data Recovery and Mule Collection</head><p>Data recovery upon node failures. The goal of the spatial gossip is to construct erasure codes on the sensors. The codewords from any k nodes can be used to recover the original symbols. That is, take the matrix G such that the j-th column is the vector of the coefficients of the j-th node. We would like G to have full rank. From the discussion in the previous section, each element of G is 0 with very small probability O(1/n) and is otherwise the multiplication of m random numbers. We show in the following theorem that the probability of G having full rank is very high. The proof of the following theorem is similar to the one in <ref type="bibr" target="#b4">[5]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 2. Take the codewords from any k nodes in the network and the corresponding k by k generator matrix G , G has full rank with high probability</head><formula xml:id="formula_1">(1 − k/q)c(k), where c(k) → 1 when k → ∞.</formula><p>Proof. G is a matrix with each element as some random variable determined by the gossip process. We just need to show that the determinant of G is not zero. There are two possibilities for det(G ) to be zero. In the first case, det(G ) is identically zero regardless of the random coefficients selected in the gossip algorithm -for example, the entries of one column are all zero. To analyze the chance for this to happen, we take a bipartite graph β on vertex set X and Y , where X represents the data nodes and Y represents the storage nodes taken to recover the original data. |X| = |Y | = k. There is an edge between vertex x i and y j if there is a non-zero element at position (i, j) of G . Edmonds' Theorem <ref type="bibr" target="#b19">[20]</ref> says that if there is a perfect matching in β then det(G ) is not identically zero. By our gossip algorithm, each edge ij is present with probability 1 − O(1/n). By the same analysis as in <ref type="bibr" target="#b4">[5]</ref> we can see that the graph β has a perfect matching with high probability. Thus det(G ) is not identically zero w.h.p.</p><p>In the second case, the determinant of G happens to be zero for the specific random coefficients that we choose. This is a rare event and the probability that this happens can be bounded with Schwartz-Zippel Theorem <ref type="bibr" target="#b19">[20]</ref>. The degree of det(G ) is k. All the random coefficients are chosen from the field GF (q). Thus prob{det(G ) = 0} ≤ k/q.</p><p>In-network coding facilitating mule collection. When the data in the network is stored in terms of erasure codes, data collection by data mules is much easier. This scheme works very well with opportunistic data mules, whose movements are not under our control. As long as the opportunistic data mules visit k different nodes somehow, they can reconstruct the data from the entire network.</p><p>Moreover, with network coding a dedicated data mule does not need to know in advance which nodes have data and thus must be visited (in fact, it is impossible to know this in advance unless these data nodes report to the base station, in which case they can just report the data instead). It is also not necessary to plan very carefully what routes to follow so as to visit all the nodes in the network.</p><p>Online mule collection and data reconstruction. In the basic mule collection we first perform the in-network coding before mule collection. When events are time-critical, we would like to reconstruct data as soon as the mule collects something new. Initially we prefer data stored in its original form. At later data collection rounds it is difficult to discover a new data and higher degree symbols will become useful. We put a cap on the degree of the codewords in the gossip rounds. The cap grows with the number of gossip rounds.</p><p>What is the optimal mechanism to increase the cap of the degree of the codewords with the number of rounds remains an open question and our future work. For centralized LT codes, it has been proved that Soliton distribution <ref type="bibr" target="#b17">[18]</ref> achieves the optimal rate and in practice the robust Soliton distribution has a more stable performance. We are not able to directly apply these results in our case due to the complex nature of nodes gossiping (codewords are moved around, instead of original data symbols). We learned through the simulations presented in next section that a practical scheme is to initially set the cap as a constant (in fact 1) to allow the data mule to collect enough original data, then let the cap grow as a linear function, so that the data mule can reconstruct data from almost each new data symbol.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Simulations</head><p>All the simulations were performed on sensor networks featuring 700 nodes including 100 data nodes, all uniformly randomly distributed inside a 50 by 50 square. The communication graph is modeled as a unit disk graph with communication range 3. For each data collection trial, a full reconstruction of data means that the base station received from the data mules enough codewords to be able to decode all the produced data.</p><p>In each set of simulations, 10 ∼ 20 sensor networks were randomly created. For each of them 100 different sets of data nodes were simulated. For each data production scenario 45 ∼ 50 data dissemination rounds were completed. After each round of data dissemination, 100 data collection experiments were performed, each one featuring a single data mule collecting codewords.</p><p>We evaluate different data collection strategies: Random polling: the data mule collects data from nodes selected uniformly at random in the network, this is implemented by the data mule doing random walk and picking up codewords during the motion; Random straight line walk: the data mule walks along a random line in the sensor network and collects data from the nodes that are closest to the line; Clustered collection: the data mule chooses a random location in the sensor network and collects data from near the location until k codewords are collected.</p><p>Communication cost and data recovery rate. We tested four different schemes, depending on what format of the data is exchanged and which node to send. A node with data may send either a single original data symbol or a codeword to a recipient. We denote the corresponding scheme by non-coded gossip or coded gossip method. In both cases, a storage node keeps a codeword (using random linear codes) of the incoming data packets. A node may send its data to a recipient chosen uniformly at random over all the nodes, or with some spatial distribution. We call the corresponding scheme uniform gossip or spatial gossip. Combining the choices, four different strategies are evaluated in our simulations. Specifically the non-coded uniform gossip method is the one in <ref type="bibr" target="#b4">[5]</ref>. Our scheme is spatial coded gossip. The data collection scheme uses clustered collection in this set of experiments.  <ref type="figure" target="#fig_0">Figure 1</ref> shows data recovery rate. The uniform non-coded gossip strategy initially performs better, similarly to the uniform coded gossip strategy. Then the spatial coded gossip strategy outperforms the uniform non-coded gossip strategy and behaves similar to the uniform coded gossip strategy. The number of rounds that were necessary to perform data dissemination for uniform non-coded gossip is 230 (not shown in the <ref type="figure">figure)</ref>. 20 rounds are enough to reconstruct data most of the times for spatial coded and non-coded gossip strategies. <ref type="figure">Figure 2</ref> shows the total communication cost to move data around, against the round number. The uniform coded gossip strategy, with the best data recovery performance, is extremely expensive, as almost everyone sends data to random others. In summary, our scheme has the best combined performance than the other strategies in terms of lower message cost and higher data recovery rate.</p><p>Data collection strategies. We tested the three different data collection strategies introduced at beginning of this section. <ref type="figure">Figure 3</ref> shows the frequency that the mules were able to correctly reconstruct all the data, against the number of rounds that were performed. The random polling method is the most expensive one for the data mule. It also has the highest reconstruction rate with a smaller standard deviation when the number of gossip rounds is small. Nevertheless, when we execute about 18 gossip rounds, all three data collection movement schemes can fully reconstruct the network data for all the trials we tested. This shows the erasure codes constructed with spatial gossip allow for flexible choice of data mule movement patterns. Varying the exponent for spatial gossip. We vary the exponent of the spatial distribution: in each round each node p selects one receiver node q, with probability proportional to 1/(d i,j ) α , and the analyzed αs were 1, 2, 3, 4, 5. The simulations aim at finding out which exponent performs better in terms of reconstruction frequency and communication cost. <ref type="figure">Figure 4</ref> shows the frequency that the mules were able to correctly reconstruct all the data, against the round number. <ref type="figure" target="#fig_3">Figure 5</ref> shows the total communication cost to move data around, against the round number. With a smaller α, the data storage scheme has higher communication cost and higher reconstruction probability. The communication cost that the network incurs to ensure correct data reconstruction is presented in the table in <ref type="figure">Figure 6</ref>. With the same reconstruction performance, the total message cost is the smallest when α = 3, which corroborates our theoretical analysis.  Online reconstruction. We introduce a network wide parameter called the "maximum codeword degree" to restrict the degree of the codeword at each round. The parameter can be changed after every round. <ref type="figure">Figure 7</ref> shows this parameter as a function of the gossip round used in the simulation. The parameter is 1 for the first 40 rounds, then it increases in a sublinear manner up to round 80, after which it becomes a linear function of the round number. From the point of view of the sensors, the algorithm is the same for each node. A node has a "current codeword", and a storage list. Initially, the "current codeword" is initialized to a produced data if the sensor is a data node, else it is initialized to null. The storage list is initialized with the "current codeword". In each gossip round, each sensor selects a recipient with spatial distribution, then it sends to it its "current codeword". Each sensor puts all the received codewords into its storage list, then it creates its next "current codeword" combining elements of the storage list. Elements chosen at random from the storage list are combined to create a new "current codeword" that has a degree equal or less to the "maximum codeword degree". After each gossip and random walk round, the data mule downloads from a sensor all the codewords it has into its storage list, then the data mule reconstructs all the original data symbols it can. <ref type="figure">Figure 8</ref> compares the number of reconstructed data against the number of independent codewords collected by the data mule, for each round. Simulations show that this strategy is able to collect a large number of data as soon as codewords are downloaded. On the other hand, the data mule is less efficient in reconstructing all the data than in the previous scenario, since it needs to collect more than 100 codewords to complete its job. We put a cap on the current codeword's degree, and this leads to a slowdown in information dispersal with respect to a scenario where the codeword degree is as high as it can get. The maximum degree of codewords initially stays 1, to help with the online reconstruction, since a data mule can extract automatically original data from codewords of degree 1. Later the maximum codeword degree increases quickly, thus the mule can cope with high degree codewords leveraging on all the original data it has already reconstructed.</p><p>Future work. In our future work, we would like to explore two directions. First, what is the optimal strategy for the cap of the codeword degree for online data reconstruction? Second, if the network data has spatial correlation, how do we exploit it in the network coding scheme?</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Theorem 1 .</head><label>1</label><figDesc>The symbol from a data node x is propagated to a node y with probability 1 − O(1/d) after O(log 3.4 d) rounds, where d = |xy|.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .Fig. 2 .</head><label>12</label><figDesc>Fig. 1. Frequency of correct reconstruction with different data dissemination strategies, against round number.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .Fig. 4 .</head><label>34</label><figDesc>Fig. 3. Frequency of correct reconstruction with different collection strategies, against round number.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Total number of communication hops with different Spatial Gossip exponents, against round number.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 7 .Fig. 8 .</head><label>78</label><figDesc>Fig. 7. Maximum codeword degree as function of the current gossiping round.</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Fountain codes based distributed storage algorithms for large-scale wireless sensor networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename><surname>Aly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Kong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Soljanin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IPSN &apos;08: Proceedings of the 7th international conference on Information processing in sensor networks</title>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="171" to="182" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Raptor codes based distributed storage algorithms for wireless sensor networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename><surname>Aly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Kong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Soljanin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE International Symposium on Information Theory</title>
		<meeting>of IEEE International Symposium on Information Theory</meeting>
		<imprint>
			<date type="published" when="2008-07" />
			<biblScope unit="page" from="2051" to="2055" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Efficient and robust query processing in dynamic environments using random walk techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Avin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Brito</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IPSN &apos;04: Proceedings of the 3rd international symposium on Information processing in sensor networks</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="277" to="286" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The multiple traveling salesman problem: an overview of formulations and solution procedures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Bektas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Omega</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="209" to="219" />
			<date type="published" when="2006-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Ubiquitous access to distributed data in large-scale sensor networks through decentralized erasure codes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">G</forename><surname>Dimakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Prabhakaran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ramchandran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Symposium on Information Processing in Sensor Networks (IPSN&apos;05)</title>
		<meeting>Symposium on Information essing in Sensor Networks (IPSN&apos;05)</meeting>
		<imprint>
			<date type="published" when="2005-04" />
			<biblScope unit="page" from="111" to="117" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Sparse data aggregation in sensor networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">J</forename><surname>Guibas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hershberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Milosavljevi´cmilosavljevi´c</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the International Conference on Information Processing in Sensor Networks (IPSN&apos;07)</title>
		<meeting>of the International Conference on Information essing in Sensor Networks (IPSN&apos;07)</meeting>
		<imprint>
			<date type="published" when="2007-04" />
			<biblScope unit="page" from="430" to="439" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A survey of gossiping and broadcasting in communication networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">M</forename><surname>Hedetniemi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">T</forename><surname>Hedetniemi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Liestman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Networks</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="319" to="349" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Multiple controlled mobile elements (data mules) for data collection in sensor networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Jea</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">A</forename><surname>Somasundara</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">B</forename><surname>Srivastava</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Distributed Computing in Sensor System (DCOSS)</title>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="244" to="257" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Growth codes: maximizing sensor network data persistence</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kamra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Misra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Feldman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Rubenstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGCOMM &apos;06: Proceedings of the 2006 conference on Applications, technologies, architectures, and protocols for computer communications</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2006" />
			<biblScope unit="page" from="255" to="266" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Controlled mobility for sustainable wireless networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kansal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rahimi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Kaiser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">B</forename><surname>Srivastava</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">J</forename><surname>Pottie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Sensor and Ad Hoc Communications and Networks (SECON&apos;04)</title>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">GPSR: Greedy perimeter stateless routing for wireless networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Karp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Kung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the ACM/IEEE International Conference on Mobile Computing and Networking (MobiCom)</title>
		<meeting>of the ACM/IEEE International Conference on Mobile Computing and Networking (MobiCom)</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="243" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Spatial gossip and resource location protocols</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kempe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kleinberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Demers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">STOC &apos;01: Proceedings of the thirty-third annual ACM symposium on Theory of computing</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="163" to="172" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Differentiated data persistence with priority random linear codes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Liang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDCS &apos;07: Proceedings of the 27th International Conference on Distributed Computing Systems</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2007" />
			<biblScope unit="page">47</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Data persistence in large-scale sensor networks with decentralized fountain codes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 26th IEEE</title>
		<meeting>of the 26th IEEE</meeting>
		<imprint>
			<date type="published" when="2007-05" />
			<biblScope unit="volume">07</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Geometric random linear codes in sensor networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE International Conference on Communications ICC &apos;08</title>
		<meeting>IEEE International Conference on Communications ICC &apos;08</meeting>
		<imprint>
			<date type="published" when="2008-05" />
			<biblScope unit="page" from="19" to="23" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Data management issues in periodically disconnected sensor networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lindner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Madden</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Workshop on Sensor Networks at Informatik</title>
		<meeting>Workshop on Sensor Networks at Informatik</meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Random walks on graphs: A survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Lovasz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bolyai Soc. Math. Stud</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="353" to="397" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Lt codes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Luby</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FOCS &apos;02: Proceedings of the 43rd Symposium on Foundations of Computer Science</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page">271</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">TAG: a tiny aggregation service for ad-hoc sensor networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Madden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Franklin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Hellerstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Hong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGOPS Oper. Syst. Rev</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">SI</biblScope>
			<biblScope unit="page" from="131" to="146" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Randomized Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Motwani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Raghavan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<publisher>Cambridge University Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Hierarchical spatial gossip for multi-resolution representations in sensor networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Sarkar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the International Conference on Information Processing in Sensor Networks (IPSN&apos;07)</title>
		<meeting>of the International Conference on Information essing in Sensor Networks (IPSN&apos;07)</meeting>
		<imprint>
			<date type="published" when="2007-04" />
			<biblScope unit="page" from="420" to="429" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Gossip Algorithms. Foundations and Trends in Networking</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Shah</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
			<publisher>Now Publishers Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Data MULEs: Modeling a three-tier architecture for sparse sensor networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Shah</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Roy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Brunette</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE SNPA Workshop</title>
		<imprint>
			<date type="published" when="2003-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Improving the data delivery latency in sensor networks with controlled mobility</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Sugihara</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">K</forename><surname>Gupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">DCOSS &apos;08: Proceedings of the 4th IEEE international conference on Distributed Computing in Sensor Systems</title>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="386" to="399" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Optimizing energy-latency trade-off in sensor networks with controlled mobility</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Sugihara</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">K</forename><surname>Gupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOCOM&apos;09</title>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Multi-hop wireless sensor networks with mobile sink</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Vincze</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Vida</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CoNEXT&apos;05: Proceedings of the 2005 ACM conference on Emerging network experiment and technology</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="302" to="303" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
