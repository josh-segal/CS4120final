<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:51+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Energy Optimization in Mobile TV Broadcast Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohamed</forename><surname>Hefeeda</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computing Science</orgName>
								<orgName type="institution">Simon Fraser University Surrey</orgName>
								<address>
									<postCode>V3T 0A3</postCode>
									<region>BC</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cheng-Hsin</forename><surname>Hsu</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computing Science</orgName>
								<orgName type="institution">Simon Fraser University Surrey</orgName>
								<address>
									<postCode>V3T 0A3</postCode>
									<region>BC</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Energy Optimization in Mobile TV Broadcast Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>We consider energy optimization in mobile TV networks in which a base station broadcasts multiple TV channels to mobile receivers over a common wireless medium. In these systems, the base station broadcasts TV channels in bursts with bit rates much higher than the encoding rates of the video streams. Thus, mobile devices can receive a burst of traffic and then turn off their radio frequency circuits till the next burst in order to save energy. To achieve this energy saving, the base station must carefully construct the burst schedule for all TV channels. In this paper, we formulate the problem of determining the optimal burst schedules for broadcasting multiple TV channels. We show that this problem is NP-complete for channels with arbitrary bit rates. We then propose a practical simplification of the general problem, which allows TV channels to have different bit rates, but at power of two increments. Using this simplification , we propose and analyze an optimal burst scheduling algorithm. We implement our algorithm in a mobile TV testbed and we present empirical results to demonstrate its efficiency and optimality.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Mobile TV is expected to be a huge market in the near future. People are already using it in parts of Europe and Asia to watch TV shows and games on small hand-held devices while traveling <ref type="bibr" target="#b2">[3]</ref>. A common issue in all mobile wireless devices is the limited energy supply since they are battery powered. Thus, minimizing the energy consumption in mobile TV systems becomes a critical problem for the success and wide adoption of such systems. We consider energy optimization in mobile TV systems in which a base station concurrently broadcasts multiple digital TV channels to mobile receivers. Examples of such systems include networks based on the Digital Video Broadcast-Handheld (DVB-H) standard <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b6">6]</ref>. In these systems, the base station broadcasts TV channels in bursts with bit rates much higher than the encoding rates of the video streams. Thus, mobile devices can receive a burst of traffic and then turn off their radio frequency (RF) circuits till the next burst. This is referred to as time slicing <ref type="bibr" target="#b6">[6]</ref>. A burst transmission schedule needs to be computed in order to specify the burst start time and size for the time slicing module. Computing the burst transmission schedule for multiple TV channels is complex, because the schedule must: (i) ensure that receivers for any TV channel have no buffer overflow or underflow instances, and (ii) have no burst conflicts, which occur when two or more bursts intersect with each other in time.</p><p>Current practices of computing burst schedules are rather ad hoc. For example, the heuristic method proposed in the DVB-H standard documents <ref type="bibr">[4, pp. 66]</ref> provides schedules for only one TV channel. This heuristic simply allocates a new burst only after the data of its preceding burst is consumed by the player at the receiver. This cannot be generalized to multiple TV channels with different bit rates, because the computed schedule may have burst conflicts and may result in buffer under/over instances. Thus, many mobile TV deployments have to resort to encoding all TV channels at the same bit rate in order to use the heuristic burst scheduling technique in the standard. This is clearly inefficient and may yield large quality variations among TV channels carrying different types of multimedia content, which is the typical case in practice. For example, encoding a high-motion soccer game requires much higher bit rate than encoding a low-motion talk show. If we encode all TV channels at the same high bit rate, some channels may unnecessarily be allocated more bandwidth than they require and this extra bandwidth yields only marginal or no visual quality improvement. Thus, the expensive wireless bandwidth of the broadcast network could be wasted. On the other hand, if we encode all TV channels at the same low or moderate bit rate, not all channels will have the same visual quality, which could be annoying to users of a commercial service. To the best of our knowledge, there exist no systematic ways in the literature that fully address the 978-1-4244-3397-1/08/$25.00 ©2008 IEEE burst scheduling problem, despite the tremendous potential of mobile TV systems.</p><p>In this paper, we formulate the burst scheduling problem in mobile TV systems. We, unfortunately, show that this problem is NP-complete for TV channels with arbitrary bit rates. We then propose a practical simplification of the general problem, which allows TV channels to be classified into multiple classes and each class has a different bit rate. The bit rate of class c, r c , can take any value in the form of r c = 2 i × r 1 , where i ∈ {0, 1, 2, 3, . . . }, and r 1 is the bit rate of the lowest class. r 1 can take any arbitrary bit rate. For example, the bit rates 800, 400, 200, and 100 kbps could make four different classes for encoding sports events, movies, low motion episodes, and talk shows, respectively. This classification of TV channels also enables the operators of mobile TV networks to offer differentiated services: higher bit rate classes can broadcast premium services for higher fees. This service differentiation is not possible with the current burst scheduling schemes. Using the above simplification, we develop an optimal (in terms of energy consumption) burst scheduling algorithm, which is quite efficient: its time complexity is O(S log S), where S is the total number of TV channels. We present empirical results from a mobile TV testbed to validate our theoretical analysis and to analyze the performance of our algorithm.</p><p>Related Work. A few previous works have addressed energy saving in mobile TV systems. The authors of <ref type="bibr" target="#b7">[7]</ref> and <ref type="bibr" target="#b3">[4]</ref> estimate the effectiveness of the time slicing technique for given burst schedules. These two works do not solve the burst scheduling problem, they only compute achieved energy saving for pre-determined burst schedules. In contrast, we formulate and solve the burst scheduling problem for arbitrary channel bit rates. The authors of <ref type="bibr" target="#b8">[8]</ref> consider mobile TV receivers with an auxiliary short range wireless interface and construct a cooperative network among several receivers over this wireless network. Mobile TV receivers share received IP packets using this short range network, so that each receiver only receives a small fraction of IP packets directly from the broadcast network. This allows these receivers to reduce the frequency of turning on their RF circuits. The proposal in <ref type="bibr" target="#b8">[8]</ref> is orthogonal and complementary to our work, as it resides in the mobile devices themselves and tries to achieve additional energy saving on top of that achieved by time slicing. In contrast, our algorithm would be implemented in the base station broadcasting TV channels to mobile receivers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Problem Statement and Solution</head><p>We consider mobile TV systems in which a base station concurrently broadcasts S digital TV channels to clients with handheld devices over a wireless medium with bandwidth R kbps. Each TV channel s, 1 ≤ s ≤ S, has a bit rate r s kbps. The base station broadcasts each TV channel in bursts at bit rate R kbps. After receiving a burst of data, the RF receivers are switched off till the time of the next burst, which is computed by the base station and included in the header fields of the current burst. Notice that the RF receivers of mobile TV receivers must be open slightly before the burst time, because it takes some time to wake up and synchronize the circuitry before it can start receiving data. This time is called the overhead duration and is denoted by T o . With current technology, T o is in the range of 50-250 msec <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b6">6]</ref>. The energy saving achieved by mobile devices receiving TV channel s is denoted by γ s and it is calculated as the ratio of time the channel is in off mode to the total time <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b7">7]</ref>. We define the system-wide energy saving metric over all TV channels as γ = 񮽙 񮽙 S s=1 γ s 񮽙 /S. The energy saving and the burst scheduling itself are typically performed on a recurring time window called a frame, which is a system parameter and is denoted by p. <ref type="figure" target="#fig_0">Fig. 1</ref> illustrates a simple example for the burst scheduling problem. Notice that the bursts have different sizes, are disjoint in time, and are repeated in successive frames.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Problem 1 (Burst Scheduling in Mobile TV Systems)</head><p>Given S TV channels of different bit rates to be simultaneously broadcast to mobile receivers. Each TV channel is broadcast as bursts of data to save the energy of mobile devices. Find the optimal transmission schedule for bursts of all TV channels to maximize the system-wide energy saving metric γ. The transmission schedule must specify the number of bursts for each TV channel in a frame as well as the start and end times for each burst. The schedule cannot have burst collisions, which happen when two or more bursts have nonempty intersection in time. In addition, the schedule must ensure that there are no receiver buffer violations for any channel. A buffer violation occurs when the receiver either has no data in the buffer to play out (buffer underflow), or has no space to store data during a burst transmission (buffer overflow).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 1 The burst scheduling problem stated in Problem 1 is NP-complete.</head><p>Proof Sketch. We show that the problem of minimizing the energy consumption (Problem 1) is the same as the prob-</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>P2OPT</head><p>1. Compute optimal frame length p * 2. Allocate a leaf node for every channel s 3. Push all leaf nodes to a priority queue P with key r s /r 1 4. while true{ 5.</p><p>let m 1 = pop min(P ), m 2 = pop min(P ); 6.</p><p>if m 2 is null or m 1 .key &lt; m 2 .key { // no sibling 7.</p><p>if m 2 is not null push(P , m 2 ); // return m 2 to P 8.</p><p>Allocate dummy node m 2 , m 2 .key = m 1 .key 9. } 10.</p><p>Allocate an internal node n 11.</p><p>let n.left = m 1 , n.right = m 2 ; 12.</p><p>let n.key = m 1 .key + m 2 .key; 13.</p><p>push(P , n); // insert this internal node 14.</p><p>if n.key ≥ R/r 1 break; 15. } 16. if |P | &gt; 1 return ∅; // no feasible schedule 17. let T = ∅; // start composing schedule 18. Traverse the tree from root down, annotate each node with an offset with the value of the reverse bit pattern from root till this node 19. foreach leaf node l { 20. lem of minimizing the total number of bursts in each frame. Then, we reduce the NP-complete problem of task sequencing with release times and deadlines <ref type="bibr">[5, pp. 236]</ref> to it.</p><formula xml:id="formula_0">for i = 0 to l.key -1 { 21. start = offset + i × (R/r 1 )/l.key; 22. insertBurst(T, start × p * r 1 /R, l.ch); 23. } 24. } 25. return T;</formula><p>Burst Scheduling Algorithm. We propose an optimal algorithm for the burst scheduling problem when the bit rate of the TV channels s, 1 ≤ s ≤ S, is given by r s = 2 i × r 1 , where i ∈ {0, 1, 2, 3, . . . }, and r 1 can be any arbitrary bit rate. As mentioned in Sec. 1, the TV channels can be divided into classes, where each class contains similar-type multimedia content. Without loss of generality, we assume that the bit rates of the S channels are ordered such that r 1 ≤ r 2 ≤ · · · ≤ r S . If otherwise, a re-labeling of the bit rates is applied. We also assume that the bandwidth of the wireless medium satisfies R = 2 k × r 1 , where k ∈ {1, 2, 3, . . . }. We present in <ref type="figure" target="#fig_1">Fig. 2</ref> an optimal algorithm for solving the burst scheduling problem in this case.</p><p>The basic idea of our algorithm is as follows. The algorithm first computes the optimal value for the frame length p * . It then divides p * into bursts of equal size p * r 1 bits.</p><p>Thus, there are (p * R)/(p * r 1 ) = R/r 1 bursts in each frame. Then, each TV channel is allocated a number of bursts proportional to its bit rate. That is, TV channel s, 1 &lt; s ≤ S, is allocated r s /r 1 bursts and TV channel 1 is allocated only one burst in a each frame. Then, bursts of TV channel s are equally spaced within the frame, with inter-burst distance of p * /(r s /r 1 ) sec. This ensures that there is no underflow instances in the receiver buffer, because the consumption rate of the data in the buffer for TV channel s is r s bps and the burst size is p * r 1 bits. Also the size of each burst is up to the receiver buffer size, which ensures that there is no buffer overflow instances. Finally, bursts of different TV channels are arranged such that they do not intersect in time, that is, the resulting schedule is conflict free.</p><p>To achieve the above steps in a systematic way, the pseudo code in <ref type="figure" target="#fig_1">Fig. 2</ref> works as follows. It builds a binary tree bottom-up. Leaf nodes representing TV channels are created first, where the leaf node of TV channel s is annotated with the value r s /r 1 . The algorithm uses this value as the key, and inserts all leaf nodes into a priority queue. This priority queue is implemented as a binary heap to efficiently find the node with the smallest key. The algorithm then repeatedly merges the two nodes that have the least key values into a new internal node. This new internal node has a key value equivalent to the sum of the key values of its children. This is done by popping the smallest two values from the heap, and then pushing the newly created node into it. The merging of nodes continues till the tree has a height of log R/r 1 . The last merged node becomes the root of the binary tree. Note that if the wireless medium is fully utilized by the TV channels, i.e., 񮽙 S s=1 r s = R, the computed bursts of the different TV channels will completely fill the frame p. If otherwise (i.e., &lt; 100% utilization), the wireless medium will have to be idle during some periods within the frame. The algorithm represents these idle periods as dummy nodes in the tree.</p><p>Once the binary tree is created, the algorithm constructs the burst schedule. It allocates to each TV a number of bursts that is equal to its key value. In order to ensure conflict-free schedule, the algorithm computes the start time for each burst as follows. For each leaf node representing a TV channel, the algorithm traverses the tree top-down. During the traversal, each node is assigned the reverse bit pattern from the root to this node, where the right branch has the bit 1 and the left branch has the bit 0. The bit pattern for a leaf node encodes the number of bursts and their start times for the TV channel corresponding to that node. For example, in a tree of depth 3, the bit pattern 010 means that the TV channel is assigned only the second burst in a frame of eight bursts. For leaf nodes at levels less than the depth of the tree, the bit pattern is padded with one or more 'x' to the left. For example, if a leaf node has the bit pattern x01 in a tree of depth 3, this means that the node is at level 2 from the root. It also means that this node should be assigned the two bursts: 001 and 101. Notice that the first burst assigned to any TV channel is equal to the numeric value of its bit pattern, with all 'x' bits set to zero. The algorithm computes this value and refers to it as the offset. The algorithm then computes successive bursts relative to this offset. <ref type="figure" target="#fig_1">Fig. 2</ref> returns a conflict-free schedule with no buffer under/over flow instances, if one exists. And it has a worstcase time complexity of O(S log S), where S is the number of TV channels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 2 The burst scheduling algorithm P2OPT in</head><p>Proof Sketch. For the correctness part, we prove two issues. First, we prove that if P2OPT returns a schedule, this schedule is conflict-free schedule with no buffer under/over flow instances. We do this by analyzing the construction steps of the binary tree and showing that the bit patterns assigned to leaf nodes lead to no burst collision, enough number of bursts allocated to each channel, and correct inter-burst durations for each channel. Second, if P2OPT fails to return a schedule, there exists no feasible schedule for the given TV channels. For time complexity, P2OPT can be efficiently implemented using a binary heap, which can be initialized in time O(S). Notice that we have at most log R/r 1 dummy leaf nodes because there is at most one dummy leaf node for each level. The while loop in lines 4-15 iterates at most O(S + log R/r 1 ) = O(S) times, because log R/r 1 can be considered as a constant for practical encoding bit rates. Since each iteration takes O(log S) steps, the while loop takes O(S log S) steps. Constructing the burst schedule in lines 17-24 takes O(S) steps, since the tree has up to 2S nodes. Thus, the time complexity of P2OPT is O(S log S).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 3</head><p>The frame duration p * = b/r 1 , where b is the receiver buffer size, computed by P2OPT maximizes the average energy saving γ over all TV channels.</p><p>Proof Sketch. We use the fact that we established in the proof of Theorem 1: minimizing energy consumption is the same as minimizing the total number of bursts in each frame. Then, we show that any p &lt; b/r 1 results in higher energy consumption. Then, we show that if there is another optimal schedule with p &gt; b/r 1 , we can find an equivalent optimal schedule with length equal to b/r 1 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Evaluation using Mobile TV Testbed</head><p>We have set up a testbed for DVB-H networks <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b6">6]</ref>, which provides a realistic platform for analyzing our burst scheduling algorithm. The testbed has two parts: base station and receivers. The base station is a Linux box in which we installed the RF signal modulator available from <ref type="bibr" target="#b0">[1]</ref>. This modulator implements the physical layer of the protocol stack and transmits DVB-H standard compliant signals via an indoor antenna. We have implemented an IP encapsulator for DVB-H systems, which encapsulates IP packets of video streams into transport streams. We have implemented our P2OPT burst scheduling algorithm in this IP encapsulator. We use the Nokia N92 and N96 devices as the TV receiver to assess the visual quality of videos. We also use the DVB-H Analyzer available from <ref type="bibr" target="#b1">[2]</ref> to collect and analyze detailed information on the RF signals and DVB-H channels.</p><p>We configure the modulator to use a 5 MHz radio channel with Quadrature Phase-Shift Keying (QPSK) modulation. This leads to 5.445 Mbps air medium bandwidth according to the DVB-H standard <ref type="bibr" target="#b3">[4]</ref>. We concurrently broadcast 9 TV channels using our P2OPT algorithm for 10 minutes. These TV channels are classified into 4 classes: 2 channels at 64 kbps, 3 channels at 256 kbps, 2 channels at 512 kbps, and 2 channels at 1024 kbps. The receiver buffer size is 1 Mb. For each of these TV channels, we set up a streaming server on the base station to send 1-kB IP packets at the specified bit rate. To conduct statistically meaningful performance analysis, we collect detailed event logs from the base station. The logs contain the start and end times (in msec) of broadcasting every burst of data and its size.</p><p>We develop software utilities to analyze the logs for three performance metrics: bit rate, time spacing between successive bursts, and energy saving. We compute the bit rate for each TV channel by considering the start times of two consecutive bursts and the burst size. We use the bit rate to verify that our burst scheduling algorithm leads to no buffer under/overflow instances. We compute time spacing between bursts by first sorting bursts of all TV channels based on their start times. Then, we sequentially compute the time spacing between the start time of a burst and the end time of its immediate, previous, burst. We use the time spacing to verify that there are no burst conflicts, as a positive time spacing indicates bursts do not intersect with each other. We compute the energy saving for each TV channel as the ratio between the RF circuit on time and off time. We set the overhead duration T o = 100 msec.</p><p>Due to space limitations, we present only a sample of our results. We first validate the correctness of our P2OPT algorithm from the actual testbed implementation. <ref type="figure" target="#fig_3">Fig. 3(a)</ref> demonstrates the correctness of the P2OPT algorithm, where we plot the cumulative data received by receivers of a sample channel as the time progresses (other results are similar). We also show the consumed data with the time. To account for the worst case, we assume that the receiver starts consuming (playing back) the video data immediately after receiving a burst. The figure clearly shows that there are: (i) no buffer underflow instances as the consumption line never crosses the stair-case curve represent-  ing arrived data, and (ii) no buffer overflow instances as the distance between the data arrival and consumption curves never exceeds the buffer size <ref type="bibr">(1 Mb)</ref>. In order to show that there are no burst conflicts, we plot the cumulative distribution function (CDF) of the time spacing between successive bursts in <ref type="figure" target="#fig_3">Fig. 3(b)</ref>. This CDF curve is computed from all bursts of all TV channels broadcast during the experiment period (10 minutes). Negative time spacing would indicate that two bursts are intersecting in time, i.e., burst conflict. This figure clearly shows that our P2OPT algorithm results in no burst conflicts. Finally, we verify that the energy saving achieved by our P2OPT algorithm is indeed optimal. To do this, we compute the absolute maximum energy saving that can be achieved by any algorithm for a given TV channel. We compute this maximum by making the base station broadcast only the given TV channel. In this case, the base station easily maximizes the energy saving by allocating the largest burst that can fill the receiver's buffer. The RF circuit of the receiver is then turned off till the data of this burst is consumed. We repeat this experiment nine times; once for each considered TV channel, and we compute the maximum possible energy saving. We then run our algorithm to compute the burst schedule for the nine TV channels, and we make the base station broadcast all of them concurrently. We compute the energy saving for each TV channel in case. Sample results for channels 1 and 6 are presented in <ref type="figure" target="#fig_3">Fig. 3(c)</ref>; all other results are similar. The figure confirms the optimality of the P2OPT algorithm in terms of energy saving.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Conclusions</head><p>In this paper, we formulated the burst scheduling problem in mobile TV systems. We showed that the general burst scheduling problem for multiple TV channels with arbitrary bit rates is NP-complete. We proposed a practical variation of the general problem that enables the use of different classes for video streams, where the encoding bit rates can take on power of two increments. Multiple video classes with various bit rates enable network operators to define their own objectives such as quality equalization, quality maximization, and even a general utility function to support premium services for higher fees. We proposed and analyzed an optimal burst scheduling algorithm that runs in O(S log S) time, where S is the number of TV channels. We implemented the proposed algorithm in a real testbed for one of the major mobile TV networks: DVB-H <ref type="bibr" target="#b6">[6]</ref>. We analyzed several logs from the testbed and empirically showed that our algorithm yields optimal energy savings, and produces valid burst schedules with no buffer under/over flow instances and no burst conflicts.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. The burst scheduling problem.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. Burst scheduling algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>433 Authorized licensed use limited to: SIMON FRASER UNIVERSITY. Downloaded on November 15, 2009 at 14:45 from IEEE Xplore. Restrictions apply.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 . Empirical validation of the correctness and optimality of the P2OPT algorithm.</head><label>3</label><figDesc>Figure 3. Empirical validation of the correctness and optimality of the P2OPT algorithm.</figDesc></figure>

			<note place="foot">Authorized licensed use limited to: SIMON FRASER UNIVERSITY. Downloaded on November 15, 2009 at 14:45 from IEEE Xplore. Restrictions apply.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dta-110t Pci</forename><surname>Dektec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Modulator</surname></persName>
		</author>
		<ptr target="http://www.dektec.com/Products/DTA-110T/" />
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Divi</forename><surname>Catch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rf-T/H</forename><surname>Transport</surname></persName>
		</author>
		<ptr target="http://www.enensys.com/" />
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Digital Video Broadcasting -Handheld (DVB-H) home page</title>
		<ptr target="http://www.dvb-h.org/" />
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Digital Video Broadcasting (DVB</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">European Telecommunications Standards Institute (ETSI) Standard EN 102 377 Ver. 1.3.1</title>
		<imprint>
			<date type="published" when="2007-05" />
		</imprint>
	</monogr>
	<note>DVB-H implementation guidelines</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Computers and Intractability: A Guide to The Theory of NP-completeness</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Johnson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979" />
			<publisher>W. H. Freeman</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">DVB-H and IP Datacast -broadcast to handheld devices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kornfeld</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>May</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Broadcasting</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="161" to="170" />
			<date type="published" when="2007-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Performance analysis of time slicing in DVB-H</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Owens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cosmas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Itagaki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Joint IST Workshop on Mobile Future and Symposium on Trends in Communications (SympoTIC&apos;04)</title>
		<meeting>of Joint IST Workshop on Mobile Future and Symposium on Trends in Communications (SympoTIC&apos;04)<address><addrLine>Bratislava, Slovakia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-10" />
			<biblScope unit="page" from="183" to="186" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Cooperative power saving strategies for IP-services supported over DVB-H networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Fitzek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Katz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Wireless Communications and Networking Conference (WCNC&apos;07)</title>
		<meeting>of IEEE Wireless Communications and Networking Conference (WCNC&apos;07)<address><addrLine>Hong Kong, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-03" />
			<biblScope unit="page" from="4107" to="4111" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
