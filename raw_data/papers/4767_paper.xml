<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T17:00+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Analysis of Rate-Distortion Functions and Congestion Control in Scalable Internet Video Streaming</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Min</forename><surname>Dai</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Electrical Engineering</orgName>
								<orgName type="department" key="dep2">Department of Computer Science</orgName>
								<orgName type="institution" key="instit1">Texas A&amp;M University College Station</orgName>
								<orgName type="institution" key="instit2">Texas A&amp;M University College Station</orgName>
								<address>
									<postCode>77843, 77843</postCode>
									<region>TX, TX</region>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dmitri</forename><surname>Loguinov</surname></persName>
							<email>dmitri@cs.tamu.edu</email>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Electrical Engineering</orgName>
								<orgName type="department" key="dep2">Department of Computer Science</orgName>
								<orgName type="institution" key="instit1">Texas A&amp;M University College Station</orgName>
								<orgName type="institution" key="instit2">Texas A&amp;M University College Station</orgName>
								<address>
									<postCode>77843, 77843</postCode>
									<region>TX, TX</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Analysis of Rate-Distortion Functions and Congestion Control in Scalable Internet Video Streaming</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<note>Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. NOSSDAV&apos;03, June 1-3, 2003, Monterey, California, USA. 1-58113-694-3/03/0006 ...$5.00.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I4 [Image Processing and Computer Vision]: Com- pression (Coding); C21 [Network Protocols]: Network Communications General Terms Algorithms</term>
					<term>Performance</term>
					<term>Experimentation Keywords MPEG-4 FGS</term>
					<term>Scalable Coding</term>
					<term>Video Streaming</term>
					<term>Conges- tion Control</term>
					<term>R-D Modeling</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Internet streaming applications usually have strict requirements on bandwidth, delay, and packet loss, while the current best-effort Internet does not provide any Quality-of-Service (QoS) guarantees to end flows. To achieve a higher level of QoS for the end user, Fine-granular Scalability (FGS), which has both strong error-resilience and flexibility during streaming over variable-bandwidth channels, has been accepted as a standard coding scheme for the video streaming profile in MPEG-4 [19]. Note that FGS and its extensions (e.g., progressive FGS) can also be used in the emerging video coding standards such as H.26L. This paper investigates rate-distortion (R-D) models of FGS coders and shows how such models can be used in a simple rate control framework for FGS streaming over the Internet. In terms of congestion control, we examine advantages and drawbacks of Kelly&apos;s proportional-fairness framework [12] and investigate its practical use both in the best-effort and AQM-enabled Internet. Our simulation results show that the developed R-D models provide fundamental insight into the structure of FGS coders and that constant-quality streaming is possible as long as the number of end flows competing at each bottleneck resource remains fairly stationary.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Video streaming is becoming an increasingly important Internet application. In order to be successful in the besteffort environment, video streaming must possess both congestion control and adaptive video scaling mechanisms. This paper investigates several fundamental properties of scalable video (MPEG-4 FGS) and examines the suitability of recently proposed congestion controls <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b12">[13]</ref> for achieving constant-quality streaming.</p><p>Congestion control has been actively studied in the area of networking and video-coding, and two general approaches emerged <ref type="bibr" target="#b25">[26]</ref>: the network-centric approach and the endsystem approach. The network-centric approach requires routers/switches to guarantee end-to-end bandwidth and to prevent large delays and packet loss in the network. The end-system approach employs control techniques in the video coding scheme to maximize the video quality without QoS support from the network <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b14">[15]</ref>. Since it is expected that no QoS support will be available in the Internet in the near future, this paper studies video streaming using the end-system approach and relies on support from smooth end-to-end congestion control to adjust the sending rate of the server.</p><p>Recall that FGS <ref type="bibr" target="#b13">[14]</ref>, <ref type="bibr" target="#b19">[20]</ref> has been chosen as the streaming profile of the ISO/IEC MPEG-4 standard <ref type="bibr" target="#b18">[19]</ref>, because it provides a flexible and low-overhead foundation for scaling the enhancement layer to match variable network capacity. FGS consists of two layers: the base layer and a single enhancement layer. The base layer is usually coded at significantly lower bitrates than the enhancement layer. Hence, it is often assumed that the end-to-end path has enough capacity to deliver the base layer to the user, which under certain generic assumptions (such as base-layer FEC and priority retransmission of the base layer) guarantees its error-free delivery to the receiver. As a result, the server only needs to control the amount of transmitted bits in the enhancement layer to fill the remaining capacity of the network channel.</p><p>Also recall that due to the inherent nature of rate control in the current video standards (e.g. MPEG-4), the encoder often produces video sequences with highly fluctuating visual quality <ref type="bibr" target="#b26">[27]</ref>, <ref type="bibr" target="#b27">[28]</ref>, <ref type="bibr" target="#b28">[29]</ref>. Therefore, it is only natural to scale the FGS layer during transmission so as to "flatten out" the fluctuating quality of the base layer.</p><p>Many current approaches (e.g., <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b23">[24]</ref>) develop rate control algorithms that assume a constant-rate channel and do not couple FGS scaling with congestion control. Further-more, the existing approaches to constant-quality streaming often rely on empirical R-D models to decide how to scale the FGS layer <ref type="bibr" target="#b26">[27]</ref>, <ref type="bibr" target="#b27">[28]</ref>, which provide very little new information about the structure of scalable coders or their R-D tradeoffs. What is missing from this picture are deeper understanding of R-D functions of scalable (enhancement) layers and realistic congestion control assumptions about the network channel. If the existing methods were to use the classical AIMD (or various other TCP-friendly schemes), the fluctuating rate of these controllers would void any attempts of the server to produce a flat PSNR curve. The goal of our work is to bridge this gap by studying R-D characteristics of FGS and investigating asymptotically stable (smooth) controllers for video streaming.</p><p>The paper is organized as follows. Section 2 provides the necessary background and motivation. Section 3 develops a novel closed-form R-D model of FGS video that generalizes the R-D models in classical information theory <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b23">[24]</ref> to second-order polynomials. Section 4 shows how this model can be applied in video streaming when the server knows its available bandwidth. Section 5 discusses the benefits and limitations of proportional-fairness congestion control. Section 6 couples our analytical R-D model with feedback congestion control and shows simulation results. Section 7 concludes the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">MOTIVATION AND RELATED WORK</head><p>Recall that a fundamental problem both in video coding and real-time scaling of the enhancement layer is the knowledge of the correct R-D information of the video sequence. There are two means of obtaining R-D curves: analytical and empirical. The analytical approach builds a closed-form R-D model of the source and/or encoder based on the statistical properties of the source data and/or coding scheme <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b7">[8]</ref>. The empirical approach constructs R-D curves by interpolating between several sampled values of rate and distortion <ref type="bibr" target="#b14">[15]</ref>, <ref type="bibr" target="#b27">[28]</ref>. Unfortunately, the empirical approach does not give us much insight into the video coding process and its high computation requirements typically place an unnecessary burden on streaming servers.</p><p>On the other hand, present analytical R-D approaches are mostly developed for non-scalable video (base layer) and thus lack accuracy in FGS streaming applications <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b23">[24]</ref>. It should be further noted that classical rate distortion theory and information theory develop simple closed-form R-D formulas for statistical properties (e.g., memoryless Gaussian sources) not typically found in real sequences.</p><p>Recall that in information theory, DCT coefficients of each frame i are modeled as a zero-mean random variable X i . One popular statistical model for DCT data is that of a Gaussian source with mean µ = 0 and variance σ 2 x , which leads to tractable results (that are upper bounds on achievable quality) in information theory <ref type="bibr" target="#b3">[4]</ref>:</p><formula xml:id="formula_0">D(R) = σ 2 x 2 −2R .<label>(1)</label></formula><p>In terms of quantization step ∆, the classical model (1) can be summarized as <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b6">[7]</ref>:</p><formula xml:id="formula_1">D(∆) = ∆ 2 β<label>(2)</label></formula><p>and</p><formula xml:id="formula_2">R(∆) = 1 2 log 2 ε 2 βσ 2 x ∆ 2 ,<label>(3)</label></formula><p>where β is 12 for uniformly distributed sources (often used for Gaussian and Laplacian sources <ref type="bibr" target="#b0">[1]</ref>) and ε 2 is introduced to model the reduction in efficiency due to quantization (ε 2 = 1.4 for Gaussian, 1.2 for Laplacian, and 1.0 for uniform source data). Several variations of the classical R-D model have been proposed in the past. For example, Hang et al.</p><p>[7] extend the model in (2) by introducing three contentdependent parameters and adjusting the value of β depending on the quantization step and the value of these parameters empirically estimated for each frame. There is a significant research activity in the area of rate control for FGS streaming <ref type="bibr" target="#b21">[22]</ref>, <ref type="bibr" target="#b26">[27]</ref>, <ref type="bibr" target="#b27">[28]</ref>. All these approaches are developed under a buffer constraint that the number of bits consumed in a group of pictures (GOP) or a certain (fixed) window should be equal to the size of decoder's buffer. Under this constraint, Zhao et al. <ref type="bibr" target="#b27">[28]</ref> apply a Newton search method to find the optimal distortion based on the empirical R-D curve; however, the method does not consider variation of the available bandwidth during transmission, which makes it more suitable for offline downloading rather than real-time streaming.</p><p>In another work based on empirical R-D modeling, Zhao et al. <ref type="bibr" target="#b26">[27]</ref> adopt a sliding window approach to perform rate adaptation for each frame in both the enhancement and base layers. This approach not only alters the quantization parameters in the encoder for the base layer, but also adaptively allocates bits for the enhancement layer. However, the high computation complexity of this approach makes it less appealing during real-time streaming where the server must adapt to bandwidth variations very quickly. Finally, <ref type="bibr">Wang et al. [24]</ref> use the classical R-D model (1)-(3) and Lagrange optimization to allocate bits for the FGS enhancement layer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">MODELING FGS VIDEO</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Introduction</head><p>To show that R-D curves for scalable coders are not modeled by traditional results in information theory, we coded the Foreman sequence (128 kb/s base layer @ 10 fps) and extracted the actual R-D functions of the FGS layer from frames 117 and 219 (shown in <ref type="figure" target="#fig_0">Figure 1</ref>). Notice that (1) is a straight line in the PSNR-R domain and that it does not match well the actual shape of the curves in <ref type="figure" target="#fig_0">Figure 1</ref>. Furthermore, as seen in the figure, even a quadratic function is not capable of modeling both low and high bitrates at the same time.</p><p>Recall that video coding coupled with congestion control requires accurate R-D information to decide how to control the encoding and transmission bitrate under strict bandwidth constraints. Devising a good R-D model involves two important components: a) precisely modeling source data; and b) selecting a sound operational model. Therefore, we first investigate statistical properties of source data in FGS enhancement layers and then build a closed-form R-D model of scalable FGS coders.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">R-D Modeling Framework</head><p>The enhancement layer input to the FGS encoder is the discrete cosine transform (DCT) residue between the origi-   nal image and the reconstructed image in the base layer <ref type="bibr" target="#b18">[19]</ref>. There are three stages during FGS coding, which causes three levels of distortion. <ref type="figure" target="#fig_1">Figure 2</ref> provides a conceptual view of the FGS coding process and illustrates how these levels of distortion are generated. Recall that the distortion observed by the end user is the difference between the source and its reconstructed version in the pixel (i.e., spatial) domain (shown as D 1 in the <ref type="figure">figure)</ref>. Let us further analyze how this distortion is formed. Initially, the source signal in the spatial domain is transformed into the DCT domain with random DCT round-off errors (which are labeled as noise ω 1 in the <ref type="figure">figure)</ref>. In the DCT domain, the coefficients are separated into the base layer and the enhancement layer. After the base layer is combined with the quantized FGS signal at the receiver, it incurs the second level of distortion D2, which is the classical frequency-domain distortion often modeled in previous work. Note, however, that we have a third level of distortion D3 that comes from quantization errors in the FGS enhancement layer.</p><p>It is easy to notice that distortion D 1 and D 2 are equal in an ideal codec (without round-off errors) since DCT is an orthogonal transform. In real coding schemes, round-off errors ω1 and ω2 are very small in comparison with values of typical distortion, which for all practical purposes allows us to write D 1 ≈ D 2 not only in theory, but also practice.</p><p>It is further easy to see that distortion D 2 is equal to D 3 . Consider an original DCT coefficient x i approximated in the base layer with a value of bi. The corresponding DCT residue in the enhancement layer is ei = xi-bi . Assume that e i is quantized to some value q i through bitplane coding (i.e., the receiver decodes q i instead of e i ). Thus, the distorted 1.E-06</p><p>1.E-04</p><p>1.E-02</p><p>1.E+00 DCT coefficient is bi + qi, and distortion D2 is given by:</p><formula xml:id="formula_3">D 2 = i (x i − (b i + q i )) 2 = i (e i − q i ) 2 = D 3 .<label>(4)</label></formula><p>Therefore, for FGS-coded sequences, the distortion in the FGS enchantment layer alone determines the distortion of the combined signal at the receiver. This means that R-D modeling of the enhancement layer is sufficient to describe the visual quality of video streaming. Thus, our modeling below focuses entirely on the FGS layer and develops an R-D framework that is independent of the base layer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Source Statistical Properties</head><p>In image and video coding, Gaussian and Laplacian (double exponential) distributions are the two most popular statistical models for DCT coefficients <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b21">[22]</ref>, <ref type="bibr" target="#b22">[23]</ref> and FGS DCT residue <ref type="bibr" target="#b21">[22]</ref>. These models are popular often more due to their mathematical tractability rather than because they accurately describe real video source data.</p><p>To examine statistical properties of real DCT residue, we conducted an extensive analysis of the probability mass function (PMF) of DCT residue coefficients for different frames and different sequences. A typical example of what we observed is shown in <ref type="figure" target="#fig_3">Figure 3</ref>. <ref type="figure" target="#fig_3">Figure 3</ref> (left) shows that neither Gaussian nor pure Laplacian distribution fits the sharp peak of the real PMF. Notice that a significant fraction of all coefficients are located near the peak, which means that it is very important to accurately model the actual PMF near zero. It may seem at first that the Gaussian and the Laplacian distributions can fit the tail of the real PMF in <ref type="figure" target="#fig_3">Figure 3</ref> (left); however, close examination of the tails on the logarithmic scale (shown in <ref type="figure" target="#fig_3">Figure 3</ref> (right)) reveals that the Gaussian distribution decays too quickly and the Laplacian distribution cannot describe the bending shape of the real PMF.</p><p>Further notice that in <ref type="figure" target="#fig_3">Figure 3</ref> (right), the log-scaled PMF of the DCT residue can be partitioned into two straight lines, which indicates that the shape of the PMF can be approximated by a combination of two exponential distributions. Thus, to capture the sharp peak and heavy tails of the actual PMF, the natural choice is to use a mixture-Laplacian model described below.</p><p>Suppose that the DCT residue is generated by a random variable X with probability p and another random variable Y with probability (1 − p). Thus, assuming the corresponding density (mass) functions for these two variables are p X (k) and p Y (k), the PMF of the DCT residue is given 1.E-04</p><p>1.E-02</p><p>1.E+00 by:</p><formula xml:id="formula_4">p(k) = p · f X (k) + (1 − p) · f Y (k) = p · P (X = k) + (1 − p) · P (Y = k) = p λX 2 e −λ X |k| + (1 − p) λY 2 e −λ Y |k| ,<label>(5)</label></formula><p>where λ X and λ Y are the shape parameters of the corresponding Laplacian distributions. We can further note that one Laplacian random variable (say X) concentrates the probability mass near 0 due to its low variance, whereas the other random variable (say Y ) spreads out the rest of the mass across larger values due to its high variance. In practice, we use the EM (Expectation-Maximization) algorithm to obtain the estimates of parameters {λX , λY , p}. As illustrated in <ref type="figure" target="#fig_5">Figure 4</ref>, the mixture Laplacian distribution fits the histogram of the DCT residue much better. The discrepancy at the end of the tail in <ref type="figure" target="#fig_5">Figure 4</ref> (right) does not affect the source model, since only very few of the samples are contained there (0.04% in this example). It should be pointed out that the mixture Laplacian distribution can also describe statistical properties of other signals with sharp peaks and heavy tails 1 , such as base-layer DCT coefficients.</p><p>We next examine the discrepancy between these three models (Gaussian, Laplacian and mixture Laplacian) and the real PMF for Foreman CIF and Coastguard CIF in Figure 5. Note that the error is weighed by the amount of DCT coefficients it affects (i.e., discrepancies toward the tail of the distribution weigh less since they affect only a handful of samples).</p><p>In summary, experimental results show that one cannot directly apply classical (e.g., Gaussian or Laplacian) statistical models to DCT residue in MPEG-4 FGS. However, we observed that the mixture-Laplacian distribution follows the majority of the real data with exceptional accuracy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Previous Closed-Form R-D Models</head><p>In traditional rate-distortion theory <ref type="bibr" target="#b8">[9]</ref>, distortion D is derived to be an exponential function of rate R: D = Ee αR , where α is a constant and E is a function of the power spectrum density (PSD) of the source. Under certain autoregressive assumptions about the source, the PSD model <ref type="bibr" target="#b0">1</ref> In statistical modeling of DCT data, "heavy" tails mean distributions decaying slower than Gaussian. This is entirely different from heavy tails found in network modeling where they mean some form of the Pareto (hyperbolic) distribution.    can be simplified into a closed form as long as the source is Gaussian and the quantization step ∆ is small <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b23">[24]</ref>:</p><formula xml:id="formula_5">D = γ 2 ε 2 σ 2 x 2 −2R ,<label>(6)</label></formula><p>where σ 2 x denotes signal variance as before and γ 2 is derived from the autocorrelation function of the source <ref type="bibr" target="#b8">[9]</ref>. Notice that (6) is a scaled version of (1), which still produces straight R-D curves in the PSNR domain.</p><p>Chiang et al. <ref type="bibr" target="#b2">[3]</ref> use a "quadratic" R-D model based on a Taylor expansion of the classical result in (1). Their model assumes the following shape:</p><formula xml:id="formula_6">R = aD −1 + bD −2 ,<label>(7)</label></formula><p>where parameters a, b are obtained from multiple empirical samples of the R-D curve. Finally, one additional popular closed-form R-D model is the widely-used uniform quantizer (UQ) shown in (2).</p><p>To illustrate the accuracy of these models, we plot the actual R-D curve and the model estimation for frames 0 and 252 of Foreman CIF in <ref type="figure" target="#fig_8">Figure 6</ref>. Observe that a large mismatch exists between these models and the real R-D curve, not only in the actual points, but also in the underlying shape of the curve.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Square Root R-D Model</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.1">Distortion Model</head><p>Assume that the quantization step applied to a given frame is ∆, which depends on the bitplane number where the server stopped transmission of the FGS layer. If the maximum number of bitplanes in a given frame is n and the last transmitted bitplane is z (in the order from the mostsignificant to the least-significant), then ∆ = 2 n−z . Then the distortion produced by quantizer ∆ is given by <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b20">[21]</ref>:</p><formula xml:id="formula_7">D(∆) = 2 N/∆ k=0 (k+1)∆−1 m=k∆ (m − k∆) 2 p(m),<label>(8)</label></formula><p>where p(m) is a (symmetric) PMF of the source DCT residue. Substituting a single exponential distribution p(m) = ae bm into (8) and evaluating the discrete sum, we have:</p><formula xml:id="formula_8">D(∆) = 2a (1−e b∆ )b × e b(∆−1) ∆ 2 − 2∆ 1 + 1 b + 2 b 2 − 2 b 2 ,<label>(9)</label></formula><p>where a and b are the parameters of the generalized Laplacian distribution ae −b|m| . To demonstrate the accuracy of (9) over two sample FGS sequences, <ref type="figure" target="#fig_9">Figure 7</ref> plots the average absolute error of the classical model, UQ, and model <ref type="formula" target="#formula_8">(9)</ref> for Foreman CIF and Coastguard CIF. As the figure shows, (9) is a very accurate estimator of distortion D(∆). However, the complex form of the model serves very little useful purpose. Thus, we next focus on simplifying it. Recall that PSNR=10log 10 (255 2 /D) and take the logarithmic transform of distortion model (9). After omitting less-significant terms and grouping constants, we have:</p><formula xml:id="formula_9">log D(∆) ≈ a1 + a2∆ + log b1∆ 2 + b2∆ + b3 ,<label>(10)</label></formula><p>which can be further simplified to the following assuming a limited range of ∆ found in standard coding schemes:</p><formula xml:id="formula_10">log D(∆) ≈ c 1 log 2 ∆ + c 2 log ∆ + c 3 .<label>(11)</label></formula><p>Note that (11) is a quadratic (rather than linear) function of bitplane number z and smoothly generalizes classical information-theoretic results. Thus, we can re-write (11) in terms of bitplane number z and quality PSNR:</p><formula xml:id="formula_11">P SN R(z) ≈ d1z 2 + d2z + d3.<label>(12)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.2">Rate Model</head><p>We conducted numerous experiments to better understand the properties of bitrate R(z) as a function of bitplane z and compared them to the traditional model. Recall the tradition R-D model in (3) and notice that its rate R is a linear function of log(∆) (or bitplane z). This is an important observation since we earlier found out that classical distortion PSNR(z) in (2) was also a linear function of bitplane z. Hence, the traditional R-D theory is a combination of two linear functions of bitplane z. Carefully examining <ref type="figure" target="#fig_10">Figure 8</ref> and many others like it, one notices that the shape of the R(z) curve is not linear and is likely to be a polynomial function. Through simulations, we found that second-order polynomials (quadratic functions) were sufficient to model R(z) as schematically illustrated in <ref type="figure" target="#fig_10">Figure 8</ref>. Skipping a large set of simulation results that show quadratic modeling of R(z), we next combine our findings into a single R-D model and check its accuracy in the entire sequence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.3">Square-Root Model</head><p>What we have learned so far allows us to construct a closefrom R-D curve D(R) and generalize results of the linear traditional model to second-order polynomial functions in the bitplane domain (or the z-domain, following the notation in <ref type="bibr" target="#b7">[8]</ref>). Consider a polynomial function for R(z) in the zdomain for some constants e 1 − e 3 :</p><formula xml:id="formula_12">R(z) ≈ e 1 z 2 + e 2 z + e 3 .<label>(13)</label></formula><p>Inverting the polynomial in (13), keeping in mind that PSNR(z) is also a quadratic function of z, dropping insignificant terms, and combining constants:</p><formula xml:id="formula_13">P SN R(R) ≈ AR + B √ R + C.<label>(14)</label></formula><p>Notice that this result is a direct generalization of the classical formula (1), which models the PSNR as a linear function of rate R. Our work found substantial evidence that suggests that linear approximations in the z-domain do not produce accurate models (as evidenced by many figures in this paper) and that exploring more complicated models can bring additional insight into understanding R-D properties of complex sources and encoders. <ref type="bibr">Re-writing (14)</ref> in the distortion domain, the final closed-form R-D function is a smooth generalization of the classical result in (1):</p><formula xml:id="formula_14">D(R) = 2 aR+b √ R+c .<label>(15)</label></formula><p>In <ref type="figure">Figure 9</ref>, we examine the maximum (over all bitplanes) absolute error of our model <ref type="bibr" target="#b13">(14)</ref>, a simple quadratic model shown in <ref type="figure" target="#fig_0">Figure 1</ref>, and the usual linear model from information theory. Since models (6) and <ref type="formula" target="#formula_6">(7)</ref> are both expanded from the classical linear result, they can be combined under the linear "umbrella" of the classical model. <ref type="figure" target="#fig_0">Figure 10</ref> shows the average absolute error of the same models in the same two sequences. Other extensive experimental results show that (14) significantly outperforms the classical linear model, Chiang's result <ref type="bibr" target="#b2">[3]</ref>, as well as the quadratic model. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">APPLICATION OF THE MODEL</head><p>As we mentioned in Section 2, rate control is one popular application of R-D models. The main question here is how to scale the FGS layer to both match the available bandwidth RT (total bits allowed for the entire sequence) and achieve certain constant quality D after decoding. We illustrate the solution to this problem using <ref type="figure" target="#fig_0">Figure 11</ref> (left) and a simple sequence consisting of two frames. First, the server inverts the result in (14) or (15) and obtains two R(D) curves (one for each frame). Second, it generates the combined rate curve R 1 (D) + R 2 (D), which shows the amount of total bits required to achieve constant D in both frames. Knowing RT , the combined curve needs to be inverted one more time to obtain the value of DT that provides the required total bitrate R T . The size of individual frames is given by R 1 (D T ) and R 2 (D T ) as the final step.</p><p>In general, adding the R-D curves of each frame, we get a combined function F (D), which is constrained by RT :</p><formula xml:id="formula_15">F (D) = N i=1 R i (D) = R T ,<label>(16)</label></formula><p>where Ri(D) is the R-D function of frame i and N is the number of frames in the remainder of the sequence. Partial summation in (16) is important since congestion control often changes its rate in the middle of actual streaming and (16) needs to be recomputed every time such change is encountered. Finding the root of (16) involves inverting F (D) and evaluating</p><formula xml:id="formula_16">D T = F −1 (R T ).<label>(17)</label></formula><p>Even though the new R-D framework does not lead to a closed-form solution for F −1 , each of the individual curves can be generated with high accuracy using only a 3-point Figure 11: Given a target rate R T , the location of constant quality D <ref type="bibr">T (left)</ref>. Comparison between our model, the result of <ref type="bibr" target="#b23">[24]</ref>, and rate control in JPEG2000 (right).</p><p>interpolation and the resulting function F (D) can be computed (and then inverted) very efficiently.</p><p>In <ref type="figure" target="#fig_0">Figure 11</ref> (right), we illustrate this simple rate control algorithm (labeled as "SQRT") assuming that the channel capacity is fixed (variable channel rates are studied in the next section). The figure shows simulation results using Foreman CIF with 128 kb/s for the base layer and 768 kb/s for the enhancement layer in comparison with two other rate-control methods -those proposed in the JPEG2000 image coding standard and in <ref type="bibr">Wang et al. [24]</ref>. Experimental results show that the new R-D framework can be successfully used to both dramatically reduce undesirable quality fluctuation during streaming and to relieve the server from expensive interpolation. The variance in PSNR between adjacent frames in the SQRT curve shown in <ref type="figure" target="#fig_0">Figure 11</ref> (right) is only 0.04 dB. This is the point where most FGS streaming papers stop. We find that the neither the exact method of scaling the enhancement layer (this section), nor the underlying R-D model (the previous section) are very important if the application relies on any of the wide variety of AIMD-style congestion control methods. Hence, we feel that with goals of constant-quality streaming, it becomes much more important to continue the research into the area of smooth congestion control, which is a pre-requisite to actual implementation of any of these methods. Unfortunately, the current Internet does not provide an environment where smooth (asymptotically stable) sending rates can be easily achieved; nevertheless, there are promising classes of congestion controllers for the future Internet than may fulfill these requirements. One such class is studied next.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">CONGESTION CONTROL</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Overview</head><p>There are many challenges facing Internet streaming applications, all of which stem from the lack of quality-ofservice (QoS) guarantees in the transport layer. One of the primary impediments to high-quality delivery of real-time video to the end user is the variable channel bandwidth. Notice that even though end-to-end paths often experience relatively stationary conditions (in terms of the number of competing flows, average long-term packet loss, etc.), current congestion control methods built on top of a variety of TCP-friendly schemes cannot asymptotically converge (from a control theory point of view) to a single stationary rate or provide a smooth "virtual" channel to the video application.</p><p>After AIMD (Additive Increase, Multiplicative Decrease) was found unsuitable for video applications due to large rate fluctuations, a major effort has been dedicated to developing smoother congestion control methods for multimedia streaming (e.g., TFRC <ref type="bibr" target="#b4">[5]</ref> and binomial algorithms <ref type="bibr" target="#b0">[1]</ref>). Nevertheless, these newly-developed methods are not asymptotically stable, nor do they have any stationary points in the feasible operating range of a typical application. Note that unless a video application can employ a stable congestion controller, any attempts to provide constant-quality streaming will be moot.</p><p>In this section, we study continuous-feedback congestion controllers proposed by <ref type="bibr">Kelly et al. [12]</ref> and investigate whether their performance provides the necessary foundation for achieving the goals of this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Continuous-Feedback Controllers</head><p>Recall that TCP and classical binary-feedback methods (such as AIMD and binomial algorithms) rely on packet loss in order to increase or decrease their rates. Since the decision about changing the current rate is binary, we can summarize their control functions as following:</p><formula xml:id="formula_17">dr dt = (1 − sgn(p))F (r) − sgn(p)G(r),<label>(18)</label></formula><p>where r(t) is the rate, p(t) is packet loss, F (r) is the increase function, and G(r) is the decrease function. Notice that with a reasonable choice of functions F and G, the right side of <ref type="formula" target="#formula_0">(18)</ref> does not have roots, which means that the equation does not have stationary points. Since <ref type="formula" target="#formula_0">(18)</ref> cannot be stabilized, it must oscillate or diverge. It is easy to show that under certain mild conditions on F (r) and G(r) <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b15">[16]</ref>, (18) oscillates around the equilibrium (equal-share) rate. The amount of oscillations depends on the choice of F (r) and G(r) and typically leads to a trade-off between the size of oscillations and the rate of response to congestion signals. Thus, controls that produce small oscillations are usually susceptible to more packet loss due to their reluctance to back off during congestion. What is interesting about binary-feedback methods is that they typically do not possess any methods that can force the oscillations to asymptotically decay to zero, even under stationary cross-traffic conditions. Therefore, we seek alternative methods that provide this functionality and are provably stable under both immediate and delayed feedback. One such alternative is given by Kelly's congestion control framework called proportional fairness <ref type="bibr" target="#b11">[12]</ref>:</p><formula xml:id="formula_18">dr dt = r(αU (r) − β l∈P p l ),<label>(19)</label></formula><p>where U (r) = log(r) is the utility function of the end user and p l is the price that the flow pays for using resource (router) l along the end-to-end path P . Kelly's controls have received significant attention in the theoretical networking community <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b16">[17]</ref>; however, their application in real networks or streaming applications has been limited. Notice several differences (borderline simplifications) of the original framework (19), which are necessary to make this controller practical. First, it is common to use packet loss as the continuous feedback (instead of the price) simply because the current Internet is still best-effort and prices are a meaningless metric for individual routers. Second, instead of summing up the packet loss experienced by all routers of an end-to-end path, it sometimes makes more sense to use the maximum packet loss among these routers in order to match the rate of the application to the bandwidth of the slowest link in the path:</p><formula xml:id="formula_19">p(t) = max l∈P p l .<label>(20)</label></formula><p>Another option is to use the common end-to-end notion of packet loss where the flow measures combined loss experienced by its packet over the entire path. Since packet loss at individual routers is not additive (i.e., if loss is 70% in router A and 50% in router B, the combined loss is not 120%), the resulting end-to-end measurement is given by:</p><formula xml:id="formula_20">p(t) = 1 − l∈P (1 − p l ).<label>(21)</label></formula><p>In general, the question of whether max-min fairness at each resource offers undisputed benefits over proportional fairness <ref type="bibr" target="#b11">[12]</ref> or other types of fairness (such as minimum potential delay <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b17">[18]</ref>) is a topic of ongoing debate, which we do not address in this paper.</p><p>Expanding (19) using a single feedback p(t) of the mostcongested resource or the standard end-to-end feedback, we have a more application-friendly version of the controller:</p><formula xml:id="formula_21">dr(t) dt = α − βp(t)r(t).<label>(22)</label></formula><p>Notice that when the application decides to rely on some form of AQM (Active Queue Management) inside the routers to feed back the value of p(t), this framework aligns well with other next-generation congestion controllers such as XCP <ref type="bibr" target="#b10">[11]</ref>. To show that the overhead needed to generate the feedback is very reasonable (often even less than required by RED or ECN), consider the simplest shape of p l :</p><formula xml:id="formula_22">p l (t) = i r i (t) − C l + i ri(t) ,<label>(23)</label></formula><p>where r i is the sending rate of the i-th flow passing through resource l, C l is the speed of the resource (i.e., its outgoing bandwidth), and (·) + represents max(·, 0). Each router needs to maintain one variable with the total number of bytes placed in the outgoing buffer during the last T time units. At the end of each interval, this counter is divided by T to obtain an estimate of i r i (t), which is then used to calculate p l using (23). The new value of p l is inserted into each passing packet as long as the corresponding p l−1 contained in the packet is lower than the value computed by this router. Notice that the router does not need to count the number of flows or estimate the individual rates r i . This means that the feedback is based on the aggregate flow rate R(t) = i ri(t) rather than on individual flow rates. This in general increases the scalability of these AQM functions inside each router.</p><p>Kelly controls have been shown to be stable under arbitrary delays both in continuous and discrete cases <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b16">[17]</ref>. On the other hand, XCP and other recent methods (e.g., <ref type="bibr" target="#b24">[25]</ref>) have only been analyzed in the Laplacian domain assuming continuous derivatives (i.e., arbitrarily small steps during control actions) and zero feedback delays. Their stability in the presence of delayed feedback or discrete control equations is unknown.</p><p>The final subtle difference between other next-generation controllers and <ref type="formula" target="#formula_1">(23)</ref> is that Kelly controls do not necessarily require AQM support. Assuming that only one resource is heavily congested, feedback p(t) in <ref type="formula" target="#formula_1">(20)</ref> can be estimated using end-to-end measurements. Alternatively, the applications may decide to explicitly use (21) in their control equation. In either event, accurate end-to-end estimation of packet loss is still a difficult problem (as for example is demonstrated in <ref type="bibr" target="#b4">[5]</ref>). The difficulty appears to be surmountable since under stationary cross-traffic conditions, recursive Kalman filters typically can provide an asymptotically accurate estimate of p(t). We leave these details for future work and in the meantime, study how a network of AQMequipped resources enables video streaming applications to deliver constant-quality presentations to the end user.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Basic Properties</head><p>Given the expression of p l (t) in (23), each flow in <ref type="formula" target="#formula_1">(22)</ref> has a single stationary point given by:</p><formula xml:id="formula_23">r * = α βp * = C l n + α β ,<label>(24)</label></formula><p>where p * is the packet loss in the stationary state, C l is the speed of the most congested resource for flow r, and n is the number of flows sharing that resource. Notice that the stationary point does not depend of the RTT of the flow, which means that flows with different round-trip delays share the resource equally. Furthermore, it is easy to demonstrate that the control equation <ref type="formula" target="#formula_1">(22)</ref> converges to the stationary point and remains asymptotically stable under arbitrary feedback delays <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b16">[17]</ref>. Thus, the main controller <ref type="formula" target="#formula_1">(22)</ref> is both fair and stable under a wide range of realistic conditions. Notice several limitations of this framework. First, the stationary point has a strictly non-zero packet loss p * :</p><formula xml:id="formula_24">p * = nα C l β + nα &gt; 0. (25)</formula><p>This is not a major problem since (23) can be adapted to move the stationary point below C l (see below). However, the presence of n in the numerator of (25) prevents Kelly controls from staying below capacity C l as the number of flows grows arbitrarily large. Another way of showing this is to analyze the total load R(t) = i r i (t) on a given bottleneck resource in the stationary point. From (24), we have:</p><formula xml:id="formula_25">R * = nr * = C l + nα β ,<label>(26)</label></formula><p>where R * is the total rate at the router in the equilibrium point. Thus, the amount of overshoot nα β in the stationary state (and hence packet loss p * ) grows linearly with n (assuming α is positive). Therefore, even under AQM feedback in (23), packet loss cannot remain fixed as the number of flows n grows. Linear increase in packet loss is not as severe as in other methods (such as n 2 in AIMD or n 3 in IIAD <ref type="bibr" target="#b15">[16]</ref>), but it does represent undesirable performance when the number of flows becomes very large.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Exponential Convergence to Efficiency</head><p>The next property of AQM-based feedback is the ability of Kelly controls to converge exponentially to the equilibrium point. Since the router explicitly computes (23), there is no inherent limitation on keeping the feedback positive. Hence, relaxing this requirement, (23) becomes: as long as there are is some traffic passing through the router (i.e., i r i &gt; 0). Note that exponential convergence to the stationary point holds for the combined rate R(t) and not the individual rates r i (t). Thus, this control converges to efficiency exponentially, while convergence to fairness is (potentially) slower. Exponential convergence to efficiency can be shown as follows. Summing up <ref type="formula" target="#formula_1">(22)</ref> for all n flows and using <ref type="bibr" target="#b26">(27)</ref>:</p><formula xml:id="formula_26">p l (t) = i r i (t) − C l i ri(t) ,<label>(</label></formula><formula xml:id="formula_27">dR(t) dt = nα − βR(t)p(t) = nα − β(R(t) − C).<label>(28)</label></formula><p>Notice that (28) admits a closed-form solution:</p><formula xml:id="formula_28">R(t) = (C + nα β ) 1 − e −βt + R(0)e −βt ,<label>(29)</label></formula><p>where R(0) is the initial combined rate of all flows. Parameter β solely determines the rate of convergence (this was not the case with AIMD, where α was responsible for convergence to efficiency). Using β = 0.5 and α = 10 kb/s, it takes 8 steps for a single-flow to fill a 1.5 mb/s T1 bottleneck and it takes only 16 steps for the same flow to fill a 10 gb/s link. This is illustrated in <ref type="figure" target="#fig_0">Figure 12</ref>. Note that both flows reach within 5% of C in just 6 steps. Therefore, we can conclude that under AQM feedback, Kelly controls are highly suitable for high-speed networks of the future Internet and, along with XCP <ref type="bibr" target="#b10">[11]</ref>, may provide a new avenue of high-speed congestion control.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5">Zero Packet Loss</head><p>One obvious way to control the increase in packet loss as the number of flows becomes large is to explicitly estimate n inside the router and adapt <ref type="bibr" target="#b26">(27)</ref> to become:</p><formula xml:id="formula_29">p l (t) = i r i (t) − C l − nα β i r i (t)</formula><p>.</p><p>( <ref type="formula" target="#formula_2">30)</ref> Of course, feedback (30) no longer represents packet loss, but this should not make any difference for the end flows. Under these assumptions, re-write (26) again assuming that link l is the most congested router:</p><formula xml:id="formula_30">R * = nα β (R * −C l +nα/β) R * = nR * α βR * − βC l + nα .<label>(31)</label></formula><p>and solve for R * :</p><formula xml:id="formula_31">R * = C l . (32)</formula><p>Therefore, the knowledge of the number of flows allows distributed and asymptotically stable controls of the Kelly framework to achieve both constant and zero packet loss as shown in <ref type="bibr">(32)</ref>. Furthermore, link utilization in this case stays at 100%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.6">Discussion</head><p>There is a wide range of possible uses of Kelly controls in the context of the Internet. We examined several simple methods, which can be broadly partitioned into two categories -end-to-end and AQM. The end-to-end methods have many limitations: a) packet loss p(t) must be estimated at the receiver; b) the stationary point p * is strictly positive (i.e., bottleneck buffers are constantly full); c) packet loss grows linearly with the number of flows n; and d) the convergence to efficiency is linear.</p><p>The AQM methods can also be divided into two categories -those that estimate the number of flows n and those that do not. In both cases, we gain exponential convergence to efficiency, while in the former case, we also avoid the packetloss increase problem.</p><p>This analysis reflects the general philosophy of distributed congestion control -the more flows know about the state of the network, the better control can be accomplished. Among a wide range of methods, controllers with distributed control functions are generally more desirable. Thus, XCP and various ATM ABR (Available Bitrate) Explicit Rate <ref type="bibr" target="#b1">[2]</ref> methods that monitor queue size and implement router-based controllers cannot be fully classified as "distributed."</p><p>On the other hand, Kelly and pure end-to-end methods (such as TCP) are inherently end-flow controls. The only difference between the two is that Kelly controls gradually become smoother and nicer as additional information becomes available in router feedback, but neither of them absolutely requires such feedback to operate. It is to be seen whether ATM-like congestion control inside the routers will overpower end-flow congestion control. In the meantime, we use Kelly controls as the model of one of the many possible controllers in future high-speed networks since they possess many appealing characteristics for real-time applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">SIMULATIONS</head><p>In this section, we examine the PSNR quality curves when the target rate RT is not know a-priori, but is rather supplied by real-time congestion control. We obtained the traces of r(t) from ns2 simulations and then applied them to the video scaling algorithm offline. We should point out that one limitation of this approach is that we did not take into account the effect of lost packets during the simulation on the quality of the stream. This is reasonable in streaming scenarios where the application protects its packets by FEC or some form of retransmission. Since in Kelly controls, the amount of packet loss p * in the steady state is fixed and known to the end flow once it reaches the equilibrium, it becomes easy to send enough FEC to cover the exact amount of lost data. In general, we do not claim that this is an exhaustive congestion control simulation since much more thorough examination of these controls over real networks is required before making any far-reaching conclusions.</p><p>First examine the typical PSNR curve produced by AIMD (1,0.5) and AQM Kelly controls in <ref type="figure" target="#fig_0">Figure 13</ref> (left). The simulations are run over a single bottleneck resource of capacity C = 1 mb/s, the round-trip delay is 100 ms, and there is only one flow at the link at any given time. As the figure shows, both controls at first follow the PSNR of the base layer since there is not enough discovered bandwidth to send any FGS data. Once this stage is passed, both controls achieve high PNSR; however, the difference is that AIMD backs off by half upon every packet loss, while Kelly controls eventually stabilize at a fixed rate. Rate fluctuation in AIMD results in periodic jumps (sometimes as high as 4 dB) throughout the entire sequence. <ref type="figure" target="#fig_0">Figure 13</ref> (right) shows another scenario where two Kelly flows are sharing the same bottleneck link C under identical 100-ms round-trip delays. Flow1 in the figure is started with r1(0) = C and flow2 is started with its base-layer bandwidth. The two flows converge to a fair allocation at approximately t = 3 seconds and then follow the same flat quality curve.</p><p>The next issue to examine is whether different round-trip delays D have any effect on fairness. <ref type="figure" target="#fig_0">Figure 14 (left)</ref> shows two flows started in the same unfair states as in <ref type="figure" target="#fig_0">Figure 13</ref> (right), but this time the delay of flow 2 is four times larger than the delay of flow 1 (400 and 100 ms, respectively). Since the second flow responds to congestion feedback slower, the convergence to fairness is slower and the two flows are stabilized at point t = 7 seconds. Notice that if flow 1 had larger RTTs, the convergence would have been quicker, because flow 2 would have been able to claim its bandwidth faster due to smaller RTT.</p><p>The effect of random feedback delays on the PSNR quality is shown in <ref type="figure" target="#fig_0">Figure 14 (right)</ref>, where each flow experiences a random feedback delay uniformly distributed between 100 and 400 ms (the initial rates are the same as before). The convergence is somewhat slower than in the previous examples, but at time t = 8 seconds, both flows reach a fair allocation of bandwidth at the bottleneck link.</p><p>Finally examine the case of n = 10 flows over a faster bottleneck C = 10 mb/s. In this case, one flow initially occupies the whole bandwidth and then 9 other flows enter the path. All delays are random between 100 and 400 ms. <ref type="figure" target="#fig_0">Figure 15 (left)</ref> shows the trajectory of one (randomly selected) flow. As the figure shows, at first only the base layer is transmitted, but starting at t = 2 seconds, the FGS layer "kicks in" and the flow smoothly converges to 37 dB without any oscillations. The time to stabilize at 37 dB is approximately 9.5 seconds, which appears to be reasonable under many streaming conditions. The variation in delay D is shown on the right side of the same <ref type="figure">figure.</ref> In summary, Kelly controls converge to equilibrium without oscillation and then stay there as long as the number of flows at the bottleneck remains fixed. When new flows join or leave, the transition between fair (equilibrium) points is monotonic in most situations. This provides a nice foundation for video-on-demand and other entertainment-oriented video services where each flow is long-lived and can take full advantage of this smooth congestion control framework.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">CONCLUSION</head><p>This paper analyzed the question of representing the empirical R-D curves with the smallest number of interpolation points and found that only three points were sufficient to describe rate-quality tradeoffs of scalable FGS coders. We successfully applied this analysis to create a simple rate adjustment algorithm that can work well with a variety of feedback-based congestion controllers. We further studied one class of smooth controls based on Kelly's proportional fairness and found them to work very well in an AQM environment of the future Internet. Our future work involves analysis of end-to-end Kelly controls, reduction of the effect of packet loss on the video quality, and various decoderbased buffer-management techniques.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Frame 117 (left) and 219 (right) of Foreman CIF.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Different levels of distortion and a basic model of FGS.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: The PMF of DCT residue with Gaussian and Laplacian estimation (left). Logarithmic scale of the PMFs for the positive residue (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: The real PMF and the mixture Laplacian model (left). Tails on logarithmic scale of mixture Laplacian and the real PMF (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: The absolute error of the three DCT models in Foreman CIF (left) and Coastguard CIF (right). Both sequences coded at 10 fps and 128 kb/s in the base layer.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: The model of Chiang et al. in (7), the real R-D curve, the classical model in (6) and the UQ model for frame 0 of CIF Foreman (left). The same simulation for frame 252 of CIF Foreman (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: The average absolute error in Foreman CIF (left) and Coastguard CIF (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Quadratic model for R(z). Frame 0 (left) and frame 252 (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 9 :Figure 10 :</head><label>910</label><figDesc>Figure 9: The maximum absolute error in Foreman CIF (left) and Coastguard CIF (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 12 :</head><label>12</label><figDesc>Figure 12: Exponential convergence of rates for C = 1.5 mb/s (left) and C = 10 gb/s (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 13 :Figure 14 :</head><label>1314</label><figDesc>Figure 13: Comparison of AIMD and Kelly controls over a 1 mb/s bottleneck link (left). Kelly controls with two flows starting in unfair states (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 15 :</head><label>15</label><figDesc>Figure 15: A single-flow PSNR when n = 10 flows share a 10 mb/s bottleneck link (left). Random delay D for the flow (right).</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Binomial Congestion Control Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bansal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE INFOCOM</title>
		<imprint>
			<date type="published" when="2001-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Feedback Control of Congestion in Packet Switching Networks: The Case of a Single Congested Node</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Benmohamed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">M</forename><surname>Meerkov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Transactions on Networking</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="1993-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A new Rate Control Scheme Using Quadratic Distortion Mode</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Chiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">Q</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. CSVT</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<date type="published" when="1997-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Elements of Information Theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">M</forename><surname>Cover</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Thomas</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
			<publisher>Wiley</publisher>
			<pubPlace>New York, NY</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Equation-Based Congestion Control for Unicast Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Floyd</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Handley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Padhye</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<imprint>
			<date type="published" when="2000-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Quantization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Gray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">L</forename><surname>Neuhoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Information Theory</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<date type="published" when="1998-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Source model for transform video coder and its application. I. Fundamental theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-M</forename><surname>Hang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-J</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Circuits and Systems for Video Technology</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<date type="published" when="1997-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A Unified Rate-Distortion Analysis Framework for Transform Coding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Mitra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. CSVT</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<date type="published" when="2001-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Jayant</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Noll</surname></persName>
		</author>
		<title level="m">Digital Coding of Waveforms</title>
		<meeting><address><addrLine>Englewood Cliffs, NJ</addrLine></address></meeting>
		<imprint>
			<publisher>Prentice Hall</publisher>
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">End-to-End Congestion Control for the Internet: Delays and Stability</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Johari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Tan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Transactions on Networking</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="2001-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Congestion Control for High Bandwidth-Delay Product Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Katabi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Handley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rohrs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIG-COMM</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Rate Control in Communication Networks: Shadow Prices, Proportional Fairness and Stability</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">P</forename><surname>Kelly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Maulloo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Tan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the Operational Research Society</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">End-to-End Congestion Control Schemes: Utility Functions, Random Losses and ECN marks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kunniyur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Srikant</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE INFOCOM</title>
		<imprint>
			<date type="published" when="2000-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Overview of Fine Granularity Scalability in MPEG-4 Video Standard</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Circuits and Systems for Video Technology</title>
		<imprint>
			<date type="published" when="2001-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Bit-rate control using piecewise approximation rate-distortion characteristics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ortega</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. CSVT</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<date type="published" when="1998-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Increase-Decrease Congestion Control for Real-time Streaming: Scalability</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Loguinov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Radha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE INFO-COM</title>
		<imprint>
			<date type="published" when="2002-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Stability of Distributed Congestion Control with Heterogeneous Feedback Delays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Massoulié</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Automatic Control</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="2002-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Bandwidth Sharing: Objectives and Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Massoulié</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Roberts</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE INFOCOM</title>
		<imprint>
			<date type="published" when="1999-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">ISO/IEC 14496-5/PDAM3 (FGS Reference Software)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mpeg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MPEG 2001/N3096</title>
		<imprint>
			<date type="published" when="2001-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">The MPEG-4 finegrained scalable video coding method for multimedia streaming over IP</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Radha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">V</forename><surname>Schaar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Multimedia</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<date type="published" when="2001-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Simulation of the Rate-Distortion Behaviour of a Memoryless Laplacian Source</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">M</forename><surname>Rajpoot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Middle Eastern Symposium on Simulation and Modelling</title>
		<imprint>
			<date type="published" when="2002-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Laplacian Model for AC DCT Terms in Image and Video Coding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">R</forename><surname>Smoot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">A</forename><surname>Rowe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Ninth Image and Multidimensional Signal Processing workshop</title>
		<imprint>
			<date type="published" when="1996-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Study of DCT Coefficient Distributions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">R</forename><surname>Smoot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">A</forename><surname>Rowe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SPIE Symposium on Electr. Imaging</title>
		<imprint>
			<date type="published" when="1996-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Optimal Rate Allocation for Progressive Fine Granularity Scalable Video Coding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Xiong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Signal Processing Letters</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<date type="published" when="2002-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A Unifying Passivity Framework for Network Flow Control</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">T</forename><surname>Wen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Arcak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE INFOCOM</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Transporting Realtime Video over the Internet: Challenges and Approaches</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">T</forename><surname>Hou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y.-Q</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of the IEEE</title>
		<imprint>
			<biblScope unit="volume">88</biblScope>
			<date type="published" when="2000-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">MPEG-4 FGS Video Streaming with Constant-Quality Rate Control and Differentiated Forwarding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-C</forename><surname>Kuo</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<publisher>VCIP</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Rate Allocation of Equal Image Quality for MPEG-4 FGS Video Streaming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><forename type="middle">J</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">W</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">Q</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">Z</forename><surname>Zhong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Packet Video Workshop</title>
		<imprint>
			<date type="published" when="2002-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Constant Quality Constrained Rate Allocation for FGS Video Coded Bitstreams</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><forename type="middle">M</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Vetro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">Q</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Sun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">VCIP</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
