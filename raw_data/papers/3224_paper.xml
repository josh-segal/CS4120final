<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:44+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">The Influence of Neighbourhood and Choice on the Complexity of Finding Pure Nash Equilibria</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Felix</forename><surname>Fischer</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Institut für Informatik</orgName>
								<orgName type="institution">Universität München</orgName>
								<address>
									<addrLine>Oettingenstraße 67</addrLine>
									<postCode>80538</postCode>
									<settlement>München</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Institut für Informatik</orgName>
								<orgName type="institution">Technische Universität München</orgName>
								<address>
									<addrLine>Boltzmannstraße 3</addrLine>
									<postCode>85748</postCode>
									<settlement>Garching</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Markus</forename><surname>Holzer</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Institut für Informatik</orgName>
								<orgName type="institution">Technische Universität München</orgName>
								<address>
									<addrLine>Boltzmannstraße 3</addrLine>
									<postCode>85748</postCode>
									<settlement>Garching</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stefan</forename><surname>Katzenbeisser</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Institut für Informatik</orgName>
								<orgName type="institution">Technische Universität München</orgName>
								<address>
									<addrLine>Boltzmannstraße 3</addrLine>
									<postCode>85748</postCode>
									<settlement>Garching</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">The Influence of Neighbourhood and Choice on the Complexity of Finding Pure Nash Equilibria</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Computational complexity</term>
					<term>Game theory</term>
					<term>Pure strategy Nash equilibrium</term>
				</keywords>
			</textClass>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Game theory is a mathematical framework for representing interactions of rational players trying to achieve possibly contradictory goals. Players' strategies are said to be in Nash equilibrium if no player can do better by unilaterally changing her strategy. Nash's famous theorem <ref type="bibr" target="#b0">[1]</ref> guarantees the existence of at least one such equilibrium when players are allowed to play mixed strategies, i.e., probabilistic combinations of actions. If strategies are restricted to deterministic choice of actions, called pure strategies, the existence of an equilibrium is no longer guaranteed (see, e.g., <ref type="bibr" target="#b1">[2]</ref>). Equilibria in the latter case are referred to as pure strategy Nash equilibria, or pure Nash equilibria in short. Complexity issues related to pure Nash equilibria have recently been investigated in <ref type="bibr" target="#b2">[3]</ref>. It was shown that even for a very restricted class of games in graphical normal form, where each player is allowed to play at most 3 different actions and her payoff depends on at most 3 other players, determining whether a given game has a pure Nash equilibrium is NP-complete. Moreover, some tractable classes of strategic games have been identified.</p><p>In this paper, we strengthen the above mentioned NP-completeness result to apply to an even more restrictive setting. To be precise, we show that 2 actions per player, 2-bounded neighbourhood, and 2-valued payoff matrices suffice to prove NP-completeness. It should be noted that this is the best possible result, because</p><p>Email addresses: fischerf@tcs.ifi.lmu. <ref type="bibr">de (Felix Fischer)</ref>, holzer@in.tum.de (Markus Holzer), katzenbe@in.tum. <ref type="bibr">de (Stefan Katzenbeisser).</ref> deciding the existence of a pure Nash equilibrium becomes trivial in the case of a single action for each player and tractable for 1-bounded neighbourhood. In fact, we show the latter problem to be NL-complete in general, and thus solvable in deterministic polynomial time. Interestingly, it turns out that the number of actions in a game with 1-bounded neighbourhood is a sensitive parameter: Restricting the number of actions for each player to a constant makes the problem even easier than NL unless L = NL. In this way, we obtain a nice alternative characterisation of the deterministic-nondeterministic problem for logspace bounded Turing machines in terms of the number of actions for strategic games with 1-bounded neighbourhood.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Preliminaries</head><p>We recall some preliminaries on strategic games and refer to <ref type="bibr" target="#b1">[2]</ref> for a comprehensive introduction.</p><formula xml:id="formula_0">Definition 1 (Strategic game) A game in strategic form is a 4-tuple G = (P, (A p ) p∈P , (N p ) p∈P , (u p ) p∈P )</formula><p>, where P is a set of players and for each player p ∈ P, A p is a nonempty set of actions available to p, N p ⊆ P \ {p} is a set of neighbours of p, and u p : (× q∈N p ∪{p} A q ) → Q is a function mapping each combination of actions for p and her neighbours to a rational payoff for p.</p><p>This definition of a strategic game differs from that commonly used in game theory in that it explicitly represents the neighbourhood of a player as the set of other players that potentially have an influence on her payoff. A game is said to have k-bounded neighbourhood if there is a constant k such that |N p | ≤ k for each p ∈ P. For any k, games with k-bounded neighbourhood form a subclass of strategic games.</p><p>For a particular player p, her choice to play action a ∈ A p deterministically is also referred to as a pure strategy. For a non-empty set P ′ ⊆ P of players, an action profile for P ′ is a vector containing exactly one action for each player in P ′ . The different action profiles for P correspond to the possible outcomes of game G . Players' payoff functions u p naturally extend to × p∈P A p , and we will denote these extensions by u p as well. A pure (strategy) Nash equilibrium for G is an action profile where no player can increase her own payoff by unilaterally changing her action. If the number of players is small, deciding whether a game has a pure Nash equilibrium can simply be done by enumerating all possible action profiles and checking if one of them satisfies the equilibrium condition. The problem becomes interesting, though, for games that admit a compact representation when the number of players is growing. Clearly, games with k-bounded neighbourhood belong to this class.</p><p>We further assume the reader to be familiar with the basics of complexity theory (see, e.g., <ref type="bibr" target="#b3">[4]</ref>). In particular we consider the well known chain of complexity classes L ⊆ NL ⊆ P ⊆ NP. Here L (NL, respectively) denotes the class of all languages accepted by deterministic (nondeterministic, respectively) logarithmic space bounded Turing machines, and P (NP, respectively) refers to the class of all languages accepted by deterministic (nondeterministic, respectively) polytime bounded Turing machines. Moreover, #P is the class of functions f (x) for which there is a polytime nondeterministic Turing machine M such that f (x) equals the number of accepting computations of M on x. The class #L is defined analogously for nondeterministic logspace Turing machines.</p><p>All problems investigated in this paper take strategic games as inputs. We therefore need an appropriate coding function · mapping a strategic game G to a word G over a fixed alphabet. We will not go into the details of the definition of ·, but assume that it satisfies standard properties. In particular, the payoff functions are explicitly represented by a single table or matrix having an entry for every action profile a, displaying a list of payoffs u p (a) for each player p ∈ P. If the payoff function for each player p is represented by a separate table or matrix containing an entry u p (a) for every action profile a ∈ × q∈N p ∪{p} A p , then the game is said to be in graphical normal form <ref type="bibr" target="#b4">[5]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Hard and Easy Games</head><p>The following theorem states that deciding the existence of a pure Nash equilibrium is hard even if each player has a 2-bounded neighbourhood, 2-valued payoff matrices and only 2 different actions. We improve upon a recent result by <ref type="bibr" target="#b2">[3]</ref>.</p><p>Theorem 3 Deciding whether a strategic game G has a pure strategy Nash equilibrium is NP-complete. Hardness holds even if G is in graphical normal form, has 2-bounded neighbourhood and 2-valued payoff matrices, and where each player is allowed to play at most 2 different actions.</p><p>PROOF. Membership in NP is obvious. We can guess an action profile a, and verify in polynomial time whether a is a pure Nash equilibrium -for the latter task we have to check whether u p ((a −p , a ′ p )) ≤ u p (a) for each player p ∈ P and for each action a ′ p ∈ A p .</p><p>For hardness we argue as follows: Recall that circuit satisfiability, i.e., deciding whether for a given Boolean circuit C with n inputs and one output there exists an assignment such that C evaluates to true, is NP-complete (see, e.g., <ref type="bibr" target="#b3">[4]</ref>). W.l.o.g, assume that C contains at least one input and one (internal) gate, and that NOT gates only occur at the input layer; for an arbitrary circuit, all NOT gates can be moved to the input layer in polynomial time by successive application of de Morgan's law.</p><p>We define a game G in graphical normal form for a Boolean circuit C , providing a polynomial-time reduction of satisfiability of C to the problem of finding a pure Nash equilibrium in G . As for the players of G, there is one for each circuit input, one for each (positive or negative) literal, and one for each gate of the circuit (of types AND and OR). We write P i , P x , P ¯ x , P ∧ , and P ∨ to denote the respective sets of players. The output of the circuit corresponds to a particular player o ∈ P ∧ ∪ P ∨ . For each input player p ∈ P i , let N p be the empty set. For each gate player g ∈ P ∧ ∪ P ∨ , let N g be the set of players corresponding to the inputs of the gate -whenever a gate is connected to one of the n inputs or to a NOT-gate, N g contains the player corresponding to the appropriate positive or negative literal. Finally, for each literal player ℓ ∈ P x ∪ P ¯ x , let N ℓ contain the appropriate input player i ∈ P i and the output player o. Let the set of possible actions equal {t, f } for every player p ∈ P, in which t and f can be interpreted as truth values. For an action profile a, let the payoff functions be defined as follows:</p><p>• For each input player i ∈ P i , her payoff function u i is such that u i (a) = 1 regardless of the selected action.</p><p>• For each positive literal player ℓ ∈ P x , her payoff function u ℓ is such that · u ℓ (a) = 1, if (i) ℓ plays the same action as the input player i ∈ N ℓ and the output player o plays t, or (ii) ℓ plays t and o plays f ; · u ℓ (a) = 0 in all other cases.</p><p>• For each negative literal player ℓ ∈ P ¯ x , her payoff function u ℓ is such that · u ℓ (a) = 1, if (i) ℓ plays the opposite of the action of the input player i ∈ N ℓ and the output player o plays t, or (ii) ℓ plays t and o plays f ; · u ℓ (a) = 0 in all other cases.</p><p>• For each gate player g ∈ P ∧ , her payoff function u g is such that</p><p>· u g (a) = 1, if (i) g and both players a, b ∈ N g play t, or (ii) g plays f and at least one of a and b plays f ; · u g (a) = 0 in all other cases.</p><p>• For each gate player g ∈ P ∨ , her payoff function u g is such that</p><p>· u g (a) = 1, if (i) g plays t and at least one player a, b ∈ N g plays t, or (ii) g and both a and b play f ; · u g (a) = 0 in all other cases.</p><p>Payoffs for all types of players are summarised in <ref type="table" target="#tab_0">Tables 1 and 2</ref>. We claim that C is satisfiable if and only if G has a pure Nash equilibrium. <ref type="table">Table 1</ref> Payoffs for "input", "positive literal", and "negative literal" players, the latter two depending on the actions of the corresponding input player i and the output player o. <ref type="table" target="#tab_0">Table 2</ref> Payoffs for "gate" players, depending on the actions of players a and b corresponding to the inputs of the gate.</p><formula xml:id="formula_1">u i i ∈ P i t 1 f 1 i, o ∈ N x u x tt tf ft ff x ∈ P x t 1 1 0 1 f 0 0 1 0 i, o ∈ N x u ¯ x tt tf ft ff x ∈ P ¯ x t 0 1 1 1 f 1 0 0 0</formula><formula xml:id="formula_2">a, b ∈ N g u ∧ tt tf ft ff g ∈ P ∧ t 1 0 0 0 f 0 1 1 1 a, b ∈ N g u ∨ tt tf ft ff g ∈ P ∨ t 1 1 1 0 f 0 0 0 1</formula><p>The implication from left to right is seen as follows: Assume that C is satisfiable and consider a particular satisfying assignment φ . Consider further an action profile a for G where</p><p>• each input player plays according to φ , • each literal player correctly reproduces the action of the corresponding input player (positive literals playing the same action as their input, negative ones playing the opposite action), and • each gate player correctly implements the truth function of the respective gate depending on the inputs, i.e., actions of her neighbours.</p><p>Observe that following the definition of G , and since φ is a satisfying assignment, player o will play t. In this case each player receives a payoff of 1, and since 1 is the maximum payoff, a is a Nash equilibrium for G .</p><p>Conversely, it remains to be shown that every pure Nash equilibrium of G corresponds to a satisfying assignment of C . We exploit the following properties of action profiles for G :</p><formula xml:id="formula_3">P 1 :</formula><p>A profile where all "literal" players ℓ ∈ P x ∪ P ¯ x play t and o plays f cannot be a pure Nash equilibrium. Since no negations occur above the literal players, any gate player g ∈ P ∧ ∪ P ∨ with N g ⊆ (P x ∪ P ¯ x ) who is not playing t can improve her payoff by switching to t. By induction over the structure of the gate this holds for all gate players g ∈ P ∧ ∪ P ∨ , and for o in particular. This is a contradiction. P 2 : A profile where o plays f cannot be a pure Nash equilibrium. If o plays f , any literal player not playing t can improve her payoff by playing t. This contradicts P 1 . P 3 : A profile where o plays t and any literal player ℓ ∈ P x ∪ P ¯ x plays an action that does not correctly implement the value of the corresponding input cannot be a Nash equilibrium. In this case, ℓ could change her action to increase her payoff, which is a contradiction. P 4 : A profile in which some gate player g ∈ P ∧ ∪ P ∨ plays an action that does not correctly implement the Boolean function of the corresponding gate cannot be a Nash equilibrium. In this case, g could change her action to increase her payoff, which is a contradiction. P 5 : A profile where the input players do not play a satisfying assignment but o plays t cannot be a Nash equilibrium. Assuming such an equilibrium, and due to P 4 , all gate players would have to play according to the Boolean function they implement. Thus, because the assignment is not satisfying, player o could change her action to f to increase her payoff. This is a contradiction.</p><p>By combining properties P 1 to P 5 , we conclude that the only action profiles for G that are pure Nash equilibria are those corresponding to satisfying assignments of the Boolean circuit C . Thus, there is a one-to-one correspondence between satisfying assignments of C and pure Nash equilibria of G .</p><p>Further observe that the payoff matrices in <ref type="table" target="#tab_0">Tables 1 and 2</ref> can be constructed from a particular circuit in polynomial time, that each player in G has at most two neighbours and two different actions, and that there are only two distinct payoff values. 2</p><p>This proof also shows the following corollary.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Corollary 4 Computing the number of pure Nash equilibria of a strategic game G</head><p>is #P-complete, even if G is in graphical normal form, has 2-bounded neighbourhood and 2-valued payoff matrices, and each player is allowed to play at most 2 different actions. 2</p><p>Obviously, when reducing the number of different actions per player to a single one, or considering single-valued payoff matrices, deciding whether a game has a pure Nash equilibrium becomes trivial. Hence, the only interesting case that remains are games with 1-bounded neighbourhood. The interaction among players of a strategic game G can be represented as a directed interaction graph G(G ) = (P, E), where the vertices correspond to the players of G , and (p, q) ∈ E if and only if q is a neighbour of p, i.e., q ∈ N p . Observe that for a game G with k-bounded neighbourhood, each node of G(G ) has an outdegree of at most k. It is thus easy to see that for a strategic game G with 1-bounded neighbourhood, G(G ) is a forest of "trycles" (we use this neologism to denote trees to which at most one cycle has been attached). Formally, such a trycle is either (1) a rooted tree with edge orientation toward the root or (2) a rooted tree with edge orientation toward the root and an additional edge from the designated root to some other node in the tree. The following lemma states that the existence of a pure Nash equilibrium in a strategic game whose interaction graph is a trycle only depends on the interaction of the players in the cycle.</p><p>We omit the straightforward proof.</p><p>Lemma 5 Let G = (P, (N p ) p∈P , (A p ) p∈P , (u p ) p∈P ) be a strategic game such that G(G ) is a trycle. Then, G has a pure strategy Nash equilibrium if and only if the game G ′ obtained from G by restricting the set of players to those in the unique cycle of G(G ), i.e.,</p><formula xml:id="formula_4">G ′ = (P ′ , (N p ) p∈P ′ , (A p ) p∈P ′ , (u p ) p∈P ′ )</formula><p>with P ′ = { p ∈ P | there is a path from p to p in G(G ) }, has a pure strategy Nash equilibrium. 2</p><p>We are now ready to classify the complexity of the pure Nash equilibrium problem for strategic games with 1-bounded neighbourhood.</p><p>Theorem 6 Deciding whether a strategic game G with 1-bounded neighbourhood has a pure strategy Nash equilibrium is NL-complete. Hardness holds even if G is in graphical normal form and has 2-valued payoff matrices.</p><p>PROOF. Membership in NL is seen as follows: Let G be a strategic game with 1-bounded neighbourhood. By combining the above observation on G(G ) and Lemma 5, it is sufficient to reduce each trycle in the forest to a (possibly empty) cycle. This can be done in deterministic logspace, since each vertex of the interaction graph G(G ) has outdegree at most 1. We thus end up with a forest of cycles. We can now guess an action profile for each cycle independently in the following way. We start at an arbitrary (deterministically computed) node in the cycle and guess an action for the player corresponding to this node. We then traverse the cycle backwards, guessing an action for each player and checking whether this action is the best response w.r.t. the action of the next player. The computation ends when the initially chosen node has been reached, accepting if and only if the initially chosen action equals the action guessed in the last step of the traversal. Note that the backwards traversal can be done in deterministic logarithmic space; in addition, we only need to maintain a constant number of pointers. Thus, the whole process can be performed on a logspace bounded Turing machine. If for each cycle an individual pure Nash equilibrium exists, then the original strategic game G also has a pure Nash equilibrium.</p><p>It remains to show NL-hardness. For this, we reduce the s-t-reachability problem in directed graphs, i.e., deciding whether for a given directed graph G = (V, E), with E ⊆ V ×V , and two designated vertices s,t ∈ V there exists a path from s to t in G (see, e.g., <ref type="bibr" target="#b3">[4]</ref>), to finding a pure Nash equilibrium in a game with 1-bounded neighbourhood. W.l.o.g., assume that (1) V = {1, 2, . . ., n} with n ≥ 4, (2) s = 1 and t = n, (3) for each node i with 1 ≤ i ≤ n − 1 there exists at least one edge leaving i, and (4) the only edge leaving n is a self-loop.</p><p>We then define a game G in graphical normal form for a directed graph G. The set of players of G is given by P = {p 1 , p 2 , . . . , p n−1 }, neighbourhood is given by N p 1 = {p n−1 } and N p t = {p t−1 } for 2 ≤ t ≤ n − 1. The set of possible actions, which is the same for all players, is given by { a i j | 1 ≤ i, j ≤ n }, in which a i j can be interpreted as selection of (the possibly non-existing) edge (i, j) in graph G.</p><p>Let a denote an action profile, then the payoff functions are defined as follows:</p><p>• Player p 1 's payoff function u 1 is such that · u 1 (a) = 1 if (i) p 1 plays a 1i for some i with (1, i) ∈ E and p n−1 plays a jn for some j, or (ii) p 1 plays a nn and p n−1 plays an action a jk such that k 񮽙 = n; · u 1 (a) = 0 in all other cases.</p><p>• For each player p t ∈ P with 2 ≤ t ≤ n − 1, her payoff function u t closely resembles the transition matrix of G; more precisely, · u t (a) = 1 if p t plays a jk for some j with ( j, k) ∈ E and p t−1 plays a i j for some i; · u t (a) = 0 in all other cases.</p><p>We claim that there is a path from node 1 to node n in graph G if and only if game G has a pure Nash equilibrium.</p><p>The implication from left to right is seen as follows: Assume that in G there exists a path 1 = i 1 , i 2 , . . . , i n = n of length n (a shorter path can be extended by virtue of the self-loop at node n). Consider further an action profile a for G where each player p t , with 1 ≤ t ≤ n − 1, plays action a i t i t+1 . In this case, each player receives a payoff of 1, and since 1 is the maximum payoff, a is a Nash equilibrium of G .</p><p>Conversely, it remains to be shown that every Nash equilibrium for G corresponds to a path linking nodes 1 and n in G. We exploit the following properties of action profiles for G :</p><formula xml:id="formula_5">P 1 :</formula><p>A profile where player p t with 2 ≤ t ≤ n − 1 plays a kℓ and p t−1 plays a i j for some j 񮽙 = k cannot be a Nash equilibrium. In this case, p t would get a payoff of 0, and by construction there exists an alternative action a kℓ with (k, ℓ) ∈ E with payoff 1 (because every node has outdegree at least 1). Hence, p t could change her action to increase her payoff, which is a contradiction. P 2 : A profile where p t with 1 ≤ t ≤ n − 2 plays a in for some 1 ≤ i ≤ n and some p j with t + 1 ≤ j ≤ n − 1 does not play a nn cannot be a Nash equilibrium. W.l.o.g., assume that j is the smallest such number. In this case, p j could improve her payoff by playing a nn , which is a contradiction. P 3 : A profile where p n−1 plays a kℓ with ℓ 񮽙 = n cannot be a pure Nash equilibrium.</p><p>In this case, p 1 could improve her payoff by playing a nn . This contradicts P 2 . P 4 : A profile where p 1 plays a i j with i 񮽙 = 1 cannot be a pure Nash equilibrium.</p><p>We distinguish two different cases. In case p n−1 plays a kn for some k, p 1 could improve her payoff by playing a 1 j , which is a contradiction. If instead p n−1 plays a kℓ for some ℓ 񮽙 = n, p 1 could improve her payoff by playing a nn . This contradicts P 2 .</p><p>By combining properties P 1 to P 4 , we conclude that the only action profiles that are pure Nash equilibria for G are those where</p><p>• p 1 plays an action a 1i with (1, i) ∈ E,</p><p>• each pair p t−1 and p t of players with 2 ≤ t ≤ n − 2 play actions a i j and a jk , respectively, for some 1 ≤ i, j, k ≤ n, with ( j, k) ∈ E, and • player p n−1 plays an action a kn with (k, n) ∈ E.</p><p>Thus, there is a one-to-one correspondence of paths from node 1 to n in G and pure Nash equilibria of G .</p><p>Further observe that the payoff matrices can be constructed from a particular graph G in logarithmic space, that each player has at most one neighbour, and that there are only two distinct payoff values. 2</p><p>An immediate consequence of the above proof is given next.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Corollary 7 Computing the number of pure Nash equilibria of a strategic game with 1-bounded neighbourhood is #L-complete, even if the game is in graphical normal form. 2</head><p>Observe that in the hardness part of the proof of Theorem 6, the number of actions of game G is polynomially bounded in the number of nodes of graph G. If the number of actions is bounded by a constant, the complexity of deciding whether G has a pure Nash equilibrium can be improved to L-completeness.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 8 Deciding whether a strategic game G with 1-bounded neighbourhood and a constant number of actions has a pure strategy Nash equilibrium is Lcomplete under NC 1 reductions. Hardness holds even if G is in graphical normal form and has 2-valued payoff matrices.</head><p>PROOF. The proof for membership in L follows similar lines as the membership proof for Theorem 6, with the following difference: Because the number of actions is a constant, deterministic logspace is enough to determine whether a strategic game whose interaction graph is a (forest of) cycle(s) has a pure Nash equilibrium; a Turing machine can write down all best response actions for a particular player by running backwards through the cycle and updating this information step by step.</p><p>Hardness can be shown by means of a straightforward reduction from the s-treachability problem for directed graphs of outdegree one to the problem under consideration. We define a game G for a graph G of this kind, where now each player in G corresponds to a node in G (for simplicity, we use names for players and nodes interchangeably), neighbourhood in G is given by neighbourhood in G, and the actions are from {t, f }. Additionally, player t has player s as a neighbour. Let a be an action profile for G , then the payoff functions are defined as follows:</p><p>• Player t's payoff function is such that · u t (a) = 1 if t plays the opposite action of s; · u t (a) = 0 in all other cases.</p><p>• The payoff function of any player p 񮽙 = t who has a neighbour q 񮽙 = t is such that · u p (a) = 1 if p plays the same as q; · u p (a) = 0 in all other cases.</p><p>• For any other player, the payoff function is such that u p (a) = 1 regardless of the action.</p><p>It is easily verified that this reduction can be computed in NC <ref type="bibr" target="#b0">1</ref> . Further, G does not have a pure Nash equilibrium if and only if t is reachable from s in G (since both nodes are in the same tree and, by construction, on a cycle). Since deterministic logspace is closed under complement, this completes the proof. 2</p><p>The proof even shows that the problem remains L-complete if the number of actions per player is a slowly growing function.</p><p>Corollary 9 Deciding whether a strategic game G with 1-bounded neighbourhood and log log n + O(1) actions has a pure strategy Nash equilibrium is L-complete under NC 1 reductions. Hardness holds even if G is in graphical normal form and has 2-valued payoff matrices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>PROOF.</head><p>To see this, observe that in the logspace algorithm described in the proof of Theorem 8, we can still write down all possible best responses within the space bound. 2</p><p>By combining Theorems 6 and 8, we obtain an alternative characterisation of the deterministic-nondeterministic problem for logspace bounded Turing machines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Corollary 10</head><p>The following statements are equivalent:</p><p>(1) L = NL. (2) Deciding whether a strategic game G with 1-bounded neighbourhood has a pure strategy Nash equilibrium can be done in deterministic logarithmic space. (3) For each strategic game G with 1-bounded neighbourhood, we can construct in deterministic logarithmic space a strategic game G ′ with 1-bounded neighbourhood and a constant number of actions such that G has a pure strategy Nash equilibrium if and only if G ′ has a pure strategy Nash equilibrium. 2</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Definition 2 (Pure strategy Nash equilibrium) An action profile a ∈ × p∈P A p is called a pure strategy Nash equilibrium if and only if for each player p ∈ P and each action a ′ p ∈ A p , u p (a) ≥ u p ((a −p , a ′ p )), where (a −p , a ′ p ) denotes the action profile where player p plays a ′</head><label>2</label><figDesc></figDesc><table>p and all other 
players play the same action as in a. </table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>We would like to thank Hermann Gruber for taking part in some fruitful discussions on the subject and the anonymous reviewers for their helpful comments.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Nash</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Non-cooperative games</title>
		<imprint>
			<date type="published" when="1951" />
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="page" from="286" to="295" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Myerson</surname></persName>
		</author>
		<title level="m">Game Theory: Analysis of Conflict</title>
		<imprint>
			<publisher>Harvard University Press</publisher>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Pure Nash equilibria: Hard and easy games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Gottlob</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Greco</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Scarcello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Artificial Intelligence Research</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="357" to="406" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Papadimitriou</surname></persName>
		</author>
		<title level="m">Computational Complexity</title>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Graphical models for game theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kearns</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">L</forename><surname>Littman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Singh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th International Conference on Uncertainty in Artificial Intelligence (UAI)</title>
		<meeting>the 17th International Conference on Uncertainty in Artificial Intelligence (UAI)</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="253" to="260" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
