<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:34+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Approximate Initialization of Camera Sensor Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Purushottam</forename><surname>Kulkarni</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Massachusetts</orgName>
								<address>
									<postCode>01003</postCode>
									<settlement>Amherst</settlement>
									<region>MA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Prashant</forename><surname>Shenoy</surname></persName>
							<email>shenoy@cs.umass.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Massachusetts</orgName>
								<address>
									<postCode>01003</postCode>
									<settlement>Amherst</settlement>
									<region>MA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Deepak</forename><surname>Ganesan</surname></persName>
							<email>dganesan@cs.umass.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Massachusetts</orgName>
								<address>
									<postCode>01003</postCode>
									<settlement>Amherst</settlement>
									<region>MA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Approximate Initialization of Camera Sensor Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Camera sensor networks-wireless networks of low-power imaging sensors-have become popular recently for monitoring applications. In this paper , we argue that traditional vision-based techniques for calibrating cameras are not directly suitable for low-power sensors deployed in remote locations. We propose approximate techniques to determine the relative locations and orientations of camera sensors without any use of landmarks or positioning technologies. Our techniques determine the degree and range of overlap for each camera and show this information can be exploited for duty cycling and triggered wakeups. We implement our techniques on a Mote testbed and conduct a detailed experimental evaluation. Our results show that our approximate techniques can estimate the degree and region of overlaps to within 10% of their actual values and this error is tolerable at the application-level for effective duty-cycling and wakeups.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Motivation</head><p>Wireless sensor networks have received considerable research attention over the past decade, and rapid advances in technology have led to a spectrum of choices of image sensors, embedded platforms, and communication capabilities. Consequently, camera sensor networks-networks consisting of low-power imaging sensors <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b18">19]</ref>-have become popular for applications such as environmental monitoring and surveillance. Regardless of the end-application, camera sensor networks perform several common tasks such as object detection, recognition, and tracking. While object detection involves determining when a new object appears in range of the camera sensors, recognition involves determining the type of the object, and tracking involves using multiple camera sensors to continuously monitor the object as it moves through the environment. To effectively perform these tasks, the camera sensor network needs to be calibrated at setup time. Calibration involves determining the location and orientation of each camera sensor. The location of a camera is its position (3D coordinates) in a reference coordinate system, while orientation is the direction in which the camera points. By determining these parameters for all sensors, it is possible to determine the viewable range of each camera and what portion of the environment is covered by one or more cameras. The relationship with other nearby cameras, in particular, the overlap in the viewable ranges of neighboring cameras can be determined. This information can be used by applications to determine which camera should be used to sense an object at a certain location, to triangulate the position of an object using overlapping cameras, and to handoff tracking responsibilities from one camera to another as the object moves. Calibration of camera sensors is well-studied in the computer vision community and a number of techniques to accurately estimate the location and orientation of cameras have been proposed <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b23">24]</ref>. These techniques assume coordinates of few landmarks are known a priori and use the projection of these landmarks on the camera's image plane, in conjunction with principles of optics, to determine a camera's coordinates and orientation. <ref type="bibr" target="#b0">1</ref> In certain cases locations of landmarks are themselves determined using range estimates from known locations; for instance, a positioning technology such as Cricket can be used to determine the coordinates of landmarks from known beacon locations. However, these techniques are not feasible for deployments of ad-hoc low power camera sensors for the following reasons: (i) Resource constraints: Vision-based techniques for accurate calibration of cameras are compute intensive. Low-power cameras do not have the computation capabilities to execute these complex mathematical tasks. Further, images of low-power cameras are often of low fidelity and not well suited for high precision calibration, (ii) Availability of landmarks: In many scenarios, ad-hoc camera sensor networks are deployed in remote locations for monitoring mountainous and forest habitats or for monitoring natural disasters such as floods or forest fires. No landmarks may be available in remote inhabited locations, and infrastructure support such as positioning technologies may be unavailable or destroyed, making it difficult to define new landmarks. One solution that eliminates the need to use landmarks is it to equip each camera sensor with a positioning device such as GPS <ref type="bibr" target="#b3">[4]</ref> and a directional digital compass <ref type="bibr" target="#b5">[6]</ref>, which enable direct determination of the node location and orientation. However, today's GPS technology has far too much error to be practical for calibration purposes (GPS can localize an object to within 5-15m of its actual position). Ultrasound-based positioning and ranging technology <ref type="bibr" target="#b15">[16]</ref> is an alternative which provides greater accuracy. But use of additional hardware with low-power cameras both consumes more energy and in some cases, can be prohibitive due to its cost. As a result, accurate calibration is not always feasible for initialization of resource-constrained camera sensor networks with limited or no infrastructure support. Due to these constraints, in this paper we ask a fundamental question: is it possible to initialize camera sensors without the use of known landmarks or without using any positioning technology? In scenarios where accurate camera calibration may not always be feasible, determining relative relationships between nearby sensor nodes may be the only available option. This raises the following questions: -How can we determine relative locations and orientations of camera sensors without use of known landmarks or positioning infrastructure? -What kind of accuracy can these approximate initialization techniques provide? -What is the performance of applications based on approximate initialization?</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Research Contributions</head><p>To address the above challenges, in this paper, we propose novel approximate initialization techniques for camera sensors. Our techniques rely only on the inherent picturetaking ability of cameras and judicious use of on-board computational resources to initialize each camera relative to other cameras in the system. No infrastructure support for beaconing, range estimation or triangulation is assumed. Our initialization techniques are computationally lightweight and easily instantiable in environments with little or no infrastructure support and are well suited for resource-constrained camera sensors. Our techniques rely on two key parameters-the degree of overlap of a camera with other cameras, and the region of overlap for each camera. We present approximate techniques to estimate these parameters by taking pictures of a randomly placed reference object. To quantify the accuracy of our methods, we implement two techniques-dutycycling and triggered wakeup-that exploit this initialization information. We have implemented our initialization techniques on a testbed of Cyclops <ref type="bibr" target="#b17">[18]</ref> cameras and Intel Crossbow Motes <ref type="bibr" target="#b13">[14]</ref> and have conducted a detailed evaluation using the testbed and simulations. Our experiments yield the following results:</p><p>-Our approximate initialization techniques can estimate both k-overlap and region of overlap to within 10% of the actual values. -The approximation techniques can handle and correct for skews in the distribution of reference point locations. -The application-level accuracy using our techniques is 95-100% for determining the duty-cycle parameter and 80% for a triggered wakeup application.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Problem Formulation</head><p>We consider a wireless network of camera sensors deployed in an ad-hoc fashion with no a priori planning. Each sensor node is assumed to consist of a low-power imaging sensor such as the Cyclops <ref type="bibr" target="#b17">[18]</ref> or the CMUCam <ref type="bibr" target="#b18">[19]</ref> connected to an embedded sensor platform such as the Crossbow Mote <ref type="bibr" target="#b13">[14]</ref> or the Telos <ref type="bibr" target="#b14">[15]</ref>. No positioning hardware is assumed to be present on the nodes or in the environment. Given such an ad-hoc camera sensor network, our goal is to determine the following parameters for each sensor node:</p><p>-Degree of overlap, which is the fraction of the viewable range that overlaps with other nearby cameras; specifically we are interested in the k-overlap, which is the fraction of the viewable region that overlaps with exactly k other cameras. -Region of overlap, which is the spatial volume within the viewable region that overlaps with another camera. While the degree of overlap indicates the extent of the viewable region that overlaps with another camera, it does not indicate which portion of the viewable range is covered by another camera. The region of overlap captures this spatial overlap and is defined as the 3D intersection of the viewable regions of any pair of cameras.</p><p>Our goal is to estimate these parameters using the inherent picture-taking capability of cameras. We assume the presence of a reference object that can be manually placed at different locations in the environment; while the coordinates of the reference object are unknown, the sensors can take pictures to determine if the object can be viewed simultaneously by two or more cameras from a particular location. Our goal is to design techniques that use this information to determine the degree and region of overlap for the various nodes. The physical dimensions of the reference object as well as the focal length f of each camera is assumed to be known a priori.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Approximate Initialization</head><p>In this section, we describe approximate techniques to determine the degree of overlap and region of overlap for camera sensors. As indicated earlier, degree of overlap is defined by the koverlap, which is the fraction of the viewing area simultaneously covered by exactly k cameras. Thus, 1-overlap is the fraction of a camera's viewable region that does not overlap with any other sensor; 2-overlap is the fraction of region viewable to itself and one other camera, and so on. This is illustrated in <ref type="figure" target="#fig_1">Figure 1</ref> where k 1 denotes the region covered by a single camera, k 2 and k 3 denote the regions covered by two and three cameras, respectively. It follows that the union of the k-overlap regions of a camera is exactly the total viewable range of that camera (i.e., the sum of the k-overlap fractions is 1). Our goal is to determine the k-overlap for each camera, k = 1 . . . n, where n is the total number of sensors in the system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Determining the Degree of Overlap</head><p>Estimating k-overlap Our approximate technique employs random sampling of the three-dimensional space to determine the k-overlap for each camera sensor. This is done by placing an easily identifiable reference object at randomly chosen locations and by having the camera sensors take pictures of the object. Let each object location be denoted as a reference point (with unknown coordinates). Each camera then processes its pictures to determine which reference points are visible to it. By determining the subset of the reference points that are visible to multiple cameras, we can estimate the koverlap fractions for various sensors. Suppose that r i reference points from the total set are visible to camera i. From these r i reference points, let r k i denote the reference points that are simultaneously visible to exactly k cameras. Assuming an uniform distribution of reference points in the environments, the k-overlap for camera i is given by</p><formula xml:id="formula_0">O k i = r k i r i (1)</formula><p>Depending on the density of reference points, error in the estimate of O K i can be controlled. The procedure is illustrated in <ref type="figure" target="#fig_0">Figure 2</ref>(a), where there are 16 reference points visible to camera 1, of which 8 are visible only to itself, 4 are visible to cameras 1 and 3 and another 4 to cameras 1, 2, and 3. This yields a 1-overlap of 0.5, 2-overlap and 3-overlap of 0.25 for camera 1. k-overlaps for other cameras can be similarly determined.</p><p>Handling skewed reference point distributions The k-overlap estimation technique presented above assumes uniform distribution of reference points in the environment. In reality, due to the ad-hoc nature of the deployment and the need to calibrate the system online in the field, the placement of reference objects at randomly chosen locations will not be uniform. The resulting error due to a non-uniform distribution is illustrated in <ref type="figure" target="#fig_0">Figure 2</ref>(b), where our technique estimates the 1-, 2-and 3-overlap for camera 1 as 2 3 , 2 9 , 1 9 as opposed to the true values of 1 2 , 1 4 and 1 4 respectively. Thus, we need to enhance our technique to correct for skews in the reference point distribution. The basic idea behind our enhancement is to assign a weight to each reference point, where the weight denotes the volume that it represents. Specifically, points in dense populated region are given smaller weights and those in sparely populated regions are given higher weights. Since a higher weight can compensate for the scarcity of reference points in sparely populated region, we can correct for skewed distributions of reference points. Our enhancement is based on the computational geometry technique called Voronoi tessellation <ref type="bibr" target="#b4">[5]</ref>. In two dimensions, a Voronoi tessellation of a set of points is the partitioning of the plane into convex polygons such that all polygons contain a single generating point and all points within a polygon are closest to the corresponding generating point. <ref type="figure" target="#fig_0">Figure 2</ref>(c) shows a skewed distribution of reference points in the 2D viewing area of a camera and the corresponding Voronoi tessellation. Each reference point in the camera is contained within a cell, with all points in a cell closest to the corresponding reference point. Given a skewed distribution of reference points, it follows that densely situated points will be contained within smaller polygons, and sparsely situated points in larger polygons. Since the size of each polygon is related to the density of the points in the neighborhood, it can be used as an approximation of the area represented by each point. Voronoi tessellations can be extended to points in three dimensions, with each point contained with a 3D cell instead of a polygon. Using Voronoi tessellation, each reference point is assigned a weight that is approximately equal to volume of the cell that it lies in. The k-overlap is then computed as</p><formula xml:id="formula_1">O k i = w k i w i (2)</formula><p>where w k i is the cumulative weight of all reference points that are simultaneously visible to exactly k cameras and w i is the total weight of all the cells in the viewable region of camera i. Observe that when the reference points are uniformly distributed, each point gets an equal weight, and the above equation reduces to Equation 1. Note that Voronoi tessellation requires the coordinates of reference points in order to partition the viewable region into cells or polygons. Section 3.2 describes how to approximately estimate this in .</p><p>Approximate Tessellation Since tessellation is a compute-intensive procedure that might overwhelm the limited computational resources on a sensor node, we have developed an approximation. Instead of tessellating the 3D viewing region of a camera into polyhedrons, a computationally expensive task, the viewing region is discretized into smaller cubes. For each cube, the closest viewable reference point from the center of the cube is calculated. The volume of the cube is added to the weight of that reference point. When all cubes are associated and their volumes added to the respective reference points, the weight of each reference points is in proportion to the density of points in the vicinity-points in less dense regions will have higher weights than points in less dense regions, thereby yielding an approximation of the tessellation process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Determining the Region of Overlap</head><p>Since k-overlap only indicates the extent of overlap but does not specify where the overlap exists, our techniques also determine region of overlap for each camera. Like before, we assume a reference object placed at randomly chosen locations. Using these points, first a Voronoi tessellation of the viewing area is obtained for each camera. The region of overlap for any two cameras C i and C j is simply the the union of cells containing all reference points simultaneously visible to the two cameras. <ref type="figure" target="#fig_3">Figure 3(c)</ref> shows the Voronoi tessellation of the 2D viewing region of camera 1, the reference points viewable by cameras 1 and 2, and the approximate region of overlap (shaded region) for (C 1 , C 2 ). Thus, our approximate tessellation (described in Section 3.1) can be used to determine the region of overlap for all pairs of cameras in the system.</p><p>Estimating reference point locations As indicated before, the tessellation process requires the locations of reference points. Since no infrastructure is available, we present a technique to estimate these locations using principles of optics. A key insight is that if each camera can determine the coordinates of visible reference points relative to itself, then tessellation is feasible-absolute coordinates are not required. Assuming the origin lies at the center of the lens, the relative coordinates of a point are defined as (d r , v r ), where d r is its distance from the origin, and v r is a vector from the origin in the direction of the reference point that defines its orientation in 3D space. We illustrate how to determine the distance d r from the camera in 2-dimensions. We have assumed that the size of the reference object is known a prior, say s. The focal length f is also known. Then the camera first estimates the size of the image projected by the object-this is done by computing the bounding box around the image, determining the size in pixels and using the size of the CMOS sensor to determine the size of those many pixels. If s denotes the size of the image projected by the reference object  Since (x, y) can be determined by processing the image and f is known, the relative orientation of the reference point can be determined.</p><formula xml:id="formula_2">P (−x,−y,−f) f ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ Camera</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Applications</head><p>In this section, we describe how camera that are initialized approximately can satisfy application requirements.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Duty-Cycling</head><p>Duty-cycling is a technique to operate sensors in cycles of ON and OFF durations to increase lifetime while providing the desired event-detection reliability and also to bound the maximum time to detect an event. The duty-cycling parameter d is commonly defined as the fraction of time a sensor is ON. An important criteria in deciding the dutycycle parameter is the degree of overlap. Sensors with high coverage redundancy can be operated at low duty cycles to provide desired event detection probability, whereas those with lower redundancy will require higher duty cycles. One of the several techniques to estimate the duty-cycle parameter based on degree of overlap is as follows,</p><formula xml:id="formula_3">d i = n k=1 O k i × 1 k (4)</formula><p>where, d i is the duty-cycle parameter of camera i, O k i the fraction of k-overlap with the neighboring cameras and n the total number of cameras. The intuition is to duty-cycle each camera in proportion to its degree of overlap with neighboring cameras. Object tracking involves continuous monitoring of an object-as the object moves from the range of one camera to another, tracking responsibilities are transferred via a handoff. Since cameras may be duty-cycled, such a handoff involves a triggered wakeup to ensure that the destination camera is awake. A naive solution is to send triggered wakeups to all overlapping cameras and have one of them take over the tracking. While doing so ensures seamless handoffs, it is extremely wasteful in terms of energy by triggering unnecessary wakeups. A more intelligent technique is to determine the trajectory of the object and using the region of overlap determine which camera is best positioned to take over tracking duties and only wake it up. However, since the object's location cannot be calculated without knowledge of accurate camera parameters, its trajectory can not be accurately determined. The only known information about the object is its image on the camera's image plane-the object is known to lie along a line that connects the image to the center of the lens. As shown in <ref type="figure" target="#fig_4">Figure 4</ref>, we refer to this line as the projection line, the line on which the object must lie. We can exploit this information to design an intelligent triggered wakeup technique. Any camera whose region of overlap intersects with the projection line can potentially view the object and is a candidate for a handoff. To determine all such cameras, we first determine the set of reference points within a specific distance threshold of the line (see <ref type="figure" target="#fig_4">Figure 4)</ref>. To determine these reference points, equidistant points along the length of the projection line are chosen and reference points within the distance threshold are identified. Next, the set of neighboring cameras that can view these reference points is determined (using information gathered during our initialization process). One or more of these camera can then be woken up. Depending on the extent of overlap with the projection line, candidate cameras are prioritized and woken up in priority order-the camera with highest overlap has the highest probability of detecting the object on wakeup and is woken up first. Two important parameters of the scheme are the distance threshold and the maximum number of cameras to be woken up. A large distance threshold will capture many reference points and yield many candidates for wakeup, while a small threshold will ignore overlapping cameras. The maximum number of cameras to be woken up bounds the redundancy in viewing the same object by multiple cameras-a small limit may miss the object whereas a large limit may result in wasteful wakeups. We discuss the effect of these parameters as part of the experimental evaluation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Triggered Wakeup</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Prototype Implementation</head><p>System Design The approximate initialization procedure involves taking pictures of reference points (or objects). Reference points are objects like a ball with a unique color or a light source, that can be easily identified by processing images at each camera. Each camera after taking a picture, processes the image to determine if it can view a reference point. If a reference point is visible, it calculates the location of the reference point on its image plane and if possible estimates the location of the reference point. The location can be estimated using an approximation of the distance of the reference point from the camera. The distance can be determined if dimensions of the reference object are known a priori along with the size of it's image on the camera's image plane. The image location and distance of object information is exchanged with all other cameras in the network. The data recorded at each camera can be stored as table of tuples,</p><formula xml:id="formula_4">&lt; R k : C i , u i , v i , d i , C j , u j , v j , d j ... &gt;</formula><p>where, R k is the k th reference point visible to camera i, (u i , v i ) is the projection location of the reference point in the image plane and d i is the distance of the reference point from the camera. The tuple also stores information from each camera that can view the reference point simultaneously. Multiple reference points are generated by placing the reference object at several locations. The network setup for our prototype implementation is shown in <ref type="figure" target="#fig_5">Figure 5</ref>(a). The network consists of 8 cameras covering a region of 8f t × 6f t × 17f t. The camera are equidistantly placed on the longest side, each at a height of 3f t facing each other and viewing inside the cubical volume. The depth-of-view for each camera is 8f t and the horizontal and vertical viewing regions are 7f t and 6f t respectively. The setup is used to estimate and compare k-overlap and region of overlap for each camera.</p><p>Hardware Components We used the Cyclops <ref type="bibr" target="#b17">[18]</ref> camera sensor in our prototype implementation to evaluate the approximate initialization techniques. The Cyclops camera sensor consists of a ADCM 1700 CMOS camera module, and supports image resolutions of 32x32, 64x64 and 128x128. Image resolution of 128x128 is used in the experimental evaluation. The Cyclops node also has an on-board ATMEL ATmega128L micro-controller, 512 KB external SRAM and 512 KB Flash memory. The on-board processing capabilities of the Cyclops are used for object detection and to detect the size of object's image. Each Cyclops sensor is connected to a Crossbow Mote (referred to as the HostMote) and they communicate via the I2C interface. The HostMote is also used to receive and send wireless messages and store initialization information on behalf of the Cyclops. A mote is also used as a remote control to send synchronized sampling triggers to detect reference points during the initialization process. A glowing ball (a translucent ball fitted on a light bulb) is used as a reference object and is manually placed at several locations to generate reference points for initialization.</p><p>Software Components: Both the Cyclops sensors and the Motes run TinyOS <ref type="bibr" target="#b20">[21]</ref>. Each Cyclops communicates with it's attached mote using the I2C interface and the motes communicate with each other via their wireless interface (see <ref type="figure" target="#fig_5">Figure 5</ref>(b)). Cyclops Onboard Tasks: Each Cyclops is responsible for taking images and processing them locally to detect the reference objects. On receiving a trigger from the HostMote each Cyclops takes a picture and processes it to detect and recognize reference objects.</p><p>The results are communicated back to the HostMote.</p><p>HostMote Tasks: The HostMote drives each Cyclops to detect reference objects and stores all the initialization information for each camera. Once an reference object is detected, the HostMote estimates the distance of the object from the camera and transmits a broadcast message indicating visibility of the reference object, coordinates of the object on it's image plane and distance of object from the camera. Further, the HostMote receives similar broadcasts from other nodes and maintains the ViewTable, a table of tuples representing viewability information of each reference point.</p><p>Trigger Mote Tasks: The trigger mote is used as a remote control for synchronized detection of the reference object. Once a reference object is placed in a location, the trigger mote sends a wireless broadcast trigger to all HostMotes, which in turn trigger the attached Cyclops sensors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Experimental Evaluation</head><p>In this section we present a detailed experimental evaluation of the approximate initialization techniques using both simulation and implementation based experiments. Specifically, we evaluate the accuracy of the approximate initialization procedure in estimating the degree of overlap and region of overlap of camera sensors. In addition, we evaluate the effect of skew in location of reference points on the accuracy of estimation. Further, we also evaluate the performance of an triggered wakeup application which demonstrates effective use of the region of overlap information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Simulation Setup</head><p>The simulation setup used for evaluation consisted of a cubical region with dimensions 150x150x150. Two cases, one with 4 cameras and the other with 12 cameras are used.</p><p>In the first case, 4 cameras are placed at locations (75,0,75), (75,150,75), (0,75,75), <ref type="bibr">(150,</ref><ref type="bibr">75,</ref><ref type="bibr">75)</ref>, oriented perpendicular to the side plane looking inwards. The k-overlap at each camera is as follows: 1-overlap: 0.54, 2-overlap: 0.23, 3-overlap: 0.07 and 4-overlap: 0.16. In the second case, additional 8 cameras are placed at the 8 corners of the cube and each of them is oriented inwards with the central axis pointing towards the center of the cube. An uniform distribution of reference points was simulated by uniformly distributing points in the cubical viewing region. To simulate a skewed distribution, a fraction of reference points were distributed in a smaller region at the center of the viewing region and the rest were distributed in the entire viewing area. For example, a region of size 25x25x25 at the center of the viewing region, in different cases, had atleast 25%, 33%, 50%, 66% and 75% of total points within its boundary. We also used restricted regions of sizes 50x50x50 and 75x75x75 with varying fractions of skew in our evaluation.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Degree of overlap estimation</head><p>In this section we present evaluation of the techniques used to estimate k-overlap, the degree of overlap metric, and its use to estimate the duty-cycling parameter.</p><p>Initialization with uniform distribution of reference points <ref type="figure" target="#fig_7">Figure 6</ref> plots the error in k-overlap estimation using the four camera setup with uniform distribution of reference points. The absolute difference in the approximate estimation and the exact k-overlap fraction averaged over the 4 cameras is reported as error. The error in koverlap estimation using both the non-weighted and weighted techniques is similar. <ref type="figure" target="#fig_7">Figure 6</ref> also plots the effect of number of viewable reference points-reference points viewable by atleast a single camera-on k-overlap estimation. The error in k-overlap estimation decreases with increase in number of reference points for both the nonweighted and weighted schemes. Error in 1-overlap estimation with the weighted scheme decreases from 0.075 to 0.04 with 50 and 150 reference points respectively.</p><p>Initialization with skewed distribution of reference points <ref type="figure" target="#fig_9">Figure 7</ref> plots the koverlap estimates with non-uniform distribution of reference points. The results are averaged for the different fractions of skew within a restricted region of 25x25x25. As seen from the figure, the weighted scheme accounts for skew better than the nonweighted scheme-with most benefits for 1-overlap and 4-overlap estimation. The nonweighted scheme performs poorly as it only counts the number of simultaneously viewable points, while the weighted scheme accounts for the spatial distribution of the points. Further, with increase in number of reference points, the error with the weighted scheme decrease, whereas that with the non-weighted scheme remains the same.   scheme performs better than the non-weighted scheme. The error with the non-weighted scheme for 1 and 4 overlap is worse by a factor of 4 and 6 respectively. reference points. Whereas, error with the weighted scheme is 5% even with only 50 points and decreases very close to zero with more than 150 points.</p><p>From the results presented above, we conclude that the weighted k-overlap estimation scheme is well suited to estimate degree of overlap of cameras. The scheme performs identical to the non-weighted scheme with uniform distribution of reference points and significantly better with non-uniform distributions. The application-level error in determining the duty-cycle parameter using the weighted scheme is close to zero.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Region of overlap estimation</head><p>In this section we present evaluation of region of overlap estimation and the triggered wakeup heuristic that uses this estimate. <ref type="figure">Figure 9</ref>(a) plots results evaluating the effect of number of reference points on region of overlap estimation. The percentage error reported is the absolute error in estimated volume corresponding to a region of overlap and the exact volume. As seen in <ref type="figure">Figure 9</ref>(a), with uniform distribution of reference points, the percentage error of all four cameras follows a similar trend. With 50 reference points the percentage error for the four cameras is between 21-23% and with 100 reference points is 12-14%. With higher number of reference points the error decreases and so does the standard deviation. With 200 reference points the error is 7-8% and with 250 points is 6-7%. The above results show that region of overlap between pair of cameras can be estimated with low error-6-7% with uniform distribution in our setup.</p><p>Wakeup Heuristic Next, we evaluate effectiveness of the wakeup heuristic based on the region of overlap estimates with the 12-camera setup. <ref type="figure">Figure 9</ref>(b) plots the effect of maximum number of cameras triggered on the fraction of positive wakeups, i.e., fraction of cases when atleast one of the triggered cameras could view the object. As seen from the figure, with increase in maximum number of cameras triggered per wakeup, the fraction of positive wakeups increases. Further, the fraction also increases with increase in total reference points in the environment. The fraction of positive wakeups with a maximum of 2 cameras to be triggered is 0.7 and 0.88 for 100 and 300 reference points respectively with a distance threshold (see Section 4.2) of 20 inches. With a maximum of 5 cameras to be triggered the corresponding fractions are 0.77 and 0.93  respectively. The fraction of positive wakeups is over 0.8 with a maximum of 2 wakeups per trigger. The result shows that the wakeup heuristic based on region of overlap estimate can achieve high fraction of positive wakeups-close to 80% accuracy with 2 cameras woken up per trigger. Another parameter that influences the performance of the heuristic is the distance threshold-the distance along the projection of the object's image used to approximate overlapping cameras. As shown in <ref type="figure">Figure 9</ref>(c), with increase in distance threshold from 10 to 20 with 200 reference points, the fraction of positive wakeups increases and remains relatively constant for a maximum 2, 3, 4 and 5 triggered cameras. With just one camera to be woken up for each trigger, the fraction of positive wakeups decreases with further increase (beyond 20) in distance threshold. This indicates that the distance threshold is an important factor affecting the performance of the heuristic and for our setup a threshold of 20 yields best performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4">Implementation Results</head><p>In this section, we evaluate the estimation of k-overlap and region of overlap using our prototype implementation. As described in Section 5, we used 8 cameras in our setup and a glowing ball(1.5 inches in diameter) as a reference object. The object was manually placed at several locations to approximate an uniform distribution of reference points. <ref type="table">Table 10</ref>(a) shows the average k-overlap percentage error at each camera. The percentage error in k-overlap estimation over all cameras is 2-9%. We also evaluate the accuracy of region of overlap estimate between pairs of cameras in the 8-camera setup. <ref type="figure" target="#fig_1">Figure 10</ref>(b) tabulates the average percentage error estimating the region of overlap between pairs of cameras. The average error in estimating the region of overlap between pairs of cameras varies form 1-11% for our setup. An important factor that affects the region of overlap estimate is the distance estimate of the object from the camera. <ref type="figure" target="#fig_1">Figure 10</ref>(c) plots the percentage error in estimating the distance of the object from the camera based on its image size. As can been from the figure, the error is varies from 2-12%. For our setup, the region of overlap estimates show that the error is below 11% inspite of the error in distance estimation of the object.</p><p>Our results show that the approximate initialization techniques are feasible in realworld deployments and for our setup had errors close to 10%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Related Work</head><p>Several techniques have been developed by the vision community for accurate camera calibration that use a set of reference points with known locations <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b23">24]</ref>. In sensor networks, techniques like <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b22">23]</ref> are specialized to estimate only the extrinsic parameters of cameras in an exact manner, typically using additional infrastructure or hardware. Further, distributed techniques proposed in <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b12">13]</ref> are suited to calibrate networked cameras. In <ref type="bibr" target="#b19">[20]</ref>, cameras collaborate to track an object and reason about consistent camera location and orientations for observed images. The technique simultaneously solves both the object tracking and camera calibration problem. Examples of systems that use accurately calibrated cameras for video surveillance and tracking are <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b16">17]</ref>. All the above techniques estimate exact parameters of camera, whereas our work focuses on approximate initialization of camera networks with no or limited infrastructure support and camera nodes with limited resources. Positioning and locationing techniques for sensor nodes other than cameras have also been well studied. These techniques depend on a beaconing infrastructure and use several modalities-Active Badge <ref type="bibr" target="#b0">[1]</ref> uses IR signals, Active Bat <ref type="bibr" target="#b1">[2]</ref> and Cricket <ref type="bibr" target="#b15">[16]</ref> use ultrasound signals and RADAR <ref type="bibr" target="#b2">[3]</ref> uses RF signals. Further, GPS <ref type="bibr" target="#b3">[4]</ref> is an example of an outdoor localization system, which can localize object to within 5-15 meters of their actual location. While these methods can be used to localize cameras and in some cases to estimate their orientation, they either have high error or are not suitable for low-power resource constrained camera sensor networks. There exist several types of camera sensor nodes, each with different resources and capabilities. The Cyclops <ref type="bibr" target="#b17">[18]</ref> and CMUCam <ref type="bibr" target="#b18">[19]</ref> are examples of low-power nodes capturing low-resolution images with limited computation capabilities. XYZ <ref type="bibr" target="#b10">[11]</ref> is a power-aware sensor platform which can be equipped with image sensors. Panoptes <ref type="bibr" target="#b6">[7]</ref> is a camera sensor node comprising of a webcam capturing high-resolution images and a Intel StrongARM PDA processor for reasonably high computation resources. Even more sophisticated camera nodes are those with pan-tilt-zoom capabilities connected to PDA or laptop-class devices. In this work, we are interested in developing techniques for low-power resource constrained camera nodes, and our solutions can be applied to more powerful nodes as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusions</head><p>In this paper, we argued that traditional vision-based techniques for accurately calibrating cameras are not directly suitable for ad-hoc deployments of sensors networks in remote locations. We proposed approximate techniques to determine the relative locations and orientations of camera sensors without any use of landmarks or positioning technology. By randomly sampling the environment with a reference object, we showed how to determine the degree and range of overlap for each camera and how this information can be exploited for duty cycling and triggered wakeups. We implemented our techniques on a Mote testbed. Our experimental results showed that our approximate techniques can estimate the degree and region of overlaps to within 10% of their actual values and this error is tolerable at the application-level for effective duty-cycling and wakeups.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. k-overlap estimation with distribution of reference points.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Different degrees of overlap (k-overlap) for a camera.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Region of overlap estimation using reference points and Voronoi tessellation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Region of overlap for triggered wakeup.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Setup and software architecture of prototype implementation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Evaluation of k-overlap estimation scheme with uniform distribution of reference points.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>Fig- ure 8(a) plots the k-overlap with 150 reference points, and it shows that the weighted</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Evaluation of weighted k-overlap estimation with skewed distribution of reference points.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Evaluation of the weighted k-overlap estimation scheme.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 8 (Fig. 9 .</head><label>89</label><figDesc>Figure 8(b) plots error in estimation of 1-overlap with 150 reference points and varying skew. As skew increases, so does the error in both non-weighted and weighted schemes-error with the weighted scheme being smaller than the non-weighted scheme. The increase in error is also more gradual with the weighted scheme as compared to the non-weighted scheme. The error with the non-weighted scheme increases from 0.26 to 0.49 with increase in skew fraction from 25% to 75% and the corresponding values for the weighted scheme are 0.045 and 0.09 respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. Initialization using prototype implementation.</figDesc></figure>

			<note place="foot" n="1"> Vision-based calibration techniques can also determine a camera&apos;s internal parameters such as the camera focal length and lens distortion, in addition to external parameters such as location and orientation.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A Distributed Location System for the Active Office</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andy</forename><surname>Harter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andy</forename><surname>Hopper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Network</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="1994-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A New Location Technique for the Active Office</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andy</forename><surname>Ward</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alan</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andy</forename><surname>Hopper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Personal Communications</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="42" to="47" />
			<date type="published" when="1997-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">RADAR: An In-building RF-based User Location and Tracking System</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Bahl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><forename type="middle">N</forename><surname>Padmanabhan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE INFOCOM</title>
		<imprint>
			<date type="published" when="2000-03" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="775" to="784" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">GPS: Location-tracking Technology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">L</forename><surname>Ranaweera</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="92" to="94" />
			<date type="published" when="2002-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Berg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kreveld</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Overmars</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Schwarzkopf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Geometry</title>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
	<note>Second edition</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sparton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Compass</surname></persName>
		</author>
		<ptr target="http://www.sparton.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Panoptes: A Scalable Architecture for Video Sensor Networking Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Code</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Kaiser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Shea</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Bavoil</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Multimedia</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Robot Vision</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">K P</forename><surname>Horn</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1986" />
			<publisher>The MIT Press</publisher>
		</imprint>
	</monogr>
	<note>First edition</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Snapshot: A Self-Calibration Protocol for Camera Sensor Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shenoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ganesan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE/CreateNet BASENETS</title>
		<imprint>
			<date type="published" when="2006-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Sensor Localization and Camera Calibration using Low Power Cameras</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lymberopoulos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Barton-Sweeny</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Savvides</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
		<respStmt>
			<orgName>Yale University</orgName>
		</respStmt>
	</monogr>
<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">XYZ: A Motion-Enabled, Power Aware Sensor Node Platform for Distributed Sensor Network Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lymberopoulos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Savvides</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IPSN</title>
		<imprint>
			<date type="published" when="2005-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Distributed Attention for Large Video Sensor Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Chu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Reich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Intelligent Distributed Surveillance Systems</title>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Distributed Camera Network Localization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Mantzel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Baraniuk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Asilomar Conference on Signals, Systems, and Computers</title>
		<imprint>
			<date type="published" when="2004-11" />
			<biblScope unit="volume">2</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title/>
		<ptr target="http://www.xbow.com/" />
	</analytic>
	<monogr>
		<title level="j">Crossbow Wireless Sensor Platform</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Telos: Enabling Ultra-Low Power Wireless Research</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Polastre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Szewczyk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Culler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IPSN/SPOTS</title>
		<imprint>
			<date type="published" when="2005-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">The Cricket Location-Support System</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">B</forename><surname>Priyantha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Chakraborty</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM MOBICOM</title>
		<imprint>
			<date type="published" when="2000-08" />
			<biblScope unit="page" from="32" to="43" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A System for Video Surveillance and Monitoring</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Collins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Lipton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kanade</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">American Nuclear Society (ANS) Eighth International Topical Meeting on Robotics and Remote Systems</title>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Cyclops: In Situ Image Sensing and Interpretation in Wireless Sensor Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rahimi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Baer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><forename type="middle">I</forename><surname>Iroezi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Garcia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Warrior</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Srivastava</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SENSYS</title>
		<imprint>
			<date type="published" when="2005-11" />
			<biblScope unit="page" from="192" to="204" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A Low Cost Embedded Color Vision System</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rowe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rosenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Nourbakhsh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Intelligent Robots and Systems</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Distributed Localization of Networked Cameras</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Funiak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Guestrin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Paskin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Suthankar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IPSN</title>
		<imprint>
			<date type="published" when="2006-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tinyos</forename><surname>Website</surname></persName>
		</author>
		<ptr target="http://www.tinyos.net/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A Versatile Camera Calibration Technique for High-Accuracy 3D Machine Vision Metrology Using Off-the-Shelf TV Cameras and Lenses</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">Y</forename><surname>Tsai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal of Robotics and Automation</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="323" to="344" />
			<date type="published" when="1987-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A Simple and Analytical Procedure for Calibrating Extrinsic Camera Par ameters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">Y</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Robotics and Automation</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="121" to="124" />
			<date type="published" when="2004-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">A Flexible New Technique for Camera Calibration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><forename type="middle">Y</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1330" to="1334" />
			<date type="published" when="2000-11" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
