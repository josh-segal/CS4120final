<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:39+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Efficient Multidimensional Blocking for Link Discovery without losing Recall</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Isele</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Web-based Systems Group Garystr. 21</orgName>
								<orgName type="institution">Freie Universität Berlin</orgName>
								<address>
									<postCode>14195</postCode>
									<settlement>Berlin</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anja</forename><surname>Jentzsch</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Web-based Systems Group Garystr. 21</orgName>
								<orgName type="institution">Freie Universität Berlin</orgName>
								<address>
									<postCode>14195</postCode>
									<settlement>Berlin</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Bizer</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Web-based Systems Group Garystr. 21</orgName>
								<orgName type="institution">Freie Universität Berlin</orgName>
								<address>
									<postCode>14195</postCode>
									<settlement>Berlin</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Efficient Multidimensional Blocking for Link Discovery without losing Recall</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Blocking</term>
					<term>Link Discovery</term>
					<term>Identity Resolution</term>
					<term>Duplicate De- tection</term>
					<term>Record Linkage</term>
					<term>Linked Data</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Over the last three years, an increasing number of data providers have started to publish structured data according to the Linked Data principles on the Web. The resulting Web of Data currently consists of over 28 billion RDF triples. As the Web of Data grows, there is an increasing need for link discovery tools which scale to very large datasets. In record linkage, many partitioning methods have been proposed which substantially reduce the number of required entity comparisons. Unfortunately, most of these methods either lead to a decrease in recall or only work on metric spaces. We propose a novel blocking method called Multi-Block which uses a multidimensional index in which similar objects are located near each other. In each dimension the entities are indexed by a different property increasing the efficiency of the index significantly. In addition, it guarantees that no false dismissals can occur. Our approach works on complex link specifications which aggregate several different similarity measures. MultiBlock has been implemented as part of the Silk Link Discovery Framework. The evaluation shows a speedup factor of several 100 for large datasets compared to the full evaluation without losing recall.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>The Web of Data forms a single global data space for the very reason that its data sources are connected by RDF links <ref type="bibr" target="#b1">[2]</ref>. While there are some fully automatic tools for link discovery <ref type="bibr" target="#b5">[6]</ref>, most tools generate links semi-automatically based on link specifications <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b10">11]</ref>. Link specifications specify the conditions which must hold true for a pair of entities for the link discovery tool to generate a RDF link between them. Based on a link specification, the link discovery tool compares entities and concludes to set links if the aggregated similarity is above a given threshold. The Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Copyright is held by the author/owner. Fourteenth International Workshop on the Web and Databases (WebDB 2011), <ref type="bibr">June 12, 2011 -Athens, Greece.</ref> naive approach to compare all entities with each other does not scale due to the computation of the Cartesian product of all the entities.</p><p>As the Web of Data is growing fast there is an increasing need for link discovery tools which scale to very large datasets. A number of methods have been proposed to improve the efficiency of link discovery by dismissing definitive non-matches prior to comparison. The most well-known method to achieve this is known as blocking <ref type="bibr" target="#b4">[5]</ref>. Unfortunately, standard blocking methods in general lead to a decrease of recall due to false dismissals <ref type="bibr" target="#b3">[4]</ref>.</p><p>We propose a novel blocking approach which maps entities to a multidimensional index, called MultiBlock. The basic idea of the mapping function is that it preserves the distances of the entities i.e. similar entities will be located near to each other in the index space. While standard blocking techniques block in one dimension, MultiBlock concurrently blocks by multiple properties using multiple dimensions increasing its efficiency significantly. MultiBlock has been implemented and evaluated within the Silk Link Discovery Framework. It works on complex link specifications which aggregate multiple different similarity measures such as string, geographic or date similarity and does not need any additional configuration. MultiBlock is organized in three phases:</p><p>1. In the index generation phase, an index is built for each similarity measure. The basic idea of the indexing method is that it preserves the distances of the entities i.e. similar entities will be located near each other in the index. The specific indexing method depends on the employed similarity measure. 2. In the index aggregation phase, all indexes are aggregated into one multidimensional index, preserving the property of the indexing that the indexes of two entities within a given distance share the same index. 3. Finally, the comparison pair generation employs the index to generate the set of entity pairs which are potential links. These pairs are then evaluated using the link specification to compute the exact similarity and determine the actual links. We illustrate the indexing by looking at the simple example of interlinking geographical entities based on their label and geographic coordinates: In that case the index generation phase would generate 2 indices: A 1-dimensional index of the labels and a 2-dimensional index of the coordinates. The index aggregation phase would than aggregate both indexes into a single 3-dimensional index. <ref type="figure" target="#fig_0">Figure 1</ref> visualises the index generation and aggregation in this example. Note that each similarity measure may create multiple indexes for a single entity, which for simplicity is not considered in the Figure.  <ref type="figure" target="#fig_0">Figure 1</ref> shows the aggregated index for 1,000 cities in DBpedia.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 2: Index of 1,000 cities in DBpedia</head><p>This paper is structured as follows: In the next Section we discuss related work. In Section 3, we outline how our work contributes to the current state of art. Section 4, introduces some preliminaries on the process of link discovery. Based on these foundations, Section 5 explains the general framework of our approach which is independent of a specific similarity measure or similarity aggregation. At the same time, it specifies which properties a similarity measure or aggregation must adhere to in order to be used in our approach. Subsequently, Section 6 specifies various similarity measures and aggregations which can be plugged into the framework in order to provide a complete blocking method. Our implementation as part of the Silk Link Discovery Framework <ref type="bibr" target="#b15">[16]</ref> is discussed in Section 7. Finally, Section 8 reports on the results of the evaluation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">RELATED WORK</head><p>The problem of link discovery is very similar to record linkage. In record linkage <ref type="bibr" target="#b4">[5]</ref> a number of methods to improve the efficiency by reducing the number of required comparisons are often applied:</p><p>Traditional blocking methods work by partitioning the entities into blocks based on the value of a specific property <ref type="bibr" target="#b0">[1]</ref>. Then only entities from the same block are compared reducing the number of comparisons significantly at the cost of a loss in accuracy. Especially in cases where the data is noisy as it is often the case in Linked Data, similar entities might be assigned to different blocks and thus not compared in the subsequent comparison phase. In order to reduce the number of false dismissals, a multi-pass approach has been proposed <ref type="bibr" target="#b12">[13]</ref>. In a multi-pass approach the blocking is run several times, each time with a different blocking key.</p><p>The Sorted-Neighborhood method has been proposed in order to improve the handling of fuzzy data <ref type="bibr" target="#b11">[12]</ref>. The Sorted-Neighborhood method works on the list of entities which has been sorted according to a user-defined key. The entities which are selected for comparison are determined by sliding a fixed-size window along the sorted list. Only entities inside the window are selected for comparison. The biggest problem of the Sorted-Neighborhood Method lies in the choice of the window size. A small size may miss entities if many similar entities share the same key. A big size will lead to a decrease in efficiency. A solution for this is to adapt the windows size while sliding through the list <ref type="bibr" target="#b23">[24]</ref>.</p><p>The Sorted Blocks <ref type="bibr" target="#b3">[4]</ref> method generalizes Blocking and Sorted-Neighborhood in order to overcome some of their individual disadvantages. It uses overlapping blocks and is both easy to parallize and more stable in the presence of noise.</p><p>While Blocking and Sorted-Neighborhood methods usually map the property key to a single dimensional index, some methods have been developed which map the similarity space to a multidimensional Euclidean space. The fundamental idea of these methods is to preserve the distance of the entities i.e. after mapping, similar entities are located close to each other in the Euclidean space. Techniques which use this approach include FastMap <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr">MetricMap [21]</ref>, <ref type="bibr">SparseMap [15]</ref> and StringMap <ref type="bibr" target="#b16">[17]</ref>. Unfortunately, in general, these methods do not guarantee that no false dismissals will occur <ref type="bibr" target="#b13">[14]</ref>. The only exception is SparseMap for which variants have been proposed which guarantee no false dismissals <ref type="bibr" target="#b13">[14]</ref>. All of these approaches require the similarity space to form a metric space i.e. the similarity measure must respect the triangle inequality. This implies that they can not be used with non-metric similarity measures such as Jaro-Winkler <ref type="bibr" target="#b21">[22]</ref>.</p><p>Another approach which uses the characteristics of metric spaces, in particular the triangle inequality, to reduce the number of similarity computations, has been implemented in LIMES <ref type="bibr" target="#b19">[20]</ref>. To the best of our knowledge no other tool in link discovery, besides Silk and LIMES, makes use of blocking techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">CONTRIBUTIONS</head><p>Our main contribution to the current state of art is that, while significantly reducing the number of comparisons, MultiBlock guarantees that no false dismissals and thus no loss of recall can occur and does not require the similarity space to form a metric space. In addition, it uses a multidimensional index increasing its efficiency significantly. Another advantage of MultiBlock is that it can work on a stream of entities as it does not require to preprocess the whole dataset. <ref type="table">Table 1</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">PRELIMINARIES</head><p>The general problem of link discovery can be formalized as follows <ref type="bibr" target="#b8">[9]</ref>: Given two datasets A and B, find the subset of all matching pairs:</p><formula xml:id="formula_0">M = {(a, b); sims(a, b) ≥ θ, a ∈ A, b ∈ B} (1)</formula><p>Where sims assigns a similarity value to each pair of entities:</p><formula xml:id="formula_1">sims : A × B → [0, 1] (2)</formula><p>If the similarity between two entities exceeds a threshold θ, a link between these two entities is generated. sim is computed by evaluating a link specification s (in record linkage typically called linkage decision rule <ref type="bibr" target="#b22">[23]</ref>) which specifies the conditions two entities must fulfill in order to be interlinked.</p><p>A link specification typically applies one or more similarity measures to the values of a set of property paths. While in the case of database records this is typically achieved by selecting a subset of the record fields, in Linked Data the features are selected by specifying a set of property paths through the graph. If the data sources use different data types, the property values may be normalized by applying a transformation prior to the comparison. Due to the reason that in most cases the similarity of two entities can not be determined by evaluating a single property, a typical link specification aggregates multiple similarity measures into one compound similarity value. Finally, a threshold is applied to determine if the entities should be interlinked.</p><p>In order to compute the set of all matching pairs M , the naive approach is to evaluate the link specification for each entity of the Cartesian product A×B which results in |A|×|B| comparisons. Because this is infeasible for all but very small datasets, we define a blocking function which assigns, based on the link specification, a block to each entity:</p><formula xml:id="formula_2">blocks : A ∪ B → N (3)</formula><p>The fundamental idea behind blocking is to assign the same block to similar entities so that comparisons only have to be made between the entities in each block. This decreases the number of required comparisons considerably by reducing the set of pairs which have to be evaluated to:</p><formula xml:id="formula_3">R = {(a, b); blocks(a) = blocks(b), a ∈ A, b ∈ B} (4)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">APPROACH</head><p>In this section, we lay down the general framework of our approach which is independent of a specific similarity measure or aggregation. At the same time, we define which properties a similarity measure or aggregation must adhere to in order to be used in our approach. The subsequent Section will specify various similarity measures and aggregations which can be plugged into the framework in order to provide a complete blocking method.</p><p>Our approach is organized in three phases: At first, for each similarity measure, an index is generated. Afterwards, all similarity values are aggregated into a single multidimensional index. Finally, the comparison pairs are generated from the index.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Index Generation</head><p>For each similarity measure in the link specification, an index is built which consists of a set of vectors which define locations in the Euclidean space. The basic idea of the indexing method is that it preserves the distances of the entities i.e. similar entities will be located near each other in the index. The index generation is not restricted to a specific similarity measure. In order to be used for MultiBlock, each similarity measure must define the following functions: 1. A function which computes a similarity value for a pair of entities:</p><formula xml:id="formula_4">sims : A × B → [0, 1]<label>(5)</label></formula><p>2. A blocking function which generates the index for a single entity:</p><formula xml:id="formula_5">indexs : (A ∪ B) × [0, 1] → P(N n )<label>(6</label></formula><p>) where P denotes the power set (i.e. it might generate multiple blocks for a single entity) and n is the dimension of the index. The first argument denotes the entity to be blocked, which may be either in the source or target set. The second argument denotes the similarity threshold. indexs includes two modifications of the standard block function presented in the preliminaries. Firstly, it does not map each entity to a one-dimensional block, but to a multi-dimensional block. This way increases the efficiency as the entities are distributed in multiple dimensions. Secondly, it does not map each entity to a single block, but to multiple blocks at once, similarily to multi-pass blocking. This avoids losing recall if an entity cannot be mapped to a definite block such as in string similarity measures (see Section 6.1). The indexs function must adhere to the property that two entities whose similarity according to sims is below the threshold must share a block. More formally, given two entities e 1 , e 2 and a threshold θ, sims and indexs must be related by the following equivalence:</p><p>sims(e 1 , e 2 ) ≤ θ ⇐⇒ indexs(e 1 ) ∩ indexs(e 2 ) = ∅ (7) Section 6.1 gives an overview over the most common similarity measures which can be used in MultiBlock.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Index Aggregation</head><p>In the index aggregation phase, all indexes which have been built in the index generation phase are aggregated into one compound index. The aggregation function preserves the property of the index that two entities within a given distance share the same index vector. Generally, aggregating the indexes of multiple similarity measures will lead to an increase in dimensionality, but the concrete aggregation function depends on the specific aggregation type. Section 6.2 outlines the concrete aggregation functions for the most common aggregation types.</p><p>In order to be used for MultiBlock, each aggregation must define the following functions:</p><p>1. A function which aggregates multiple similarity values:</p><formula xml:id="formula_6">aggSima : [0, 1] n × [0, 1] n → [0, 1] (8)</formula><p>where n is the number of operators to be aggregated. The first argument denotes the similarity values to be aggregated. As an aggregation may weight the results of the underlying operators e.g. a weighted average, the second argument denotes the weight of the specific operator. Each weight is a number between 0 and 1, while all weights total to 1. 2. A function which aggregates multiple blocks:</p><p>aggIndexa : P(N n ) × P(N n ) → P(N n ) (9) where P denotes the power set and n is the dimension of the index. Note that while aggIndexa only aggregates two sets of blocks at once, it can also be used to aggregate multiple sets by calling it repeatedly. 3. A function which updates the threshold of the underlying operators in order to retain the condition that two entities within the threshold share a block.</p><formula xml:id="formula_7">thresholda : [0, 1] × [0, 1] → [0, 1]</formula><p>(10) The first argument denotes the threshold on the aggregation. As in the similarity aggregation function, the second argument denotes the weight of the specific operator.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Comparison Pair Generation</head><p>Finally, the comparison pair generation employs the index to generate the set of entity pairs which are potential links. For each two entities which share a block, a comparison pair is generated. These pairs are then evaluated using the link specification to compute the exact similarity and determine the actual links.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">EMPLOYED SIMILARITY MEASURES AND AGGREGATIONS</head><p>This section provides an overview of various similarity measures and aggregations which can be used in conjunction with our approach. For each similarity measure, we define the required similarity function and the corresponding blocking function. Likewise, for each aggregation, we define the required similarity aggregation function as well as the blocking aggregation function.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Similarity Measures</head><p>As RDF datasets typically make use of a variety of different data types, many similarity measures have been proposed to match their values <ref type="bibr" target="#b6">[7]</ref>. As the most common data types are plain string literals, most of these techniques handle approximate string matching. Apart from that, similar techniques have been proposed for numeric data or special purpose data types such as dates or geographic coordinates. In this section, we show how similarity measures for various data types can be integrated into our proposed approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>String Similarity</head><p>A number of string similarity measures have been developed in literature <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b2">3]</ref>. We use the Levenshtein distance <ref type="bibr" target="#b17">[18]</ref> for approximate string comparisons in this paper.</p><p>Given a finite alphabet Σ and two strings σ 1 ∈ Σ * and σ 2 ∈ Σ * , we define the similarity function to compute the normalized Levenshtein distance as:</p><formula xml:id="formula_8">sims(σ 1 , σ 2 ) := levenshtein(σ 1 , σ 2 ) max(|σ 1 |, |σ 2 |)<label>(11)</label></formula><p>The basic problem of blocking string values under the presence of typographical errors is the potential loss of recall. We define a blocking function which avoids false dismissals by indexing multiple q-Grams of the given input string. For this purpose, we first define a function which assigns a single block to a given q-Gram σq ∈ Σ q :</p><formula xml:id="formula_9">blockq(σq) := q i=0 |Σ| i · σq(i)<label>(12)</label></formula><p>blockq assigns each possible letter combination of the q-Gram to a different block.</p><p>In order to increase the efficiency, we do not want to block all q-Grams of a given string, but just as many needed to avoid any false dismissals. We can make the following observation <ref type="bibr" target="#b9">[10]</ref>: Given a maximum Levenshtein distance k between two strings, they differ by at most k · q + 1 qGrams, wherein the maximum Levenshtein distance is given as k := max(|str1|, |str2|) · (1.0 − θ). Consequently, the minimal number of q-grams which must be blocked in order to avoid false dismissals is:</p><formula xml:id="formula_10">c(θ) := max(|str1|, |str2|) · (1.0 − θ) · q + 1 (13)</formula><p>By combining both functions, we can define the blocking function as:</p><formula xml:id="formula_11">indexs(σ, θ) := {blockq(σq); σq ∈ qgrams(σ)[0...c(θ)]} (14)</formula><p>The function starts with decomposing the given string into its q-Grams. From this set, it takes as many q-Grams as needed to avoid false dismissals and assigns a block to each. Finally, it returns the set of all blocks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Numeric Similarity</head><p>The similarity of two numbers is computed with:</p><formula xml:id="formula_12">sims(d 1 , d 2 ) := |d 1 − d 2 | dmax − d min where d 1 , d 2 ∈ [d min , dmax]</formula><p>(15) Using standard blocking without overlapping blocks may lead to false dismissals. For that reason, we define an overlapping factor overlap, which we set to 0.5 by default. The overlapping factor specificies to what extend the blocks overlap. Using the overlapping factor, the maximum number of blocks which does not lead to false dismissals can be computed with:</p><formula xml:id="formula_13">sizes(θ) := 1 θ · overlap<label>(16)</label></formula><p>Based on the block count we can define the blocking function as follows:</p><formula xml:id="formula_14">indexs(d, θ) :=                  {0} if scaled(d) &lt;= 0.5 {sizes(θ) − 1} if scaled(d) &gt;= sizes(θ) − 0.5 {i(d), i(d) − 1} if scaled(d) − i(d) &lt; overlap {i(d), i(d) + 1} if scaled(d) − i(d) + 1 &lt; overlap {i(d)} with scaled(d) := sizes(θ) · d − d min dmax i(d) := f loor( d − d min dmax )<label>(17)</label></formula><p>Geographic Similarity Blocking geographic coordinates can be reduced to indexing numbers, by using the numeric similarity functions on both the latitude and the longitude of the coordinate which results in 2-dimensional blocks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Aggregations</head><p>In this section we focus on the most common aggregations: Computing the average similarity and selecting the minimum or maximum similarity value.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Average Aggregation</head><p>The average aggregation computes the weighted arithmetic mean of all provided similarity values.</p><formula xml:id="formula_15">aggSima(v, w) := v 0 * w 0 + v 1 * w 0 + ... + vn * wn n<label>(18)</label></formula><p>Two indexes are combined by concatenating their index vectors:</p><formula xml:id="formula_16">aggIndexa(A, B) := {(a 1 , ..., an, b 1 , ...bm), a ∈ A, b ∈ B} (19)</formula><p>In order to preserve the condition that two entities within the given threshold share a block, the local threshold of the underlying similarity measures is modified according to:</p><formula xml:id="formula_17">thresholda(θ, w) := 1 − (1 − θ) 1 w (20)</formula><p>Minimum/Maximum Aggregation The minimum and maximum aggregations simply select the minimum/maximum value:</p><formula xml:id="formula_18">aggSima(v, w) := min/max(v 0 + v 1 + ... + vn) (21)</formula><p>In this case, we can not just aggregate the blocks to separate dimensions in the same way as in the average aggregator. The reason for this is that if one similarity value exceeds the threshold, the remaining similarity values may be arbitrary low while the entities are still considered as matches. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">IMPLEMENTATION</head><p>The Silk Link Discovery Framework generates RDF links between data items based on user-provided link specifications which are expressed using the Silk Link Specification Language (Silk-LSL). The Silk Link Discovery Framework is implemented in Scala 1 and can be downloaded from the project homepage 2 under the terms of the Apache Software License.</p><p>Until version 2.2, Silk supports basic blocking with overlapping blocks. It provides a separate configuration directive to configure the property paths which are used as blocking keys as well as the number of block and the overlapping factor.</p><p>The current version of Silk includes the MultiBlock method as specified in this paper. The blocking is configured by the  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">EVALUATION</head><p>MultiBlock has been evaluated regarding scalability and effectiveness.</p><p>This section reports on the results of two experiments in which we used Silk with MultiBlock to generate RDF links between different Linked Data sets. The link specifications used for the experiments are included in the current release of Silk.</p><p>All experiments have been run on a 3GHz Intel(R) Core i7 CPU with 4 cores and 8GB of RAM.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1">Scalability</head><p>In order to be used for link discovery in Linked Data, MultiBlock must be able to scale to very large datasets. Thus, it is essential that MultiBlock reduces the number of comparisons drastically without dismissing correct pairs. We evaluated the scalability of MultiBlock by applying it to interlink two large geographic datasets. For this purpose, we used a dataset consisting of 204,109 settlements from DBpedia 3 and 530,606 settlements from LinkedGeoData 4 .</p><p>First, we interlinked both datasets by evaluating the complete Cartesian product without the use of any blocking method. As this results in over 100 billion comparisons it is a clear case when matching the complete Cartesian product is not reasonable anymore. The link generation took about 85 hours and generated 70,037 links. The generated links have been spot-checked for correctness.</p><p>After that, we evaluated how standard blocking reduces the number of comparisons. We used the labels of the entities as blocking keys. We ran the blocking multiple times with different parameters in each run. In order to reduce the loss of recall we used overlapping blocks. An overlapping factor of 0.2 was chosen for that purpose as it provides a good trade-off between efficiency and minimizing the number of false dismissals.</p><p>Finally, we evaluated how MultiBlock compares to standard blocking. By blocking in 3 dimensions instead of a single dimension, MultiBlock was able to further reduce the number of comparisons to 37,667,462. Furthermore, it generated the identical 70,037 links as in the full evaluation, but ran in only 420 seconds.   times faster than standard blocking with 1,000 blocks, but contrary to it does yield all correct links. We can also observe that due to the usage of a multidimensional index, the overhead of MultiBlock is higher than that of standard blocking. This can be concluded from the fact that MultiBlocks reduces the number of comparisons by 28 compared to standard blocking with 1,000 blocks, but its runtime only increases by a factor of 19. In order to determine which phase of MultiBlock is responsible for the overhead, we evaluated the runtimes of the different phases of the matching process. As we can see in <ref type="table" target="#tab_4">Table 3</ref>, a big part is spent for creating the comparison pairs. For this reason future improvements will focus on using a more efficient algorithm for the comparison pair generation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2">Effectiveness</head><p>In order to be applicable to discover links between arbritary data sources, MultiBlock must be flexible enough to be applied even to complex data sets without losing recall. For this purpose we employed Silk with MultiBlock to interlink drugs in DBpedia and DrugBank <ref type="bibr" target="#b4">5</ref> . Here it is not sufficient to compare the drug names alone, but also necessary to take the various unique bio-chemical identifiers, e.g. CAS number, into consideration. Therefore the corresponding Silk link specification compares the drug names and their synonyms as well as a list of well-known and used identifiers of which not all have to be set on the entity.</p><p>The employed Silk link specification results in 1,403 links. <ref type="table" target="#tab_5">Table 4</ref> shows the different runtimes using Silk and Silk with MultiBlock. Using Silk with MultiBlock, we achieved a speedup factor of 71 with full recall. The gain in this example is smaller than in the previous one because the dataset here is much smaller and the link specification is more complicated.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Aggregating a geographic and a string similarity</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>For this reason, the index vectors of all indexes are mapped into the same index space: aggIndexa(A, B) := {(a 1 , ..., an), (b 1 , ..., bn); a ∈ A, b ∈ B} (22) In case the dimensionality of the two indexes does not match, the vectors of the lower dimensional index are expanded by setting the values in the additional dimensions to zero. For minimum and maximum aggregations we can leave the threshold unchanged: thresholda(θ, w) := θ (23)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head></head><label></label><figDesc>summarizes how MultiBlock compares to existing methods.</figDesc><table>Method 

Lossless Non-Metrics Stream. 
Traditional Blocking 
no 
yes 
yes 
Sorted-Neighborhood 
no 
yes 
no 
Sorted Blocks 
no 
yes 
no 
FastMap 
no 
no 
no 
MetricMap 
no 
no 
no 
SparseMap 
no 
no 
no 
StringMap 
no 
no 
no 
Modified SparseMap 
yes 
no 
no 
MultiBlock 
yes 
yes 
yes 

Table 1: Comparison of different blocking methods 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="true"><head>Table 2 : Results of experiment 1</head><label>2</label><figDesc></figDesc><table>link specification and does not need any further configura-
tion. The blocking function has been implemented for all 
common similarity measures. For similarity measures which 
do not define a blocking function yet, the fallback is to use a 
single block for this specific similarity measure. In this case, 
Silk still blocks by the remaining similarity measures. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head>Table 2 summarizes</head><label>2</label><figDesc>the results. The evaluation shows that MultiBlock reduces the number of comparisons by a factor of 2,875 and is over 700 times faster than evaluat- ing the complete Cartesian product. It is also almost 20</figDesc><table>Phase 

Time 
Build index 
14 % 
Generate comparison pairs 
41 % 
Similarity comparison 
45 % 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="true"><head>Table 3 : The runtimes of the different phases</head><label>3</label><figDesc></figDesc><table>Setting 
Comparisons Runtime Links 
Full comparison 
22,242,292 
430s 1,403 
Blocking, 100 blocks 
906,314 
44s 1,349 
Blocking, 1,000 blocks 
322,573 
14s 1,287 
MultiBlock 
122,630 
6s 1,403 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="false"><head>Table 4 :</head><label>4</label><figDesc></figDesc><table>Results of experiment 2 

</table></figure>

			<note place="foot" n="3"> http://dbpedia.org 4 http://linkedgeodata.org</note>

			<note place="foot" n="5"> DrugBank is a large repository of almost 5,000 FDAapproved drugs and has been published as Linked Data on http://www4.wiwiss.fu-berlin.de/drugbank/</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">A comparison of fast blocking methods for record linkage</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Baxter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Christen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">F</forename><surname>Epidemiology</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Linked data -the story so far</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bizer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Heath</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Berners-Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Semantic Web Inf. Syst</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1" to="22" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">A comparison of string distance metrics for name-matching tasks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">W</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Ravikumar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">E</forename><surname>Fienberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">A comparison and generalization of blocking and windowing algorithms for duplicate detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Draisbach</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Naumann</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Duplicate record detection: A survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">K</forename><surname>Elmagarmid</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">G</forename><surname>Ipeirotis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Knowl. and Data Eng</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">First Results of the Ontology Alignment Evaluation Initiative</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Euzenat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ferrara</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Meilicke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ontology Matching</title>
		<imprint>
			<biblScope unit="page">85</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Ontology matching</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Euzenat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shvaiko</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007" />
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Heidelberg (DE)</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">FastMap: A fast algorithm for indexing, data-mining and visualization of traditional and multimedia datasets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Faloutsos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1995 ACM SIGMOD international conference on Management of data</title>
		<meeting>the 1995 ACM SIGMOD international conference on Management of data</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A Theory for Record Linkage</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">P</forename><surname>Fellegi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">B</forename><surname>Sunter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the American Statistical Association</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="issue">328</biblScope>
			<date type="published" when="1969" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Approximate string joins in a database (almost) for free</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Gravano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">G</forename><surname>Ipeirotis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">V</forename><surname>Jagadish</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 27th International Conference on Very Large Data Bases, VLDB &apos;01</title>
		<meeting>the 27th International Conference on Very Large Data Bases, VLDB &apos;01<address><addrLine>San Francisco, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Linkage query writer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Hassanzadeh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Xin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">J</forename><surname>Miller</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The merge/purge problem for large databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Hernández</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Stolfo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1995 ACM SIGMOD international conference on Management of data, SIGMOD &apos;95</title>
		<meeting>the 1995 ACM SIGMOD international conference on Management of data, SIGMOD &apos;95<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Real-world data is dirty: Data cleansing and the merge/purge problem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Hernández</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Stolfo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Data Min. Knowl. Discov</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
	<note>Introduced the multi-pass approach for blocking</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Properties of embedding methods for similarity searching in metric spaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">R</forename><surname>Hjaltason</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Samet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PAMI</title>
		<imprint>
			<biblScope unit="page">25</biblScope>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Cluster-preserving embedding of proteins</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Hristescu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Farach-Colton</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Silk -Generating RDF Links while publishing or consuming Linked Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Jentzsch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Isele</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bizer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Poster at the International Semantic Web Conference (ISWC2010)</title>
		<meeting><address><addrLine>Shanghai</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Efficient Record Linkage in Large Data Sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mehrotra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Database Systems for Advanced Applications</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Binary codes capable of correcting deletions, insertions, and reversals</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Levenshtein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Soviet Physics Doklady</title>
		<imprint>
			<date type="published" when="1966" />
			<biblScope unit="volume">10</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A guided tour to approximate string matching</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Navarro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Comput. Surv</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Limes -a time-efficient approach for large-scale link discovery on the web of data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A.-C</forename><forename type="middle">N</forename><surname>Ngomo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Auer</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Evaluating a class of distance-mapping algorithms for data mining and clustering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th ACM SIGKDD international conference on Knowledge discovery and data mining</title>
		<meeting>the 5th ACM SIGKDD international conference on Knowledge discovery and data mining</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">String Comparator Metrics and Enhanced Decision Rules in the Fellegi-Sunter Model of Record Linkage</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Winkler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Section on Survey Research Methods</title>
		<meeting>the Section on Survey Research Methods</meeting>
		<imprint>
			<publisher>American Statistical Association</publisher>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Matching and Record Linkage</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Winkler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Business Survey Methods</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="355" to="384" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Adaptive sorted neighborhood methods for efficient record linkage</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-Y</forename><surname>Kan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th ACM/IEEE-CS joint conference on Digital libraries, JCDL &apos;07</title>
		<meeting>the 7th ACM/IEEE-CS joint conference on Digital libraries, JCDL &apos;07<address><addrLine>USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
