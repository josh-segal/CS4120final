<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:38+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Multi-Project Reticle Design and Wafer Dicing under Uncertain Demand *</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Ion M˘ andoiu</roleName><forename type="first">Andrew</forename><forename type="middle">B</forename><surname>Kahng</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xu</forename><surname>Xu</surname></persName>
							<email>xuxu@cs.ucsd.edu</email>
							<affiliation key="aff1">
								<orgName type="department">CSE Department</orgName>
								<orgName type="institution">University of Connecticut</orgName>
								<address>
									<addrLine>371 Fairfield Rd</addrLine>
									<postCode>06269</postCode>
									<settlement>Storrs</settlement>
									<region>CT</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><forename type="middle">Z</forename><surname>Zelikovsky</surname></persName>
							<email>alexz@cs.gsu.edu</email>
							<affiliation key="aff2">
								<orgName type="department">CS Department</orgName>
								<orgName type="institution">Georgia State University</orgName>
								<address>
									<addrLine>University Plaza</addrLine>
									<postCode>30303</postCode>
									<settlement>Atlanta</settlement>
									<region>GA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">CSE Department</orgName>
								<orgName type="institution">UC San Diego</orgName>
								<address>
									<addrLine>La Jolla</addrLine>
									<postCode>92093</postCode>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Multi-Project Reticle Design and Wafer Dicing under Uncertain Demand *</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>The pervasive use of advanced reticle enhancement technologies demanded by VLSI technology scaling leads to dramatic increases in mask costs. In response to this trend, multiple project wafers (MPW) have been proposed as an effective technique for sharing the cost of mask tooling among up to tens of prototype and low volume designs. Previous works on MPW reticle design and dicing have focused on the simple scenario in which production volumes are known a priori. However, this scenario does not apply for low-and medium-volume production, in which mask manufacturing is typically started when only rough estimates of future customer demands are available. In this paper we initiate the study of MPW use for production under demand uncertainty and propose efficient algorithms for two main optimizations that arise in this context: reticle design under demand uncertainty and on-demand wafer dicing. Preliminary experiments on simulated data show that our methods help reducing the cost overheads incurred by demand uncertainty, yielding solutions with a cost close to that achievable when a priori knowledge of production volumes is available.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction and Motivation</head><p>With the pervasive use of advanced reticle enhancement technologies such as Optical Proximity Correction (OPC) and Phase Shifting Masks (PSM), mask costs are predicted to reach $10 million by the end of the decade <ref type="bibr" target="#b6">[8]</ref>. These high mask costs push prototype, low-volume, and low-price medium-volume production designs past the limits of economic feasibility since the costs cannot be amortized over the volume. In response to this trend, multiple project wafers (MPW) have been proposed as an effective technique for sharing the cost of mask tooling among up to tens of designs <ref type="bibr" target="#b1">[3,</ref><ref type="bibr" target="#b7">9]</ref>.</p><p>Multi-project reticle design and wafer dicing have received much attention recently. Xu et al. <ref type="bibr" target="#b9">[11]</ref> studied the MPW mask floorplanning under die-alignment constraints imposed by the use of die-to-die mask inspection. A grid-packing formulation for MPW mask floorplanning was proposed in <ref type="bibr" target="#b0">[2]</ref>, where the objective is to find a minimum area grid floorplan with at most one die per grid cell. The grid-packing formulation in <ref type="bibr" target="#b0">[2]</ref> was revisited by Kahng and Reda <ref type="bibr" target="#b5">[7]</ref>, who proposed a * Work supported in part by Cadence Design Systems, Inc., the MARCO Gigascale Silicon Research Center, a Faculty Large Research Grant from the University of Connecticut Research Foundation, NSF Grant CCF-0429735, and CRDF Award #MOM2-3049-CS-03.</p><p>new floorplanner with guaranteed yield. Kahng et al. <ref type="bibr" target="#b3">[5]</ref> considered the side-to-side wafer dicing problem, and proposed a general multi-project reticle floorplanning method seeking to maximize dicing yield. Xu et al. <ref type="bibr" target="#b10">[12]</ref> combined the horizontal and vertical conflict graphs of <ref type="bibr" target="#b3">[5]</ref> into a single conflict graph, and proposed dicing algorithms based on coloring of the combined conflict graph (all dies receiving a certain color can be diced in the same step). Wu et al. <ref type="bibr" target="#b12">[14]</ref> proposed integer linear program (ILP) formulations for wafer dicing, further extending the graph coloring approach. In <ref type="bibr" target="#b13">[15]</ref>, Wu et al. gave ILP formulations for simultaneous floorplanning and dicing (which, unfortunately, cannot be solved in practical runtime even for small testcases) and proposed more practical algorithms for independent reticle floorplanning and wafer dicing, also incorporating chip replication in the former. Recently, Kang et al. <ref type="bibr" target="#b4">[6]</ref> proposed (1) algorithms for balancing mask cost and schedule delay cost, (2) a new hierarchical quadrisection floorplanning algorithm based on simulated annealing, (3) shot-map optimization methods for maximizing the number of functional dies extracted from each wafer, and (4) new side-to-side dicing algorithms allowing multiple dicing plans for different wafers.</p><p>All previous works on MPW reticle design and dic- ing have focused on the simple scenario in which production volumes are fully known at reticle design time. While this assumption holds for prototype manufacturing, it may not hold for low-and medium-volume production. Due to the time-to-market pressure, the mask set must be manufactured as soon as possible, when only rough lower and upper bounds on customer demand are available. Once the mask set is available, lots of wafers can be manufactured in response to customer orders. To increase profitability, it is possible to manufacture larger wafer lots in anticipation of future customer demand, and then dice the wafers as customer orders arrive. Multi-project wafers become even more attractive in this context because, in addition to mask cost sharing, they allow reducing the risks associated with misprediction of customer demand.</p><p>In this paper we initiate the study of MPW use for low-and medium-volume production under demand uncertainty and address the two main optimizations that arise in this scenario: reticle design under demand uncertainty and on-demand wafer dicing. Our contributions include novel simulated annealing (SA) algorithms for robust reticle floorplanning under demand uncertainty (Section 2). A key enabler of solution quality is the integration within the SA framework of project replication, or cloning. Unlike in <ref type="bibr" target="#b13">[15]</ref>, where project replication was proposed as a post-processing step intended to use the white space left on the reticle, our algorithm works with multiple copies (and can dynamically adjust their number) throughout the entire solution search process, therefore resulting into both a better use of reticle area and improved dicing properties. Our cloning strategy further allows full control of reticle size, and should also be useful for MPW reticle design in the case when production volumes are known. We also give algorithms for on-demand wafer dicing (Section 3). For both reticle design and on-demand dicing, our best algorithms require little or no knowledge about customer order distribution. Nevertheless, experiments on simulated data show that our algorithms are very effective in reducing overheads incurred by demand uncertainty, coming very close in solution quality to algorithms that rely on a priori knowledge of customer orders (Section 4).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Robust Reticle Floorplanning</head><p>Reticle floorplanning is perhaps the most important optimization step of any MPW flow. Compared with traditional chip floorplanning, the difficulty of MPW reticle floorplanning lies in the complex relationship between the reticle floorplan and overall manufacturing cost, via conflicting factors such as reticle area and dicing compatibility <ref type="bibr" target="#b13">[15]</ref>. Manufacturing cost estimation becomes even more difficult when production volumes are uncertain. Two reticle floorplans that require the same number of wafers for satisfying a certain set of production volumes may require significantly different numbers of wafers even for slight changes in the production volumes. Ideally, we would like a reticle floorplan that leads to low production costs under most possible production requirements. This robustness objective for reticle design under production demand uncertainty can be formulated as follows:</p><p>Robust Reticle Design Problem (RRDP).</p><p>Given: Maximum reticle size, dies D = {D 1 ,... ,D n }, and probability distribution of customer orders for each die.</p><p>Find: a reticle floorplan for D that maximizes the expected number of wafers required to satisfy customer orders over the time horizon for which production is being planned.</p><p>Our RRDP algorithm uses the simulated annealing (SA) framework introduced in <ref type="bibr" target="#b4">[6]</ref>. As in <ref type="bibr" target="#b4">[6]</ref>, a hierarchical quadrisection mesh is defined recursively as follows:</p><p>• At level 1, the full reticle area is divided via one horizontal line and one vertical line into 4 rectangular regions denoted R(1, 1), R(1, 2), R(1, 3), and R(1, 4), respectively.</p><p>• In general, each level i ≥ 1 has 4 i regions denoted R(i, j), 1 ≤ j ≤ 4 i . Regions at level i + 1 are obtained by dividing each region R(i, j) at level i into Input: Dimensions and volume requirement distributions of n dies, parameter β, 0 ≤ β &lt; 1 Output: Reticle floorplan and wafer dicing plan 1. Construct the hierarchical quadrisection floorplan mesh 2. Assign the n dies to regions at random 3. If (floorplan width and heigh smaller than maximum reticle dimensions) then FoundFeasible ← True 4. Else FoundFeasible ← False 5. While (not converged and # of moves &lt; Move Limit) 6.</p><p>Pick a move at random 7.</p><p>If (floorplan width and heigh smaller than maximum reticle dimensions) then 8.</p><p>FoundFeasible ← True; δ ←New Objective Value -Old Objective Value 9.</p><p>Else, if (FoundFeasible = False) then δ ← New Area -Old Area, else δ ← ∞ 10. If (δ &lt; 0) then accept the move, else accept the move with probability e − δ T 11. T ← βT The number of levels l is chosen such that the number of regions at level l, 4 l , is greater than the number of dies. <ref type="figure" target="#fig_0">Figure 1</ref>(a) shows a mesh with 2 levels.</p><p>In our algorithm, each one of the n given dies is assigned to a different region of the hierarchical quadrisection mesh. The mesh itself is "soft" since the dimensions of each mesh region are determined by the die assignment. As shown in <ref type="figure" target="#fig_0">Figure 1</ref> (b) and (c), different die assignments lead to different region dimensions and therefore to different reticle floorplans. We denote the width of the region R(i, j) by W (R(i, j)) and the height by H(R(i, j)). For a given die assignment, region heights and widths can be computed in a bottom-up manner, as follows. At level l, if there is a die in the region R(l, j), then W (R(l, j)) is set to the width of the die and H(R(l, j)) is set to the height of die; otherwise,</p><formula xml:id="formula_0">W (R(l, j)) = H(R(l, j)) = 0. At level i &lt; l, W (R(i, j)) = max{W (R(i + 1, 4 j−1 + 1)),W (R(i + 1, 4 j−1 + 4))} + max{W (R(i + 1, 4 j−1 + 2)),W (R(i + 1, 4 j−1 + 3))} and H(R(i, j)) = max{H(R(i + 1, 4 j−1 + 1)), H(R(i + 1, 4 j−1 + 2))} + max{H(R(i + 1, 4 j−1 + 3)), H(R(i + 1, 4 j−1 + 4))}.</formula><p>A main advantage of the proposed hierarchical quadrisection mesh structure is that it guarantees dicing compatibility between dies placed in certain regions. In particular, dies located in diagonally opposing sibling regions can always be diced together. This property is used by our simulated annealing algorithm to quickly evaluate the quality of a reticle floorplan.</p><p>We call a set of mesh regions independent if the dies in these regions can be diced simultaneously. For an independent set S the expected wafer requirement is upperbounded by</p><formula xml:id="formula_1">W (S) = Z max D∈S 񮽙 N(D) Q(D) 񮽙 dN (1)</formula><p>where 񮽙 over these vectors. To evaluate a given hierarchical quadrisection floorplan, we start by creating 4 l sets, each consisting of at most one die, corresponding to the level-l regions of the floorplan mesh. We then merge, in bottom-up order, pairs of sets coming from diagonally opposing sibling regions, thus ensuring that the merged sets remain independent. Note that the wafer requirement of a merged pair is the maximum of the wafer requirements of its two sets. Thus, to ensure the smallest total wafer requirement, when merging the sets coming from two diagonally opposing sibling regions we sort the sets in each region according to their wafer requirement, merge the sets with highest wafer requirement in each region, then merge the sets with second highest wafer requirement, and so on. Since at each level the merging process decreases the number of sets in half, we end up with 2 l independent sets covering all dies at level 1. The objective function used by our simulated annealing algorithm to evaluate floorplan changes is the sum of wafer requirement upperbounds computed using (1) for these 2 l independent sets.</p><p>The algorithm <ref type="figure" target="#fig_1">(Figure 2</ref>) starts by assigning each die randomly to one of the 4 l regions of the hierarchical quadrisection mesh. The objective function is calculated and recorded for this initial floorplan. At each step we find a neighbor solution based on the following moves:</p><p>• Region exchange move: exchange the dies in two regions; if one of the regions is empty this amounts to moving a die from one region to another.</p><p>• Orientation move: rotate one die by 90 degrees if die width and height are different.</p><p>After each move, we evaluate the objective function for the resulting floorplan. To enforce the given maximum reticle dimensions, the objective value is set to infinity when the evaluated floorplan's dimensions exceed allowed maximums (unless we have not yet found a feasible floorplan, in which case the algorithm switches to using floorplan area as objective function). As in any simulated annealing algorithm, improving moves are always accepted, while remaining ones are accepted with a probability exponentially decreasing with the objective value increase and the current annealing temperature.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Die Cloning</head><p>Most previous works on MPW reticle design assume that the reticle contains a single copy of each die. This is appropriate for prototype manufacturing, when only a small number of wafers is produced, since it minimizes reticle area (and hence total cost). For lowand medium-production volume the number of manufactured wafers is larger, and die cloning (i.e., using multiple copies of a die in the reticle) may be justified even when it leads to some increase in reticle area, since cloning can improve dicing yield and thus decrease the number of required wafers. A simple die cloning method was proposed in <ref type="bibr" target="#b13">[15]</ref>, based on insertion of additional die copies within the white space available in a floorplan constructed starting with a single copy of each die. However, this postprocessing approach has limited potential for improvement since typically there is not much empty space left on the reticle. Here, we propose a comprehensive approach to die cloning, which involves making cloning decisions before, during, as well as after running the simulated annealing algorithm in <ref type="figure" target="#fig_1">Figure 2</ref>.</p><p>First, we set the initial number of copies c D for die D with average volume requirement V D to</p><formula xml:id="formula_2">c D = max{1, β f (V D )} Here, f (V D ) is a monotonically increasing function of V D . We used f (V D ) = V D and f (V D ) = √ V D</formula><p>in our experiments, the resulting algorithms are referred to as SA-clone1 and SA-clone2, respectively. Parameter β is a scaling factor chosen such that</p><formula xml:id="formula_3">∑ D∈D c D a D ≤ αA</formula><p>where, a D denotes the area of die D, A denotes the maximum reticle area and α ≤ 1 is a maximum reticle utilization factor, which was set to 0.6 in our experiments. To facilitate dicing, all copies of a die are arranged in a k × l "clone array" which is always assigned to a single floorplan mesh region.</p><p>We also modified the simulated annealing algorithm in <ref type="figure" target="#fig_1">Figure 2</ref> by adding four new moves: addition/deletion of a row/column of copies from a clone array. Finally, after the completion of the algorithm, we try to insert additional rows or columns into the clone arrays without increasing reticle size.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">On-Demand Wafer Dicing</head><p>A wafer consists of reticle projections ("flashes") arranged in a number of projection rows and projection columns. Each projection is an image of the reticle, which includes one or more copies of each die. Although all die copies on a wafer can be recovered by using expensive dicing technologies such as laser cutting <ref type="bibr" target="#b8">[10]</ref>, with the prevalent side-to-side wafer dicing technology some die copies will be destroyed. Under the side-to-side dicing model all reticles in the same row (column) on the wafer are sawed by a single set of horizontal (resp. vertical) cut lines, as the diamond blades cannot stop at arbitrary points during cutting.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Single Batch Dicing</head><p>Dicing a single batch of customer of orders can be formulated as the following Side-to-Side Wafer Dicing Problem (SSWDP): Given a multi-project reticle and required production volumes for each die, find the minimum number of wafers and a set of wafer dicing plans yielding for each die a number of copies equal to or greater than the required production volume. Xu et al. <ref type="bibr" target="#b10">[12]</ref> assumed that each wafer uses exactly one horizontal dicing plan and one vertical dicing plan for all reticle image rows/columns. This assumption allowed them to use a coloring-based heuristic giving good results for testcases with large volume requirement. In <ref type="bibr" target="#b4">[6]</ref> we have given an integer linear programming formulation which allows finding an optimal set of dicing plans restricted in this way. Next we refine the formulation in <ref type="bibr" target="#b4">[6]</ref> to change the objective from pure minimization of the number of wafers to the minimization of the combined wafer and dicing cost, where the former is proportional to the number of wafers and the latter is proportional to the number of different wafer dicing plans used to fulfill the batch of orders.</p><p>As in <ref type="bibr" target="#b10">[12]</ref>, two dies D and D 񮽙 on a reticle are said to be in dicing conflict if they are either in horizontal dicing conflict or vertical dicing conflict. The conflict graph is the graph with vertices corresponding to the dies and edges connecting pairs of dies in dicing conflict. A maximum conflict independent set is a subset of D which can be sliced out by a set of horizontal and vertical cut lines. We use MCIS to denote the set of all maximal independent sets in the conflict graph. For each independent set C ∈ MCIS, let f C be an integer variable denoting the number of wafers which use the dicing plan defined by C. Also, let x C be a 0/1 variable which is set to 1 if and only if the dicing plan defined by C is used to dice at least one wafer. Denoting by α the cost of a wafer and Input: reticle floorplan with dies D = {D 1 ,...,D n }, wafer shot-map, customer orders Q i , 1 ≤ i ≤ m Output: number of wafers N i to be diced after receiving each order Q i 01. For each k = 1,...,n, in stock(k) ← 0 02. For i = 1,... ,m do 03.</p><p>For each k = 1,... ,n 04.</p><p>If</p><formula xml:id="formula_4">in stock(k) ≥ Q i (k) then 05. in stock(k) ← in stock(k) − Q i (k) 06. Q i (k) ← 0 07. Else 08. Q i (k) ← Q i (k) − in stock(k) 09. in stock(k) ← 0 10.</formula><p>If Q i 񮽙 = 0 11.</p><p>Run the SSWDP algorithm in Section 3.1 with production volumes given by Q i 12.</p><p>Let N i be the number of wafers required by the algorithm, and 13.</p><p>yield(k) be the resulting number of copies of die D k 14.</p><p>For each k = 1,... ,n 15.</p><formula xml:id="formula_5">in stock(k) ← in stock(k) + yield(k) − Q i (k) 16.</formula><p>Else N i ← 0 17. Return N i , i = 1,...,m by β the cost of reprogramming the dicing machine, we obtain the following integer linear program:</p><formula xml:id="formula_6">Minimize αN w + βN d p subject to ∑ C∈MCIS Q(C, D) f C ≥ N(D), ∀D ∈ D Nx C ≥ f C , ∀C ∈ MCIS N w = ∑ C∈MCIS f C N d p = ∑ C∈MCIS x C f C ∈ Z Z + , x C ∈ {0, 1} ∀ C ∈ MCIS</formula><p>where Q(C, D) is a constant which represents the number of copies of die D obtained from a wafer diced according to C and N = max D∈D N(D). This integer program can be optimally solved efficiently for practical SSWDP instances since there are only O(|MCIS|) variables and O(|D| + |MCIS|) constraints.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Dicing Multiple Batches</head><p>The SSWDP formulation is appropriate in the context of current shuttle services, which are focusing on serving the prototyping needs of independent design companies. In this context, there is no uncertainty on the number of prototype copies required for each project since these are specified by the customers before reticle design, and all dicing can be done in a single batch. However, for low-and medium production the exact customer demand may not be known a priori. When a single company owns all designs on the MPW, it is advantageous to manufacture a large wafer lot in anticipation of future customer demand, and then dice the wafers only in response to incoming customer orders. This motivates the study of the following on-demand version of the dicing plan optimization problem:</p><p>On-Demand Side-to-Side Wafer Dicing Problem (ODSSWDP). Given:</p><p>• A multi-project reticle floorplan with dies D = {D 1 ,... ,D n },</p><p>• A wafer shot-map, i.e., the position of reticle images on the wafer, and</p><p>• A sequence of customer orders Q i , 1 ≤ i ≤ m, where each Q i is an n-dimensional vector of nonnegative integers</p><p>Find: number of wafers N i to be diced after receiving each order Q i and corresponding dicing plans Such that:</p><p>• Each customer order is satisfied before receiving the next order, i.e., for every k ∈ {1,...,n} and j ∈ {1,...,m}, the number of copies of die D k that result from dicing the first ∑ j i=1 N i wafers is at least ∑ j i=1 Q i (k) (we assume that excess die copies obtained in a dicing step are stored at no cost and can be used to satisfy customer orders in subsequent step.)</p><p>• Dicing decisions are made on-demand, i.e., for every i, the number of wafers N i and the associated dicing plans are chosen without any knowledge of Q j for j &gt; i, and</p><p>• The total wafer and dicing cost is minimized.</p><p>Input: reticle floorplan with dies D = {D 1 ,...,D n }, wafer shot-map, customer orders Q i , 1 ≤ i ≤ m Output: number of wafers N i to be diced after receiving each order Q i 01. For each k = 1,...,n, in stock(k) ← 0, past demand(k) ← 0 02. For i = 1,...,m do 03.</p><p>For each k = 1,...,n 04.</p><formula xml:id="formula_7">past demand(k) ← past demand(k) + Q i (k) 05. If in stock(k) ≥ Q i (k) then 06. in stock(k) ← in stock(k) − Q i (k) 07. Q i (k) ← 0 08. Else 09. Q i (k) ← Q i (k) − in stock(k) 10. in stock(k) ← 0 11. If Q i 񮽙 = 0 12. α ← max{Q i (k)/past demand(k)| past demand(k) 񮽙 = 0}</formula><p>13. For each k = 1,...,n 14.</p><formula xml:id="formula_8">Q 񮽙 (k) ← max{0, 񮽙α · past demand(k)񮽙 − in stock(k)} 15.</formula><p>Run the SSWDP algorithm in Section 3.1 with production volumes given by Q 񮽙 16.</p><p>Let N i be the number of wafers required by the algorithm, and 17.</p><p>yield(k) be the resulting number of copies of die D k 18.</p><p>For each k = 1,...,n 19.</p><formula xml:id="formula_9">in stock(k) ← in stock(k) + yield(k) − Q i (k) 20.</formula><p>Else We remark that, although we refer to the demand vectors Q i as "customer orders", they may represent customer orders aggregated over certain periods of time (e.g., daily, weekly, etc.) In Section 4.2 we will use this flexibility to gauge the benefits of batching customer orders for dicing purposes.</p><formula xml:id="formula_10">N i ← 0 21. Return N i , i = 1,...,m</formula><p>A simple greedy ODSSWDP algorithm is given in <ref type="figure" target="#fig_2">Figure 3</ref>. The algorithm keeps track of the existing die stock, which changes after each dicing step. For every incoming customer order, the algorithm tries first to use existing dies to satisfy as much as possible of the order. If the order is fulfilled using existing stock, no additional wafers are diced. Otherwise, the SSWDP algorithm in Section 3.1 is invoked with the remaining order balance as required production volume to determine how many additional wafers to dice (and what dicing plans to use for them). Finally, the die copies thus obtained are used to complete the order, and any leftover copies are stored for future use.</p><p>The algorithm in <ref type="figure" target="#fig_2">Figure 3</ref> is attractive for its simplicity, but has a number of weaknesses. The SSWDP instances solved in Line 11 of the algorithm in <ref type="figure" target="#fig_2">Figure 3</ref> will typically require only a few wafers. This means that a large fraction of the resulting die copies will end up being stocked for future use. These die are chosen by the SSWDP algorithm without considering the already existing stock or the demand trends that can be inferred from past customer orders. An improved ODSS-WDP algorithm correcting these weaknesses, which we call "history-based", is given in <ref type="figure" target="#fig_3">Figure 4</ref>. In addition to tracking the existing stock, the improved algorithm also tracks the past order history. When a customer order cannot be fulfilled using the existing stock, instead of calling the SSWDP algorithm with production volumes given by the remaining balance, we call it with a vector of production volumes given by the past demand scaled down as much as possible while still ensuring that we can satisfy the remaining order balance, and further adjusted by subtracting existing stock quantities (Lines 12-14).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Experimental Results</head><p>To evaluate the performance and scalability of the proposed algorithms, we used six industry testcases from CMP <ref type="bibr">[1]</ref>, each having between 12 and 31 dies with varying sizes. For each die, we assumed upper and lower bounds on the production volume requirements as given in <ref type="table">Table 1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Reticle Design</head><p>We included in our comparison several floorplans:</p><p>• The industry floorplan designed by CMP engineers (CMP);</p><p>• The floorplan obtained by running the hierarchical quadrisection algorithm in <ref type="bibr" target="#b4">[6]</ref> (HQ) with production volumes set to the median point of the expected distribution, i.e., to the average between the minimum and the maximum expected customer orders;</p><p>• The floorplan obtained by running the simulated annealing algorithm in <ref type="figure" target="#fig_1">Figure 2</ref> driven by the uniform, respectively normal distributions for customer orders (SA-unif and SA-norm); and</p><p>• The floorplans obtained by running the simulated annealing algorithm with cloning, using an initial number of clones which is proportional to the average production volume (SA-clone1), respectively to the square root of the average production volume (SA-clone2). In these versions of the algorithm we used a simpler SA objective instead of the Monte Carlo simulation used in SA-unif and SA-norm, namely the number of wafers needed to satisfy the average production volumes. <ref type="table" target="#tab_3">Table 2</ref> gives the observed average and standard deviation of the number of wafers required to fulfill 100 random production requirement vectors generated for each die according to uniform, respectively normal probability distributions. Dicing was done in all cases using the integer linear programming SSWDP algorithm in Section 3.1 with α = 1 and β = 0. For comparison, we include in the table the observed average and standard deviation for the number of wafers obtained by independently running the hierarchical quadrisection algorithm of <ref type="bibr" target="#b4">[6]</ref> for each of the 100 random production volume requirements (HQ * ). HQ * can be used to estimate the reticle floorplanning suboptimality incurred due to demand uncertainty, since in its computation we allow selecting an individual floorplan for every production volume vector. (Note that HQ * is not a true lower-bound since HQ does not guarantee optimality.) The results show that the two cloning based SA algorithms give the best results, often better even than HQ * , despite the unfair advantage of the latter. The cloning algorithm which starts with a number of clones proportional to the square root of average production volumes gives best results, improving over CMP floorplans by an average of 33% for production volumes generated from uniform distributions, and by an average of 28% for production volumes generated from normal distributions. Most of the improvement is due to the use of cloning, as can be seen from the fact that the SA algorithms without cloning give significantly worse results (although still <ref type="figure">Figure 6</ref>: Four quadrant dicing: the wafer is first divided into four quadrants, then each quadrant is diced independently using side-to-side cuts.</p><p>better than CMP when driven by the correct distribution).</p><p>In <ref type="figure" target="#fig_4">Figure 5</ref> we explore another measure of floorplan robustness. Here, we plot the tradeoff curve between the number of wafers and the probability of satisfying customer orders generated from the underlying distributions. To efficiently determine these tradeoffs, we used the following Monte-Carlo simulation:</p><p>• First, we generated a large number Q of random production volume vectors according to the given distributions.</p><p>• Then, for each production volume vector q we computed the minimum number of wafers N(q) required to satisfy it using the integer linear programming SSWDP algorithm in Section 3.1</p><p>• Finally, for every number of wafers N, we estimate the probability of satisfying an arbitrary customer order as the ratio between |{q | N(q) ≤ N}| and Q.</p><p>The tradeoff curves show that cloning based floorplanning yields the highest success probability over the entire range of number of wafers. Besides showing the intrinsic qualities of a selected multi-project floorplan, estimates of success probability in <ref type="figure" target="#fig_4">Figure 5</ref> could be useful, e.g., in determining how many wafers to manufacture in order to maximize expected profit.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">On-Demand Wafer Dicing</head><p>We have implemented in the C++ language the greedy and history-based algorithms for on-demand side-toside wafer dicing as described in Section 3.2. In the   basic ODSSWDP formulation we assumed that side-toside cutting is done on whole wafers. As reported in <ref type="bibr" target="#b4">[6]</ref>, when production volumes are known, significant dicing yield improvement can be achieved by first partitioning each wafer into four equal quadrants, then dicing each quadrant independently using side-to-side cuts ( <ref type="bibr" target="#b4">[6]</ref>, see <ref type="figure">Figure 6</ref>). To explore the advantages of quadrant-based methods in an on-line dicing environment we have also implemented quadrant-based versions of the two algorithms in Section 3.2.</p><p>To compare the quality of the two on-demand dicing algorithms, we generated for each die 100 individual customer orders with quantities coming from either a uniform or a normal distribution, and then randomly permuted their arrival order. <ref type="table">Tables 3 and 4</ref> give (in the columns for batch size of 1) the number of wafers required by the two algorithms for each of the 6 industry testcases when run on individual customer orders. To gauge the benefits of batching customer orders we also include in the two tables results obtained by running the algorithms on "batched orders" that combine groups of 10 or 100 consecutive customer orders. Finally, to estimate the overhead in the number of wafers due to demand uncertainty during dicing, we ran the two algorithms on a single batch combining all orders (both algorithms reduce to running the integer programming SSWDP algorithm in Section 3.1 on the production volume totals in this case, and therefore both result in the same number of wafers).</p><p>The results show that, compared to the simple greedy algorithm, the history-based algorithm reduces wafer overhead by an average of 19.2% (respectively 8.9%) for the uniform (normal) distributions. This consistent improvement suggests that the proposed history tracking scheme is effective in "learning" the demand distribution. As expected, regardless of the algorithm used, batching leads to significant reduction in wafer overhead, i.e., the required number of wafers required by on-demand dicing gets closer to the number of wafers required when knowing all orders in advance. Somehow surprisingly, the results show that the more complex quadrant-based dicing does not help on-line dicing unless using large batch sizes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusions and Future Work</head><p>In this paper we have explored the use of multiple project wafers for production under demand uncertainty. We have proposed novel algorithms and methodologies for robust multi-project reticle floorplanning and ondemand wafer dicing, and have shown that our algorithms come close in solution quality to algorithms relying on a priori knowledge of production volumes. In ongoing work we investigate the use of multi-layer reticles for further reductions in manufacturing costs.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: (a) 2-level hierarchical quadrisection floorplan mesh. (b)-(c) Two different floorplans obtained from different assignments of dies to mesh regions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Hierarchical quadrisection floorplanning algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Greedy ODSSWDP algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: History-based ODSSWDP algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Tradeoff curves between the probability of satisfying an order and the number of wafers for CMP testcase "Ind5" with production volumes generated from the (a) uniform and (b) normal distributions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>N(D) is the random variable denoting the vol- ume requirement for die D, and Q(D) is the number of copies of die D per wafer for the evaluated floorplan.</head><label></label><figDesc></figDesc><table>In 
our implementation we use a Monte-Carlo simulation to 
evaluate (1): we generate 100 random production vol-
ume vectors N according to the given distributions, and 
then average max D∈S 

񮽙 

N(D) 
Q(D) 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head>Table 2 :</head><label>2</label><figDesc>Average and standard deviation of the number of wafers assuming fixed whole wafer dicing.</figDesc><table></table></figure>
		</body>
		<back>
			<div type="annex">
			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Chips on Wafers, or packing rectangles into grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Andersson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Levcopoulos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gudmundsson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Preliminary version in Proc. WADS (Workshop on Algorithms and Data Structures)</title>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="95" to="111" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Multi-layer and multi-product masks: cost reduction methodology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Balasinski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 24th BACUS Symp. on Photomask Technology, Proc. SPIE</title>
		<meeting>24th BACUS Symp. on Photomask Technology, . SPIE</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="volume">5567</biblScope>
			<biblScope unit="page" from="351" to="359" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Effective Placement of Chips on a Shuttle Mask</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">C</forename><surname>Lynn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SPIE</title>
		<meeting>SPIE</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="volume">5130</biblScope>
			<biblScope unit="page" from="681" to="688" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Multi-Project Reticle Floorplanning and Wafer Dicing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">B</forename><surname>Kahng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">I</forename><surname>Mandoiu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zelikovsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. Intl. Symp. on Physical Design</title>
		<imprint>
			<biblScope unit="page" from="70" to="77" />
			<date type="published" when="2004-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Yield-driven multi-project reticle design and wafer dicing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">B</forename><surname>Kahng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">I</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zelikovsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 25th Annual BACUS Symposium on Photomask Technology</title>
		<meeting>25th Annual BACUS Symposium on Photomask Technology</meeting>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Reticle Floorplanning With Guaranteed Yield for Multi-Project Wafers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">B</forename><surname>Kahng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Reda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. International Conference On Computer Design</title>
		<meeting>International Conference On Computer Design</meeting>
		<imprint>
			<date type="published" when="2004-10" />
			<biblScope unit="page" from="106" to="110" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The IC industry heading to the $10 million photomask</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lapedus</surname></persName>
		</author>
		<ptr target="http://www.siliconstrategies.com/story/OEG20021007S0053" />
	</analytic>
	<monogr>
		<title level="m">Semiconductor Business News</title>
		<imprint>
			<date type="published" when="2002-10-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Multiproject Wafers: not just for million dollar mask sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">D</forename><surname>Morse</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SPIE</title>
		<meeting>SPIE</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="volume">5043</biblScope>
			<biblScope unit="page" from="100" to="113" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">WaterJet-Guided Laser Achieves Highest Die Fracture Strength</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Perrottet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-M</forename><surname>Buchilly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Richerzhagen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Kröninger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Fab International</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="157" to="159" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Shuttle Mask Floorplanning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Tian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">F</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Reich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SPIE</title>
		<meeting>SPIE</meeting>
		<imprint>
			<biblScope unit="volume">5256</biblScope>
			<biblScope unit="page" from="185" to="194" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A Multi-objective Floorplanner for Shuttle Mask Optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Tian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">Z</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D F</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SPIE</title>
		<meeting>SPIE</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="volume">5567</biblScope>
			<biblScope unit="page" from="340" to="350" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">CMP Aware Shuttle Mask Floorplanning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Tian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">Z</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D F</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Asia South Pacific Design Automation Conference (ASPDAC)</title>
		<meeting>Asia South Pacific Design Automation Conference (ASPDAC)</meeting>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A Comparative Study on Dicing of Multiple Project Wafers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-C</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R.-B</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Symp. on VLSI</title>
		<meeting>IEEE Symp. on VLSI</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="314" to="315" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Reticle Floorplanning and Wafer Dicing for Multiple Project Wafers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-C</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R.-B</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Intl. Symposium on Quality Electronic Design</title>
		<meeting>Intl. Symposium on Quality Electronic Design</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="610" to="615" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
