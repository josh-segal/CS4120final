<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:53+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Color Gamut Matching for Tiled Display Walls</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2003">2003</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Grant</forename><surname>Wallace</surname></persName>
							<email>gwallace@cs.princeton.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Princeton University</orgName>
								<address>
									<postCode>08544</postCode>
									<settlement>Princeton</settlement>
									<region>NJ</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Han</forename><surname>Chen</surname></persName>
							<email>chenhan@cs.princeton.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Princeton University</orgName>
								<address>
									<postCode>08544</postCode>
									<settlement>Princeton</settlement>
									<region>NJ</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kai</forename><surname>Li</surname></persName>
							<email>li@cs.princeton.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Princeton University</orgName>
								<address>
									<postCode>08544</postCode>
									<settlement>Princeton</settlement>
									<region>NJ</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Color Gamut Matching for Tiled Display Walls</title>
					</analytic>
					<monogr>
						<title level="j" type="main">Eurographics Workshop on Virtual Environments</title>
						<imprint>
							<date type="published" when="2003">2003</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>(according to ACM CCS): I32 [Graphics Systems]: Distributed/Network Graph- ics I33 [Computer Graphics]: Picture/Image Generation-Display Algorithms</term>
					<term>Viewing Algorithms I37 [Three- Dimensional Graphics and Realism]: Color</term>
					<term>Shading</term>
					<term>Shadowing</term>
					<term>and Texture</term>
				</keywords>
			</textClass>
			<abstract>
				<p>This paper presents a non-parametric full-gamut color matching algorithm. Color matching is important for the seamless appearance of tiled displays. In particular we address the case where the tiled display is composed of different types of projectors or DLP projectors with white enhancement. White enhancement produces a non-additive color space that is difficult to model. We perform our calibration using an inexpensive colorimeter as opposed to a highly accurate spectroradiometer. Our results show that we can achieve good color balance with 1.47% variance between projectors. We present a method for applying this color gamut mapping in real-time on the newest commodity graphics cards.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Large format high-resolution display devices are becoming increasingly important for scientific visualization, industrial design and entertainment applications. A popular approach to building such displays is the projector array 3 , where several commercially available projectors are tiled to create a seamless, high-resolution display surface, as shown in Tiled projector arrays require precise calibration in order to appear seamless. There are three main aspects of projector calibration: geometric alignment, luminance balancing, and color matching. Geometric alignment is needed to remove the discontinuity caused by mis-aligned projectors in the overlapped regions. Several vision based software solution 1, 2, 7, 10 were proposed to address this problem. However, even with sub-pixel accurate geometric alignment, photometric imbalance within and among the projectors can still cause obvious and severe visual artifacts, thus reducing the overall effectiveness of such a display. <ref type="bibr">Majumder et al.</ref> proposed the use of Luminance Attenuation Map (LAM) to equalize the luminance output across the display wall <ref type="bibr" target="#b5">6</ref> . Majumder et al. <ref type="bibr" target="#b4">5</ref> presented a generalized description of the problem and proposed a method to partially address the issue of color matching through an independent intensity matching on red, green and blue channels of all projectors. Stone 9 presents an algorithm for finding the standard gamut of LCD projectors and gives a characterization of the problems DLP projectors present in color balancing. Stone also proposes Independent Channel Balancing (ICB). As noted in Stone <ref type="bibr" target="#b8">9</ref> , channel balancing assumes chromaticity constancy and an However, for a display wall containing DLP projectors or LCD projectors from different vendors, color matching becomes critical. First of all, the chromaticity values of the RGB primaries of projectors from different vendors are typically different. Second, commodity single-chip DLP projectors use a clear channel on the color wheel to boost the light output for bright colors <ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b7">8</ref> . This results in a non-additive gamut, as shown in <ref type="figure" target="#fig_2">Figure 2</ref>, which is no longer a parallelepiped in the CIE XYZ space, and may even be a concave polyhedron. As such a matrix transformation will not work and a generalized mapping is needed.</p><p>Another issue in color matching is the gamma correction of the projectors. Previous luminance balancing and color matching methods rely on the linearity of the color transfer function of projectors. This means "gamma correcting" each projector to have a 1.0 gamma. Although this is mathematically simpler to deal with, it is not necessarily visually appealing, as the human visual system is more adapted to a gamma of 1.8 to 2.2. It also causes lost precision for brighter colors because of limited bits for the Look-Up <ref type="table">Table (LUT).</ref> This paper presents a practical solution for color matching display walls made of DLP projectors or mixed vendor/technology projectors. We use an inexpensive colorimeter to measure the color gamut of each individual projector. We then use a non-parametric model to find a color mapping for each projector to achieve a common color gamut. Finally, we propose implementation methods for applying the color map along with previously proposed geometric alignment and luminance balancing in real-time with graphics hardware. The non-parametric model enables us to color match projectors with different primaries and/or nonadditive gamuts. When homogeneous LCD projector arrays are used, a linear model can also be extracted from the data, such as that suggested in 9 . The non-parametric color matching method is also able to preserve the gamma value.</p><p>The remainder of the paper is organized as follows. Section 2 studies the color characteristics of DLP projectors and discusses the challenges in color matching them. Section 3 presents our non-parametric color matching system for display walls. Some experimental results are shown in section 4. Section 5 concludes the paper, and suggests future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Color Matching DLP Projectors</head><p>In this section, we first define the general color matching process. We then discuss the challenges involved in dealing with commodity DLP projectors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Generalized Color Matching Process</head><p>The color reproduction process of a display system can be described as follows. <ref type="bibr">First, an RGB triple (r, g, b)</ref> in the graphics frame buffer is converted to either an analog voltage or digital bits and sent to the projector. The projector then combines lights of three primary colors proportionally to form the desired color. Given the spectrum of the output light, we can calculate the tristimulus values (X,Y, Z), which reflect the response of a typical human visual system. The entire process can be characterized as a Color Transfer Function F : R 3 → R 3 , (X,Y, Z) = F(r, g, b). F maps a value (color) from RGB space to the CIE XYZ space.</p><p>The gamut of a display device is the set of all reproducible colors. Commodity graphics hardware typically have an 8-bit depth in each of the RGB channels, r, g, b ∈ <ref type="bibr">[0, 1, . . ., 255]</ref>. Hence, the gamut of a color transfer function F can be formally defined as</p><formula xml:id="formula_0">G(F) = {F(r, g, b)|r, g, b ∈ [0, 255]}.</formula><p>We call a gamut an additive gamut, if it satisfies that</p><formula xml:id="formula_1">F(r, g, b) = F(r, 0, 0) + F(0, g, 0) + F(0, 0, b).</formula><p>That is, the three RGB channels are independent of each other.</p><p>Further, if the device gamma is set to 1.0, the transfer function becomes linear. It can then be expressed as a ma-</p><formula xml:id="formula_2">trix transformation.   X Y Z   = 񮽙 f i j 񮽙   r g b   +   r 0 g 0 b 0   where [r 0 , g 0 , b 0 ] T is the constant black offset.</formula><p>When a device does not have an additive gamut or the gamma is not 1.0, there is no such matrix [ f i j ] that satisfies the mapping.</p><p>For a tiled display to look seamless, all projectors in the system must reproduce colors in the same way, that is, they should all share a common color transfer function. However, this is usually not true in practice. Thus, there exists the need to color match the projectors.</p><p>Without access to the graphics card and projector hardware, color matching can be achieved through the use of a color map M :</p><formula xml:id="formula_3">[0, 1, . . ., 255] 3 → [0, 1, . . ., 255] 3 , (r 񮽙 , g 񮽙 , b 񮽙 ) = M(r, g, b)</formula><p>. The color map is applied to pixels before they are sent to the display. The equivalent color transfer function of the system can now be expressed as F • M. Given n projectors in a tiled display, each with a color transfer function of F i , the color matching problem can be formally stated as: find</p><formula xml:id="formula_4">M i for i = 1, . . ., n, such that F i • M i = F j • M j , ∀i, j ∈ {1, . . ., n}.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">Characteristics of DLP Projectors</head><p>LCD projectors usually have an additive gamut. Therefore, the color matching can be easily achieved through an 3 × 3 matrix multiplication in the RGB space, provided that the gamma is "corrected" to 1.0. DLP projectors can be more difficult to color match than LCD projectors. Commodity single-chip DLP projectors use a spinning color wheel with primary color filters to create color channels in a time sharing fashion. They commonly use a method called "white enhancement" to increase the contrast ratio of the projector-in addition to the Red, Green, and Blue filters, a fourth White (or Clear) filter is added to the color wheel, which passes the full spectrum of the projector bulb. This is similar to the CMYK color printing process, where Cyan, Magenta, Yellow, and Black inks are used. The DLP projector chip controls how much white to add based on a function of the input RGB pixel value. As white is added, output RGB values are reduced correspondingly. Current DLP chips use a step function, adding white in 4 discrete increments. <ref type="bibr" target="#b3">4</ref> One result of using white enhancement is that DLP projectors will exhibit different white points even after indepedent channel balancing is performed. This is due to the different spectral outputs of the bulbs, which is the result of either manufacturing tolerances or bulb decay over its lifetime.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Wallace et al / Color Gamut Matching</head><p>The color gamut of a typical DLP projector is shown in <ref type="figure" target="#fig_2">Figure 2</ref>. As can be seen from the figure, the gamut does not form a parallelepiped in XYZ space and so is not an additive gamut. The gamut becomes stretched towards the white point due to the white enhancement. In order to map a gamut like this to XYZ space a non-parametric mapping is needed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Non-parametric Color Matching System</head><p>As described in the previous section, commodity DLP projectors typically have non-additive color gamuts. Even though it is possible to model a DLP projector gamut with a piece-wise linear model, the underlying parameters are device dependent and proprietary to the manufacturer. Therefore, we treat the color transfer function (X,Y, Z) = F(r, g, b) of the projectors as a black box. For simplicity, we assume monotonicity of F for each variable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Measuring Color Transfer Function</head><p>With a non-parametric model, one has to measure the XYZ value for each of the 2 24 possible input RGB value combinations. However, this is infeasible to implement. Practically, we sample F at a lower spatial frequency and use interpolation to fill in the values in between.</p><p>Because of the gamma curve, F changes slowly at the low end of RGB, but increases faster as RGB values grow. To accommodate this, we use a non-uniform sampling grid, with denser sampling intervals at the high end of input RGB values.</p><p>We use a colorimeter to measure the chromaticity value of an input RGB value. The colorimeter returns the x, y, z, and Y value of the input color, and we calculate the X, Y , Z value as follows</p><formula xml:id="formula_5">X = xY /y Y = Y Z = zY /y</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Standard Color Transfer Function</head><p>Assuming monotonicity of a color transfer function F, which should be true when the projector's brightness and contrast settings are not saturated, its gamut G(F) is the volume in XYZ space bounded by the following six surfaces</p><formula xml:id="formula_6">S 1 = {F(0, g, b)|g, b ∈ [0, 255]} S 2 = {F(255, g, b)|g, b ∈ [0, 255]} S 3 = {F(r, 0, b)|r, b ∈ [0, 255]} S 4 = {F(r, 255, b)|r, b ∈ [0, 255]} S 5 = {F(r, g, 0)|r, g ∈ [0, 255]} S 6 = {F(r, g, 255)|r, g ∈ [0, 255]}</formula><p>We use a triangle mesh generated from the sampled F data to form a polyhedral representation of G.</p><formula xml:id="formula_7">Let G i = G(F i )</formula><p>be the color gamut of the ith projector. The common color gamut Gc that can be reproduced by all projectors is therefore the intersection of all G i :</p><formula xml:id="formula_8">Gc = G 1 ∩ G 2 ∩ · · · ∩ Gn</formula><p>By applying the polyhedron intersection algorithm, we obtain a polyhedron representing Gc. Note that, because G i can be concave, as in the case of DLP projectors, the intersection operation might produce a set of disjoint polyhedrons. In this case, we simply use the polyhedron with the largest volume as Gc, and discard the rest. This is dictated by the implied continuity requirement of Fc.</p><p>c 񮽙 The Eurographics Association 2003.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Wallace et al / Color Gamut Matching</head><p>Once we have the common color gamut Gc, we can find a standard color transfer function Fs. The goal is to maximize the volume of G(Fs), with the constraint that G(Fs) ⊆ Gc.</p><p>To describe the algorithm of finding Fs, we first define a projective transform H : R 3 → R 3 .</p><formula xml:id="formula_9">x 񮽙 = h 11 x + h 12 y + h 13 z + h 14 h 41 x + h 42 y + h 43 z + 1 y 񮽙 = h 21 x + h 22 y + h 23 z + h 24 h 41 x + h 42 y + h 43 z + 1 z 񮽙 = h 31 x + h 32 y + h 33 z + h 34 h 41 x + h 42 y + h 43 z + 1</formula><p>We call two color transfer functions projectively related, if there exists a projective transform H, such that</p><formula xml:id="formula_10">F 1 = H • F 2</formula><p>The algorithm is then described as below 1 Pick one of the color transfer functions, say F 1 . 2 For each F i , find an H i such that the L2 distance of F 1 and</p><formula xml:id="formula_11">H i • F i is minimized. 3 Let ¯ F = 1 n ∑ n i=1 (H i • F i ) 4</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Maximize the volume of G(Hs • ¯ F), with respect to Hs and with the constraint that G(Hs • ¯ F) ⊆ Gc 5 The standard color transfer function is Fs = Hs,max • ¯ F</head><p>To put the algorithm in plain English, we first obtain a starting color transfer function ¯ F by averaging F i normalized to the shape of F 1 , and then find the standard (common) color transfer function by warping ¯ F, and maximizing its volume with the constraint that it has to be contained by the common color gamut Gc.</p><p>Starting from the average shape of all color gamuts allows us to preserve all the properties of the original color transfer function, such as its gamma.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Generating Color Maps</head><p>In order to emulate the standard color transfer function ¯ F on each of the projectors, a color map M is applied on the imageries before they are displayed, as discussed in Section 2.1. For a color map to be feasible, it has to satisfy the following condition</p><formula xml:id="formula_12">∀(r, g, b) ∈ [0, 255] 3 , M(r, g, b) ∈ [0, 255] 3</formula><p>That is, the color map never produces out-of-gamut colors. The goal of the color map is such that</p><formula xml:id="formula_13">F i • M i = Fs.</formula><p>Therefore,</p><formula xml:id="formula_14">M i = F −1 i • Fs</formula><p>Note that:</p><formula xml:id="formula_15">∀(r, g, b) ∈ [0, 255] 3 , Fs(r, g, b) ∈ G(Fs) ⊆ Gc ⊆ G i Thus, M i (r, g, b) ∈ F −1 i (Fs(r, g, b)) ∈ [0, 255] 3 .</formula><p>That is, M i is indeed feasible with the definition of Fs.</p><p>Because we can only sample F i at some discrete points, interpolation is needed when a value is not directly sampled in F i . The final color map is a discretized version of M i defined on [0, 1, . . ., 255] 3 to itself.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.">Applying a Color Map with Graphics Hardware</head><p>Applying the color map in CPU is a costly operation, which precludes the possibility of real-time software color matching. The advance in graphics hardware, especially the programmable Pixel Shader in DirectX or Texture Shader in OpenGL, has enabled us to apply the color mapping in the graphics card.</p><p>To achieve this, we load the discretized color map M as a volume texture. For each pixel, we treat its (r, g, b) color value as a volume texture coordinate (u, v, w), and sample M to find out the mapped color. This operation can be implemented with the texreg2rgb instruction available in the Microsoft DirectX Pixel Shader Language version 1.2 and 1.3.</p><p>As mentioned in Section 1, color matching is one aspect of the overall projector calibration process. To combine the geometric alignment, luminance balancing and color matching together, we propose the following rendering architecture.</p><p>1 3D scenes are rendered to a texture. In the case of 2D applications, images or video frames are loaded into a texture buffer. This is the first texture stage. 2 The discretized color map is loaded into a volume texture, and used as the second texture stage. 3 The luminance map is loaded into texture as the third texture stage. 4 Set up the first texture combiner to copy the first texture in decal mode. 5 Set up the second texture combiner to sample the volume texture using the output of the first stage as texture coordinates. 6 Set up the third texture combiner to multiply the output of the second stage with the third texture. 7 Set up the view and projection matrices to represent the geometric pre-warping. 8 Draw a rectangle.</p><p>The corresponding pixel shader is shown in <ref type="figure" target="#fig_3">Figure 3</ref>.</p><p>Our tests, presented in Section 4.2.3, indicate that the latest graphics cards, such as the NVIDIA GeForce4 Ti4600, can support such operations for full frame images at real time. Future versions of the Pixel Shader language will allow more instructions, flow control and floating point precision color. With these additions, we expect that higher quality calibration can be achieved. </p><note type="other">c 񮽙 The Eurographics Association 2003. Wallace et al / Color Gamut Matching ps.1.2 // t0 is the rendered texture tex t0 // t1 is the color map texreg2rgb t1, t0 // t2 is the luminance map tex t2 mov r1, t1 mul r0, t2, r1</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Implementation and Results</head><p>In this section we compare our Full-Gamut Color Matching algorithm (referred to as FGCM afterwards) with the Independent Channel Balancing algorithm (refered to as ICB afterwards) for two test cases. In the first test case we use a uniform array of 4 DLP projectors, and in the second case we use a mixed array consisting of one DLP projector and one LCD projector. For these tests we implemented the FGCM algorithm in Matlab, and for comparison we implemented an ICB algorithm, such as that described in <ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b8">9</ref> . Section 4.1 details the measurement method and metrics we use to measure the accuracy of these algorithms and Section 4.2 gives experimental results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Experimental Setup</head><p>Our color matching experiments consist of three steps. First we measure a subsample of the color gamut of each projector. Next we compute a color map using either FGCM or ICB. Finally we apply the appropriate map to each projector and re-measure the color gamuts. We then compute an error metric to determine the accuracy of the transformations.</p><p>In the first step of our experiment we measure the color gamut of the projectors. To do this we use an inexpensive colorimeter, the Sequel Imaging Chroma IV, which reads the color response in CIE XYZ space. We subsample the projector RGB domain with a 32 increment for RGB values less than 128, and a 16 increment for values greater than 128. This gives us 13 points in each of the R, G, and B channels, that is, <ref type="bibr">0,</ref><ref type="bibr">32,</ref><ref type="bibr">64,</ref><ref type="bibr">96,</ref><ref type="bibr">128,</ref><ref type="bibr">144,</ref><ref type="bibr">160,</ref><ref type="bibr">176,</ref><ref type="bibr">192,</ref><ref type="bibr">208,</ref><ref type="bibr">224,</ref><ref type="bibr">240,</ref><ref type="bibr">255</ref>. This results in 13 3 (2197) samples in total. The result of such a sampling is visualized in <ref type="figure" target="#fig_2">Figure 2</ref>.</p><p>These samples are then fed into our Matlab implementations. These implementations use linear interpolation on the subsampled data when performing the color matching. The FGCM algorithm produces a color map M for each projector, and the ICB algorithm generates three independent LUTs for each projector.</p><p>After the color maps have been calculated, we apply them and re-measure the color gamuts. Our color map M is applied as detailed in Section 3.4 and the ICB output is applied by loading it into the per-channel Look-Up Tables of the graphics cards. We measured the color matched projectors again using the Sequel Chroma IV colorimeter, subsampling with a 32 increment for each of the input RGB values resulting in 9 3 (729) samples in total.</p><p>We use the sampled data from the color matched projectors to generate some error metrics. Our primary metric is the average deviation of the XYZ values of a test color from its average. This can be described as follows. Consider a color matching done over n projectors, and m test colors c i = (r i , g i , b i ), i = 1, . . ., m. Let S j be the set of measured XYZ values for all test colors on projector j, where j = 1, . . ., n.</p><formula xml:id="formula_16">S j = {s i j = (X i j ,Y i j , Z i j ) = (F j •M j )(r i , g i , b i )|i = 1, . . ., m}.</formula><p>First we define the average response of a test color as</p><formula xml:id="formula_17">¯ s i = 1 n n ∑ j=1 s i j .</formula><p>Then the deviation from the average is</p><formula xml:id="formula_18">E i = 1 n n ∑ j=1 |s i j − ¯ s i |.</formula><p>We can then normalize this set to obtain the percentage deviation at each sample point as</p><formula xml:id="formula_19">e i = E i /| ¯ s i |</formula><p>And finally we can derive the average of the deviations as a unified metric.</p><formula xml:id="formula_20">¯ E = 1 m m ∑ i=1 E i ¯ e = 1 m m ∑ i=1 e i</formula><p>In Section 4.2 when refer to E i and e i as the absolute error and percentage error respectively for a test color c i . When we give an overall error metric we are referring to either ¯ E or ¯ e as the average deviation from the average expressed as an absolute value or percentage.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Results</head><p>We compare our FGCM algorithm against the ICB algorithm for two test cases: a uniform array of DLP projectors, and a mixed array of DLP and LCD projectors. These cases are presented in Sections 4.2.1 and 4.2.2.</p><p>In these cases, the overall color matching error will be a summation of three types of error: measurement consistency error, rounding error, and algorithmic error. Measurement c 񮽙 The Eurographics Association 2003.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Wallace et al / Color Gamut Matching</head><p>consistency error is error introduced by the accuracy limitations of the colorimeter and by temporal and spatial variations in measuring the system. Rounding error is the error introduced when rounding a floating point mapping function into an integer range of <ref type="bibr">[0,</ref><ref type="bibr">255]</ref>. Algorithmic error is the accuracy limitations of a particular color matching algorithm. In our FGCM system, this error is mostly due to interpolation error. We estimate the measurement consistency error to be on the order of 0.4%, based on measuring one projector multiple times. The rounding error is estimated at 0.3%. Since we must measure the system twice, once to find the response of the system, and once to measure the result of color matching, we expect the non-algorithmic error to be on the order of (0.4 2 + 0.3 2 + 0.4 2 ) 1 2 = 0.64%. So the numbers reported in Sections 4.2.1 and 4.2.2 will contain an inherent system error of about 0.6%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1.">Case 1: Uniform DLP Projector Array</head><p>For our first test case we compare the results of color balancing on four Compaq MP1800 DLP projectors using both our FGCM algorithm and the ICB algorithm. These DLP projectors exhibit the characteristic white enhancement nonadditive gamuts as shown in <ref type="figure" target="#fig_2">Figure 2</ref>. As described in Section 2, non-additive gamuts make it difficult to match the projector colors with an ICB approach. We present the results of our tests in both figure and table form.   <ref type="figure" target="#fig_4">Figure 4a</ref> shows the gamuts after the FGCM algorithm has been applied. Notice that the RGB channels match closely and the white points are well aligned. <ref type="figure" target="#fig_4">Figure 4b</ref> shows the projector gamuts after ICB is performed. Notice that the red, green and blue channels match well, but there is still a large discrepancy in the white points due to the non-additive gamut. <ref type="figure" target="#fig_4">Figure 4c</ref> shows the uncalibrated color gamut of the 4 projectors. Notice how the white points are stretched due to white enhancement and that none of the RGB channels or the white points match. <ref type="figure" target="#fig_4">Figure 4d-4f</ref> show the respective CIE x-y plot for the (R,G,B,C,Y,M,W) colors. One thing to notice is that even in the uncalibrated <ref type="figure" target="#fig_4">Figure 4f</ref> the red, green and blue chromaticity values match well among the four projectors. This is because they are of the same model and built within certain tolerances. But the CYMW points are not well aligned due to the non-additive gamut. As can be seen in <ref type="figure" target="#fig_4">Figure 4e</ref>, ICB does not bring CYMW into alignment. Only <ref type="figure" target="#fig_4">Figure 4d</ref> which shows FGCM was able to align the CYMW points. <ref type="table" target="#tab_0">Tables 1 and 2</ref> show the color matching error among the projectors. <ref type="table" target="#tab_0">Table 1</ref> shows the percentage error e i for 8 test colors (R,G,B,C,Y,M,K,W) and the overall percentage error ¯ e in the row labeled "total". <ref type="table" target="#tab_1">Table 2</ref> shows the same results  but gives the absolute error value E i . Each table shows three columns. The first column labeled "FGCM" is the results from our full-gamut matching algorithm. The second column "ICB" is for the independent channel balancing algorithm and "None" is when no color matching is done. As can be seen, our algorithm has a 1.47% error overall compared to 3.40% for channel balance and 11.12% for no correction. But the effect of gamut matching really becomes obvious near the white point where FGCM has a 1.11% error compared to 8.95% for ICB.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2.">Case 2: Mixed DLP and LCD Projector Array</head><p>Our second test case consists of a mixed array of one DLP projector and one LCD projector. We used a Compaq MP1800 DLP projector and a Toshiba TLP511U LCD projector. Mixed arrays of projectors are challenging to color match because the chromaticity of the RGB primaries are likely to be different compared to projectors of a single brand or model. This is true in our test case as can be seen in <ref type="figure">Fig- ure 5f</ref> which shows a CIE x-y plot of the two projectors. Notice that the chromaticity values of the RGB primaries vary substantially between the two models of projectors.</p><p>We again apply our FGCM algorithm and the ICB algorithm to this array of projectors. We present results in the same format as those presented in Section 4.2.1. <ref type="figure">Figure 5a</ref>5c show the gamut plots for the three cases: FGCM, ICB, c 񮽙 The Eurographics Association 2003.   show that the uncalibrated projectors have significantly different RGB chromaticity which the ICB algorithm is unable to accommodate. The FGCM algorithm is able to align these points, as seen in <ref type="figure">Figure 5d</ref>. <ref type="table" target="#tab_2">Tables 3 and 4</ref> show the color matching error values reported as e i and E i just as in Section 4.2.1. In this case FGCM is able to achieve a 1.27% overall error compared to 6.21% for ICB and 12.95% for uncalibrated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Wallace et al / Color Gamut Matching</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.3.">Performance Results</head><p>We applied our gamut matching algorithm on two of the latest commodity graphics cards: the ATI Radeon 9700 Pro and the Leadtek GeForce4 Ti4600. We tested the performance on an image viewing application we use for our tiled display. Two test PC's are used. The first PC has a 550 MHz Pentium III processor with the GeForce4 card. The second PC has a 3.06 GHz Pentium 4 processor with the ATI Radeon card. Four different shaders are used:</p><p>A applies only the geometric alignment B applies the geometric alignment with an alpha mask C applies the geometric alignment with the color map D applies the geometric alignment, alpha mask and the color map, as described in Section 3.4</p><p>The frame rate of the image viewer application is shown in <ref type="table" target="#tab_4">Table 5</ref>. It is clear that there is no significant performance hit on either card from applying FGCM.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Conclusion and Future Work</head><p>Color balancing is critical for the seamless appearance of tiled display walls. Tiled displays composed of projectors from different vendors (mixed arrays) or DLP projectors can present particular challenges when color matching because of chromaticity variation in the red, green and blue channels or due to white enhancement. We have proposed and implemented a non-parametric gamut matching algorithm that can be applied in real time on the latest commodity graphics cards. Our algorithm is able to achieve a measured color uniformity of 1.47% overall compared to 3.40% for an ICB algorithm on a DLP projector array. For mixed DLP/LCD projector arrays, our algorithm is able to outperform the ICB algorithm by a factor of 5, reducing the overall average error from 6.21% to 1.27%.</p><p>Our future work is to investigate the proper integration of luminance balancing and color matching. Using an alpha mask for luminance balancing implicitly requires a linear color transfer function and a 1.0 gamma value. How to apply the alpha mask while preserving the projector gamma and a non-parametric color mapping still represents a challenge.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Acknowledgements</head><p>The Princeton Scalable Display Wall project is supported in part by Department of Energy grant DE-FC02-99ER25387, by NSF Infastructure Grant EIA-0101247, by NSF Next Generation Software Grant ANI-9906704, by NCSA Grant </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Princeton Scalable Display Wall. There are 24 DLP projectors giving an overall resolution of 6000×3000.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Color Gamut of a Typical DLP Projector</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: PixelShader code for applying the color map, luminance map, and geometric warping</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 visualizes the results of these transformations.</head><label>4</label><figDesc>Figure 4 visualizes the results of these transformations. Figure 4a-4c show an outline of the color gamut of the four projectors. The six faces of the gamut are created from the 8 sample points (R,G,B,C,Y,M,K,W). The four projectors are represented by the four different line style plots. Figure 4a shows the gamuts after the FGCM algorithm has been applied. Notice that the RGB channels match closely and the white points are well aligned. Figure 4b shows the projector gamuts after ICB is performed. Notice that the red, green and blue channels match well, but there is still a large discrepancy in the white points due to the non-additive gamut. Figure 4c shows the uncalibrated color gamut of the 4 projectors. Notice how the white points are stretched due to white enhancement and that none of the RGB channels or the white points match. Figure 4d-4f show the respective CIE x-y plot for the (R,G,B,C,Y,M,W) colors. One thing to notice is that even in the uncalibrated Figure 4f the red, green and blue chromaticity values match well among the four projectors. This is because they are of the same model and built within certain tolerances. But the CYMW points are not well aligned due to the non-additive gamut. As can be seen in Figure 4e, ICB does not bring CYMW into alignment. Only Figure 4d which shows FGCM was able to align the CYMW points.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>Figure 4 visualizes the results of these transformations. Figure 4a-4c show an outline of the color gamut of the four projectors. The six faces of the gamut are created from the 8 sample points (R,G,B,C,Y,M,K,W). The four projectors are represented by the four different line style plots. Figure 4a shows the gamuts after the FGCM algorithm has been applied. Notice that the RGB channels match closely and the white points are well aligned. Figure 4b shows the projector gamuts after ICB is performed. Notice that the red, green and blue channels match well, but there is still a large discrepancy in the white points due to the non-additive gamut. Figure 4c shows the uncalibrated color gamut of the 4 projectors. Notice how the white points are stretched due to white enhancement and that none of the RGB channels or the white points match. Figure 4d-4f show the respective CIE x-y plot for the (R,G,B,C,Y,M,W) colors. One thing to notice is that even in the uncalibrated Figure 4f the red, green and blue chromaticity values match well among the four projectors. This is because they are of the same model and built within certain tolerances. But the CYMW points are not well aligned due to the non-additive gamut. As can be seen in Figure 4e, ICB does not bring CYMW into alignment. Only Figure 4d which shows FGCM was able to align the CYMW points.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>Figure 5d-5f show the three correspond- ing CIE x-y plots. Notice from Figure 5a that FGCM is able to align the two color gamuts quite well. However ICB, Fig- ure 5b, has significant error even for the RGB colors and the error becomes worse at the white point. The CIE x-y Fig- ure 5d-5f</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>c</head><label></label><figDesc>Figure 4: The measured XYZ gamut plots and CIE x-y plots from FGCM, ICB, and the uncalibrated system for test case 1, where four DLP projectors are used.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Table 1 : The percentage error (e i ) for solid colors, and the overall percentage error ( ¯ e). (All DLP Projectors) Color</head><label>1</label><figDesc></figDesc><table>FGCM 
ICB 
None 
Red (R) 
0.75% 
1.78% 
10.22% 
Green (G) 
0.77% 
1.71% 
7.36% 
Blue (B) 
1.20% 
2.38% 
10.75% 
Cyan (C) 
0.86% 
2.41% 
9.54% 
Magenta (M) 
1.61% 
5.95% 
11.02% 
Yellow (Y) 
1.14% 
3.26% 
8.64% 
Black (K) 
3.26% 
19.48% 
15.59% 
White (W) 
1.11% 
8.95% 
10.40% 
Total 
1.47% 
3.40% 
11.12% 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>Table 2 :</head><label>2</label><figDesc></figDesc><table>The absolute error (E i ) for solid colors, and the 
overall absolute error ( ¯ 
E). (All DLP projectors) 

Color 
FGCM 
ICB 
None 
Red (R) 
0.229 
0.509 
3.621 
Green (G) 
0.770 
1.713 
7.880 
Blue (B) 
1.313 
2.599 
13.256 
Cyan (C) 
1.435 
4.103 
18.073 
Magenta (M) 
1.977 
7.230 
15.875 
Yellow (Y) 
1.453 
4.003 
12.556 
Black (K) 
0.118 
0.207 
0.123 
White (W) 
2.869 
21.272 
33.237 
Total 
0.984 
2.418 
9.710 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>Table 3 : The percentage error (e i ) for solid colors, and the overall percentage error ( ¯ e). (Mixed DLP/LCD projectors) Color</head><label>3</label><figDesc></figDesc><table>FGCM 
ICB 
None 
Red (R) 
1.33% 
5.28% 
17.03% 
Green (G) 
0.64% 
3.90% 
2.37% 
Blue (B) 
1.28% 
8.25% 
15.42% 
Cyan (C) 
0.82% 
5.49% 
11.20% 
Magenta (M) 
0.67% 
7.46% 
19.38% 
Yellow (Y) 
1.19% 
2.66% 
10.09% 
Black (K) 
11.93% 
40.02% 
50.22% 
White (W) 
0.74% 
8.28% 
32.54% 
Total 
1.27% 
6.21% 
12.95% 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head>Table 4 :</head><label>4</label><figDesc></figDesc><table>The absolute error (E i ) for solid colors, and the 
overall absolute error ( ¯ 
E). (Mixed DLP/LCD projectors) 

Color 
FGCM 
ICB 
None 
Red (R) 
0.444 
1.683 
6.269 
Green (G) 
0.739 
4.485 
2.821 
Blue (B) 
1.465 
8.703 
19.722 
Cyan (C) 
1.458 
9.524 
22.419 
Magenta (M) 
0.827 
8.587 
28.030 
Yellow (Y) 
1.625 
3.671 
15.609 
Black (K) 
0.836 
1.490 
0.795 
White (W) 
1.409 
16.821 
93.586 
Total 
1.007 
4.435 
11.914 

and uncalibrated. </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="false"><head>Table 5 : Performance of Image Viewer with Different Pixel Shaders (in Frames Per Second) Platform</head><label>5</label><figDesc></figDesc><table>A 
B 
C 
D 
550 MHz P3/GeForce4 22.9 22.6 22.3 22.1 
3.06 GHz P4/Radeon 
86.4 86.5 86.4 86.4 

</table></figure>
		</body>
		<back>

			<div type="acknowledgement">
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Scalable alignment of large-format multi-projector displays using camera homography trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Sukthankar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wallace</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization, 2002. c 񮽙 The Eurographics Association</title>
		<meeting>IEEE Visualization, 2002. c 񮽙 The Eurographics Association</meeting>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Automatic alignment of high-resolution multi-projector display using an uncalibrated camera</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Finkelstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Housel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Large format displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Funkhouser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
	<note>Guest editor introduction to special issue</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">White enhancement for color sequential dlp</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Kunzman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Pettitt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SID Conference Proceedings</title>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Achieving color uniformity across multiprojector displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Majumder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Towles</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Welch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Lam: Luminance attenuation map for photometric uniformity across a projection based display</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Majumder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Stevens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Virtual Reality and Software Technology</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Multi-projector displays using camera-based registration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Raskar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Welch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Towles</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Seales</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Fuchs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Color and brightness appearance issues for tiled displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Stone</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<date type="published" when="2001-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Color balancing experimental projection displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Stone</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">9th IS&amp;t/SID Color Imaging Conference</title>
		<imprint>
			<date type="published" when="2001-04" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
