<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:38+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Non-tree Routing for Reliability and Yield Improvement £</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><forename type="middle">B</forename><surname>Kahng</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">CSE and ECE Departments</orgName>
								<orgName type="institution">UCSD</orgName>
								<address>
									<addrLine>La Jolla</addrLine>
									<postCode>92093-0114</postCode>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bao</forename><surname>Liu</surname></persName>
							<email>bliu@cs.ucsd.edu</email>
							<affiliation key="aff0">
								<orgName type="department">CSE and ECE Departments</orgName>
								<orgName type="institution">UCSD</orgName>
								<address>
									<addrLine>La Jolla</addrLine>
									<postCode>92093-0114</postCode>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ion</forename><forename type="middle">I</forename><surname>M˘</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">CSE and ECE Departments</orgName>
								<orgName type="institution">UCSD</orgName>
								<address>
									<addrLine>La Jolla</addrLine>
									<postCode>92093-0114</postCode>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Non-tree Routing for Reliability and Yield Improvement £</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>We propose to introduce redundant interconnects for manufacturing yield and reliability improvement. By introducing redundant interconnects , the potential for open faults is reduced at the cost of increased potential for short faults; overall, manufacturing yield and fault tolerance can be improved. We focus on a post-processing, tree augmentation approach which can be easily integrated in current physical design flows. Our contributions are as follows: ¯ We formulate the problem as a variant of the classical 2-edge-connectivity augmentation problem in which we take into account such practical issues as wirelength increase budget, routing obstacles , and use of Steiner points. ¯ We show that an optimum solution can always be found on the Hanan grid defined by the terminals and the corners of the feasible routing region. ¯ We give a compact integer program formulation which, for up to 100 terminal nets, is solved in practical runtime by the commercial optimization package CPLEX. ¯ We give a well-scaling greedy algorithm which has practical run-time up to 1,000 terminals, and comes on the average within 1-2% of the optimum computed by CPLEX. ¯ We give a comprehensive experimental study comparing the solution quality and runtime of our methods with the best reported methods for 2-edge-connectivity augmentation, including a sophisticated heuristic based on minimum-weight branchings [9] and a recent genetic algorithm [14]. Experiments on randomly generated and industry testcases show that our greedy augmentation method achieves significant increase in reliability (as measured by the percentage of biconnected tree edges) with very small increase in wirelength. For example, on 1,000 terminal nets the average percentage of biconnected tree edges is 34񮽙19% for a wire-length increase of only 1%, and 87񮽙73% for a wirelength increase of 20%. SPICE simulations on industry routed nets show that non-tree routing has the additional benefit of reducing maximum sink delay by an average of 28񮽙26% compared to Steiner routing, and by an average of 3񮽙72% compared to timing optimized routing. SPICE simulations further imply that non-tree routing has smaller delay variation due to process variability.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Ever-decreasing feature sizes allow integration of millions of gates on a single chip. This integration has been enabled in part by low defect density. However, continued reductions in defect density cannot be expected to continue in the near future. Sensitivity of parametric (performance) £ This work was partially supported by Cadence Design Systems, Inc., the MARCO Gigascale Silicon Research Center and NSF <ref type="bibr">Grant CCR-9988331.</ref> yield to variability also increases as a result of performance optimization (sizing, etc.) design flows. New design techniques must be applied to improve manufacturing yield of large-area chips, as yield becomes an ever-greater determinant of design viability <ref type="bibr" target="#b1">[2]</ref>.</p><p>In nanometer technologies, likelihood of back-end-of-line (BEOL) defects (i.e., high-resistance via or interconnect defects) has increased relative to that of front-end-of-line (FEOL) defects (i.e., device defects). Interconnects are now more likely to cause circuit malfunction and/or performance or reliability degradation. Two types of catastrophic faults arise due to BEOL defects: open circuit faults or broken interconnects due to loss of mass, and short circuit faults or unintended bridgings between interconnects due to augmentation of mass ( <ref type="figure">Fig. 1</ref>). Manufacturing yield is directly affected by the size of the critical area, which is the union of all centers of fixed size defects that induce IC faulty behavior. A typical figure of merit that measures the layout's robustness is obtained as the ratio of the total critical area to the layout area <ref type="bibr" target="#b2">[3]</ref>.</p><p>In this paper we propose to introduce layout level redundancy by constructing non-tree interconnect topologies for manufacturing yield and reliability improvement. For easier integration within existing flows, we emphasize a post-processing, tree augmentation approach, rather than monolithic non-tree routing construction during global or detailed routing. In adding redundant wiring, the extra wire creates more critical area for short faults, but the redundancy makes some wires immune to open defects and thus reduces open-fault critical area. Overall, critical area and manufacturing yield could improve. We observe that: ¯ The existing tradeoff between short-and open-fault critical areas in the BEOL is conducive to the approach we propose. For current design methodologies and manufacturing processes, the probability of failure (POF) due to open defects of any given size is 񮽙 3¢ higher than the POF due to short defects of identical size <ref type="bibr" target="#b2">[3]</ref>. ¯ Previous methods that improve manufacturability or reliability by "decompaction" (see, e.g., <ref type="bibr" target="#b1">[2]</ref>) will not be as useful in the future due to heavy restrictions on allowed spacings and pitches in nanometer-scale (񮽙100nm) processes. On the other hand, our approach would work well even with restricted spacings and pitches (but would require incremental detailed routing capability). In fact, it can be speculated that introduction of interconnect redundancy improves uniformity of routing resource utilization by forming "functional fill" as opposed to the present "dummy fill" methodologies. ¯ Tree augmentation schemes have been previously proposed in the context of clock routing for delay and skew reduction <ref type="bibr" target="#b14">[16]</ref> and critical net routing for delay optimization <ref type="bibr" target="#b9">[11]</ref>. However, previous algorithms do not work well in our context, since tree augmentation for manufacturability and reliability improvement involves different tradeoffs than tree augmentation for delay or skew optimization. Our Manhattan Routing Tree Augmentation (MRTA) formulation resembles the classical edge connectivity augmentation problem <ref type="bibr" target="#b6">[7]</ref>, in which a given subgraph must be augmented at minimum cost into a 2-edge (or more generally k-edge) connected graph. <ref type="bibr" target="#b0">1</ref> Finding a minimum open fault short fault <ref type="figure">Figure 1</ref>: An open fault is formed due to loss of mass; a short fault is formed due to augmentation of mass.</p><p>cost k-edge-connected augmentation is NP-hard even for k 񮽙 2 <ref type="bibr" target="#b3">[4]</ref>, and much work has been devoted to finding good heuristics and approximation algorithms, see, e.g., <ref type="bibr" target="#b5">[6]</ref> and the references therein. The MRTA formulation differs from the 2-edge-connectivity augmentation (E2AUG) problem in several respects: ¯ While E2AUG is typically formulated for graphs, MRTA has a strong geometric flavor. We consider routing trees embedded in the Manhattan plane, and allow augmenting paths between any two points on the embedded tree (however, augmenting paths must be fully contained in the feasible routing region defined by routing obstacles and design spacing rules). In particular, we allow augmenting paths that are "parallel" to (fragments of) tree edges. ¯ To ensure the optimal balance between vulnerability to short-and open-faults, our formulation imposes a budget on the total length of augmentation paths and requires maximizing 2-edge connectivity subject to this constraint. In contrast, E2AUG requires 100% 2-edge connectivity regardless of the wirelength increase. ¯ To enable higher quality MRTA solutions, we allow augmenting paths with one or both ends on other augmenting paths, i.e., at newly created Steiner points (see <ref type="figure">Figure 2</ref>). The existing literature on 2-edge-connectivity augmentation focuses almost exclusively on the spanning subgraph formulation of the problem, in which the use of Steiner points is disallowed.</p><p>Our main contributions are as follows: ¯ We show that an optimum MRTA solution can always be found on the Hanan grid defined by the terminals and the corners of the feasible routing region. ¯ We give integer program formulations for the MRTA problem with and without Steiner points. The compact integer program for MRTA without Steiner points is solved in practical runtime by the commercial optimization package CPLEX for testcases with up to 100 terminals. ¯ We give a well-scaling greedy algorithm which has practical runtime up to 1,000 terminals, and comes on the average within 1-2% of the optimum computed by CPLEX. The runtime of our algorithm is O´ND · N 2 Kµµ, where D is the runtime of Dijkstra's algorithm on the Hanan grid for the terminals and the corners of the feasible routing region, N is the number of Hanan grid vertices on the given routing tree, and K is the number of augmenting paths (typically a small fraction of N). Without routing obstacles the running time reduces to O´N 2 Kµ. ¯ We give a comprehensive experimental study comparing the solution quality and runtime of our methods with the best reported methods for 2-edge-connectivity augmentation, including a sophisticated heuristic based on minimum-weight branchings <ref type="bibr" target="#b7">[9]</ref> and a recent genetic algorithm <ref type="bibr" target="#b12">[14]</ref>. Experiments on randomly generated and industry testcases show that our greedy augmentation method achieves significant increase in reliability (as measured by the percentage of biconnected tree edges) with very small increase in wirelength. For example, on 1,000 terminal nets the average percentage of biconnected tree edges is 34񮽙19% for a wirelength increase of only 1%, and 87񮽙73% for a wirelength increase of 20%. SPICE simulations on industry routed nets show that non-tree routing has the additional benefit of reducing maximum sink delay by an average of 28񮽙26% compared to Steiner routing, and by an average of 3񮽙72% compared to timing optimized routing. SPICE simulations further imply that non-tree routing has smaller delay variation due to process variability.</p><p>The rest of the paper is organized as follows. Section 2 gives the defect model, notations, and the problem formulation. Section 3 gives the reduction to a Hanan grid, integer program formulations, and the greedy MRTA algorithm. Section 4 presents experimental results comparing the solution quality and runtime of our methods with two of the best existing methods for 2-edge-connectivity augmentation, as well as results of SPICE simulations showing that non-tree routing has improved interconnect delay and process variation robustness. Finally, Section 5 gives directions for future research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Problem Formulation</head><p>Our problem formulation is based on the following defect model:</p><p>¯ Uniform defect distribution. We assume that manufacturing defects are uniformly distributed across the die area. In particular, since we are concerned with routing reliability of large global nets, the uniform defect distribution allows us to ignore defects at the nodes of the routing (which have negligible probability of occurrence), and consider only defects that affect its edges. ¯ Single-defect faults. The occurrence probability of a fault caused by multiple defects is orders of magnitude smaller than the occurrence probability of a fault caused by a single defect. We therefore concentrate on reducing routing vulnerability to single defect faults, and measure routing vulnerability to open faults by the total length of bridges (i.e., routing edges whose removal disconnects the net) of the routing. ¯ Open faults only. For current design methodologies and manufacturing processes (e.g., damascene copper electroplating) the prevailing error mechanism is void formation (open faults). As noted in <ref type="bibr" target="#b2">[3]</ref>, the probability of failure (POF) due to open defects of a given size is 񮽙 3¢ higher than the POF due to short defects of identical size. In particular, design rule correctness guarantees that there will be no short fault induced by a defect of size smaller than the minimum spacing between interconnects and routing obstacles. In this paper we concentrate on reducing vulnerability to open faults by adding redundant wires. Vulnerability to short faults is maintained within desired limits by imposing an upper-bound on the amount of added wires.</p><p>We use the following notations throughout the paper :</p><p>1. P 񮽙 set of terminals for the given net 2. T ´Pµ µ given routing tree over terminals of P Manhattan Routing Tree Augmentation (MRTA) Problem Given:</p><p>1. Rectilinear feasible routing region FRR, 2. Rectilinear Steiner routing tree T within FRR, and 3. Wirelength budget W . Find: Set of augmenting paths A within the FRR such that:</p><p>(a) Total length of augmenting paths is at most W , i.e., l´Aµ 񮽙 W , and (b) Total length l´T µ lbridges´Gµ of edges of T which are nonbridges in G 񮽙 T 񮽙A is maximum.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Exact and Heuristic Algorithms for the MRTA Problem</head><p>We begin this section by showing that, despite the seemingly continuous solution space (due to the flexibility in choosing endpoints of augmenting paths), an optimum solution can always be found on the Hanan grid defined by the terminals and the corners of the feasible routing region. Based on this result, in Section 3.2 we give a compact integer linear program (ILP) formulation for the MRTA problem in which Steiner points are disallowed, and an ILP with exponentially many constraints for the MRTA problem with Steiner points. Finally, in Section 3.3 we describe an efficient greedy MRTA heuristic.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Reduction to Hanan Grid</head><p>Theorem 1 There exists an optimum MRTA solution with all augmenting paths embedded on the Hanan grid defined by terminals and corners of the rectilinear feasible routing region. (i) If the augmenting path a has the other end strictly between l and r on a horizontal edge of G, then, by optimality, it follows that a is a straight line segment. Sliding a horizontally does not change the total length l´Gµ, and there exists a horizontal sliding direction (either sliding towards l or sliding towards r) which does not increase the bridge length lbridges´Gµ. By sliding a in this direction we obtain another optimum solution with strictly shorter augmenting path length not embedded on the Hanan grid ( <ref type="figure" target="#fig_0">Fig. 3(i)</ref>). (ii) Otherwise, let q be the first point, starting from p, where a crosses again l 񮽙 h 񮽙 r (such a point must exist, since every augmenting path creates a cycle with the rest of G). The portion of a between p and q can be re-embedded as an L shape along the Hanan grid ( <ref type="figure" target="#fig_0">Fig.  3(ii)</ref>). Again, this gives an optimum solution with strictly shorter augmenting path length not embedded on the Hanan grid. The theorem follows by repeating the above transformations (and the symmetrical vertical transformations) until all augmenting edges are completely embedded on the grid.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Ù Ø</head><p>Remark. Notice that Theorem 1 does not guarantee that all augmenting path endpoints are Hanan grid vertices. It is easy to see that, due to the wirelength budget, endpoints which are not Hanan grid vertices may be required. However, Theorem 1 implies that this happens only when the augmenting path is parallel to an edge of the augmented tree T .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Integer Program Formulations</head><p>Theorem 1 implies that the optimum MRTA can be found by considering only augmenting paths which are shortest paths between arbitrary vertices on the Hanan grid H´P 񮽙 Fµ, plus, possibly, augmenting paths which are parallel to (partial) tree edges.</p><p>We first give the ILP formulation for MRTA without Steiner points. In this version of the problem augmenting paths a´u񮽙 vµ which are not parallel to tree edges connect points u񮽙 v ¾ T 񮽙HV´P񮽙Fµ. <ref type="bibr">To</ref>   <ref type="formula">(4)</ref> is again enforcing the wirelength budget.</p><p>Ensuring that y u񮽙v is set to 1 only if edgéu񮽙 vµ ¾ T is biconnected requires now an exponential number of constraints. The formulation is based on the Max-Flow Min-Cut theorem, which guarantees that there exists a path between T u and T v consisting solely of edges e with x e set to 1 if every cut separating T u from T v contains at least one such edge. Finally, augmenting paths parallel to tree edges are handled using the same method as in (3).</p><p>We note that, despite its exponential size, the fractional relaxation of (4) can be solved, e.g., using the Ellipsoid algorithm <ref type="bibr" target="#b4">[5]</ref> with a separation oracle that runs a min-cut algorithm for each´u񮽙each´u񮽙 vµ ¾ T to check feasibility of any given solution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">The Greedy MRTA Algorithm</head><p>In this section we propose a greedy algorithm for the MRTA problem. Our algorithm (see Algorithm 1) iteratively adds an augmenting path a´u񮽙 vµ that maximizes the ratio lbridges G ´u񮽙 vµ񮽙l a ´u񮽙 vµ between the length of bridge edges between u and v and the length of the augmenting path. In every step the algorithm considers only augmenting paths a´u񮽙 vµ that fit within the remaining wirelength budget and have lbridges G ´u񮽙 vµ񮽙l a ´u񮽙 vµ 񮽙 1 (since otherwise it is better to simply use augmenting paths parallel to tree edges).</p><p>In order to efficiently compute the best augmenting path in each greedy iteration, we precompute the length of all shortest augmenting paths a´u񮽙 vµ by running <ref type="bibr">Dijkstra</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Experimental Results</head><p>We compare our integer program and the greedy MRTA algorithm with two existing algorithms: ¯ A greedy best-drop heuristic in <ref type="bibr" target="#b7">[9]</ref> which selects augmentation edges by finding minimum-weight branching in an appropriately defined directed graph. The best-drop heuristic is reported to find high-quality solutions for a host of connectivity problems, including 2-edge-connectivity augmentation with no wirelength budget. 3 ¯ A genetic algorithm enhanced by using a compact edge set representation, problem specific variation operators and a stochastic local improvement algorithm to reduce solution space <ref type="bibr" target="#b12">[14]</ref>. The integer program (3) was solved using the CPLEX 7.0 MIP optimizer, the other three algorithms were implemented in C/C++ and compiled with g++ version 2.95. All experiments were conducted on a SUN SPARC Ultra-10 workstation with 256MB memory. For each instance size n ¾ ¾ 5񮽙 10񮽙 50񮽙 100񮽙 500񮽙 1000񮽙 we generated 100 instances uniformly at random from a 10񮽙 000 ¢10񮽙000 grid. For each instance, a</p><p>Steiner minimum tree is constructed using the ER heuristic <ref type="bibr" target="#b0">[1]</ref> and then augmented (assuming no routing obstacles) by the four compared algorithms. <ref type="table">Table 1</ref> shows the statistics on the number of nodes (including wire turns), number of leaves, and total wirelength of the initial trees.</p><p>We implement three versions of the greedy MRTA algorithm:  <ref type="table">Table 1</ref>: Initial routing statistics (averages over 100 random instances of each size).</p><p>(a) Considering all augmenting paths a´u񮽙 vµ for which u񮽙 v are either terminals, Steiner points, or corners of edges of T .</p><p>(b) Considering all augmenting paths a´u񮽙 vµ for which u񮽙 v ¾ T 񮽙 HV´PHV´P 񮽙Fµ, i.e., all paths in (a) plus paths with one or both ends at the projection of a terminal on an edge of T .</p><p>(c) Considering all augmenting paths a´u񮽙 vµ for which u񮽙 v ¾ ´T 񮽙Aµ񮽙 V H´P 񮽙Fµ, i.e., all paths in (b) plus paths with one or both ends at the projection of a terminal on an already added augmenting path.</p><p>We also implemented versions (a) and (b) for the Best-Drop and ILP algorithms. The (c) version of the greedy MRTA algorithm gives almost identical results to the (b) version in experiments with 1 20% wirelength budget and 5 20 terminals, and we omit its results. <ref type="table" target="#tab_7">Table 2</ref> gives the number of augmenting paths, percentage of biconnected tree edges, and runtime for versions (a) and (b) of the greedy MRTA, Best-Drop, and ILP algorithms. The results show that versions (b) achieve better solution quality than versions (a); for the greedy MRTA algorithm version (b) is better than version (a) by as much as 18񮽙54%. <ref type="table" target="#tab_0">Table 3</ref> gives the results obtained by the greedy MRTA, BestDrop, Genetic, and ILP algorithms when there is no restriction on the added wirelength.</p><p>The results show that the greedy MRTA algorithm is the fastest of the compared algorithms, scaling up to 1񮽙 000 sinks. For 1 20% wirelength budgets the greedy MRTA algorithm is also outperforming the other heuristics in solution quality, finding solutions within 1-2% of the optimum computed by CPLEX for all wirelength budgets. The much slower Best-Drop and Genetic heuristics outperform greedy MRTA only for unlimited wirelength budget and small number of sinks, and then by a very small amount. As expected, MRTA biconnectivity increases with the wirelength budget, e.g., it increases from 34񮽙19% under 1% wirelength budget to 87񮽙73% under 20% wirelength budget for 1000 sink instances. Interestingly, the biconnectivity also increases significantly with the number of sinks, e.g., from 1񮽙12% for 5 sinks to 34񮽙19% for 1000 sinks for 1% wirelength budget. <ref type="table" target="#tab_5">Table 4</ref> shows statistics for the first augmenting path added by greedy MRTA. This path has a ratio between biconnected length and wirelength increase as large as 80 for 1,000 sinks, and already achieves a significant improvement in routing reliability at a very low wirelength increase cost.</p><p>The impact of non-tree augmentation on maximum delay and delay variation due to process variability was verified by running SPICE simulation on two sets of 14 instances each. The first set consisted of non-critical nets extracted from a recent industry design and routed by Cadence WarpRouter using minimum-area optimization, while the second set consisted of randomly generated nets routed using the timingdriven P-Tree algorithm <ref type="bibr" target="#b8">[10]</ref> with buffer insertion disabled and identical sink required-arrival times. Each interconnect was represented by a Π model and driven by a 1񮽙8V voltage source with a ramped input signal of 150ps slew time. 50% delay from the source to each sink was simulated based on 180nm ITRS predictive technology model beta version <ref type="bibr">[8]</ref> with the following parameters: unit wire resistance r 񮽙 0񮽙040Ω񮽙µm, unit wire capacitance c 񮽙 0񮽙259 f F񮽙µm, sink capacitance c t 񮽙 63񮽙358 f F and source driving resistance R b 񮽙 139񮽙434Ω. In computing robustness to process variation we assumed 100% wire width correlation. This models systematic variation sources such as lens aberrations which cover 5-10mm ranges <ref type="bibr" target="#b11">[13,</ref><ref type="bibr" target="#b10">12]</ref>, i.e., ranges that are larger than those covered today by unbuffered interconnect. We uniformly varied wire width by  dw 񮽙 6񮽙67% from the nominal value, and computed unit length wire capacitance using the formulas in <ref type="bibr" target="#b13">[15]</ref> for parallel lines between two planes, including area, fringe, and coupling capacitances. The maximum 50% sink delay and its variation in percents are reported for the two sets of test instances in <ref type="table" target="#tab_9">Tables 5 and 6</ref>. In these tables, the results under 0% wirelength budget correspond to the initial (area, respectively timing-optimized) routing trees. Results for non-critical nets <ref type="table" target="#tab_9">(Tables 5)</ref> show that non-tree augmentation continuously reduces maximum source-to-sink delays in most of the instances in our experiments (except net10). An average of 28񮽙26%, and maximum of 62񮽙15% delay reduction can be achieved (for net12) with 20% wirelength budget. Non-tree augmentation also decreases process variation effect in most non-critical instances (except net4). An average of 13񮽙79%, and maximum of 28񮽙86% delay variation reduction is observed (for net12) when comparing nominal wire width w and w dw wire width. Results for timing-optimized interconnect trees <ref type="table">(Table 6)</ref> show that non-tree augmentation still decreases the maximum sourceto-sink delay by an average of 3񮽙72% and a maximum of 39񮽙04%. However, in some instances maximum source-to-sink delay can increase by as much as 6񮽙47% due to non-tree augmentation. Non-tree augmentation decreases process variation in all the timing-optimized instances, with an average of 3񮽙24%, maximum of 12񮽙17% and minimum of 0񮽙09%.</p><note type="other">WL #SINK %WL %BI RATIO CPU Budget INC CONN SEC 5 0.22 0.34 1.54545 0.00 10 0.51 0.58 1.13725 0.</note><p>An explanation of the above results is that non-tree augmenting paths can decrease interconnect source-to-sink delay by forming shorter connections, but can also increase interconnect delay due to increased capacitance. The probability for non-tree augmentation to form a shorter connection between the source and a critical sink is smaller in timingoptimized interconnect, which results in smaller improvements in maximum delay and delay variability. In general our non-tree augmentation scheme achieves better improvements in interconnect delay and variability for non-critical, area-optimized interconnects.     <ref type="table">Table 6</ref>: Maximum SPICE sink delays (ns) and delay variations (percents) under dw 񮽙 6񮽙67% wire width variation for 14 randomly generated nets with 15 sinks each. Initial trees are constructed using the P-Tree algorithm <ref type="bibr" target="#b8">[10]</ref> with identical sink required-arrival times.</p><formula xml:id="formula_0">- - - - - - - - - - - - - -</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusions and Future Work</head><p>In this paper we have proposed the introduction of redundant interconnect as a post-routing optimization for manufacturing yield, reliability, and process variation robustness improvement. We have formulated the problem as a variant of the classic NP-hard 2-edge connectivity augmentation (in a Manhattan plane and under a given wirelength budget) and proposed both practical integer program formulations and a well-scaling greedy algorithm which comes within 1-2% of the optimum on the average. We have presented experimental results on both randomly generated and industry testcases with up to 1,000 terminals showing that: ¯ Our methods outperform best known 2-edge connectivity augmentation algorithms in both solution quality and runtime for the practically relevant wirelength budgets. ¯ Significant increase in reliability (as measured by the percentage of biconnected tree edges) and simultaneous decreases in maximum sink delay and delay variation due to process variability can be achieved with very small increases in wirelength. Our ongoing research efforts include algorithms for biconnectivity augmentation of buffered trees, simultaneous augmentation of multiple routed nets, and chip-level evaluation of the proposed augmentation algorithms.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Proof.Figure 3 :</head><label>3</label><figDesc>Figure 3: (i) If augmenting path a connects two parallel edges, then l´Gµ remains constant when a slides horizontally, and for at least one direction lbridges´Gµ does not increase. (ii) Otherwise, a can be re-embedded along the Hanan grid lines.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>3 . p T ´u񮽙 vµ µ the unique path in tree T between u񮽙 v ¾ T 4. a´u񮽙 vµ µ augmenting path, assumed to be a shortest path between u and v within theA 񮽙 set of augmenting paths 6. G 񮽙 T 񮽙A 񮽙 augmented routing graph 7. bridges´Gµ µ set of all bridge edges of G; an edgéu񮽙 vµ is a bridge of G if its removal disconnects G 8. l´Gµ µ total length of routing graph G 9. l´Aµ µ total length of augmenting paths 10. lbridges´Gµ µ total length of bridge edges of G; in our defect model the probability of failure due to open faults for the routing G is proportional to lbridges´Gµ 11. l a ´u񮽙 vµ µ length of augmenting path a´u񮽙 vµ 12. lbridges G ´u񮽙 vµ µ l´p T ´u񮽙 vµ 񮽙bridges´Gµµ total length of bridge edges on path p T ´u񮽙 vµ 13. FRR 񮽙 rectilinear feasible routing region 2F 񮽙 set of corner vertices of the rectilinear feasible routing region FRR 15. H´P񮽙Fµ µ Hanan grid over the points in P񮽙F, obtained by taking the union of vertical and horizontal lines through the points 16. HV´PHV´P 񮽙Fµ µ the set of vertices of H´P 񮽙Fµ 17. N 񮽙 񮽙T 񮽙HV´P񮽙Fµ񮽙 񮽙 number of Hanan grid points on the routing tree T The</head><label>3</label><figDesc>problem of maximally increasing the reliability to open faults by adding a bounded amount of wire redundancy to an already routed net is formulated as follows:</figDesc><table>feasible routing region (i.e., avoiding the given 
routing obstacles) 
5. Source 

tree edges 
Augmenting 
paths 

Bridges 

Bridges 

Bridge 

Biconnected 

Figure 2: Initial routing tree T and a set of augmenting paths. Remaining 
bridges are shown as thin lines. 

14. </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>formulate the MRTA problem as an integer program, we first assign to each pair of vertices u񮽙 v ¾ T 񮽙 HV´PHV´P 񮽙 Fµ a 0/1 variable x u񮽙v indicating whether or not a´u񮽙 vµ is an augmenting path, i.e., x u񮽙v 񮽙 񮽙 1 : a´u񮽙 vµ ¾ A 0 : a´u񮽙 vµ 񮽙 ¾ A (1) Also, we assign to each edgéu񮽙 vµ ¾ T a 0/1 variable y u񮽙v indicating whether or not´u񮽙not´u񮽙 vµ is contained in a cycle of T 񮽙A, i.e., y u񮽙v 񮽙 񮽙 1 : ´u񮽙 vµ 񮽙 ¾ bridges´Gµ 0 : ´u񮽙 vµ ¾ bridges´Gµ񮽙 (2) Removing any edgéu񮽙 vµ ¾ T separates T into two subtrees, T u and T v , such that T 񮽙 T u 񮽙T v 񮽙´u񮽙vµ. Since Steiner points are disallowed, it follows that´u񮽙that´u񮽙 vµ is contained in a cycle of T 񮽙A if and only if A contains an augmenting path between T u and T v , i.e., iff there exist i ¾ T u and j ¾ T v such that a´i񮽙 jµ ¾ A. Using this observation, we can reformulate MRTA as the following integer program: maximize ∑ ´u񮽙vµ¾T y u񮽙v l´u񮽙 vµ · 񮽙 W ∑ u񮽙v¾T񮽙HV´P񮽙Fµu񮽙v¾T񮽙HV´P񮽙Fµ x u񮽙v l a ´u񮽙 vµ 񮽙 (3) such that ∑ u񮽙v¾T 񮽙HV´P񮽙Fµ x u񮽙v l a ´u񮽙 vµ 񮽙 W ∑ i¾T u 񮽙 j¾T v x i񮽙 j 񮽙 y u񮽙v 񮽙 񮽙´u񮽙vµ ¾ T x u񮽙v ¾ 񮽙0񮽙1񮽙񮽙񮽙u񮽙v ¾ T 񮽙HV´P񮽙Fµ y u񮽙v ¾ 񮽙0񮽙1񮽙񮽙񮽙´u񮽙vµ ¾ T where l´u񮽙 vµ is the length of edgéu񮽙 vµ ¾ T and l a ´u񮽙 vµ is the length of the augmenting path between u and v. In ILP (3), the first constraint enforces the wirelength budget, while the following constraints ensure that only edges of T that are bicon- nected are counted in the objective function. Augmenting paths parallel to (fragments of) tree edges are handled implicitly by the addition to the objective function of the term W ∑ u񮽙v¾T 񮽙HV´P񮽙Fµ x u񮽙v l a ´u񮽙 vµ, whichy u񮽙v indicating whether or not´u񮽙not´u񮽙 vµ ¾ T are bicon-for each edge e in the Hanan grid H´P 񮽙Fµ. The ILP sets x e to 1 if any augmenting path uses e, and to 0 otherwise.񮽙 W ∑ e¾X x e 񮽙 y u񮽙v 񮽙 񮽙´u񮽙vµ ¾ T񮽙 X ¾ X u񮽙v x e ¾ 񮽙0񮽙1񮽙񮽙񮽙e ¾ H´P 񮽙Fµ y u񮽙v ¾ 񮽙0񮽙1񮽙񮽙񮽙´u񮽙vµ ¾ T where l´u񮽙 vµ is the length of edgéu񮽙 vµ ¾ T , l´eµ is the length of Hanan grid edge e, and, for every´u񮽙every´u񮽙 vµ ¾ T , X u񮽙v is the set of all Hanan grid cuts separating the two connected components, T u and T v , of T Ò´u񮽙vµ.</head><label>the</label><figDesc></figDesc><table>represents the wirelength budget left unused after adding "regular" aug-
menting paths. 
Similar to ILP (3), the ILP formulation for MRTA with Steiner points 

uses 0/1 variables nected. In order to capture the possible use of Steiner points as ends of 
augmenting paths, we now need a 0/1 variable x e The ILP formulation for MRTA with Steiner points 
is: 

maximize ∑ 

´u񮽙vµ¾T 

y u񮽙v l´u񮽙 vµ · 

񮽙 

W ∑ 

e¾H´P񮽙Fµ 

x e l´eµ 

񮽙 

(4) 

such that 

∑ 

e¾H´P񮽙Fµ 

x e l´eµ The first constraint of </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>'s algorithm with each u ¾ T 񮽙 HV´PHV´P 񮽙 Fµ as the source. Further, we compute bridge edge lengths lbridges G ´u񮽙 vµ by executing one depth-first search traversal of T for each u ¾ T 񮽙 HV´PHV´P 񮽙 Fµ. Whenever an augmenting path a is added to G, we update the set of possible augmenting path endpoints to include Hanan vertices on a, and񮽙 񮽙T 񮽙HV´P񮽙Fµ񮽙. Thus, with this implementation, the greedy algorithm runs in O´ND · N 2 Kµµ time, where D is the runtime of Dijk- stra's algorithm on H´P 񮽙Fµ and K is the number of augmenting paths (typically a small fraction of N). Without routing obstacles Dijkstra's algorithm becomes unnecessary since l a ´u񮽙 vµ is given by the rectilin- ear distance between u and v. In this case the greedy algorithm runs in O´N 2 Kµ time. Algorithm 1: Greedy MRTA Algorithm Input: Rectilinear feasible routing region FRR with corners F, routing tree T for P within FRR, wirelength budget W Output: Set of augmenting paths A with l´Aµ 񮽙 W 1. bridges´Gµ µ G 񮽙 T , A 񮽙 / 0, V 񮽙 T 񮽙HV´P񮽙Fµ 2. For each u ¾ V , compute the lengths l a ´u񮽙 vµ of the shortest paths from u to each v ¾ V by running Dijkstra's algorithm with u as the source 3. For each node u ¾ V , compute the length lbridges G ´u񮽙 vµ of the bridges between u and each v ¾ V by a depth first search traversal of T with u as the source 4. Find, among paths a´u񮽙 vµ with l´Aµ · l a ´u񮽙 vµ 񮽙 W , an augmenting path a´u £ 񮽙 v £ µ maximizing lbridges G ´u񮽙 vµ񮽙l a ´u񮽙 vµ 5. If lbridges G ´u £ 񮽙 v £ µ񮽙l a ´u £ 񮽙 v £ µ 񮽙 1 then A 񮽙 A 񮽙a´u £ 񮽙 v £ µ, G 񮽙 G 񮽙a´u £ 񮽙 v £ µ bridges´Gµ µ bridges´Gµ Ò p T ´u £ 񮽙 v £ µ V 񮽙 V 񮽙´a´u £ 񮽙 v £ µ 񮽙HV´P񮽙Fµµ For each u ¾ a´u £ 񮽙 v £ µ 񮽙HV´P񮽙Fµ, compute the lengths l a ´u񮽙 vµ of the shortest paths from u to each v ¾V by running Dijkstra's algorithm with u as</head><label></label><figDesc>compute the lengths of all shortest augment- ing paths originating at these points with 񮽙a񮽙HV´P񮽙Fµ񮽙 more runs of Dijkstra's algorithm. It can be checked that the number of possible aug- menting path endpoints does not exceed 2N throughout the algorithm, where N</figDesc><table>the source 
Go to Step 3 
6. Else Exit 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="false"><head>Table 4 : Wirelength increase, percentage of biconnected tree edges, lbridges G ´u񮽙 vµ񮽙l a ´u񮽙 vµ ratio</head><label>4</label><figDesc></figDesc><table>, and CPU runtime due to first MRTA aug-
mentation path (averages over 100 random instances). 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7" validated="false"><head>Table 2 :</head><label>2</label><figDesc></figDesc><table>Comparison of greedy MRTA, Best-Drop, and CPLEX ILP (all results are averages over 100 random instances). (a) versions use only terminals 
or Steiner points of T as endpoints of augmentation paths, (b) versions can use all Hanan grid vertices that are on tree edges. 

Greedy(a) 
Best-Drop(a) 
Genetic(a) 
ILP(a) 
WL 
#SINKS #AUG %WL CPU 
#AUG %WL CPU 
#AUG %WL CPU 
#AUG %WL CPU 
Budget 
EDGE INC 
SEC 
EDGE INC 
SEC 
EDGE INC 
SEC 
EDGE INC 
SEC 
5 
3.76 
78.33 0.00 
3.35 
77.90 0.26 
3.52 
77.86 0.01 
1.07 
77.86 0.00 
10 
6.46 
59.70 0.00 
5.97 
58.19 7.54 
6.10 
57.97 0.52 
1.79 
57.97 0.01 
20 
10.93 
46.82 0.03 
10.25 
45.77 226.71 9.81 
45.59 4.43 
3.21 
45.58 0.07 
50 
26.20 
40.16 0.41 
-
-
-
20.85 
39.44 37.35 
7.33 
38.64 0.98 
100% 100 
51.10 
36.27 3.26 
-
-
-
39.48 
39.30 181.08 13.30 
35.11 8.21 
200 
100.49 34.10 26.12 
-
-
-
-
-
-
-
-
-
500 
245.63 32.85 405.45 
-
-
-
-
-
-
-
-
-
1000 
484.47 32.27 3160.24 -
-
-
-
-
-
-
-
-

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8" validated="false"><head>Table 3 :</head><label>3</label><figDesc></figDesc><table>Comparison of greedy MRTA, Best-Drop, Genetic, and ILP algorithms for unlimited wirelength budget (averages over 100 random instances). 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9" validated="true"><head>Table 5 : Maximum SPICE sink delays (ns) and delay variations (per- cents) under dw 񮽙 6񮽙67% wire</head><label>5</label><figDesc>width variation for 14 nets with 52-56 sinks extracted from an industry design. Initial trees are constructed us- ing Cadence WarpRouter using minimum-area optimization.</figDesc><table>WLB 
0% 
1% 
5% 
20% 

net1 495.6 ¦ 1.20% 498.5 502.8 454.2 ¦ 1.18% 
net2 179.9 ¦ 0.98% 177.9 179.3 187.3 ¦ 0.98% 
net3 298.9 ¦ 1.11% 290.8 292.9 293.2 ¦ 1.10% 

net4 

85.0 ¦ 0.70% 84.3 83.8 85.7 ¦ 0.66% 
net5 492.3 ¦ 1.15% 502.7 491.9 524.2 ¦ 1.14% 
net6 577.8 ¦ 1.20% 545.1 438.8 352.2 ¦ 1.05% 
net7 259.6 ¦ 1.01% 257.2 257.4 254.7 ¦ 0.99% 
net8 127.9 ¦ 0.82% 128.7 129.8 134.5 ¦ 0.82% 
net9 499.9 ¦ 0.98% 463.5 465.0 422.5 ¦ 0.89% 
net10 415.7 ¦ 1.03% 409.5 414.7 420.4 ¦ 1.02% 
net11 69.3 ¦ 0.85% 69.8 66.3 66.1 ¦ 0.80% 
net12 121.9 ¦ 1.14% 122.9 124.5 123.8 ¦ 1.12% 
net13 196.4 ¦ 1.15% 197.9 199.7 203.7 ¦ 1.14% 
net14 221.2 ¦ 1.01% 210.3 209.8 209.0 ¦ 0.97% 

</table></figure>

			<note place="foot" n="1"> A graph is k-edge connected if it cannot be separated by removing less than k edges.</note>

			<note place="foot" n="2"> The feasible routing region FRR is formed by enlarging the neighboring wires and routing obstacles by the minimum design spacing rules. The initial routing T as well as the augmenting paths A must be within the FRR to guarantee design rule correctness.</note>

			<note place="foot" n="3"> We have modified the code in [9] to enforce a specified wirelength budget.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A fast and simple Steiner routing heuristic</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Borah</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Owens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Irwin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Applied Mathematics</title>
		<imprint>
			<biblScope unit="volume">90</biblScope>
			<biblScope unit="page" from="51" to="67" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Yield optimization in physical design: a review</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><forename type="middle">K R</forename><surname>Chiluvuri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fifth ACM/SIGDA Physical Design Workshop</title>
		<meeting>the Fifth ACM/SIGDA Physical Design Workshop</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="198" to="206" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Yield modeling and beol fundamentals</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P</forename><surname>De Gyvez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 2001 International Workshop on System-Level Interconnect Predition</title>
		<meeting>2001 International Workshop on System-Level Interconnect Predition</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="135" to="163" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Augmentation problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">P</forename><surname>Eswaran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Tarjan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="653" to="665" />
			<date type="published" when="1976" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Geometric algorithms and combinatorial optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Grötschel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Lovász</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Schrijver</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993" />
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
	<note>Second edition</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Design of survivable networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Grötschel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Monma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stoer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbooks in Operations Research and Management Science</title>
		<meeting><address><addrLine>Amsterdam</addrLine></address></meeting>
		<imprint>
			<publisher>North-Holland</publisher>
			<date type="published" when="1995" />
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="617" to="672" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Graph augmentation and related problems: theory and practice</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T.-S</forename><surname>Hsu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
		<respStmt>
			<orgName>University of Texas at Austin</orgName>
		</respStmt>
	</monogr>
<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A uniform framework for approximating weighted connectivity problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Khuller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Raghavachari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zhu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 10th ACM-SIAM Annual Symposium on Discrete Algorithms</title>
		<meeting>10th ACM-SIAM Annual Symposium on Discrete Algorithms</meeting>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">New performance driven routing techniques with explicit area/delay tradeoff and simultaneous wire sizing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lillis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-K</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T.-T</forename><forename type="middle">Y</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-Y</forename><surname>Ho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM/IEEE Design Automation Conference</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="395" to="400" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Non-tree routing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">A</forename><surname>Mccoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Robins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computer-Aided Design</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="790" to="784" />
			<date type="published" when="1995-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Personal Communication</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Orshansky</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Impact of systematic spatial intra-chip gate length variability on performance of high-speed digital circuits</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Orshansky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Milor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Keutzer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE-ACM International Conference on Computer-Aided Design</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="62" to="67" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Evolutionary local search for the edgebiconnectivity augmentation problem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">R</forename><surname>Raidl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Ljubic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Processing Letters</title>
		<imprint>
			<biblScope unit="volume">82</biblScope>
			<biblScope unit="page" from="39" to="45" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Modeling of interconnect capacitance, delay, and crosstalk in vlsi</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S.-C</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G.-Y.</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D.-J</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Semiconductor Manufacturing</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="753" to="782" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Post routing performance optimization via multi-link insertion and non-uniform wiresizin</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Xue</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">S</forename><surname>Kuh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE-ACM International Conference on Computer-Aided Design</title>
		<imprint>
			<biblScope unit="page" from="575" to="580" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
