<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:53+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Adaptive End-to-End Quality-of-Service Guarantees in IP Networks using an Active Networking Approach</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roman</forename><surname>Pletka</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Zurich Research Laboratory</orgName>
								<orgName type="institution">IBM Research</orgName>
								<address>
									<postCode>8803</postCode>
									<settlement>R ¨ uschlikon</settlement>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="laboratory">and Computer Engineering and Networks Laboratory (TIK)</orgName>
								<orgName type="institution">Burkhard Stiller University of Federal Armed Forces Munich</orgName>
								<address>
									<addrLine>ETH Z ¨ urich</addrLine>
									<postCode>85577, 8092</postCode>
									<settlement>Neubiberg, Zürich</settlement>
									<country>Germany, Switzerland</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Adaptive End-to-End Quality-of-Service Guarantees in IP Networks using an Active Networking Approach</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>This paper proposes a framework based on an active networking approach to efficiently link Quality-of-Service (QoS) descriptions from an application point of view with an underlying heterogeneous IP networking infrastructure. The main goal is to provide building blocks that cooperate to sense the availability of and deploy distinct QoS capabilities in order to accomplish adaptive end-to-end service guarantees. The building blocks needed in a heterogeneous IP network will be introduced and discussed with respect to safety from abuse of total networking bandwidth, CPU, and memory usage. In conjunction with a new safety hierarchy and a sandbox environment for active-code execution, security risks can be bounded to the level of traditional IP forwarding, control, and management. In particular, the problem of QoS-parameter translation to provide end-to-end service guarantees is addressed, and an example using Diffserv, RSVP, and GPRS in a heterogeneous network is given.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Limited Quality-of-Service (QoS) support in IP networks is usually achieved by massive over-provisioning nowadays, because over-provisioning is still cheaper than operating a QoS-enabled network. However, this may change in future. Yet the introduction of simple service differentiation such as Diffserv <ref type="bibr" target="#b0">[1]</ref> can significantly increase the networking utility without installing additional networking bandwidth. It can be expected that QoS capabilites will be gradually introduced in the Internet. Regardless of whether end users are willing to pay for QoS the number of real-time and multimedia applications, and therewith the amount of networking traffic that would benefit from QoS, is still increasing. It has been shown that the needs of these applications cannot be satisfied in a high-loaded best-effort-based network <ref type="bibr" target="#b1">[2]</ref>. At the same time, there is a huge variety in existing QoS architectures, most of them standardized by the IETF (Intserv <ref type="bibr" target="#b2">[3]</ref>, Diffserv <ref type="bibr" target="#b0">[1]</ref>, and ST2+ <ref type="bibr" target="#b3">[4]</ref>), or proposed by the research community such as SRP <ref type="bibr" target="#b4">[5]</ref>.</p><p>Furthermore, QoS support is rarely used in heterogenous IP networks because there is no end-to-end support of service guarantees and because the increasing variety in QoS-provisioning mechanisms (e.g., policers, schedulers and active queue management) in network nodes complicates their integration into QoS frameworks.</p><p>This paper introduces a framework for adaptive end-toend QoS guarantees using active networks and focusses on its safety requirements to reduce security risks to the level of traditional IP forwarding. Active packets are used for QoS provisioning in conjunction with and as a complement to existing frameworks in order to optimize the usage of existing QoS capabilities. Our framework allows the efficient and dynamic translation of QoS parameters from an unsupported scheme into one that is supported by the networking infrastructure considered. This can be done for a particular router or a heterogeneous domain, and in horizontal (e.g., between networking nodes) as well as vertical (e.g., inside a given networking node) direction. Safety is guaranteed by two different means: First, by restrictions in the active byte-code itself, and second, through the definition of a safety hierarchy. The safety hierarchy allows code to be placed in active routers only under certain restricted conditions. The framework allows service providers to dynamically define and install QoS translation services, which are necessary owing to the heterogeneity of the Internet. Furthermore, it allows applications and networking nodes to describe their service requirements by placing active code into packets. This code is then used within the network to facilitate the translation and adaptation process in order to find an appropriate service behavior.</p><p>The paper is organized as follows. Based on a brief survey of major related work on end-to-end QoS support and active network frameworks in Section 2, we first point out where the discrepancy in QoS provisioning seen from the application's view point and the underlying heterogeneous network, originates (Section 3). Then we propose an abstract node model that integrates these deficiencies, and discuss the minimum set of functionalities such a node model has to fulfill. The requirements and implementation guidelines for the active networking approach are given in Section 4. In an example (Section 5), active packets are used for QoS provisioning in conjunction with and as a complement to existing frameworks as Intserv/RSVP <ref type="bibr" target="#b2">[3]</ref> and Diffserv <ref type="bibr" target="#b0">[1]</ref> to illustrate the deployment of QoS guarantees in heterogeneous IP networks. Finally, Section 6 presents some concluding remarks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Several capsule-based active networking approaches have been introduced. The ANTS framework <ref type="bibr" target="#b5">[6]</ref> based on mobile code and caching techniques has been introduced to enable dynamic and automatic deployment of new protocols in routers and end systems but lacks in providing essential security and safety properties. PLAN <ref type="bibr" target="#b6">[7]</ref> and Sprocket <ref type="bibr" target="#b7">[8]</ref> from the Smart packet approach provide stronger security guarantees and resource management. However, there exists programs in PLAN that execute in time exponential to the packet size, and Sprocket does not allow the dynamic extension of services as this would require modifying the virtual machine itself. SNAP <ref type="bibr" target="#b8">[9]</ref> balances the tradeoffs between flexibility, efficiency, and safety by introducing limitations in the byte-code language. For instance, program loops not allowed in the language, can only be achieved by sending the active packet back to the last active node, resulting in additional computational overhead for packet processing and unnecessarily increasing networking bandwidth usage.</p><p>Other frameworks introduce extensible router architectures that allow customization of router functionalities at run-time. <ref type="bibr">Scout [10]</ref>, a communication-oriented operating system, can be used to build customized forwarding paths in extensible routers. Initially, packets are classified and then processed by a given path from the source to the destination device. Forwarding paths can be customized for individual packet flows. In Click <ref type="bibr" target="#b11">[11]</ref>, packetprocessing paths are build using simple elements with input and output ports that are linked together in a modular way. Router plugins <ref type="bibr" target="#b12">[12]</ref> introduces extensibility that can be placed at predefined points called gates in the IP forwarding code. Router plugins are dynamically retrieved from a code server and installed in the router's kernel. Their functionalities range from routing, packet scheduling, and security processing to scaling of video streams <ref type="bibr" target="#b13">[13]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">QoS Provisioning in a Heterogeneous Environment</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">The Discrepancy in QoS Provisioning of Heterogeneous Networks</head><p>A growing set of applications such as Voice-over-IP (VoIP) or real-time audio and video streaming combined with application sharing require QoS guarantees. These guarantees must be provided across sub-networks and multiple domains with heterogeneous networking infrastructures, hence the need for functionalities that enable a repeated mapping from a QoS request to the networking parameters of each successive underlying QoS scheme in an end-toend fashion.</p><p>The discrepancy in QoS provisioning seen from the application's view point and the underlying heterogeneous network is illustrated in <ref type="figure" target="#fig_0">Figure 1</ref>. The service description, known in general by the application but not directly by end users, contains flow-specific traffic description for rate (e.g., CBR, sustainable and peak rate), delay, and maximum loss tolerance. Service Level Agreements (SLA) between a customer and a service provider include a Service Level Specification (SLS) for each service specified in the SLA. Generally, this information is not on a perconnection or application basis and does not include detailed information on the source-destination relationship. Moreover, no implementation details or indications on the networking resources available beyond the boundary concerned are given. In a heterogeneous Internetwork, hardware support can differ for each router. Networking parameters for buffer management, scheduling, and active queue management are neither reflected in SLSs and SLAs nor in the description of the service, as SLAs and SLSs describe the boundary at the edge of the network rather than the behavior of nodes in the network.</p><p>The difficulty of maintaining the QoS parameter sequence for end-to-end services stems from the uncertainty how traffic is treated beyond the peering networking domain for which the SLA is valid. This uncertainty is aggravated by the heterogeneity of QoS provisioning capabilities within domains. End-to-end per-connection SLAnegotiation using inter-domain bandwidth brokers would solve the problem, but in turn provokes scalability issues.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">An Abstract Node Model for QoS Provisioning</head><p>QoS provisioning in networking nodes can be modeled as shown on <ref type="figure" target="#fig_1">Figure 2</ref>. Three different operating planes are distinguished. The application plane describes and requests specific QoS guarantees from the network, which will be provided to an application. QoS signaling can be implicit or explicit, and the QoS description absolute, rel- ative, or within statistical bounds. The networking plane consists of per-hop-based networking parameters, domain policies, and end-to-end flow-control mechanisms. This plane reflects the mapping of QoS descriptions into hardware functions placed at the disposal of the corresponding node. Finally the proactive QoS plane performs the translation of QoS parameters from the application plane to the networking plane, and acts according to these parameters on a per-hop basis. The functionality of the translation process has to be limited by a security hierarchy: Functionalities provided by low-numbered levels can be used in the data-plane packet-forwarding process, whereas higher levels include control-plane functionalities such as adding new policies or router services for QoS translation.</p><p>Given the heterogeneity of networks in terms of underlying hardware as well as domain-specific behaviors, the proactive QoS plane cannot be described by simple static means; rather it is appropriate to consider each individual node on the path of a connection as an independent instance of our node model. Eventually, an end-to-end service requiring a certain QoS guarantee can be achieved by chaining these node models as shown in <ref type="figure" target="#fig_0">Figure 1</ref>.</p><p>From this approach the following implicit functionalities of a packet can be derived: Packets are no longer static data containers but can also carry active program code. Data and program code can reside in packets at the same time. These functionalities enable dynamic QoS parameter translation between different QoS frameworks (e.g., Diffserv and Intserv) that are not translatable by simple one-to-one mapping functions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Functional Description</head><p>Before we show how active packets are used to program the proactive environment, we introduce the functional modules necessary in an active router. They consist of four different building blocks: the discovery process, the QoS translation phase, resource management, and feedback mechanisms.</p><p>Discovery process: The discovery process leads to initial behavior bounds 1 that specify upper bounds for available resources. This is done to obtain some a-priori knowledge of QoS availability prior to connection setup. The information gathered on instantaneous resources is then updated periodically. A possible source of information is the trafficengineering opaque LSA messages in OSPF <ref type="bibr" target="#b14">[14]</ref>. Unlike the QoS Broker <ref type="bibr" target="#b15">[15]</ref>, the discovery process is used within the network and does not deal with QoS discovery from the application or end user's view point. The end-to-end QoS behavior is therefore subject to an ongoing and adaptive process throughout the lifetime of a connection, and is a result of the network discovery process present in the background.</p><p>Translation phase: The necessity of active code stems from the fact that QoS translation in general is not a bijective operation, and therefore increases complexity. The following guidelines can be used: Surjective code translation is obtained by projection onto the new QoS space, whereas injective code translation needs additional information based on default mappings and/or educated-guess methods. Bijective translation is primarily achieved with one-to-one table-based mapping. The translation process is done using active code provided by either the network administrator or in certain cases by the application itself as long as safety is not compromised. Classification of the packet allows the appropriate safety level and, if needed, an adequate translation code to be chosen.</p><p>Resource management: Resource management comprises the task of maintaining information on the actual status of resource availability. A certain share of the resources can be initially assigned to the active networking element. The resources that are administered consist of QoS-related resources (e.g., maximum bandwidth per traffic class), policies, resources related to the neighborhood, and router services. From these resources the behavior bounds are derived.</p><p>Feedback mechanisms: Instantaneous traffic characteristics can deviate from the corresponding QoS reservation and are influenced by numerous factors in the network (e.g., traffic shapers, actions of active queue management (AQM) schemes, the granularity of schedulers, amount of cross-traffic), and in end systems (e.g., round-trip time in TCP). All these factors are variable in time, and affect the end-to-end service. Some of them are controlled by specific feedback mechanisms. Adaptive end-to-end service guarantees are feasible when the interaction between feedback mechanisms is taken into account i.e., their interactive behavior is predictable. The proactive QoS environment uses feedback mechanisms that act in an active node as well as between neighbors, and uses different time scales to update behavior bounds. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Active Networking Framework</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Security Risks in Active Networks</head><p>The use of an active networking approach is justified by the following reasons: First, the deployment of protocols is always limited by a well-defined function space that does not allow interoperability between diverse protocols in heterogeneous Internetworks. Programmability provides the necessary flexibility and acts as glue between protocols that finally enables the use of translation mechanisms between existing QoS frameworks. Second, active networks have the advantage that new functionalities can be deployed dynamically. Unfortunately, active networks entail a considerable number of security issues that have to be solved. Any potential approach has to comply with these technical demands:</p><p>• Use of a byte-code language that not only achieves architectural neutrality but also possesses intrinsic safety properties given by the definition of the language itself.</p><p>• The definition of a resource bound divides networking resources into a two-dimensional vector consisting of a local part, which is consumed on a router while executing byte-code instructions, and a network part which limits the spread of a packet in the network.</p><p>• An appropriate safety hierarchy that monitors controlplane activities.</p><p>• Execution of any active byte-code in a secure environment called a Active Networking Sandbox (ANSB).</p><p>• Router services dynamically enhance router functionalities to overcome limitations of the byte-code instructions.</p><p>In the following section we will discuss the safety hierarchy of the above-mentioned requirements. A more detailed description of the byte-code language and the resource bound can be found in <ref type="bibr" target="#b16">[16,</ref><ref type="bibr" target="#b17">17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">The Hierarchical Safety Levels</head><p>In this section an adequate solution for scalable and safe active networking, the safety levels, are introduced and discussed. The goal is to protect networking resources from malicious users and to distribute excess resources fairly at the same time. It is not wise to overwhelm the network with strong cryptographic measures with regard to the data plane in which each packet has to be authenticated and encrypted. The network simply has not enough resources to handle these packets in the data path. Therefore, an adequate and sufficient safety hierarchy is a mandatory building block.</p><p>Packet classification (a policy-based procedure) determines the safety level of packets. Higher safety levels are likely to be coupled with more restrictive policies. Thus, the safety levels of the proactive QoS plane have a pyramidal shape, which restricts the execution of powerful commands according to policies, and therefore achieves the required safety. <ref type="table" target="#tab_0">Table 1</ref> shows the proposed safety hierarchy that addresses the problem. Levels 0 and 1 of the hierarchy address the data path. Level 0 corresponds to traditional packet-forwarding process without execution of active code. Packets containing simple active byte-code are allowed on level 1. Safety is solved by restrictions in the language definition and the use of a sandbox environment. SNAP <ref type="bibr" target="#b8">[9]</ref> is an example of such a byte-code language. A simple packet byte-code enables immediate QoS provisioning and minimizes security efforts because no verification of plugins has to be done. In traditional routers, QoS decisions are taken using local information and information from packet headers. The main advantage of the new approach is that packets are able to take additional information from preceding hops into account, hence acting in a flexible and distributed manner. A router will execute the active byte-code in a special sandbox environment that ensures safety.</p><p>Level 2 provides certain router-service primitives in addition to the byte-code language. As router services in general are more costly in terms of CPU cycles than simple byte-code instructions, and can differ significantly in the cost as well, the definition of a resource bound as given above is mandatory. <ref type="bibr" target="#b16">[16]</ref> identifies and quantifies expensive router services (e.g., router services that allow packets to obtain information on congestion status and policies installed at the given hop) that belong to this safety level.</p><p>The next higher level, i.e., level 3 allows modification and manipulation of policies that are installed using router services. As an example the RSVP soft-state mechanism is mentioned here in which state information is updated by RSVP reservation request (Resv) messages to maintain reservation state and RSVP Path messages that store path state in each node along the way. Unlike RSVP this level does not allow the installation of new states in routers.</p><p>The insertion of policies and complex rule manipulation is handled by level 4. In the RSVP example (cf. Section 5), this reflects in the creation of new state information in a router.</p><p>Level 5 finally allows the installation of dynamic router services that can provide and maintain information for active packets in lower levels. For security reasons, no level 4 packets from outside a service provider's network are allowed to enter the domain. Thus only certain management hosts within the ISP domain are allowed to inject such packets. Nevertheless when a certain well-known service should be installed, agents that reside at the network edge can, for example, translate the requested service into a predefined level 4 active code that will then install the service in the ISP's network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Example Applications</head><p>Figure 3 sketches a heterogeneous Internetwork environment to illustrate an example of the deployment of endto-end QoS guarantees in heterogeneous IP networks. The sender is directly attached to an Intserv domain, and therefore utilizes RSVP Tspec messages to describe the desired QoS, while the receiver is a mobile client attached to a General Packet Radio Service (GPRS) <ref type="bibr" target="#b18">[18]</ref> network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The Intserv/RSVP Domain</head><p>The first domain supports full RSVP on all routers in the domain and might correspond to a small ISP placed at the edge of the network (e.g., in the metropolitan area) and therefore is capable of handling per-flow RSVP signaling. This domain does not provide any active routers at all and active packets are forwarded as regular IP packets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The Diffserv Network with Active Nodes</head><p>The second domain, a core ISP, full RSVP support cannot be provided for scalability reasons. Therefore it makes sense to install dynamic router services in which the behavior bound directly derives from the SLA established with the Intserv domain. Simplified RSVP support is then provided using dynamic router services. Active packets that enter this domain and have a safety level higher than 1 are simply preempted. <ref type="bibr" target="#b1">2</ref> Only authenticated and authorized packets are allowed to install dynamic router services on the active routers in the Diffserve domain. These dynamic router services then allow RSVP messages to be handled in order to dynamically configure hardware classifiers and policers for data packet processing. <ref type="figure" target="#fig_2">Figure 4</ref>.a) shows the sequence executed when adding a new router service. The active packet arriving at the node asks to register a new router service given as payload. As the active packet is not preempted, the byte-code interpreter executes the register request by passing the information to the active-code translator. The active-code translator installs new policies, reserves resources, and, if successful, registers the new service in the service table. At the same time classifiers for the RSVP messages are set up.</p><p>In active routers at the edge, RSVP Resv messages are accepted using policies from the policy database. In the core, no further verification of the RSVP Resv messages has to be done, and the content of the message is used to install appropriate filters and flow parameters according to the behavior bounds given in the policy and resource databases <ref type="figure" target="#fig_2">(Figure 4</ref>.b).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A pure Active Networking Domain</head><p>In a pure active networking domain we can imagine the following scenario. Within the domain, no native RSVP support is given, but active packets with security level up to 1 are executed <ref type="figure" target="#fig_2">(Figure 4.c)</ref>. Here, QoS adaptation takes place directly in the data path. Small active-code sections can use the DSCP and local congestion status information to influence the forwarding behavior of a given packet within the limits provided by the ANSB. This ISP provides a slightly larger degree of freedom to applications, but in principle is not willing to guarantee anything more than that. Because of charging of active packets at the edge and the safety properties of the byte-code, this network can be exploited with a minium of administration effort. The service offered is comparable to the well-known postal priority service.</p><p>Although this domain does not support strict QoS guarantees, the end-to-end service is improved, and can in the best case even hide the lack of full RSVP support in all routers on the data path.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Mobile Network using a GPRS Backbone</head><p>The GPRS architecture <ref type="bibr" target="#b18">[18]</ref>   and towards the mobile stations through the Base Station Subsystems (BSS) in its area. GPRS allows the definition of QoS profiles in terms of service priority, reliability, delay and throughput. The appropriate translation process between the Diffserv network and the GPRS backbone can be achieved by router services installed on the GGSN similar to the Diffserv network with active nodes presented above.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Summary and Conclusion</head><p>This paper shows how the end-to-end quality of service can be improved with active networks. Based on existing QoS capabilities, the active networking approach proposed here provides the necessary tools for dynamic translation between different QoS schemes and, therewith, enables efficient linkage of QoS parameters to build end-to-end services.</p><p>The safety hierarchy introduced consists of six safety levels, and provides the necessary safety guarantees and enables dynamic router services for QoS translation in the control plane on the one hand. On the other hand, it also allows the execution of simple active code, even in the data path.</p><p>In general, information on the network infrastructure and network topologies is not publicly available because ISPs consider this information as sensitive. The use of active networks as proposed in this paper does not expose this information. First, only a part of the available resources can be placed at the disposal of the ANSBs, and second, the safety hierarchy ensures that only information required for a given task will be made available, e.g., active code in the data path restricted to safety level 1 cannot use dynamic router services.</p><p>It is clear that this paper only showed a small portion of possible solutions. Nevertheless, given the flexible approach using Active Networks, the applicability to other scenarios is ensured.</p><p>We successfully implemented the lower safety levels on a IBM PowerNP 4GS3 <ref type="bibr" target="#b19">[19]</ref> network processor. In the fu-ture, we intend to focus on higher safety levels that would allow certain forwarding and control functionalities to be off-loaded directly onto a network processor in a highly dynamic way. We believe that QoS provisioning can significantly benefit from network processors using Active Networks for the dynamic off-loading of functions from the control point.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: End-to-end services in a heterogeneous environment. Each cube is an instance of the node model presented in Section 3.2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Node model for QoS provisioning in a proactive environment composed of the application, networking, and proactive plane.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Sequence of procedures in the ANSB for different packets in different domains.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="true"><head>Table 1 : Safety hierarchy in active networks.</head><label>1</label><figDesc></figDesc><table>Safety 
level 

Allowed network functionalities 
Packet and router requirements 

5 
Dynamic router services (active code): registering 
Authentication of active packets needed using a 
new router services 
public key infrastructure. 
4 
Complex policy insertion and manipulation 
Admission control at the edge of the network, 
trusted within a domain. 
3 
Simple policy modification and manipulation 
Running in a sandbox environment, limited by 
predefined rules and installed router services. 
2 
Creation of new packets and resource-intensive 
Sandbox environment based on the knowledge of 
router services (lookups etc.) 
the instruction performance. 
1 
Simple packet byte-code 
Safety issues solved by restrictions in the language 
definition and the use of a sandbox. 
0 
No active code present in packets 
Corresponds to traditional packet forwarding process. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head></head><label></label><figDesc>supports interworking of GPRS and IP networks. A Gateway GPRS Support Node (GGSN) is acting as the interface between the GPRS back- bone and the IP network. Packets are then forwarded to the corresponding Serving GPRS Support Node (SGSN) which is responsible for the delivery of data packets from</figDesc><table>Sender 

Receiver 

Diffserv Network 
with Active Nodes 

Mobile Network using 
a GPRS Backbone 

GGSN 

SGSN 

Intserv/RSVP 

Pure Active Network Domain 

BSS 

Figure 3: End-to-end service in a heterogeneous environment crossing three different domains. 

Services Table 

Route 
Sched 
AQM 
Cls 
Pol 

Active Code 
Translator 

Feedback 
Control 

Router Service Handler 

Outgoing 
Incoming 
Packets 
Packets 

Control 

Data 

Plane 

Plane 

Networking Hardware 

Byte−code 
Interpreter 

Database 
Database 

Policy 
Resource 
Neighborhood 
Database 

Networking−specific Services 

(a) Service registration for simplified 
RSVP functionalities in the Diffserv 
Network using active packets with 
safety level 5. 

Services Table 

Route 
Sched 
AQM 
Cls 
Pol 

Active Code 
Translator 

Feedback 
Control 

Router Service Handler 

Outgoing 
Incoming 
Packets 
Packets 

Control 

Data 

Plane 

Plane 

Networking Hardware 

Byte−code 
Interpreter 

Database 
Database 

Policy 
Resource 
Neighborhood 
Database 

Networking−specific Services 

(b) RSVP Resv message handled by the 
ANSB in the core of the Diffserv Net-
work. 

Services Table 

Route 
Sched 
AQM 
Cls 
Pol 

Active Code 
Translator 

Feedback 
Control 

Router Service Handler 

Outgoing 
Incoming 
Packets 
Packets 

Control 

Data 

Plane 

Plane 

Networking Hardware 

Byte−code 
Interpreter 

Database 
Database 

Policy 
Resource 
Neighborhood 
Database 

Networking−specific Services 

(c) Active packets with safety level 1 can 
profit from limited QoS functionalities 
in the pure active networking domain. 

</table></figure>

			<note place="foot" n="1"> The behavior bound consists of a classifier describing to whom the service will be offered, a traffic specification (e.g., sender Tspec), and a resource bound vector that characterizes the maximum resource usage of the router service.</note>

			<note place="foot" n="2"> Preemption can be done by using a preemption flag in the active header, stackable active headers, classification based on the active code, or domain tags derived from an Autonomous System (AS). In terms of operating expenses and complexity, only the use of a preemption flag is reasonable, although a possible asymmetric behavior has to be accepted. Thus active routers at the ingress of a domain are responsible for setting this flag correctly.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>The authors would like to thank Robert Haas and Marcel Waldvogel for the valuable comments and and helpful discussions.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">An architecture for Differentiated Services. RFC 2475, Internet Engineering Task Force</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Blake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Blake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Carlson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Davies</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Weiss</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Towards provisioning Diffserv intra-nets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ulrich</forename><surname>Fiedler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Polly</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernhard</forename><surname>Plattner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th International Workshop on Quality of Service</title>
		<meeting>the 9th International Workshop on Quality of Service</meeting>
		<imprint>
			<date type="published" when="2001-06" />
		</imprint>
	</monogr>
	<note>IWQoS 01</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Integrated Services in the Internet architecture: an overview. RFC 1633, Internet Engineering Task Force</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Braden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Internet Stream Protocol version 2 (ST2) protocol specification -version ST2+. RFC 1819, Internet Engineering Task Force</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mccloghrie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rose</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">SRP: a scalable resource reservation protocol for the Internet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Almesberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ferrari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-Y. Le</forename><surname>Boudec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Workshop on Quality of Service IWQoS</title>
		<imprint>
			<date type="published" when="1998-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Tennenhouse. ANTS: A toolkit for building and dynamically deploying network protocols</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">J</forename><surname>Wetherall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Guttag</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE OPENARCH &apos;98</title>
		<meeting>IEEE OPENARCH &apos;98</meeting>
		<imprint>
			<date type="published" when="1998-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">PLAN: A packet language for active networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><forename type="middle">W</forename><surname>Hicks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pankaj</forename><surname>Kakkar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><forename type="middle">T</forename><surname>Moore</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carl</forename><forename type="middle">A</forename><surname>Gunter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Scott</forename><surname>Nettles</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Functional Programming</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="86" to="93" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Smart packets for active networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Schwartz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Jackson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Strayer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Rockwell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Partridge</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computer Commun. Rev</title>
		<imprint>
			<date type="published" when="1998-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Practical programmable packets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">T</forename><surname>Moore</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hicks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Nettles</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 20th</title>
		<meeting>the 20th</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
				<title level="m">Annual Joint Conference of the IEEE Computer and Communications Societies (INFOCOM &apos;01)</title>
		<imprint>
			<date type="published" when="2001-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Making paths exlicit in the scout operating system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Mosberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">L</forename><surname>Peterson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Second USENIX Symposium on Operating System Design and Implementation (OSDI)</title>
		<meeting>the Second USENIX Symposium on Operating System Design and Implementation (OSDI)</meeting>
		<imprint>
			<date type="published" when="1996-10" />
			<biblScope unit="page" from="153" to="167" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The Click modular router</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Kohler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Morris</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jannotti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">F</forename><surname>Kaashoek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. on Computer Systems</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="263" to="297" />
			<date type="published" when="2000-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Router plugins: a software architecture for next-generation routers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Decasper</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zubin</forename><surname>Dittia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guru</forename><surname>Parulkar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernhard</forename><surname>Plattner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Networking</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="2" to="15" />
			<date type="published" when="2000-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">An active router architcture for multicast video distribution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Keller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dasen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Decasper</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Fankhauser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Plattner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19th Annual Joint Conference of the IEEE Computer and Communications Societies (IN-FOCOM 2000)</title>
		<meeting>the 19th Annual Joint Conference of the IEEE Computer and Communications Societies (IN-FOCOM 2000)</meeting>
		<imprint>
			<date type="published" when="2000-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Traffic engineering extensions to OSPF. draft-katzyeung-ospf-traffic-07.txt</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dave</forename><surname>Katz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Derek</forename><surname>Yeung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kireeti</forename><surname>Kompella</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002-08" />
		</imprint>
	</monogr>
	<note>Work in progress</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">The QoS broker</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Klara</forename><surname>Nahrstedt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><forename type="middle">M</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Multimedia</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="53" to="67" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">The potential of just-in-time compilation in active networks based on network processors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andreas</forename><surname>Kind</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roman</forename><surname>Pletka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Burkhard</forename><surname>Stiller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE OPENARCH &apos;02</title>
		<meeting>IEEE OPENARCH &apos;02</meeting>
		<imprint>
			<date type="published" when="2002-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Adaptive endto-end Quality-of-Service guarantees in IP networks using an active networking approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roman</forename><surname>Pletka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Burkhard</forename><surname>Stiller</surname></persName>
		</author>
		<idno>Nr. 138</idno>
		<imprint>
			<date type="published" when="2002-06" />
		</imprint>
		<respStmt>
			<orgName>Computer Engineering and Networks Laboratory (TIK), ETH Zürich</orgName>
		</respStmt>
	</monogr>
<note type="report_type">TIK-Report</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">GSM phase 2+ general packet radio service GPRS: Architecture, protocols, and air interface</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Bettstetter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans-Jörg</forename><surname>Vögel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jörg</forename><surname>Eberspächer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communication Surveys</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
				<ptr target="http://www.ibm.com/chips/techlib/techlib.nsf/products/IBMPowerNPNP4GS3" />
		<title level="m">IBM PowerNP NP4GS3 network processor datasheet</title>
		<imprint>
			<date type="published" when="2002-02" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
