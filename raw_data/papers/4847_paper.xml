<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T17:03+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Integration of SYSTRAN MT systems in an open workow Mats Attnäs</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename><surname>Systran</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Parc Club Orsay Université</orgName>
								<address>
									<addrLine>Parvis de la Défense, 4 rue Jacques Monod -Bât G, 1, Parvis de la Défense</addrLine>
									<postCode>92044, 91893, 92044</postCode>
									<settlement>Paris La Défense, Orsay Cedex, Paris La Défense</settlement>
									<country>France, France, France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Grande</forename><surname>La</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Parc Club Orsay Université</orgName>
								<address>
									<addrLine>Parvis de la Défense, 4 rue Jacques Monod -Bât G, 1, Parvis de la Défense</addrLine>
									<postCode>92044, 91893, 92044</postCode>
									<settlement>Paris La Défense, Orsay Cedex, Paris La Défense</settlement>
									<country>France, France, France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Arche</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Parc Club Orsay Université</orgName>
								<address>
									<addrLine>Parvis de la Défense, 4 rue Jacques Monod -Bât G, 1, Parvis de la Défense</addrLine>
									<postCode>92044, 91893, 92044</postCode>
									<settlement>Paris La Défense, Orsay Cedex, Paris La Défense</settlement>
									<country>France, France, France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pierre</forename><surname>Senellart</surname></persName>
							<email>psenellart@systran.fr</email>
							<affiliation key="aff0">
								<orgName type="institution">Parc Club Orsay Université</orgName>
								<address>
									<addrLine>Parvis de la Défense, 4 rue Jacques Monod -Bât G, 1, Parvis de la Défense</addrLine>
									<postCode>92044, 91893, 92044</postCode>
									<settlement>Paris La Défense, Orsay Cedex, Paris La Défense</settlement>
									<country>France, France, France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Systran</forename><forename type="middle">S A</forename></persName>
							<affiliation key="aff0">
								<orgName type="institution">Parc Club Orsay Université</orgName>
								<address>
									<addrLine>Parvis de la Défense, 4 rue Jacques Monod -Bât G, 1, Parvis de la Défense</addrLine>
									<postCode>92044, 91893, 92044</postCode>
									<settlement>Paris La Défense, Orsay Cedex, Paris La Défense</settlement>
									<country>France, France, France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Inria</forename><surname>Futurs</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Parc Club Orsay Université</orgName>
								<address>
									<addrLine>Parvis de la Défense, 4 rue Jacques Monod -Bât G, 1, Parvis de la Défense</addrLine>
									<postCode>92044, 91893, 92044</postCode>
									<settlement>Paris La Défense, Orsay Cedex, Paris La Défense</settlement>
									<country>France, France, France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jean</forename><surname>Senellart</surname></persName>
							<email>jsenellart@systran.fr</email>
							<affiliation key="aff0">
								<orgName type="institution">Parc Club Orsay Université</orgName>
								<address>
									<addrLine>Parvis de la Défense, 4 rue Jacques Monod -Bât G, 1, Parvis de la Défense</addrLine>
									<postCode>92044, 91893, 92044</postCode>
									<settlement>Paris La Défense, Orsay Cedex, Paris La Défense</settlement>
									<country>France, France, France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Systran</forename><forename type="middle">S A</forename><surname>La</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Parc Club Orsay Université</orgName>
								<address>
									<addrLine>Parvis de la Défense, 4 rue Jacques Monod -Bât G, 1, Parvis de la Défense</addrLine>
									<postCode>92044, 91893, 92044</postCode>
									<settlement>Paris La Défense, Orsay Cedex, Paris La Défense</settlement>
									<country>France, France, France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Grande</forename><surname>Arche</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Parc Club Orsay Université</orgName>
								<address>
									<addrLine>Parvis de la Défense, 4 rue Jacques Monod -Bât G, 1, Parvis de la Défense</addrLine>
									<postCode>92044, 91893, 92044</postCode>
									<settlement>Paris La Défense, Orsay Cedex, Paris La Défense</settlement>
									<country>France, France, France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Integration of SYSTRAN MT systems in an open workow Mats Attnäs</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>A general mature rule-based MT system is bound to reach a saturation point because of the intrinsic complexity of the natural language description. For such systems, maintenance is a complex task and customization is expensive and time-consuming. Therefore, improving the system&apos;s interaction with the linguistic rules has proven to be more productive than endlessly adding new rules and exceptions to reach the theoretical accuracy level of 100%. In this paper , we describe our strategy to open up such a system and provide practical details on how this was done on SYSTRAN&apos;s classical engines. This approach is the foundation of the SYSTRAN version 5 translation engines. We show the immediate benets of the evolution of our architecture and the new extension potentiality.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.2">Modules</head><p>The XML workow described in the previous and to re-inject the modied syntax tree into the translation engine (see section 3.3).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.3">Declarative linguistic rules</head><p>The linguistic rules in SYSTRAN's classical approach are written directly in C, at a very low level. This makes them very powerful since they have full control over the linguistic procedures.</p><p>However, the visibility is low and the learning curve is very steep.</p><p>Ideally, everything should be described in a higher level formalism, easily accessible to linguists. The linguists should not have to deal with implementation details that are not related to linguistics. This is the main concept of NG.</p><p>Given the amount of rules available in the system, and also the way they work, it is very hard to create this formalism. Covering them with a declarative approach would mean re-inventing a kind of programming language that would not necessarily be easier to work with. Also, the time needed for such a conversion is a considerable investment. Therefore, as a compromise, new rules may be written declaratively, while keeping the available rules as they are.</p><p>The formalism for these rules is easy to use and will eventually replace the classical approach. In the meantime, it does however give a possibility for additional development. This is possible using the common data structure for the syntagm structure described in the previous section.</p><p>Example of a simple declarative rule:</p><p>&lt;Rule id="NP11" confidence="0. plural is set, it should not keep the attribute singular if that was set by default.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Generic Lookup Operator</head><p>In <ref type="figure" target="#fig_3">Figure 1</ref>   Simplest transitions are letters but the following special operators can also be used:</p><p>• character properties operators (for instance translation memory takes into account characters properties for selecting best match)</p><p>• Unicode operators -generic Unicode regular expression (level 1)</p><p>• XPath operators on the complete sentence</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>XML</head><p>• predened lookup operators (chemical compounds, numbers, date. . . )</p><p>• sub-matching: possibility of calling recursively a sub-graph as a part of the current entry. This features allows for representation of local grammars as described in <ref type="bibr" target="#b0">(Gross, 1997)</ref> • any request on the current XML node (containing information accumulated during the process)</p><p>Any lookup performed by any module can have access to this whole set of lookup tools this means that even simple dictionary entries have access to those complex operators for restricting/extending matching conditions.</p><p>In addition, the automaton can be combined on the y with lookup rules. These lookup rules are also described using a nite state transducer and describe the possible variants allowed during the lookup. These variants can be associated to a matching cost. <ref type="figure" target="#fig_9">Figure 5</ref> represents such a transducer for some basic spell-checking rules. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Sample Applications</head><p>In this section, we illustrate on three simple examples, how the new architecture integrating classical translation engines allow to eciently improve translation quality and interact with existing rule set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Linguistic improvement by input simplication</head><p>One simple example of the immediate outcome of the architecture as described above is the linguistic improvement coming from the simplication of the input. For instance, it is possible to introduce a module in the workow special- In the case the user wants to modify system choice, the user choice is posted in the XML workow, and this information will be used by the homography resolution routine as a priority rule. <ref type="figure">Figure 6</ref> shows user review and selection of homography resolution. On the same model, any system choice can be published and manually modied through user interaction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Integrating external rulescustomizing the system</head><p>Using the permanent synchronization between the classical analysis area and the high level tree representation, and by dening appropriate hooks in the linguistic workow, it is possible to add modules that independently modify the analysis of the sentence or add new transfer patterns before giving the control back to the existing workow. Hence, adding special linguistic descriptions specic to a customized domain or modifying dynamically normal system choices is fully possible.</p><p>For instance, one possible use of this extension possibility that we are currently working on, is to use statistical methods to validate and also extract new rules using corpus.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4</head><p>Conclusions and Outlook To complete this architecture, the current development focal points are:</p><p>• Improving the value of existing rules by associating ponderation to each of them.</p><p>Today it is possible to know the system's choices and to modify them. The next step is for us to know the system's hesitations.</p><p>In a post-editing workow, the reviewer would be able to focus on certain areas of the translation output, which would yield to higher productivity. The same ponderation can be used to calculate the global condence level for the complete sentence translation, or can be used to decide that some decision should not be taken, and that the dierent possibilities be analyzed in parallel.</p><p>• Continue the modularization eort on the linguistic code in order to obtain smaller agents. This will reduce the time required to generate new language pairs, and will enable a deeper interaction with the existing set of rules.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>1</head><label></label><figDesc>Introduction -background Over the last 30 years, SYSTRAN has devel- oped and brought to a commercial level about 40 language pairs plus more than 20 other lan- guage pairs still in development or limited to a specic usage. These systems covers 20 dier- ent languages for which corresponding analysis or synthesis has been incrementally built, which represents several hundred thousands of linguis- tic rules. This huge linguistic asset has evolved along with programming languages and is now an aggregate of several generations of rules and rule exceptions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>need for adapting and ne-tuning a translation engine linguistic rules for a specic domain or application. The same problematic is reported in (Keh-Yih Su, 1999). At the same time, an important eort to build new rule-based systems based on state-of-the- art NLP development concepts has been carried out (J. Senellart, 2001). First commercial sys- tems (Arabic→English, and Swedish→English) belonging to these SYSTRAN New Genera- tion (NG) engines have been released in 2004 as part of SYSTRAN version 5.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>clude in section 4 by giving new perspectives and additional evolution axis. The architecture described in this paper is the basis of all SYSTRAN version 5 systems re- leased in June 2004. 2 New Architecture -Key concepts We describe in this section the key concepts of the new architecture built to facilitate main- tenance of classical systems and to get the maximum from their linguistic rules. This in- clude code modernization, integration within an XML workow, introduction of high level data structures and a powerful lookup mechanism.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 1 describes</head><label>1</label><figDesc>Figure 1 describes this global architecture. 2.1 Code modernization SYSTRAN translation engines were originally written (in the 70s) in an assembly language; the code was then migrated to the C programming language. Following the evolution of programming languages and software design, more and more portions of the code are now written in C ++ . More than a simple rewriting, the switch to an object-oriented language implies: • a real redesign of the corresponding layers of the engines, simplifying modularization tasks as described in section 2.2 • the introduction of high level linguistic data structures as described in section 2.3 Another recent evolution of software comes with the introduction of the Unicode standard (The Unicode Consortium, 2003), which provides a way to represent in a single character repertoire all characters needed for most of the natural languages alphabets, along with character encodings (namely UTF-8, UTF-16 and UTF-32) representing these characters as sequence of bytes. This is a real change from traditional character encodings (ISO-8859-1, SHIFT-JIS, BIG5. . . ) which did not permit, for instance, the representation in the same document of French and Chinese texts. SYSTRAN translation engines, while supporting a variety of character sets in the source documents, internally used a combination of traditional encodings and ASCII transliterations. This caused a number of limitation and diculties, partly because workarounds had to be designed to represent dierent alphabets in the translation ow and partly because transliterations were intricate to manage inside linguistic routines. To</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>Figure 1: This schema describes the translation process. Boxes are the dierent modules. Modules communicate together using a get/post mechanism and publish their output using the XML workow. The classical analysis area is synchronized with a NG syntagm representation on which NG rules apply. Each module use a generic lookup mechanism (XmlFind, rightmost box) to recognize patterns or trigger rules on the current sentence representation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 3 :</head><label>3</label><figDesc>Figure 2: On the left, graph of the relations between words in the sample sentence The director comments on the making of the lm. (the relation types are not shown). On the right, syntagm tree for the same sentence, derived from the graph; head words of each syntagm are linked to the syntagm with a bold edge. SyntaxGraphToSyntagmDAG Input: a graph G of labelled syntactic relations (acyclic) Output: a DAG T of syntagms For each connected component H in G: 1. Build a mapping M which maps each word node to an elementary syntagm containing this word. 2. Select a node n from H with no incoming link. 3. For each n' in relation with n (order by relation kind priority) (a) Recursively call step 2 with n' as new n, which gives a syntagm DAG T' (b) Create a new syntagm s, with M(n) as head word and T' as other constituent. Put the result in M(n) and return it. (Connected components are nally regrouped into clauses, and relations between clauses are computed. Enumerations are also handled, this is not detailed here.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>, the rightmost box represents a generic component performing lookup for the different modules. This component called XmlFind is used for dictionary lookup, rule triggering, and complex morphology description. This mechanism is very generic and extremely powerful based on nite state automaton technologies, it per- forms extended linguistic regular expressions. Those expressions applies on the XML structure used for the workow and has subsequently ac- cess to most linguistic information and meta- information on the current sentence.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>Figure 4 describes for instance how normalization rules are internally represented using nite state transducers.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Finite state transducer describing normalization rules: I'd is normalized into I had when followed by a past participle. This last constraint is represented using a special transition.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Simple spellcheck rules: a/ right quote and straight quotes are equivalent. b/ yze can be matched by yze with a cost 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head></head><label></label><figDesc>ized in date description or other local gram- mar. For dates, for instance, we have intro- duced modules specialized in parsing, analysis and generation of dates. Those modules interact with the complete analysis by posting a simpli- ed representation of the recognized expression in the workow together with syntactic and se- mantic information used by the native date lex- ical routine. In contrast to an external entity recognition approach that could substitute date by a key- word, this approach communicates information to the internal routines about the properties of the entities. Reciprocally, the linguistic code in charge of the sentence generation can communi- cate, in the same way, information to the date generation module for instance case or agree- ment constraints. Finally, those modules can perform a partial recognition by letting ambiguous sequences be normally processed by the existing mechanisms. This simple example shows the simplicity with which an external mechanism can interact with existing code and customize the translation process. 3.2 Introduction of control mechanisms A second example is the new possibility of inter- acting with the translation engine. For instance, in version 5, the user has the possibility of see- ing homographies resolved by the analysis and interact with choice of the system. This interac- tion mechanism is started by the posting of ho- mography information by the routine resolving the ambiguity. The XML markup carries this information which is presented to the user for validation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head></head><label></label><figDesc>We have described in this paper the mechanism we use to open a complex MT system and to integrate it in an open workow. The integra- tion process benets from the linguistic rule set, provides control mechanisms (used for module communication, or interaction with the user), allows for an easy plug-in of external modules in charge of specic linguistic tasks (leading to more ecient system customization, or to com- bining a rule-based approach with a statistical- based approach), and reveals all intermediate re- sults of the translation process in a structured format to the user.</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Finite-State Language Processing, chapter The Construction of Local Grammars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gross</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>MIT Press</publisher>
			<biblScope unit="page">329354</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">New Generation SYSTRAN translation system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Váradi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Senellart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Dienes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MT Summit VIII Proceedings</title>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">SYS-TRAN new Generation: the XML translation workow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Romary</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Senellart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Boitet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MT Summit IX Proceedings</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A customizable, self-learnable parameterized mt system: the next generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jing-Shin Chang Keh-Yih</forename><surname>Su</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MT Summit VII Proceedings</title>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">The Unicode Standard. Version 4.0</title>
		<imprint>
			<date type="published" when="2003" />
			<publisher>Addison Wesley Publishing Company</publisher>
		</imprint>
	</monogr>
	<note>The Unicode Consortium</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">User review of system choices and selection of homography resolution within SYSTRAN Translation Project Manager</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
		</imprint>
	</monogr>
	<note>version 5</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
