<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:38+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Discriminatory Processor Sharing Revisited</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Avrachenkov</surname></persName>
							<email>k.avrachenkov@sophia.inria.fr</email>
							<affiliation key="aff1">
								<orgName type="institution">INRIA Sophia Antipolis</orgName>
								<address>
									<country>France., France</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">񮽙 CWI</orgName>
								<address>
									<settlement>Amsterdam</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="institution">񮽙񮽙 Eindhoven University of Technology</orgName>
								<address>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Ayesta</surname></persName>
							<email>uayesta@sophia.inria.fr</email>
							<affiliation key="aff1">
								<orgName type="institution">INRIA Sophia Antipolis</orgName>
								<address>
									<country>France., France</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">񮽙 CWI</orgName>
								<address>
									<settlement>Amsterdam</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="institution">񮽙񮽙 Eindhoven University of Technology</orgName>
								<address>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Brown</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Núñez</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">-Queija 񮽙</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Discriminatory Processor Sharing Revisited</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>As a natural multi-class generalization of the well-known (egalitarian) Processor Sharing (PS) service discipline, Discriminatory Processor Sharing (DPS) is of great interest in many application areas, including telecommunications. Under DPS, the mean response time conditional on the service requirement is only known in closed form when all classes have exponential service requirement distributions. For generally distributed service requirements, Fayolle et al. [1] showed that the expected conditional response times satisfy a system of integro-differential equations. In this paper, we exploit that result to prove that, provided the system is stable, for each class the expected unconditional response time is finite and that the expected conditional response time has an asymptote. The asymptotic bias of each class is found in closed form, involving the mean service requirements of all classes and the second moments of all classes but the one under consideration. In the course of the development we prove two other results that are of independent interest: we establish a conservation law for the time average unfinished work of all classes and, using a stochastic coupling argument, we show that the response times of different classes are stochastically ordered according to the DPS weights. Finally, we study DPS as a tool to achieve size based scheduling and we provide guidelines as to how the weights of DPS must be chosen such that DPS outperforms PS.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>Kleinrock <ref type="bibr" target="#b1">[2]</ref> introduced and first studied the socalled Discriminatory Processor Sharing (DPS) discipline <ref type="bibr" target="#b0">1</ref> , where a single server is shared by M job classes.</p><p>All jobs present in the system are served simultaneously with rates controlled by a vector of weights {g k &gt; 0; k = 1, . . . , M}. If there are N j jobs of class j present in the system, j = 1, . . . , M, each class-k job is served at rate g k / 񮽙 M j=1 g j N j . When all the weights are equal, this is equivalent to the standard Processor Sharing (PS) system.</p><p>By changing the DPS weights, one can effectively control the instantaneous service rates of different job classes. Thus, an appropriate choice of the DPS weights may enable differentiated quality of service among different job classes. The range of applications for DPS is broad. In the context of the Internet, one can think of a situation where ADSL subscribers are offered different payment rates and in return obtain corresponding shares of the available bandwidth. The DP S system also appears as a natural candidate to model flow level sharing of TCP flows with different flow characteristics such as round trip times and packet loss probabilities <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b5">[6]</ref>. DPS is also a convenient theoretical abstraction of the weighted round-round robin discipline, which is used in operating systems for task scheduling.</p><p>Fayolle et al. <ref type="bibr" target="#b0">[1]</ref> proved that previously found expressions for the expected conditional response time <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b6">[7]</ref> were not correct and obtained the expected conditional response times as the solution of a system of integrodifferential equations (see Section II for more details). In the case of exponentially distributed service requirements, these lead to closed-form expressions for the expected conditional response times and the unconditional mean response times can be found as the solution to a system of linear equations. In particular, it is shown in <ref type="bibr" target="#b0">[1]</ref> that, independent of the weights, for each class the slowdown under DPS tends to the (constant) slowdown of the PS model as the service requirement increases to infinity. Also for exponential service requirement distributions, Rege and Sengupta <ref type="bibr" target="#b7">[8]</ref> obtained higher moments of the queue length distribution as the solutions to linear equations and, under the same assumptions, they also proved a heavy-traffic limit theorem. These results were recently extended to phase type distributions by Van Kessel et al. <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b8">[9]</ref>. For general service requirement distributions, Rege and Sengupta <ref type="bibr" target="#b9">[10]</ref> proved a decomposition theorem for the response times conditional on service requirements. Grishechkin <ref type="bibr" target="#b10">[11]</ref> further explored the relationship between Processor Sharing queues and Crump-Mode-Jagers branching processes. More recently, Bonald and Massoulie <ref type="bibr" target="#b3">[4]</ref> discussed the applicability of DPS in modeling user-level performance in the Internet. Guo and Matta <ref type="bibr" target="#b11">[12]</ref> have carried out an approximate analysis of DPS for general distributions. More recently, the asymptotic behavior of the delay distribution in a DPS system has been studied by <ref type="bibr">Borst et al. [5]</ref>, Altman et al. <ref type="bibr" target="#b2">[3]</ref> study the behavior of DPS in overload and Bonald&amp;Proutì ere <ref type="bibr" target="#b12">[13]</ref> obtain insensitive bounds for the queue length distribution for certain parameter ranges.</p><p>This paper is organized as follows: in the next section, we review the DPS model and integro-differential equations that describe the expected conditional response times. In Section III we prove that the mean unconditional response time of each class is finite, provided the system is stable. In Section IV we obtain a conservation law for the mean unfinished work. Then, in Section V we show that the expected conditional response times for different job classes are stochastically ordered according to the DPS weights. Then, using the above mentioned conservation law, we study in Section VI the asymptotic behavior of the expected conditional response times. In Section VII we compare the unconditional mean sojourn time of a DPS discipline with the PS discipline in the context of size based scheduling. In Section VIII we investigate the behavior of DPS by means of numerical examples. The paper ends with some concluding remarks in the final section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. THE DPS MODEL</head><p>In the ensuing analysis, unless otherwise stated, we assume that k ∈ N is a job class index, where N = {1, . . . , M} is the set of indexes. Except for Proposition 1 below, we assume throughout the paper that the arrival process of class k is a Poisson process with rate λ k and the service requirement distribution is</p><formula xml:id="formula_0">F k (·). We shall use F k (x) = 1 − F k (x)</formula><p>to denote the complementary class-k service requirement distribution and E[X n k ] to denote its n-th moment. For notational ease we shall write</p><formula xml:id="formula_1">E[X k ] = E[X 1 k ].</formula><p>The aggregated job arrival process is Poisson with rate λ = 񮽙 M j=1 λ j . Conditioning on the class a job belongs to, the n-th</p><formula xml:id="formula_2">moment of the aggregated service requirement E[X n ] is given by E[X n ] = 񮽙 M j=1 λj λ E[X n j ]. Define ψ k (x) = λ k g k F k (g k x), Ψ(x) = M 񮽙 k=1 ψ k (x).</formula><p>Steady state exists in the non-saturated regime, i.e.,</p><formula xml:id="formula_3">when ρ = 񮽙 M k=1 ρ k &lt; 1, where ρ k = λ k E[X k ] for k ∈ N . Let T k (t)</formula><p>be the expected conditional response time (time in the system) of a class-k job whose service requirement is t and let T 񮽙 k (t) be its derivative. It was proven in <ref type="bibr" target="#b0">[1]</ref> that T k (t) can be expressed as</p><formula xml:id="formula_4">T k (t) = g k 񮽙 t/gk 0 a(x)dx + 񮽙 t/gk 0 b(x)dx,<label>(1)</label></formula><p>where a(t) is the unique solution of</p><formula xml:id="formula_5">a(t) = 1 + 񮽙 t 0 a(u)Ψ(t − u)du,<label>(2)</label></formula><p>and b(t) is a function that satisfies</p><formula xml:id="formula_6">b(t) = M 񮽙 j=1 񮽙 ∞ 0 g j T 񮽙 j (g j u)ψ j (t + u)du + 񮽙 t 0 b(u)Ψ(t − u)du.<label>(3)</label></formula><p>For general service requirement distributions with finite second moments, it is known that 1 t T k (t), i.e., the slowdown of class k, tends to 1 1−ρ as t → ∞, for all classes <ref type="bibr" target="#b0">[1]</ref> . In the case of exponential service requirement distributions, a closed form expression for the expected conditional response time was obtained</p><formula xml:id="formula_7">T k (t) = t 1 − ρ + m 񮽙 j=1 C j 񮽙 1 − e −αjt/gk 񮽙 ,<label>(4)</label></formula><p>where m is equal to the number of different elements in the vector</p><formula xml:id="formula_8">v = (g k E[X k ]) k=1,...,M .</formula><p>The coefficient α j is a positive root of a rational function and C j can be expressed as a function of α i , i = 1, . . . , m, and the elements of v <ref type="bibr" target="#b0">[1]</ref>. Thus, the bias of the asymptote for t → ∞ is given by 񮽙 m j=1 C j and its value may be positive, negative or zero. Unfortunately, the expression for the coefficients C j , i = 1, . . . , m given in <ref type="bibr" target="#b0">[1]</ref> is not very insightful and it does not reveal how the bias depends on the arrival rates and the required service time distributions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. FINITENESS OF THE EXPECTED UNCONDITIONAL</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RESPONSE TIME</head><p>In this section, we show that the expected unconditional response times of all classes in a DPS system is finite whenever ρ &lt; 1. Let C[0, ∞) be the space of continuous, bounded non-negative functions. In the next lemma we show that the functions a(t), b(t) ∈ C[0, ∞).</p><p>Lemma 1: Let the service time distributions of all classes have a finite mean and assume ρ &lt; 1. Then, the solutions to the integral equations (2) and (3) exist and are unique. Furthermore, the solutions are continuous, bounded, and non-negative.</p><p>Proof: We first consider the solution for a(t). Equation (2) is a defective renewal equation (see for example <ref type="bibr" target="#b13">[14]</ref>, <ref type="bibr" target="#b14">[15]</ref>). Hence, a(t) counts the number of arrivals in the interval [0, t) of the defective renewal process with renewal density Ψ(·), starting with a renewal at time 0. Note that, by definition, the probability that the time between two consecutive renewals is smaller than t equals</p><formula xml:id="formula_9">񮽙 t 0 Ψ(u)du. The renewal equation is defective since 񮽙 ∞ 0 Ψ(u)du = M 񮽙 j=1 λ j g j 񮽙 ∞ 0 F j (g j u)du = ρ &lt; 1.<label>(5)</label></formula><p>As a consequence <ref type="bibr" target="#b13">[14]</ref>, a(t) is a continuous, nonnegative, non-decreasing, upper-bounded function and</p><formula xml:id="formula_10">lim t→∞ a(t) = 1 1 − 񮽙 ∞ 0 Ψ(u)du = 1 1 − ρ .</formula><p>In particular, for all t ≥ 0, a(t) ≤ 1/(1 − ρ). We now consider b(t). As shown in <ref type="bibr" target="#b0">[1]</ref>, equation <ref type="formula" target="#formula_6">(3)</ref> can be expressed as</p><formula xml:id="formula_11">b(t) = c(t) + 񮽙 ∞ 0 b(u)Ψ(t + u)du + 񮽙 t 0 b(u)Ψ(t − u)du,<label>(6)</label></formula><p>where</p><formula xml:id="formula_12">c(t) = M 񮽙 j=1 g j 񮽙 ∞ 0 a(u)ψ j (t + u)du.<label>(7)</label></formula><p>Since a(t) is a non-negative bounded function, so is c(t). Furthermore, using that a(t)</p><formula xml:id="formula_13">≤ 1/(1 − ρ), c(t) ≤ M 񮽙 j=1 g j 1 − ρ 񮽙 ∞ 0 ψ j (t + u)du ≤ 񮽙 M j=1 g j ρ j 1 − ρ .</formula><p>Let us now consider the fixed point iterations</p><formula xml:id="formula_14">b n+1 (x) = c(t) + 񮽙 ∞ 0 b n (u)Ψ(t + u)du + + 񮽙 t 0 b n (u)Ψ(t − u)du, n = 0, 1, . . . ,</formula><p>on the complete functional space C[0, ∞) with the supremum metric ||b|| = sup t {b(t)} &lt; ∞. Define the integral operator A[β(x)] as follows:</p><formula xml:id="formula_15">A[β(t)] = c(t) + 񮽙 ∞ 0 β(u)Ψ(t + u)du + 񮽙 t 0 β(u)Ψ(t − u)du. The operator A[β(t)] maps the space C[0, ∞) onto itself.</formula><p>If we show that the integral operator A[β(t)] is a contraction, then the integral equation <ref type="formula" target="#formula_11">(6)</ref>  </p><formula xml:id="formula_16">[0, ∞), that is, d(β 1 , β 2 ) = sup t |β 1 (t) − β 2 (t)|. Note that d(A[β 1 ], A[β 2 ]) = sup t {|A[β 1 (t)] − A[β 2 (t)]|} ≤ sup t {|β 1 (t) − β 2 (t)|} × × sup t 񮽙񮽙 ∞ 0 Ψ(t + y)dy + 񮽙 t 0 Ψ(t − y)dy 񮽙 = d(β 1 , β 2 ) 񮽙 ∞ 0 Ψ(u)du = ρd(β 1 , β 2 ).</formula><p>Thus, if ρ &lt; 1, the operator A[β(t)] is indeed a contraction mapping on C[0, ∞). Thus its fixed point solution b(t) is a continuous, non-negative bounded function.</p><p>Lemma 1 allows us to prove that in a stable DPS system, the mean queue lengths are finite irrespective of higher order characteristics of the service requirement distributions (Theorem 1 below). This extends the wellknow property for ordinary multi-class PS with Poisson arrivals, in which case the mean queue lengths only depend on the arrival rates and the mean service requirements.</p><p>Remark. Note that, by Little's formula, this result is equivalent to the statement that the expected unconditional response time of class k is finite if its weight is strictly positive. It shows the benefits of time-sharing scheduling disciplines with respect to strict priority rules. Under strict priority disciplines, if the second moment of a class has an infinite second moment, the expected unconditional response times of all the classes with lower priority are infinite (see also Section VII).</p><p>The robustness of DPS comes from the fact that the common resource is shared among the different classes. For instance, the share of the server a given class gets depends on its weight as well as on the number of jobs present in the system. As a consequence, the share obtained by a class will increase proportionally as the number of jobs of this class in the system augments and as a consequence the DPS discipline prevents classes with small weights suffer from starvation.</p><p>Theorem 1: Let the service time distributions of all the classes have a finite mean and ρ &lt; 1. Then, if the weight of class k is strictly positive, the expected number of class-k jobs present in the system is finite.</p><p>Proof: Because of PASTA <ref type="bibr" target="#b16">[17]</ref>, the distribution at arrival epochs is equal to the stationary distribution. Hence, when a job arrives to the system, it finds on average E[N j ] class-j jobs, j = 1, . . . , M, where N j has the time average distribution of the number of class-j jobs in the system. For the moment we do not exclude</p><formula xml:id="formula_17">E[N j ] = ∞. Let T 񮽙 k (t)</formula><p>be the derivative of the conditional response time. From [1, (2.1)] we have that</p><formula xml:id="formula_18">T 񮽙 k (0) = 1 + M 񮽙 j=1 g j g k E[N j ].<label>(8)</label></formula><p>On the other hand, taking the derivative of equation <ref type="formula" target="#formula_4">(1)</ref>,</p><formula xml:id="formula_19">we obtain T 񮽙 k (t) = a(t/g k ) + 1 gk b(t/g k ).</formula><p>Evaluating at t = 0 and noting that a(0) = 1 we have</p><formula xml:id="formula_20">T 񮽙 k (0) = 1 + 1 g k b(0),<label>(9)</label></formula><p>so that</p><formula xml:id="formula_21">b(0) = M 񮽙 j=1 g j E[N j ]. Since, b(t) is a non-negative bounded function, if follows that if g j &gt; 0, then E[N j ] is finite.</formula><p>Remark. Uniqueness, existence and boundedness of b(t) was proven in <ref type="bibr" target="#b0">[1]</ref> under the additional assumption that the integral</p><formula xml:id="formula_22">񮽙 ∞ 0 |b(u)|Ψ(u)du is bounded.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. CONSERVATION LAW FOR DPS</head><p>The so-called work conservation property is fundamental to single-server (multi-class) systems. For any single server queue with M job classes, let U k (t) be the unfinished work at time t of class-k jobs, k ∈ N , and let U (t) = 񮽙 M j=1 U j (t) denote the total unfinished work in the system. The unfinished work in the system U (t) is a function that has vertical jumps at arrival epochsthe sizes of which are equal to the corresponding service requirements of customers -and remains constant when it hits the horizontal axis. When U (t) &gt; 0, the unfinished work drains with a rate equal to the service rate. We say that the scheduling discipline is work-conserving if U (t) decreases at rate 1 whenever U (t) &gt; 0.</p><p>Then, a sample path argument shows that for any work-conserving discipline, the unfinished work in the system is the same, regardless of the scheduling discipline deployed. In the particular case of DPS, this implies that the total unfinished work in the system</p><formula xml:id="formula_23">(U (t) = 񮽙 M j=1 U j (t)) is independent of the particular values of the vectors {g k ; k = 1, . . . , M}.</formula><p>This property has led to the development of socalled work-conservation laws, see <ref type="bibr" target="#b17">[18]</ref> for a survey and <ref type="bibr" target="#b18">[19]</ref>, <ref type="bibr" target="#b19">[20]</ref> and references therein for the application of conservation laws to the design of optimal scheduling disciplines.</p><p>In Proposition 1 below, we state a conservation law for DPS. This result is key to the asymptotic analysis in Section VI.</p><p>Proposition 1: Consider a DPS system with M classes in which the superposed arrival process constitutes a renewal sequence. As before, let λ j be the arrival rate of class-j jobs (not necessarily Poisson) and let the second moments of the service time requirement distributions be finite, i.e., E[X 2 j ] &lt; ∞, for all j. In addition, assume ρ &lt; 1. Then,</p><formula xml:id="formula_24">M 񮽙 j=1 λ j 񮽙 ∞ 0 T j (x)F j (x)dx = U,<label>(10)</label></formula><p>where U is the time average unfinished work in the system.</p><p>Proof: We consider an arbitrary class j ∈ N . Let W i j , i = 1, 2, . . ., be the cumulative burden of the ith class-j job on the unfinished work in the system during its complete response time. Formally,</p><formula xml:id="formula_25">W i j := 񮽙 T i j t=0 R i j (t i j + t)dt</formula><p>where t i j is the arrival time, T i j the response time and R i j (t) the unfinished work of the ith class-j customer at time t. In particular, R i j (t i j ) is the total service requirement of this job and R i j (t i j +T i j ) = 0. Since ρ &lt; 1, the busy period has a finite length with probability 1. Furthermore, since the superposed arrival process is a renewal process, the begin points of the consecutive busy periods constitute regeneration points and, as a consequence, the sequence {W n j } ∞ n=1 is a regenerative process with finite cycle lengths. Hence, the process {W n j } ∞ n=1 is stationary and ergodic. Let τ i j (x) be the response time of the i-th class-j job. If E[W j ] denotes the expected cumulative burden of an arbitrary class-j job then</p><formula xml:id="formula_26">E[W j ] = E[ 񮽙 ∞ x=0 񮽙 τ i j (x) t=0 R i j (t i j + t)dtdF j (x)] = E[ 񮽙 ∞ x=0 񮽙 x u=0 τ i j (u)dudF j (x)] = 񮽙 ∞ u=0 񮽙 ∞ x=u T j (u)dF j (x)du = 񮽙 ∞ 0 T j (u)F j (u)du.</formula><p>In the second equality we use that, at any time, the share that each class-j job obtains is independent of the remaining service requirement, provided it is positive, cf. <ref type="bibr">[21, page 164]</ref>. Applying the Palm inversion formula 2 <ref type="bibr" target="#b21">[22]</ref>, <ref type="bibr" target="#b20">[21]</ref> to the unfinished work of class j, we obtain</p><formula xml:id="formula_27">U j = λ j E[W j ],</formula><p>where U j is the time average unfinished class-j work in the system. Summing over all the classes and noting that 񮽙 M j=1 U j = U is equal to the time average of the total unfinished work in the system, we obtain (10).</p><p>Corollary 1: If, in addition to the assumptions in Proposition 1, we assume that class-j jobs arrive according to a Poisson process, then</p><formula xml:id="formula_28">M 񮽙 j=1 λ j 񮽙 ∞ 0 T j (x)F j (x)dx = 񮽙 M j=1 λ j E[X 2 j ] 2(1 − ρ) .</formula><p>Proof: We are only left with the evaluation of U . Note that U , the time average unfinished work in the system, is independent of the scheduling discipline being deployed. Hence we may determine U assuming First-Come First-Served scheduling (or any other workconserving discipline). The compound job arrival process is Poisson with rate λ = 񮽙 ∞ j=1 λ j and the second moment of the service time requirement distribution is</p><formula xml:id="formula_29">E[X 2 ] = 񮽙 ∞ j=1 λj λ E[X 2 j ].</formula><p>Then the time-average unfinished work is simply given by the Pollaczek-Khinchin <ref type="bibr" target="#b1">2</ref> The Palm inversion formula is commonly denoted as H = λG and, informally, states that the time average of a process (H), is equal to the sample rate (λ) times the expected contribution of each sample <ref type="bibr">(G)</ref> formula,</p><formula xml:id="formula_30">U = λE[X 2 ] 2(1 − ρ) = 񮽙 M j=1 λ j E[X 2 j ] 2(1 − ρ) ,</formula><p>and the result follows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. ORDERING CONDITIONAL RESPONSE TIMES</head><p>Using sample path arguments, we show that conditional response times are stochastically ordered according to the DPS weights.</p><p>Theorem 2: Let τ k (x), k = 1, 2, . . . , M, be the response time in steady state of a class-k job that requires x units of service. If</p><formula xml:id="formula_31">g k ≥ g l , then τ k (x) ≤ st τ l (x), that is, P (τ k (x) &gt; y) ≤ P (τ l (x) &gt; y)</formula><p>for all y ≥ 0. In particular, for all x ≥ 0, we have that</p><formula xml:id="formula_32">T k (x) = E[τ k (x)] ≤ E[τ l (x)] = T l (x).</formula><p>Proof: Consider two identical copies of the system, which we refer to as system I and system II. That is, each arriving customer is duplicated and one copy is placed in each of the two systems, the two copies having the same service requirement and belong to the same class. Denote the numbers of customers of class k, k = 1, 2, . . . , M, in the two systems at time t by N I k (t) and N II k (t), respectively, and their residual service requirements by R I k,i (t), for i = 1, 2, . . . , N I k (t) and R II k,i (t), for i = 1, 2, . . . , N II k (t). Suppose the two systems are in steady state at time 0. At this time we place a customer with service requirement x in each system and we shall refer to the two copies as customer I and customer II for short. Customer I is assigned weight g I and customer II gets weight g II . Consistent with our previous notation, we denote the sojourn time of customer I by τ I (x) and that of customer II by τ II (x).</p><p>Note that for t ≤ 0,</p><formula xml:id="formula_33">N I k (t) = N II k (t) and R I k,i (t) = R II k,i (t), i = 1, 2, . . . , N I k (t)</formula><p>, but that these quantities will differ after time 0 if g I 񮽙 = g II . Suppose that g I ≤ g II . We now show that for all k = 1, 2, . . . , M, and t ∈ (0, min{τ I (x), τ II (x)}):</p><formula xml:id="formula_34">N I k (t) ≤ N II k (t) and R I k,i (t) ≤ R II k,i (t), i = 1, 2, . . . , N I k (t).</formula><p>Here, the inequality R I k,i (t) ≤ R II k,i (t) refers to customers in the two systems that were each others copies upon arrival, which may require re-shuffling of the customers when a customer leaves. For instance, if the copy in I leaves before that in II, then the copy in II gets an index larger than N I k (t) (we will show that the copy in II can not leave sooner).</p><p>Let the sequence 0 = t 0 &lt; t 1 &lt; t 2 . . . &lt; min{τ I (x), τ II (x)} denote the time points at which the number of customers of some class changes in one of the two systems (or in both). Suppose that</p><formula xml:id="formula_35">N I k (t n +) ≤ N II k (t n +) and R I k,i (t n +) ≤ R II k,i (t n +), i = 1, 2, . . . , N I k (t n +).</formula><p>(This is trivially satisfied for n = 0.) We will show that this inequality is also valid if we replace n by n + 1. Note that, for t ∈ (t n , t n+1 ) (in this period the numbers of customers do not change in either system), the service rates of customers of any class k in the two systems satisfy</p><formula xml:id="formula_36">g k g I + 񮽙 k g k N I k (t) ≥ g k g II + 񮽙 k g k N II k (t) .<label>(11)</label></formula><p>Thus, all customers in system I receive more service than their copies in system II, except (possibly) for customers I and II (below we will indeed show that the opposite is true for these customers). Thus, for t ∈ (t n , t n+1 )</p><formula xml:id="formula_37">we have N I k (t) ≤ N II k (t) and R I k,i (t) ≤ R II k,i (t), i = 1, 2, . . . , N I k (t)</formula><p>. Now, at time t = t n+1 these relations are preserved, as we may argue by considering the different possibilities: (i) At time t n+1 a new customer arrives. Then a copy is placed in both systems, which does not violate the inequalities. (ii) At time t n+1 a customer in system I completes service and leaves while his copy still has residual service time left in system II. Then the numbers of customers in system I is further reduced, while the inequality regarding the residual services of the leaving customer and his copy is trivially satisfied. (iii) At time t n+1 a customer in system II completes service and leaves. If his copy in system I was also present, then necessarily it also completes service at time t n+1 (it must have zero service time left) and thus, the inequalities are preserved (the numbers of customers are reduced in both systems simultaneously). If there is no departure from system I, then that copy must have left before and thus, there is at least one more customer of that class in system II than in system I and, thus, the departing customer does not violate the inequalities.</p><p>Thus the ordering of the two systems is preserved while customers I and II are both present. It remains to show that customer II leaves before customer I, i.e., τ I (x) ≥ τ II (x). Let the total amounts of work at time t due to other customers than I and II in both systems be represented by</p><formula xml:id="formula_38">W I (t) = M 񮽙 k=1 N I k (t) 񮽙 i=1 R I k,i (t)</formula><p>and</p><formula xml:id="formula_39">W II (t) = M 񮽙 k=1 N II k (t) 񮽙 i=1 R II k,i (t).</formula><p>In the remainder let 0 &lt; t &lt; min{τ I (x), τ II (x)}. From the construction it follows that W I (0) = W II (0) and W I (t) ≤ W II (t). Let A(t) be the total amount of work that arrived during (0, t). Since the systems are work conserving, the amounts of service received by customers I and II over the period (0, t) are B I (t) = t−(W I (0)+A(t)−W I (t)) and B II (t) = t−(</p><formula xml:id="formula_40">W II (0)+ A(t) − W II (t)), so that B I (t) ≤ B II (t)</formula><p>. This is true for any 0 &lt; t &lt; min{τ I (x), τ II (x)}. Since customers I and II have the same service requirement x, customer I can not leave before customer II does. Finally set g I = g l and g II = g k .</p><p>The next proposition provides several other relations among the expected conditional response times of different classes.</p><formula xml:id="formula_41">Proposition 2: If g k ≥ g l , then for all t ≥ 0: (P1) T k (g k t) ≥ T l (g l t), (P2) Tk(gkt) gkt ≤ Tk(glt) glt</formula><p>Proof: We first show Property (P1). From equation (1) we have</p><formula xml:id="formula_42">T k (g k t) − T l (g l t) = (g k − g l ) 񮽙 t 0 a(u)du,</formula><p>and Property (P1) follows as a consequence of a(t) being a non-negative function (see Lemma 1).</p><p>Property (P2) follows similarly since</p><formula xml:id="formula_43">1 g k T k (g k t) − 1 g l T l (g l t) = ( 1 g k − 1 g l ) 񮽙 t 0 b(u)du,</formula><p>and the fact that b(u) is a non-negative function (see Lemma 1).</p><p>We provide an interpretation of Properties (P1) and (P2) of Proposition 2 with a particular example. Consider two classes , k, l ∈ N , such that the respective weights satisfy g k = 2g l , that is, class-k jobs are served twice as fast as class-l jobs. Then, Property (P1) states that the expected conditional response time of a class-k job of size t, will be larger than that of a class-l job of size t/2. On the other hand, Property (P2) shows that the expected slow down of the class-k job with size t will be smaller than that of a class-l job of size t/2, and thus Property (P2) provides an upper bound on the degradation with respect to the response time predicted by Property (P1).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. ASYMPTOTIC ANALYSIS OF THE EXPECTED</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CONDITIONAL RESPONSE TIME</head><p>In this section we study the asymptotic behavior of the conditional expected response time, as the service requirement tends to infinity. It was proven in <ref type="bibr" target="#b0">[1]</ref> that when E[X 2 j ] &lt; ∞, for all j ∈ N , the slowdown in the DPS system approaches the slowdown of the PS system as the service requirement increases, that is T k (t)/t → 1 1−ρ . Let S k ⊆ N denote the set of classes whose weights are equal to the weight of class k, that is,</p><formula xml:id="formula_44">S k = {i ∈ N |g i = g k }. Denote as S c k the complement set of S k , that is, S c k = {i ∈ N |g i 񮽙 = g k }.</formula><p>We prove, under the same conditions as in <ref type="bibr" target="#b0">[1]</ref> that the expected conditional response time of class k has an asymptote. Furthermore, we provide a simple closed form expression for the asymptotic bias and we show that the value of the bias for class k depends only on the second moments of the service requirement distributions of classes S c j .</p><formula xml:id="formula_45">Theorem 3: Let E[X 2 j ]</formula><p>be finite for all j ∈ N . Then, the expected conditional response time of class k has an asymptote with slope 1/(1 − ρ) and the following bias</p><formula xml:id="formula_46">lim t→∞ 񮽙 T k (t) − t 1 − ρ 񮽙 = 񮽙 j:j∈S c k λ j (1 − gk gj )E[X 2 j ] 2(1 − ρ) 2 .<label>(12)</label></formula><p>Proof: In [1] it was shown that T k (t) ∼ t 1−ρ , as t → ∞. To show existence of an asymptote for T k (t) with slope 1/(1 − ρ), we need to show existence of</p><formula xml:id="formula_47">lim t→∞ 񮽙 T k (t) − t 1−ρ</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>񮽙</head><p>. From equation <ref type="formula" target="#formula_4">(1)</ref> we observe that if the above limit exists, it can be calculated as follows:</p><formula xml:id="formula_48">lim t→∞ 񮽙 T k (t) − t 1 − ρ 񮽙 = lim t→∞ 񮽙 g k 񮽙 t/gk 0 񮽙 a(x) − 1 1 − ρ 񮽙 dx + 񮽙 t/gk 0 b(x)dx 񮽙 .</formula><p>We first show that 񮽙 ∞ 0 (a(x) − 1/(1 − ρ))dx exists as well and we derive simple expressions for these integrals.</p><p>From equation (2) it follows that</p><formula xml:id="formula_49">a(t) − 1 1 − ρ = 1 + 񮽙 t 0 a(u)Ψ(t − u)du − 1 1 − ρ = 񮽙 t 0 񮽙 a(u) − 1 1 − ρ 񮽙 Ψ(t − u)du + 1 1 − ρ 񮽙 t 0 Ψ(u)du − ρ 1 − ρ .<label>(13)</label></formula><p>Using equation <ref type="formula" target="#formula_9">(5)</ref> we can rewrite equation <ref type="formula" target="#formula_4">(13)</ref> as</p><formula xml:id="formula_50">a(t) − 1 1 − ρ = 񮽙 t 0 񮽙 a(u) − 1 1 − ρ 񮽙 Ψ(t − u)du − 1 1 − ρ 񮽙 ∞ t Ψ(u)du.</formula><p>Integrating with respect to t we have</p><formula xml:id="formula_51">񮽙 ∞ 0 񮽙 a(t) − 1 1 − ρ 񮽙 dt = 񮽙 ∞ 0 񮽙 t 0 񮽙 a(u) − 1 1 − ρ 񮽙 Ψ(t − u)dudt − 1 1 − ρ 񮽙 ∞ 0 񮽙 ∞ t Ψ(u)dudt = 񮽙 ∞ 0 񮽙 a(u) − 1 1 − ρ 񮽙 du 񮽙 ∞ 0 Ψ(t)dt − 1 1 − ρ 񮽙 ∞ 0 Ψ(u)udu,</formula><p>and thus</p><formula xml:id="formula_52">(1−ρ) 񮽙 ∞ 0 񮽙 a(t) − 1 1 − ρ 񮽙 dt = − 1 1 − ρ 񮽙 ∞ 0 Ψ(u)udu.</formula><p>Proceeding similarly as in equation <ref type="formula" target="#formula_9">(5)</ref>, it follows that</p><formula xml:id="formula_53">񮽙 ∞ 0 Ψ(u)udu = 񮽙 M j=1 λjE[X 2 j ]</formula><p>2gj . In particular, the latter justifies the above calculations if the service requirement distributions have finite second moments. Thus, we have</p><formula xml:id="formula_54">񮽙 ∞ 0 񮽙 a(t) − 1 1 − ρ 񮽙 dt = −1 2(1 − ρ) 2 M 񮽙 j=1 λ j E[X 2 j ] g j . (14) Let us now determine 񮽙 ∞ 0 b(t)dt. Existence of 񮽙 ∞ 0 b(x)</formula><p>dx was proven in <ref type="bibr" target="#b0">[1]</ref> provided that the service requirement distributions have a finite second moment. We first analyze the first term on the right hand side of equation <ref type="formula" target="#formula_6">(3)</ref>. Integrating by parts we obtain</p><formula xml:id="formula_55">񮽙 ∞ 0 g j T 񮽙 j (g j u)ψ j (t + u)du = 񮽙 ∞ 0 λ j g 2 j T 񮽙 j (g j u)F j (g j (t + u))du = λ j g j T j (g j u)F j (g j (t + u)) | u=∞ u=0 − 񮽙 ∞ 0 λ j g j T j (g j u)dF j (g j (t + u)). (15)</formula><p>We evaluate the first term on the right hand side of the above equation. Integrating by parts we get</p><formula xml:id="formula_56">񮽙 ∞ 0 xdF k (x) = 񮽙 ∞ 0 F k (x)dx + lim x→∞ xF k (x),</formula><p>thus, if the service time requirement has a finite mean, lim x→∞ xF k (x) = 0. Now, since T k (x) ∼ x/(1 − ρ) as x → ∞, there exists some L &lt; ∞ such that for all</p><formula xml:id="formula_57">x ≥ 0, T k (x) ≤ Lx. Consequently, lim x→∞ T k (x)F k (x) ≤ lim x→∞ LxF k (x) = 0.</formula><p>On the other hand, it holds that lim t→0 T j (g j t) = 0. Therefore equation <ref type="formula" target="#formula_4">(15)</ref> becomes</p><formula xml:id="formula_58">񮽙 ∞ 0 g j T 񮽙 j (g j u)ψ j (t + u)du = − 񮽙 ∞ 0 λ j g j T j (g j u)dF j (g j (t + u)).</formula><p>We now calculate the contribution of b(t) to the bias of the asymptote. From equation <ref type="formula" target="#formula_6">(3)</ref> we have</p><formula xml:id="formula_59">񮽙 ∞ 0 b(t)dt = − M 񮽙 j=1 λ j g 2 j 񮽙 ∞ u=0 T j (g j u) 񮽙 ∞ t=0 dF j (g j (t + u))du + 񮽙 ∞ 0 񮽙 t 0 b(u)Ψ(t − u)dudt = M 񮽙 j=1 λ j g j 񮽙 ∞ 0 T j (g j u)F j (g j u)du + 񮽙 ∞ 0 b(u) 񮽙 ∞ t Ψ(t − u)dtdu</formula><p>and hence</p><formula xml:id="formula_60">(1 − ρ) 񮽙 ∞ 0 b(t)dt = M 񮽙 j=1 λ j 񮽙 ∞ 0 T j (u)F j (u)du.</formula><p>Recalling the work-conservation law of Proposition 1 we get</p><formula xml:id="formula_61">񮽙 ∞ 0 b(t)dt = 񮽙 M j=1 λ j E[X 2 j ] 2(1 − ρ) 2 .<label>(16)</label></formula><p>Finally, combining equations <ref type="formula" target="#formula_4">(14)</ref> and <ref type="formula" target="#formula_4">(16)</ref> we obtain the desired expression for the asymptotic bias.</p><p>From Theorem 3 it is clear that depending on the weights g k , k ∈ N , the bias can be either positive or negative. It is easy to see that</p><formula xml:id="formula_62">lim t→∞ (T k (t) − T i (t)) = g i − g k 2(1 − ρ) 2 M 񮽙 j=1 λ j g j E[X 2 j ].<label>(17)</label></formula><p>From equation <ref type="formula" target="#formula_4">(17)</ref> we observe that the bias for the class with the maximum weight is negative and that of the class with the minimum weight is positive. The vector of weights {g j &gt; 0; j = 1, . . . , M}, may be chosen so that all but one class with the smallest (largest) weight have positive (negative) biases.</p><p>The PS model provides a reference model for comparisons with DPS, since the PS system reflects the system in the absence of priorities. Hence, the value of the bias can be considered as a measure of the improvement/degradation that large jobs experience with respect to egalitarian PS. For example, let us consider the case of only two job classes and. Let us assume that class 1 has an extremely large second moment (in comparison to class 2). Then, it is easy to see that if we give priority to class 1 (g 1 &gt; g 2 ), the large jobs of class 2 will suffer a lot. On the other hand, if we give priority to class 2 (g 1 &lt; g 2 ), large jobs of class 2 will gain substantially. This further reinforces the arguments in <ref type="bibr" target="#b8">[9]</ref> that classes with typically short jobs should be assigned larger weights. See Sections VII and VIII for further discussion on the comparison of DPS and PS.</p><p>We note that when all the second moments of the service requirement distributions are finite, the value of the bias of class k does not depend on the value of the second moments of classes in S k . This suggests that Theorem 3 may still hold even when the second moment of some class belonging to S k is infinite.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. COMPARISON OF DPS AND PS</head><p>As noted earlier, DPS is a generalization of egalitarian PS. Hence, a natural question is how the weights of the DPS system must be chosen so that DPS outperforms PS. Thus, in this section we compare the overall performance of DPS with respect to PS (E[T P S ]) and we provide guidelines as to how the weights should be chosen</p><p>In the context of single-class queues, it is well known that giving preferential treatment to short jobs reduces the overall expected unconditional response time of the system <ref type="bibr" target="#b22">[23]</ref>, <ref type="bibr" target="#b23">[24]</ref>, <ref type="bibr" target="#b24">[25]</ref>, <ref type="bibr" target="#b25">[26]</ref>, <ref type="bibr" target="#b26">[27]</ref>. Hence, one would expect that in order for DPS to outperform PS, the DPS should give preferential treatment to the classes with smaller mean. We will show that this is indeed the case.</p><p>We take the expected unconditional response time as the metric of choice for the overall system performance. Let E[T DP S ] and E[T P S ] be the expected unconditional response time in the DPS and PS systems respectively. Then</p><formula xml:id="formula_63">E[T DP S ] = M 񮽙 k=1 λ k λ E[T DP S k ],</formula><p>and</p><formula xml:id="formula_64">E[T P S ] = M 񮽙 k=1 λ k λ E[T P S k ] = E[X] 1 − ρ , where E[T DP S k ]</formula><p>and E[T P S k ] denote the expected unconditional response times of class-k jobs in the DPS and PS system respectively, for all k ∈ N . Note that by Little's law, reducing the expected unconditional response time is equivalent to reducing the mean total number of jobs in the system.</p><p>We assume that all the service requirement distributions are exponential with means µ −1 k , for k ∈ N . We re-index the classes such that</p><formula xml:id="formula_65">µ −1 1 ≤ . . . ≤ µ −1 M .</formula><p>In this section we show that if the weights of DPS are chosen as</p><formula xml:id="formula_66">g 1 ≥ g 2 ≥ . . . ≥ g M , then E[T DP S ] ≤ E[T P S ].</formula><p>Note that this result can be seen as a multi-class counterpart of the classical single-class results on age-based scheduling.</p><p>The next lemma will be useful for the proof of the main result in this section. We first introduce some further notation. Let U</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>DP S k</head><p>and U P S k be the expected unfinished work of class k ∈ N in the DPS and PS systems respectively. Note, that by the memoryless property of exponential distributions and Little's law the following relations hold</p><formula xml:id="formula_67">U π j = E[N π j ]µ −1 j = ρ j E[T π j ],</formula><p>where E[N π j ] denotes the average number of class-j jobs in the system and π ∈ {PS, DPS}.</p><p>In the ensuing analysis, we require the expected unconditional response times of the various classes in the DPS system satisfy the following condition. Condition 1. There exists a j * ∈ N such that for all</p><formula xml:id="formula_68">x ≥ 0, 񮽙 T DP S k (x) ≤ T P S k (x) for all k &lt; j * , T DP S k (x) ≥ T P S k (x) for all k ≥ j * .</formula><p>We note that the mean conditional response time under PS is equal for all classes, that is, </p><formula xml:id="formula_69">T P S i (x) = T P S l (x) = x/(1 − ρ).</formula><formula xml:id="formula_70">Lemma 2: Assume Condition 1 is satisfied for an index j * ∈ N . Let ∆ k = U DP S k − U P S k . Then, 񮽙 ∆ k ≤ 0 for all k &lt; j * , ∆ k ≥ 0 for all k ≥ j * .</formula><p>Proof: The proof is straightforward after noting that</p><formula xml:id="formula_71">∆ i = λ i 񮽙 ∞ 0 񮽙 T DP S i (x) − T P S i (x) 񮽙 F i (x)dx, for all i = 1, . . . , M.</formula><p>Now we show the main result of this section.</p><p>Theorem 4: Let the weights in DPS be chosen in decreasing order with respect to the mean job size, that is,</p><formula xml:id="formula_72">g 1 ≥ g 2 ≥ . . . ≥ g M and µ −1 1 ≤ . . . ≤ µ −1 M . In addition let Condition 1 hold. Then E[T DP S ] ≤ E[T P S ].</formula><p>Proof: We write the difference mean delay in terms of the difference in unfinished work, using the memoryless property of the exponential distribution and Little's law,</p><formula xml:id="formula_73">E[T DP S ] − E[T P S ] = M 񮽙 k=1 λ k λ E[T DP S k ] − M 񮽙 k=1 λ k λ E[T DP S k ] = 1 λ M 񮽙 k=1 µ k (U DP S k − U P S k ) = 1 λ M 񮽙 k=1 µ k ∆ k .(18)</formula><p>Hence, it suffices to show that</p><formula xml:id="formula_74">񮽙 M k=1 µ k ∆ k ≤ 0. From Lemma 2, let j * ∈ N be such that ∆ i ≤ 0 for all i &lt; j * and ∆ i ≥ 0 for all i ≥ j * .</formula><p>We note that by the work-conservation law (see Section IV),</p><formula xml:id="formula_75">񮽙 M k=1 U P S k = 񮽙 M k=1 U DP S k</formula><p>, and therefore</p><formula xml:id="formula_76">M 񮽙 k=1 ∆ k = 0.<label>(19)</label></formula><p>Note further that by the conservation law necessarily j * &gt; 1. Then we have</p><formula xml:id="formula_77">M 񮽙 k=1 µ k ∆ k = j * −1 񮽙 k=1 µ k ∆ k + M 񮽙 k=j * µ k ∆ k ≤ µ j * −1 j * −1 񮽙 k=1 ∆ k + µ j * M 񮽙 k=j * ∆ k . By equation (19) j * −1 񮽙 k=1 ∆ k = − M 񮽙 k=j * ∆ k ,</formula><p>and hence</p><formula xml:id="formula_78">M 񮽙 k=1 µ k ∆ k ≤ (µ j * − µ j * −1 ) M 񮽙 k=j * ∆ k ≤ 0,</formula><p>which completes the proof of the theorem.</p><p>From equations <ref type="formula" target="#formula_4">(18)</ref> and <ref type="formula" target="#formula_4">(19)</ref>, we note that, as expected, if µ −1</p><formula xml:id="formula_79">i = µ −1 j for all i, j ∈ N, then E[T DP S ] = E[T P S ] independent</formula><p>of the weights. The counterpart of Theorem 4 can be proved along the same lines, here we only state the result for completeness.</p><p>Theorem 5: Let the weights in DPS be chosen in increasing order with respect to the mean job size, that is,</p><formula xml:id="formula_80">g 1 ≥ g 2 ≥ . . . ≥ g M and µ −1 1 ≥ . . . ≥ µ −1 M . In addition let Condition 1 hold. Then E[T DP S ] ≥ E[T P S ].</formula><p>In the particular case of two classes Condition 1 is not necessary. It was shown in <ref type="bibr" target="#b0">[1]</ref> that</p><formula xml:id="formula_81">E[T DP S 1 ] = µ −1 1 1 − ρ 񮽙 1 + ρ 2 (g 2 − g 1 ) µ −1 1 D 񮽙 E[T DP S 2 ] = µ −1 2 1 − ρ 񮽙 1 + ρ 1 (g 1 − g 2 ) µ −1 2 D 񮽙 , where D = g1(1−ρ1) µ −1 1 + g2(1−ρ2) µ −1 2</formula><p>, and where</p><formula xml:id="formula_82">ρ i = λ i µ −1 i , i = 1, 2. Next, we determine the difference E[T DP S ] − E[T P S ] = − λ 1 µ −1 1 + λ 2 µ −1 2 λ(1 − ρ) + ρ 1 λ(1 − ρ) 񮽙 1 + ρ 2 (g 2 − g 1 ) µ −1 1 D 񮽙 + ρ 2 λ(1 − ρ) 񮽙 1 + ρ 1 (g 1 − g 2 ) µ −1 2 D 񮽙 = −ρ 1 ρ 2 λ(1 − ρ)D (g 1 − g 2 )(µ 1 − µ 2 ).</formula><p>Hence, we note that if µ 1 ≥ µ 2 and</p><formula xml:id="formula_83">g 1 ≥ g 2 , then E[T DP S ] ≤ E[T P S ].</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VIII. NUMERICAL EXAMPLES</head><p>In this section, we further support our discussion of appropriate weight setting by numerical experiments. Our main tool is equation (4). Let us consider a DPS system with three classes. The mean service times are given by µ −1 1 = 5000, µ −1 2 = 20 and µ −1 3 = 2; the arrival rates are λ 1 = 0.0001, λ 2 = 0.008 and λ 3 = 0.1. Hence the partial loads are ρ 1 = 0.5, ρ 2 = 0.16 ρ 1 = 0.1. Recall that the second moment of an exponentially distributed random variable equals twice the square of the mean. Thus, the second moment of class 1 is much larger than that of classes 2 and 3. In <ref type="figure" target="#fig_1">Figure 1</ref> we plot the respective complementary distributions. In <ref type="figure" target="#fig_2">Figures 2 and 3</ref> we plot the mean conditional response time for all three classes for different choices of the weights. In <ref type="figure" target="#fig_2">Figure 2</ref> we choose the weights such that (g 1 &lt;&lt; g 2 &lt;&lt; g 3 ) and in <ref type="figure" target="#fig_3">Figure 3</ref> we choose the weights such that (g 1 &gt;&gt; g 2 &gt;&gt; g 3 ).  As Theorem 3 predicts, the bias of class 1 in <ref type="figure" target="#fig_2">Figure 2</ref> is very small and positive, whereas the bias for classes 2 and 3 is negative and large in absolute value. Thus, the performance class-1 jobs perceive is similar to that in absence of discrimination, whereas for classes 2 and 3 the performance is significantly improved. From Theorem 4 we know that the set of parameters of <ref type="figure" target="#fig_2">Figure 2</ref> will lead to a decrease of the expected unconditional response time of the DPS system (with respect to PS). In this particular example the expected unconditional response times are E[T DP S ] = 38.3 and E[T P S ] = 56.8, that is, with DPS the expected unconditional response time is reduced by 33%.</p><p>On the other hand, as we see from <ref type="figure" target="#fig_3">Figure 3</ref>, the bias for class 1 is negative and small (in absolute value). Hence, class-1 jobs will hardly notice any reduction in the expected response time (note further that mean of class 1 is 5000). On the other hand, by giving preference to class 1 we inflict an important degradation to classes 2 and 3. It is interesting to see that with this choice of weights not only classes 2 and 3 suffer, but the overall system performance is severely degraded. For this particular set of parameters, the expected unconditional response time in DPS is E[T DP S ] = 2085.</p><p>In view of Theorem 3, we conjecture that the phenomena pointed out here will be even more dramatic in the case of classes with infinite second moment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IX. CONCLUSION</head><p>In this paper we have analyzed a DPS system. The DPS model provides a natural framework for the characterization of multi-class time-sharing systems. We have demonstrated several important properties of DPS.</p><p>We have shown that in a stable DPS system it is sufficient that a class' weight is positive to ensure a finite mean number of jobs of that class. This property holds regardless of the characteristics of the required service time distributions. It implies that a DPS system will outperform any strict priority policy if the second moment of one class' service requirement is infinite.</p><p>We have proved a new work-conservation law for single server multi-class systems. Existing workconservation laws have proven to be highly valuable for performance analysis and system optimization. The new conservation law opens up new research lines to further understand these issues in DPS systems, as well as in similar multi-class single server queues, such as Generalized Processor Sharing.</p><p>Our closed-form expression for the asymptote points out an insightful dependence of the DPS model with respect to the second moment of the distribution of the required service times. This plays an important role in optimization of weight setting. dependence might be useful for example in determining optimal choice of weights.</p><p>Finally, we have studied the impact of the weights on overall system performance, in the context of size based scheduling disciplines. In the case of exponential service requirement distributions, we provide guidelines as to how the weights should be chosen such that DPS outperforms PS.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>has a unique solution in C[0, ∞) [16, Section 2.8]. Let d be the distance in the metric space C</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Complementary distributions of the three classes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Comparison of the expected conditional response times under DPS and PS.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Comparison of the expected conditional response times under DPS and PS.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>and g 1 ≥ g 2 ≥ . . . ≥ g M .</head><label></label><figDesc></figDesc><table>Thus, Condition 1 
states that the curve x/(1 − ρ) splits the set of classes 
into two groups, those that under DPS obtain a better 
service than under PS and viceversa. Through numerical 
analysis, we have verified that Condition 1 does not 
hold in general. Nevertheless, Condition 1 does not 
seem very restrictive under the regularity condition 
of Theorem 4, that is when µ −1 

1 

≤ . . . ≤ µ −1 
M Under this additional assumption, 
we have not found any counterexample. See for example 
Figures 2 and 3. 

</table></figure>

			<note place="foot" n="1"> In the original paper, Kleinrock [2] used the term Priority Processor-Sharing.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Sharing a processor among many job classes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Fayolle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Mitrani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Iasnogorodski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ACM</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="519" to="532" />
			<date type="published" when="1980" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Time-shared systems: A theoretical treatment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kleinrock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J.ACM</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="242" to="261" />
			<date type="published" when="1967" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">DPS queues with stationary ergodic service times and the performance of TCP in overload</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Altman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Jimenez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kofman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Impact of fairness on internet performance</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Bonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Massoulie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Sigmetrics</title>
		<meeting><address><addrLine>Cambridge, Massachusetts, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Tail asymptotics for discriminatory processor-sharing queues with heavy-tailed service requirements</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">C</forename><surname>Borst</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">T M B</forename><surname>Van Ooteghem</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">P</forename><surname>Zwart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SPOR</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
		<respStmt>
			<orgName>Eindhoven University of Technology</orgName>
		</respStmt>
	</monogr>
<note type="report_type">Tech. Rep. 2003-25</note>
	<note>to appear in Perf. Eval</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Asymptotic regimes for discriminatory processor sharing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Van Kessel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Núñez-Queija</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">C</forename><surname>Borst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Perf. Eval. Rev</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="44" to="46" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Direct solutions of M/G/1 processor-sharing models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">M</forename><surname>O&amp;apos;donovan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="1232" to="1235" />
			<date type="published" when="1974" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Queue length distribution for the discriminatory processor-sharing queue</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">M</forename><surname>Rege</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Sengupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper.Res</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="page" from="653" to="657" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Differentiated bandwidth sharing with disparate flow sizes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Van Kessel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Núñez-Queija</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">C</forename><surname>Borst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A decomposition theorem and related results for the discriminatory processor sharing queue</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">M</forename><surname>Rege</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Sengupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Queueing Systems</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="333" to="351" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">On a relationship between processor-sharing queues and Crump-Mode-Jagers branching processes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Grishechkin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Adv. Appl. Prob</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="653" to="698" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Scheduling flows with unknown sizes: Approximate analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Matta</surname></persName>
		</author>
		<idno>BU-CS-2002-009</idno>
	</analytic>
	<monogr>
		<title level="j">Perf. Eval. Rev</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="276" to="277" />
			<date type="published" when="2002" />
		</imprint>
		<respStmt>
			<orgName>Boston University</orgName>
		</respStmt>
	</monogr>
<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">On stochastic bounds for monotonic processor sharing networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Bonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Proutì</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Queueing Systems</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="page" from="81" to="106" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Applied Probability and Queues</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Asmussen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Stochastic Modeling and the theory of Queues</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">W</forename><surname>Wolff</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
			<publisher>Prentice-Hall</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Introductory Real Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">N</forename><surname>Kolmogorov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">V</forename><surname>Foming</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1970" />
			<publisher>Dover Publications</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Poisson arrivals see time averages</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">W</forename><surname>Wolff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="223" to="231" />
			<date type="published" when="1982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Workloads and waiting times in single-server systems with multiple customer classes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><forename type="middle">J</forename><surname>Boxma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Queueing Systems</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="185" to="214" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Multiclass queueing systems: Polymatroidal structure and optimal scheduling control</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shanthikumar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Yao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="293" to="299" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Sample-path conservation laws, with application to scheduling queues and fluid systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">C</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Stidham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Queueing Systems</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="175" to="199" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Elements of queuing theory: Palm martingale calculus and stochastic recurrences</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Baccelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Bremaud</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">On the relation between customer and time average in queues</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Brumelle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Appl. Prob</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="508" to="520" />
			<date type="published" when="1971" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">The queue M/G/1 with feedback to lower priority queues</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">E</forename><surname>Schrage</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="466" to="471" />
			<date type="published" when="1967" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Scheduling multiclass single server queueing systems to stochastically maximize the number of successful departures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Righter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Shanthikumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Prob. Eng. Inf. Sc</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="323" to="334" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">On extremal service disciplines in single-stage queueing systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Righter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Shanthikumar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Yamazaki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Appl. Prob</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="409" to="416" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Mixed scheduling disciplines for network flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Misra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Perf. Eval. Rev</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="36" to="39" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Two-level processor sharing scheduling disciplines: Mean delay analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Aalto</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Ayesta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Nyberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGMETRICS</title>
		<meeting>ACM SIGMETRICS<address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="97" to="105" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
