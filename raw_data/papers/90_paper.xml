<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:29+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Time Slicing in Mobile TV Broadcast Networks with Arbitrary Channel Bit Rates</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cheng-Hsin</forename><surname>Hsu</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">School of Computing Science</orgName>
								<orgName type="department" key="dep2">School of Computing Science</orgName>
								<orgName type="institution">Simon Fraser University Surrey</orgName>
								<address>
									<region>BC</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Mohamed</forename><surname>Hefeeda</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Simon Fraser University Surrey</orgName>
								<address>
									<region>BC</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Time Slicing in Mobile TV Broadcast Networks with Arbitrary Channel Bit Rates</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Mobile TV networks have received significant attention from the industry and academia, as they have already been deployed in several countries and their expected market potential is huge. In such networks, a base station broadcasts TV channels in bursts with bit rates much higher than the encoding bit rates of the videos. This enables mobile receivers to receive a burst of traffic and then turn off their receiving circuit till the next burst to conserve energy. The base station needs to construct a transmission schedule for all bursts of different TV channels. Constructing optimal (in terms of energy saving) transmission schedules has been shown to be an NP-complete problem when the TV channels are encoded at arbitrary bit rates. In this paper, we propose a near-optimal approximation algorithm to solve this problem. We prove the correctness of the proposed algorithm and derive its approximation factor. We also conduct extensive evaluation of our algorithm using real implementation in a mobile TV testbed and simulations. Our experimental and simulation results show that the proposed algorithm: (i) is practical and produces correct burst schedules, (ii) achieves near-optimal energy saving for mobile devices, and (iii) runs efficiently in real time.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>The mobile TV service is expected to be the next killer application for mobile devices such as smart phones and mobile media players. It extends the viewing time of users and provides more business opportunities to content providers. Although mobile TV networks have already been deployed in several countries and being tried in many others <ref type="bibr" target="#b0">[1]</ref>, there is still a large room for optimizing their performance from different angles. This paper addresses one of the most important performance metrics in such networks: minimizing energy consumption for mobile devices while allowing content providers to broadcast diverse video content encoded at arbitrary different bit rates. Minimizing energy consumption in mobile TV networks is critical for the success and wide adoption of mobile TV service, because most mobile devices are battery powered. In fact, popular mobile TV standards such as DVB-H (Digital Video Broadcast-Handheld) <ref type="bibr" target="#b1">[2]</ref> and MediaFLO (Forward Link Only technology) <ref type="bibr" target="#b2">[3]</ref>, dictate using energy saving schemes to increase the viewing time on mobile devices. The typical energy saving scheme is to broadcast TV channels in bursts at bit rates much higher than the encoding rates of the video streams. Mobile devices can then receive a burst of traffic and turn off their radio frequency (RF) circuits till the next burst. This is referred to as time slicing. To enable time slicing for mobile devices, a base station broadcasting multiple TV channels needs to schedule the transmission of bursts belonging to all TV channels. The burst scheduling algorithm must not result in receivers' buffer over-or underflow instances that cause playout glitches and degrade viewing experience for any TV channel.</p><p>Current burst scheduling algorithms are simple heuristics. For example, the DVB-H standard documents <ref type="bibr">[4, pp. 66]</ref> describe a method to schedule only one TV channel. This method allocates a new burst only after the data of its preceding burst is consumed. To support multiple TV channels using this method, all channels are assumed to be encoded at the same bit rate. Thus bursts belonging to different TV channels will have the same size and can simply be staggered next to each other to create a transmission schedule. This simple method cannot be generalized to multiple TV channels encoded at different bit rates. This is because when the TV channels have different bit rates, the number of bursts that each channel requires as well as the size of each burst will be different in optimal schedules. Thus using the simple method may result in many buffer under-and/or over-flow instances, which are not acceptable for a commercial service. Being restricted by the current burst scheduling algorithms, many mobile TV deployments had to resort to encoding all TV channels at the same bit rate. For example, the trial mobile TV service in Paris broadcast 13 TV channels all encoded at 270 kbps <ref type="bibr" target="#b5">[5]</ref>.</p><p>Encoding all TV channels at the same bit rate is clearly inefficient and may yield huge quality variations among TV channels carrying different kinds of programs. For example, encoding a sports game requires a much higher bit rate than encoding a talk show. If we encode all TV channels at the same high bit rate, some channels may unnecessarily be allocated more bandwidth than they require and this extra bandwidth yields only marginal or no visual quality improvement. Thus, the expensive wireless bandwidth of the broadcast network could be wasted. On the other hand, if we encode all TV channels at the same low or moderate bit rate, not all channels will have good visual quality, which is annoying to users.</p><p>In <ref type="bibr" target="#b6">[6]</ref>, <ref type="bibr" target="#b7">[7]</ref>, we have shown that the burst scheduling problem in mobile TV networks is NP-complete for TV channels with arbitrary bit rates. We also proposed a scheduling algorithm for a special case of the general problem: when the bit rates of the TV channels have power of 2 increments. In the current paper, we propose a near-optimal algorithm for the general burst scheduling problem that does not require any assumption on the channel bit rates. This algorithm provides great flexibility for the content providers to choose the appropriate encoding bit rates for different types of video content. This in turn will provide better utilization of the expensive wireless medium and thus more offered TV channels, as well as higher perceived video quality and thus wider adoption of the mobile TV service. In addition, the proposed algorithm enables the content provider to offer differentiated classes of services for different subscriptions rates. For example, better quality videos encoded at higher bit rates can be offered for higher premiums. This service differentiation is quite difficult (if at all possible) to offer with the current burst scheduling algorithms. The proposed algorithm achieves all of the above while making the energy consumption of mobile devices very close to the absolute possible minimum. We present theoretical analysis of the proposed algorithm and its approximation factor. We also conduct extensive evaluation of our algorithm using simulations and real implementation in a mobile TV testbed that complies to the DVB-H standard. Our experimental and simulation results show that the proposed algorithm: (i) is practical and produces correct burst schedules without burst conflicts and buffer violation instances, (ii) achieves nearoptimal energy saving for mobile devices, and (iii) runs efficiently in real time and scales to large scheduling problems.</p><p>The rest of this paper is organized as follows. Section II presents a brief background on mobile TV networks and summarizes the related works in the literature. In Section III, we state the burst scheduling problem in mobile TV systems, and we present the mathematical formulation of the problem. We propose and analyze a new burst scheduling algorithm in Section IV. We present the experimental and simulation results in Section V, and we conclude the paper in Section VI.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. BACKGROUND AND RELATED WORK A. Mobile TV Networks</head><p>TV programs can be delivered to mobile devices using cellular networks or dedicated broadcast networks. In this paper, we focus on broadcast networks, which have the potential to serve to a large number of subscribers. There are several systems and standards for video broadcast networks, including T-DMB <ref type="bibr" target="#b8">[8]</ref>, ISDB-T [9], MediaFLO <ref type="bibr" target="#b2">[3]</ref>, and DVB-H <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b10">[10]</ref>. Among the above broadcast networks, only DVB-H and MediaFLO try to minimize the energy consumption of mobile devices by periodically turning their RF circuits off. MediaFLO <ref type="bibr" target="#b2">[3]</ref> is a video broadcast system developed by Qualcomm and the FLO forum <ref type="bibr" target="#b11">[11]</ref>. The details of the design are not public. In contrast, DVB-H <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b10">[10]</ref> is an open international standard. We use the open DVB-H standard in our discussion throughout the paper. Nonetheless, in our problem formulation and solution we abstract away the specific details of the DVB-H standard. Therefore, our solutions are also applicable to other video broadcast networks.</p><p>We present an overview of the DVB-H standard. DVB-H is an extension to the DVB-T (Digital Video Broadcast- Terrestrial) standard <ref type="bibr" target="#b12">[12]</ref> to support mobile devices. DVB-H standard defines protocols below the network layer and uses IP as the interface with the higher-layer protocols such as UDP and RTP. The IP Datacast standard <ref type="bibr" target="#b1">[2]</ref> complements DVB-H by defining a set of higher-layer protocols for a complete end-to-end solution. DVB-H encapsulates IP packets using Multi-Protocol Encapsulation (MPE) sections to form MPEG-2 transport streams. Thus, data from a specific TV channel form a sequence of MPEs. MPEs are optionally FEC-protected before transmitted over the air medium. To save energy of mobile devices, MPEs belonging to a given TV channel are transmitted in bursts. <ref type="figure" target="#fig_0">Fig. 1</ref> illustrates the main components of a DVB-H system. Our proposed burst scheduling algorithm resides in the Time Slicing part of the IP Encapsulator, which runs on the base station as shown in <ref type="figure" target="#fig_0">Fig. 1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Related Work</head><p>Mobile devices have stringent battery capacity and heat dissipation requirements, thus they cannot accommodate mobile TV chips that consume too much energy. For instance, the DVB-H standard <ref type="bibr">[4]</ref> specifies that TV signal receivers with power consumption higher than 100 mW cannot be integrated with handheld devices. However, even the state-ofthe-art prototype mobile TV chips, such as <ref type="bibr" target="#b13">[13]</ref>, consume 200 mW, while commercial chips consume more than 500 mW in continuous mode. Therefore, the burst scheduling problem formulated in this paper to minimize the energy consumption of mobile devices is crucial for mobile TV networks.</p><p>A number of works have addressed energy saving in mobile TV networks. The authors of <ref type="bibr" target="#b14">[14]</ref> and <ref type="bibr">[4]</ref> estimate the effectiveness of the time slicing technique for given burst schedules. Both works indicate that time slicing enables mobile devices to turn off their RF circuits for a significant fraction of the time. These two works do not solve the burst scheduling problem; they only compute the achieved energy saving for a given predetermined burst schedule. In contrast, we formulate and solve the burst scheduling problem for arbitrary bit rates.</p><p>The authors of <ref type="bibr" target="#b15">[15]</ref> propose an energy saving strategy by not receiving some MPE-FEC sections once the received sections can successfully reconstruct the data. In this way, mobile devices can turn off their RF circuits earlier, which leads to additional energy saving compared to receiving all MPE-FEC sections. The authors of <ref type="bibr" target="#b16">[16]</ref> consider mobile devices with an auxiliary short range wireless interface and construct a cooperative network among several devices over this short range wireless network. Mobile devices share received IP packets over this short range network, so that each mobile device only receives a small fraction of IP packets directly from the DVB-H network. The proposals in <ref type="bibr" target="#b15">[15]</ref>, <ref type="bibr" target="#b16">[16]</ref> are orthogonal and complementary to our work, as they reside in the mobile devices themselves and try to achieve additional energy saving on top of that achieved by time slicing. In contrast, our algorithm is implemented in the base station.</p><p>Finally, we note that receivers in mobile TV broadcast networks have separate RF circuits and antennas for TV signals. We only focus on optimizing the energy saving for TV signal receivers. Furthermore, many of the energy saving techniques designed for the general wireless devices are not applicable to mobile TV networks (e.g., <ref type="bibr" target="#b17">[17]</ref>), because of the one-way nature of the broadcast networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. BURST SCHEDULING PROBLEM</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Problem Statement and Notations</head><p>We consider mobile TV networks in which a base station broadcasts S digital TV channels to mobile devices over a shared air medium with bandwidth R kbps. Examples of such networks include DVB-H <ref type="bibr" target="#b1">[2]</ref> and MediaFlo <ref type="bibr" target="#b2">[3]</ref>. Each TV channel s, 1 ≤ s ≤ S, has a bit rate r s kbps. We consider a very general problem where r s can take any value that is less than R. To save the energy consumption of mobile devices, the base station broadcasts each TV channel in bursts at bit rate R kbps. Thus, after receiving and buffering a burst of data, mobile devices can switch off their RF circuits till the next burst. The next burst time is computed by the base station and included in the header fields of every burst. This is referred to as time slicing, especially in the terminology of the DVB-H standard <ref type="bibr" target="#b1">[2]</ref>. Notice that the RF circuits are turned on slightly before the burst time, because it takes some time to wake up and synchronize the circuitry before it can start receiving data. This time is called the overhead duration and is denoted by T o . T o is in the range of 50-250 msec <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr">[4]</ref>.</p><p>Let γ s be the energy saving of the mobile devices receiving TV channel s. γ s is calculated as the ratio of the time the RF circuits are in off mode to the total time. The γ s values indicate the energy saving due to time slicing, and it has been used by previous works in the literature <ref type="bibr" target="#b14">[14]</ref>, <ref type="bibr" target="#b15">[15]</ref> and in the standardization documents <ref type="bibr">[4]</ref>. We define the average system-wide energy saving over all TV channels as</p><formula xml:id="formula_0">γ = 񮽙 񮽙 S s=1 γ s 񮽙 /S.</formula><p>The energy saving as well as the time slicing itself are performed on a recurring time window called a frame. We let p denote the frame length, which is a system parameter in mobile TV networks. In general, longer frame length p provides more chances to shuffle bursts around for better energy saving. However, a longer p also increases the channel switching delay and computation complexity of the burst scheduling algorithm. We will empirically study these tradeoffs in Sec. V. Now the burst scheduling problem can be stated as follows. Problem 1 (Burst Scheduling in Mobile TV Systems): Given S TV channels of different bit rates to be simultaneously broadcast to mobile devices. Each TV channel is broadcast as bursts of data to save the energy consumption of mobile devices. Our problem is to find the optimal transmission schedule for bursts of all TV channels to maximize the system-wide energy saving γ. The transmission schedule specifies the number of bursts for each TV channel in a frame p as well as the start and end times for each burst. The schedule cannot have burst collisions, which happen when two or more bursts have nonempty intersection in time. In addition, the schedule must ensure that there are no receiver buffer violations for any channel. A buffer violation occurs when the receiver of a TV channel either: (i) has no data in the buffer to play out (buffer underflow), or (ii) has no space to store data during a burst transmission (buffer overflow).</p><p>This burst scheduling problem, as stated above, is fairly general and quite difficult to solve. In fact, we have proved that the burst scheduling problem is NP-complete in our previous work <ref type="bibr" target="#b6">[6]</ref>, <ref type="bibr" target="#b7">[7]</ref>. We did that by reducing the problem of (nonpreemptive) task sequencing with arbitrary release times and deadlines <ref type="bibr">[18, pp. 236]</ref> to it.</p><p>Note that, the burst scheduling problem might look somewhat similar to preemptive machine scheduling problems at a first glance. However, there is a fundamental difference between our burst scheduling problem and various machine scheduling problems: most machine scheduling problems consider costless preemption model <ref type="bibr" target="#b19">[19]</ref>. In contrast, our burst scheduling problem adopts costly preemption model as each preemption in our problem leads to energy consumption overhead for T o msec period, which is not negligible compared to the burst size. The costly preemption model has only been considered in a few works <ref type="bibr" target="#b20">[20]</ref>- <ref type="bibr" target="#b23">[23]</ref>. The authors of <ref type="bibr" target="#b21">[21]</ref>, <ref type="bibr" target="#b22">[22]</ref> partially cope with preemption costs by adding constraints to limit the number of preemptions. The authors of <ref type="bibr" target="#b20">[20]</ref> solve the problem of minimizing the weighted sum of the total task flow time and the preemption penalty, where the weight is adhoc. The author of <ref type="bibr" target="#b23">[23]</ref> considers the problem of minimizing weighted completion time and task makespan under a given preemption cost. Unlike these works that partially cope with preemption costs, our burst scheduling problem considers preemption cost in the objective function and does not allow any overdue bursts. Hence, these algorithms, as well as others developed in the literature with costless preemption model, are not applicable to the burst scheduling problem (see <ref type="bibr" target="#b19">[19]</ref> for a comprehensive list of machine scheduling algorithms).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Problem Formulation</head><p>We notice that in this general burst scheduling problem, bursts have various sizes, are disjoint in time, and are repeated in all recurring frames. Furthermore, a TV channel can have multiple bursts in each frame to ensure that there is no buffer violations. Let n s be the number of bursts of TV channel s in each frame. To illustrate the receiver buffer dynamics, we demonstrate in <ref type="figure" target="#fig_1">Fig. 2</ref> the receiver buffer level of a TV channel with two bursts in each frame. We make two observations on this figure. First, during a burst, the buffer level increases with a rate (slope of the line) of R − r s , which is much larger than the consumption rate of −r s when there is no burst. Second, the frame starts with an initial buffer level (denoted by u s ) and ends at the same buffer level. Clearly, this is a requirement for any valid burst schedule, otherwise the receiver buffer may have over-/under-flow instances.</p><p>We  <ref type="figure" target="#fig_1">Fig. 2</ref>, c k s can be computed as:</p><formula xml:id="formula_1">c k s = u s + 񮽙 k−1 i=1 b i s −f k s r s ,</formula><p>where the second term accounts for the received data and the third term accounts for the consumed data. The output of the burst scheduling algorithm is a schedule L, which contains an entry</p><formula xml:id="formula_2">&lt; n s , f k s , b k s , u s &gt; for every TV channel, where 1 ≤ s ≤ S.</formula><p>The burst scheduling problem can be formulated as:</p><formula xml:id="formula_3">max L γ = S 񮽙 s=1 񮽙 1 − ns 񮽙 k=1 (T o + b k s /R)/p 񮽙 񮽙 S (1a) s.t. 񮽙 f k s , f k s + b k s R 񮽙 񮽙 񮽙 f ¯ k ¯ s , f ¯ k ¯ s + b ¯ k ¯ s R 񮽙 = ∅; (1b) c k s ≥ 0; (1c) c k s + b k s − b k s R r s ≤ Q; (1d) 0 ≤ u s ≤ Q; (1e) 񮽙 ns i=1 b k s = pr s ; (1f) ∀ 1 ≤ s 񮽙 = ¯ s ≤ S, 1 ≤ k ≤ n s , 1 ≤ ¯ k ≤ n ¯ s .</formula><p>The goal is to compute the schedule L * to maximize the objective function in (1a), i.e., the system-wide energy saving γ. The constraints (1b)-(1f) guarantee that the resulting burst schedule is feasible as defined in Problem 1. In particular, (1b) ensures that there is no bursts intersection among all S channels. (1c) validates the buffer level for channel s at the start time of every burst to prevent buffer underflow instances. We note that c k s is a function of f k s , b k s , and u s as defined above. (1d) validates the buffer level for channel s at the end time of every burst to prevent buffer overflow instances. It is sufficient to check the buffer level only at the start and end times, because the buffer level only increases during the bursts as illustrated in <ref type="figure" target="#fig_1">Fig. 2</ref>. The buffer under-and over-flow instances at frame boundaries are prevented by (1e). (1f) says that the number of received and consumed bits for channel s are equivalent in every frame, which in turn ensures that the buffer level at the end of every frame is equal to u s .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. NEAR-OPTIMAL ALGORITHM</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Algorithm Overview</head><p>We observe that the hardness of the burst scheduling problem is due to two tightly-coupled constraints: no burst collisions and no receiver buffer violation instances. These two constraints prevent us from employing many techniques used in solving machine scheduling problems. For example, swapping two tasks without compromising feasibility is a common technique in machine scheduling algorithms, but could lead to buffer violation instances in burst scheduling problems. To cope with this hardness, we propose to decouple these two constraints. We achieve this by transforming the burst scheduling problem into a buffer violation-free problem, which refers to a scheduling problem in which any feasible schedule has no buffer violation instances. As the buffer violation-free problem only has one constraint, similar to machine scheduling problems, it can be solved efficiently with near-optimality. The near-optimal solution for the restricted problem is then transformed back to the original burst scheduling problem, albeit with a small gap from the optimal solution of the original problem due to the transformation. We analytically bound this gap in Sec. IV-B.</p><p>Based on the decoupling idea, we propose a scheduling algorithm, which we call Double Buffering Scheduling (DBS) algorithm. The DBS algorithm consists of three components: double buffering transform, preemptive burst scheduling, and subframe lateness validation. We describe these components in the following.</p><p>Double Buffer Transform. We first explain how we transform a burst scheduling problem into a buffer violation-free problem. The core idea is to utilize double buffering in order to get rid of the buffer violation constraint. Double buffering refers to the technique of using two buffers, say B and B 񮽙 , in parallel: B can be drained when B 񮽙 is filled up, and B 񮽙 can be drained when B is filled up. Our proposal is to divide the receiver buffer Q into two equal-sized buffers and to divide each frame with length p into several subframes. Mobile devices then use a buffer for receiving (filling up) and another buffer for decoding (draining) in each subframe. Upon reaching a new subframe, mobile devices swap these two buffers: decoding data in the full buffer and saving data into the empty one. Now, if we can schedule the bursts in a way that the number of bits received in the preceding subframe is equal to the number of bits consumed in the current subframe, mobile devices always have data ready to play out, and thus are free from buffer underflow instances. Mobile devices are also free from buffer overflow instances because we explicitly reserve buffer for receiving data in every subframe.</p><p>We next precisely define the double buffering transform. For a TV channel s, we divide the frame p into 񮽙2pr s /Q񮽙 subframes, where each subframe (except the last one) has length Q/2r s sec. We chose such a subframe length because mobile devices of TV channel s consume Q/2 kb data in Q/2r s sec. Let y k s be the burst length that needs to be assigned to subframe k of TV channel s, where 1 ≤ s ≤ S and 1 ≤ k ≤ ≤2pr s /Q񮽙. We write y k s as:</p><formula xml:id="formula_4">y k s = ⎧ ⎨ ⎩ Q/(2R), 1 ≤ k ≤ ≤2pr s /Q񮽙 ; Q 2R × p mod Q 2r s Q 2r s , k = 񮽙 2prs Q 񮽙 if 2prs Q / ∈ Z.<label>(2)</label></formula><p>Note that the second row considers the boundary case: the last subframe is shorter if pr s is not a multiple of Q/2. Let x k s and z k s be the start and end times of subframe k of TV channel s.</p><p>We write x k s and z k s as:</p><formula xml:id="formula_5">x k s = (k − 1)Q/(2r s ),<label>(3)</label></formula><formula xml:id="formula_6">z k s = 񮽙 kQ/(2r s ), 1 ≤ k ≤ ≤2pr s /Q񮽙 ; p, k = 񮽙2pr s /Q񮽙 if 2pr s /Q / ∈ Z.<label>(4)</label></formula><p>Also, the second row considers the shorter, last, subframe. Now, we can write w as the set of all subframes. Our burst scheduling problem in <ref type="formula">(1)</ref>  </p><formula xml:id="formula_7">∀ 1 ≤ s ≤ S, 1 ≤ k ≤ ≤2pr s /Q񮽙.</formula><p>This transformed buffer violation-free problem is easier to solve than the burst scheduling problem in Eq. (1). This is because the buffer violation-free property is guaranteed by the transform, which will be proved in Theorem 1. Finally, a high-level pseudo code of the DBS algorithm is given in the technical report <ref type="bibr" target="#b24">[24]</ref> for the sake of space limitations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Correctness and Analysis</head><p>Due to space limitations, we give all proofs in the technical report <ref type="bibr" target="#b24">[24]</ref>, which is available online.</p><p>In the next lemma, we first show that our algorithm can solve the buffer violation-free problem. The proof is based on transforming any optimal burst schedule to the resulting burst schedule with a finite number of swapping of two bursts without compromising the schedule feasibility. This burst swapping technique is similar to the one used in <ref type="bibr">[19, Theorem 4.4]</ref>, which solves a single machine preemptive scheduling problem for minimizing task lateness.</p><p>Lemma 1: The DBS algorithm finds a burst schedule for the buffer violation-free problem in Eq. <ref type="formula">(5)</ref> if and only if one exists.</p><p>We then show, in the next lemma, that the double buffering transform does not affect the existence of feasible schedules. This is proved by showing that the existence of feasible burst schedules for the original problem in Eq. <ref type="formula">(1)</ref> is independent from the receiver buffer size Q.</p><p>Lemma 2: There exists a feasible schedule for the buffer violation-free problem in Eq. (5) if and only if there exists a feasible schedule for the original burst scheduling problem in Eq. (1).</p><p>With these two lemmas, we prove in the next theorem that the DBS algorithm always finds a feasible burst schedule for the original burst scheduling problem in Eq. (1). This theorem completes our proof of correctness.</p><p>Theorem 1 (Correctness): The DBS algorithm produces a feasible schedule for the problem in Eq. (5), which can be transformed to a feasible burst schedule for the original burst scheduling problem in Eq. (1), if one exists.</p><p>Next, we derive the approximation factor of the DBS algorithm and its time complexity.</p><p>Theorem 2 (Approximation Factor and Time Complexity): The DBS algorithm produces near-optimal burst schedules with the approximation factor</p><formula xml:id="formula_8">γ * γ ≤ 1 − T o R/SQ − 1/S 1 − 4T o R/SQ − 1/S ,<label>(6)</label></formula><p>where γ * and γ are the average energy saving achieved by the optimal scheduling algorithm and the DBS algorithm, respectively. Moreover, the DBS algorithm runs in time O(pS log(pS)).  <ref type="figure">Fig. 3</ref>. The approximation factor of the DBS algorithm.</p><p>Mbps. These values cover possible bit rates of a 7 MHz band with different modulation and coding schemes <ref type="bibr">[4]</ref>. We let the overhead duration T o = 0.1 sec. We first fix receiver buffer size at Q = 2 Mb and vary number of TV channels between 10 to 40. We compute the approximation factor γ * /γ and plot it in <ref type="figure">Fig. 3</ref> for different capacities of the wireless medium. The figure shows that our DBS algorithm produces very close results to the optimal ones, especially for practical values. For example, using our algorithm to broadcast 20 TV channels on a 7.620 Mbps medium, the average energy saving achieved by mobile devices is about 5% less than the absolute maximum energy saving that can be achieved using any algorithm to solve this NP-complete problem. Also, as detailed in the evaluation section, our algorithm obtains these near-optimal results in the order of tens of milliseconds on a commodity PC. Notice also that, as the number of TV channels increases, the approximation factor of our algorithm actually improves and approaches one. Next, we analyze the approximation factor as the receiver buffer Q varies from 1 to 16 Mb, while the number of TV channels is fixed at 30. The results, figures are given in <ref type="bibr" target="#b24">[24]</ref>, confirm that the approximation factor is typically close to 1, and it becomes even closer to 1 as the receiver buffer size increases, which is an expected trend in the future. These numerical results imply that our algorithm will yield almost optimal results in most deployments of mobile TV networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. EVALUATION</head><p>We conduct extensive experiments using a real mobile TV testbed as well as simulations to validate the correctness, efficiency, and near optimality of the proposed burst scheduling algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Setup of the Mobile TV Testbed</head><p>We have set up a complete testbed for mobile TV networks that are based on the common DVB-H standard. The testbed consists of two parts: a base station and receivers, which are described in the following. We use a commodity Linux PC as our base station, in which we installed an RF signal modulator card <ref type="bibr" target="#b25">[25]</ref>. This modulator card supports the physical layer of the DVB-H protocol stack and transmits DVB-H signals through a low-power amplifier, which is connected to an antenna. We developed our IP encapsulator based on an open-source project for DVB-H encapsulator <ref type="bibr" target="#b26">[26]</ref>, which encapsulates IP packets of video streams into MPEG-2 transport streams. The original IP encapsulator only supports burst schedules with uniform inter-burst distance for all TV channels. We have re-designed the time slicing module to be well-structured with clear interfaces in order to facilitate various burst scheduling algorithms. We then implemented our burst scheduling algorithm in the IP encapsulator.</p><p>We use Nokia cellular phones, such as N92, as TV receivers. Although the cellular phones help in assessing the visual quality of videos, they do not provide detailed logging functions of the low-level signals, which are needed to evaluate the scheduling algorithm. Therefore we added the DVB-H Analyzer <ref type="bibr">[27]</ref> to the testbed. This analyzer is attached to a PC via a USB port and provides details on the RF signals and DVB-H channels. It also comes with a visualization software that can run on the PC for real-time analysis.</p><p>For the experiments, we configured the modulator to use a 5 MHz radio channel with QPSK (Quadrature Phase-Shift Keying) modulation scheme. According to the DVB-H standard documents, this leads to 5.445 Mbps effective shared bandwidth <ref type="bibr">[4]</ref>. We concurrently broadcast 12 TV channels using our algorithm for 10 minutes. We set the frame length as 10 sec. The TV channel bit rates are randomly chosen between 200 and 800 kbps. The receiver buffer size is 1 Mb. For each TV channel, we set up a video streaming server on the base station to send 1-kB IP packets at the chosen bit rate. We set the overhead duration T o = 100 msec. To conduct statistically meaningful performance analysis, we collect detailed burst logs at the base station. The logs contain the start and end times (in msec) of every burst of data and its size. We developed several software utilities to analyze the logs for three performance metrics: cumulative received bits, time spacing between successive bursts, and energy saving. In the following subsection, we use these metrics to show that our algorithm produces correct schedules, achieves near optimal energy saving for mobile devices, and is very efficient and can run in real time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Results from the Mobile TV Testbed</head><p>Correctness of the DBS Algorithm. We first validate the correctness of the proposed algorithm, i.e., we make sure that the algorithm results in no buffer violations for the receivers and no burst conflicts. For buffer violations, we compute the cumulative received bits (from the broadcasting base station) as the time progresses and compare this number against the cumulative consumed bits and the buffer upper limit. The cumulative consumed bits are computed by multiplying the bit rate of each TV channel with the time elapsed. The buffer upper limit is computed as the number of consumed bits plus the receiver's buffer size Q, which is set to 1 Mb. A sample result is presented in <ref type="figure">Fig. 4</ref> for one TV channel, results for other channels are similar. The figure shows the dynamics of the received bits, as the number of bits increases upon receiving a burst and then stays the same till the next burst. Meanwhile, the consumed bits and the buffer upper limits are continuously increasing with slope equals to the bit rate of the TV channel. The figure clearly shows that the curve representing the received bits never goes below the line representing consumed bits (i.e., no buffer underflow instances) and never exceeds the buffer upper limit (i.e., no buffer overflow instances). Note that this figure shows shorter time period, 20 sec, for the clarity of the figure. Nonetheless, this period covers multiple frames and the burst scheduling is identical in successive frames. Thus, the results are the same for the whole streaming period (10 minutes).</p><p>To check for burst conflicts, we compute time spacing between all bursts. We first sort bursts of all TV channels based on their start times. Then, we sequentially compute the time spacing between the start time of a burst and the end time of its immediate, previous, burst. We use the time spacing to validate the resulting schedule leads to no burst conflict, as a negative time spacing indicates bursts may intersect with each other. Our logs show that there were no buffer conflicts among bursts computed by our algorithm.</p><p>Energy Saving and Near-Optimality of the DBS Algorithm. We report the energy saving achieved by receivers of different TV channels when our burst scheduling algorithm is used. <ref type="figure">Fig. 5</ref> shows the energy saving of four representative TV channels; the energy saving of other channels are not shown for the clarity of the figure. We observe that the energy saving for low bit rate TV channels can be as high as 92%, while it is only 78% for high bit rate TV channels. This significant difference highlights the importance of choosing the appropriate bit rates to encode TV channels carrying diverse video content. The appropriate bit rate is not only important for enhancing the perceived visual quality, but it is also important for maximizing the energy saving and hence prolonging the viewing time on mobile devices.</p><p>Next, we compare the energy saving achieved by our algorithm against a very conservative upper bound on the maximum achievable energy saving. Recall that the burst scheduling problem is NP-complete and finding the exact optimal solution may take prohibitively long time to compute. We compute this upper bound as follows. For every TV channel, we make the base station broadcast only this channel without any other channels. The base station can maximize the energy saving by allocating the largest burst that can fill the receiver's buffer. The RF circuit of the receiver is then turned off till the data of this burst is consumed. Clearly, this is a conservative upper bound on the energy saving that can be achieved by the receivers of the considered channel. This is because the base station has a complete freedom to allocate the largest burst without considering any interactions from other channels. We repeat this experiment 12 times; once for each considered TV channel. Then, we run our algorithm to compute the burst schedule for the 12 TV channels, and we make the base station broadcast all of them concurrently.</p><p>We compute the energy saving achieved by mobile devices of each TV channel, and compare it against the upper bound on the energy saving. We report the results for two sample TV channels in <ref type="figure" target="#fig_2">Fig. 6</ref>; the results for other TV channels are similar. <ref type="figure" target="#fig_2">Fig. 6</ref> shows that our algorithm produces near-optimal results: The gap between the energy saving achieved by our algorithm and the upper bound is less than 7% in all cases (including the ones not shown in the <ref type="figure">figure)</ref>. We emphasize that this gap analysis is very conservative as we compare our algorithm, which concurrently broadcasts several TV channels at arbitrary bit rates, against the maximum energy saving of broadcasting a single TV channel.</p><p>Running Time of the DBS Algorithm. In all of the above experiments, our algorithm was running in real time on a commodity PC. The running time of our algorithm was in the order of tens of milliseconds. Thus, the algorithm can be invoked frequently as needed and in real time. This is a useful property for the network operators as it allows them to handle the dynamic nature of mobile TV networks and the usual changes in the offered TV programs. For example, broadcasting a commercial ad with high motion and rich visual content (and thus high bit rate) during a talk show (low bit rate) is quite simple: just before broadcasting the first burst of the commercial ad, our burst scheduling algorithm is invoked to compute a new burst transmission schedule considering the new bit rate of the ad. The same can be done for transitioning between shows and adding new TV channels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Simulation Setup</head><p>We have implemented a simulator for mobile TV broadcast networks in Java. The simulator captures all important aspects relevant to the burst scheduling problem and it abstracts away details, e.g., sending program guide to mobile devices, that are orthogonal to this problem. We developed the simulator to analyze wide ranges of the parameters, including extreme and boundary values that are difficult to exercise in the real testbed. This is useful to fully understand the merits and shortcomings of our algorithm.</p><p>Unless otherwise specified, we use the following parameters. The receiver buffer size Q = 2 Mb, wireless medium bit rate R = 6.4 Mbps, frame length p = 10 sec, and overhead duration T o = 100 msec. We randomly choose the bit rates of TV channels from 50 to 1,000 kbps to emulate different types of TV programs. We repeat each experiment 100 times, and we report the means and 95% confidence intervals of the performance metrics in all figures.</p><p>We consider several performance metrics, including: energy saving γ, channel switching delay d, and running time of our algorithm. The channel switching time is an important metric in mobile TV networks, as many users tend to flip through several channels before they decide on a specific channel to watch. We define the channel switching delay as the time a user waits before s/he starts viewing a selected channel when a change of channel is requested by that user. The channel switching delay is composed of several accumulated parts, in which the frame refresh delay and time slicing delay are the two dominating contributors <ref type="bibr" target="#b27">[28]</ref>, <ref type="bibr" target="#b28">[29]</ref>. The frame refresh delay refers to the time period between receiving the first bit of a new video stream and receiving the next random access point, typically an intra-coded picture, of that video. The time slicing delay refers to the time period between locking on a mobile TV signal and receiving enough bursts of the selected TV channel for a smooth play out. Our simulator captures only the time slicing delay. The frame refresh delay is difficult to simulate, because it depends on the specific video content, how it is encoded, and how the frames are organized. In addition, The time slicing delay is a direct outcome of our burst scheduling algorithm, while the frame refresh delay is orthogonal to our algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Simulation Results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Tradeoff between Energy Saving and Channel Switching</head><p>Delay. Our results reveal a trade off between the achieved energy saving by mobile devices and the average channel switching delay. Furthermore, this tradeoff can be controlled by choosing the appropriate receiver buffer size. To demonstrate this tradeoff, we vary the receiver buffer size between 128 kb and 2,048 kb. We run our simulator and compute the energy saving and the channel switching delay for each buffer value. The results of channel switching delay are shown in <ref type="figure" target="#fig_3">Fig. 7(b)</ref>. The figure shows that smaller channel switching delays-which are desirable for better viewing experiencerequire smaller receiver buffer sizes. For example, the average switching delay is reduced from 4 to 2 sec by reducing receiver buffer size from 2 to 1 Mb. This indicates that changing the buffer size can control channel switching delays. However, smaller receiver buffer sizes dictate shorter bursts, which increases the energy consumption as the RF circuit of the receivers needs to wake up more often for smaller bursts and in each time it incurs an additional overhead (of at least T o msec). This is shown in <ref type="figure" target="#fig_3">Fig. 7(a)</ref> as the energy saving diminishes when receiver buffer size becomes very small. The figure indicates that a buffer size of at least 1,000 kb is needed to achieve an average energy saving of 75%. With 1,000 kb buffer, the average switching delay is about 2 sec.</p><p>Impact of Wireless Medium Utilization. Next, we evaluate the performance of our algorithm under different bandwidth utilizations of the shared air medium. We consider various bandwidth utilization: from 30% to 100% to cover all practical scenarios. The frame length is fixed at 10 sec. For each bandwidth utilization, we construct burst scheduling problems with TV channels encoded at arbitrary bit rates randomly chosen between 50 and 1,000 kbps. We then solve each burst scheduling problem using our DBS algorithm and measure the energy saving and the switching delay. The results, figures are given in the technical report <ref type="bibr" target="#b24">[24]</ref>, imply that increasing the bandwidth utilization has a minor impact on the energy saving and the switching delay. For example, the average energy saving is reduced by less than 5% as the utilization increases from 30% to 100%. This degradation is intuitive, because heavy loaded mobile TV networks leave smaller rooms for arranging the bursts of different TV channels to save energy. Nonetheless, this set of experiments shows that our algorithm is robust and functions properly even in fully loaded networks.</p><p>Impact of Frame Length. We analyze the impact of various frame lengths on the performance. We vary the frame length from 10 sec to 4 min, and measure the energy saving and the channel switching delay in each case. We fix the bandwidth utilization at 90%. We report the results in <ref type="figure" target="#fig_4">Fig. 8, which</ref> shows that increasing the frame length from 10 sec to 4 min only improves the average energy saving by about 2%, while it doubles the average channel switching delay. The marginal energy saving improvement is clearly not desirable given the significant increase in the switching delay. This experiment indicates a frame length in the range between 10 and 60 sec would achieve a high energy saving without incurring excessive channel switching delays. The specific value of the frame can be decided by the network operator based on other considerations, such as the desired level of responsiveness to changes in the video content of the TV channels.</p><p>Running Time. Finally, we report the average running time of our algorithm on a commodity PC with a 2.6 GHz processor and runs Linux. Due to space limitations, in <ref type="bibr" target="#b24">[24]</ref>, we plot the running time of our algorithm to compute the burst schedules as the bandwidth utilization varies from 30% to 100%, while the frame length is fixed at 10 sec. We observe that the maximum running time is less than 110 msec on a commodity PC, to compute burst schedules for fully-utilized mobile TV network. These results confirm our results from the real testbed that our algorithm can indeed run in real time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. CONCLUSIONS</head><p>We studied the energy optimization problem in mobile TV networks. We mathematically formulated the burst scheduling problem for multiple TV channels with arbitrary bit rates. Solving this problem is important, because it enables network operators to offer high quality video programs at bit rates commensurate to the visual complexity of these programs, instead of having to use a uniform bit rate for all types of programs as is currently done in some of the deployed mobile TV networks. The burst scheduling problem is, unfortunately, NP-complete. We proposed a novel approximation algorithm for this burst scheduling problem. We proved that our algorithm has a small approximation factor, and it has a time complexity of O(pS log(pS)), where S is the number of TV channels, and p is a constant value for the frame length on which the burst scheduling problem is solved. We implemented and validated our algorithm in a real mobile TV testbed that complies to the DVB-H standard. We also developed a simulator for mobile TV networks to study the impact of wide ranges of various parameters on the performance of our algorithm. Our experimental and simulation results show that the approximation factor of the proposed algorithm is very close to one for most practical mobile TV networks. They also verify that our algorithm can run in real time and it scales well to large scheduling problems.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. The main components of mobile TV broadcast networks. Our work optimizes the Time Slicing component.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. The dynamics of the buffer size during the burst on and off times.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 4. Buffer dynamics of the resulting burst schedules of our algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. The impact of changing the receiver buffer size on: (a) energy saving, and (b) channel switching delay.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. The implication of frame length on: (a) energy saving, and (b) channel switching delay.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>denote the start time and burst size of burst k of channel s as f k s sec and b k s kb, respectively, where s = 1, 2, . . . , S and k = 1, 2, . . . , n s . Since mobile devices open their RF circuits T o msec before f k s and it takes b k s /R to transfer b k s kb data, the RF on period of burst k for channel s isWe define the buffer level at the beginning of burst k of TV channel s as c k s kb. As illustrated in</head><label></label><figDesc></figDesc><table>[f k 
s − 
T o , f k 
s + b k 
s /R). In addition, any burst b k 
s must be smaller 
than the receiver buffer size Q, i.e., 0 &lt; b k 
s ≤ Q. </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>for any s and k, oris non-positive. If this is true, we claim that the resulting burst scheduling is feasible for the original burst scheduling problem. Otherwise, the algorithm prompts the network operator to reduce the number of TV channels.</head><label></label><figDesc>Preemptive Burst Scheduling. Next, we propose an efficient preemptive burst scheduling algorithm that solves Eq. (5). We first define decision points as the time instances at which either a new subframe starts, i.e., at time x k sscheduling algorithm terminates whenever there is no outstanding subframe nor a subframe that has a start time in the future. In Theorem 2, we prove that the preemptive burst scheduling algorithm gives a burst schedule that minimizes the lateness, which is defined as e k s − z k s . The achieved actual lateness allows us to determine whether the resulting burst schedule is feasible for the original burst scheduling problem.</figDesc><table>bursts scheduled to a subframe have met the required aggregate 
burst length, i.e., y k 
s . At each decision point t, our scheduling 
algorithm schedules a burst for the subframe with the smallest 
end time z k 
s among all outstanding subframes with start time 
earlier than the current time, i.e., x k 
s ≤ t. We use outstanding 
to refer to a subframe that needs more bursts: its current 
aggregate burst length hasn't met the required aggregate burst 
length y k 
s . Moreover, we let e k 
s be the completion time of 
subframe w k 
s , where e k 
s represents the time at which the 
bursts assigned to w k 
s meet the aggregate burst length y k 
s . 
Our Subframe Lateness Validation. This component checks 
whether all e k 
s − z k 
s </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head></head><label></label><figDesc>To shed some lights on the approximation factor derived in the above theorem, we numerically analyze it using a range of practical values. We consider mobile TV networks with various wireless medium capacities between 4.354 and 19.595</figDesc><table>10 

15 
20 
25 
30 
35 
40 

0.6 

0.8 

1 

1.2 

1.4 

1.6 

Number of TV Channel S 
Approximation Factor 

γ  *  

/γ 
4.354 Mbps 
7.620 Mbps 
14.515 Mbps 
19.595 Mbps 

</table></figure>

			<note place="foot">This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the IEEE INFOCOM 2009 proceedings.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Digital Video Broadcasting -Handheld (DVB-H) home page</title>
		<ptr target="http://www.dvb-h.org/" />
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">DVB-H and IP Datacast -broadcast to handheld devices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kornfeld</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>May</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Broadcasting</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="161" to="170" />
			<date type="published" when="2007-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">FLO technology overview</title>
		<ptr target="http://www.qualcomm.com/common/documents/brochures/techoverview.pdf" />
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Digital Video Broadcasting (DVB</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">European Telecommunications Standards Institute (ETSI) Standard EN 102 377 Ver. 1.3.1</title>
		<imprint>
			<date type="published" when="2007-05" />
		</imprint>
	</monogr>
	<note>DVB-H implementation guidelines</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">DVB-H Paris mobile TV customer trial summary page</title>
		<ptr target="http://www.dvb-h-online.com/Services/services-paris-canalplus.htm" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">On burst transmission scheduling in mobile TV broadcast networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hefeeda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hsu</surname></persName>
		</author>
		<ptr target="http://nsl.cs.sfu.ca/wiki/" />
		<imprint>
			<date type="published" when="2008-08" />
		</imprint>
		<respStmt>
			<orgName>Simon Fraser University</orgName>
		</respStmt>
	</monogr>
<note type="report_type">Tech. Rep.</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Energy optimization in mobile TV broadcast networks</title>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Innovations in Information Technology (Innovations&apos;08)</title>
		<meeting>of IEEE Innovations in Information Technology (Innovations&apos;08)<address><addrLine>Al Ain, United Arab Emirates</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">System and services of Terrestrial Digital Multimedia Broadcasting (T-DMB)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Bae</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ahn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ahn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Broadcasting</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="171" to="178" />
			<date type="published" when="2007-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Transmission system for ISDB-T</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Takada</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Saito</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE</title>
		<meeting>the IEEE</meeting>
		<imprint>
			<date type="published" when="2006-01" />
			<biblScope unit="volume">94</biblScope>
			<biblScope unit="page" from="251" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">DVB-H: Digital broadcast services to handheld devices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Faria</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Henriksson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Stare</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Talmola</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of the IEEE</title>
		<imprint>
			<biblScope unit="volume">94</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="194" to="209" />
			<date type="published" when="2006-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">FLO forum home page</title>
		<ptr target="http://www.floforum.org/" />
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Digital Video Broadcasting (DVB); framing structure, channel coding and modulation for digital terrestrial television. European Telecommunications Standards Institute (ETSI) Standard EN 300 744 Ver. 1.5.1</title>
		<imprint>
			<date type="published" when="2004-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A 184 mW fully integrated DVB-H tuner with a linearized variable gain LNA and quadrature mixers using cross-coupled transconductor</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Iizuka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Kawamura</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Fujiwara</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Kagoshima</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kawama</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Kijima</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Koutani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Toyoyama</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Sakuno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal of Solid-State Circuits</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="862" to="871" />
			<date type="published" when="2007-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Performance analysis of time slicing in DVB-H</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Owens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cosmas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Itagaki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Joint IST Workshop on Mobile Future and Symposium on Trends in Communications (SympoTIC&apos;04)</title>
		<meeting>of Joint IST Workshop on Mobile Future and Symposium on Trends in Communications (SympoTIC&apos;04)<address><addrLine>Bratislava, Slovakia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-10" />
			<biblScope unit="page" from="183" to="186" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Performance evaluation of power saving strategies for DVB-H services using adaptive MPE-FEC decoding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Balaguer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Fitzek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Olsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gade</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE International Symposium on Personal, Indoor and Mobile Radio Communications (PIMRC&apos;05)</title>
		<meeting>of IEEE International Symposium on Personal, Indoor and Mobile Radio Communications (PIMRC&apos;05)<address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-09" />
			<biblScope unit="page" from="2221" to="2226" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Cooperative power saving strategies for IP-services supported over DVB-H networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Fitzek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Katz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Wireless Communications and Networking Conference (WCNC&apos;07)</title>
		<meeting>of IEEE Wireless Communications and Networking Conference (WCNC&apos;07)<address><addrLine>Hong Kong, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-03" />
			<biblScope unit="page" from="4107" to="4111" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">PSM-throttling: Minimizing energy consumption for bulk data communications in WLANs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE International Conference on Network Protocols (ICNP&apos;07)</title>
		<meeting>of IEEE International Conference on Network Protocols (ICNP&apos;07)<address><addrLine>Beijing, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-10" />
			<biblScope unit="page" from="123" to="132" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Computers and Intractability: A Guide to The Theory of NP-completeness</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Johnson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979" />
			<publisher>W. H. Freeman</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Brucker</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">On the value of preemption in scheduling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Bartal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Leonardi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">S R</forename><surname>Sitters</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Workshop on Approximation Algorithms for Combinatorial Optimization Problems (APPROX&apos;06)</title>
		<meeting><address><addrLine>Barcelona, Spain</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-08" />
			<biblScope unit="page" from="39" to="48" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Parallel processor scheduling with limited number of preemptions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Braun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Schmidt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="671" to="680" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Nonclairvoyant scheduling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Motwani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Phillips</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Torng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">130</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="17" to="47" />
			<date type="published" when="1994-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Preemptive weighted completion time scheduling of parallel jobs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Schwiegeishohn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of European Symposium on Algorithms (ESA&apos;96)</title>
		<meeting>of European Symposium on Algorithms (ESA&apos;96)<address><addrLine>Barcelona, Spain</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996-09" />
			<biblScope unit="page" from="39" to="51" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Time slicing in mobile TV networks with arbitrary channel bit rates</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hefeeda</surname></persName>
		</author>
		<ptr target="http://nsl.cs.sfu.ca/wiki/" />
		<imprint>
			<date type="published" when="2008-07" />
		</imprint>
		<respStmt>
			<orgName>Simon Fraser University</orgName>
		</respStmt>
	</monogr>
<note type="report_type">Tech. Rep.</note>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Dektec modulator</title>
		<ptr target="http://www.dektec.com/Products/DTA-110T" />
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">DiviCatch analyzer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">&amp;quot;</forename><surname>Fatcaps</surname></persName>
		</author>
		<ptr target="http://www.enensys.com" />
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Tune-in time reduction in video streaming over DVB-H</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rezaei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hannuksela</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gabbouj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Broadcasting</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="320" to="328" />
			<date type="published" when="2007-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Joint video coding and statistical multiplexing for broadcasting over DVB-H channels</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rezaei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Bouazizi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gabbouj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Multimedia</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1455" to="1464" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
