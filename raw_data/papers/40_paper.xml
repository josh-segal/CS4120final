<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:27+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Dynamical Construction of a Core-Based Group-Shared Multicast Tree in Mobile Ad Hoc Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bing-Hong</forename><surname>Liu</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">National Tsing Hua University Hsing Chu</orgName>
								<address>
									<country key="TW">Taiwan</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ming-Jer</forename><surname>Tsai</surname></persName>
							<email>mjtsai@cs.nthu.edu.tw</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">National Tsing Hua University Hsing Chu</orgName>
								<address>
									<country key="TW">Taiwan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wei-Chei</forename><surname>Ko</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">National Tsing Hua University Hsing Chu</orgName>
								<address>
									<country key="TW">Taiwan</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Dynamical Construction of a Core-Based Group-Shared Multicast Tree in Mobile Ad Hoc Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<note>1</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>A core-based group-shared multicast tree is a shortest path tree rooted at core node that distributes packets to and from all group members. Traditionally, the bandwidth cost consumed by transmitting a packet via the tree is evaluated by the total weights of all the edges. And, the cost is minimized by constructing the multicast tree that has minimum total weights of edges to span all group members. However, when the local broadcasting operation is used to multicast a packet, we found that the cost is supposed to be evaluated by the total weights of all senders that include the core and all non-leaves. Since the multicast tree with the number of nodes greater than or equal to three has minimum cost only when the core is not a leaf, it leads us to find the multicast tree with the minimum number of non-leaves when each sender node has a unit weight. However, no polynomial time approximation scheme can be found for the minimum non-leaf multicast tree problem unless P NP = since the problem is not only NP-hard but also MAX-SNP hard. Thus, a heuristic is proposed to dynamically construct and adjust the multicast tree in a mobile ad hoc network. Experimental results show that our multicast tree has smaller number of non-leaves than others in the geometrically distributed network model.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>A mobile ad hoc network (MANET) has mobile nodes that are connected dynamically in arbitrary manner. These nodes function as routers that discover and maintain routes to others in the network. When two nodes are within each transmission range, they can exchange packets each other. Otherwise, communications between non-neighbor nodes need multi-hop protocols <ref type="bibr" target="#b8">[9]</ref>. Multicast communication, which delivers a data stream from a single source to multiple destinations by routing protocols, is widely used in information sharing applications, such as conferences, emergency services, law enforcement, etc. In this paper, we undertake the development of multicast protocols in MANETs.</p><p>The design of multicast protocols in MANETs has received considerable attention, such as Ad hoc Multicast Routing Protocol (AMRoute) <ref type="bibr" target="#b0">[1]</ref>, Core-Assisted Mesh Protocol (CAMP) <ref type="bibr" target="#b3">[4]</ref>, Differential Destination Multicast (DDM) <ref type="bibr" target="#b7">[8]</ref>, and Ad hoc Multicast Routing Protocol Utilizing Increasing ID Numbers (AMRIS) <ref type="bibr" target="#b9">[10]</ref>. The AMRIS constructs a group-shared multicast tree and the CAMP creates a group-shared mesh. The AMRoute employs the mesh links to construct the multicast tree, combining advantages of tree-based and meshed-based approaches. The DDM is proposed in an attempt that the effect of increasing overhead in maintaining multicast tree/mesh with frequently fluctuant environment is minimized.</p><p>Since core-based group-shared tree architecture has less forwarding overhead than mesh-based architecture, it is used to be the routing topology in many multicast protocols, such as Gupta's core selection and migration protocol <ref type="bibr" target="#b5">[6]</ref> and Lightweight Adaptive Multicast (LAM) <ref type="bibr" target="#b6">[7]</ref>. A core-based group-shared tree is rooted at core node that is responsible for distributing packets to and from all group members. Since MANETs have limited bandwidth, the bandwidth cost consumed for transmitting a packet needs to be conserved. And, two issues are addressed for this purpose: the selection of the core and the construction of the multicast tree. On the first issue, Gupta designs an adaptive core selection and migration method in MANETs. On the second one, since the cost consumed by transmitting a packet via the multicast tree is evaluated by the total weights of all the edges traditionally, it is minimized by constructing a minimum edge weight multicast tree. In <ref type="bibr" target="#b5">[6]</ref>, each edge is assumed to have a unit weight and a heuristic of constructing minimum edge weight multicast tree is proposed there.</p><p>When the local broadcasting operation is used to multicast a packet, we found that the cost is supposed to be evaluated by the total weights of all senders that include the core and all non-leaves. Since the multicast tree with the number of nodes greater than or equal to three has minimum cost only when the core is not a leaf, it leads us to find the multicast tree with the minimum number of non-leaves when each sender node has a unit weight. However, the minimum non-leaf multicast tree problem is not only NP-hard but also MAX-SNP hard. It implies no polynomial time approximation scheme can be found for the problem unless NP P = . In this paper, a heuristic of constructing the minimum non-leaf multicast tree in a mobile ad hoc network is proposed. The rest of this paper is organized as follows. In the next section, some notations and theorems are introduced. It then goes to describe how to reduce the cost of the multicast tree in the proposed heuristic in Section 3. Hereafter, unless specified otherwise, the cost of the multicast tree refers to the bandwidth consumption of multicasting a packet via this tree and is evaluated by the number of non-leaves in this tree. Performance evaluation by computer simulation is given in Section 4. Finally, Section 5 concludes this paper. </p><formula xml:id="formula_0">( ) { , } T W N A D E = and ( ) { , } T B</formula><p>N A B C = by Definition 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Preliminaries</head><p>Here, necessary notations are first introduced. When all hosts in a MANET have the same transmission range, the MANET can be represented as an undirected graph ( , ) N v are summarized in Definition 1.</p><formula xml:id="formula_1">G G G V E ,</formula><p>Take <ref type="figure" target="#fig_0">Figure 1</ref>, for example, where</p><formula xml:id="formula_2">( ) { , } T W N A D E = and ( ) { , } T B N A B C = . It is noted that node ( ) T B F N A ∉ since ( , ) T A F E ∉ . It is also noted that node ( ) T W E N A ∈ since ( , ) G A E E ∈ . Definition 1. Let ( , ) G G G V E</formula><p>be an undirected graph, and ( , )</p><formula xml:id="formula_3">T T T V E be a multicast tree in G . Then, ( ) { | ,( , ) } T W T G N v u u W u v E = ∈ ∈ and | { ) ( u v N T B = } ) , ( , T T E v u B u ∈ ∈ . 񮽙</formula><p>In the following, we prove two theorems: Theorem 1 characterizes the properties of the multicast tree and Theorem 2 shows that a fast algorithm for the minimum non-leaf multicast tree problem is unlikely to exist. Theorem 1. Let the cost of a multicast tree be evaluated by the total weights of all senders that include the core and all non-leaves. If the number of nodes in the multicast tree is greater than or equal to three, the multicast tree has the minimum cost only when the core is not a leaf. Proof. Assume that the multicast tree <ref type="bibr" target="#b0">1</ref>  , where k denotes the weight of node 1 T core . We have a contradiction, and we must therefore conclude that the multicast tree has the minimum cost only when the core is not a leaf. 񮽙 Theorem 2. The minimum non-leaf multicast tree problem is not only NP-hard but also MAX-SNP hard. That is, the minimum non-leaf multicast tree problem has no polynomial time approximation scheme unless P NP = . Proof. It suffices to show the minimum non-leaf multicast tree problem is MAX-SNP hard. Assume that the minimum non-leaf multicast tree problem is not MAX-SNP hard. Then, the problem of finding a minimum non-leaf spanning tree that spans all nodes is not MAX-SNP hard also since it is a subproblem of the minimum non-leaf multicast tree problem. It implies the maximum leaf spanning tree problem is not MAX-SNP hard also since the minimum non-leaf spanning tree problem is equal to the maximum leaf spanning tree problem. However, the maximum leaf spanning tree problem is proven to be not only NP-complete <ref type="bibr" target="#b4">[5]</ref> but also MAX SNP-complete <ref type="bibr" target="#b2">[3]</ref>. It is a contradiction, which tells us that our assumption must be false. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">The Heuristic</head><p>In this section, the heuristic is proposed for the minimum non-leaf multicast tree problem. Our method is to change the topology of the multicast tree, which is initially a shortest path tree rooted at the core, such that the cost can be reduced. Consider a multicast tree in which the number of nodes is greater than or equal to three. If one node has many non-leaf neighbors, the cost may be reduced by connecting this node to these neighbors. Take <ref type="figure">Figure 2</ref>, for example. <ref type="figure">Figure 2(b)</ref> shows the multicast tree <ref type="bibr" target="#b1">2</ref> T after a reduction is applied to node A in the multicast tree <ref type="bibr" target="#b0">1</ref> T shown in <ref type="figure">Figure 2(</ref>  <ref type="bibr" target="#b0">1</ref> T , and 1 in 2 T . The reduction process can be simultaneously applied to many nodes to locally minimize the cost. When one non-leaf node, say v , becomes a leaf due to the reduction on one of its neighbor, it connects with this neighbor by an edge, say e , in the multicast tree. After, there may be another neighbor of node v , say u , which executes a reduction. However, it is unnecessary that node v connects to node u and deletes edge e when a reduction is applied to node u . Take <ref type="figure">Figure 3</ref>, for example. In <ref type="figure">Figure 3</ref> T . To avoid an unnecessary reduction, we classify all nodes in the multicast tree into black nodes and white nodes. Initially, each node is a white node and becomes a black node when one reduction is applied to it or one of its neighbors. When one node executes the reduction, it connects to the neighbors which are white nodes only. Take <ref type="figure">Figure 4</ref>, for example. In <ref type="figure">Figure 4</ref>(a), all nodes in the multicast tree <ref type="bibr" target="#b0">1</ref> T are white nodes. When a reduction is applied to node B in <ref type="bibr" target="#b0">1</ref> T , nodes B , C , E , and F become black ones in the multicast tree <ref type="bibr" target="#b2">3</ref> T as shown in <ref type="figure">Figure 4(c)</ref>. Later, when a reduction is applied to node A in <ref type="bibr" target="#b2">3</ref> T , nodes A , D , G and H become black ones in the multicast tree <ref type="bibr" target="#b3">4</ref> T as shown in <ref type="figure">Figure 4(d)</ref>. It is noted that node A does not connect to node C when a reduction is applied to node A in <ref type="bibr" target="#b2">3</ref> T , since node C is a black one in <ref type="bibr" target="#b2">3</ref> T before the reduction on node A . The cost of the multicast tree depends on which node executes a reduction. In <ref type="figure">Figure 4,</ref>  D E in the reduction process. However, the reduction is unnecessary since leaf node A becomes a non-leaf and no cost is reduced. Besides, consider node A in <ref type="figure">Figure 5(</ref> N A . Based on the same argument just described, at most three non-leaves, say E , H and I , may become leaves due to the reduction on node A . Since leaf node A becomes a non-leaf, the number of non-leaves is reduced by at most two when a reduction is applied to node A . Thus, .</p><p>A profit is set to 2. Clearly, when node A executes a reduction, the number of non-leaves is reduced by at most | ( </p><formula xml:id="formula_5">profit v. to 2 | ) ( | | ) ( | − + v N v N T T B W if + | ) ( | v N T W 2 | ) ( | &gt; v N T B and 2 | ) ( | &lt; v N T B</formula><p>. In addition, consider node A in <ref type="figure">Figure 5(</ref> . Since node A is a non-leaf between two black nodes, the three white nodes can be used to reduce the cost by the reduction even though it reduces at most two non-leaves in this case. Thus, .</p><p>A profit is set to 3. Clearly, when node A executes a reduction, the number of non-leaves is reduced by at most | ( )|</p><formula xml:id="formula_6">T W N A if | ( )| | ( )| 2 T T W B N A N A + &gt; and | ) ( | A N T B 2 ≥ . It then goes to set profit v. to | ) ( | v N T W if + | ) ( | v N T W 2 | ) ( | &gt; v N T B and 2 | ) ( | ≥ v N T B . The evaluation of profit v.</formula><p>is summarized in Definition 2. </p><formula xml:id="formula_7">Definition 2. profit v. is evaluated by (a) . 0 v profit = , if 2 | ) ( | | ) ( | ≤ + v N v N T T B W , (b) . | ( ) | | ( ) | 2 T T W B v profit N v N v = + − , if 2 | ) ( | | ) ( | &gt; + v N v N T T B W and 2 | ) ( | &lt; v N T B , (c) . | ( )| T W v profit N v = ,</formula><formula xml:id="formula_8">( ) { } T W u N v v ∈ U . 񮽙</formula><p>After a period of time, most nodes in the multicast tree are set to be black ones. And, the cost of the multicast tree can not be reduced further even when the network topology is changed. To avoid this situation, the core is responsible for periodically flushing the multicast tree. When a node receives a flush message from the core, it is reset to a white node and a non-determinant node. The reduction method, which is executed by each node in the multicast tree, is described in <ref type="figure">Figure 6</ref>. In the reduction method, each node evaluates its profit value, elects its candidate, and decides whether it is a determinant node at any time. <ref type="figure">Figure 6</ref>. The reduction method.</p><formula xml:id="formula_9">(%% !$!!#$ v '''(( ($$ +(#$##$#(&amp;"##(( #$#(!!,, (%%%%%% #$ v ''(&amp;"##((#$(##(('''((($$! #$ (%% !' #$ v '' +( #$ # '' (&amp;"##(( #$ ) (v N u T ∈ (# (%%%%%%% #$ v '''((($$! #$ (%%%%%%% T E v u ∉ ) , ( (## ) , ( v u ''#'&amp;(#($$ T E # ) , ( w v 񮽙񮽙 u w ≠ '' &amp;"$* &amp;$"" T E +&amp; ) , ( w v ''##(%($(")!('(((&amp;(+###$'' v 񮽙 # u 񮽙񮽙 (%%%%%% #$ v &amp;*''!)'"''&amp;$""$&amp;(##$($$(%%% (%%%%%% !'$($$(%%%%%%</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>In</head><p>Step 1, the current node v is reset to a white node and a non-determinant node. When node v joins the multicast tree or receives the flush message from the core, it executes Step 1. Then, if node v is a determinant node, it is set to a black one and the determinant message is sent to each node in ( ) T W N v as described in Step 2.1.</p><p>And, if node v is a white node and receives a determinant message from node</p><formula xml:id="formula_10">) (v N u T ∈</formula><p>, then it is set to a black node as described in Step 2.2.1. Then, if ( , )</p><formula xml:id="formula_11">T u v E ∉ , edge ( , )</formula><p>u v is inserted into the edge set of the multicast tree and edge <ref type="bibr">( , )</ref> v w is removed from the edge set of the multicast tree as described in <ref type="bibr">Step</ref>   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Simulation</head><p>Here, cost comparison among the multicast tree constructed by the reduction method and other well-known core-based group-shared multicast trees is made by computer simulation in the static network, where the cost is evaluated by the number of non-leaves. In the simulation, ad hoc network graph model <ref type="bibr" target="#b5">[6]</ref> is used to generate the network, and the group members are randomly selected from all nodes in the network.</p><p>In the static network, graph-center tree (GCT), multicast-center tree (MCT), and random-member tree (RMT) <ref type="bibr" target="#b1">[2]</ref> are three of the most famous core-based multicast trees, which are the shortest path trees rooted at the center of graph, the center of multicast group, and any group member, respectively. To evaluate the performance of the proposed heuristic, we construct the multicast tree, called reduced random-member tree (RRMT) hereafter, by applying the reduction method for random-member tree, and evaluate the ratios of the cost of GCT to the cost of RRMT, the cost of MCT to the cost of RRMT, and the cost of RMT to the cost of RRMT as shown in <ref type="figure" target="#fig_4">Figure 7</ref>. In <ref type="figure" target="#fig_4">Figure 7</ref>(a) and <ref type="figure" target="#fig_4">Figure 7</ref>(b), there are 50 and 150 nodes in the networks, respectively. For each experiment data, we have experimented with 50 various topologies or multicast groups. It is observed that GCT, MCT, and RMT cost more than RRMT in all cases since the ratio of the cost of each of them to RRMT is between 1.09 and 1.90. The ratio of the cost of each of them to RRMT is between 1.25 and 1.84 in 90% cases. In addition, we find that the cost of RRMT and the cost of each of GCT, MCT, and RMT differ in an increasing order of the number of group members. When the number of group members increases, we think the node in the multicast tree has much chance of increasing the number of the neighbors, and thus there is much probability that the reduction method transfers more non-leaves into leaves.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Conclusion</head><p>In this paper, we approach the problem of dynamically constructing a core-based group-shared multicast tree in MANETs. We attempt to reduce the bandwidth cost of multicasting a packet via the tree by minimizing the number of non-leaves of the multicast tree. However, it is proven that the minimum non-leaf multicast tree problem cannot be solved by a polynomial time approximation scheme unless P NP = . Thus, a distributed heuristic which dynamically constructs and adjusts the multicast tree is proposed here. Instead of finding a new multicast tree, we transfer several non-leaves into leaves in an existed multicast tree by a reduction method.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. A subgraph of an undirected graph, where</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .Figure 4 .Figure 5 .</head><label>245</label><figDesc>Figure 2. The topology change of the multicast tree when a reduction is applied to node A . (a) and (b) show two multicast trees 1 T and 2 T before and after a reduction is applied to node A , respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>(a), the cost of the multicast tree 1 T is 6. When node A executes a reduction, it connects to nodes C and D and edges ( , ) C D and ( , ) D H are deleted as shown in Figure 3(b). The cost of the multicast tree 2 T in Figure 3(b) is 4. Later, when node B executes a reduction in 2 T , it connects to node C and edge ( , ) A C is deleted as shown in Figure 3(c). The cost of the multicast tree 3 T in Figure 3(c) is still 4. It is clear that node B has no need for executing a reduction in 2</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 7 .</head><label>7</label><figDesc>Figure 7. The ratios of the cost of GCT to the cost of RRMT, the cost of MCT to the cost of RRMT, and the cost of RMT to the cost of RRMT in static network. The numbers of the nodes in the networks are 50 and 150 in (a) and (b), respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>is a member of multicast group M . Then, for multicast group M , the multicast tree ( , ) T T T V E is a subgraph of G which is a tree and contains all nodes M v V ∈ . In this paper, all nodes in T are classified into white nodes and black nodes. And, T W denotes the set of white nodes in T , and T B denotes the set of black nodes in T .</head><label></label><figDesc></figDesc><table>where node 

G 

v V 
∈ 
if and only if host v is 
in the MANET, and ( , ) 

G 

u v E 
∈ 
if and only if hosts u 

and v are neighbors which can communicate with each 
other. Let M be a multicast group, which has arbitrary 
number of hosts in the MANET, and M 

G 

V 
V 
⊆ 
be a set of 

nodes such that 

M 

v V 
∈ 
if and only if host v Besides, 
( ) 

T 

W 

N v denotes the set of all white nodes u 

such that ( , ) 

G 

v u E 
∈ , and 
( ) 

T 

B 

N v denotes the set of all 

black nodes u such that ( , ) 

T 

v u E 
∈ . The definitions of 

( ) 

T 

W 

N v and 
( ) 

T 

B 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>exists whenever the number of nodes in 1 T is greater than or equal to three. Let 2 T cost be the cost of 2 T .</head><label></label><figDesc></figDesc><table>1 

1 ( , ) 

T 
T 

T V E 
has a 

leaf core 

1 

T 

core and the minimum cost 

1 

T 

cost . Now, 

consider another multicast tree 

2 
2 

2 ( , ) 

T 
T 

T V E 
which has a 

non-leaf core 

2 

T 

core , the same node set as 1 
T (i.e. 

2 
1 

T 
T 

V 
V 
= ), the same edge set as 1 
T (i.e. 

2 
1 

T 
T 

E 
E 
= ), and 

the edge 

1 
2 

( 
, 
) 

T 
T 

core core 
(i.e. 

1 
2 
2 

( 
, 
) 

T 
T 
T 

core core 
E 
∈ 
). It is 

clear that 2 
T It is also clear that 
k 
cost 
cost 

T 
T 

− 
= 

1 
2 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>a). When a reduction is applied to node A , node A connects to nodes B , C , D , and E , but edges ( , ) B C , ( , ) C D , ( , ) D E , and ( , ) E F are deleted. It is clear that the cost is 4 in</head><label></label><figDesc></figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head>is 5. It implies that in 1 T a reduction on node A is a better choice than on node B . It then goes to introduce the profit value of node v , profit v. , to indicate how much cost a reduction on node v can be reduced possibly. When node v executes a reduction, it is supposed to be a non-leaf in the multicast tree. So, it has to connect to at least two neighbors in T V . It implies a reduction on node v reduces no cost when node v is unable to connect to more than two neighbors in T V . As described before, when node v executes a reduction, it</head><label></label><figDesc></figDesc><table>the cost of 2 
T is 4, and 
the cost of 3 
T cannot connect to the black neighbor 
( ) 

T 

B 

u N v 
∉ 
, and 

may connect to any node 
( ) 
( ) 

T 
T 

W 
B 

u N v N v 
∈ 
U 
. Then, 

node v reduces no cost and profit 
v. 
is set to 0 if 

2 
| 
) 
( 
| 
| 
) 
( 
| 
≤ 
+ 
v 
N 
v 
N 

T 
T 

B 
W 

. For example, consider node 

A in Figure 5(a). Node A has one black neighbor 
( ) 

T 

B 

B N A 
∈ 
and one white neighbor 
( ) 

T 

W 

D N A 
∈ 
. When 

node A executes a reduction, it connects to node D . It 
is clear that at most one non-leaf, say E , may become a 
leaf due to the insertion of edge ( , ) 
A D and the deletion 
of edge ( , ) 
</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="false"><head>b). Node A has one black neighbor ( ) T B B N A ∈ and three white neighbors D , F and G in ( ) T W</head><label></label><figDesc></figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="false"><head>c). Node A has two black neighbors B and J in ( ) T B N A and three white neighbors D , F and G in ( ) T W N A , but edge</head><label></label><figDesc></figDesc><table>T 

E 
F 
A 
∈ 
) 
, 
( 
</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6" validated="false"><head>otherwise. 񮽙 Now, we describe how to design a distributed algorithm that is used in every node in the multicast tree. It is reasonable that node v executesand B execute reductions simultaneously, both nodes A and B connect to node C , constituting a cycle ( C , A , G , F , B , C ). This can be solved by an election model. In the election model, every node v in the multicast tree can elect only one node, called the candidate of node v hereafternode A is the candidate of nodes A , C , D , G , and H each. So, node A is a determinant node and executes a reduction., B , C , and D ,, the candidates of nodes A , B , C , and D may be B , C , D , and A , respectively. Then, alet the ids of nodes A , B , C , and D are 1, 2, 3, and 4, respectively. Then, node A is the candidate of nodes A , B , C , and D each. So, node A is the determinant node to execute a reduction. In addition, a determinant node v is supposed to connect toand . w id denote the ids of nodes u and w , respectively. 񮽙 Definition 4. A non-determinant node v becomes</head><label></label><figDesc>circular wait forms and nothing will be done. It is clear that the cost can be reduced to 1 if exactly one of these nodes executes a reduction. This can be achieved by electing the candidate with lowest id among</figDesc><table>a reduction if 
. 
. 
v profit u profit 
≥ 
for all neighbors 
) 
(v 
N 
u 

T 

∈ 
, where 

) 
(v 
N T 
denotes the set of all tree nodes u such that 

( , ) 

G 

v u E 
∈ 
and is formally defined in Definition 3. 

However, when several nodes simultaneously execute 
reductions, a cycle may form. Take Figure 4(a), for 
example. When nodes A , that has 
the largest profit value among all nodes 
} 
{ 
) 
( 
v 
v 
N 
u 

T 

U 
∈ 
. 
Node v can execute a reduction, called determinant node 
hereafter, if . 
0 
v profit &gt; and it is the candidate of each 
node 
( ) { } 

T 

W 

u N v 
v 
∈ 
U 
. In Figure 4(a), It is noted that node B is not a determinant node at this 
time since it is not elected by node 
( ) 

T 

W 

C N B 
∈ 
. 

However, the election model may reach a deadlock. For 
example, consider a multicast tree which has four nodes 
A and three edges ( , ) 
A B , ( , ) 
B C , and 
( , ) 
C D in the 4-clique network. It is clear that the cost of 
the multicast tree is 2. Since 
profit 
C 
profit 
B 
profit 
A 
. 
. 
. 
= 
= 

1 
. 
= 
= profit 
D 
the nodes 
} 
{ 
) 
( 
v 
v 
N 
u 

T 

U 
∈ 
with the largest profit value. In this 
example, a node in 
( ) 

T 

W 

N v at any time to reduce the cost of the multicast 
tree. Once a node becomes a determinant node, it is 
supposed to be a determinant node permanently except 
that it receives the flush message from the core as 
described later. The definitions of a candidate node and a 
determinant node are summarized in the following. 
Definition 3. Node 
} 
{ 
) 
( 
v 
v 
N 
u 

T 

U 
∈ 
is said to be a 
candidate of node v if ( 
profit 
w 
profit 
u 
. 
. 
&gt; 
) or 
( . 
. 
u profit w profit 
= 
and 
id 
w 
id 
u 
. 
. &lt; 
) for all 

} 
{ 
} 
{ 
) 
( 
u 
v 
v 
N 
w 

T 

− 
∈ 
U 
, where 
) 
, 
( 
, 
| 
{ 
) 
( 
v 
u 
V 
u 
u 
v 
N 

T 
T 

∈ 
= } 

G 

E 
∈ 
and . 
u id a 
determinant node if and only if 
0 
. 
&gt; 
profit 
v 
and node v 
is the candidate of each node 
</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7" validated="false"><head>is an edge in the path of the multicast tree between nodes v and u before node v connects to node u .node v itself is not elected. Then, a non-determinant node v becomes a determinant nodeinserted into the edge set and all edges y removed from the edge set when the reduction method is applied to T .and v , say u , is a determinant node and the other, say v , isin the path between nodes u and v in T G . Clearly, the edge incident with node v in the path between nodes u and v in T is not in T G because it is removed by node v when edge ( , ) v u is inserted into T G E . So, we have ( , )is inserted into T G E when the reduction method is applied to T . It implies one of nodes w and v is a determinant node. But, it is impossible since node v is a white node and elects node u . The impossibility of the conclusion forces us to accept that there is no cycle in T G . 񮽙</head><label></label><figDesc></figDesc><table>2.2.2, where 
( , ) 
v w It 
is noted that . 
v profit is assumed to be evaluated at any 
time. And, node v gets . 
u profit from all nodes 
) 
(v 
N 
u 

T 

∈ 
and elects a candidate from these nodes and 
itself. The candidate message is then sent to the elected 
candidate if if 
and only if 
0 
. 
&gt; 
profit 
v 
, and it is elected by itself and 
receives the candidate message from each node 
( ) 

T 

W 

u N v 
∈ 
. The execution of the reduction method goes 

to Step 2.1 if node v has not received the flush message 
from the core, and goes to Step 1 otherwise. 
The following two theorems characterize the properties 
of the reduction method. As described before, nodes 1 
A , 

2 

A , …, and n 
A in the multicast tree are in a circular wait 
if n 
A elects 1 
A and i 
A elects 

1 
i 

A + for 1 
1 
i n 
≤ ≤ − . 

Clearly, if nodes 1 
A , 2 
A , …, and n 
A are in a circular 
wait, none of them can execute a reduction. Theorem 3 
tells us there is no circular wait in the reduction method. 
Besides, let the graph 
( , 
) 

T 
T 

T 
G 
G 

G V E 
induced by the 

multicast tree ( , ) 

T 
T 

T V E be the graph with vertices in T 
V 
and edges in 
{ } { } 

T 

E 
x 
y 
− 
U 
for all edges x Theorem 
4 shows that the graph induced by a multicast tree is still a 
multicast tree. 
Theorem 3. In the reduction method, no nodes in the 
multicast tree are in circular wait. 
Proof. Assume that nodes 1 
A , 2 
A , K, and n 
A are in 
the multicast tree and in a circular wait. By Definition 3, 
we 
have 
≤ 
≤ 
≤ 
≤ 
... 
. 
. 
. 

2 
1 

profit 
A 
profit 
A 
profit 
A n 

profit 
A n . 
. It implies that 
= 
= 
= 
... 
. 
. 

2 
1 

profit 
A 
profit 
A 

profit 
A n . 
. Thus, 
id 
A 
id 
A 
id 
A 
id 
A 

n 
n 

. 
... 
. 
. 
. 

2 
1 

&lt; 
&lt; 
&lt; 
&lt; 
by 

Definition 3. This contradiction creates a logical impasse 
that can be removed only by throwing out the assumption 
that nodes 1 
A , 2 
A , ..., and n 
A are in a circular wait. 񮽙 

Theorem 4. The graph 
( , 
) 

T 
T 

T 
G 
G 

G V E 
induced by a 

multicast tree ( , ) 

T 
T 

T V E is still a multicast tree. 
Proof. It is clear that 

T 

T 
G 

V 
V 
= 
and | 
| | | 

T 

T 
G 

E 
E 
= 
. It 

suffices to show T 
G has no cycle. Assume that there is a 
cycle in T 
G . Then, there is an edge ( , ) 

T 

T 
G 

v u E 
E 
∈ 
− 
in 

the cycle. It is clear that one of nodes u a white 
node in 
( ) 

T 

W 

N u . Since edge ( , ) 
v u is in a cycle in T 
G , 

there is an edge ( , ) 
v w T 

v w E 
∉ . That is, edge 

( , ) 
v w </table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgement</head><p>This work is supported by the National Science Council of the Republic of China under Grant #NSC93-2213-E-007-103 and #NSC93-2213-E-007-071.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">AMRoute: Adhoc Multicast Routing Protocol</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Bommaiah</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mcauley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Talpade</surname></persName>
		</author>
		<idno>TR 99-1</idno>
		<imprint>
			<date type="published" when="1999" />
			<publisher>CSHCN</publisher>
		</imprint>
	</monogr>
<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">On the Performance and Feasibility of Multicast Core Selection Heuristics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Fleury</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of International Conference on Computer Communications and Networks</title>
		<meeting>of International Conference on Computer Communications and Networks</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="296" to="303" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A Short Note on the Approximability of the Maximum Leaves Spanning Tree Problem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Galbiati</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Maffioli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Morzenti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Processing Letters</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="page" from="45" to="49" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The Core-Assisted Mesh Protocol</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Garcia-Luna-Aceves</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">L</forename><surname>Madruga</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on Selected Areas in Communications</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1380" to="1394" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Computers and Intractability: A Guide to the Theory of NP-completeness</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">R</forename><surname>Garey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Jonson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979" />
			<publisher>Freeman Press</publisher>
			<pubPlace>San Francisco</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Adaptive Core Selection and Migration Method for Multicast Routing in Mobile Ad Hoc Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K S</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">K</forename><surname>Srimani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Parallel and Distributed Systems</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="27" to="38" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A Lightweight Adaptive Multicast Algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Ji</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Corson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Global Telecommunications Conference</title>
		<meeting>of IEEE Global Telecommunications Conference</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="1036" to="1042" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Differential Destination Multicast -A MANET Multicast Routing Protocol for Small Groups</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Ji</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Corson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Annual Joint Conference of the IEEE Computer and Communications Societies</title>
		<meeting>of Annual Joint Conference of the IEEE Computer and Communications Societies</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="1192" to="1202" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A Review of Current Routing Protocols for Ad Hoc Mobile Wireless Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">M</forename><surname>Royer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">K</forename><surname>Toh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Personal Communications Magazine</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="46" to="55" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">AMRIS: A Multicast Protocol for Ad Hoc Wireless Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">W</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">C</forename><surname>Tay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the IEEE Military Communications Conference</title>
		<meeting>of the IEEE Military Communications Conference</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="25" to="29" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
