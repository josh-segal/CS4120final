<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:51+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Optimal Scalable Video Multiplexing in Mobile Broadcast Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Farid</forename><forename type="middle">Molazem</forename><surname>Tabrizi</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computing Science</orgName>
								<orgName type="institution">Simon Fraser University</orgName>
								<address>
									<settlement>Cheng-Hsin</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohamed</forename><surname>Hefeeda</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">School of Computing Science</orgName>
								<orgName type="institution">Hsu Deutsche Telekom Inc. R&amp;D Laboratories</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joseph</forename><forename type="middle">G</forename><surname>Peters</surname></persName>
							<affiliation key="aff2">
								<orgName type="department">School of Computing Science</orgName>
								<orgName type="institution" key="instit1">Simon Fraser University</orgName>
								<orgName type="institution" key="instit2">Simon Fraser University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Optimal Scalable Video Multiplexing in Mobile Broadcast Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>C21 [Computer-Communication Networks]: Network Archi- tecture and Design-Wireless Communication General Terms Design Keywords Mobile video broadcasting</term>
					<term>scalable video coding</term>
					<term>transmission scheduling</term>
					<term>wireless video streaming</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We study the problem of broadcasting multiple variable bit rate scalable video streams from a base station to a large number of mobile receivers. Our objective is to maximize bandwidth utilization , energy saving and perceived quality of the transmitted videos. In practice, the aggregate bitrate of the video streams can be greater than the available bandwidth and then the receivers may experience playout glitches. We propose an algorithm to take advantage of opportunities provided by scalable video coding to improve performance when the bandwidth is limited. To achieve this, we provide a model for prioritizing video packets coded in medium grain scal-ability and a decision mechanism to drop quality layers of video frames when the bandwidth is limited. The result is increased bandwidth utilization and quality of the transmitted videos. Our experiments, performed on a real mobile TV testbed, show that our algorithm significantly out-performs current methods in terms of bandwidth utilization and also achieves near optimal energy saving and quality of the transmitted video streams.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Recent advances in mobile handheld devices have resulted in considerable interest in mobile video streaming in both the research Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. community and commercial markets <ref type="bibr" target="#b7">[7]</ref>. However, digital video streaming is still facing many challenges in terms of quality of service, energy consumption, and bandwidth limitations. The wireless medium is sensitive to errors, congestion, limited bandwidth, latency, packet loss, and jitter which reduce the expected quality of service <ref type="bibr" target="#b13">[13]</ref>. Also, the limited battery life of mobile receivers should be considered when designing a video streaming method. Another very important consideration is the expense of wireless spectrum. For example, AT&amp;T recently sold a 2.5 GHz spectrum to Clearwire Corporation for $300 million <ref type="bibr" target="#b2">[3]</ref>.</p><p>In this paper, we propose an algorithm to broadcast multiple variable bit rate (VBR) scalable video streams from a base station to a large number of mobile receivers. Our algorithm can be used in broadcasting networks such as DVB-H (Digital Video Broadcast-Handheld) <ref type="bibr" target="#b6">[6]</ref>, and ATSC M/H (Advanced Television Systems Committee-Mobile/Handheld) <ref type="bibr" target="#b1">[2]</ref>. The primary goal of our algorithm is to maximize bandwidth utilization. The secondary optimization objective are to maximize energy saving and the perceived quality of the transmitted video.</p><p>We compare the results of our algorithm to the SMS algorithm proposed in <ref type="bibr" target="#b8">[8]</ref> which uses burst scheduling of VBR streams to provide optimal bandwidth utilization and near optimal energy saving when the available wireless network bandwidth is not a limiting factor. In particular, SMS assumes that the aggregate bitrate of the video streams does not exceed the available bandwidth. Furthermore, SMS has no mechanism to consider the quality of the frames that it drops. Controlling the aggregate bitrate of video streams could be possible to some extent by using joint video coders <ref type="bibr" target="#b15">[15]</ref> which consist of a joint rate allocator, decoders, and VBR coders to encode video streams and dynamically allocate bandwidth among them so that the network is not overloaded. But in practice, many broadcast networks are not equipped with these components due to the added expense and complexity. In these cases, the aggregate bitrate of the video streams could instantaneously exceed the network bandwidth. If this happens, then the SMS algorithm could unexpectedly drop video data resulting in buffer underflow and playout glitches.</p><p>The new multiplexing algorithm that we present in this paper leverages scalable video coding (SVC) to extend the SMS algorithm in order to handle bandwidth limitations. Our algorithm provides significantly better bandwidth utilization than SMS when the aggregate bitrate of the video streams exceeds the available bandwidth while providing near optimal video stream quality and energy saving. To achieve these performance improvements, we have developed a model of the quality of video streams and defined a weighting mechanism for video data. When the aggregate bitrate of full-quality video streams exceeds the available bandwidth, our algorithm drops video packets based on this weighting mechanism and achieves R-D (rate-distortion) optimized video broadcasting. Our results show that the average quality of the resulting video streams is close to the quality that the streams would have when there is no packet loss, and about 1.34 dB higher than the SMS algorithm. We also show that our multiplexing algorithm is quite energy efficient. In fact, its performance is very close to the maximum possible energy saving; on average 90% energy saving is achieved.</p><p>The rest of this paper is organized as follows. We discuss the recent SVC standard in Sec. 2. In Sec. 3, we survey related work in the literature. We describe the multiplexing problem that we are studying in Sec. 4, and we present our new algorithm in Sec. 5. In Sec. 6, we extensively evaluate our solution using experiments on a real mobile TV testbed. Sec. 7 concludes this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">SCALABLE VIDEO CODING</head><p>We propose to leverage the features of the Medium Grain Scalability (MGS) mode of the Scalable Video Coding (SVC) extension of H.264/AVC <ref type="bibr" target="#b17">[17]</ref> in mobile broadcast networks. SVC is an interesting coding method for modern video streaming systems which are mostly based on RTP/IP and have receivers with different connection qualities, processing powers, and quality of service requirements. Three scalability modes in SVC are temporal, spatial, and quality scalability. We will concentrate on quality scalability in which a video stream with lower quality layers than the original video will have the same spatial-temporal resolution, but lower fidelity. There are three modes defined for quality layers in SVC: Fine Grain Scalability (FGS), Coarse Grain Scalability (CGS), and Medium Grain Scalability (MGS) <ref type="bibr" target="#b17">[17]</ref>. In FGS, motion compensation is performed on the lowest quality layer (base layer), so the encoder and the decoder always use consistent reference pictures and the loss/truncation of enhancement layer packets does not lead to error drifting in motion compensation for subsequent pictures. The main problem with FGS is that coding is very inefficient due to the inferior quality of base layer reconstruction. In CGS, motion compensation is performed separately for each layer. This addresses the coding complexity problem of FGS, but any losses in the quality enhancement layer will accumulate over time and cause serious quality degradation. To address this problem, switching between quality layers in CGS is only possible at I-frames. The third mode, MGS, uses the concept of key pictures <ref type="bibr" target="#b14">[14]</ref> and employs a flag for each picture indicating whether the base layer or the enhancement layer reconstruction of the reference picture is used for motion compensation. Hence, in MGS, motion prediction can still be performed in the enhancement layer, but the encoder's and decoder's motion compensation loops are guaranteed to be synchronized at the periodic key pictures. This provides a trade off between the drifting issue and coding efficiency in MGS and provides the ability to switch between quality layers at any frame. In this paper, we assume that video streams are coded with MGS quality layers. Our algorithm takes advantage of the flexibility of MGS coding to maximize bandwidth utilization while providing near optimal video stream quality and energy saving.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">RELATED WORK</head><p>A number of methods have been proposed to improve quality, energy saving, and frame loss in video streams over mobile broadcast networks. Some of these methods use smoothing algorithms to reduce the burstiness of VBR streams, which results in less frame loss in cases of bandwidth limitations. An online smoothing algorithm is provided in <ref type="bibr" target="#b18">[18]</ref> and it is shown that delaying a video transmission by a constant amount of time can reduce the bandwidth required. Camarda et al. <ref type="bibr" target="#b3">[4]</ref> design a smoothing algorithm for mobile TV, which takes into account the receiver buffer level, the available bandwidth, and the burst size. These studies <ref type="bibr" target="#b18">[18,</ref><ref type="bibr" target="#b3">4]</ref> do not consider multiple video streams or how the available bandwidth should be distributed among them to increase bandwidth utilization, energy saving, and average video quality. Thus, they do not provide an efficient solution to our problem.</p><p>Some authors have considered the characteristics of SVC streams to improve the quality of video streams. In <ref type="bibr" target="#b16">[16]</ref>, the potential benefits of using SVC in mobile networks are described and several uses in mobile broadcast, multicast, and unicast networks that could benefit from SVC are discussed. Strategies for dynamic sharing of radio links in a multi-user streaming network is proposed in <ref type="bibr" target="#b10">[10]</ref>. The authors combine SVC with radio link buffer management strategies and try to maximize the video quality of the transmitted video streams by dropping the packets in a way that does not violate temporal scalability. However, they do not consider bandwidth utilization or energy saving, and the buffers of the receivers are unlimited.</p><p>The multiplexing techniques being used in practical mobile broadcast networks are not very efficient. For example, the Nokia Mobile Broadcast Solution (MBS) <ref type="bibr" target="#b11">[11]</ref> requires the network operators to choose a time interval ΔT and a burst size b s and bitrate rs for each video stream s <ref type="bibr" target="#b0">[1]</ref>. The value of ΔT is set to B/r S where B is the buffer size of the receivers and r S is the maximum of the bitrates assigned to the streams. During each time interval of length ΔT , each video stream is assigned bandwidth proportional to its bitrate. The network operator heuristically chooses r s for each video stream. This can be a time-consuming process because higher values of r s could result in buffer overflow and lower values of r s could result in buffer underflow at the receivers. In this paper, we will compare our solution with the MBS method. Our results show that our algorithm significantly outperforms this method.</p><p>Our previous work addresses the multiplexing problem in mobile broadcast networks for constant bit rate (CBR) streams <ref type="bibr" target="#b9">[9]</ref>, and partially solves the same problem for VBR streams <ref type="bibr" target="#b8">[8]</ref> under the assumption that the aggregate bitrate of video streams never exceeds the available bandwidth. In contrast, the present work eliminates the bitrate assumption and studies a more realistic scenario of broadcasting VBR streams.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">PROBLEM STATEMENT</head><p>We study the problem of broadcasting S scalable video streams from a base station to a large number of mobile receivers over a wireless medium with bandwidth R kbps. Each video stream s, 1 ≤ s ≤ S, has a base layer, Q s MGS layers, I frames, and is coded at F frames-per-second. We use l i,s,k to denote the size of layer k of frame i of video stream s. Layer k = 0 is the base layer. We define on-time frames to be frames that are received at the decoders before their decoding deadlines. Our bandwidth utilization metric, called goodput and denoted σ, is the fraction of data transmitted by the base station over the wireless medium that is ontime. We define the energy saving of video stream s, denoted γ s, to be the fraction of the total transmission time that the receivers can put their wireless interfaces to sleep. Our energy saving metric is the average energy saving of all streams: γ = ( 񮽙 S s=1 γs)/S. We use φ to denote the average quality of all transmitted frames of all video streams. Different metrics can be used to measure the quality of a frame. We will use Peak Signal-to-Noise Ratio (PSNR) as the quality metric in our experiments, but Structural Similarity (SSIM), Video Quality Metric (VQM), or any other quality metric can be substituted in our formulation. Now, based on these definitions, we can state the problem that we study in this paper: given S scalable video streams, find a burst schedule that maximizes goodput σ, with high energy saving γ and high quality φ.</p><p>We formulate the problem as follows. Let n s be the number of scheduled bursts for video stream s where 1 ≤ s ≤ S and let f s k sec and b s k kb (1 ≤ k ≤ ns) be the start time and the burst size of burst k in video stream s. To receive a burst, the receiver circuits must be wakened up a short time before the burst is received to lock onto the frequency and synchronize to the symbols. This overhead time, T 0, can vary from 50 to 250 msec <ref type="bibr" target="#b4">[5]</ref>. Thus, for each burst k, the receiving circuits should be active in the period</p><formula xml:id="formula_0">[f s k − T0, f s k + b s k /R).</formula><p>Finally, we let B denote the receiver buffer size and define c s k , the buffer level of mobile receivers before receiving burst k of video stream s as follows:</p><formula xml:id="formula_1">c s k = max(0, k−1 񮽙 j=1 b s j − v 񮽙 i=1 u s i 񮽙 q=0 li,s,q).<label>(1)</label></formula><p>In Eq. <ref type="formula" target="#formula_1">(1)</ref>, u s i is the number of MGS layers in frame i of video stream s and v is the maximum positive integer such that v/F ≤ f s k . Thus c s k is the difference between the amount of data that has been received and the amount that the receiver has consumed. We use g s k and h s k to denote the first and last frames, respectively, of burst k of video stream s. We define λ i,s,q to be the quality improvement resulting from adding quality layer q to frame i of stream s.</p><p>Using these definitions, we formally describe the multiplexing problem with Eq. <ref type="formula">(2)</ref>  Pri:</p><formula xml:id="formula_2">max σ = 񮽙 S s=1 񮽙 n s j=1 b s j /R I/F ,<label>(2a)</label></formula><p>Sec:</p><formula xml:id="formula_3">max γ = 1 − 񮽙 S s=1 񮽙 n s k=1 (T 0 +b s k /R) I/F /S,<label>(2b)</label></formula><p>Sec:</p><formula xml:id="formula_4">max φ = 񮽙 S s=1 񮽙 n s k=1 񮽙 h s k i=g s k 񮽙 u s i q=1 λ i,s,q 񮽙 n s k=1 b s k ,<label>(2c)</label></formula><formula xml:id="formula_5">s.t. [f s k , f s k + b s k R ) ∩ [f s k , f s k + b s k R ) = ∅,<label>(2d)</label></formula><formula xml:id="formula_6">c s k + b s k − 񮽙 f s k ≤j/F &lt;f s k +b s k /R 񮽙 u s i q=0 lj,s,q ≤ B, (2e) c s k ≥ 0,<label>(2f)</label></formula><formula xml:id="formula_7">b s k ≥ 񮽙 h k s i=g k s 񮽙 u s i q=0 li,s,q,<label>(2g)</label></formula><formula xml:id="formula_8">∀ 1 ≤ s 񮽙 = s ≤ S, 1 ≤ k ≤ ns, 1 ≤ k ≤ ns.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">PROBLEM SOLUTION</head><p>In order to solve this problem, we divide the receiver buffer of size B into two buffers of the size B/2. We also divide the sending time of each video stream s into p s disjoint time windows. These time windows for different video streams are completely independent of each other. During each time window p of video stream s, at each receiver of stream s, one buffer is being filled while the other one is being drained. In other words, the mobile receivers use one buffer for receiving data and the other one for decoding data and the uses of the buffers are exchanged when the next time window p + 1 starts. It is important to note that the data received by the mobile receivers during window p − 1 is always rendered during window p. Hence the time length of window p depends on the number of frames received in window p − 1. For each window p, we use m s p to denote the last frame that can be included in window p of stream s without causing buffer overflow for the receiver. We let y s p denote the total amount of data to be received in window p for stream s, x s p to denote the start time of window p and z s p to denote the end time of window p. These quantities are calculated using the following equations:</p><formula xml:id="formula_9">⎧ ⎪ ⎪ ⎨ ⎪ ⎪ ⎩ m s p = 0 p = 0, 񮽙m s p j=m s p−1 +1 񮽙 Qs q=0 lj,s,q ≤ B 2 &lt; 񮽙m s p +1 j=m s p−1 +1 񮽙 Qs q=0 lj,s,q ∀ 1 ≤ p ≤ ps.<label>(3)</label></formula><formula xml:id="formula_10">y s p = 񮽙m s p j=m s p−1 +1 񮽙 Qs q=0 lj,s,q.<label>(4)</label></formula><formula xml:id="formula_11">x s p = 񮽙 0 p = 1, (m s p−2 + 1)/F 2 ≤ p ≤ ps.<label>(5)</label></formula><formula xml:id="formula_12">z s p = 񮽙 񮽙 S s=1 y s 1 /R p = 1, m s p−1 /F 2 ≤ p ≤ ps.<label>(6)</label></formula><p>We schedule the bursts for each video stream at specific points called decision points. A decision point can be a time when a new window is started (x s p ), when a window reaches the end of its decoding time (z s p ), or when a window has been allocated its required aggregate data amount (y s p   The usefulness w s i,i 񮽙 (q) can be seen as the slope of the R-D curve, which enables us to drop MGS layers in the R-D optimized way. <ref type="figure" target="#fig_3">Fig. 2</ref> gives our new multiplexing algorithm which we call Optimal Scalable Video Multiplexor (OSVM). The algorithm consists of two main steps. First, in lines 1-3 and 10-11, we try to transmit bursts for each video stream in time windows of dynamic lengths based on Eqs. <ref type="formula" target="#formula_11">(5)</ref> and <ref type="formula" target="#formula_12">(6)</ref>. Video bursts of the same size may represent totally different playout durations as a result of the bitrate variability of video streams and this dynamic window allocation helps us to adapt to the bitrate variations in real time. But as we discussed in Sec. 1 the aggregate bitrate of video streams may exceed the bandwidth limit at some points. In this case, we might not be able to meet the data requirements for a window, which is referred to as a late window in line 4. In the second step, between lines 4 and 9, we consider dropping some MGS layers from the video streams in the time interval of the late window to free some bandwidth in that time interval. This gives us the opportunity to assign more data to the late window in order to make it complete, i.e., transmitting at least the base layer of the frames for basic video quality. This process is shown in <ref type="figure" target="#fig_2">Fig. 1</ref>. In this illustrative example, a window of stream s i is late and as a result, MGS layers from other bursts for this window and all the bursts which are scheduled within the late window are inspected, and parts of the bursts are dropped in an R-D optimized fashion using Eq. (7). This frees up some broadcast bandwidth to accommodate bursts from the late window.</p><formula xml:id="formula_13">w s i,i 񮽙 (q) = ⎧ ⎨ ⎩ ∞ q = 0, ( 񮽙 i 񮽙 j=i λ j,s,q )/(i 񮽙 −i+1) 񮽙 i 񮽙 j=i l j,s,q q &gt; 0.<label>(7)</label></formula><p>Complexity Analysis. In line 2 of the pseudocode, at each decision point, we check the windows of S video streams and schedule a burst for each stream. Let Q be the maximum Q s among all video streams. If the total number of windows for all video streams is P , then the number of decision points is P + S. Hence, the process of scheduling bursts for the video streams takes time O(P S + S 2 ). Constructing the windows for S video streams in lines 1 and 10 takes time O( 񮽙 S s=1 I). Since the buffer size B for mobile devices and, as a result, the number of frames for each window are bounded by constants, constructing the windows takes O(P S) time. Finally, for each late window, calculating</p><formula xml:id="formula_14">w s i,i 񮽙 (q) for all 1 ≤ i ≤ i 񮽙 ≤ I, 1 ≤ s ≤ S, 1 ≤ q ≤ Q takes time O(ISQ),</formula><p>and so the total complexity for all windows is O(P ISQ). Since the number of MGS layers and the number of frames for each window are both bounded by constants, we can rewrite O(P ISQ) as O(P S). Hence, the OSVM algorithm has a polynomial time complexity of O(P S + S 2 ) + O(P S) + O(P ISQ) = O(P S + S 2 ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">EVALUATION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Setup</head><p>We have evaluated our algorithm using a mobile TV testbed that we developed in our lab. The base station is a Linux box with an RF signal modulator. This modulator implements the physical layer of the mobile broadcast protocol and is connected to an indoor antenna to transmit DVB-H compliant signals. We have de-</p><note type="other">1. generate the first window &lt;x s 1 ,y s 1 ,z s 1 &gt; for all s 2. foreach decision point of window p for stream s { 3.</note><p>schedule a burst between times t and t n for s, where p has the smallest z s p among all windows p 񮽙 with x s p 񮽙 ≤ t &lt; z s p 񮽙 and tn is the next decision point 4.</p><p>if window p of s is late 5.</p><p>foreach stream s 񮽙 with bursts between x s p and z s p 6. foreach layer q scheduled for s 񮽙</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>7.</head><p>compute</p><formula xml:id="formula_15">w s 񮽙 ,q = 񮽙 w s 񮽙 a s p (s 񮽙 ),a s p (s 񮽙 )+m s p (q), s 񮽙 = s w s 񮽙 a s p (s 񮽙 ),d s p (s 񮽙 ) (q), o.w. 8.</formula><p>sort layers of all streams in ascending order of ws,q 9.</p><p>drop layers sequentially until p is complete 10.</p><p>generate a new window for s 11. } signed and implemented a software package for the base station. We have implemented the OSVM algorithm, and we have also implemented the MBS (Nokia Mobile Broadcast Solution, see Sec. 3) and SMS <ref type="bibr" target="#b8">[8]</ref> algorithms for comparison. We compared our new algorithm against the MBS and SMS algorithms because they are the cutting-edge multiplexing algorithms in the field and in the literature, respectively.</p><p>For the experiments, we have set the modulator to use the 16-QAM (Quadrature Amplitude Modulation) scheme and a 10 MHz radio channel, and we set the overhead to T 0 = 100 msec. We used ten videos, each of five minutes duration, with average bitrates ranging from 250 to 768 kbps. The video files are from the categories of sport, talk show, documentary, and TV game show and have very different visual characteristics. We encoded these ten videos into scalable streams using the Joint Scalable Video Model (JSVM) <ref type="bibr" target="#b12">[12]</ref>, which is the reference software for H.264/SVC. Each scalable stream consists of eight MGS layers. We created the trace file for each video using BitStreamExtractorStatic provided by JSVM. Using this tool, we extracted the size of the packet for each MGS layer of every frame. We also used this tool to extract video streams with different numbers of MGS layers from the original video. We then used PSNRStatic of JSVM to determine the PSNR value of each MGS layer of each frame. Based on this information, we created a trace file for each video stream, and used it in our experiments. In the trace file, there are Q s entries for each frame i of video stream s, with entry k, 1 ≤ k ≤ Q s, indicating the size and the PSNR value of layer k of frame i.</p><p>We used the base station to concurrently broadcast all ten video streams for five minutes, and we stored the transmission logs, which consist of the detailed information of each burst, including timestamp, size, associated stream, and the frames and layers in the burst. We repeated the experiments with the different algorithms: OSVM, SMS, and MBS. As mentioned in Sec. 3, the MBS algo- rithm requires manual configuration of the rs values, which is timeconsuming and error-prone. In our experiments, we varied the r s value in the range 0.33 × ravgs to 3 × ravgs, where ravgs is the average bitrate for video stream s. We conducted our experiments with all considered r s values, and we report the best performance among them. That is, we exhaustively searched for the absolutely optimal MBS configuration, and we compare the OSVM algorithm to it. We consider three performance metrics: (i) frame-drop ratio, (ii) energy saving, and (iii) video quality in PSNR.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Results</head><p>Frame-Drop Rate. We compare the OSVM algorithm against the MBS method used in current mobile broadcast networks. We plot the average frame-drop rate in <ref type="figure">Fig. 3</ref>. In this figure, MBS min and MBSmax are the best and worst results from the MBS method. In particular, each point on the MBS min curve is the minimum over all ten streams at that time and the point on the MBS max curve is the maximum. Thus the two curves define the envelope containing all points of all ten streams. The figure shows that OSVM significantly outperforms even the best case of the MBS method.</p><p>Next, we compare OSVM to the SMS algorithm in <ref type="figure">Fig. 4</ref>. Due to the VBR nature of the video streams, the drop rate varied from 6% to 21% for SMS and from 3% to 9% for OSVM at different points in time, but the averages, over time, were 8.35% for SMS and 4.49% for the OSVM algorithm. Stated another way, the OSVM algorithm drops an average of 46.2% fewer frames than the SMS algorithm, which leads to smoother playout. This improvement is achieved by using our weighting model for MGS layers and our decision mechanism described in Sec. 5 to select the layers for each video stream that maximize the number of transmitted frames while maintaining high per-frame quality over all video streams.   <ref type="figure">5</ref> shows the envelope for dropped frames for all video streams for the OSVM algorithm. At the beginning, the percentage of dropped frames varies between 0% and 35% but it quickly converges to a range of 4.49% to 6.6%. This figure shows that the low average frame-drop rate is the result of good performance among all video streams.</p><p>Energy Saving. In <ref type="figure">Fig. 6</ref>, saving avg shows the average energy saving resulting from use of the OSVM algorithm based on Eq. (2b), and saving min and savingmax define the envelope of the energy saving achieved among all video streams. The energy saving for the video streams ranges from 70% to 99% and the average is 90%. This good energy saving is achieved despite the fact that our primary objective, maximizing bandwidth utilization, can conflict with the energy saving objective.</p><p>Video Quality. We compute the PSNR values for the SMS and OSVM algorithms. In our analysis, we consider each dropped frame as a blank image to compute its PSNR value. <ref type="figure">Fig. 7</ref> shows that the average PSNR value resulting from OSVM is an improvement of about 1.34 dB over the SMS algorithm. In addition, we found that the average PSNR value resulting from the OSVM algorithm is only about 1.17 dB lower than the average PSNR of the original video stream (P SNR max in <ref type="figure">Fig. 7)</ref>. That is, relative to P SNR max, OSVM causes only half as much PSNR drop as the SMS algorithm.</p><p>We also plot the maximum and minimum video quality among all video streams in <ref type="figure">Fig. 8</ref>, which are labelled P SNR min and P SNR max, respectively. This figure shows that the PSNR values of individual video streams converge to a small range of 41.92 to 42.98 which is very close to the average of 42.60. This small gap, merely 1.0 dB, shows that the OSVM algorithm leads to high video quality for all video streams, rather than a subset of them.</p><p>We would like to point out that the OSVM algorithm was running in real-time on a base station loaded with the control software and video streaming servers for broadcasting. This shows the applicability of OSVM as a real-time multiplexing algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">CONCLUSIONS</head><p>In this paper, we studied the problem of broadcasting multiple scalable video streams from a base station to a large number of mobile receivers. Our primary objective was to maximize bandwidth utilization, and our secondary objectives were to achieve close to optimal energy saving and perceived quality of the video streams. To achieve this, we proposed an algorithm that uses a model of the quality of video streams and a weighting mechanism for video frames to drop video packets whenever the aggregate bitrate of the video streams exceeds the available bandwidth. We compared our algorithm with SMS <ref type="bibr" target="#b8">[8]</ref> and MBS <ref type="bibr" target="#b11">[11]</ref> algorithms and our experimental results on a real mobile TV testbed show that the OSVM algorithm significantly outperforms current methods and also achieves near optimal energy saving and video quality. For example, the OSVM algorithm leads to: (i) 46.2% fewer frames dropped compared to the SMS algorithm, (ii) 90% energy saving on average, and (iii) approximately 1.34 dB PSNR improvement compared to the SMS algorithm.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>MoViD' 10 ,</head><label>10</label><figDesc>October 25, 2010, Firenze, Italy. Copyright 2010 ACM 978-1-4503-0165-7/10/10 ...$10.00.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>below. In this formulation, our primary objec- tive, expressed in Eq. (2a), is to maximize the goodput, the fraction of transmitted data that is on time. Eqs. (2b) and (2c) are our sec- ondary optimization criteria. Eq. (2b) expresses the average energy saving for the mobile receivers as the average fraction of total time that the receivers can put their wireless interfaces to sleep. Eq. (2c) is the average quality of the video streams per kilo-byte of data and is based on the contribution of each MGS layer of each video stream to the quality of that stream. Eq. (2d) guarantees that the bursts of every pair s and s do not overlap. Eqs. (2e) and (2f) guar- antee that we do not have any instances of overflow or underflow, respectively, at the receivers. Eq. (2g) relates the burst sizes and the numbers of MGS layers and is needed in Eq. (2c) to ensure that the sum of the transmitted MGS packets in each burst does not exceed the burst size.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 1 : When a window is late, MGS layers from other bursts are dropped to accommodate the remaining data of that late window.</head><label>1</label><figDesc>Figure 1: When a window is late, MGS layers from other bursts are dropped to accommodate the remaining data of that late window.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: The OSVM algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 : Dropped frames in the MBS and OSVM algorithmsFigure 4 : Dropped frames in the SMS and OSVM algorithms.</head><label>34</label><figDesc>Figure 3: Dropped frames in the MBS and OSVM algorithms.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 : Maximum and minimum dropped frames among all video streams achieved by the OSVM algorithmFigure 6 : Maximum and minimum energy saving among all video streams achieved by the OSVM algorithm.</head><label>56</label><figDesc>Figure 5: Maximum and minimum dropped frames among all video streams achieved by the OSVM algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig.</head><label></label><figDesc>Fig. 5 shows the envelope for dropped frames for all video streams for the OSVM algorithm. At the beginning, the percentage of dropped frames varies between 0% and 35% but it quickly converges to a range of 4.49% to 6.6%. This figure shows that the low average frame-drop rate is the result of good performance among all video streams. Energy Saving. In Fig. 6, saving avg shows the average energy saving resulting from use of the OSVM algorithm based on Eq. (2b), and saving min and savingmax define the envelope of the energy saving achieved among all video streams. The energy saving for the video streams ranges from 70% to 99% and the average is 90%. This good energy saving is achieved despite the fact that our primary objective, maximizing bandwidth utilization, can conflict with the energy saving objective. Video Quality. We compute the PSNR values for the SMS and OSVM algorithms. In our analysis, we consider each dropped frame as a blank image to compute its PSNR value. Fig. 7 shows that the average PSNR value resulting from OSVM is an improvement of about 1.34 dB over the SMS algorithm. In addition, we found that the average PSNR value resulting from the OSVM algorithm is only about 1.17 dB lower than the average PSNR of the original video stream (P SNR max in Fig. 7). That is, relative to P SNR max, OSVM causes only half as much PSNR drop as the SMS algorithm. We also plot the maximum and minimum video quality among all video streams in Fig. 8, which are labelled P SNR min and P SNR max, respectively. This figure shows that the PSNR values of individual video streams converge to a small range of 41.92 to 42.98 which is very close to the average of 42.60. This small</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 7 : Video quality achieved by the SMS and OSVM algo-Figure 8 : Maximum and minimum PSNR among all video streams achieved by the OSVM algorithm.</head><label>78</label><figDesc>Figure 7: Video quality achieved by the SMS and OSVM algorithms.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>). A window p is considered to be out- standing if it has not been allocated all of its required data amount y s p . At each decision point t, we schedule a burst for the window p that has the smallest end time z s p among all outstanding windows p 񮽙 that have start time x s p 񮽙 ≤ t and end time z s p 񮽙 ≥ t, and we schedule a burst for the selected window p untilof a stream s, we check whether or not all of the data for this window has been scheduled. If there is remaining data for window p of video stream s, we consider all video streams s 񮽙 that have bursts scheduled in the time interval from x s p to z s p . Sup- pose a s p (s 񮽙 ) and d s p (s 񮽙 ) are the first and the last frames of video stream s 񮽙 that are scheduled in the time window p of video stream s. Wewe use w s i,i 񮽙 (q) to denote the usefulness of quality layer q from frame i to frame i 񮽙 , 1 ≤ i ≤ i 񮽙 ≤ I of video stream s. The usefulness w s i,i 񮽙 (q) is defined by the following equation:</head><label></label><figDesc>the next decision point. We continue to select windows and schedule bursts until there are no outstanding windows. We then wait until the next decision point to schedule new bursts. At each decision point that is the end time of a window pwant to maximize the quality of the transmitted data while respecting the bandwidth limitations. To decide which MGS qual- ity layers to transmit, we need to calculate the transmission cost of each quality layer. For each video stream s,</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>i s 1 񮽙 i s 2 񮽙 i s Late window</head><label></label><figDesc></figDesc><table>Remaining 
burst for 
the late 
window 

</table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Private communication with Nokia&apos;s engineers managing mobile TV base stations</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Atsc</forename></persName>
		</author>
		<ptr target="http://www.openmobilevideo.com/about-mobile-dtv/standards/" />
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">AT&amp;T sells wireless spectrum in southeast to Clearwire corporation</title>
		<ptr target="http://www.att.com/gen/press-room?pid=4800&amp;cdvn=news&amp;newsarticleid=23428" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A smoothing algorithm for time slicing DVB-H video transmission with bandwidth constraints</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Camarda</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Tommaso</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Striccoli</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM International Mobile Multimedia Communications Conference (MobiMedia&apos;06)</title>
		<meeting>of ACM International Mobile Multimedia Communications Conference (MobiMedia&apos;06)<address><addrLine>Alghero, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Digital Video Broadcasting (DVB</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">DVB specification for data broadcasting</title>
		<imprint>
			<date type="published" when="2004-06" />
		</imprint>
	</monogr>
	<note>European Telecommunications Standards Institute (ETSI) Standard EN 301 192 Ver. 1.4.1</note>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Faria</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Henriksson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Stare</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Talmola</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Dvb-H</surname></persName>
		</author>
		<title level="m">Digital broadcast services to handheld devices. Proc. of the IEEE</title>
		<imprint>
			<date type="published" when="2006-01" />
			<biblScope unit="volume">94</biblScope>
			<biblScope unit="page" from="194" to="209" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
				<ptr target="http://www.rncos.com/Report/IM063.htm" />
		<title level="m">Global IPTV market analysis</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">On statistical multiplexing of variable-bit-rate video streams in mobile systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hsu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hefeeda</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM Multimedia&apos;09</title>
		<meeting>of ACM Multimedia&apos;09<address><addrLine>Beijing, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009-10" />
			<biblScope unit="page" from="411" to="420" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Time slicing in mobile TV broadcast networks with arbitrary channel bit rates</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hsu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hefeeda</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE INFOCOM&apos;09</title>
		<meeting>of IEEE INFOCOM&apos;09<address><addrLine>Rio de Janeiro, Brazil</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009-04" />
			<biblScope unit="page" from="2231" to="2239" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Radio link buffer management and scheduling for wireless video streaming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liebl</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Jenkac</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Stockhammer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Buchner</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Telecommunication Systems</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="255" to="277" />
			<date type="published" when="2005-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Nokia mobile broadcast solution</title>
		<ptr target="http://press.nokia.com/PR/200510/1018770_5.html" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
				<ptr target="http://ip.hhi.de/imagecom_G1/savce/downloads/SVC-Reference-Software.htm" />
		<title level="m">SVC reference software</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rappaport</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename></persName>
		</author>
		<title level="m">Wireless Communications: Principles &amp; Practice</title>
		<imprint>
			<publisher>Prentice Hall</publisher>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
	<note>4th ed</note>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Reichel</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wien</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Schwarz</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
		<title level="m">ISO/IEC JTC 1/SC29/WG11, doc. N6716</title>
		<meeting><address><addrLine>Palma de Mallorca, Spain</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Joint video coding and statistical multiplexing for broadcasting over DVB-H channels</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rezaei</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bouazizi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gabbouj</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Multimedia</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="1455" to="1464" />
			<date type="published" when="2008-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Mobile video transmission using scalable video coding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Schierl</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Stockhammer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wiegand</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Circuits and Systems for Video Technology</title>
		<imprint>
			<date type="published" when="2007-09" />
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="1204" to="1217" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Overview of the scalable video coding extension of the H.264/AVC standard</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Schwarz</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Marpe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wiegand</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Circuits and Systems for Video Technology</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="1103" to="1120" />
			<date type="published" when="2007-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Online smoothing of variable-bit-rate streaming video</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sen</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rexford</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kurose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Towsley</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Multimedia</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="37" to="48" />
			<date type="published" when="2000-03" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
