<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:54+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">SYSTRAN Translation Stylesheets: Machine Translation driven by XSLT</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pierre</forename><surname>Senellart</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jean</forename><surname>Senellart</surname></persName>
						</author>
						<title level="a" type="main">SYSTRAN Translation Stylesheets: Machine Translation driven by XSLT</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>We present the SYSTRAN Translation Stylesheets (STS) used by the SYSTRAN machine translation engines that power the most prominent online translation services on the Web today (including Google, Yahoo!, AltaVista&apos;s BabelFish, and AOL). SYSTRAN develops and markets the world&apos;s most widely used machine translation software which powers products and solutions for the desktop, network infrastructures and the Internet that facilitate communication in 40 language combinations and in 20 specialized domains. The choice of leading global corporations, search engines and governments , SYSTRAN&apos;s software is applied across diverse best-practice solutions for intra-company communications, content management, online customer support, eCommerce, email systems, chat, and more. SYSTRAN&apos;s expertise spans over three decades of building customized translation solutions through open and robust architectures.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>The continuous expansion of the content available on the Web, combined with the internationalization of exchanges that the Web allows, increase the need for multilingual publishing. However, it is impossible to handle the voluminous amounts of short-life and specialized content (such as technical support documentation, news feeds…) in the traditional human localization workflow. Alternatively, machine translation (MT) provides on-demand translation with relatively low cost. MT usage has become common at different customization levels: from "raw" translation available for free on the Web's most popular portals, to highly customized translation for specific applications.</p><p>One facet of the "how to achieve quality translation" dilemma is how MT is integrated in the "multilingual publishing" workflow. Traditionally, this is done at a very late stage of the process, where MT engines need to cope with poorly structured content. We describe in this paper how the use of SYSTRAN Translation Stylesheets (STS) leverages document structure in an MT process: XSLT exposes the semantics underlying the document structure to the MT engine, subsequently improving the accuracy of MT rule selection, as well as facilitating the interaction with the author.</p><p>We first provide a description of the SYSTRAN Translation Stylesheet and compare its advantages over classical document filters. We will also show how this new technology naturally introduces MT in the multilingual authoring and publishing workflow.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">The SYSTRAN Translation Stylesheet</head><p>To understand the way the Translation Stylesheet operates, one needs first to understand how "traditional" document filtering functions and the means through which the translation process can be parameterized. The next section breifly describes this information, and is followed by how Translation Stylesheets are defined. We conclude this section with short examples that illustrate the power of the Translation Stylesheet driving the translation process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Traditional document filters and translation customization</head><p>With regard to MT engines, "filters" are in charge of extracting sentences from the source document and for rebuilding a target document with translated sentences. Once extracted, the sentences are sequentially processed "out of context" -in particular, it is impossible to know if a given sentence belongs to a specific part of the original document (as represented in <ref type="figure" target="#fig_0">Figure 1</ref>, "Traditional document filter: sentences are extracted from the source document, translated with unique global parameters, and re-injected in the target document"). Therefore, no local parameterization can be performed. In such a workflow, the panel of available translation parameters, i.e. the different means through which one can customize the translation, include the following:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RenderX</head><p>• selection of user-defined dictionaries -changes the meaning of an expression according to a specific terminology.</p><p>• modification of linguistic parameters -for instance, the way the imperative should be translated, the gender of a specific pronoun… Such options are represented by name/value pairs.</p><p>Additionally, the user can define DNT (Do Not Translate) expressions but this requires specific markup on the input text by the user.</p><p>It is important to note that the translation parameters in traditional document filters are global -each sentence of the corpus is translated with the same parameters since there is no way to differentiate sentences once they are extracted. Primary benefits from Translation Stylesheets are to use the XSLT language in order to modify locally translation options, to define dynamically DNT expressions and to introduce new types of parameterization. This function returns a translation of the node-set. The node-set must be a set of par (for paragraph) trees verifying the following DTD (attributes are not shown):</p><formula xml:id="formula_0">&lt;!ELEMENT par (#PCDATA|mark|typo|tag)*&gt; &lt;!ELEMENT mark (#PCDATA|mark|typo|tag)*&gt; &lt;!ELEMENT typo (#PCDATA|mark|typo|tag)*&gt; &lt;!ELEMENT tag ANY&gt;</formula><p>• mark tags are used to provide additional local information (in input) to or to get additional feedback (in output) from translation engines.</p><p>• typo tags are used to indicate local character properties (e.g. bold font, hyperlinks…) so that these properties are reinserted in the translation result, at the proper location (following reordering of words).</p><p>• Everything inside a tag tag remains as is in the translation result.</p><p>• Every text content not inside a tag node is translated.</p><p>Example 1, "Sample Source Tree" displays a sample tree passed to the translate function, and Example 2, "Translation from English to French of tree from Example 1, "Sample Source Tree" ", the corresponding translation from English to French. Note that the ambiguous "boot" is not translated as a shoe, but as a technical term due to the mark set on the word.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example 1. Sample Source Tree</head><p>&lt;par&gt; &lt;typo type="bold"&gt;Quick&lt;/typo&gt; &lt;mark action="set" type="domain" value="information_technology"&gt;boot&lt;/mark&gt;! &lt;tag&gt;This &lt;zorglub&gt;will not be&lt;/zorglub&gt; translated.&lt;/tag&gt; &lt;/par&gt; 1 Actually, the EXSLT <ref type="bibr">[EXSLT]</ref> node-set extension function is needed; this requirement would be removed when switching to XSLT 2.0. &lt;/tag&gt; &lt;/par&gt; string getValue( string ) Queries the value of the translation engine options. These can be general options (like the current source and target languages), global linguistic options (such as if "you" in English should be translated as informal "tu" or polite "vous" in French) or even stylesheet-specific options set by the user.</p><p>void pushValue( string , string )</p><p>Sends local options to the translation engine, such as requiring that, inside a particular tag, every noun/verb ambiguity should be resolved as noun.</p><p>void popValue() popValue is the counterpart of pushValue: a stack of options is maintained in the translation engine; the latest element added to the stack is removed on the call of popValue. This mechanism allows for a very general management of the span life of options sent to the translation engine.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.2.">Default behavior and utility templates</head><p>To expedite the process of writing STS, utility templates are defined in a tools.xsl imported stylesheet. Additionally, tools.xsl defines the needed templates in order to use the following approach for writing STS stylesheets, by importing tools.xsl and benefiting of the natural cascading mechanism of XSLT. The next section presents present illustrations of these somewhat abstract rules.</p><p>• By default, nodes are browsed in document order and textual nodes are preserved and not translated.</p><p>• Nodes whose direct content should be translated should call a translate_par template (or one of its variants).</p><p>• Inline elements (those which are descendants of nodes whose content will be translated) must define templates with the preprocess mode which, should produce mark, typo, tag according to the wanted behavior.</p><p>• postprocess mode should be defined for mark, typo, tag if some processing needs to be done to recover original structures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.">Examples</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.1.">Generic STS</head><p>Example 3, "Generic STS for an XML data format with no mixed elements" shows a very simple STS which translates every text node of the XML document as a separate paragraph. This is enough to translate an XML document with no mixed elements. This stylesheet can be refined to handle some kinds of tags in a special way. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example 3. Generic STS for an XML data format with no mixed elements</head><p>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www. <ref type="bibr">w3</ref>.org/1999/XSL/Transform"&gt; &lt;xsl:import href="tools.xsl"/&gt; &lt;xsl:template match="text()"&gt; &lt;xsl:call-template name="translate_par"&gt; &lt;xsl:with-param name="source" select="."/&gt; &lt;/xsl:call-template&gt; &lt;/xsl:template&gt; &lt;/xsl:stylesheet&gt;</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.2.">XHTML STS</head><p>Example 4, "Partial STS for XHTML" shows a simplified and partial STS for translating XHMTL files. The following features are illustrated:</p><p>• b and strong tags are converted to typo tags during preprocess. Bold character properties are converted back to strong tags. There is an additional way to restore the exact original tags, which is not detailed here.</p><p>• The content of p, h1, h2… is translated.</p><p>• An option is sent to the translation engine for a special handling of title tags.</p><p>• alt and title are translated, except in special cases (we have the full expressive power of XPath and XSLT to refine the conditions).</p><p>• For block quotations, both the source and the translation are kept in document translation.</p><p>Note that this illustration only scratches the surface of possibilities able to be expressed via STS.  <ref type="bibr">w3</ref>.org/1999/xhtml" xmlns:systran="http://www.systransoft.com/xslfunctions" extension-element-prefixes="systran"&gt; &lt;xsl:import href="tools.xsl"/&gt; &lt;!--Character properties --&gt; &lt;xsl:template match="h:b|h:strong" mode="preprocess"&gt; &lt;typo bold="1"&gt; &lt;xsl:apply-templates mode="preprocess"/&gt; &lt;/typo&gt; &lt;/xsl:template&gt; &lt;xsl:template match="typo[@bold='1']" mode="postprocess"&gt; &lt;xsl:element name="strong" namespace="http://www. <ref type="bibr">w3</ref>.org/1999/xhtml"&gt; &lt;xsl:apply-templates mode="postprocess"/&gt; &lt;/xsl:element&gt; &lt;/xsl:template&gt; &lt;!--Tags with content to translate --&gt; &lt;xsl:template match="h:p|h:li|h:h1|h:h2|h:h3|h:h4|h:h5|h:h6"&gt; &lt;xsl:copy&gt; &lt;xsl:apply-templates select="@*"/&gt; &lt;xsl:call-template name="translate_par"&gt; &lt;xsl:with-param name="source" select="node()"/&gt; &lt;/xsl:call-template&gt; &lt;/xsl:copy&gt; &lt;/xsl:template&gt; &lt;!--Translate title, resolving verb/nouns ambiguities to nouns --&gt; &lt;xsl:template match="title"&gt; &lt;xsl:value-of select="systran:pushValue('TITLE','1')" /&gt; &lt;xsl:copy&gt; &lt;xsl:apply-templates select="@*"/&gt; &lt;xsl:call-template name="translate_par"&gt; &lt;xsl:with-param name="source" select="text()"/&gt; &lt;/xsl:call-template&gt; &lt;/xsl:copy&gt; &lt;xsl:value-of select="systran:popValue()" /&gt; &lt;/xsl:template&gt; &lt;!--@title and @alt should be translated… --&gt; &lt;xsl:template match="@title|@alt"&gt; &lt;xsl:call-template name="translate_par"&gt; &lt;xsl:with-param name="source" select="."/&gt; &lt;/xsl:call-template&gt; &lt;/xsl:template&gt; </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RenderX</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Multilingual publishing workflows overview</head><p>The millions of web pages machine translated 2 per day through search engines result pages have the following characteristic: machine translation directly deals with the publishing format -most of the time poorly structured HTML -of a content that was not originally meant to be translated. Localization is triggered "on-demand" by the user and there is no connection between the publishing workflow and this localization workflow. The translation engine must deal with the publishing format and guess the structure beyond the format. A good example of this can be seen by the use of separators (like |, •…) on webpages -they are used sometimes as item separators, sometimes as formatting symbols, sometimes as list bullets… without any algorithmic way to differentiate these uses.</p><p>More over, the translation engine is using a "tolerant" (similar to quirks mode of common browsers) HTML filter to parse the content and to restore the translated text in the original format. But the formatting of the result can be imperfect since text length is not preserved and might break "visual adjustments" performed by stylesheets or manually by webmasters.</p><p>Finally, the user, using Machine Translation (MT) as a gisting tool, is most of the time not aware of the content of the page before translation; and he would not be able to parameterize the translation process accordingly. As a result of all of this, the translation quality is generally lower than possible -the translation process is too far from the document structure to deal with its semantic. A direct improvement of this workflow is to introduce localization before publishing (see <ref type="figure">Figure 3</ref>, "Better MT Publishing Workflow: Authoring, MT Localization, Publishing"), on the authoring format (ideally, an XML format) with the following direct benefits:</p><p>• The content might be more structured and is not impacted with publishing effects.</p><p>• Localization is performed by the content provider, who is aware of the semantic domain of the content, and the translation process can be customized accordingly.</p><p>To achieve this, translation process must deal directly with the user own XML structure and turn document syntax into linguistic information used by the engine to provide a customized translation. This is performed through the use of Translation Stylesheet as described in previous section.</p><p>The workflow can be improved further by introducing a interaction between the author and the machine translation through the STS (see <ref type="figure">Figure 4</ref>, "Ideal MT Publishing Workflow: Authoring with MT in mind, MT Localization, Publishing"). In this workflow, the author is notified during the editing of the content, similarly to an active spellcheck, that some expressions are ambiguous, that some structure is too complex and might result in a bad translation, that some word is not known by the translation engine… The author can then choose to adjust the content or to annotate the document with linguistic markup which will be processed by the STS. This added information will improve the quality of the translation for any target language, without requiring the author to be familiar with this language. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RenderX</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>11</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Applying STS to structured but non XML content</head><p>The use of STS presented above is restricted to the translation of XML documents 3 . However, it would be nice to be able to handle non XML content (e.g. Microsoft Word, LaTeX, PDF, e-mails…) with all the benefits of STS, since these formats are still widely used, both for authoring and publishing. A way to achieve this is to have converters to and from an XML format. We present here how to use OASIS XLIFF <ref type="bibr">[XLIFF]</ref> for this purpose. XLIFF is the XML Localization Interchange File Format designed by a group of software providers, localization service providers, and localization tools providers. This format allows to extract text content from any document format, together with normalized information about document structure and character properties. After localization, the original format can be reconstructed (merge process) based on the translated strings.</p><p>To get benefit from the STS and allows same level of translation fine-tuning that STS provide for translating XML format, the filter converting source format into XLIFF should preserve as much structure from the source document as possible. For instance, through the use of the XLIFF group tag, high level document formating such as tables or lists can be represented. Use of bpt tags can reflect character properties in the source format… The semantics of those tags is then described within an STS and allows the translation engine to deal with any type of document property. <ref type="figure" target="#fig_5">Figure 5</ref>, "STS translation of non XML document through XLIFF interchange format" describes the complete workflow. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Conclusion</head><p>We have presented an innovative application of XSLT that is used to drive a complex external process with parameters: a Machine Translation system. This mechanism binds the deep structure of the source document to the translation engine options. This renders a correlation between the document syntax and its underlying linguistic structure. Conversely, one can enrich the document structure with linguistic information in order to improve the quality of machine translation results. In an optimal workflow, the author and the translation engine interact with a feedback -structure enrichment cycle.</p><p>This tool is the first step towards an authoring process that is cognizant of the increasing demands for multilingual content.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RenderX</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>13</head><p>XML 2005 Conference proceeding by RenderX -author of XML to PDF (XSL FO) formatter.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>XSL • FO formatter</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SYSTRAN Translation Stylesheets: Machine Translation driven by XSLT</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 . Traditional document filter: sentences are extracted from the source document, translated with unique global parameters, and re-injected in the target document</head><label>1</label><figDesc>Figure 1. Traditional document filter: sentences are extracted from the source document, translated with unique global parameters, and re-injected in the target document</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>RenderX 6 XML 2005 Conference proceeding by RenderX -author of XML to PDF (XSL FO) formatter. XSL • FO formatter SYSTRAN Translation Stylesheets: Machine Translation driven by XSLT Example 2. Translation from English to French of tree from Example 1, "Sample Source Tree" &lt;par&gt; Démarrage &lt;typo type="bold"&gt;rapide&lt;/typo&gt; ! &lt;tag&gt;This &lt;foobar&gt;will not be&lt;/foobar&gt; translated.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>RenderX 9 XML 2005 Conference proceeding by RenderX -author of XML to PDF (XSL FO) formatter. XSL • FO formatter SYSTRAN Translation Stylesheets: Machine Translation driven by XSLT &lt;!--… except for acronyms or abbreviations --&gt; &lt;xsl:template match="@title[name(..)='abbr' or name(..)='acronym']"&gt; &lt;xsl:copy/&gt; &lt;/xsl:template&gt; &lt;!--Keep both source and translation in result for blockquote --&gt; &lt;xsl:template match="blockquote"&gt; &lt;xsl:copy-of select="." /&gt; &lt;xsl:copy&gt; &lt;xsl:apply-templates select="@*"/&gt; &lt;xsl:call-template name="translate_par"&gt; &lt;xsl:with-param name="source" select="node()"/&gt; &lt;/xsl:call-template&gt; &lt;/xsl:copy&gt; &lt;/xsl:template&gt; &lt;/xsl:stylesheet&gt;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. Traditional MT Publishing Workflow: Authoring, Publishing, MT Localization</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>Figure 4. Ideal MT Publishing Workflow: Authoring with MT in mind, MT Localization, Publishing</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 .</head><label>5</label><figDesc>Figure 5. STS translation of non XML document through XLIFF interchange format</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Table of Contents</head><label>of</label><figDesc></figDesc><table>1. Introduction .................................................................................................................................... 4 
2. The SYSTRAN Translation Stylesheet ................................................................................................. 4 
2.1. Traditional document filters and translation customization ............................................................. 4 
2.2. STS technical description ........................................................................................................ 6 
2.2.1. Extension functions ..................................................................................................... 6 
2.2.2. Default behavior and utility templates ............................................................................. 7 
2.3. Examples ............................................................................................................................. 7 
2.3.1. Generic STS ............................................................................................................... 7 
2.3.2. XHTML STS ............................................................................................................. 8 
3. Multilingual publishing workflows overview ........................................................................................ 10 
4. Applying STS to structured but non XML content ................................................................................. 12 
5. Conclusion .................................................................................................................................... 13 
Bibliography ..................................................................................................................................... 13 

RenderX </table></figure>

			<note place="foot">Re-format page sizes</note>

			<note place="foot">RenderX</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xslt</forename><surname>Extended</surname></persName>
		</author>
		<ptr target="http://www.exslt.org/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Available under the MIT</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xml C</forename><surname>The</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Parser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Toolkit Of Gnome</surname></persName>
		</author>
		<ptr target="http://www.xmlsoft.org/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
				<ptr target="http://www.oasis-open.org/apps/group_public/download.php/3110/XLIFF-core-whitepaper_1.1-cs.pdf" />
		<title level="m">RenderX 14 XML 2005 Conference proceeding by RenderX -author of XML to PDF (XSL FO) formatter</title>
		<imprint/>
	</monogr>
	<note>XML Localization Interchange File Format</note>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">XSL • FO formatter SYSTRAN Translation Stylesheets: Machine Translation driven by XSLT</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Systran</forename><forename type="middle">S A</forename></persName>
		</author>
		<ptr target="http://www.systransoft.com" />
		<imprint>
			<pubPlace>1, Parvis de la Défense Paris La Défense</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">France Phd Candidate Inria</forename><surname>Futurs</surname></persName>
		</author>
		<ptr target="http://www-futurs.inria.fr" />
		<imprint>
			<pubPlace>Paris France</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Pierre Senellart has a Master degree in Computer Science, is currently a PhD candidate at INRIA Futurs. Pierre has been a member of SYSTRAN&apos;s R&amp;D team for the past two years</title>
	</analytic>
	<monogr>
		<title level="m">His research topics include the World Wide Web, XML Warehousing, Large Interaction Networks, and Natural Language Processing</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jean</forename><surname>Senellart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Systran</forename><forename type="middle">S A</forename><surname>Director</surname></persName>
		</author>
		<ptr target="http://www.systransoft.com/]1" />
		<imprint>
			<pubPlace>Parvis de la Défense Paris La Défense</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">As Director of Research &amp; Development at SYSTRAN for the last eight years, Jean drives new approaches and all linguistic development. He is a member of the OSCAR (Open Standards for Container/Content Allowing Re-use) steering committee and a member of the International Association for Machine Translation and the Association of Computational Linguists</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">France</forename><forename type="middle">Jean</forename><surname>Senellart</surname></persName>
		</author>
		<imprint>
			<pubPlace>Paris, France</pubPlace>
		</imprint>
	</monogr>
	<note>has a Master degree in Computer Science, in Computational Linguistics and also earned a PhD in Computational Linguistics</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
