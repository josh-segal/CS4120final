<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T17:01+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Live Peer-to-Peer Streaming with Scalable Video Coding and Networking Coding</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>February 22-23, 2010</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shabnam</forename><surname>Mirshokraie</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">School of Computing Science</orgName>
								<orgName type="department" key="dep2">School of Computing Science</orgName>
								<orgName type="institution">Simon Fraser University Surrey</orgName>
								<address>
									<region>BC</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohamed</forename><surname>Hefeeda</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Simon Fraser University Surrey</orgName>
								<address>
									<region>BC</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Live Peer-to-Peer Streaming with Scalable Video Coding and Networking Coding</title>
					</analytic>
					<monogr>
						<meeting> <address><addrLine>Phoenix, Arizona, USA</addrLine></address>
						</meeting>
						<imprint>
							<date type="published">February 22-23, 2010</date>
						</imprint>
					</monogr>
					<note>Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. 978-1-60558-914-5/10/02 ...$10.00.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>H43 [Information Systems Applications]: Communi- cations Applications; C24 [Computer-Communication Networks]: Distributed Systems General Terms Design Keywords Peer-to-peer streaming</term>
					<term>scalable video coding</term>
					<term>network cod- ing</term>
					<term>live streaming</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We present the design of a peer-to-peer (P2P) live streaming system that uses scalable video coding as well as network coding. The proposed design enables flexible customization of video streams to support heterogeneous receivers, highly utilizes upload bandwidth of peers, and quickly adapts to network and peer dynamics. Our design is simple and modular. Therefore, other P2P streaming systems could also benefit from various components of our design to improve their performance. We conduct an extensive quantitative analysis to demonstrate the expected performance gain from the proposed design. Our analysis uses actual scalable video traces and realistic P2P streaming environments with high churn rates, heterogeneous peers, and flash crowd scenarios. Our results show that the proposed system can achieve: (i) significant improvement in the visual quality perceived by peers (several dBs are observed), (ii) smoother and more sustained streaming rates, (iii) higher streaming capacity by serving more requests from peers, and (iv) more robustness against high churn rates and flash crowd arrivals of peers. This paper shows that the integration of network coding and scalable video coding in P2P live streaming systems yields better performance than current systems that use single-layer streams and proposed systems that use either network coding alone or scalable video coding alone.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Peer-to-peer (P2P) live video streaming systems have seen wide deployment around the globe. P2P streaming systems such as CoolStreaming <ref type="bibr" target="#b39">[41]</ref>, PPLive <ref type="bibr" target="#b28">[29]</ref>, UUSee <ref type="bibr" target="#b33">[34]</ref>, SopCast <ref type="bibr" target="#b31">[32]</ref>, and TVAnts <ref type="bibr" target="#b32">[33]</ref> attract numerous users every day. As more users get used to viewing multimedia content online, they will demand higher and better video quality than available on many of the current P2P streaming systems. As an indication of this demand and the response from industry, Huang et al. <ref type="bibr" target="#b13">[14]</ref> show that the average bit rate of videos offered by the MSN Video Services has increased by more than 50% over a nine-month period, and it is the likely that the bit rate will continue to increase in the future. Providing high-quality streaming over P2P systems, however, faces multiple challenges, including: (i) limited upload capacity of peers, (ii) high heterogeneity of receivers in terms of download bandwidth, screen resolutions, and CPU capacity, and (iii) high churn rate as the peer population is constantly changing. Addressing these challenges requires not only increasing the capacity of peers and deploying additional seeding servers to make up the shortage in resources, but also employing novel methods for encoding and distributing multimedia content and developing algorithms and protocols to optimally utilize the available resources.</p><p>In this paper, we propose a new design for P2P live streaming systems that, we believe, will significantly improve their performance. The new design strives to address many of the challenges impeding current systems by efficiently utilizing peers' resources, easily customizing multimedia content to support receivers with diverse resources and requirements, and quickly adapting to network and peer dynamics. Our design is simple and practical; we actually have implemented it. Our design employs scalable video coding to support heterogeneous receivers as well as networking coding to maximize the streaming throughput and handle network dynamics. Although scalable video coding and network coding have been individually proposed for various systems in the literature, e.g., <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b23">24,</ref><ref type="bibr" target="#b27">28]</ref>, their integrated use in P2P live streaming systems has not been fully explored in the literature, to the best of our knowledge. The integration of these two technologies provides many performance benefits beyond those offered by each of them individually, as will be shown in this paper.</p><p>We present the design of a P2P streaming system that employs both scalable video coding and network coding. Our design is modular and can be used as an improvement plugin in other P2P streaming systems. That is, we focus on the new components needed to handle multimedia content compressed in scalable manner and encoded using network coding. Thus, our work and software components are readily useful for other systems. In addition, we quantitatively show the expected performance gain from the proposed design using actual scalable video traces in realistic P2P streaming environments with high churn rates, heterogeneous peers, and flash crowd scenarios. In particular, our results show that the proposed system can achieve (i) significant improvement in the visual quality perceived by peers (several dBs are observed), (ii) smoother and more sustained streaming rates (up to 100% increase in the average streaming rate is obtained), (iii) higher streaming capacity by serving more requests from peers, and (iv) more robustness against high churn rates and flash crowd arrivals of peers.</p><p>The rest of this paper is organized as follows. In Section 2, we provide a brief background on network coding and scalable video coding, and we summarize the previous work in the literature. In Section 3, we describe the proposed system. In Section 4, we evaluate the proposed system using actual video traces, and we conclude the paper in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">BACKGROUND AND RELATED WORK</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Brief Background</head><p>We present a brief overview of network coding and scalable video coding, which are employed in the proposed P2P streaming systems. More details about network coding can be found in <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b7">8]</ref> and the references therein, and more information about scalable video coding can be found in <ref type="bibr" target="#b30">[31]</ref> which describes the recent H.264/SVC standard.</p><p>Network Coding. In traditional packet forwarding methods, each node simply repeats data packets destined to other nodes in the network. In contrast, the network coding concept enables source and intermediate nodes to perform simple operations on packets before forwarding them. These operations allow nodes to send partial information to the destination. After receiving all the necessary partial information, the receiver will be able to recover the original packet. Packing information at intermediate or source nodes is called encoding and extracting real data from encoded ones is referred to as decoding. Encoding and decoding are linear operations over a Galois Field of size 2 l , which is denoted by GF(2 l ). A GF(2 l ) is a finite field in which operations are done on l bits of data.</p><p>Encoding is a linear combination of blocks, which is formulated as:</p><formula xml:id="formula_0">x = 񮽙 n i=1 ci · bi,</formula><p>where n is the total number of blocks, cis are coefficients of size l taken from GF (2 l ) and bis are data blocks of size k bytes. The symbol x represents one encoded block of size k. Each encoded block is a linear combination of the original blocks. Thus, it is uniquely identified by the set of coefficients included in the linear combination. Multiplications and additions are done over GF (2 l ).</p><p>Assuming a node receives set of (C 1 , x 1 ), (C 2 , x 2 ), . . . , (C m , x m ), where C i is the vector of coefficients (c i 1 , c i 2 , . . . , c i m ) for block x i . The decoding process is performed by solving:</p><formula xml:id="formula_1">x j = 񮽙 n i=1 c j i · M i</formula><p>, where M i s are unknowns. This is a system of linear equations with n unknowns and m equations, which can be solved by the Gaussian elimination method if m ≥ n. However, it is not necessary to receive all equations in order to decode all blocks. Usually some blocks can be recovered before receiving all encoded blocks.</p><p>Scalable Video Coding. The recently H.264/SVC video coding standard <ref type="bibr" target="#b30">[31]</ref> adds scalability to the widely used H.264/AVC video coding technique <ref type="bibr" target="#b36">[38]</ref>. The H.264/SVC standard supports temporal, spatial, and quality scalability at the same time. Temporal scalability is achieved by employing a hierarchical prediction structure among video frames belonging to the same Group-of-Pictures (GoP), in which frames of higher temporal layers can only be predicted from lower temporal layers. In the spatial scalability, a spatial layer s of a frame can be predicted from the s-th spatial layer of some other frames (in lower temporal layers), as well as lower spatial layers in its own frame. For providing quality scalability, there are two possibilities. The first one follows the spatial scalability structure, but assigns the same resolution and different quantization parameters to layers. This produces a Coarse-Grained Scalable (CGS) video with limited number of quality layers. A finer granularity can be provided by the second possibility, which uses MediumGrained Scalability (MGS) coding to divide a single CGS quality layer into multiple sub-layers, which are referred to as MGS layers. This is done by partitioning the residual DCT coefficients of a CGS layer into multiple MGS layers. A stream can be truncated at any CGS or MGS layer. In addition, some packets of an MGS layer can be discarded, while the remaining ones can still be decoded to improve quality. Packet discarding can be done in arbitrary ways, depending on the bitstream extraction process <ref type="bibr" target="#b1">[2]</ref>. H.264/SVC allows Up to 7 temporal, 8 spatial, and 16 quality layers <ref type="bibr" target="#b30">[31]</ref>. Using scalable video coding, users with high link capacities experience better video quality by receiving more layers, while others with lower bandwidth get quality proportional to the number of layers they can receive.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Related Work</head><p>P2P streaming systems are often divided into two major categories: tree-based and mesh-based (also known as swarm-based and data driven). In tree-based systems, peers organize themselves into one or more multicast trees and data will be pushed along the tree structure <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b15">16]</ref>. Treebased systems incur high costs for the management and maintenance the tree structure, especially with high peer churn rates. Mesh-based systems allow peers to self-organize in mesh-shaped graphs <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b38">40,</ref><ref type="bibr" target="#b39">41]</ref>. These systems usually yield better performance in practice as they are more robust against high-level of peer and network dynamics <ref type="bibr" target="#b21">[22]</ref>. Our work focuses on mesh-based P2P streaming systems.</p><p>Most of the currently deployed P2P streaming systems, e.g., <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b31">[32]</ref><ref type="bibr" target="#b32">[33]</ref><ref type="bibr" target="#b33">[34]</ref><ref type="bibr" target="#b39">41]</ref>, use nonscalable video streams. Thus, they serve a single-version of the video stream to all peers, and they have limited support for heterogeneous peers. To address these issues, number of works have proposed P2P streaming systems with scalable video streams, e.g. <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b23">24,</ref><ref type="bibr" target="#b29">30]</ref>. Cui and Nahrstedt <ref type="bibr" target="#b5">[6]</ref> present an algorithm to decide for each peer how to request video layers from a given set of senders. They assume layers have equal bitrate and provide equal video quality. Hefeeda and Hsu <ref type="bibr" target="#b11">[12]</ref> study this problem for Fine-Grained Scalable (FGS) videos, taking into account the rate-distortion model of the video for maximizing the perceived quality. Rejaie and Ortega <ref type="bibr" target="#b29">[30]</ref> present a framework for layered P2P streaming, where a receiver coordinates the transmission of video packets from multiple senders using a TCP-friendly congestion control mechanism. Lan et al. <ref type="bibr" target="#b16">[17]</ref> propose a scheduling algorithm for peers to request data from senders. The allocation of seed server re-sources in P2P streaming systems with scalable videos has also been considered in <ref type="bibr" target="#b23">[24]</ref>. While these works enable serving streams with different qualities to peers with diverse resources, none of them employs network coding to further enhance the utilization of peer resources.</p><p>Network coding has been shown to maximize the throughput and bring various performance benefits in different environments <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b18">19]</ref>. For example, in wireless networks, network coding improves the message delivery probability for ad-hoc multicast protocols <ref type="bibr" target="#b26">[27]</ref>, and overcomes broadcast storm problems <ref type="bibr" target="#b24">[25]</ref>. Network coding has also been proposed for P2P file-sharing systems. For example, in the Avalanche system <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b9">10]</ref>, the authors use randomized network coding to efficiently distribute files and to decrease the download time. The authors provide a method to ensure that any piece uploaded by a peer can be useful to other peers. However, these techniques are not applicable to P2P streaming systems, which have strict timing constraints and packet sequence requirements.</p><p>Several works have proposed using network coding for P2P streaming applications, including <ref type="bibr" target="#b34">[36,</ref><ref type="bibr" target="#b35">37]</ref>, where the authors address practical aspects of using network coding in such systems. Feng and Li <ref type="bibr" target="#b6">[7]</ref> develop analytical models to show the benefits of using network coding in live P2P streaming systems. All of these works confirm the viability of network coding in different applications. However, none of them has considered integrating network coding with scalable video coding to support wider ranges of clients. They basically improve the performance of single-layer P2P streaming systems.</p><p>Recently, a few works have considered both network coding and scalable video streams <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b40">42]</ref>. For example, Zhao et al. <ref type="bibr" target="#b40">[42]</ref> try to provide each end user in a multicast session with the maximum number of layers through solving an optimization problem using a greedy algorithm. While in <ref type="bibr" target="#b3">[4]</ref>, Chenguang et al. formulate an integer linear programming (ILP) problem to solve the same problem. Unlike our work, the above works target tree-based P2P streaming systems, and they assume that peers know the global tree structure and this structure is fairly static. These assumptions typically do not hold in practice. In contrast, we target the highly dynamic mesh-based P2P streaming systems with no assumptions/constraints on the topology.</p><p>Finally, Nguyen et al. <ref type="bibr" target="#b25">[26]</ref> propose hierarchical network coding (HNC) to be used with scalable video coding. HNC performs network coding across all layers of the same video stream to provide higher error protection to lower video layers. HNC is designed to reduce the impact of packet losses. However, it assumes that most users are capable of or willing to receive all video layers. For example, a limited bandwidth receiver that is interested in only 2-layer version of the stream may end up receiving data blocks from higher layers, although the data cannot be used. Thus, the bandwidth of peers can be wasted. This implies that HNC will not efficiently support heterogeneous clients. In addition, performing network coding on all layers will increase the size of the coefficient matrix needed for network coding operations. Since the time and space complexities of the encoding and decoding processes depend on the size of the coefficient matrix, HNC will impose a significant overhead on peers, which have limited-resources in the first place. Furthermore, the work in <ref type="bibr" target="#b25">[26]</ref> did not provide a rigorous quantitative evaluation of HNC in real dynamic P2P environments, as we do. Our proposed system performs intra-layer network coding and is fairly efficient.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">PROPOSED P2P STREAMING SYSTEM</head><p>In this section, we describe the proposed P2P live streaming system that employs network coding and scalable video coding. We start with a high-level overview, followed by more details.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Overview</head><p>We target mesh-based P2P streaming systems which have been widely used in practice <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b38">40,</ref><ref type="bibr" target="#b39">41]</ref>. In our system model, there are three entities: tracker, source, and peer. The tracker matches peers who are viewing the same video stream. This matching results in multiple dynamic swarms in the system. There is at least one source node in the system to introduce the original streams to peers. The source node (sometimes called seed server) also provides additional capacity in case that peers do not have enough resources and in the beginning of the sessions where very few peers exist. Source nodes perform network coding operations on the scalable video streams in order to prepare them for distribution in the system. Peers act as receiving clients as well as share some of their upload bandwidth to serve other peers. As receivers, peers decode network-coded data received from others and process this data to create proper scalable video streams and to ensure smooth video quality. As senders, peers encode video data using network coding with parameters based on their own upload capacity as well as the characteristics of the receiving peers.</p><p>A simplified model for the software architecture of a peer in our system is shown in <ref type="figure" target="#fig_0">Fig. 1</ref>. A similar model is used for source nodes, but with some differences as elaborated later. We do not address the design or optimization of trackers; the function of the tracker is orthogonal to the work presented in this paper. We also do not address other problems in mesh-based P2P streaming systems, including neighbor selection, gossip protocols (for exchanging data availability), incentive schemes, and overlay optimization-which all have been heavily researched in the literature. All of the above issues are abstracted in the Connection Manager component in <ref type="figure" target="#fig_0">Fig. 1</ref>, while our work is focused on the components in the shaded box in that figure. The separation and abstraction of functions enable us to support different P2P streaming systems with minimal changes in our design and code. Therefore, our work is fairly general.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Details</head><p>Peer Software Architecture and Functions. The main functions of a peer in our system are summarized in <ref type="figure" target="#fig_0">Fig. 1</ref>. We first describe the receiving part of the peer model.</p><p>At the receiver side, a peer interested in receiving a specific part of the video stream, determines and requests a proper number of encoded blocks through the Download Scheduler. The Download Scheduler computes the number of required encoded blocks based on the current available bandwidth and the number of video layers that the receiver is interested. It then assigns each of the active senders in the session blocks to send proportional to its upload bandwidth.</p><p>Immediately after receiving any encoded block through the network, the block is forwarded to the Progressive NC Decoder component. The Progressive NC Decoder rearranges the coefficients and encoded block matrices. This is done through one round of the Gauss-Jordan elimination method <ref type="bibr" target="#b35">[37]</ref>. The Gauss-Jordan elimination method is a version of the Gaussian elimination method which inserts zeros above and below the pivot elements in the matrix as it goes from the top row to the bottom one. In other words, the Gauss-Jordan elimination method converts a matrix to its reduced row echelon form (RREF) where every leading coefficient is 1 and it is the only nonzero element in its column.</p><p>Using the Gauss-Jordan elimination method allows the process of decoding to start before receiving all encoded blocks <ref type="bibr" target="#b35">[37]</ref>. It also enables the Progressive NC Decoder to immediately remove any dependent linear equations, as it converts all the coefficients of a received dependent linear row in the coefficient matrix into zeros. This signals the Progressive NC Decoder to eliminate this row from the coefficient matrix immediately after it is received. The Progressive NC Decoder will then investigate the coefficients matrix. If it is reduced to an identity matrix, the resulted encoded blocks are equal to the original blocks without any further decoding process. If the original data is obtained, it will passed to the SVC Layer Manager, which prepares the video data for the video player. After a block is successfully decoded, it will be stored in the Sharing Buffer for potential upload to other peers.</p><p>Next, we describe the uploading part of the peer model in <ref type="figure" target="#fig_0">Fig. 1</ref>. Network coding enables senders to provide receivers with partial information without needing a huge buffermap to keep availability of each partial data. The mechanism for producing such kind of partial data is as follow. Upon receiving a request at the sender side, random network coding is performed on the blocks of the requested layer. Random network coding is used because it provides robustness against frequent network topology changes, and it eliminates the need for having a centralized knowledge about the network topology <ref type="bibr" target="#b4">[5]</ref>. In random network coding, the encoding process is done through randomly and uniformly selecting coefficients from the Galois Field. It has been proved that by using random network coding even with a small Galois Field size, such as 8, the probability of selecting linearly dependent combinations is negligible <ref type="bibr" target="#b37">[39]</ref>. In order to reduce the network coding complexity, we need to reduce the number of blocks <ref type="bibr" target="#b22">[23]</ref>. For this purpose, in our network coding scheme, we apply network coding operations on blocks of each video layer separately. Furthermore, we use a Galois Field of size 8, as larger sizes increase the complexity while improving the results only marginally. Source Node Software Architecture and Functions. A source node prepares video streams before introducing them into the system. A video stream is encoded into multiple layers in a scalable manner. The video stream is divided into equal-length segments. Each segment contains a fixed number of video frames, e.g., 30 frames. Since we consider scalable streams, each video frame is composed of multiple layers. We apply network coding operations on the data contained in individual segments as follows. The video data of each layer in a segment is divided into fixed-size blocks. Then these blocks are encoded. Notice that different layers may contain different number of blocks, depending on the visual complexity of the video frame.</p><p>The encoding process is applied at the source nodes by using random network coding. On intermediate nodes, i.e., uploading peers, the blocks are re-encoded with different coefficients. In both cases, the coefficients of each block are attached to the block itself during transmission.</p><p>Overhead Analysis. There are two kinds of overhead imposed by the proposed streaming system: communication and computation. The communication overhead is due to attaching the encoding coefficients to the encoded data blocks. In practical applications, the size of the coefficients is small compared to the block size. The computation overhead is imposed by the encoding and decoding processes of the network coding scheme. These processes require quadratic number of operations in terms of the number of blocks in a segment. These operations are on finite fields and thus are performed as xor operations, which can be done efficiently by the processor. Therefore, most of the current commodity PCs can easily handle the encoding and decoding operations. 4. EVALUATION</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Experimental Setup</head><p>We have implemented the proposed P2P streaming system in Java. Our implementation performs all functions described in Section 3 and summarized in <ref type="figure" target="#fig_0">Fig. 1</ref>. Our implementation was validated by using actual video streams.</p><p>To conduct rigorous quantitative analysis of the proposed system under wide range of working conditions, we implemented a testing application to emulate the characteristics of realistic P2P streaming systems. This testing application enables us to conduct controllable and repeatable experiments with different parameters and large number of peers. We considered deploying our system on the PlanetLab testbed and on our own local area testbed. However, these testbeds would not allow us to control important parameters such as peer upload/download bandwidth, neither would they enable us to test under high churn rates, flash crowd scenarios, and large number of heterogeneous peers.</p><p>The setup of our experiments is as follows. We use multiple scalable video traces obtained from the Arizona State University video library <ref type="bibr">[35]</ref>. In particular, the results in this paper are based on three video streams: a demonstration from Sony, a clip from the Tokyo Olympics and a clip from NBC News. These videos are chosen because they have diverse characteristics in their quality and bit rates. This diversity is important to assess the performance of our system in real settings. Each video is encoded in 5 scalable layers and has a frame rate of 30 fps. The frame size is CIF (352x288) and each group-of pictures (GoP) has 16 frames. We use 10 minutes of each clip in our experiments. <ref type="table" target="#tab_0">Table 1</ref> summarizes the characteristics of these video streams.</p><p>We divided each video stream into segments, where the segment size is varied. Each layer of a segment is then encoded using network coding in a number of blocks. We use different block sizes for evaluating the performance of network coding. But in any given experiment, the block size is fixed for all layers in a segment and all segments in the video. This is done to reduce the computation complexity of the network coding process, as network coding with variable block sizes is expensive. Since the video visual content changes with time, the number of blocks in a segment varies with the size of the video frames in that segment.</p><p>We create a highly-dynamic P2P streaming system with more than 1,000 heterogeneous peers that are continually changing. The upload bandwidth values of peers are chosen according to the distribution given in <ref type="table" target="#tab_1">Table 2</ref>. This distribution is recommended based on actual measurement studies performed in <ref type="bibr" target="#b19">[20]</ref>. Peers in our system can randomly fail, and they join/leave the system following different probability distributions, where each probability distribution is chosen to create a specific testing scenario such as flash crowd arrivals and high peer churn rates. More details will be given in the corresponding experiments later.</p><p>We compare the proposed system (denoted by SVC+NC in the figures) against three different systems: (i) a system that uses scalable video coding only (denoted by SVC), (ii) a system that uses single layer video streams with network coding (denoted by SL+NC), and (iii) current systems that use single layer, nonscalable, streams (denoted by SL). We consider several performance metrics, including: (i) average streaming rate, (ii) average streaming quality, (iii) number of streaming requests served, and (iv) fraction of late frames. These performance metrics are computed across all peers in the system, for diverse video streams, under various network conditions, and different probabilistic distributions for peer behavior. Moreover, most of these metrics are computed on a frame by frame basis and consider each layer in every frame. Therefore, we believe that our experiments are comprehensive and the results are representative of real systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Results</head><p>We present the results of our extensive evaluation in the following. We first present the results for the performance metrics mentioned above. Then, we analyze the impact of several system parameters on the performance and robustness of the proposed system, specially in presence of high peer churn rates, flash crowd arrivals, and when different segment and block sizes are used.</p><p>Average Streaming Rate. We measure the average streaming rate during live streaming sessions. We define the streaming rate as the total amount of received video data per second. The average streaming rate is computed across all active peers and represents a basic performance metric.</p><p>We schedule 1,000 peers to uniformly at random join the P2P streaming system during the 10-min simulation time. We also schedule a faction of the peers to fail or depart the system uniformly at random during the simulation time. On overage, 10% of the peers leave the system at random times. For each streaming session, a receiver is randomly chosen. Then, a group of five senders that already have the requested stream are randomly chosen to serve the receiver.</p><p>We plot the results for three different video clips in <ref type="figure" target="#fig_1">Fig. 2</ref> as a CDF (cumulative distribution function). The figure clearly shows that the proposed SVC+NC system outperforms the other three systems by a wide margin. For example, in the Sony Demo video, less than 18% of the peers in our SVC+NC system obtain a streaming rate of 200 kbps or less, while more than 40% of the peers in the current single layer streaming systems receive at that low rate. On the other hand, almost 50% of the peers in our SVC+NC system receive a high streaming rate of at least 600 kbps, while this percentage is only about 30% in SVC and SL+NC, and 22% in SL systems.</p><p>Average Streaming Quality. Next, we consider the video quality for each active peer. Unlike the average streaming rate, which is a raw performance metric, the video quality depends on the characteristics of the video streams being served in the system and it is closer to the actual quality perceived by users. There are several methods for computing  the video quality. We choose the Y-PSNR (peak signal to noise ratio of the intensity component of the video) as our video quality metric, because it is simpler to compute and interpret by readers. We acknowledge that the Y-PSNR may not always be the most accurate quality metric for all videos, but it is sufficient for comparative study in this paper.</p><p>We compute the quality as the Y-PSNR of the frames received on time divided by the total number of frames. Then we take the average among all peers and plot the results in <ref type="figure" target="#fig_2">Fig. 3</ref>. The figure shows that the average quality in the SVC+NC system is consistently higher than that in the SVC, SL+NC, and SL systems. For example, for the NBC News video in <ref type="figure" target="#fig_2">Fig. 3(c)</ref>, the SVC+NC system yields up to 10 dB improvement in quality compared to the current single layer streaming systems. This is a substantial gain that will definitely be felt by users and will increase their satisfaction from the P2P streaming system. <ref type="figure" target="#fig_2">Fig. 3(c)</ref> also shows that the proposed SVC+NC outperforms the SVC and SL+NC systems by up to 5 dB, which is also a significant gain. The results for other videos indicate similar gains. In addition, the results in <ref type="figure" target="#fig_2">Fig. 3</ref> indicate that the video quality achieved by the SVC+NC system is more stable and smooth over time. For example, in <ref type="figure" target="#fig_2">Fig. 3(b)</ref>, there is a dramatic drop in quality for the SL system around 200 sec of the video because of the increased visual complexity of the video in this period. In contrast, the SVC+NC system did not suffer a large drop in quality.</p><p>In addition to the average video quality, we measure the fluctuations in the video quality. We quantify the fluctuations by measuring the standard deviation of the observed quality with time. We then compute error bars defined by three points: average quality minus one standard deviation, average quality, and average quality plus one standard deviation for each peer. We do not plot these error bars in <ref type="figure" target="#fig_2">Fig. 3</ref> because they clutter the <ref type="figure">figure.</ref> Our results show that the proposed system provides much smoother quality for peers than other systems. In particular, the quality fluctuations in the proposed SVC+NC system are about 100% less than the fluctuations observed in the current single layer streaming systems, and about 50% less than the fluctuations in the other SL+NC and SVC systems.</p><p>In summary, the results for the above two metrics (average streaming rate and quality) demonstrate that the proposed SVC+NC system outperforms the other systems in both raw as well as user-perceived performance dimensions. The reasons for this better performance can be summarized as follows. Single layer streaming systems are not flexible in terms of adapting the quality to the current network and peer conditions. They also do not provide optimal throughput. Therefore, they yield the worst performance. Streaming systems that use network coding with single layer videos increase the system throughput, but do not improve the flexibility of the single layer video streams. Thus, SL+NC systems improve the performance beyond what is achievable by SL systems. On the other hand, P2P streaming systems that use scalable video streams adapt well to network and peer dynamics, but they may not fully utilize peer resources. Therefore, SVC systems also improve the performance compared to SL systems. Combining scalable video streams with network coding achieves both flexibility and increased throughput. Thus, SVC+NC systems consistently provide superior performance compared to other systems.  Number of Streaming Requests Served. In <ref type="figure" target="#fig_3">Fig. 4</ref>, we plot the fraction of served requests in different streaming systems. We refer to a request as served when it is responded by neighbors and received on time by the requesting peer. We obtain fraction of served requests by computing the number of served requests made by active peers divided by the total number of requests. We compute this fraction every 20 seconds. The results in <ref type="figure" target="#fig_3">Fig. 4</ref> show that the proposed SVC+NC system serves more requests than the other systems. For example, for the NBC News video in <ref type="figure" target="#fig_3">Fig. 4(c)</ref>, up to 30% more requests can be served using the SVC+NC system than the SL system. Therefore, the proposed system not only provides better video quality, but also serves more requests from peers.</p><p>Fraction of Late Frames. Next, we analyze the fraction of late frames for all considered streaming systems. The fraction of late frames is obtained by dividing the number of late frames to the total number of requested frames. When a peer first joins the network, it waits for a few segments of the video according to its initial buffering delay. The initial buffering delay helps peers to maintain synchronized playback and cooperate with each other effectively <ref type="bibr" target="#b6">[7]</ref>. In all experiments, we let peers wait for two segments when they join the system as recommended by <ref type="bibr" target="#b6">[7]</ref>. We plot the CDF of the late frames in <ref type="figure" target="#fig_4">Fig. 5</ref>. The figure shows that in the SVC+NC system, more frames meeting their deadlines than in the other systems. For example, in <ref type="figure" target="#fig_4">Fig. 5(a)</ref>, in the single layer streaming system, about 16% of the peers received more than 80% of the frames after their deadlines. While in the proposed SVC+NC system, almost no peer observed that high fraction of late frames. As another example, <ref type="figure" target="#fig_4">Fig. 5(b)</ref> shows that the SVC+NC system achieves nearly 100% improvements over other systems in terms of the fraction of peers that observed no late frames: from about 20% of the peers in the SL, SL+NC, and SVC systems to about 40% in the SVC+NC system. Finally, <ref type="figure" target="#fig_4">Fig. 5(c)</ref> shows that there is no peer with more than 30% of late frames, while this fraction is almost 18%, 25% and 35% in SVC, SL+NC and SL systems respectively.</p><p>Impact of Churn Rate on Video Quality. We next study the impact of the churn rate on the streaming quality. In this scenario, we consider a highly dynamic peer-to-peer network with frequent arrivals and departures of peers. Maintaining a reasonable video quality in dynamic systems shows their robustness to frequent changes in network topology. In this experiment we will show that SVC+NC is more resilient and provides a more reliable peer-to-peer streaming system than the other systems.</p><p>In highly dynamic peer-to-peer systems, some peers join the system, start streaming and also contribute their resources to others. At the same time, other peers may be leaving the system, which will result in loss of upload resources and perhaps disruption of some on-going streaming sessions. We refer to the ratio of the total number of peers that join the streaming system during the simulation time to the total number of peers that leave the system as the churn rate. All arrivals and departures are scheduled according to a Poisson distribution during the simulation time. We vary the churn rate between 1 and 8. For each value of the churn rate. For example, a churn rate of 2 means that if x number of peers leave the system during the simulation time, 2x new peers will arrive during that period. A robust P2P stream-  ing system should utilize the resources brought by the new peers as well as provide them with good quality. We run the experiments for the three video streams in <ref type="table" target="#tab_0">Table 1</ref> and for each streaming system: SL, SL+NC, SVC, and SVC+NC. We measure the average quality perceived across all peers for each churn rate. We plot the results in <ref type="figure" target="#fig_5">Fig. 6</ref>. The results confirm the superior and stable performance of the proposed SVC+NC streaming system as several dBs in quality gain are observed in all cases. The figure also shows that as more peers join the quality for all peers improve, which is shown for high churn rates. This is because: the proposed SVC+NC system can: (i) increase the average throughput in the system since it uses network coding to harvest the resources of the new peers, and (ii) improve the quality by providing more video layers, which is enabled by the scalability nature of the video streams. We note that single layer streaming systems may actually suffer in presence of high churn rates, as shown in <ref type="figure" target="#fig_5">Fig. 6</ref>. This is because these systems take time to start effectively utilizing the resources of the new peers and they only provide a single version of the video streams. As the figure also shows, adding network coding to single layer streaming systems mitigates the first problem, but not the second: the average quality provided by SL+NC systems slightly improves as more peers join the system.</p><p>Impact of Flash Crowd Arrivals. In flash crowd arrivals, peers join the network in a short period of time. In this case, the demand for receiving the video data may become more than the available resources. Flash crowds scenarios put a substantial stress on the P2P streaming systems that strive to provide a reasonable and sustained video quality to peers.</p><p>Addressing flash crowd arrivals is important for practical systems as they often happen after the release of popular video clips. We change the average number of peer arrivals per minute from 10 to 60 with an increment of 10. Peers arrive uniformly at random during the simulation period. We allow up to 10% of the active peers to leave during the streaming sessions, which also happen at uniform random times. We measure the average quality in dB for all considered systems for each peer arrival rate. The results, shown in <ref type="figure" target="#fig_6">Fig. 7</ref>, demonstrate that while under very high peer arrival rates the quality rendered by all systems decreases because of the limited upload capacity, the SVC+NC system provides relatively better quality in flash crowd scenarios than other systems. The figure shows that there is at least 2 dB quality difference by the SVC+NC and SL systems (right lower corner of <ref type="figure" target="#fig_6">Fig. 7(b)</ref>) and up to 7 dB (left top corner of <ref type="figure" target="#fig_6">Fig. 7(c)</ref>).</p><p>Impact of Segment and Block Sizes. Finally, we investigate the effect of the segment and block sizes on the streaming quality of the proposed SVC+NC system. We vary the segment size from 0.5 to 5 sec. For each segment size, we vary the block size from 128 bytes to 4 kilobytes and we run the experiments for each considered streaming system. We measure the average streaming quality and plot the results in <ref type="figure" target="#fig_7">Fig. 8</ref>. A few observations can be drawn from this figure. First, decreasing the block size for network coding (up to 512 bytes) generally yields better video quality. This is because when blocks are small, a single segment will have many blocks. This allows multiple sending peers to cooperate and send different (non-redundant) encoded blocks. On the other hand, decreasing the block size below 512 bytes  yields marginal or no additional benefits. The second observation is that, the ideal segment size (in sec) varies for different video streams. This is because the videos used in the experiments have diverse average bit rates of: 850, 500, 325 Kbps for the Sony Demo, Tokyo Olympics, and NBC News videos, respectively. From our experiments and the results shown in <ref type="figure" target="#fig_7">Fig. 8</ref>, we have found that a segment should contain about 100 to 200 KB of video data. Thus, the actual segment size (in sec) will depend on the bit rate of the video stream distributed to peers. For example, a segment size of 1 sec yields the best performance for the Sony Demo video according to <ref type="figure" target="#fig_7">Fig. 8(a)</ref>. Given that the Sony Demo has an average bit rate 850 Kbps, the amount of video data in a segment is about 106 KB. Whereas a segment size of 4 sec provides the best performance for the NBC News video according to <ref type="figure" target="#fig_7">Fig. 8(c)</ref>, which means that the segment will contain about 4 × 325/8 = 162 KB.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">CONCLUSIONS AND FUTURE WORK</head><p>Most of the current P2P streaming systems use nonscalable video streams and thus they provide a single version for all receivers despite their diverse resources. These systems may also suffer from suboptimal utilization of peer upload bandwidth. In this paper, we showed that designing P2P streaming systems with scalable video coding and network coding can solve both of the above problems. We showed that the integration of the network coding and scalable video coding techniques improves the system performance beyond what is possible if each technique is used separately. We implemented the proposed system and conducted extensive evaluation study in realistic settings and with actual scalable video traces. The evaluation study confirms the significant potential performance gain, in terms of visual quality perceived by peers, average streaming rates, streaming capacity, and adaptation to high peer dynamics.</p><p>The work in this paper can be extended in multiple directions. For example, we are currently developing analytical models to analyze the performance of the proposed P2P live streaming system. We are also implementing the proposed system as a plug-in library that can be used in other streaming systems in order to enable them to benefit from scalable video streams and network coding methods.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Peer Software Architecture. Dashed arrows denote video data, and solid arrows denote control messages.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Average streaming rate achieved using different systems.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Average streaming quality achieved using different systems.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Number of served requests for different systems.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Fraction of late frames for different systems.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Impact of churn rate on the average video streaming quality.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Impact of flash crowd on video streaming quality.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Impact of Segment and Block Sizes on video streaming quality.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="true"><head>Table 1 : Characteristics of Videos used in the Ex- periments.</head><label>1</label><figDesc></figDesc><table>Video Trace 
Sony 
Demo 

Tokyo 
Olympics 

NBC 
News 
Average 
PSNR (dB) 

47.6 
42.7 
35.5 

Average Bit 
Rate (kbps) 

850 
500 
325 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>Table 2 :</head><label>2</label><figDesc></figDesc><table>Upload Bandwidths Distribution of peer. 
Fraction of Peers (%) 
10.0 14.3 8.6 12.5 2.2 1.4 6.6 28.1 
16.3 
Total Bandwidth (kbps) 
256 
320 384 448 512 640 768 1024 &gt; 1500 
Contributed Bandwidth (kbps) 150 
250 300 350 400 500 600 
800 
1000 

</table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Network information flow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ahlswede</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yeung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Theory</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1204" to="1216" />
			<date type="published" when="2000-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Optimized rate-distortion extraction with quality layers in the scalable extension of H.264/AVC</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Amonou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Cammas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kervadec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Pateux</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Circuits and Systems for Video Technology</title>
		<imprint>
			<date type="published" when="2007-09" />
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="1186" to="1193" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">SplitStream: high-bandwidth multicast in cooperative environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Castro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Druschel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kermarrec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Nandi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rowstron</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Singh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM Symposium on Operating Systems Principles (SOSP&apos;03)</title>
		<meeting>of ACM Symposium on Operating Systems Principles (SOSP&apos;03)<address><addrLine>Bolton Landing, NY</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-10" />
			<biblScope unit="page" from="298" to="313" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">On network coding based multirate video streaming in directed networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Chenguang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Yinlong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Ruizhe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Qingshan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE International Conference on Performance, Computing and Communications (IPCCC&apos;07)</title>
		<meeting>of IEEE International Conference on Performance, Computing and Communications (IPCCC&apos;07)<address><addrLine>New Orleans, LA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-04" />
			<biblScope unit="page" from="332" to="339" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Practical network coding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Chou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Jain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Allerton Conference on Communication, Control, and Computing (Allerton&apos;03)</title>
		<meeting>of Allerton Conference on Communication, Control, and Computing (Allerton&apos;03)<address><addrLine>Monticello, IL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Layered peer-to-peer streaming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Nahrstedt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM Workshop on Network and Operating System Support for Digital Audio and Video (NOSSDAV&apos;03)</title>
		<meeting>of ACM Workshop on Network and Operating System Support for Digital Audio and Video (NOSSDAV&apos;03)<address><addrLine>Monterey, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-06" />
			<biblScope unit="page" from="162" to="171" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">On large-scale peer-to-peer streaming systems with network coding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM Multimedia&apos;08</title>
		<meeting>of ACM Multimedia&apos;08<address><addrLine>Vancouver, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-10" />
			<biblScope unit="page" from="269" to="278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Network coding: an instant primer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Fragouli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Boudec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Widmer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCOMM Computer Communication Review</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="63" to="68" />
			<date type="published" when="2006-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Anatomy of a p2p content distribution system with network coding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gkantsidis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rodriguez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of International Workshop on Peer-to-Peer Systems (IPTPS&apos;06)</title>
		<meeting>of International Workshop on Peer-to-Peer Systems (IPTPS&apos;06)<address><addrLine>Santa Barbara, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Network coding for large scale content distribution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gkantsidis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rodriguez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE INFOCOM&apos;05</title>
		<meeting>of IEEE INFOCOM&apos;05<address><addrLine>Miami, FL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-03" />
			<biblScope unit="page" from="2235" to="2245" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Cooperative security for network coding file distribution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gkantsidis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rodriguez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE INFOCOM&apos;06</title>
		<meeting>of IEEE INFOCOM&apos;06<address><addrLine>Barcelona, Spain</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Rate-distortion optimized streaming of fine-grained scalable video sequences</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hefeeda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hsu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Multimedia Computing, Communications and Applications</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="28" />
			<date type="published" when="2008-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Adaptive H.264/MPEG-4 SVC video over IEEE 802.16 broadband wireless networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Hillestad</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Perkis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Genc</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Murphy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Murphy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Packet Video Workshop (PV&apos;07)</title>
		<meeting>of IEEE Packet Video Workshop (PV&apos;07)<address><addrLine>Lausanne, Switzerland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-11" />
			<biblScope unit="page" from="26" to="35" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Can Internet video-on-demand be profitable?</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ross</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM SIGCOMM&apos;07</title>
		<meeting>of ACM SIGCOMM&apos;07<address><addrLine>Kyoto, Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-08" />
			<biblScope unit="page" from="133" to="144" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">An algebraic approach to network coding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Koetter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Medard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Theory</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="782" to="795" />
			<date type="published" when="2003-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Bullet: high bandwidth data dissemination using an overlay mesh</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kostic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rodriguez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Albrecht</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Vahdat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM Symposium on Operating Systems Principles (SOSP&apos;03)</title>
		<meeting>of ACM Symposium on Operating Systems Principles (SOSP&apos;03)<address><addrLine>Bolton Landing, NY</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-10" />
			<biblScope unit="page" from="282" to="297" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A peer-to-peer architecture for efficient live scalable media streaming on Internet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Lan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Xue</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Gao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM Multimedia&apos;07</title>
		<meeting>of ACM Multimedia&apos;07<address><addrLine>Augsburg, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-09" />
			<biblScope unit="page" from="783" to="786" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Multicast multi-user ARQ</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Larsson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Wireless Communications and Networking Conference (WCNC&apos;08)</title>
		<meeting>of IEEE Wireless Communications and Networking Conference (WCNC&apos;08)<address><addrLine>Las Vegas, NV</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-04" />
			<biblScope unit="page" from="1985" to="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Linear network coding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yeung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Cai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Theory</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page">371</biblScope>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Substream trading: Towards an open P2P live streaming system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Panwar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Conference on Network Protocols (ICNP&apos;08)</title>
		<meeting>of IEEE Conference on Network Protocols (ICNP&apos;08)<address><addrLine>Orlando, FL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-10" />
			<biblScope unit="page" from="94" to="103" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Prime: peer-to-peer receiver driven mesh-based streaming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Magharei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rejaie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE INFOCOM&apos;07</title>
		<meeting>of IEEE INFOCOM&apos;07<address><addrLine>Anchorage, AK</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-05" />
			<biblScope unit="page" from="1415" to="1423" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Mesh or multiple-tree: a comparative study of live P2P streaming approaches</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Magharei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rejaie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Guo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE INFOCOM&apos;07</title>
		<meeting>of IEEE INFOCOM&apos;07<address><addrLine>Anchorage, AK</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-05" />
			<biblScope unit="page" from="1424" to="1432" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Methods for efficient network coding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Maymounkov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Harvey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Allerton Conference on Communication, Control, and Computing (Allerton&apos;06)</title>
		<meeting>of Allerton Conference on Communication, Control, and Computing (Allerton&apos;06)<address><addrLine>Urbana, IL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Efficient allocation of seed servers in peer-to-peer streaming systems with scalable videos</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mokhtarian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hefeeda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE International Workshop on Quality of Service (IWQoS&apos;09)</title>
		<meeting>of IEEE International Workshop on Quality of Service (IWQoS&apos;09)<address><addrLine>Charleston, SC</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009-07" />
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Wireless broadcasting using network coding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Bose</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Workshop on Network Coding, Theory, and Applications (NetCod&apos;07)</title>
		<meeting>of Workshop on Network Coding, Theory, and Applications (NetCod&apos;07)<address><addrLine>San Diego, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-01" />
			<biblScope unit="page" from="914" to="925" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Peer-to-peer streaming with hierarchical network coding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Cheung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE International Conference on Multimedia and Expo (ICME&apos;07)</title>
		<meeting>of IEEE International Conference on Multimedia and Expo (ICME&apos;07)<address><addrLine>Beijing, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-07" />
			<biblScope unit="page" from="396" to="399" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Codecast: A network-coding-based ad hoc multicast protocol</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gerla</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Yi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Medard</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006-10" />
			<publisher>IEEE Wireless Communications</publisher>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="76" to="81" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Overcoming untuned radios in wireless networks with network coding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Petrovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ramchandran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rabaey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Theory</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="2649" to="2657" />
			<date type="published" when="2006-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Pplive</surname></persName>
		</author>
		<ptr target="http://www.pplive.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">PALS: peer-to-peer adaptive layered streaming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rejaie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ortega</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM International Workshop on Network and Operating System Support for Digital Audio and Video (NOSSDAV&apos;03)</title>
		<meeting>of ACM International Workshop on Network and Operating System Support for Digital Audio and Video (NOSSDAV&apos;03)<address><addrLine>Monterey, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-06" />
			<biblScope unit="page" from="153" to="161" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Overview of the scalable video coding extension of the H.264/AVC standard</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Schwarz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Marpe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Wiegand</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Circuits and Systems for Video Technology</title>
		<imprint>
			<date type="published" when="2007-09" />
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="1103" to="1120" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sopcast</surname></persName>
		</author>
		<ptr target="http://www.sopcast.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Tvants</surname></persName>
		</author>
		<ptr target="http://www.tvants.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Uusee</surname></persName>
		</author>
		<ptr target="http://www.uusee.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Lava: A reality check of network coding in peer-to-peer live streaming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE INFOCOM&apos;07</title>
		<meeting>of IEEE INFOCOM&apos;07<address><addrLine>Anchorage, AK</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-05" />
			<biblScope unit="page" from="1082" to="1090" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">R2: Random push with random network coding in live peer-to-peer streaming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on Selected Areas in Communications</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1655" to="1666" />
			<date type="published" when="2007-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Overview of the h.264/avc video coding standard</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Wiegand</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Sullivan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Bjontegaard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Luthra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Circuits and Systems for Video Technology</title>
		<imprint>
			<date type="published" when="2003-07" />
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="560" to="576" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">A comparison of network coding and tree packing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">A</forename><surname>Chou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Jain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE International Symposium on Information Theory (ISIT&apos;04)</title>
		<meeting>of IEEE International Symposium on Information Theory (ISIT&apos;04)<address><addrLine>Chicago, IL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">A peer-to peer network for streaming multicast through the Internet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM Multimedia&apos;05</title>
		<meeting>of ACM Multimedia&apos;05<address><addrLine>Singapore</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">DONet/CoolStreaming: a data-driven overlay network for live media streaming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Yum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE INFOCOM&apos;05</title>
		<meeting>of IEEE INFOCOM&apos;05<address><addrLine>Miami, FL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-03" />
			<biblScope unit="page" from="2102" to="2111" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Lion: Layered overlay multicast with network coding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Multimedia</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1021" to="1032" />
			<date type="published" when="2006-10" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
