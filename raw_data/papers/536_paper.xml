<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:35+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Towards Survivability of Application-Level Multicast</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gal</forename><surname>Badishi</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">EE Department</orgName>
								<orgName type="department" key="dep2">EE Department</orgName>
								<address>
									<settlement>Technion</settlement>
									<country>Technion</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Idit</forename><surname>Keidar</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">EE Department</orgName>
								<orgName type="department" key="dep2">EE Department</orgName>
								<address>
									<settlement>Technion</settlement>
									<country>Technion</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Towards Survivability of Application-Level Multicast</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<note>Roie Melamed CS Department, Technion</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>This position paper focuses on challenges in providing survivable and scalable multi-point to multi-point reliable application-level multicast systems (ALMs) for very large groups in wide-area networks. A protocol deployed in such settings must be able to withstand frequent node failures as well as non-negligible message loss rates. A survivable system should also cope with uncooperative users. Moreover, in typical wide-scale multicast sessions, users frequently join and leave <ref type="bibr" target="#b0">[1]</ref>. Rapid joining and leaving, also called churn, may effectively cause denial of service (DoS) if handling joins and leaves induces high overhead.</p><p>Survivability also mandates withstanding attacks. One of the most devastating security threats faced by a distributed system is a DoS attack. Coping with DoS attacks is essential when deploying services in a hostile environment such as the Internet; in 2003, approximately ¡ ¢ of U.S. organizations were faced with DoS attacks <ref type="bibr" target="#b3">[4]</ref>.</p><p>As a first defense, one may protect a system against DoS attacks using network-level mechanisms <ref type="bibr" target="#b2">[3]</ref>. However, network-level filters cannot detect DoS attacks at the application level, when the traffic seems legitimate. This is especially true when the application performs intensive computations for each message, as occurs, e.g., with secure protocols based on digital signatures.</p><p>An attack that targets every node in a large system inevitably causes performance degradation, but also requires vast resources. In order to be effective even with limited resources, attackers target vulnerable parts of the system. E.g., consider a tree-based multicast protocol; by targeting a single inner node in the tree, an attacker can effectively partition the multicast group. Hence, eliminating single points of failure is an essential step in constructing survivable protocols.</p><p>More generally, our goal is to design a protocol that would not allow an attacker to increase the damage it causes by focusing on a subset of the nodes.</p><p>There are two leading approaches to building scalable ALMs: gossip-based (epidemic) protocols, and dynamic overlay networks. In order to be survivable, overlays require redundancy, as opposed to a single multicast tree. We begin by examining gossip, since it has no single points of failure, overcomes churn, and exhibits a graceful performance degradation as the number of faulty or uncooperative nodes rises <ref type="bibr" target="#b4">[5]</ref>. In Section 2 we summarize our work on Drum <ref type="bibr" target="#b1">[2]</ref>, a DoS-resistant gossip protocol.</p><p>In <ref type="bibr" target="#b1">[2]</ref>, we also present a systematic quantitative study of the effect of DoS on gossip protocols; we are not familiar with any previous attempts to quantify the impact of DoS attacks on a distributed system.</p><p>We note that gossip may induce high overhead, and only provides probabilistic reliability. Overlay networks can reduce the overhead and increase the reliability. In Section 3, we summarize our efforts on building Araneola, a robust multicast overlay that deals with churn with low overhead, and overcomes random failures of a certain percentage of nodes/links. However, this work does not address DoS and uncooperative users. Finally, in Section 4, we discuss remaining challenges and suggest directions for future research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Drum: Dos-Resistant Gossip</head><p>One may expect that a gossip-based system will not suffer from vulnerabilities to DoS attacks, since it can continue to be effective when many nodes fail. Surprisingly, we show in <ref type="bibr" target="#b1">[2]</ref> that gossip-based protocols can be extremely vulnerable to DoS attacks targeted at a small subset of the nodes. This occurs because an attacker can effectively isolate a small set of nodes from the rest of the group by attacking this set. To quantify the effects of DoS attacks, we measure their influence on the time it takes to propagate a message to £ £ ¢ of the nodes in the system, as well as on the average throughput nodes can receive, using asymptotic analysis, simulations, and measurements. Here, we include only exemplary results.</p><p>Solution. In <ref type="bibr" target="#b1">[2]</ref>, we present Drum (DoS-Resistant Unforgeable Multicast), a gossip-based multicast protocol, which, using a few simple ideas, eliminates common vulnerabilities to DoS attacks. Drum uses both the push and pull gossiping techniques in order to resist DoS attacks. Nodes attacked using the push channels can still receive messages using pull, and nodes whose pull channels are attacked can still send messages using push. In order to realize this, resources are separated and bounded for each operation. Thus, using the push channels does not affect the ability to utilize the pull channels, and vice versa. Fi-nally, well-known ports are solely used for communicating control messages, while data messages are delivered on random ports in order to further decrease the attacker's probability of launching an effective DoS attack.</p><p>In <ref type="bibr" target="#b1">[2]</ref> we present a mathematical analysis of Drum, and simulation results that validate the analysis. We have also implemented Drum in Java and tested it on a cluster of workstations. We prove analytically and show empirically that when an adversary has a large sending capacity, its most effective attack against Drum is an all-out attack that distributes the attacking power as broadly as possible. <ref type="figure" target="#fig_2">Figure 1</ref>(a) presents exemplary simulation results illustrating this property. Obviously, performance degradation due to a broad all-out DoS attack is unavoidable for any multicast protocol, and indeed all the tested protocols exhibit the same performance degradation under such a broad attack (see rightmost data point in <ref type="figure" target="#fig_2">Figure 1(a)</ref>).</p><p>Additionally, our results show that Drum can withstand severe DoS attacks, where na¨ıvena¨ıve protocols that do not take any measures against DoS attacks completely collapse. E.g., we prove that under an attack that focuses on a strict subset of the nodes, Drum's latency and throughput remain constant as the attack strength increases, whereas in traditional protocols, the latency grows linearly with the attack strength, and the throughput continuously degrades; the simulation results in <ref type="figure" target="#fig_2">Figure 1</ref>(b) illustrate this for the scenario that ¡ ¢ of the nodes are attacked. Pros. Drum, as all gossip-based protocols, operates well in adversarial scenarios where arbitrary subsets of nodes fail or are uncooperative. Additionally, Drum eliminates vulnerabilities to DoS attacks.</p><p>Cons. Drum is not bandwidth optimized; it gossips about each message identifier many times. Moreover, the rapid change in communication partners makes a reliable analysis of the correct operation of neighboring nodes difficult. Thus, incentivizing nodes to cooperate is problematic.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Araneola</head><p>In  , the number of nodes does not affect the overlay's resilience. Thus, Araneola can achieve high robustness while inducing a much smaller overhead than a gossip-based protocol.</p><p>Another important property of Araneola is its ability to deal with churn with a low overhead: each join, leave, or failure is handled locally, and entails the sending of only about ¤ ¢ messages in total. Remarkably, as illustrated in <ref type="figure" target="#fig_3">Figure 2</ref>(b), the cost of handling a single join or leave operation decreases as the join and leave rate increases. This is in contrast to virtually all existing structured peerto-peer overlays, with which the overhead for handling joins grows logarithmically with § .</p><p>Pros. Lower overhead and latency than in gossip-based protocols. Constant overhead for join/leave operations. Graceful degradation of performance as the failure rate increases. Cons. Araneola does not currently deal with DoS attacks, uncooperative behavior, and non-random failures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Challenges and Future Directions</head><p>We have seen examples of two ALMs. The first, Drum, uses simple techniques to mitigate the effects of DoS attacks on gossip-based protocols. These techniques can be used in other systems as well, and are generalized as follows: (i) allow other nodes to choose you as a neighbor, but also choose some neighbors by yourself; and (ii) minimize the use of well-known ports for communication. Moreover, the methodology used in <ref type="bibr" target="#b1">[2]</ref> can be used to analyze the impact of DoS on various systems, as well as to evaluate the effectiveness of mechanisms for mitigating this impact. Currently, Drum uses well-known ports to communicate control messages to new neighbors each round. Future research will analyze the use of pseudorandom ports as an alternative to well-known ports.</p><p>The second ALM, Araneola, builds an overlay network that strives to minimize the overhead incurred by operating in a dynamic environment, while maintaining good fault-tolerance properties. By building a low degree overlay, Araneola allows for better performance (lower overhead) than gossip protocols and high degree overlays. Naturally, using an overlay, a node's neighbors do not   change as rapidly as in gossip-based protocols. Future enhancements may exploit this attribute for: (i) efficient message authentication schemes using symmetric cryptography; and (ii) monitoring neighbors for uncooperative behavior.</p><p>It is currently a challenge to design an ALM that is both efficient in terms of bandwidth and latency even in dynamic environments (cf. Araneola), and operates well in adversarial scenarios, where an arbitrary set of nodes can be attacked (cf. Drum). In the future, Araneola may be extended to facilitate choosing neighbors according to the principles employed in Drum: choose some of the neighbors by yourself, and let some other nodes choose you as a neighbor.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>that</head><label></label><figDesc>Araneola's overlay achieves three important mathe- matical properties of ¢ -regular random graphs (random graphs in which each node has exactly ¢ neighbors) with § nodes: (i) its diameter grows logarithmically with § ; (ii) it is generally ¢ -connected; and (iii) it remains highly connected following random removal of linear-size sub- sets of edges or nodes. Figure 2(a) shows the resistance of Araneola's overlay to random edge removals: for each percentagë of removed edges, the graphs shows the av- erage size of the the largest connected component remain- ing in the overlay after a random¨% random¨ random¨% of the edges are removed, for overlays constructed with ¢ © and with ¢ © . It shows that for a fixed ¢ ©</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 1 :(</head><label>1</label><figDesc>Figure 1: Drum versus pull-based and push-based protocols: Average propagation time to £ £ ¢ of the correct nodes for different scenarios and two group sizes (simulations).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Araneola measurements: Overhead for handling churn and fault-tolerance of the overlay.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head></head><label></label><figDesc>[6], we present Araneola 1 , a scalable reliable ALM for highly dynamic wide-area environments. Araneola dis- seminates messages on an unstructured overlay in which each node has a small number of neighbors: for a tunable parameter</figDesc><table>¢ 
£ 
¤ 

, each node's degree is either 

¢ 

or 

¢ 
¥ 


, 
and roughly 90% of the nodes have degree 

¢ 

. This pa-
rameter can be tuned according to the desired resilience. 
Thanks to the use of low degree overlay, Araneola sends 
less packets per application message than gossip-based 
protocols or high degree overlays. 
We have implemented Araneola in Java and evaluated it 
extensively on up to 


¡ 
¦ 
¡ 
¡ 
¡ 

nodes. Our evaluation shows 

1 Araneola means "little spider" in Latin. 

</table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Collecting and modeling the join/leave behavior of multicast group members in the mbone</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">C</forename><surname>Almeroth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Ammar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">High Performance Distributed Computing (HPDC)</title>
		<imprint>
			<date type="published" when="1996-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Exposing and eliminating vulnerabilities to denial of service attacks in secure gossip-based multicast</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Badishi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Keidar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Sasson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The International Conference on Dependable Systems and Networks (DSN)</title>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
	<note>To appear</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Defining strategies to protect against TCP SYN denial of service attacks</title>
		<ptr target="http://www.cisco.com/warp/public/707/4.html" />
		<imprint/>
		<respStmt>
			<orgName>Cisco Systems</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Computer crime and security survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Csi/</forename><surname>Fbi</surname></persName>
		</author>
		<ptr target="http://www.gocsi.com/forms/fbi/pdf.jhtml" />
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Gossip versus deterministically constrained flooding on small networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Marzullo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Masini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">14th International Symposium on DIStributed Computing (DISC)</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="253" to="267" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Araneola: A scalable reliable multicast system for dynamic environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Melamed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Keidar</surname></persName>
		</author>
		<ptr target="http://www.ee.technion.ac.il/idish/Xchange/araneola.ps" />
	</analytic>
	<monogr>
		<title level="j">Electrical Engineering Department</title>
		<imprint>
			<biblScope unit="volume">474</biblScope>
			<date type="published" when="2004-03" />
		</imprint>
	</monogr>
<note type="report_type">Technion</note>
	<note>TR CCIT</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
