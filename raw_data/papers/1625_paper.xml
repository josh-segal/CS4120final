<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:39+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Some Remarks on Factor Graphs</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2003">Brest 2003</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans-Andrea</forename><surname>Loeliger</surname></persName>
							<email>loeliger@isi.ee.ethz.ch</email>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Information Technology and Electrical Engineering</orgName>
								<orgName type="institution" key="instit1">Signal Proc. Lab. (ISI)</orgName>
								<orgName type="institution" key="instit2">Swiss Federal Institute of Technology (ETH)</orgName>
								<address>
									<postCode>CH-8092</postCode>
									<settlement>Zürich</settlement>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Some Remarks on Factor Graphs</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2003">Brest 2003</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>factor graphs</term>
					<term>turbo signal processing</term>
					<term>gradient methods</term>
				</keywords>
			</textClass>
			<abstract>
				<p>The paper is a collection of remarks, some rather plain, on various issues with factor graphs. In particular , it is pointed out that powerful signal processing techniques such as gradient methods, Kalman filtering , and the particle filter can be used and combined in factor graphs.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Based on prior work by Wiberg et al. <ref type="bibr" target="#b0">[1]</ref> [2], factor graphs were introduced in <ref type="bibr" target="#b2">[3]</ref> and <ref type="bibr" target="#b3">[4]</ref>. The main point of these papers was to show that many known algorithms in coding, artificial intelligence, and signal processing may be viewed as instances of the summary-product algorithm that operates by message passing in the factor graph.</p><p>Factor graphs can of course also be used to develop new algorithms for particular applications, but the literature on such applications is still quite limited; examples include <ref type="bibr" target="#b4">[5]</ref> and <ref type="bibr" target="#b5">[6]</ref>.</p><p>For the past two years, we have been applying factor graphs to a wide variety of practical problems in areas ranging from communications over biomedical signal processing to fire detection devices. (Most of this is as yet unpublished, but see <ref type="bibr" target="#b6">[7]</ref> and <ref type="bibr" target="#b7">[8]</ref>.) It has become apparent to us that the factor graph notation is indeed extremely helpful for the development of practical algorithms. A key issue in most such applications is the coexistence of discrete and continuous variables; another is the harmonic cooperation of a variety of different signal processing techniques. Some remarks on these topics are given in the present paper.</p><p>The paper is structured as follows. In Section 2, we briefly review Forney-style factor graphs (called normal graphs in <ref type="bibr" target="#b8">[9]</ref>), which have become our preferred notation. Section 3 is a collection of remarks on some unrelated little issues that may be helpful to non-experts; none of this is new. In Section 4, we address some general issues with continuous variables. In Section 5, we outline the use of gradient methods for local message computations in factor graphs. Some conclusions are offered in Section 6. This paper is not an introduction to factor graphs; for such an introduction, see, e.g., <ref type="bibr" target="#b3">[4]</ref> [9] [10] <ref type="bibr" target="#b10">[11]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">FORNEY-STYLE FACTOR GRAPHS</head><p>A Forney-style factor graph (FFG) is a diagram as in <ref type="figure" target="#fig_0">Figure 1</ref> that represents the factorization of a function of several variables. E.g., assume that some function f (u, w, x, y, z) can be factored as</p><formula xml:id="formula_0">f (u, w, x, y, z) = f A (u, w, x)f B (x, y, z)f C (z). (1)</formula><p>This factorization is expressed by the FFG shown in <ref type="figure" target="#fig_0">Figure 1</ref>. In general, an FFG consists of nodes, edges, and "half edges" (which are connected only to one node), and there are the following rules:</p><p>• There is a node for every factor.</p><p>• There is an edge (or half edge) for every variable.</p><p>• The node representing some factor g is connected with the edge (or half edge) representing some variable x if and only if x is an argument of g.</p><p>Implicit in these rules is the assumption that no variable appears in more than two factors. This restriction is easily circumvented, however. For example, consider the factorization</p><formula xml:id="formula_1">f (x) = f A (x)f B (x)f C (x).<label>(2)</label></formula><p>We expand this into</p><formula xml:id="formula_2">f (x) = f A (x)f B (x )f C (x )δ(x − x )δ(x − x ), (3) f A x = x f C f B x</formula><p>Figure 2: Cloning of variables.</p><formula xml:id="formula_3">X - µ inX f Y ? µ inY Z - µ outZ Figure 3: Message passing.</formula><p>which is represented by the FFG in <ref type="figure">Figure 2</ref>. (The "δ" in (3) may be either a Kronecker delta or a Dirac delta, depending on the context.) The free use of auxiliary variables (such as x and x in <ref type="figure">Figure 2</ref>) is typical for Forney-style factor graphs.</p><p>Other than in Figures 1 and 2, we will usually denote the variables by capital letters and specific values ("realizations") of the variables with lowercase letters.</p><p>For FFGs, the basic sum-product rule for the computation of messages has a particularly simple form. For example, in <ref type="figure">Figure 3</ref>, the message out of node f along the edge Z is</p><formula xml:id="formula_4">µ outZ (z) = x y f (x, y, z) µ inX (x) µ inY (y). (4)</formula><p>We also recall that the sum in (4) may be replaced by other summary operators such as integration or maximization, cf. <ref type="bibr" target="#b3">[4]</ref>. In any case, a message is a "summary" of the graph "behind" it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">SOME SIMPLE REMARKS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Combining Information</head><p>Consider a situation as in <ref type="figure">Figure 4</ref>, where two codes share the coded symbols X k , k = 1, 2, 3, . . . In such cases, the correct handling of extrinsic information and intrinsic information is usually considered an issue that requires attention. Not so with factor graphs: the correct handling of extrinsic information and intrinsic information is automatic.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Mappers and Such</head><p>Consider a situation as in <ref type="figure">Figure 5</ref>, where two binary symbols, X A and X B , are mapped to a 4-AM symbol Z. Let f : Z 2 × Z 2 → {−3, −1, +1, +3} be this mapping and assume that x A is mapped to the Code 1</p><formula xml:id="formula_5">· · · · · · = = Code 2 · · · · · · X k X k+1 Channel . . . Y k Y k+1</formula><p>. . .  </p><formula xml:id="formula_6">- - f - - µ outX A - µ outX B - µ outZ - - f - µ inX A - µ outX B µ inZ</formula><formula xml:id="formula_7">δ f (x A , x B , z) = 1, if f (x A , x B ) = z 0, else<label>(5)</label></formula><p>The computation of all messages in and out of the node (cf. <ref type="figure" target="#fig_2">Figure 6</ref>) is immediate from the sumproduct rule (4). For example, we have</p><formula xml:id="formula_8">µ inX A (x A ) = x B ,z δ f (x A , x B , z) µ outX B (x B ) µ inZ (z),<label>(6)</label></formula><p>which expands to</p><formula xml:id="formula_9">µ inX A (0) = µ outX B (1) · µ inZ (+3) + µ outX B (0) · µ inZ (+1) (7) µ inX A (1) = µ outX B (0) · µ inZ (−1) + µ outX B (1) · µ inZ (−3).<label>(8)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Hybrid Equality Constraint</head><p>Consider an equality constraint between a variable X that takes values in some finite set X and a </p><note type="other">r r r r r r r r ? b ? b ? b ? b r ? r r ? r r ? r r ? r Figure 8: Quantizer.</note><p>real variable Y , cf. <ref type="figure" target="#fig_3">Figure 7</ref>. Such an equality constraint translates into a factor δ(x − y), which should be read as a Kronecker delta in x and a Dirac delta in y. According to the sum-product rule (4), the message out of the X-edge is</p><formula xml:id="formula_10">µ outX (x) = y δ(x − y) µ inY (y)<label>(9)</label></formula><formula xml:id="formula_11">= µ inY (x),<label>(10)</label></formula><p>which amounts to sampling the incoming density µ inY at the elements of X . The message out of the Y -edge is</p><formula xml:id="formula_12">µ outY (y) = x∈X δ(y − x) µ inX (x),<label>(11)</label></formula><p>a sum of weighted Dirac deltas.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Quantizers</head><p>Let X be a variable that takes on values in some finite set X . Consider a quantizer q : X → Y : x → q(y). The set Y of possible values of Y may be a finite subset of R, or it may consist of subsets (intervals) of R. Such a quantizer may be present in the original system or it may have been introduced to make some message computations more tractable (cf. Section 3.5). For the latter purpose, a quantizer as in <ref type="figure">Figure 8</ref> may be attractive. The messages through such a quantizer node are easily computed to be</p><formula xml:id="formula_13">µ outY (y) = x:q(x)=y µ inX (x)<label>(12)</label></formula><p>and</p><formula xml:id="formula_14">µ outX (x) = µ inY (q(x)).<label>(13)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Real-Sum Nodes</head><p>Consider the problem of computing messages through a node that represents the constraint where, for &gt; 0, the variables X take values in finite subsets X of R, and X 0 takes arbitrary values in R. The literal application of the sum-product rule (4) yields sums with about m =1 |X | terms, which is infeasible for large alphabets and/or large m. Note that such a node may be decomposed as in <ref type="figure" target="#fig_4">Figure 9</ref>, but this decomposition does not, by itself, solve the complexity problem.</p><p>In practical applications, however, the computations can usually be reduced to a manageable level. One way to achieve this is to insert a quantizer (e.g., as in <ref type="figure">Figure 8</ref>) between the "small" sum constraint nodes in <ref type="figure" target="#fig_4">Figure 9</ref>. By properly adjusting such quantizers to the noise level of the application, the performance loss can usually be kept negligible.</p><p>In summary, sum constraints among finitealphabet real variables can usually be handled computationally. One should not forget, though, that sum constraints among many variables dilute information: messages through such nodes tend to be uninformative.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">REMARKS ON CONTINUOUS VARIABLES</head><p>For continous variables, literal application of the sum-product or max-product update rules often leads to intractable integrals. Dealing with continuous variables thus involves the choice of suitable message types and of the corresponding (exact or approximate) update rules. So far, the following message types have proved useful:</p><p>Constant messages. The message is a "harddecision" estimate of the variable. This message type appears, e.g., if a decision-feedback equalizer is represented as a message passing algorithm. Another example isˆθisˆ isˆθ in Section 5 below.</p><p>Quantized messages are an obvious choice (cf. Section 3.5). However, quantization is usually infeasible in higher dimensions.</p><p>Mean and variance of (exact or assumed) Gaussian Messages. This is the realm of Kalman filtering. Kalman filtering as message passing in a factor graph was briefly treated in <ref type="bibr" target="#b3">[4]</ref> and worked out in more detail in <ref type="bibr" target="#b9">[10]</ref>, see also <ref type="bibr" target="#b10">[11]</ref> [12] <ref type="bibr" target="#b12">[13]</ref>.</p><p>The derivative of the message at a single point is the data type used for gradient methods, see Section 5.</p><p>List of samples. A probability distribution can be represented by a list of samples from the distribution. This data type is the basis of the particle filter <ref type="bibr" target="#b13">[14]</ref>; its use for message passing algorithms in general graphs seems to be largely unexplored, but promising.</p><p>Note that all these message types are consistent with the axiom that a message is a summary of everything "behind" the transmitting node. With these message types, it is possible to integrate most good known signal processing techniques as local message computations in a factor graph. In the next section, we outline such a translation for gradient methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">ON GRADIENT METHODS</head><p>The use of gradient methods for local message computations in factor graphs is illustrated in <ref type="figure">Fig</ref> Note that</p><formula xml:id="formula_15">d dθ log f (θ) = f (θ) f (θ) (17) = f A (θ)f B (θ) + f B (θ)f A (θ) f A (θ)f B (θ) (18) = d dθ log f B (θ) + d dθ log f A (θ) .<label>(19)</label></formula><p>Figure 10 may be a part of some bigger FFG. In this case, the nodes f A and f B may be summaries of the graph "behind" them. The functions f A and f B may be infeasible to represent, or to compute, in their entirety, but it may be easy to evaluate d dθ log f A (θ) (and likewise for f B ) at any given point θ.</p><p>A general gradient method to find a solutionˆθsolutionˆ solutionˆθ of (16) operates as follows.</p><p>1. The equality constraint node in <ref type="figure" target="#fig_0">Figure 10</ref> broadcasts some initial estimatê θ. The node f A replies by sending <ref type="figure" target="#fig_0">Figure 10</ref>: On gradient methods. and the node f B replies accordingly.</p><formula xml:id="formula_16">d dθ log f A (θ) θ=ˆθθ=ˆ θ=ˆθ f A P P P P P P P P P P i ˆ θ P P q f B ) ˆ θ 1 = Θ - ˆ θ</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">A new estimatê</head><p>θ is computed as</p><formula xml:id="formula_17">ˆ θ new = ˆ θ old + s · d dθ log f (θ) θ=ˆθθ=ˆ θ=ˆθ old (20)</formula><p>where s ∈ R is a positive step-size parameter.</p><p>3. The procedure is iterated as one pleases.</p><p>As always with message passing algorithms, there is much freedom in the scheduling of the individual operations. It can be shown, for example, that the standard LMS algorithm may be obtained in this way from a suitable factor graph. If second derivatives are also available, Newton-type methods can be used.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSIONS</head><p>• "Turbo signal processing"-iterative message passing in a graphical model-allows to combine and to extend many of the best known algorithms for detection and estimation problems, including gradient methods, Kalman filtering, and particle filters. Our accumulating experience confirms that the graphical framework helps to see such algorithmic options in practical problems.</p><p>• As factor graphs develop into a general tool for signal processing, there appear to be similar developments (with similar graphical models) in statistics, artificial intelligence, and neural networks, cf.</p><p>[15] <ref type="bibr" target="#b12">[13]</ref>.</p><p>• Dealing with continuous variables involves many design choices, and this is a vast field of research. Nevertheless, many good practical solutions are apparent already.</p><p>• Forney-style factor graphs provide an especially elegant notation.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: A Forney-style factor graph (FFG).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 4 :Figure 5 :</head><label>45</label><figDesc>Figure 4: Shared code symbol.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Messages through the mapper.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Hybrid equality node.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 9 :</head><label>9</label><figDesc>Figure 9: Sum constraint of several variables.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>- ure 10, which represents the global function f (θ) = f A (θ)f B (θ). The variable Θ is assumed to take val- ues in R or in R n . Suppose we wish to find</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Codes and iterative decoding on general graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Wiberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-A</forename><surname>Loeliger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kötter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Europ. Trans. Telecomm</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="513" to="525" />
			<date type="published" when="1995-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Wiberg</surname></persName>
		</author>
		<idno>No. 440</idno>
	</analytic>
	<monogr>
		<title level="j">Codes and Decoding on General Graphs. Linköping Studies in Science and Technology</title>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
		<respStmt>
			<orgName>Univ. Linköping</orgName>
		</respStmt>
	</monogr>
<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Factor graphs and algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">J</forename><surname>Frey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">R</forename><surname>Kschischang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-A</forename><surname>Loeliger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Wiberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 35th Allerton Conf. on Communications, Control, and Computing</title>
		<meeting>35th Allerton Conf. on Communications, Control, and Computing<address><addrLine>Allerton House, Monticello, Illinois</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="666" to="680" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Factor graphs and the sum-product algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">R</forename><surname>Kschischang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">J</forename><surname>Frey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-A</forename><surname>Loeliger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Information Theory</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="page" from="498" to="519" />
			<date type="published" when="2001-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Unified design of iterative receivers using factor graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">P</forename><surname>Worthen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Stark</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Information Theory</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="page" from="843" to="849" />
			<date type="published" when="2001-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Iterative multiuser decoding: unified framework and asymptotic analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Boutros</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Caire</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2001 IEEE Int. Symp. on Information Theory</title>
		<meeting>2001 IEEE Int. Symp. on Information Theory<address><addrLine>Washington DC</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page">317</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Joint decoding and carrier synchronization using factor graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dauwels</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-A</forename><surname>Loeliger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2003 IEEE Int. Symp. Information Theory</title>
		<meeting>2003 IEEE Int. Symp. Information Theory<address><addrLine>Yokohama, Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-07-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Low-complexity LFSR synchronization by forward-only message passing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Vigoda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dauwels</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Gershenfeld</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-A</forename><surname>Loeliger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Information Theory</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Codes on graphs: normal realizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">D</forename><surname>Forney</surname><genName>Jr</genName></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Information Theory</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="520" to="548" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Least squares and Kalman filtering on Forney graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-A</forename><surname>Loeliger</surname></persName>
		</author>
		<editor>Codes, Graphs, and Systems, R. E. Blahut and R. Koetter</editor>
		<imprint>
			<date type="published" when="2002" />
			<publisher>Kluwer</publisher>
			<biblScope unit="page" from="113" to="135" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">On factor graphs and electrical networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">O</forename><surname>Vontobel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-A</forename><surname>Loeliger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Mathematical Systems Theory in Biology, Communication, Computation, and Finance</title>
		<editor>J. Rosenthal and D. S. Gilliam</editor>
		<imprint>
			<publisher>Springer Verlag</publisher>
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Factor Graphs, and Electrical Networks. Internal report INT</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">O</forename><surname>Vontobel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kalman</forename><surname>Filters</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">; Isi-Itet</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eth</forename><surname>Zurich</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Graphical Models, draft of book</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">I</forename><surname>Jordan</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Sequential Monte Carlo Methods in Practice</title>
		<editor>A. Doucet, J. F. G. de Freitas, and N. J. Gordon</editor>
		<imprint>
			<date type="published" when="2001" />
			<publisher>Springer-Verlag</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
				<title level="m">Graphical Models: Foundations of Neural Computation</title>
		<editor>M. I. Jordan and T.J. Sejnowski</editor>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
