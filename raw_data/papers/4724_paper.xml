<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:59+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Tradeoffs between Stretch Factor and Load Balancing Ratio in Routing on Growth Restricted Graphs</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>July 25-28, 2004</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jie</forename><surname>Gao</surname></persName>
							<email>jgao@cs.stanford.edu.</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="laboratory">HP Systems Research Center. † Information Dynamics Laboratory, HP Labs</orgName>
								<orgName type="institution">Stanford University</orgName>
								<address>
									<postCode>94305., 94304</postCode>
									<settlement>Stanford, Palo Alto</settlement>
									<region>CA, CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Li</forename><surname>Zhang</surname></persName>
							<email>l.zhang@hp.com.</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="laboratory">HP Systems Research Center. † Information Dynamics Laboratory, HP Labs</orgName>
								<orgName type="institution">Stanford University</orgName>
								<address>
									<postCode>94305., 94304</postCode>
									<settlement>Stanford, Palo Alto</settlement>
									<region>CA, CA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Tradeoffs between Stretch Factor and Load Balancing Ratio in Routing on Growth Restricted Graphs</title>
					</analytic>
					<monogr>
						<title level="m">PODC&apos;04</title>
						<meeting> <address><addrLine>St. Johns, Newfoundland, Canada</addrLine></address>
						</meeting>
						<imprint>
							<date type="published">July 25-28, 2004</date>
						</imprint>
					</monogr>
					<note>Work was done when she was work-ing at the Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advan-tage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. ACM 1-58113-802-4/04/0007 ...$5.00.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>E1 [Data]: Data Struc- tures-graphs and networks</term>
					<term>F22 [Theory of Computation]: anal- ysis of algorithms and problem complexity-non-numerical algo- rithms and problems</term>
					<term>F23 [Theory of Computation]: analysis of algorithms and problem complexity-Tradeoffs between Complex- ity Measures General Terms: Theory, Algorithms Keywords: Routing, load balancing, wireless networks, growth re- stricted graphs</term>
				</keywords>
			</textClass>
			<abstract>
				<p>A graph has growth rate k if the number of nodes in any subgraph with diameter r is bounded by O(r k). The communication graphs of wireless networks and peer-to-peer networks often have small growth rate. In this paper we study the tradeoff between two quality measures for routing in growth restricted graphs. The two measures we consider are the stretch factor, which measures the lengths of the routing paths, and the load balancing ratio, which measures how evenly the traffic is distributed. We show that if the routing algorithm is required to use paths with stretch factor c, then its load balancing ratio is bounded by O((n/c) 1−1/k), where k is the graph&apos;s growth rate. We illustrate our results by focusing on the unit disk graph for modeling wireless networks in which two nodes have direct communication if their distance is under certain threshold. We show that if the maximum density of the nodes is bounded by ρ, there exists routing scheme such that the stretch factor of routing paths is at most c, and the maximum load on the nodes is at most O(min(ρn/c, n/c)) times the optimum. In addition, the bound on the load balancing ratio is tight in the worst case. As a special case, when the density is bounded by a constant, the shortest path routing has a load balancing ratio of O(√ n). The result extends to k-dimensional unit ball graphs and graphs with growth rate k. We also discuss algorithmic issues for load balanced short path routing and for load balanced routing in spanner graphs.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The study on routing in communication networks has a long history. Among all the routing algorithms, two most notable families are probably shortest path routing algorithms <ref type="bibr" target="#b8">[9]</ref> and the load balanced routing algorithms <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b7">8]</ref>. These two families can be regarded as to minimize two quality measures: the stretch factor of the paths, defined to be the worst case ratio between the length of the path used by the algorithm and the length of the shortest path, and the load balancing ratio, defined to be the worst case ratio between the maximum load incurred by the algorithm and that of the optimal load balancing routing algorithm. Both a small stretch factor and a small load balancing ratio are desirable properties for routing. However, these two properties have been studied separately in the past. This probably should not be so surprising as they are conflicting goals to some extent: for a general graph, one can easily construct examples such that a shortest path routing algorithm necessarily creates heavily loaded nodes, and a load balancing routing algorithm necessarily uses long paths.</p><p>In this paper, we study the tradeoffs between those two measures for the family of growth restricted graphs. In our definition, a graph has bounded growth rate k if the number of nodes in any subgraph with diameter r is bounded by O(r k ). Graphs with restricted growth rate arise in many practical networks, either due to physical constraints such as in wireless networks and VLSI layout networks, or due to geographical constraints such as in peer-to-peer overlay networks <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b23">24,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b16">17]</ref>. For example, the unit disk graph has been used extensively to model a wireless network, which consists of a set of nodes with direct communication between those pairs of nodes within distance 1 from each other. When the maximum density of the nodes, i.e., the maximum number of nodes covered by a unit disk, is a constant, the unit disk graph has growth rate 2. As another example <ref type="bibr" target="#b22">[23]</ref>, the Internet network distance defined by round-trip propagation and transmission delay forms a metric with restricted growth rate. Therefore, many algorithms for peerto-peer networks, such as media file sharing on Internet, content addressable overlay networks, exploit this property <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b16">17]</ref>. In this paper we show that for growth restricted graphs, there exists a tradeoff between the stretch factor and load balancing ratio with a dependency on the growth rate. Since the direct motivation of our work is from wireless networks, we will illustrate our results by using wireless network routing and then show the extension to general growth restricted networks.</p><p>The nodes in a wireless network are usually energy constrained as they are normally powered by batteries. Therefore it is crucial to balance the load on the nodes because an uneven use of the nodes may cause some nodes die much earlier, thus creating holes in the network. In addition, unbalanced use of the nodes may discourage them to participate in the routing. For these reasons, there has been extensive work on energy-aware routing in wireless networks <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b13">14]</ref>. But most previous work focus on minimizing the overall energy consumption. In this paper, we are more concerned about minimizing the maximum energy consumption of nodes in the network. Since a major amount of energy consumed by a wireless node is on communication, we measure the load of a routing scheme to be the maximum total size of packets that pass any node in the network. Then the load balancing problem can be formulated as minimizing the load and is exactly the classic load balancing routing for connections with permanent duration <ref type="bibr" target="#b7">[8]</ref>.</p><p>The ideal algorithm would be the one that achieves good performance in terms of both the stretch factor and the load balancing ratio. In some special cases, for example when the nodes are aligned on a line or in a narrow band <ref type="bibr" target="#b12">[13]</ref>, it is possible to design a routing algorithm achieving both a constant stretch factor and a constant load balancing ratio. This is however impossible in general -it is not difficult to construct a set of nodes and routing requests such that any routing algorithm limited to using paths with stretch factor c (or c-short paths) necessarily causes some node to have Ω(n/c) loads while the optimal load-balancing algorithm only loads O(1) packets on each node. Such an example, however, uses highly crowded nodes. In this paper, we show that if the nodes are not so crowded, then it is impossible to construct such a bad example. We use two metrics to measure the density of wireless nodes: the maximum density of a set of nodes is defined as the maximum number of nodes covered by any unit disk in the plane, and the average density as the average number of nodes covered by the unit disks centered at the nodes in the set. Both definitions appear naturally in analyzing wireless networks. In practice, we can expect the density of the wireless nodes to be low. Indeed, using multi-hop peer-to-peer communication to reduce the deployment and communication cost is exactly a goal of a wireless network. In a dense network, techniques such as clustering are often used to reduce routing complexity by routing on a smaller set of "backbone" nodes. The "backbone" nodes usually have constant density <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b11">12]</ref>.</p><p>In this paper, we show tradeoffs between the stretch factor and the load balancing ratio with a dependency on the density of the wireless nodes. Specifically, if the maximum density of a point set is ρ, then a c-short path routing can achieve a load balancing ratio of O(min( ρn/c, n/c)). In particular, if we use shortest path routing, i.e., when the stretch factor c is 1, the load balancing ratio is</p><formula xml:id="formula_0">O( √ ρn). When ρ is constant, it is O( √ n).</formula><p>Furthermore, all those bounds are tight asymptotically in the worst case. When nodes are not evenly distributed, the average density is a more appropriate measure. We obtain similar tradeoffs in terms of the average density.</p><p>Our tradeoffs rely on the fact that the number of nodes inside any disk is polynomial in the radius of the disk. Therefore, the results naturally extend to higher dimensional unit ball graphs and to graphs with restricted growth rate. We show that for a k dimensional unit-ball graph with maximum density ρ, the load balancing ratio of the optimal routing algorithms with a stretch factor c is bounded by O((n/c) 1−1/k ρ 1/k ), and for a graph with growth rate k, the load balancing ratio is O((n/c) 1−1/k ).</p><p>Another application of our results is in global routing in VLSI design <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b24">25]</ref>. In VLSI routing, given a graph (typically a mesh) which represents the physical wiring paths of a chip and a set of vertex pairs, one needs to connect every pair by a path in the graph.</p><p>The goal is to minimize the line width on each vertex. The seminal work of Raghavan and Thompson <ref type="bibr" target="#b25">[26]</ref> shows that by using the randomized rounding technique, one can approximate the optimal solution within a factor of O(log n/ loglog n). However, in <ref type="bibr" target="#b0">[1]</ref>, it is shown that if we only use a restricted set of paths, i.e. the paths that only make one bend, then the line width can be of an Ω( √ n) factor more than the optimal solution. Since the graph in VLSI routing is a graph with restricted growth rate due to physical constraint, our O( √ n) upper bound implies that the construction in <ref type="bibr" target="#b0">[1]</ref> is actually the worst possible case. Further, the bound holds as long as the underlying graph is similar to the unit disk graph with constant-bounded node density, which is the case due to the physical constraint.</p><p>In addition to the combinatorial bounds, we also observe that the on-line algorithm for virtual-circuit routing developed in <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4]</ref> can be adapted to obtain an on-line c-short-path routing algorithm that is O(log n) competitive in terms of load balancing ratio, compared with the optimal c-short-path routing algorithm. Another common approach of reducing routing complexity in the wireless network is to extract a sparse spanner graph <ref type="bibr" target="#b9">[10]</ref> from the unit-disk graph and only route packets on the spanner <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b19">20]</ref>. We also consider the load-balancing ratio of routing on spanner graphs compared to the optimal algorithm on the unit-disk graph and show a tight Θ(ρc 2 ) competitive ratio when the stretch factor of the spanner graph is c.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Preliminaries</head><p>Given an unweighted graph G = (S, E), we denote by |P | the number of points on a path P in the graph G. We assume that G is connected, otherwise we can consider each connected component individually. For any two points p, q ∈ S, denote by τ (p, q) the length of the shortest path between p and q. For any path P between p, q, the stretch factor ω(P ) of P is defined to be |P |/τ (p, q). P is called c-short if ω(P ) ≤ c. We say G has growth rate k if for any p ∈ S and any r ≥ 1, the number of nodes in B = {q|τ (p, q) ≤ r} is bounded by O(r k ).</p><p>A routing request is of the form r = (s r , t r , r ) where s r , t r , r represent the source, destination, and the packet size, respectively. For a set of requests R, a set of paths P satisfy R, denoted P |= R, if P = {Pr | r ∈ R} where Pr is a path between sr and tr. We define the stretch factor ω(P) of P to be max r∈R ω(P r ). A routing algorithm is called a c-short-path (or c-short) routing if it only uses paths with stretch factor at most c. For example, shortest path routing algorithm is a 1-short path routing algorithm.</p><p>For a set of requests R and paths P that satisfy R, the load (v) on v is the total size of the packets that pass v, i.e. (v) = v∈P r r. The load (P) of P is then defined to be maxv∈S (v). Define * (R) = min P|=R (P) to be the optimal load for satisfying R and c (R) = min P|=R∧ω(P)≤c (P) the optimal load by any c-short-path routing algorithm. For example, 1 (R) is the load created by a shortest path routing algorithm. For a routing algorithm A, denote by A(R) the set of paths produced by A to satisfy</p><formula xml:id="formula_1">R. Then A's approximation ratio (if A is off-line) or competitive ratio (if A is on-line) is defined to be maxR (A(R)) * (R)</formula><p>. We generally call it the load-balancing ratio. In this paper, our goal is to study the tradeoff between the stretch factor and the load-balancing ratio of routing algorithms in a network.</p><p>We now give definitions that are particular for wireless networks. Let S be a set of n points in the plane which represent wireless nodes. Let |pq| denote the Euclidean distance between two nodes p, q. The communication graph of S is an unweighted unit-disk graph U (S) = (S, E) of S, where (p, q) ∈ E iff |pq| ≤ 1. We say two points p, q see each other if |pq| ≤ 1. The maximum density (or density in short), ρ(S) of S, is defined as the maximum number of nodes in S covered by any unit disk (disk with radius 1). For each p ∈ S, denote by ρ(p) the number of points p sees (including p itself). Define the average density ¯ ρ(S) of S to be p∈S ρ(p)/n. Clearly, ¯ ρ(S) ≤ ρ(S). The following facts will be useful later.</p><p>Lemma 1. For any disk B with radius r ≥ 1,</p><formula xml:id="formula_2">1. |B ∩ S| = O(ρ(S)r 2 ); 2. |B ∩ S| = O(r n¯ ρ(S)).</formula><p>PROOF. Since B can be covered by O(r 2 ) unit disks, we have |B ∩ S| = O(ρ(S)r 2 ). For the second claim, suppose that there are x points in B ∩ S. We can partition B ∩ S into O(r 2 ) disjoint subsets such that all the points in one subset are mutually visible <ref type="bibr" target="#b0">1</ref> . Suppose that those sets are S 1 , . . . , S m , and let n i = |S i |. Therefore, i n 2 i ≤ n¯ ρ(S). By the Cauchy-Schwartz inequality, we have that</p><formula xml:id="formula_3">x 2 = ( i ni) 2 ≤ m( i n 2 i ) ≤ mn¯ ρ(S). Since m = O(r 2 ), x = O(r n¯ ρ(S)).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Tradeoffs in wireless network routing</head><p>If we consider the general case, it is only possible to obtain a weak tradeoff between the stretch factor and the load-balancing ratio.</p><p>The simple example in <ref type="figure" target="#fig_0">Figure 1</ref> shows that if we insist on using cshort paths, then the load-balancing ratio can be as bad as Ω(n/c).</p><p>There are 3c + 1 spots on a loop. Each spot contains n/c wireless nodes, except one spot has only one node o. The total number of nodes is 3n + 1. Only the nodes in adjacent spots are visible. If we make n/c requests, each from a distinct node on spot p to a distinct node on spot q. Any path that doesn't pass through o has length at least 3c, i.e., is not c-short path. Therefore, any c-short routing algorithm has to route the requests through o, i.e. o has load Θ(n/c).</p><p>On the other hand, the optimal load balancing routing algorithm can route the requests evenly along the path on the longer arc such that each node only passes O(1) packets. The above configuration uses a point set with high density. The main result of this paper is to show that there is a tradeoff between the stretch factor and the load-balancing ratio dependent on the density of the point set. In this section, we first present a tight tradeoff based on the maximum density. Then, we show a slightly weaker bound dependent on the average density.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Tradeoff based on the maximum density</head><p>Our main result for the maximum density is as follows:</p><p>Theorem 2. For any n nodes with the maximum density ρ and any set of requests R, c (R)// * (R) = O(min( ρn/c, n/c)). This bound is tight in the worst case. <ref type="bibr" target="#b0">1</ref> It's possible that two points in different subsets are visible.</p><p>As a special case of the above theorem, when the set of nodes has constant bounded density, then the load-balancing ratio of the optimal c-short path routing is bounded by O( n/c). In another special case, c = 1, the load-balancing ratio for shortest path routing is O( √ ρn). So shortest path routing on nodes with constant density achieves a load balancing ratio of O( √ n). We first prove the above theorem for the case of shortest path routing and extend the technique to prove Theorem 2.</p><p>Theorem 3. For any n nodes with the maximum density ρ and any set of requests R,</p><formula xml:id="formula_4">1 (R)// * (R) = O( √ ρn).</formula><p>PROOF. Suppose that p is the node with the maximum load if we use shortest path routing. Without loss of generality, we can assume that all the requests in R are routed through p by shortest path routing, because otherwise we can safely delete those requests that do not -this does not change the maximum load by shortest path routing but can only decrease the maximum load of the optimal routing algorithm. Suppose that the set of requests is R = {r 1 , . . . , r m } where r i = (s i , t i , i ) is a request from s i to t i with packet size i . We denote by * the maximum load of the optimal load balanced routing algorithm * (R). Since all the requests in R pass through p in shortest path routing scheme, the maximum load of shortest path routing,</p><formula xml:id="formula_5">1 (R) = = m i=1 i . We now wish to upper-bound α = // * .</formula><p>The intuition of the proof is that shortest path routing is optimal in the sense of the total loads it creates. If the load on p is high, the total load a shortest path routing creates is also necessarily high. This causes the optimal algorithm to create high total loads as well. The average load therefore cannot be too low, even if those loads can be evenly distributed. This intuition is made concrete by the following lemma.</p><p>We first give some notations. For each point q ∈ S, denote by R(q) all the requests that originate at q and by (q) the total size of those packets, i.e. PROOF. We partition Dτ into a set of log τ disjoint sets B k , 0 ≤ k ≤ log τ , where B0 is the unit disk centered at p and for k ≥ 1, B k is an annulus with an inner radius of 2 k−1 and an outer radius of 2 k . See <ref type="figure" target="#fig_2">Figure 2</ref>. Consider the set R k of the requests originating at some point in B k and a request r j = (s j , t j , j ) ∈ R k . Since the shortest path between s j and t j passes the point p, the length of the shortest path between s j and t j is at least the shortest path length between p and sj, i.e., τ (sj, tj) ≥ τ (p, sj) ≥ |psj| ≥ 2 k−1 . Now, suppose that Pj is the path from sj to tj produced by the optimal load-balanced routing algorithm. The number of points on P j is at least 2 k−1 . Let A j be the first 2 k−1 points on P j . Denote by S k the union of all the A j , i.e., S k = r j ∈R k A j . We study the total load produced by the optimal load balanced routing algorithm on the nodes inside S k . Firstly we have</p><formula xml:id="formula_6">(q) = r i ∈R(q) i . Write β(q) = (q)//, where = m i=1 i. Clearly q β(q) = 1.</formula><formula xml:id="formula_7">B 0 B 1 p 2 1 2 2 s j B 2</formula><formula xml:id="formula_8">v∈S k (v) ≥ r j ∈R k j |A j | = 2 k−1 r j ∈R k j .<label>(1)</label></formula><p>On the other hand, for any point a ∈ A j , |pa| ≤ |ps j | + |as j | ≤ 2 k + 2 k−1 = 3 · 2 k−1 . That is, all the points in A j are inside a disk with radius 3 · 2 k−1 centered at p. Since the nodes have maximum density ρ,</p><formula xml:id="formula_9">|S k | = O(ρ(3 · 2 k−1 ) 2 ).</formula><p>Since each node has load at most * = /α, we have that</p><formula xml:id="formula_10">v∈S k (v) ≤ |S k | * ≤ c 0 ρ(2 k−1 ) 2 /α ,<label>(2)</label></formula><p>for some constant c 0 &gt; 0. Combining <ref type="formula" target="#formula_8">(1)</ref> and <ref type="formula" target="#formula_10">(2)</ref>, we have that</p><formula xml:id="formula_11">r j ∈R k j ≤ c0ρ2 k−1 /α . Thus r j ∈R k β j = r j ∈R k j // ≤ c 0 ρ2 k−1 /α, for 1 ≤ k ≤ log τ . For the unit disk B 0 , we have that q∈B 0 β(q) = q∈B 0 (q)// ≤ |B 0 | * // ≤ ρρ * // = ρ/α .</formula><p>By summing up over all the k's, we have that</p><formula xml:id="formula_12">q∈D τ β(q) = q∈B 0 β(q) + log τ k=1 r j ∈R k β j ≤ ρ/α + log τ k=1 c 0 ρ2 k−1 /α ≤ c0ρτ /α .</formula><p>Now we proceed to prove Theorem 3. We can assume that for any q ∈ S, β(q) ≤ 1/3; otherwise * ≥ (q) &gt; /3, i.e. α &lt; 3. Now, consider the smallest disk D centered at p such that q∈D β(q) ≥ 1/2 .</p><p>We assume that there is only one node on the boundary of D -otherwise we can perturb (conceptually) the nodes so that the assumption is valid. Since β(q) ≤ 1/3 for any q, we have that </p><formula xml:id="formula_13">c 0 ρτ * /α ≥ q∈D β(q) ≥ 1/2 i.e. α ≤ 2c 0 ρτ * .<label>(3)</label></formula><p>On the other hand, for any point q / ∈ D, |pq| ≥ τ * . By the same argument used in the proof of Lemma 4, for any algorithm, the loads incurred by those requests originating at q are at least (q)τ * . Therefore, the total loads caused by such requests are at least</p><formula xml:id="formula_14">q / ∈D (q)τ * = q / ∈D β(q)τ * ≥ τ * /6 .</formula><p>The last inequality is due to that q / ∈D β(q) ≥ 1/6. Hence, the optimal load balancing routing algorithm can do no better than distributing these loads evenly on the n nodes. That is, * ≥ τ * /6n, i.e.</p><formula xml:id="formula_15">α = // * ≤ 6n/τ * .<label>(4)</label></formula><p>By combining <ref type="formula" target="#formula_13">(3)</ref> and <ref type="formula" target="#formula_15">(4)</ref>, we have that</p><formula xml:id="formula_16">α ≤ min(2c 0 ρτ * , 6n/τ * ) ≤ c 1 √ ρn ,</formula><p>for c 1 = √ 12c 0 . This proves Theorem 3. Now, we extend the result to c-short routing. PROOF OF THEOREM 2. We show that, for any set of requests R, we can construct a set of c-short paths that achieve the claimed upper bound. Consider the optimal routing that minimizes the maximum load. We divide R into two subsets R 1 and R 2 , where R 1 contains the requests that are routed by c-short paths in the optimal algorithm, and R2 contains those requests routed by non-c-short paths. We construct a set of paths P as follows. We include in P the paths that the optimum algorithm produced for requests in R 1 . For each request in R 2 , we add to P (any) shortest path between the source and the destination of that request. Clearly, all the paths in P are c-short. We now show that the maximum load caused by P is at most O(min( ρn/c, n/c) * (R)).</p><p>For each point q ∈ S, denote by * 1 (q), * 2 (q), the loads on q caused by, respectively, routing R1 and R2 by the optimal algorithm.</p><formula xml:id="formula_17">Let * 1 = maxq * 1 (q) and * 2 = maxq * 2 (q). Clearly, * ≥ max( * 1 , * 2 ) ≥ ( * 1 + * 2 )/2.</formula><p>For each point q ∈ S, denote by 2 (q) the loads on q caused by routing R 2 by using shortest path routing. Let 2 (R) = max q 2 (q). Clearly, c (R) ≤ (P) ≤ * 1 + 2 (R). We now bound 2(R)// * 2 by using almost the same argument as in the proof of Theorem 3. The only difference is that all the paths used to route requests in R 2 by the optimal algorithm are not cshort. Therefore, all the requests originating at nodes outside the disk D generate a total load of q / ∈D (q) · cτ * , which is equal or greater than cτ * /6. Then we can replace (4) with the following inequality</p><formula xml:id="formula_18">2 (R)// * 2 ≤ 6n/(cτ * ) .</formula><p>Since (3) is still valid, we have that</p><formula xml:id="formula_19">2 (R)// * 2 = min(2c 0 ρτ * , 6n/(cτ * )) = O(min( ρn/c, n/c)) .</formula><p>Therefore,</p><formula xml:id="formula_20">c (R) ≤ * 1 + 2 (R) = O(min( ρn/c, n/c))( * 1 + * 2 ) = O(min( ρn/c, n/c)) · * .</formula><p>This proves the upper bound in Theorem 2.</p><p>In the following, we show a lower bound construction. We only describe the lower bound construction for ρc ≤ n, i.e. ρn/c ≤ n/c. The other case is similar. Consider the example illustrated in <ref type="figure" target="#fig_4">Figure 3</ref>. The distance between u, v is 1. Take a parameter m &gt; 1 which will be determined later, we place k = ρm points p1, . . . , p k on a vertical line segment with length m and distance m away from u. Similarly, we create q 1 , . . . , q k with respect to v. On the horizontal line segment through u, v, we place about 2m points evenly. In addition, there is a path between every pair of p i and q i as drawn in <ref type="figure" target="#fig_4">Figure 3</ref>. Each path is about 4cm long and has 4cm points on it. Clearly, the maximum density of the point set is O(ρ). The shortest path between p i and q i goes through u, v and has length at most 3m. On the other hand, any other path connecting u, v has to go through the outside loop with length 4cm. So all the cshort paths connecting pi, qi have to pass u and v. Therefore, if we request to send a unit packet from p i to q i , for 1 ≤ i ≤ k, then the c-short path routing causes load k = ρm on u, v. On the other hand, we can use the outer path to route each packet, creating load 1 on each point. Thus, the load-balancing ratio of any c-short path routing of this example is Ω(ρm). The total number of points in the example is about Θ((ρm) · (cm)) = Θ(ρcm 2 ). Setting m = n/(cρ), we obtain the desired lower bound. We should emphasize that in the proof of Theorem 3, we do not restrict which shortest path to use when there are more than one shortest paths. That is, the bound holds no matter which shortest paths are used when there exist multiple shortest paths. However, the proof of Theorem 2 does use a set of c-short paths produced by the optimal algorithm. Therefore, the bound does not hold for arbitrary c-short paths. Actually, if we choose bad c-short paths, we may end up with a bound even worse than that of the shortest path routing. In section 5, we will present an algorithm to discover a set of c-short paths with the maximum load within O(log n) factor of the optimum load using c-short paths.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Tradeoff based on average density</head><p>We now show the tradeoff based on the average density of the point set. The benefit of considering average density is clear -it is applicable to a wider family of point sets, in particular to the point sets with uneven distribution.</p><p>Theorem 5. Given a set of n nodes S in the plane with average density ¯ ρ, for any set of requests R,</p><formula xml:id="formula_21">1 (R)// * = O(min( √ ¯ ρn log n, n)) .</formula><p>In addition, there exists example such that</p><formula xml:id="formula_22">c (R)// * = Ω( ¯ ρn/ max(1, log c)) .</formula><p>PROOF. The proof for the upper bound is similar to the proof of Theorem 3. We use the notation in the proof of Lemma 4. We take τ to be the diameter of the communication graph. τ = O(n). So D τ , a disk with radius τ centered at p, covers all the n nodes. Then we partition D τ into a set of log τ disjoint sets B k , 0 ≤ k ≤ log τ , where B0 is the unit disk centered at p and for k ≥ 1, B k is an annulus with an inner radius of 2 k−1 and an outer radius of 2 k . The only difference is that with the average density, by Lemma 1, we can only bound | ∪ r j ∈R k A j | = O( √ ¯ ρn2 k ), for 1 ≤ k ≤ log τ . Since each node has load at most * , we have that</p><formula xml:id="formula_23">2 k−1 r j ∈R k j ≤ c 0 √ ¯ ρn2 k−1 * , for some constant c 0 &gt; 0. Thus r j ∈R k j ≤ c 0 √ ¯ ρnn * , for 1 ≤ k ≤ log τ . We also know that r j ∈R 0 j ≤ ¯ ρρ * ≤ √ ¯ ρnn * ,</formula><p>since ¯ ρ ≤ n. By summing up for all the k's, we have that</p><formula xml:id="formula_24">1 (R) = = log τ k=0 r j ∈R k j ≤ c1 √ ¯ ρnn * log n ,</formula><p>for some constant c1. <ref type="figure" target="#fig_1">Figure 4</ref>. Lower bound of the load-balancing ratio for the optimal c-short routing with average density ¯ ρ.</p><formula xml:id="formula_25">v 1 · · · · · · · · · 1 p k q k u 1 u v u k v k Θ(c) Θ(c) p 1 q 1 c</formula><p>As for the lower bound, consider the example shown in <ref type="figure" target="#fig_1">Figure 4</ref>. In the figure, the distance between u, v is 1. There are c vertical bars with length 1, 2, . . . , c and with distance 0.5, 1.0, 1.5, . . . away from u. We place k nodes on each of the line segments evenly with k determined later. Symmetrically, we place nodes with respect to the node v. Label those nodes on the outside bars p 1 , . . . , p k and q 1 , . . . , q k , respectively, and those nodes on the bar closest to u, v to be u1, . . . , u k , and v1, . . . , v k , respectively. Again, we place nodes to connect every pair pi, qi as shown in the figure. The length of those paths is Θ(c). Now, we request to send a packet from p i to q i , for 1 ≤ i ≤ k. Again, each c-short path routing has to use the path through the nodes u, v, causing a load of k on u, v. On the other hand, the optimal algorithm can route the requests through the outside paths and create only load 1 to each node. Thus, the load-balancing ratio of any c-short routing algorithm is Ω(k). The total number of nodes in the figure is bounded by O(c · k). To bound the average density of the point set, we consider two types of points. For a point x on a vertical bar with length h, the number of points it sees is about Θ(k/h). Thus,</p><formula xml:id="formula_26">x ρ(x) = Θ( c h=1 k 2 /h) = Θ(max(1, log c) · k 2 ) .</formula><p>For a point y on the outside path, ρ(y) = Θ(k/c). Therefore, the average density ¯ ρ is</p><formula xml:id="formula_27">Θ((max(1, log c) · k 2 + ck(k/c))/n) = Θ(max(1, log c) · k 2 /n) .</formula><p>That is, k = Θ( ¯ ρn/ max(1, log c)), and the load-balancing ratio</p><p>is Ω( ¯ ρn/ max(1, log c)).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">VLSI routing</head><p>In VLSI routing, the task is to connect some given pairs of nodes by paths on a mesh. One important goal is to reduce the line width, i.e. the maximum number of paths that pass the same edge. Such a problem has been studied extensively <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b26">27,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b5">6]</ref>. A mesh can be realized as a unit disk graph of a set of points with constant bounded density. Thus, we have the following extension of our result to bound the line width in VLSI routing.</p><p>Corollary 6. If we are restricted to use c-short paths to route wires in a mesh, then the line width is within O( n/c) factor of the optimum solution. In particular, if we use (any) shortest paths, the approximation factor is O( √ n).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Unit ball graph in higher dimensions</head><p>Similar results hold for unit ball graphs in higher dimensions. The definitions in Section 2 extend naturally to points in higher dimensions. We can apply the same technique to obtain the following.</p><p>Theorem 7. For n point in R k with maximum density ρ, the loadbalancing ratio of the optimal c-short routing is O((n/c) 1−1/k ρ 1/k ).</p><p>In particular, the load-balancing ratio of (any) shortest path routing is O(n 1−1/k ρ 1/k ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Growth restricted graphs</head><p>If we examine the proof of Theorem 2, we can see that the only property we needed for the proof is that there are O(ρr 2 ) nodes inside any disk with radius r. Thus, the result extends immediately to graphs with small growth rate. In our definition, a graph has density ρ and growth rate k (or growth dimension k) if for any vertex v and any r &gt; 1, |B r (v)| ≤ ρr k , where B r (v) = {u|τ (u, v) ≤ r}, the ball with radius r centered at v. By using exactly the same argument, we have that Theorem 8. For a graph with density ρ and growth rate k, the loadbalancing ratio of the optimal c-short routing is O((n/c) 1−1/k ρ 1/k ).</p><p>In particular, the load-balancing ratio of (any) shortest path routing for a graph with constant density and growth rate k is O(n 1−1/k ).</p><p>We should note that there are several other definitions for capturing metrics with slow growth. For example, in <ref type="bibr" target="#b15">[16]</ref>, a metric has expansion rate k (or KR-dimension log k) if |B2r(v)| ≤ k|Br(v)|; and in <ref type="bibr" target="#b1">[2]</ref>, a metric has doubling constant k (or doubling dimension log k) if B 2r (v) is contained in the union of at most k balls with radius r. Both definitions imply that the size of B r is bounded by O(k log r ) = O(r log k ). On the other hand, we can construct a family of graphs, e.g. the comb graphs as shown in <ref type="figure" target="#fig_5">Figure 5</ref>, with constant density and growth rate but unbounded KR-dimension and unbounded doubling dimension. Therefore, our definition is broader in the sense that any graph with KR-dimension or doubling dimension d also has a growth dimension d.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">An algorithm for short path load balancing routing</head><p>In the previous section, we showed a combinatorial bound on the load balancing ratio for the optimal c-short routing algorithm. However, it is NP-hard to compute the set of c-short paths (actually even the shortest paths) that minimizes the maximum load. Here, we describe an algorithm that computes c-short paths with maximum load within an O(log n) factor of the optimum. And, it is not a metric with constant doubling dimension: the comb graph has diameter 2r, it can not be covered by a constant number of balls with diameter r, since the diameter of a set including two teeth of the comb is at least r + 1.</p><p>One general approach for approximation is by the randomized rounding technique <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b24">25]</ref>. But that technique cannot be directly applied to our case because of the restriction on the stretch factor -it will make the size of the linear programming problem exponentially large. But we show that the on-line virtual circuit routing algorithm by Aspnes et al. <ref type="bibr" target="#b2">[3]</ref> applies to our problem to obtain an O(log n) approximation ratio.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 9.</head><p>There is a polynomial time on-line c-short routing algorithm with load balancing competitive ratio O(log n) when compared to the optimal off-line c-short routing algorithm. The competitive ratio is tight in the worst case.</p><p>PROOF. We apply the method in <ref type="bibr" target="#b2">[3]</ref> with slight modification. In the algorithm in <ref type="bibr" target="#b2">[3]</ref>, a weight is assigned to each edge (or vertex in our case) according to the current load on the edge and the size of the request. Then for any new request, the lightest path 2 with respect to this weighting function is used to satisfy the request. Similarly, for c-short routing, we use the lightest path among all the c-short paths. We just need to show that this modification can be done in polynomial time, and it does find us an O(log n) approximation.</p><p>To see the former, we can use dynamic programming: given a pair of nodes (s, t), we iteratively compute, for every node u in the graph, the lightest path from s to u with length exactly L (this may include non-simple paths) for L = 1, 2, . . . , c · τ (s, t), where τ (s, t) denotes the shortest distance between s, t. This will give us the lightest c-short path connecting s and t in polynomial time.</p><p>The proof of the O(log n) competitive ratio follows from the argument in the proof of Theorem 5.2 in <ref type="bibr" target="#b2">[3]</ref>. By a close examination of that proof, we can see that it still holds even if we associate each request r with a subset of paths P r such that only a path in P r can be used to satisfy r. Therefore, restricting all the paths to be c-short is just a special case.</p><p>The lower bound construction in <ref type="bibr" target="#b6">[7]</ref> can be used to show that even in a mesh, any on-line c-short routing algorithm is Ω(log n) competitive compared to the optimal c-short routing algorithm. Actually, we can show a stronger result where any on-line algorithm is Ω(log n) competitive even when compared against the optimal off-line algorithm that only uses the shortest paths. The details will appear in the full version.</p><p>The above algorithm only discovers the paths but doesn't deal with the scheduling in the routing, for examples, the queueing principle when multiple packets need to be delivered from the same node at the same time, or the interference resolution when multiple nearby nodes transmit packets. The methods in <ref type="bibr" target="#b17">[18]</ref> or <ref type="bibr" target="#b21">[22]</ref> can be used for such scheduling after the path selection step.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Load-balancing ratio of routing on spanners</head><p>One important method to reduce the complexity of routing in wireless network is to construct a sparse spanner graph and route on the spanner graph <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b19">20]</ref>. A sub-graph G of a unit-disk graph U (S) is a c-spanner if the shortest path between any two points in G is cshort compared with U (S). Since a spanner graph has fewer edges than the unit-disk graph, the load balancing ratio on a spanner graph might be high. The following theorem provides a worst case tight bound.</p><p>Theorem 10. Suppose S is a set of n points in the plane with density ρ, and G is a c-spanner of U (S), for any requests R, * G (R)// * = O(ρc 2 ), where * G (R) ( * ) is the maximum load resulted by the optimal load-balancing routing algorithm on G (U (S)). The bound is tight in the worst case.</p><p>PROOF. For a set of requests R, consider the optimal solution P * on the unit-disk graph U . We now construct a solution on G from P * . For an edge uv on a path in P * , if it is not in G, then there must exist a path with length c in G because G is a c-spanner. We can then reroute the packet on that path. Clearly, this way we obtain a set of paths P in G that satisfy R. Now, consider a point p ∈ S. A packet can be redirected to it only if it is routed in the optimal solution through a point u which is at most distance c away from p. Or, u is in the disk with radius c and centered at p. There are O(ρc 2 ) such points. Therefore, the load on p is O(ρc 2 * ). As for the lower bound, we use the classic H-tree construction <ref type="bibr" target="#b20">[21]</ref>. We only show the construction for points with constant density. The extension to points with other density is easy -we just put ρ copies on each grid node. Consider Θ(c 2 ) points positioned on a grid as shown in <ref type="figure" target="#fig_6">Figure 6</ref>. Each little square of the grid has side length 1/2. The spanner G is composed of an H-tree and a "complement" skeleton joined by a single edge at the center of the grid o. So any path from a node on the H-tree to a node in the complement H-tree has to go through o. Clearly, G is a Θ(c)-spanner graph. Now we make a request from each leaf point of the H-tree to its nearby point on the complement part of the H-tree (see little arrow in <ref type="figure" target="#fig_6">Figure 6</ref>). The optimal solution can send the requests directly. However, in G, all the requests have to be routed through the point o. Therefore, the load-balancing ratio of the routing on this c-spanner is Ω(c 2 ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion</head><p>In this paper, we study the tradeoff between two important quality measures of routing algorithms for wireless networks and growthrestricted networks: the stretch factor for measuring the path length and the load balancing ratio for measuring the load balance. We show several tradeoffs based on the maximum and the average density of the wireless nodes. There is still a gap for the tradeoff when considering average density. Besides, all of our results are based on the worst case analysis. It would be interesting to study the tradeoff under some reasonable traffic model. The issue of interference between wireless communication links is not considered in this paper. A future direction is to study the tradeoff under proper interference models such as the one in <ref type="bibr" target="#b21">[22]</ref>.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. Each spot contains n/c nodes. The loop has 3c + 1 spots. The packets from spot p to q either go through node o, thus causing the node o to be heavily loaded, or route along a long path with length Ω(n/c).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Lemma 4 .</head><label>4</label><figDesc>Suppose that D τ is the disk with radius τ ≥ 1 centered at p, then q∈D τ β(q) ≤ c 0 ρτ /α, for some constant c 0 &gt; 0.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. Division of D τ into a set of disjoint sets B i . All the traffic pass through the center p by shortest path routing.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>q / ∈D β(q) ≥ 1/6 . Let τ * denote the radius of D. Then, by Lemma 4,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 .</head><label>3</label><figDesc>Figure 3. Lower bound of the load-balancing ratio for the optimal c-short routing with maximum density ρ.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 .</head><label>5</label><figDesc>Figure 5. The "comb" graph is a unit disk graph with constant bounded density. Therefore it's a graph with growth rate 2. It is not a metric with constant KR-dimension since |B 2r (v)| = Θ(r 2 ) and |Br(v)| = Θ(r). And, it is not a metric with constant doubling dimension: the comb graph has diameter 2r, it can not be covered by a constant number of balls with diameter r, since the diameter of a set including two teeth of the comb is at least r + 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 .</head><label>6</label><figDesc>Figure 6. Lower bound Ω(c 2 ) on the competitive ratio of load balanced routing algorithms on c-spanners.</figDesc></figure>

			<note place="foot" n="4"> Extensions The above results naturally extend to other routing problems and to a larger family of growth-restricted graphs.</note>

			<note place="foot" n="2"> we call it the lightest path, to be distinguished from the shortest path in the graph.</note>
		</body>
		<back>

			<div type="acknowledgement">
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Improved algorithms for routing on twodimensional grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Andrews</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bhatia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Leighton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Makedon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Norton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>Unpublished</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Bounded geometries, fractals, and low-distortion embeddings</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">K</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 44th Symposium on Foundations of Computer Science (FOCS &apos;03)</title>
		<meeting>44th Symposium on Foundations of Computer Science (FOCS &apos;03)</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="534" to="543" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Online machine scheduling with applications to load balancing and virtual circuit routing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Aspnes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Azar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Fiat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Plotkin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Waarts</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 25th ACM Symposium on Theory of Computing</title>
		<meeting>25th ACM Symposium on Theory of Computing</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="623" to="631" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Throughputcompetitive on-line routing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Awerbuch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Azar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename><surname>Plotkin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Foundations of Computer Science</title>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="32" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">On-line load balancing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Azar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">On-line Algorithms: The State of the Art</title>
		<editor>A. Fiat and G. Woeginger</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1998" />
			<biblScope unit="volume">1442</biblScope>
			<biblScope unit="page" from="178" to="195" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">An optimal shortest-path routing policy for network computers with regular mesh-connected topologies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Badr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Podar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1362" to="1371" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">On-line routing in all-optical networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Bartal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Leonardi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">221</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="19" to="39" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Online Computation and Competitive Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Borodin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>El-Yaniv</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
			<publisher>Cambridge University Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Introduction to Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">H</forename><surname>Cormen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">E</forename><surname>Leiserson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Rivest</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<publisher>MIT Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Spanning trees and spanners</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Eppstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Computational Geometry</title>
		<editor>J.-R. Sack and J. Urrutia</editor>
		<meeting><address><addrLine>North-Holland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Discrete mobile centers. Discrete and Computational Geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Guibas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hershberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zhu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="45" to="63" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Geometric spanner for routing in mobile networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">J</forename><surname>Guibas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hershberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zhu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2nd ACM Symposium on Mobile Ad Hoc Networking and Computing (MobiHoc 01&apos;)</title>
		<meeting>2nd ACM Symposium on Mobile Ad Hoc Networking and Computing (MobiHoc 01&apos;)</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="45" to="55" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Load balanced short path routing in wireless networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM&apos;04</title>
		<meeting>IEEE INFOCOM&apos;04</meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Goldsmith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Wicker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Special Issue: Energyaware ad hoc wireless networks</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="volume">9</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A survey of energy efficient network protocols for wireless networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">E</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">M</forename><surname>Sivalingam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Agrawal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-C</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Wireless Networks</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="343" to="358" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Find nearest neighbors in growthrestricted metrics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Karger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ruhl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM Symposium on Theory of Computing</title>
		<meeting>ACM Symposium on Theory of Computing</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="741" to="750" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">The intrinsic dimensionality of graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Krauthgamer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 35th ACM symposium on Theory of computing</title>
		<meeting>the 35th ACM symposium on Theory of computing</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="438" to="447" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Packet routing and job-shop scheduling in O(congestion+dilation) steps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">T</forename><surname>Leighton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">M</forename><surname>Maggs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">B</forename><surname>Rao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Combinatorica</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="167" to="186" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Methods for message routing in parallel machines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Leighton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">128</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="31" to="62" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Distributed construction of planar spanner and routing for ad hoc networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X.-Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Calinescu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-J</forename><surname>Wan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE INFOCOM</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="1268" to="1277" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Introduction to VLSI systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Mead</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Conway</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1980" />
			<publisher>Addison-Wesley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Energy, congestion and dilation in radio networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Meyer Auf De Heide</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Schindelhauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Volbert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Grünewald</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th ACM symposium on Parallel algorithms and architectures</title>
		<meeting>the 14th ACM symposium on Parallel algorithms and architectures</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="230" to="237" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Predicting Internet network distance with coordinates-based approaches</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFO-COM</title>
		<meeting>IEEE INFO-COM</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="170" to="179" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Accessing nearby copies of replicated objects in a distributed environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">G</forename><surname>Plaxton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rajaraman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">W</forename><surname>Richa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM Symposium on Parallel Algorithms and Architectures</title>
		<meeting>ACM Symposium on Parallel Algorithms and Architectures</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="311" to="320" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Probabilistic construction of deterministic algorithms: approximating packing integer programs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Raghavan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comp. and System Sciences</title>
		<imprint>
			<biblScope unit="page" from="130" to="143" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Provably good routing in graphs: regular arrays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Raghavan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">D</forename><surname>Thompson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th annual ACM Symposium on Theory of Computing</title>
		<meeting>the 17th annual ACM Symposium on Theory of Computing</meeting>
		<imprint>
			<date type="published" when="1985" />
			<biblScope unit="page" from="79" to="87" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Competitive source routing on tori and meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T.-H</forename><surname>Yeh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-M</forename><surname>Kuo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-L</forename><surname>Lei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Yen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ISAAC: 8th International Symposium on Algorithms and Computation</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="82" to="91" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
