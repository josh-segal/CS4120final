<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:34+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Predicting Replicated Database Scalability from Standalone Database Profiling</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>April 1-3, 2009</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sameh</forename><surname>Elnikety</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Microsoft Research Cambridge</orgName>
								<address>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steven</forename><surname>Dropsho</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Google Inc. Zurich</orgName>
								<address>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Emmanuel</forename><surname>Cecchet</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">University of Massachusetts</orgName>
								<address>
									<settlement>Amherst</settlement>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Willy</forename><surname>Zwaenepoel</surname></persName>
							<affiliation key="aff3">
								<orgName type="institution">EPFL</orgName>
								<address>
									<settlement>Lausanne</settlement>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Predicting Replicated Database Scalability from Standalone Database Profiling</title>
					</analytic>
					<monogr>
						<meeting> <address><addrLine>Nuremberg, Germany</addrLine></address>
						</meeting>
						<imprint>
							<date type="published">April 1-3, 2009</date>
						</imprint>
					</monogr>
					<note>Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. 978-1-60558-482-9/09/04...$5.00.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>D45 [Reliability]: Fault-tolerance</term>
					<term>D48 [Performance]: Measurements, Modeling and prediction, Operational analysis, Queuing theory</term>
					<term>H24 [Systems]: Distributed databases, Transaction processing General Terms Measurement, Performance, Design, Reliability, Experimentation Keywords database replication</term>
					<term>single-master systems</term>
					<term>multi-master systems</term>
					<term>generalized snapshot isolation</term>
				</keywords>
			</textClass>
			<abstract>
				<p>This paper develops analytical models to predict the throughput and the response time of a replicated database using measurements of the workload on a standalone database. These models allow workload scalability to be estimated before the replicated system is deployed, making the technique useful for capacity planning and dynamic service provisioning. The models capture the scalability limits stemming from update propagation and aborts for both multi-master and single-master replicated databases that support snapshot isolation. We validate the models by comparing their throughput and response time predictions against experimental measurements on two prototype replicated database systems running the TPC-W and RUBiS workloads. We show that the model predictions match the experimental results for both the multi-master and single-master designs and for the various workload mixes of TPC-W and RUBiS.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Predicting the performance of replicated databases is important for their wide adoption. Performance models are employed for capacity planning <ref type="bibr" target="#b22">[Lazowska 1984]</ref> and for dynamic service provisioning <ref type="bibr">[Urgaonkar 2005b</ref>] as in data centers that host several e-commerce applications and receive external loads that vary with the diurnal cycles and seasonal effects. To the best of our knowledge, it is not possible yet to know how an application is going to scale on a replicated database without actually building the replicated system and running the application with a scaled workload.</p><p>In this paper, we develop analytical models that predict application workload scalability on a replicated database system. Performance of such replicated systems depends on the workload parameters. We demonstrate that measurements of the workload running on a standalone system capture sufficient information for our models to predict the performance as more replicas are added. The models are designed for middleware-based replicated systems in a LAN environment employing snapshot isolation and running transactional workloads from e-commerce.</p><p>Our models borrow from prior work in calculating abort rates by <ref type="bibr">Gray et al.</ref> [ <ref type="bibr" target="#b14">Gray 1996]</ref> and from modeling update propagation by <ref type="bibr">Jiménez-Peris et al.</ref> [ <ref type="bibr" target="#b17">Jiménez-Peris 2001]</ref>, but go beyond these works by predicting throughput and response time estimates that combine update propagation overhead and conflicts, rather than calculating upper bounds on system scalability.</p><p>We model both multi-master systems (in which each replica handles both read-only and update transactions) and single-master systems (in which the master replica executes update transactions and slave replicas execute read-only transactions). We validate the models by comparing their predictions against the measured performance of prototypes for both the multi-master and single-master systems. While we are aware of the many complexity and availability tradeoffs between single-and multi-master replication, in this paper we focus only on performance prediction.</p><p>The contributions of this work are the following: (1) We derive analytical models that predict the performance of multi-master and single-master replicated databases running snapshot isolation. (2) We show how to use the analyt-ical models to predict the performance of the two designs from workload measurements of a standalone system. (3) We validate the models by comparing their predictions against experimental measurements of prototype implementations.</p><p>The remainder of the paper is structured as follows: Section 2 presents the necessary background to follow the analytical models, which are derived in Section 3. Section 4 shows how to estimate model parameters. We describe the implementation of the prototype systems in Section 5 and experimentally validate the models against the prototype systems in Section 6. We discuss related work in Section 7, and present the conclusions in Section 8.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Background</head><p>Snapshot isolation (SI). Snapshot isolation (SI) <ref type="bibr" target="#b1">[Berenson 1995</ref>] is an optimistic multi-version database concurrency control model for centralized databases. SI achieves high concurrency with low conflicts at the cost of using more space (employing multiple versions of data items) and aborting (rather than blocking and reordering) few update transactions. When a transaction begins, it receives a logical copy, called snapshot, of the database for the duration of the transaction. This snapshot is the most recent version of the committed state of the database. Once assigned, the snapshot is unaffected by (i.e., isolated from) concurrently running transactions. A read-only transaction can always commit after reading from its snapshot. An update transaction commits if it does not have a write-write conflict with any committed update transaction that ran concurrently. When an update transaction commits, it produces a new version of the database. The granularity of conflict detection is typically a row in a database table (i.e., a tuple in a relation).</p><p>SI has attractive performance properties. Most notably, read-only transactions do not get blocked or aborted, and they do not cause update transactions to block or abort, making SI particularly suitable for read-dominated workloads with short updates as in e-commerce environments.</p><p>Many database vendors use SI, e.g., PostgreSQL, Microsoft SQL Server and Oracle. SI is weaker than serializability, but in practice many applications run serializably under SI <ref type="bibr" target="#b6">[Elnikety 2005</ref><ref type="bibr">, Fekete 2005b</ref><ref type="bibr" target="#b9">, Fekete 1999</ref>, including the widely used database benchmarks TPC-C, TPC-W and RUBiS. Generalized snapshot isolation (GSI). Generalized snapshot isolation (GSI) <ref type="bibr" target="#b6">[Elnikety 2005</ref>] extends SI to replicated databases such that the performance properties of SI in a centralized setting are maintained in a replicated setting. In addition, workloads that are serializable under SI are also serializable under GSI. When a transaction starts, it receives the most recent snapshot at the replica where it executes. Although this local snapshot might be slightly older than the globally latest snapshot, it is available immediately without the need for additional communication. A read-only transaction executes entirely locally at the receiving replica. An update transaction executes first locally at the receiving replica. Then at commit, the writeset of the transaction is extracted and a certification service is invoked. The certification service detects system-wide writewrite conflicts. If no conflict is detected the transaction commits, otherwise it aborts. The writeset  of an update transaction captures the transaction effects and is used both in certification and in update propagation. Multi-master replication. In a multi-master (MM) system <ref type="bibr" target="#b7">[Elnikety 2006</ref><ref type="bibr" target="#b8">, Elnikety 2007</ref><ref type="bibr" target="#b23">, Lin 2005</ref>, each replica executes both readonly and update transactions. The replication middleware resolves conflicts by aborting conflicting update transactions. The MM system consists of a load balancer, several database replicas and a certifier that certifies update transactions to prevent write-write conflicts. Single-master replication. In a single-master (SM) system <ref type="bibr" target="#b4">[Daudjee 2006</ref><ref type="bibr" target="#b14">, Gray 1996</ref><ref type="bibr" target="#b25">, Plattner 2004</ref> (also called master-slave), the master database executes all update transactions and several slave replicas execute read-only transactions. Restricting the execution of update transactions to the master makes SM systems less flexible but simpler to build compared to MM systems. A SM system is simpler to build because it does not need a certifier. The master handles all write operations, and therefore its concurrency control subsystem can abort transactions that introduce write-write conflicts. Conflict window. The conflict window <ref type="bibr" target="#b6">[Elnikety 2005</ref>] captures the time interval during which an update transaction is vulnerable to write-write conflicts, which result in aborting the update transaction. For a standalone database, the conflict window of an update transaction is its execution time on the database. For a single-master system, the conflict window is the execution time on the master. For a multi-master system, the conflict window has three components: (1) the age (staleness) of the snapshot the transaction receives, (2) transaction local execution time on the database replica, and (3) time for the certification service to certify the transaction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Analytical Models</head><p>The analytical models aim to predict the performance of ecommerce workloads on replicated snapshot-isolated databases. Our aim is to capture the essential system features, including update propagation and aborts, while keeping the models sufficiently simple to be analytically tractable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Workload</head><p>The transaction workload for a standalone database consists of R read-only transactions per second and W update trans-actions per second generated by a fixed number of clients. Each client submits a transaction, waits for the database response, examines the response during the think time, and then submits the next transaction, following a closed-loop model <ref type="bibr" target="#b26">[Schroeder 2006</ref>]. The fraction of read-only transaction is Pr and the fraction of update transactions is Pw, such that Pr + Pw =1.</p><p>We scale the workload with the number of replicas in the replicated database such that a replicated database system that has N replicas receives requests from N times the number of clients in a standalone database.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Queuing models</head><p>In this section we construct queuing models that compute the throughput and response time of each replica using transaction service demands that we derive in Section 3.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Multi-master</head><p>Figure 1 depicts a separable closed queuing network that captures the components of the multi-master system. We model the CPU and disk on the database replica as regular service centers with queues. We model the delays introduced by the load balancer and local area network as a single delay center called load balancer delay. The certification time is almost constant, insensitive to the number of concurrent certification requests. We, therefore, approximate the certifier as a delay center rather than a service center to make the model tractable. We provide more details in Section 6.3 to justify these assumptions. Model inputs. The model inputs are the following: service demands at each service center, D MM for CPU and disk; delay time at each delay center for think time, load balancer, and certifier delays; number of replicas (N); and number of clients per replica (C).</p><p>Model outputs. The model computes average throughput and response time. The model produces additional data for each resource such as utilization and residence time. Solving the model. We use the mean value analysis (MVA) algorithm <ref type="bibr" target="#b22">[Lazowska 1984]</ref> which is a standard algorithm to solve closed-loop queuing models. All replicas are identical and they contribute the same throughput assuming perfect load balancing. MVA iterates over the number of clients, adding N clients (one client per replica) in each iteration. MVA computes the residence time at each service center, system throughput and queue lengths.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Single-master</head><p>Figure 2 depicts a separable closed queuing network for the single-master system. The single-master model has similar inputs and outputs as the multi-master model. Solving the model, however, requires balancing the load among the master and the slaves.</p><p>Intuitively at steady state when the system is balanced, the ratio of the slaves throughput : master throughput should be Pr : Pw. Here the queuing model is not symmetric because updates are handled by the master only, raising two unbalanced cases: First, the master becomes underutilized if the transaction workload is dominated by read-only transactions which make the slaves the bottleneck. Since the master has excess capacity, it should process extra readonly transactions as well as all update transactions.</p><p>Second, when the master is the bottleneck, the total system throughput becomes limited by the master, forcing clients to queue at the master and reducing the load on the slaves. <ref type="figure">Figure 3</ref> presents a load balancing algorithm that balances the load and accounts for these two cases. If the system is balanced, the algorithm terminates immediately and reports balanced read and update throughputs.  Single-master queuing model (SM system).</p><p>If the system is not balanced, the algorithm uses two properties to rebalance the solution: (1) the constant ratio of read-only to update transactions Pr : Pw provided as an input property of the workload, and (2) the fixed number of clients in system, who are distributed among centers proportional to residence times. We use MVA as a building block. The system has 1 master and N-1 slaves, and the total number of clients is N·C. We distribute clients among the master and slaves, and solve the queuing model. We compare the ratio of the resulting throughputs (slaves throughput : master throughput = Pr : Pw).</p><p>If the master throughput is too high, indicating there is excess capacity at the master, we move read-only transactions from the slaves to the master until the ratios are balanced. If the slaves' throughput is too high, we reduce the number of clients on the slaves because more clients queue on the master. Both cases terminate quickly because they iterate over a finite number of clients. The system response time is computed using Little's law <ref type="bibr" target="#b20">[Kleinrock 1975</ref>].</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Service demands</head><p>We estimate the CPU and disk service demands at the replicas for executing transactions. We first model resources in a standalone database system and then extend the discussion to replicated databases. <ref type="table" target="#tab_0">Table 1</ref> lists the symbols used in the model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.1">Standalone database</head><p>The average service demand of a read-only transaction is rc (e.g., CPU time or disk time), and the average service demand of an update transaction is wc. Some update transactions are aborted due to write-write conflicts under snapshot isolation. Those transactions are retried. Let A 1 be the probability that an update transaction aborts in a standalone database. To successfully commit W update transactions, W/(1 -A 1 ) update transactions are submitted, of which W commit and W· A 1 /(1 -A 1 ) abort. Therefore, the resources required for R committed read-only transactions and W committed update transactions are:</p><formula xml:id="formula_0">1 (1) (1 ) W Load R rc wc A = ⋅ + ⋅ −</formula><p>The average the service demand for one transaction is then:</p><formula xml:id="formula_1">1 (1) (1 ) Pw D Pr rc wc A = ⋅ + ⋅ −</formula><p>To quantify A 1 , we run the workload and measure A 1 directly on the standalone database system. However, here we derive the abort probability for a standalone database because we later use a similar derivation to relate the abort rate of a replicated database to that of the standalone database.</p><p>Assume the database has DbUpdateSize objects that can be modified by update transactions. Each update transaction modifies U objects. The probability that an update operation conflicts with another update operation is p = 1/DbUpdateSize.</p><p>Conversely, an update transaction succeeds if it conflicts with none of the concurrent updates. The probability of success is (1 -p) to the power of the total number of update operations by the concurrent transactions. The execution time of the update transaction is L(1), which is its conflict window. The number of concurrent updates during the conflict window of the update transaction is L(1) · W · U. Since each of the U update operations of an update transaction must succeed for the transaction to commit, the probability of success is:</p><formula xml:id="formula_2">2 (1) (1) (1 ) L W U Success p ⋅ ⋅ = −</formula><p>The probability of abort is A 1 =1 -Success(1):</p><formula xml:id="formula_3">2 (1) 1 1 (1 ) L W U A p ⋅ ⋅ = − − Sub-routine:</formula><p>Center.MVA() Inputs: readClients, writeClients Outputs: readThoughput , writeThoughput</p><p>Balancing Algorithm:</p><formula xml:id="formula_4">masterClients = Pw·C·N slaveClients = Pr·C·N/(N-1) ( -,writeThput ) = Master.MVA( 0, masterClients ) ( readThput, -) = Slave.MVA( slaveClients, 0 )</formula><p>//is the system balanced? if( readThput : writeThput ≈ Pr : Pw ) return (readThput , writeThput ) //the system is not balanced. //either master has exceess capacity or it is the bottleneck. if( readThput : writeThput &lt; Pr : Pw ) { //master has excess capacity: add reads to master j = 0; loop { j++; ( extraReadThput , writeThput ) = Master.MVA( j·(N-1) , masterClients ) ( readThput , -) = Slave.MVA( slaveClients -j , 0 ) } until ( (extraReadThput +readThput) : writeThput ≈ Pr : Pw ) return (extraReadThput +readThput , writeThput ) } else { //master is the bottleneck, more clients queue at master j = 0; loop { j++; ( -, writeThput ) = Master.MVA( 0, masterClients + j·(N-1) ) ( readThput, -) = Slave.MVA( slaveClients -j , 0 ) } until ( readThput : writeThput ≈ Pr : Pw ) return ( readTh , writeTh ) } <ref type="figure">Figure 3</ref>. Balancing throughput of master and slaves.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.2">Multi-master replicated database</head><p>Each replica in a multi-master (MM) system processes its local input transactions plus the writesets from remote update transactions. Depending on the workload, the cost of a propagated writeset can be less than the cost of fully processing the original update transaction. We, therefore, assign it a cost, ws, the average service demand required to process a propagated writeset. In an N-replica system, each replica commits R read-only transactions, W update transactions and (N-1)·W propagated writesets.</p><p>The abort probability is A N . Aborts affect only local update transactions, and do not affect propagated writesets, which partially cause higher A N . The resources needed to process the transaction workload at the replica are:</p><formula xml:id="formula_5">( 1) (1 ) ( ) N MM W R rc wc W N ws A Load N = ⋅ + ⋅ + ⋅ − ⋅ −</formula><p>The average service demand for one transaction is:</p><formula xml:id="formula_6">( )<label>(1 )</label></formula><p>1)</p><formula xml:id="formula_7">N MM Pw N Pr rc wc Pw ws A D N = ⋅ + ⋅ ⋅( ⋅ − + −</formula><p>Next, we relate A N to A 1 . The same formula used to derive Success(1) in Section 3.3.1 can be used to derive the success probability Success MM (N) for the MM system. Approximately, the N-replica multi-master system has N times the throughput and a different conflict window, CW(N). The total concurrent update operations is CW(N)·N·W·U, and the success probability is:</p><formula xml:id="formula_8">2 ( ) ( ) (1 ) N CW N W U MM Success N p ⋅ ⋅ ⋅ = −</formula><p>which can also be written as: </p><formula xml:id="formula_9">2 ( ) (1) (1) ( ) (1 ) CW N N L WU L MM Success N p ⋅ ⋅ ⋅ = − ⎡ ⎤ ⎣ ⎦ ( ) (1) ( )<label>(1)</label></formula><formula xml:id="formula_10">1 (1 ) (1 ) CW N L N N A A ⋅ − = −<label>(1)</label></formula><p>The final service demand equation is the following:  </p><formula xml:id="formula_11">( )<label>(1) 1 ( ) (1 ) 1)</label></formula><formula xml:id="formula_12">D master (N)</formula><p>Average service demand to execute one transaction on a master in a single-master system having 1 master and N-1slaves ( § 3.3.3)</p><formula xml:id="formula_13">D MM (N)</formula><p>Average service demand to execute one transaction in a multi-master system having N replicas ( § 3.3.2)</p><formula xml:id="formula_14">D slave (N)</formula><p>Average service demand to execute one transaction on a slave in a single-master system having 1 master and N-1slaves ( § 3. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.3">Single-master replicated database</head><p>An N-replica SM system has two components, 1 master and N-1 slaves. We derive the service demand on each component, assuming a total system load equivalent to an Nreplica MM system. The SM system commits N·W update and N·R read-only transactions.</p><p>Master Service Demand. The master processes all update transactions in the system. Aborts increase the number of submitted update transactions. N·W/(1 -A' N ) update transactions are submitted to commit N·W update transactions under the master abort rate of A' N . The master's resource consumption is:</p><formula xml:id="formula_15">(1 ' ) ( ) N master W N w c A Load N = ⋅ ⋅ −</formula><p>The average service demand per update transaction is:</p><formula xml:id="formula_16">( ) (1 ' ) N master wc N A D = −</formula><p>The difference between the MM system abort probability A N and the master-slave abort probability A' N is that the master resolves all conflicts locally, like a standalone system, but at a higher rate of update transactions than the standalone system. Slave service demand. The slaves process N·R read-only transactions and N·W propagated writesets from the master. Thus, each of the (N-1) slaves must process N / (N-1) readonly transactions and all remote writesets. The slaves process only committed writesets; there are no aborts at the slaves. The resource consumption at a slave is: </p><formula xml:id="formula_17">master N E NW N r c N W E N W E A wc D ⋅ = ⋅ + ⋅ ⋅ + ⋅ + − ( ) slave N N W N rc ws N R E D ⋅ ( −1) ⋅ = + ⋅ ⋅ −<label>(1 )</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Summary of model assumptions</head><p>We summarize the main assumptions of the analytical model.</p><p>1. The workload is based on e-commerce applications; i.e., high volume of relatively short lived transactions that can be effectively distributed across replicas. E-commerce workloads are typically read dominated.</p><p>2. The concurrency protocol is based on snapshot isolation; therefore, only write-write conflicts occur.</p><p>3. Since (generalized) snapshot isolation is a multiversion concurrency control algorithm, the bottleneck is much more likely to be a physical resource rather than a logical resource. GSI trades space (as it maintains multiple versions) to achieve fewer conflicts; readers never block writers and writers never have to wait for readers. The model assumes that the bottleneck is a physical resource rather than a logical resource. The model, therefore, does not directly capture logical resources such as semaphores and lock contention. However, their effects are partially reflected on the physical resources.</p><p>4. The abort probability of update transactions in the standalone database as well as in the replicated database is small. Updatable data items are updated uniformly, i.e., the database does not have a hotspot.</p><p>5. The database server is scalable; resource consumption is linear with the server throughput. Modern server operating systems are unlikely to thrash because they employ mechanisms that prevent over-subscription of physical resources, such as the O(1) thread scheduler and admission control policies. The model does not apply in overload regions that are not linear if they exist.</p><p>6. The model uses perfect load balancing among identical machines and inherits the assumptions employed by the MVA algorithm <ref type="bibr" target="#b22">[Lazowska 1984]</ref>, such as having exponential distributions of the service demands.</p><p>7. The database is replicated in a LAN environment rather than a WAN or geographically distributed environment.</p><p>When these assumptions are not valid, the model in general predicts an upper bound on performance. This is the case for example, when the abort probabilities are high. We investigate the sensitivity of the model to some of these assumptions in Section 6.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Estimating model parameters</head><p>We use standard workload characterization techniques <ref type="bibr" target="#b23">[Menasce 1998</ref>] to estimate model parameters. These techniques gather information using measurement on an offline system. Online methods can, however, be employed if the underlying live database system provides the required resource utilization for each transaction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">Multi-master parameters</head><p>We take a backup of the database and capture the transaction workload from the standalone database system using the database log file. The log must contain the full SQL statements, a client or session identifier and a start timestamp at which the statement was executed. Our experience is that these values can be generated by most database logging facilities. For example, in PostgreSQL 7, this information is generated by turning on log_statement, log_pid, log_connection and log_timestamp. In PostgreSQL 8, a log line prefix string such as '%r %p %m %c %x' captures the necessary information. Additionally, we need to generate the writesets corresponding to the update transactions. This is done by defining triggers on all tables to extract and record the transaction writeset.</p><p>The service demand equation D MM (N) in Section 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">requires the following parameters: Pr, Pw, A 1 , CW(N), L(1)</head><p>as well as rc, wc, ws for the CPU and disk. Pr, Pw, and A 1 . We count the number of read-only and update transactions in the captured log to determine the fractions Pr and Pw. We count the number of aborted update transactions to calculate the abort probability A 1 . rc, wc, ws and L(1). We instrument a standalone database with triggers and play the log to capture the writesets. We play read-only transactions from the log against the database and collect CPU and disk utilization to compute the service demands rc CPU and rc disk using the Utilization Law <ref type="bibr" target="#b22">[Lazowska 1984]</ref>. The average service demand at a resource is the resource utilization divided by the throughput. Next we play update transactions against the database to compute wc CPU and wc disk . We also play the writesets to compute ws CPU and ws disk in a separate run. We finally replay both read-only and update transactions to measure L(1), the average response time for update transactions in a standalone system. A N , CW(N). We can derive A N from A 1 using the formula below, but this requires CW(N), the conflict window, which is not available from standalone measurements.  <ref type="bibr" target="#b6">[Elnikety 2005]</ref>. However, to compute the latter three terms we still need CW(N). Since the MVA algorithm iterates over the number of clients, we approximate CW(N) at iteration i+1 by the sum of CPU, disk residence time and certification time at iteration i. This slightly underestimates the abort probability. We investigate higher abort rates in Section 6.3.3. Finally, the model requires the think time (Z) and the number of clients (N). In the experimental validation section these values are inputs. However in a practical deployment, well-known approaches <ref type="bibr" target="#b17">[Jain 1991</ref> can be used to estimate the think time and predict the number of clients. The certifier delay time is 12 ms as discussed in Section 6.3.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2">Single-master parameters</head><p>We estimate the model parameters for SM in the same way as for MM, except for A' N . A' N (Master-Slave Abort Rate). Because all updates are processed at the master, the abort rate for any level of replication can be measured directly by loading a database with a scaled update transaction workload.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Implemented Systems</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Multi-master system</head><p>The MM system is based on Tashkent <ref type="bibr" target="#b7">[Elnikety 2006</ref>]. Each replica has two main components: a database system and a proxy which intercepts all incoming requests to the database, as shown in <ref type="figure" target="#fig_7">Figure 4</ref>. Transaction processing. When the load balancer receives a transaction T, it forwards T to the proxy of the least loaded replica. The proxy executes T on the database. All T's read and write operations, e.g., the SELECT, UPDATE, INSERT and DELETE SQL commands, are executed locally on the replica. The proxy intercepts the SQL commit command at which point the proxy examines the writeset of T. If the writeset is empty (T is read-only), the proxy commits T immediately. Otherwise, the proxy invokes the certification service, sending the writeset of T and the version of its snapshot to the certifier. The certifier decides whether to commit or abort the update transaction and performs the update propagation functionality. When the proxy receives the certifier response, it either commits or aborts T, and forwards the outcome to the client. Replica database. We use a database engine on each replica that processes client read-only and update transactions. Replica proxy. The proxy performs two main functions. First, it applies incoming writesets to the database. Second, it intercepts all requests to the database to prevent interference between local update transactions and propagated writesets. The proxy eagerly extracts the writeset of each transaction to perform early certification on partial write-sets, obviating the hidden deadlock problem <ref type="bibr" target="#b23">[Lin 2005]</ref>. It aborts local update transactions whenever they conflict with a propagated writeset <ref type="bibr" target="#b7">[Elnikety 2006</ref>]. Certifier. Certification is a lightweight stateful service that maintains committed writesets and their versions. The request to certify a transaction contains its writeset and version. The certifier detects write-write conflicts by comparing the writeset of the transaction to be certified to the writesets of the transactions that committed after the version supplied in the request. An update transaction is committed when its writeset is made persistent by the certifier. Certification is deterministic and the certifier is replicated using Paxos <ref type="bibr" target="#b21">[Lamport 1998</ref>] for fault-tolerance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Single-master system</head><p>Figure 5 depicts the architecture of a single-master system. The master database executes both read-only and update transactions. The slaves execute read-only transactions and the propagated updates from the master. Load balancer. The load balancer dispatches all update transactions to the master. When the load balancer receives a read-only transaction, it selects the least loaded replica (among the master and slaves) and forwards the transaction to that replica. When the load balancer receives a writeset from the master, it relays the writeset to the slaves. Transaction processing. The master executes update transactions and either commits or aborts them. On a commit, the master proxy extracts the transaction's writeset from the master database. This information is forwarded to the load balancer, which forwards the commit to the client. Read-only transactions can execute on master or slaves. Master database. The master database processes all update transactions. We define triggers on all replicated tables to capture the transaction writeset in main memory.</p><p>Master proxy. The master proxy intercepts incoming requests to the master database. When the proxy intercepts the SQL COMMIT, it invokes a trigger to retrieve the writeset of the transaction and then forwards the commit command to the database. Slave database. The slave database is effectively a cache against which read-only transactions are executed. Slave proxy. The slave proxy applies incoming writesets to the database. It is the only source of updates to the database.   Hardware and Software Environment. Each machine in the database cluster runs the 2.6.11 Linux kernel on a single Intel Xeon 2.4GHz CPU with 1GB ECC SDRAM, and a 120GB 7200pm disk drive. The machines are interconnected using gigabit Ethernet. We monitor the system load with a modified version of the Mercury server management system <ref type="bibr" target="#b16">[Heath 2006</ref>]. For the certifier, we use a leader and two backups for fault tolerance. We use the PostgreSQL 8.0.3 database configured to run transactions at the snapshot isolation level (which is the strictest isolation level in PostgreSQL and called the "serializable transaction isolation level"). Both TPC-W and RUBiS are serializable under GSI <ref type="bibr" target="#b6">[Elnikety 2005</ref>].</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Experimental Validation</head><p>To drive the replicated database system, we use many client machines. Each client machine runs Tomcat 5.5 and a remote terminal emulator (RTE) for TPC-W or RUBiS. The RTE is a multithreaded Java program in which each thread represents one client and the application server (Tomcat) executes the requested Java Servlets which access the database using JDBC. If an update transaction is aborted, the Java Servlet retries the transaction.</p><p>The client machines are lightly loaded and the processing delay is less than 100 ms per transaction. Client think time follows an exponential distribution with an average of 900 ms. For the analytical models we use 1000 ms as the effective think time to account for processing times on the client machines, think time, load balancer delay and networking delay. Each point in the graphs below represents the result of one experiment. We report sustained average throughput and response time during 15 minutes after a warm-up period of 10 minutes. These intervals are selected such that the measurements are performed while the system performance is in steady state.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Comparing prediction and measurement</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.1">Validation using TPC-W</head><p>To evaluate the accuracy of the models, we compare the measured performance of the TPC-W benchmark to the predicted performance across the three workload mixes.</p><p>TPC-W parameters are summarized in <ref type="table" target="#tab_2">Table 2</ref>. The parameters needed for modeling CPU and disk service demands per transaction are listed in <ref type="table" target="#tab_3">Table 3</ref>. The abort rate of TPC-W in the standalone database, A 1 , is very small for all mixes below 0.023%. We address the topic of prediction under higher abort rates in Section 6.3.3. <ref type="figure">Figure 6</ref> plots the throughput in transactions per second (tps) on the y-axis for TPC-W browsing, shopping and ordering mixes as a function of the number of replicas on the x-axis for the MM system using solid lines. The corresponding throughput curves predicted by the model are shown using dotted lines. The browsing mix scales almost linearly: Its throughput curve starts at 22 tps at one replica and increases to 347 tps at 16 replicas, which is a speedup of 15.7 times. The browsing mix has excellent scalability because it is dominated by read-only transactions.</p><p>In contrast, the ordering mix increases from 45 tps at one replica up to 304 tps at 16 replicas yielding a speedup of 6.7 times due to the high ratio of update transactions in the workload. Notice that read-only transactions are in general more expensive than update transaction. For this reason, the browsing mix starts at 22 tps on one replica, whereas the ordering mix starts at 45 tps. As more replicas are added the cost of processing writesets (during update propagation) limits the scalability in the ordering mix.</p><p>The predicted throughput curves from the model match the measured throughputs. We find that the model captures the overhead of processing update transactions in the replicated system. <ref type="figure">Figure 7</ref> depicts the average response times for the three TPC-W mixes. The x-axis is the number of replicas and yaxis is the average response time in millisecond (ms). The response time curve for the browsing mix remains almost flat because there are a few update transactions. We see an increase in the response time curve for the ordering mix. The model predicts response times well for the three mixes.</p><p>In summary, the multi-master performance estimates match well with the measured results for all workload mixes with an error margin below 15%. Next, we analyze performance measurements and predictions for the singlemaster system. <ref type="figure">Figure 8</ref> plots the throughput of TPC-W browsing, shopping and ordering mixes as a function of the number of replicas for the single-master (SM) replicated database system. In contrast to MM, update transactions are executed on the master only and the system saturates as soon as the master becomes the bottleneck. Both the real system and the model scale linearly with the browsing mix since it is dominated by read-only transactions and the extra capac          </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">Conclusions</head><p>We present analytical models to predict the performance of two middleware-based database replication designs, multimaster and single-master. The analytical models capture the characteristics of these systems in terms of update propagation overheads and abort rates. We describe how to measure the system performance metrics on a standalone database and use these measurements as inputs to the analytical models. For experimental validation, we use prototypes of both systems and show that the models match well with the measured system performance. Performance predictions are within 15%.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. Multi-master queuing model (MM system). Figure 2. Single-master queuing model (SM system).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .</head><label>2</label><figDesc>Figure 1. Multi-master queuing model (MM system). Figure 2. Single-master queuing model (SM system).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>. Executing extra read-only transactions at master.</head><label></label><figDesc>The performance of the single-master system can be limited by either the master or the slavesIf the master has extra capacity, the service demand equations change. The master processes E extra read-only transac- tions, while the N-1 slaves process N·R-E read-only trans- actions. The average service demand per transaction be- comes: ' ( )</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>We approximate the conflict window by the sum of CPU residence time, disk residence time and certification time for update transactions</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>6. 1</head><label>1</label><figDesc>Experimental setup TPC-W Benchmark. TPC-W is a benchmark from the Transaction Processing Council designed to evaluate e- commerce systems. It implements an on-line bookstore and has three workload mixes that differ in the relative frequen- cy of each of the transaction types. The browsing mix workload has 5% updates, the shopping mix workload has 20% updates, and the ordering mix workload has 50% updates. The shopping mix is the main workload but we report results from all three mixes. The average size of a propagated writeset is 275 bytes. The TPC-W database standard scaling parameters are 100 EBS (emulated brows- ers) and 10,000 items. The database size is 700 MB. RUBiS Benchmark. RUBiS [Amza 2002] is a popular e- commerce benchmark. It models an auction site like eBay and has two workloads: the browsing mix (entirely read- only) and the bidding mix (20% update transactions). The average size of a propagated writeset is 272 bytes. The scaling parameters are 1M users, 10,000 active items, and 500,000 old items. The database size is 2.2 GB.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 4 .</head><label>4</label><figDesc>Figure 4. Multi-master (MM) system. Figure 5. Single-master (SM) system.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 5 .</head><label>5</label><figDesc>Figure 4. Multi-master (MM) system. Figure 5. Single-master (SM) system.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><label></label><figDesc>Figure 6. TPC-</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 7 Figure 9 Figure 1 7.</head><label>791</label><figDesc>Figure 7</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head></head><label></label><figDesc>Figure 12. RUB</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="true"><head>Table 1 . Model parameters and symbols.</head><label>1</label><figDesc></figDesc><table>Symbol 
Meaning 

A' N 

Abort rate of an update transaction in single-
master system having 1 master and N-1 slaves 
( § 3.3.3) 

A 1 
Abort rate of an update transaction in a standa-
lone database system ( § 3.3.1) 

A N 
Abort rate of an update transaction in multi-
master system having N replicas ( § 3.3.2) 

CW(N) 

Conflict window of an update transaction on a 
multi-master system having N replicas ( § 
3.3.2,  § 4.1.1) 

DbUpdateSize 
Number of objects in the database that can be 
modified by update transactions ( § 3.3.1) 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="true"><head>Table 2 . TPC-W parameters.</head><label>2</label><figDesc></figDesc><table>Mix 
Read 
(Pr) 

Write 
(Pw) 

Clients per 
Replica (C) 

Think Time 
(Z) 
Browsing 
95% 
5% 
30 
1000 ms 
Shopping 
80% 
20% 
40 
1000 ms 
Ordering 
50% 
50% 
50 
1000 ms 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head>Table 3 .</head><label>3</label><figDesc></figDesc><table>Measured service demands (in ms) for TPC-W. 

Mix 
Resource 
Read(rc) 
Write(wc) 
Writeset(ws) 

Browsing 
CPU 
41.62 
17.47 
3.48 
Disk 
14.56 
8.74 
2.62 

Shopping 
CPU 
41.43 
12.51 
3.18 
Disk 
15.11 
6.05 
1.81 

Ordering 
CPU 
22.46 
13.48 
4.04 
Disk 
12.62 
8.34 
1.67 </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="false"><head>11 .</head><label>11</label><figDesc></figDesc><table>RUBiS resp 

ponse time on M 

ponse time on 

ponse time on M 

MM system. 

SM system. 

MM system. it 
ti 

in 
b 
e 
a 

s 
a 
r 
n 
d 
m 

6 

T 
li 
N 
tr 

a 
T 
H 
a 
b 
r 
ti 
d 
T 
th 
in 
b 

p 
ti 

F 

ty at the maste 
ions when ther 
With the gre 
ng mix, SM 
becomes the bo 
erful machine a 
and improve sy 
Response tim 
sponse time cu 
are almost flat 
rapidly after 4 
neck due to pr 
dicted throughp 
measure values 

6.2.2 Validat 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="false"><head>Table 4 summa</head><label>4</label><figDesc>ists the measu Note that the b ransactions.</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6" validated="false"><head>Table 5 .</head><label>5</label><figDesc></figDesc><table>epicts the avera 
oth the averag 
S in the multi-m 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7" validated="false"><head>Table 4</head><label>4</label><figDesc></figDesc><table>Mix 

Brows 
Biddin 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8" validated="false"><head>Table 5</head><label>5</label><figDesc></figDesc><table>Mix 

Browsin 

Bidding 

Figure 

rrency control 
the propagate 
udy in this pape 
updates is rea 
conflicts. 
or work [Jimé 
e the overhead 
does not capt 
bound on th 
than to predic 
nalytical model 
we validate thei 
tally. 
odeling the gro 
ct windows [E 
models [DeWitt 
developed to c 
They are used 
m, rather than a 
alytical models 
have been dev 
for multi-tier d 
the purpose of 

4. RUBiS param 

Read 
(Pr) 
ing 
100% 
ng 
80% 

5. Measured se 

Resource 

ng 
CPU 
Disk 

g 
CPU 
Disk 

14. TPC-W sh 

l as well as t 
d updates. For 
er, the overhea 
ached first bef 

énez-Peris 200 
d of propagatin 
ture aborts and 
he scalability 
ct their perform 
ls that capture 
ir ability to pr 

owth of abort 
lnikety 2005] 
t 1992, Gray 19 
capture the spe 
d to derive a 
a priori. 
s [Ferrari 2006 
veloped to pre 
distributed app 
f enabling dyn 

meters. 

Write 
(Pw) 
0% 
20% 

ervice demands 

Read(rc) 
25.29 
11.36 
25.29 
11.36 

hopping MM A 

the resources 
r the class of 
ad of applying 
fore the scalab 

01] develops a 
ng updates. Ho 
d is used to e 
of replicated 
mance. In this 
both updates a 
redict performa 

t rates [Gray 
appears in prio 
991, Gunther 1 
eedup of replic 
model after bu 

6, Kelly 2006, 
dict throughpu 
plications in d 
namic provisio 

Clients per 
Replica (C) 

T 
T 
50 
1 
50 
1 

s (in ms) for RU 

Write(wc) 
W 
-
-
-
-
41.51 
9. 
48.61 
35 

A N abort probab 

needed to 
workloads 
the propa-
bility limit 

a model to 
owever, the 
stablish an 
databases, 
paper, we 
and aborts, 
ance expe-

1996] and 
or work. A 
1994] have 
cated data-
uilding the 

Urgaonkar 
ut response 
ata centers 
oning. Our 

Think 
Time (Z) 
1000 ms 
1000 ms 

UBiS. 

Writeset(ws) 

.83 
5.28 

bilities. </table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>We thank our shepherd, Fernando Pedone (University of Lugano), for his feedback and suggestions. We also thank Tim Harris, Alexandre Proutiere, Bozidar Radunovic, Eno Thereska, and Milan Vojnovic (Microsoft Research in Cambridge), and the anonymous reviewers for their constructive comments.</p><p>This research was partially supported by the Swiss National Science Foundation grant number 200021-121931 and by the Hasler Foundation grant number 2316.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Specification and implementation of dynamic Web site benchmarks. The 5th Annual IEEE</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cristiana</forename><surname>Amza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Emmanuel</forename><surname>Cecchet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anupam</forename><surname>Chanda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alan</forename><forename type="middle">L</forename><surname>Cox</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sameh</forename><surname>Elnikety</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Romer</forename><surname>Gil</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Julie</forename><surname>Marguerite</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Karthick</forename><surname>Rajamani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Willy</forename><surname>Zwaenepoel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A critique of ANSI SQL isolation levels</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hal</forename><surname>Berenson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Phil</forename><surname>Bernstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jim</forename><surname>Gray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jim</forename><surname>Melton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Elizabeth O&amp;apos;</forename><surname>Neil</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Patrick O&amp;apos;</forename><surname>Neil</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the 1995 ACM SIGMOD international conference on management of data</title>
		<meeting>the 1995 ACM SIGMOD international conference on management of data</meeting>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Concurrency control and recovery in database systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Philip</forename><surname>Bernstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vassos</forename><surname>Hadzilacos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nathan</forename><surname>Goodman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">;</forename><surname>Michael</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cahill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Uwe</forename><surname>Roehm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alan</forename><surname>Fekete</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the 2008 ACM SIGMOD international conference on management of data</title>
		<meeting>the 2008 ACM SIGMOD international conference on management of data</meeting>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="1987" />
		</imprint>
	</monogr>
	<note>Serializable isolation for snapshot databases</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Middleware-based database replication: the gaps between theory and practice</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Emmanuel</forename><surname>Cecchet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">George</forename><surname>Candea</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aanstasia</forename><surname>Ailamaki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the 2008 ACM SIGMOD international conference on management of data</title>
		<meeting>the 2008 ACM SIGMOD international conference on management of data</meeting>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Lazy database replication with snapshot isolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Khuzaima</forename><surname>Daudjee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenneth</forename><surname>Salem</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the 32nd international conference on very large data bases</title>
		<meeting>the 32nd international conference on very large data bases</meeting>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Parallel database systems: the future of high performance database systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">J</forename><surname>Dewitt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jim</forename><surname>Gray</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="85" to="98" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Database replication using generalized snapshot isolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sameh</forename><surname>Elnikety</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fernando</forename><surname>Pedone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Willy</forename><surname>Zwaenepoel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the 24th IEEE symposium on reliable distributed systems (SRDS)</title>
		<meeting>the 24th IEEE symposium on reliable distributed systems (SRDS)</meeting>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Tashkent: uniting durability with transaction ordering for high-performance scalable database replication</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sameh</forename><surname>Elnikety</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steven</forename><surname>Dropsho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fernando</forename><surname>Pedone</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the 1st ACM SIGOPS/EuroSys European Conference on Computer Systems (EuroSys)</title>
		<meeting>the 1st ACM SIGOPS/EuroSys European Conference on Computer Systems (EuroSys)</meeting>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Tashkent+: memory-aware load balancing and update filtering in database replication</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sameh</forename><surname>Elnikety</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steven</forename><surname>Dropsho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Willy</forename><surname>Zwaenepoel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the 2nd ACM SIGOPS/EuroSys European Conference on Computer Systems (EuroSys)</title>
		<meeting>the 2nd ACM SIGOPS/EuroSys European Conference on Computer Systems (EuroSys)</meeting>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Serialisability and snapshot isolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alan</forename><surname>Fekete</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the Australian Database Conference</title>
		<meeting>the Australian Database Conference</meeting>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Making snapshot isolation serializable</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alan</forename><surname>Fekete</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dimitrios</forename><surname>Liarokapis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O&amp;apos;</forename><surname>Elizabeth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Patrick O&amp;apos;</forename><surname>Neil</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dennis</forename><surname>Neil</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Shasha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Database Systems (TODS)</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="492" to="528" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Allocating isolation levels to transactions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alan</forename><surname>Fekete</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the twenty-fourth ACM SIGMOD-SIGACT-SIGART symposium on principles of database systems (PODS)</title>
		<meeting>the twenty-fourth ACM SIGMOD-SIGACT-SIGART symposium on principles of database systems (PODS)</meeting>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Performance modeling and evaluation of e-business systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Giovanna</forename><surname>Ferrari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><surname>Ezhilchelvan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Isi</forename><surname>Mitrani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annual Simulation Symposium</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">The Performance Handbook for database and transaction processing systems</title>
		<editor>Jim Gray editor. Morgan Kaufmann</editor>
		<imprint>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">The dangers of replication and a solution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jim</forename><surname>Gray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pat</forename><surname>Helland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O&amp;apos;</forename><surname>Patrick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dennis</forename><surname>Neil</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Shasha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the 1996 ACM SIGMOD international conference on management of data</title>
		<meeting>the 1996 ACM SIGMOD international conference on management of data</meeting>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Issues facing commercial OLTP applications on MPP platforms, Compcon Spring &apos;94, Digest of Papers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Neil</forename><forename type="middle">J</forename><surname>Gunther</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Mercury and Freon: temperature emulation and management for server systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Taliver</forename><surname>Heath</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ana</forename><forename type="middle">Paula</forename><surname>Centeno</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pradeep</forename><surname>George</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Luiz</forename><surname>Ramos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yogesh</forename><surname>Jaluria</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ricardo</forename><surname>Bianchini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the 12th international conference on architectural support for programming languages and operating systems (ASPLOS)</title>
		<meeting>the 12th international conference on architectural support for programming languages and operating systems (ASPLOS)</meeting>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">The art of computer systems performance analysis: techniques for experimental design, measurement, simulation, and modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">K</forename><surname>Jain ; Ricardo Jiménez-Peris</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marta</forename><surname>Patiño-Martínez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gustavo</forename><surname>Alonso</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bettina</forename><surname>Kemme</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the 20th IEEE international conference on reliable distributed systems (SRDS)</title>
		<meeting>the 20th IEEE international conference on reliable distributed systems (SRDS)</meeting>
		<imprint>
			<publisher>Wiley-Interscience</publisher>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
	<note>How to select a replication protocol according to scalability, availability, and communication overhead</note>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Predicting performance in distributed enterprise applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Terence</forename><surname>Kelly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Zhang</surname></persName>
		</author>
		<idno>#HPL-2006-76</idno>
		<imprint/>
	</monogr>
<note type="report_type">HP Tech. report</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Don&apos;t be lazy, be consistent: Postgres-R, a new way to implement database replication</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bettina</forename><surname>Kemme</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gustavo</forename><surname>Alonso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the 26th international conference on very large data bases (VLDB)</title>
		<meeting>the 26th international conference on very large data bases (VLDB)</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Queueing systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leonard</forename><surname>Kleinrock</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1975" />
			<publisher>John Wiley and Sons, Inc</publisher>
			<biblScope unit="volume">1</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">The part-time parliament</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leslie</forename><surname>Lamport</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Computer Systems (TOCS)</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="133" to="169" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Quantitative system performance</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Edward</forename><surname>Lazowska</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Zahorjan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">Scott</forename><surname>Graham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenneth</forename><forename type="middle">C</forename><surname>Sevcik</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1984" />
			<publisher>Prentice Hall</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Capacity planning for Web performance: metrics, models and methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yi</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bettina</forename><surname>Kemme</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marta</forename><surname>Patiño-Martínez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ricardo Jiménez-Peris ; Daniel</forename><surname>Menasce</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Virgilio</forename><forename type="middle">A F</forename><surname>Almeida</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the 2005 ACM SIGMOD international conference on management of data</title>
		<meeting>the 2005 ACM SIGMOD international conference on management of data</meeting>
		<imprint>
			<publisher>Prentice Hall</publisher>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
	<note>Middleware based data replication providing snapshot isolation</note>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Middle-R: Consistent database replication at the middleware level</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marta</forename><surname>Patiño-Martínez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ricardo</forename><surname>Jiménez-Peris</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bettina</forename><surname>Kemme</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gustavo</forename><surname>Alonso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Computer Systems (TOCS)</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1" to="49" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
	<note>Patiño-Martínez</note>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Ganymed: Scalable replication for transactional Web applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Plattner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gustavo</forename><surname>Alonso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the 5th ACM/IFIP/USENIX international conference on middleware</title>
		<meeting>the 5th ACM/IFIP/USENIX international conference on middleware</meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Open versus closed: a cautionary tale</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bianca</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><surname>Wierman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mor</forename><surname>Harchol-Balter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the 3rd conference on networked systems design &amp; implementation (NSDI)</title>
		<meeting>the 3rd conference on networked systems design &amp; implementation (NSDI)</meeting>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">An analytical model for multi-tier internet services and its applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bhuvan</forename><surname>Urgaonkar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Giovanni</forename><surname>Pacifici</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Prashant</forename><surname>Shenoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mike</forename><surname>Spreitzer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Asser</forename><surname>Tantawi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the 2005 ACM SIGMETRICS international conference on measurement and modeling of computer systems</title>
		<meeting>the 2005 ACM SIGMETRICS international conference on measurement and modeling of computer systems</meeting>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Dynamic provisioning of multi-tier Internet applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bhuvan</forename><surname>Urgaonkar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Prashant</forename><surname>Shenoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Abhishek</forename><surname>Chandra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pawan</forename><surname>Goyal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the second international conference on automatic computing (ICAC)</title>
		<meeting>the second international conference on automatic computing (ICAC)</meeting>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Understanding replication in databases and distributed systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthias</forename><surname>Wiesmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fernando</forename><surname>Pedone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">André</forename><surname>Schiper</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bettina</forename><surname>Kemme</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gustavo</forename><surname>Alonso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the 20th international conference on distributed computing systems (ICDCS)</title>
		<meeting>the 20th international conference on distributed computing systems (ICDCS)</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Postgres-R(SI): combining replica control with concurrency control based on snapshot isolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shuqing</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bettina</forename><surname>Kemme</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of the 21st international conference on data engineering (ICDE)</title>
		<meeting>the 21st international conference on data engineering (ICDE)</meeting>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
