<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-03-26T16:29+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">ISP-Friendly Peer Matching without ISP Collaboration</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cheng-Hsin</forename><surname>Hsu</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">School of Computing Science</orgName>
								<orgName type="department" key="dep2">School of Computing Science</orgName>
								<orgName type="institution">Simon Fraser University Surrey</orgName>
								<address>
									<postCode>V3T 0A3</postCode>
									<region>BC</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohamed</forename><surname>Hefeeda</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Simon Fraser University Surrey</orgName>
								<address>
									<postCode>V3T 0A3</postCode>
									<region>BC</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">ISP-Friendly Peer Matching without ISP Collaboration</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>In peer-to-peer (P2P) systems, a receiver needs to be matched with multiple senders, because peers have limited capacity and reliability. Efficient peer matching can reduce the cost on Internet Service Providers (ISPs) for carrying the P2P traffic. We study the following peer-matching problem: given a set of potential senders, find the best subset of them that will minimize the transit cost on ISPs. This problem is fairly general and the proposed algorithms for solving it can be used in many P2P systems. We propose two ISP-friendly algorithms for solving this problem: ISPF and ISPF-Lite. These two matching algorithms leverage public available information , such as BGP tables, to infer the network topol-ogy, and to minimize the cost on ISPs. The inference algorithms , however, are fairly complex, and we propose optimization techniques to reduce the inference time and to lower the memory requirement. We use trace-driven simulations to show that the proposed algorithms outperform other popular matching algorithms by a large margin. Between the two proposed algorithms, ISPF results in better matching , but incurs higher complexity. Hence, we recommend ISPF if resources are not stringent, otherwise ISPF-Lite is recommended.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>The work in <ref type="bibr" target="#b2">[3]</ref> is probably the closest to ours, in which the authors propose to select the majority of senders from the same AS as the receiver to reduce inter-ISP traffic amount. Their work is specific to BitTorrent and only gives priority to senders in the same AS as the receiver, but resorts to random selections for senders outside that AS. In contrast, our algorithms is more general in the sense that we consider the ISP and the PoP topologies when selecting senders in ASes other than the AS the receiver is in. A recent work proposes to use CDNs for finding senders that are likely to be closer to the receiver <ref type="bibr" target="#b3">[4]</ref>. In their system, each peer resolves a DNS name, backed by CDNs such as Akamai, for several times, and reports the distribution of DNS redirections to a centralized server that provides the peer matching service. The authors of <ref type="bibr" target="#b3">[4]</ref> hypothesize that peers observing similar redirection distribution are likely close to some replica server and thus to each other. The so-called "closeness" is defined by CDNs mainly for minimizing latency between a chosen replica server and the requesting client, which is may be different from reducing the inter-ISP traffic. In contrast, our algorithms defines precise objective, minimizing the cost on ISPs, and does not rely on CDNs, which are companies with completely different interests than ISPs. Moreover, we consider both the inter-ISP and the intra-ISP costs.</p><p>The P4P (provider portal for P2P) architecture <ref type="bibr" target="#b16">[17]</ref> is a recent proposal that advocates the cooperation between ISPs and P2P applications. P4P requires the deployment of portal servers, called iTrackers, in various ISPs. The wide deployment of P4P may take years as pointed out by the authors of <ref type="bibr" target="#b16">[17]</ref>. We take a different approach than P4P, where we leverage publicly available information and network topology inference algorithms. This enables us to provide efficient peer matching service now with no costs due to new infrastructure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">ISP-friendly Peer Matching Algorithms 3.1 Overview</head><p>To solve the matching problem for minimizing the cost on ISPs, we roughly divide the cost into two parts: inter-ISP cost and intra-ISP cost. We discuss these two costs in the following.</p><p>The inter-ISP cost refers to the amount of money a customer ISP pays its provider ISPs for transiting Internet traffic. Although ISPs hold different commercial agreements, the common charge model is based on the 95-percentile of the peak bandwidth usage of the inter-ISP links. Therefore, reducing inter-ISP traffic amount in general minimizes the inter-ISP cost. In this paper, we do not consider the inter-ISP costs on individual ISPs. This is because ISPs consider their commercial agreements and network status as sensitive information, and will not reveal them. Therefore, we consider the inter-ISP cost on all ISPs as a whole. Furthermore, we consider costs, but ignore incomes due to the inter-ISP traffic. Indeed, provider ISPs want their customer ISPs to consume as much bandwidth as possible for higher revenues. However, the provider ISPs are financially much stronger. Therefore, a charge that is significant to customer ISPs is relatively negligible to provider ISPs. Hence, we believe that reducing the cost on customer ISPs is more critical.</p><p>To minimize inter-ISP traffic amount, the matching algorithms should return senders that are closer to the receiver in terms of ISP distance, which is the number of ISPs the data need to cross from the senders to reach the receiver. To illustrate, consider the topology in <ref type="figure" target="#fig_0">Fig. 1</ref>, in which receiver R needs to be matched with one of the potential senders: S 1 and S 2 . Observe that sending a file from S 1 to R means every bit crosses inter-ISP links once, while sending a file from S 2 to R means every bit travels inter-ISP links twice. Clearly, matching R with S 1 reduces inter-ISP traffic amount by half and lowers the inter-ISP cost.</p><p>The intra-ISP cost refers to the amount of money an ISP spends to deploy and maintain its internal links. As shown in <ref type="figure" target="#fig_0">Fig. 1</ref>, an ISP (e.g., ISP B) may have multiple ASes, which are connected by sibling-to-sibling (s2s) links in the AS graph, while each AS (e.g., AS I) may have several PoPs (point-of-presents), which are connected by internal network links. A PoP is a set of routers owned by the same AS, and are located in the same geolocation, such as a city <ref type="bibr" target="#b5">[6]</ref>. Both of these links are internal to ISPs. We believe that reducing the geographic distance the data have to travel from senders to the receiver in general minimizes the intra-ISP cost. This is because longer geographic distance means longer network links and more intermediate routers, which incur higher deployment and maintenance costs on ISPs. In Sec. 4, we experimentally show that some ASes have diameters close to 9,000 km. Considering such an AS as a single node clearly is not accurate. Therefore, we use PoP level network topologies to estimate the geographic distance between two peers and refer to this distance as PoP distance. We emphasize that data do not travel in a straight line from the sender to the receiver. Instead, a legitimate network path needs to be followed when computing PoP distance. To minimize the intra-ISP cost, our peer matching algorithms should return senders that are closer to the receiver in terms of the PoP distance. To illustrate, consider the topology in <ref type="figure" target="#fig_0">Fig. 1</ref>, in which receiver R needs to be matched to either S 2 or S 3 . While S 2 and S 3 are equally good in terms of ISP distance, selecting S 2 incurs higher intra-ISP costs than selecting S 3 , because sending a file from S 2 to R means every bit travels coast-tocoast. Clearly, matching R with S 2 reduces the distance the data have to travel and lowers the intra-ISP cost.</p><p>To develop ISP-friendly matching algorithms, we first need to infer the ISP and the PoP distance between any two peers. There are several methods to infer the distances, including sending probing packets and analyzing routing information. While sending probing packets might reveal some details on networks, it incurs high traffic overhead and is not scalable. Hence, we do not send probing packets. Instead, we leverage publicly available BGP and geolocation information to infer the ISP and the PoP distance between any two peers. We give details on the inference algorithms in Secs. 3.2 and 3.5.</p><p>These inference algorithms, however, are computationally complex, thus can not run in real-time. To cope with this excessive complexity, we propose a two-step approach as shown in <ref type="figure" target="#fig_1">Fig. 2</ref>. The peer matching algorithm builds offline a distance oracle that enables fast distance lookups between any two peers. Then, it uses this distance oracle online to efficiently match peers. In graph theory, a distance oracle refers to an intermediate data structure, constructed from a given graph, that supports very efficient distance lookups between any two vertices. There are several distance oracle designs in the literature <ref type="bibr" target="#b19">[20]</ref>. However, these distance oracles are not suitable for estimating Internet path distance. This is because the Internet routes are not plain shortest routes: they rather follow certain known practice of BGP policy routing. For example, to find AS paths that conform to the routing policy, specialized AS path inference algorithms, such as <ref type="bibr" target="#b8">[9]</ref>, are required. Hence, we design our own distance oracle in Sec. 3.4.</p><p>Proposed matching algorithms. Given the inferred ISP and PoP distances, we propose two peer matching algorithm, ISPF and ISPF-Lite, to minimize the cost on ISPs. For every matching request, ISPF sorts the potential senders on their ISP distance to the given receiver, so that potential senders closer to that receiver are placed earlier in the list. On this sorted list, several potential senders may have the same ISP distance. To break these ties, ISPF sorts potential senders with the same ISP distance on their PoP distance, and places those with smaller PoP distance earlier than others with the same ISP distance. Once the sorted list is completed, the algorithm returns the first n senders in the list, where n is a configurable parameter. We should mention that inferring PoP distance is computationally demanding because there are too many PoPs in the Internet. To ease this burden, ISPF-Lite sorts the tied potential senders on the length of IP prefix they share with the receiver. The rationale is that, the longer the shared IP prefix between two peers, the more likely that they are within the same network. We perform this longest prefix matching using a binary trie data structure, somewhat similar to the ones used for IP lookup in core routers. The main advantage of the matching based on IP prefixes is that it is almost free: it does not rely on any external information and runs fast.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Inferring ISP Distance</head><p>We estimate the ISP distance between two given peers using the following three steps. (i) We map the IPs of these two peers to their AS numbers. (ii) We infer the AS path between these two ASes. (iii) We count the number of inter-ISP links along the inferred AS path for the ISP distance. We present details on each step in the following.</p><p>First, we explain how we map an IP to its AS number. We achieve this by collecting public BGP tables, in which each entry contains a destination IP prefix and an AS path to that prefix. We map each IP prefix to the last AS on the AS list. The last AS is called the origin AS of the IP prefix. The mapping enables us to find the AS given any IP, and is also used in previous works such as <ref type="bibr" target="#b18">[19]</ref>.</p><p>To infer AS paths, we need to construct an AS graph. An AS graph consists of inter-AS links, where each link is annotated with an AS relationship that abstracts the commercial agreement between the two ASes. The AS relationships are classified into three categories: customer-to-provider (c2p), peer-to-peer (p2p), and sibling-to-sibling (s2s) <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b4">5]</ref>. There are several inference algorithms, such as <ref type="bibr" target="#b4">[5]</ref>, that construct an AS graph using information about BGP tables and traceroute results. Given an AS graph, the AS relationship of each link describes the routing policy between the two ASes. An AS path that conforms to these routing policies is called valley-free <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8]</ref>. In this work, we propose optimization techniques to accelerate the modified Dijkstra (MD) algorithm <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b7">8]</ref> that returns AS paths conforming to the policy routing practices. The proposed techniques are general enough and can work with other algorithms.</p><p>Last, we comment on how to derive the ISP distance given an AS path between two peers. We compute the ISP distance by counting the number of c2p and p2p links on a given AS path. We do not consider s2s links, because these links connect ASes belonging to the same ISP. We need to do this because large ISPs may have too many ASes, while transiting traffic among them incurs no inter-ISP cost.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Efficient AS Path Inference</head><p>Since there are currently more than 25,000 ASes in the Internet, the time complexity of calculating all-pair AS paths will be high because MD algorithm has time complexity O(|V| 3 ) as proved in <ref type="bibr" target="#b7">[8]</ref>, where V represents all ASes. To reduce this complexity, we propose optimization techniques for efficient AS path inference.</p><p>We first observe that, according to the CAIDA AS relationship data, many ASes (83%) have only one or a few (c2p) </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Destination AS</head><p>Step 1</p><p>Step 2</p><p>Step 3 Step 2 links to their providers. We refer to these ASes as stub ASes, and other ASes as transit ASes. Traffic to/from a stub AS must go through one of its provider ASes, which is a transit AS. Therefore, given ISP distance between any two transit ASes, the ISP distance from any stub AS to any transit AS can be computed using simple comparisons, as shorter AS paths are preferred in BGP routing. To illustrate, <ref type="figure" target="#fig_2">Fig. 3</ref> shows a stub AS S that has two provider (transit) ASes: T 1 and T 2 . The distance from T 1 to S equals the distance from T 2 to S. To compute the distance from another transit AS T 0 to S, we simply compare the total distances of crossing T 1 and T 2 . Since 3 + 1 &lt; 5 + 1, we infer that the distance from T 0 to S is 4. Notice that, in reality the comparisons are even simpler than in this illustrative example: we observe that stub ASes only have 1.76 provider ASes on average.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Source AS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>S Stub ASes</head><p>1. // Use BFS find the shortest uphill paths, which only 1. // consist of c2p and s2s links. 2. for each s,t ∈ T, find the shortest uphill path 3. // Use uphill path to compute valley-free path 4. for each s,t ∈ T, compute valley-free path 5. // Compute valley-free path for all ASes 6. for each s ∈ T and t ∈ S { 7.</p><p>compute valley-free path of s and t by finding u to 7.</p><p>min u∈s.provider {valley-free distance of u and t} + 1 8. } 9. for each s ∈ S and t ∈ S { 10.</p><p>compute valley-free path of s and t by finding u to 10.</p><p>min u∈t.provider {valley-free distance of s and u} + 1 11. } This observation enables us to develop an efficient AS path inference algorithm as follows. Let T be the set of transit ASes, and S be the set of stub ASes. We infer all-pair AS paths in three steps as outlined in <ref type="figure" target="#fig_3">Fig. 4</ref>. We first compute the AS path between any two transit ASes by considering valley-free paths. We then consider the AS path between any two ASes, where exactly one of these two ASes is a transit AS. Finally, we consider the AS path between any two stub ASes.</p><p>The pseudocode is illustrated in <ref type="figure" target="#fig_4">Fig. 5</ref>. The time complexity of the loop in lines 2 and 4 is dominated by line 4, and is O(|T| 3 ). Notice that in lines 7 and 10, the degree of ASes s and t can be considered as a constant, as we showed that the degrees of stub ASes are low. The time complexity of loops start from lines 6 and 9 are O(|T| |S|) and O(|S| 2 ), respectively. Thus, the time complexity of our AS path inference algorithm is O(|T| 3 + |T| |S| + |S| 2 ), which is considerably smaller than the time complexity O(|V| 3 ) of the MD algorithm, as T only consists of 18% of the ASes out of V. In fact, we experimentally compared the running times of the proposed algorithm against that of the algorithm in <ref type="bibr" target="#b8">[9]</ref> using a commodity PC. We observed a dramatic running time reduction: from almost two days to three hours.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Concise Distance Oracle</head><p>While the proposed AS path inference algorithm is quite efficient, it still can not run in real-time. To cope with this issue, we pre-compile an intermediate data structure offline, called distance oracle, to enable fast, O(1) time, online ISP distance lookups. A simple distance oracle design is to employ a complete two-dimensional ISP distance matrix for all ASes in the Internet. This simple distance oracle, however, incurs high space overhead. For example, as there are more than 25,000 ASes in the Internet, allocating a complete distance matrix takes 625 MB of memory, assuming every distance is stored as a single byte. To mitigate this overhead, we propose to only store ISP distance between any two transit ASes. We then extend the ISP distance for stub ASes in ondemand basis while performing peer matching. This can be done by simple comparisons such as the illustrative example showed in <ref type="figure" target="#fig_2">Fig. 3</ref>. The comparisons incur a small, constant, overhead, because stub ASes have small degrees. Using the distance oracle enables us to reduce the memory consumption to about 10 MB of memory (a reduction of 97%) while still achieving O(1) lookup time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Inferring PoP Distance</head><p>To derive PoP distance between any two peers, we must infer the PoP topology. There are a few existing works that combine the traceroute utility and the reverse DNS lookups for inferring the PoP topology <ref type="bibr" target="#b5">[6]</ref>. These algorithms, however, are not very accurate because they rely on the nonstandardized DNS naming conventions. Moreover, these algorithms send probing packets, and thus incur too much traffic overhead. We propose a new PoP topology inference algorithm that combines several public information sources, including BGP tables, IP to geolocation databases, and BGP updates.</p><p>This new inference algorithm consists of the following steps. Due to space limitations, we only present an overview of the PoP inference algorithm. The inference algorithm uses the single-linkage clustering, an efficient pair-wise clustering method, to cluster prefixes of each AS into PoPs based on their geolocations derived from an IP to geolocation database. It then constructs a PoP topology for every AS by analyzing the BGP updates to connect the PoPs that are frequently updated together. We note that the authors of <ref type="bibr" target="#b1">[2]</ref> analyze BGP updates to cluster IP prefixes into a binary tree, while we combine BGP updates and IP to geolocation databases to construct the PoP topology. We are currently designing rigorous experiments to validate the accuracy of the proposed PoP topology inference algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Evaluation</head><p>We evaluate the ISP-friendly matching algorithms using trace-driven simulations. We have implemented ISPF and ISPF-Lite algorithms. For comparison, we have also implemented two other popular algorithms: the random algorithm (denoted as Random) that returns random senders and the AS-biased algorithm (denoted as AS) that chooses most of the senders within the same AS as the receiver <ref type="bibr" target="#b2">[3]</ref>. We have also implemented an IP prefix matching (denoted as Prefix) that matches senders that share the longest IP prefix with the receiver. We note that we cannot compare our algorithms with Ono <ref type="bibr" target="#b3">[4]</ref>, because it requires modifications of the client software. In the experiments, we consider two performance metrics: the ISP distance the PoP distance.</p><p>We collected real IPs from both live P2P networks and multimedia streaming servers. For P2P networks, we wrote a crawler to download more than 5,000 torrent files from IsoHunt, which is a famous torrent site. For each torrent file, we used a script to periodically request for potential senders during June <ref type="bibr">[23]</ref><ref type="bibr">[24]</ref><ref type="bibr">[25]</ref><ref type="bibr">2008</ref>. We then aggregated all the IPs together. We also got access logs of multimedia streaming servers from the CBC/Radio-Canada, which is the largest content provider in Canada. We constructed two sets of IPs: 160,543 and 147,872 unique IPs from CBC/Radio-Canada and BitTorrent, respectively. We repeated our experiments on these two sets of IPs.</p><p>We simulate multi-sender download sessions for files of different popularities. The popularity of a file is adjusted by controlling the number of peers that have that file. For a given file, we vary the number of peers storing it from 1% (rare file) to 10% (fairly popular file). For each download session, we randomly choose senders based on the chosen file popularity and a receiver from all considered IPs. Then n number of senders are chosen by peer matching algorithms. We compute the average ISP distance and PoP distance between the chosen senders and the receiver. We vary n between 10 and 100 to cover wide ranges of P2P systems, and for each value of n we repeat the experiment 100 times and report the average across them.</p><p>We plot sample results of the ISP distance in <ref type="figure">Fig. 6</ref>, and other results are similar. This figure shows that Random results in considerably higher ISP distance than other algorithms. In addition, AS performs worse than the ISPfriendly algorithms. This is because although AS selects most of the senders in the same AS as the receiver, it also randomly chooses senders outside the receiver's AS. ISPF and ISPF-Lite algorithms leverage on the knowledge of the network topology and thus can achieve lower ISP distance. We note that the ISPF and ISPF-Lite dramatically decrease the ISP distance to less than one. This is because they return peers within the receiver's ISP in most download sessions. Therefore, it significantly reduces the load on the expensive inter-ISP links. Moreover, ISPF and ISPF-Lite also yield better application-level performance because close-by peers usually have short and less variable round trip delays. Finally, we observe that Prefix outperforms Random by almost two times, which is nontrivial considering Prefix is almost free.</p><p>Next, we plot a sample result of the PoP distance in <ref type="figure">Fig. 7</ref>, and other results are similar. This figure shows that using ISPF can significantly reduce the PoP distance of Random by up to 7,000 km, while ISPF-Lite results in similar PoP distance as AS. We note that ISP-Lite significantly outperforms AS in terms of the ISP distance (see <ref type="figure">Fig. 6</ref>), which is more critical than the PoP distance. Last, Prefix still outperforms Random in terms of the PoP distance.</p><p>To summarize, our experimental results show that Prefix outperforms Random at almost no extra expense. Both ISPF and ISPF-Lite perform better than AS in terms of the inter-ISP cost. While ISPF further reduces the intra-ISP cost, it incurs higher computational complexity. Therefore, we recommend ISPF when resources are not concerned. For more resource constrained systems, ISPF-Lite is recommended. Finally, if there is almost no additional resource available, Prefix can be used to boost performance over Random.</p><p>Last, we briefly comment on how we inferred the ISP and the PoP distances, due to space limitations. We used the GeoIP <ref type="bibr" target="#b9">[10]</ref> database and the inference algorithms described in Sec. 3 to infer the ISP and the PoP distances. The BGP tables and updates on June 23, 2008 were downloaded from RouteViews <ref type="bibr" target="#b11">[12]</ref> and RIPE-NCC <ref type="bibr" target="#b0">[1]</ref>. We obtained the AS relationships from the CAIDA web site. With the proposed optimization techniques, we generated the distance oracle for ISP distance in 146 minutes on a commodity PC. This is the most time consuming part in the inference procedure: all other steps terminated in a few minutes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusions</head><p>In P2P systems, a receiving peer needs to be matched with multiple sending peers because peers have limited capacity and reliability. Efficient peer matching is important to both ISPs and P2P systems. We studied the following peer-matching problem: given a set of potential senders for an object requested by a receiver, find the subset of senders that will minimize the cost on ISPs. We proposed two ISPfriendly algorithms, ISPF and ISPF-Lite, that leverage publicly available information, such as BGP tables, to infer the network topology for optimizing peer matching.</p><p>We evaluated the proposed matching algorithms using trace-driven simulations. We considered two sets of traces: from BitTorrent networks and from CBC/Radio-Canada video streaming servers. In both cases, our experimental results indicate that a significant reduction on the number of ISPs that P2P traffic has to traverse from senders to the receiver is achieved. The proposed algorithms outperform the current random matching algorithm by a large margin: as high as 6 times. We are currently implementing the proposed matching algorithms in a real P2P network, which is a collaborative project between our group and CBC/RadioCanada. This P2P network will be released to the public in the near future.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">References</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. An illustrative example on network topology.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. ISP-friendly peer matching algorithms.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 . Paths are com- puted using comparisons.</head><label>3</label><figDesc>Figure 3. Paths are computed using comparisons.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 . Steps to infer all-pair AS paths.</head><label>4</label><figDesc>Figure 4. Steps to infer all-pair AS paths.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 .</head><label>5</label><figDesc>Figure 5. An efficient AS path inference algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>(i) It collects all IP prefixes from BGP tables, and organizes them based on their ASes. (ii) It uses an IP to geolocation database to cluster IP prefixes of each AS into one or more PoPs. Several PoPs of different ASes may exist at the same geolocation. (iii) It analyzes BGP updates to infer the connectivity among PoPs in the same AS. That is, it constructs a PoP topology for each AS. (iv) It combines the PoP topology with the AS graph derived in Sec. 3.2 for a complete, worldwide, PoP topology.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 . ISP distance under: (a) different number of chosen senders and (Figure 7 . PoP distance under differ- ent number of chosen senders. 10% popularity, BitTorrent.</head><label>67</label><figDesc>Figure 6. ISP distance under: (a) different number of chosen senders and (b) different object popularity.</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title/>
		<ptr target="http://www.ripe.net/" />
	</analytic>
	<monogr>
		<title level="j">RIPE Network Coordination Project</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Topology inference from BGP routing dynamics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Andersen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Feamster</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM SIGCOMM Internet Measurement Workshop (IMC&apos;04)</title>
		<meeting>of ACM SIGCOMM Internet Measurement Workshop (IMC&apos;04)<address><addrLine>Marseille, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-11" />
			<biblScope unit="page" from="243" to="248" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Improving traffic locality in BitTorrent via biased neighbor selection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Bindal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Medved</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Suwala</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Bates</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE International Conference on Distributed Computing Systems (ICDCS&apos;06)</title>
		<meeting>of IEEE International Conference on Distributed Computing Systems (ICDCS&apos;06)<address><addrLine>Lisboa</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-07" />
			<biblScope unit="page" from="66" to="74" />
		</imprint>
	</monogr>
	<note>Portugal</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Taming the Torrent: A practical approach to reducing cross-ISP traffic in peer-to-peer systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Choffnes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Bustamante</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM SIGCOMM&apos;08</title>
		<meeting>of ACM SIGCOMM&apos;08<address><addrLine>Seattle, WA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-08" />
			<biblScope unit="page" from="363" to="374" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">AS relationships: Inference and validation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Dimitropoulos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Krioukov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Fomenkov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Huffaker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">H K</forename><surname>Claffy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Riley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM Computer Communication Review (CCR&apos;06)</title>
		<imprint>
			<date type="published" when="2007-01" />
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="29" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Internet topology discovery: a survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Donnet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Friedman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Surveys &amp; Tutorials</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="56" to="69" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
	<note>4th Quarter</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">On inferring autonomous system relationships in the Internet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Gao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Transactions on Networking</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="733" to="745" />
			<date type="published" when="2001-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The extent of AS path inflation by routing policies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Global Telecommunications Conference (GLOBECOM&apos;02)</title>
		<meeting>of IEEE Global Telecommunications Conference (GLOBECOM&apos;02)<address><addrLine>Taipei, Taiwan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-11" />
			<biblScope unit="page" from="2180" to="2184" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">On AS-level path inference</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Qiu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGMETRICS&apos;05</title>
		<meeting>ACM SIGMETRICS&apos;05<address><addrLine>Banff, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-06" />
			<biblScope unit="page" from="38" to="49" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Page</forename><surname>Geoip Web</surname></persName>
		</author>
		<ptr target="http://www.maxmind.com/app/ip-location" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">The evolution of the U.S. Internet peering ecosystem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Norton</surname></persName>
		</author>
		<ptr target="http://www.nanog.org/mtg-0405/norton.html" />
		<imprint>
			<date type="published" when="2003-11" />
			<publisher>White Paper</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename></persName>
		</author>
		<ptr target="http://antc.uoregon.edu/route-views/" />
	</analytic>
	<monogr>
		<title level="j">Oregon Route Views Project</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P-Cube Web</forename><surname>Page</surname></persName>
		</author>
		<ptr target="http://www.p-cube.net/indexold.shtml" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Page</forename><surname>Packeteer Web</surname></persName>
		</author>
		<ptr target="http://www.packeteer.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">On the feasibility of commercial, legal P2P content distribution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rodriguez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gkantsidis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM Computer Communication Review (CCR&apos;06)</title>
		<imprint>
			<date type="published" when="2006-01" />
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="75" to="78" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">An analytical study of peer-to-peer media streaming systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Tu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hefeeda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Prabhakar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Multimedia Computing, Communications, and Applications</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="354" to="376" />
			<date type="published" when="2005-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">P4P: Portal for (P2P) applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Krishnamurthy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Silberschatz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM SIGCOMM&apos;08</title>
		<meeting>of ACM SIGCOMM&apos;08<address><addrLine>Seattle, WA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-08" />
			<biblScope unit="page" from="351" to="362" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Analysis of a CDN-P2P hybrid architecture for cost-effective streaming media distribution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rosenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Chai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM/Springer Multimedia Systems Journal</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="383" to="399" />
			<date type="published" when="2006-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">How DNS misnaming distorts Internet topology mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Ruan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rexford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of USENIX Annual Technical Conference (USENIX&apos;06)</title>
		<meeting>of USENIX Annual Technical Conference (USENIX&apos;06)<address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-05" />
			<biblScope unit="page" from="369" to="374" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Exact and approximate distances in graphsa survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Zwich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Annual European Symposium on Algorithm (ESA&apos;01)</title>
		<meeting>of Annual European Symposium on Algorithm (ESA&apos;01)<address><addrLine>Aarhus, Denmark</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-08" />
			<biblScope unit="page" from="33" to="48" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
